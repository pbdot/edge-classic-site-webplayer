{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/preact-cli/src/lib/entry.js","webpack:///../node_modules/preact/src/util.js","webpack:///../node_modules/preact/src/create-element.js","webpack:///../node_modules/preact/src/component.js","webpack:///../node_modules/preact/src/diff/children.js","webpack:///../node_modules/preact/src/diff/props.js","webpack:///../node_modules/preact/src/diff/index.js","webpack:///../node_modules/preact/src/render.js","webpack:///../node_modules/preact/src/options.js","webpack:///../node_modules/preact/src/constants.js","webpack:///../node_modules/preact/src/diff/catch-error.js","webpack:///../node_modules/preact/hooks/src/index.js","webpack:///../node_modules/@preact/signals-core/src/index.ts","webpack:///../node_modules/@preact/signals/src/index.ts","webpack:///./components/player/style.css","webpack:///./edge-classic.js","webpack:///./components/licenses/style.css","webpack:///./components/licenses/index.tsx","webpack:///./components/player/index.tsx","webpack:///./index.ts","webpack:///./components/app.tsx"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","h","Preact","render","hydrate","interopDefault","default","normalizeURL","url","length","navigator","serviceWorker","register","__webpack_public_path__","require","root","document","getElementById","body","firstElementChild","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","innerHTML","CLI_DATA","currentURL","location","pathname","init","u","v","parentNode","removeChild","y","f","arguments","children","defaultProps","type","props","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","_","k","this","context","b","indexOf","g","base","push","w","__r","debounceRendering","e","sort","shift","__P","L","__n","ownerSVGElement","M","x","a","Array","isArray","A","C","$","nextSibling","S","O","appendChild","insertBefore","I","setProperty","test","T","style","cssText","replace","toLowerCase","slice","addEventListener","z","j","removeEventListener","removeAttribute","setAttribute","event","P","H","contextType","__E","q","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","diffed","some","localName","nodeType","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","checked","current","unmount","componentWillUnmount","B","firstChild","D","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","resolve","setTimeout","__H","__V","__N","filter","every","F","clearTimeout","cancelAnimationFrame","requestAnimationFrame","Error","U","useSignal","__$f","__$u","peek","subscribe","valueOf","toString","set","displayName","defineProperties","configurable","__np","_scriptDir","createEdgeModule","currentScript","src","undefined","assert","condition","text","abort","updateMemoryViews","wasmMemory","buffer","Module","HEAP8","Int8Array","HEAP16","Int16Array","HEAPU8","Uint8Array","HEAPU16","Uint16Array","HEAP32","Int32Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","keepRuntimeAlive","noExitRuntime","runtimeKeepaliveCounter","addRunDependency","runDependencies","removeRunDependency","runDependencyWatcher","clearInterval","dependenciesFulfilled","callback","what","err","ABORT","EXITSTATUS","WebAssembly","RuntimeError","readyPromiseReject","isDataURI","filename","startsWith","dataURIPrefix","getBinarySync","file","wasmBinaryFile","wasmBinary","readBinary","instantiateArrayBuffer","binaryFile","imports","receiver","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","fetch","credentials","response","catch","getBinaryPromise","binary","instantiate","instance","reason","concat","ExitStatus","status","message","setValue","ptr","endsWith","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","set_adjusted_ptr","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","intArrayFromString","stringy","dontAddNull","len","lengthBytesUTF8","u8array","numBytesWritten","stringToUTF8Array","_glGenVertexArrays","arrays","__glGenObject","GL","vaos","run","doRun","calledRun","FS","initialized","ignorePermissions","TTY","callRuntimeCallbacks","__ATINIT__","__ATMAIN__","readyPromiseResolve","shouldRunNow","args","entryFunction","_main","unshift","thisProgram","argc","argv","stackAlloc","argv_ptr","arg","stringToUTF8OnStack","ret","exitJS","handleException","callMain","cb","__ATPOSTRUN__","postRun","arguments_","__ATPRERUN__","preRun","_this","moduleArg","reject","expectedDataFileDownloads","metadata","fetchRemotePackage","packageName","packageSize","xhr","XMLHttpRequest","open","responseType","onprogress","size","total","loaded","addedTotal","dataFileDownloads","num","download","Math","ceil","onerror","onload","statusText","responseURL","send","runWithFS","check","msg","stack","processPackageData","arrayBuffer","ArrayBuffer","byteArray","compressedData","_typeof","loadPackage","preloadFallback","error","console","REMOTE_PACKAGE_NAME","REMOTE_PACKAGE_SIZE","indexedDB","PACKAGE_UUID","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","self","IDB_RO","IDB_RW","DB_NAME","DB_VERSION","METADATA_STORE_NAME","PACKAGE_STORE_NAME","CHUNK_SIZE","preloadResults","errback","openRequest","onupgradeneeded","db","target","result","objectStoreNames","contains","deleteObjectStore","createObjectStore","onsuccess","openDatabase","getRequest","transaction","objectStore","checkCachedPackage","PACKAGE_PATH","PACKAGE_NAME","useCached","fromCache","packages","chunksDone","totalSize","chunkCount","chunks","chunkId","byteLength","tempTyped","byteOffset","fetchCachedPackage","packageData","packageMeta","chunkSliceStart","nextChunkSliceStart","finishedChunks","putPackageRequest","put","putMetadataRequest","uuid","cacheRemotePackage","substring","lastIndexOf","process","encodeURIComponent","REMOTE_PACKAGE_BASE","read_","readAsync","setWindowTitle","moduleOverrides","_extends","quit_","toThrow","scriptDirectory","href","substr","responseText","title","out","log","path","tempDouble","tempI64","__ATEXIT__","_emscripten_get_now","ASM_CONSTS","edgePostInit","$0","$1","UTF8ToString","homeIndex","homeDir","analyzePath","exists","mkdirTree","mount","IDBFS","syncfs","_I_WebMain","onFullscreen","edgePreSyncFS","edgePostSyncFS","str","reply","prompt","allocate","ALLOC_NORMAL","AudioContext","webkitAudioContext","mediaDevices","getUserMedia","webkitGetUserMedia","SDL2","capture","audio","audioContext","autoResumeAudioContext","sampleRate","$2","$3","have_microphone","stream","silenceTimer","mediaStreamNode","createMediaStreamSource","scriptProcessorNode","createScriptProcessor","onaudioprocess","audioProcessingEvent","outputBuffer","getChannelData","fill","currentCaptureBuffer","inputBuffer","dynCall","connect","destination","no_microphone","silenceBuffer","createBuffer","video","currentOutputBuffer","numChannels","numberOfChannels","channelData","tracks","getAudioTracks","removeTrack","disconnect","close","pixels","ctxCanvas","ctx","imageCtx","image","createImageData","dst","CanvasPixelArray","val","data32Data","data32","data8","subarray","putImageData","$4","hot_x","hot_y","canvas","width","height","getContext","toDataURL","urlBuf","_malloc","stringToUTF8","innerWidth","innerHeight","alert","elements","element","func","listenOnce","resume","callbacks","sig","rtn","apply","dynCallLegacy","PATH","isAbs","charAt","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","normalize","isAbsolute","trailingSlash","split","join","dirname","dir","basename","lastSlash","paths","join2","randomFill","view","crypto","getRandomValues","initRandomFill","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","min","samePartsLength","outputParts","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","decode","u0","u1","u2","String","fromCharCode","ch","FS_stdin_getChar_buffer","charCodeAt","heap","outIdx","maxBytesToWrite","startIdx","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","tty","node","rdev","ErrnoError","seekable","fsync","read","offset","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","readline","FS_stdin_getChar","ioctl_tcgets","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","ioctl_tcsets","ioctl_tiocgwinsz","default_tty1_ops","mmapAlloc","MEMFS","ops_table","createNode","parent","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","resizeFileStorage","newSize","attr","id","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","prot","flags","allocated","preloadPlugins","FS_getMode","canRead","canWrite","dbs","_indexedDB","DB_STORE_NAME","populate","getLocalSet","local","getRemoteSet","remote","reconcile","quit","values","getDB","req","fileStore","indexNames","createIndex","unique","preventDefault","isRealDir","toAbsolute","mountpoint","map","stat","pop","index","openKeyCursor","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","removeRemoteEntry","delete","done","errored","keys","e2","getTime","remove","oncomplete","reverse","LZ4","DIR_MODE","FILE_MODE","codec","MiniLZ4","sIdx","eIdx","token","literals_length","match_length","pos","maxInputSize","minMatch","hashShift","mfLimit","skipStrength","mlBits","mlMask","runMask","hasher","hashTable","empty","compressBound","isize","compress","dpos","dlen","anchor","findMatchAttempts","srcLength","sequenceLowBits","sequenceHighBits","hash","imul","ln","compressBlock","compressPackage","verify","temp","compressedChunks","successes","chunk","bound","compressed","compressedSize","back","uncompress","pack","preloadPlugin","files","createPath","Browser","handled","fullname","plugin","finish","readFile","written","currChunk","desired","chunkIndex","floor","compressedStart","found","originalSize","startInChunk","endInChunk","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","opts","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","hashName","parentid","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","FSNode","destroyNode","isSocket","flagsToPermissionString","flag","perms","nodePermissions","includes","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd","getStreamChecked","getStream","createStream","FSStream","shared","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","completed","pseudo","mountRoot","next","mkdir","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","dontFollow","lstat","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","FS_modeStringToFlags","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","mmapFlags","munmap","ioctl","cmd","encoding","buf","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","code","staticInit","findObject","dontResolveLastLink","parentExists","parentPath","parentObject","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","writeChunks","chunkOffset","chunkSize","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","chunkNum","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","fn","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","abs","doMsync","addr","varargs","getp","getStr","setErrNo","___errno_location","convertI32PairToI53Checked","lo","hi","NaN","outPtr","isLeapYear","year","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","ydayFromDate","date","getFullYear","getMonth","getDate","stringToNewUTF8","_emscripten_set_main_loop_timing","mainLoop","timingMode","timingValue","running","scheduler","timeUntilNextTick","tickStartTime","runner","method","setImmediate","setImmediates","emscriptenMainLoopMessageId","stopPropagation","postMessage","performance","setMainLoop","browserIterationFunc","fps","simulateInfiniteLoop","noSetTiming","checkIsRunning","thisMainLoopId","currentlyRunningMainloop","queue","blocker","remainingBlockers","remaining","counted","updateStatus","currentFrameNumber","newRenderingFrameStarted","runIter","SDL","queueNewAudioData","_exit","callUserCallback","maybeExit","safeSetTimeout","timeout","pause","expected","expectedBlockers","isFullscreen","pointerLock","moduleContextCreatedCallbacks","workers","pointerLockChange","initted","imagePlugin","noImageDecoding","Blob","getMimetype","URL","createObjectURL","img","Image","complete","drawImage","preloadedImages","revokeObjectURL","audioPlugin","noAudioDecoding","preloadedAudios","Audio","BASE","leftchar","leftbits","curr","PAD","encode64","requestPointerLock","exitPointerLock","ev","createContext","useWebGL","setInModule","webGLContextAttributes","contextHandle","contextAttributes","antialias","alpha","majorVersion","WebGL2RenderingContext","attribute","GLctx","makeContextCurrent","destroyContext","fullscreenHandlersInstalled","lockPointer","resizeCanvas","requestFullscreen","fullscreenChange","canvasContainer","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","setWindowedCanvasSize","Element","nextRAF","fakeRequestAnimationFrame","delay","_requestAnimationFrame","_x","RAF","safeRequestAnimationFrame","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","deltaY","deltaMode","mouseX","mouseY","mouseMovementX","mouseMovementY","touches","lastTouches","calculateMouseEvent","rect","getBoundingClientRect","cw","scrollX","pageXOffset","scrollY","pageYOffset","touch","adjustedX","pageX","left","adjustedY","pageY","top","coords","identifier","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","screen","wNative","hNative","widthNative","heightNative","round","factor","removeProperty","EGL","errorCode","defaultDisplayInitialized","currentContext","currentReadSurface","currentDrawSurface","depth","stencil","stringCache","setErrorCode","chooseConfig","display","attribList","config","config_size","numConfigs","param","lowLatency","counter","buffers","programs","framebuffers","renderbuffers","textures","shaders","contexts","offscreenCanvases","queries","samplers","transformFeedbacks","syncs","byteSizeByTypeRoot","byteSizeByType","stringiCache","unpackAlignment","recordError","lastError","getNewId","table","MAX_TEMP_BUFFER_SIZE","numTempVertexBuffersPerSize","log2ceilLookup","clz32","generateTempBuffers","quads","largestIndex","tempVertexBufferCounters1","tempVertexBufferCounters2","tempVertexBuffers1","tempVertexBuffers2","tempIndexBuffers","ringbufferLength","ringbuffer1","ringbuffer2","tempQuadIndexBuffer","bindBuffer","numIndexes","quadIndexes","bufferData","getTempVertexBuffer","sizeBytes","ringbuffer","nextFreeBufferIndex","vbo","prevVBO","getParameter","getTempIndexBuffer","ibo","prevIBO","vb","getSource","shader","string","source","calcBufLength","stride","usedTempBuffers","preDrawHandleClientVertexAttribBindings","resetBufferBinding","maxVertexAttribs","clientBuffers","clientside","enabled","bufferSubData","vertexAttribPointerAdaptor","normalized","postDrawHandleClientVertexAttribBindings","currentArrayBufferBinding","getContextSafariWebGL2Fixed","ver","attrs","gl","WebGLRenderingContext","registerContext","handle","version","GLctxObject","enableExtensionsByDefault","initExtensions","deleteContext","JSEvents","removeAllHandlersOnTarget","initExtensionsDone","ext","getExtension","divisor","first","primcount","indices","webgl_enable_ANGLE_instanced_arrays","vao","webgl_enable_OES_vertex_array_object","bufs","webgl_enable_WEBGL_draw_buffers","dibvbi","mdibvbi","webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance","disjointTimerQueryExt","multiDrawWebgl","webgl_enable_WEBGL_multi_draw","getSupportedExtensions","_eglWaitGL","readEmAsmArgsArray","readEmAsmArgs","sigPtr","withStackSave","stackSave","stackRestore","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","removeDeferredCalls","canPerformEventHandlerRequests","userActivation","isActive","currentEventHandler","allowsDeferredCalls","runDeferredCalls","eventTypeString","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","jsEventHandler","handlerFunc","callbackfunc","getNodeNameForTarget","nodeName","fullscreenEnabled","webkitFullscreenEnabled","setLetterbox","topBottom","leftRight","paddingLeft","paddingRight","paddingTop","paddingBottom","restoreOldWindowedStyle","specialHTMLTargets","findEventTarget","cString","findCanvasEventTarget","getCanvasElementSize","_emscripten_get_canvas_element_size","_emscripten_set_canvas_element_size","setCanvasElementSize","controlTransferredOffscreen","targetInt","currentFullscreenStrategy","jstoi_q","parseInt","softFullscreenResizeWebGLRenderTarget","topMargin","dpr","devicePixelRatio","inHiDPIFullscreenMode","canvasResolutionScaleMode","inAspectRatioFixedFullscreenMode","scaleMode","inPixelPerfectFullscreenMode","inCenteredWithoutScalingFullscreenMode","screenWidth","screenHeight","canvasSize","viewport","canvasResizedCallback","dynCall_iiii","canvasResizedCallbackUserData","JSEvents_resizeCanvasForFullscreen","strategy","restoreOldStyle","fullscreenElement","webkitFullscreenElement","oldWidth","oldHeight","oldCssWidth","oldCssHeight","backgroundColor","oldBackgroundColor","oldDocumentBackgroundColor","oldPaddingLeft","oldPaddingRight","oldPaddingTop","oldPaddingBottom","marginLeft","oldMarginLeft","marginRight","oldMarginRight","marginTop","oldMarginTop","marginBottom","oldMarginBottom","margin","oldDocumentBodyMargin","documentElement","overflow","oldDocumentOverflow","scroll","oldDocumentScroll","imageRendering","oldImageRendering","registerRestoreOldStyle","cssWidth","softFullscreen","cssHeight","windowedCssWidth","windowedCssHeight","windowedRttWidth","windowedRttHeight","desiredCssHeight","desiredCssWidth","filteringMode","dpiScale","newWidth","newHeight","JSEvents_requestFullscreen","webkitRequestFullscreen","ALLOW_KEYBOARD_INPUT","fillGamepadEventData","eventStruct","axes","buttons","pressed","connected","mapping","_emscripten_glActiveTexture","x0","activeTexture","_emscripten_glAttachShader","program","attachShader","_emscripten_glBeginQuery","beginQuery","_emscripten_glBeginQueryEXT","_emscripten_glBeginTransformFeedback","beginTransformFeedback","_emscripten_glBindAttribLocation","bindAttribLocation","_emscripten_glBindBuffer","currentElementArrayBufferBinding","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","_emscripten_glBindBufferBase","bindBufferBase","_emscripten_glBindBufferRange","ptrsize","bindBufferRange","_emscripten_glBindFramebuffer","framebuffer","bindFramebuffer","_emscripten_glBindRenderbuffer","renderbuffer","bindRenderbuffer","_emscripten_glBindSampler","unit","sampler","bindSampler","_emscripten_glBindTexture","texture","bindTexture","_emscripten_glBindTransformFeedback","bindTransformFeedback","_glBindVertexArray","bindVertexArray","_emscripten_glBindVertexArray","_glBindVertexArrayOES","_emscripten_glBindVertexArrayOES","_emscripten_glBlendColor","x1","x2","x3","blendColor","_emscripten_glBlendEquation","blendEquation","_emscripten_glBlendEquationSeparate","blendEquationSeparate","_emscripten_glBlendFunc","blendFunc","_emscripten_glBlendFuncSeparate","blendFuncSeparate","_emscripten_glBlitFramebuffer","x4","x5","x6","x7","x8","x9","blitFramebuffer","_emscripten_glBufferData","usage","_emscripten_glBufferSubData","_emscripten_glCheckFramebufferStatus","checkFramebufferStatus","_emscripten_glClear","clear","_emscripten_glClearBufferfi","clearBufferfi","_emscripten_glClearBufferfv","drawbuffer","clearBufferfv","_emscripten_glClearBufferiv","clearBufferiv","_emscripten_glClearBufferuiv","clearBufferuiv","_emscripten_glClearColor","clearColor","_emscripten_glClearDepthf","clearDepth","_emscripten_glClearStencil","clearStencil","convertI32PairToI53","_emscripten_glClientWaitSync","sync","timeout_low","timeout_high","clientWaitSync","_emscripten_glColorMask","red","green","blue","colorMask","_emscripten_glCompileShader","compileShader","_emscripten_glCompressedTexImage2D","level","internalFormat","border","imageSize","compressedTexImage2D","_emscripten_glCompressedTexImage3D","compressedTexImage3D","_emscripten_glCompressedTexSubImage2D","xoffset","yoffset","format","compressedTexSubImage2D","_emscripten_glCompressedTexSubImage3D","zoffset","compressedTexSubImage3D","_emscripten_glCopyBufferSubData","copyBufferSubData","_emscripten_glCopyTexImage2D","copyTexImage2D","_emscripten_glCopyTexSubImage2D","copyTexSubImage2D","_emscripten_glCopyTexSubImage3D","copyTexSubImage3D","_emscripten_glCreateProgram","createProgram","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","uniformIdCounter","_emscripten_glCreateShader","shaderType","createShader","_emscripten_glCullFace","cullFace","_emscripten_glDeleteBuffers","deleteBuffer","_emscripten_glDeleteFramebuffers","deleteFramebuffer","_emscripten_glDeleteProgram","deleteProgram","_emscripten_glDeleteQueries","ids","query","deleteQuery","_emscripten_glDeleteQueriesEXT","_emscripten_glDeleteRenderbuffers","deleteRenderbuffer","_emscripten_glDeleteSamplers","deleteSampler","_emscripten_glDeleteShader","deleteShader","_emscripten_glDeleteSync","deleteSync","_emscripten_glDeleteTextures","deleteTexture","_emscripten_glDeleteTransformFeedbacks","transformFeedback","deleteTransformFeedback","_glDeleteVertexArrays","deleteVertexArray","_emscripten_glDeleteVertexArrays","_glDeleteVertexArraysOES","_emscripten_glDeleteVertexArraysOES","_emscripten_glDepthFunc","depthFunc","_emscripten_glDepthMask","depthMask","_emscripten_glDepthRangef","depthRange","_emscripten_glDetachShader","detachShader","_emscripten_glDisable","disable","_emscripten_glDisableVertexAttribArray","disableVertexAttribArray","_emscripten_glDrawArrays","drawArrays","_glDrawArraysInstanced","drawArraysInstanced","_emscripten_glDrawArraysInstanced","_glDrawArraysInstancedANGLE","_emscripten_glDrawArraysInstancedANGLE","_glDrawArraysInstancedARB","_emscripten_glDrawArraysInstancedARB","_glDrawArraysInstancedEXT","_emscripten_glDrawArraysInstancedEXT","_glDrawArraysInstancedNV","_emscripten_glDrawArraysInstancedNV","tempFixedLengthArray","_glDrawBuffers","bufArray","drawBuffers","_emscripten_glDrawBuffers","_glDrawBuffersEXT","_emscripten_glDrawBuffersEXT","_glDrawBuffersWEBGL","_emscripten_glDrawBuffersWEBGL","_glDrawElements","drawElements","_emscripten_glDrawElements","_glDrawElementsInstanced","drawElementsInstanced","_emscripten_glDrawElementsInstanced","_glDrawElementsInstancedANGLE","_emscripten_glDrawElementsInstancedANGLE","_glDrawElementsInstancedARB","_emscripten_glDrawElementsInstancedARB","_glDrawElementsInstancedEXT","_emscripten_glDrawElementsInstancedEXT","_glDrawElementsInstancedNV","_emscripten_glDrawElementsInstancedNV","_emscripten_glDrawRangeElements","_emscripten_glEnable","enable","_emscripten_glEnableVertexAttribArray","enableVertexAttribArray","_emscripten_glEndQuery","endQuery","_emscripten_glEndQueryEXT","_emscripten_glEndTransformFeedback","endTransformFeedback","_emscripten_glFenceSync","fenceSync","_emscripten_glFinish","_emscripten_glFlush","flush","_emscripten_glFramebufferRenderbuffer","attachment","renderbuffertarget","framebufferRenderbuffer","_emscripten_glFramebufferTexture2D","textarget","framebufferTexture2D","_emscripten_glFramebufferTextureLayer","layer","framebufferTextureLayer","_emscripten_glFrontFace","frontFace","createFunction","objectTable","_emscripten_glGenBuffers","_emscripten_glGenFramebuffers","_emscripten_glGenQueries","_emscripten_glGenQueriesEXT","_emscripten_glGenRenderbuffers","_emscripten_glGenSamplers","_emscripten_glGenTextures","_emscripten_glGenTransformFeedbacks","_emscripten_glGenVertexArrays","_glGenVertexArraysOES","_emscripten_glGenVertexArraysOES","_emscripten_glGenerateMipmap","generateMipmap","__glGetActiveAttribOrUniform","funcName","bufSize","info","numBytesWrittenExclNull","_emscripten_glGetActiveAttrib","_emscripten_glGetActiveUniform","_emscripten_glGetActiveUniformBlockName","uniformBlockIndex","uniformBlockName","getActiveUniformBlockName","_emscripten_glGetActiveUniformBlockiv","pname","params","getActiveUniformBlockParameter","_emscripten_glGetActiveUniformsiv","uniformCount","uniformIndices","getActiveUniforms","_emscripten_glGetAttachedShaders","maxCount","getAttachedShaders","_emscripten_glGetAttribLocation","getAttribLocation","writeI53ToI64","emscriptenWebGLGet","name_","formats","_emscripten_glGetBooleanv","_emscripten_glGetBufferParameteri64v","getBufferParameter","_emscripten_glGetBufferParameteriv","_emscripten_glGetError","getError","_glGetFloatv","_emscripten_glGetFloatv","_emscripten_glGetFragDataLocation","getFragDataLocation","_emscripten_glGetFramebufferAttachmentParameteriv","getFramebufferAttachmentParameter","WebGLRenderbuffer","WebGLTexture","emscriptenWebGLGetIndexed","getIndexedParameter","WebGLBuffer","_emscripten_glGetInteger64i_v","_emscripten_glGetInteger64v","_emscripten_glGetIntegeri_v","_emscripten_glGetIntegerv","_emscripten_glGetInternalformativ","internalformat","getInternalformatParameter","_emscripten_glGetProgramBinary","_emscripten_glGetProgramInfoLog","maxLength","infoLog","getProgramInfoLog","_emscripten_glGetProgramiv","getProgramParameter","getActiveUniform","getActiveAttrib","_glGetQueryObjecti64vEXT","getQueryParameter","_emscripten_glGetQueryObjecti64vEXT","_glGetQueryObjectivEXT","_emscripten_glGetQueryObjectivEXT","_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectuiv","_glGetQueryObjectuivEXT","_emscripten_glGetQueryObjectuivEXT","_emscripten_glGetQueryiv","getQuery","_emscripten_glGetQueryivEXT","_emscripten_glGetRenderbufferParameteriv","getRenderbufferParameter","_emscripten_glGetSamplerParameterfv","getSamplerParameter","_emscripten_glGetSamplerParameteriv","_emscripten_glGetShaderInfoLog","getShaderInfoLog","_emscripten_glGetShaderPrecisionFormat","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","_emscripten_glGetShaderSource","getShaderSource","_emscripten_glGetShaderiv","getShaderParameter","_emscripten_glGetString","exts","glVersion","glslVersion","ver_num","match","_emscripten_glGetStringi","_emscripten_glGetSynciv","getSyncParameter","_emscripten_glGetTexParameterfv","getTexParameter","_emscripten_glGetTexParameteriv","_emscripten_glGetTransformFeedbackVarying","getTransformFeedbackVarying","_emscripten_glGetUniformBlockIndex","getUniformBlockIndex","_emscripten_glGetUniformIndices","uniformNames","names","getUniformIndices","webglGetLeftBracePos","webglPrepareUniformLocationsBeforeFirstUse","uniformLocsById","uniformSizeAndIdsByName","uniformArrayNamesById","nm","sz","lb","arrayName","_emscripten_glGetUniformLocation","arrayIndex","uniformBaseName","leftBrace","sizeAndId","getUniformLocation","webglGetUniformLocation","currentProgram","webglLoc","emscriptenWebGLGetUniform","getUniform","_emscripten_glGetUniformfv","_emscripten_glGetUniformiv","_emscripten_glGetUniformuiv","emscriptenWebGLGetVertexAttrib","getVertexAttrib","fround","_glGetVertexAttribIiv","_emscripten_glGetVertexAttribIiv","_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribPointerv","pointer","getVertexAttribOffset","_emscripten_glGetVertexAttribfv","_emscripten_glGetVertexAttribiv","_emscripten_glHint","hint","_emscripten_glInvalidateFramebuffer","numAttachments","attachments","list","invalidateFramebuffer","_emscripten_glInvalidateSubFramebuffer","invalidateSubFramebuffer","_emscripten_glIsBuffer","isBuffer","_emscripten_glIsEnabled","isEnabled","_emscripten_glIsFramebuffer","fb","isFramebuffer","_emscripten_glIsProgram","isProgram","_emscripten_glIsQuery","isQuery","_emscripten_glIsQueryEXT","_emscripten_glIsRenderbuffer","rb","isRenderbuffer","_emscripten_glIsSampler","isSampler","_emscripten_glIsShader","isShader","_emscripten_glIsSync","isSync","_emscripten_glIsTexture","isTexture","_emscripten_glIsTransformFeedback","isTransformFeedback","_glIsVertexArray","array","isVertexArray","_emscripten_glIsVertexArray","_glIsVertexArrayOES","_emscripten_glIsVertexArrayOES","_emscripten_glLineWidth","lineWidth","_emscripten_glLinkProgram","linkProgram","_emscripten_glPauseTransformFeedback","pauseTransformFeedback","_emscripten_glPixelStorei","pixelStorei","_emscripten_glPolygonOffset","polygonOffset","_emscripten_glProgramBinary","_emscripten_glProgramParameteri","_emscripten_glQueryCounterEXT","_emscripten_glReadBuffer","readBuffer","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","BYTES_PER_ELEMENT","emscriptenWebGLGetTexPixelData","byteSize","sizePerPixel","colorChannelsInGlTextureFormat","bytes","alignment","alignedRowSize","roundedToNextMultipleOf","computeUnpackAlignedImageSize","_emscripten_glReadPixels","readPixels","pixelData","_emscripten_glReleaseShaderCompiler","_emscripten_glRenderbufferStorage","renderbufferStorage","_emscripten_glRenderbufferStorageMultisample","renderbufferStorageMultisample","_emscripten_glResumeTransformFeedback","resumeTransformFeedback","_emscripten_glSampleCoverage","invert","sampleCoverage","_emscripten_glSamplerParameterf","samplerParameterf","_emscripten_glSamplerParameterfv","_emscripten_glSamplerParameteri","samplerParameteri","_emscripten_glSamplerParameteriv","_emscripten_glScissor","scissor","_emscripten_glShaderBinary","_emscripten_glShaderSource","shaderSource","_emscripten_glStencilFunc","stencilFunc","_emscripten_glStencilFuncSeparate","stencilFuncSeparate","_emscripten_glStencilMask","stencilMask","_emscripten_glStencilMaskSeparate","stencilMaskSeparate","_emscripten_glStencilOp","stencilOp","_emscripten_glStencilOpSeparate","stencilOpSeparate","_emscripten_glTexImage2D","texImage2D","_emscripten_glTexImage3D","texImage3D","_emscripten_glTexParameterf","texParameterf","_emscripten_glTexParameterfv","_emscripten_glTexParameteri","texParameteri","_emscripten_glTexParameteriv","_emscripten_glTexStorage2D","texStorage2D","_emscripten_glTexStorage3D","texStorage3D","_emscripten_glTexSubImage2D","texSubImage2D","_emscripten_glTexSubImage3D","texSubImage3D","_emscripten_glTransformFeedbackVaryings","varyings","bufferMode","vars","transformFeedbackVaryings","_emscripten_glUniform1f","v0","uniform1f","miniTempWebGLFloatBuffers","_emscripten_glUniform1fv","uniform1fv","_emscripten_glUniform1i","uniform1i","miniTempWebGLIntBuffers","_emscripten_glUniform1iv","uniform1iv","_emscripten_glUniform1ui","uniform1ui","_emscripten_glUniform1uiv","uniform1uiv","_emscripten_glUniform2f","v1","uniform2f","_emscripten_glUniform2fv","uniform2fv","_emscripten_glUniform2i","uniform2i","_emscripten_glUniform2iv","uniform2iv","_emscripten_glUniform2ui","uniform2ui","_emscripten_glUniform2uiv","uniform2uiv","_emscripten_glUniform3f","v2","uniform3f","_emscripten_glUniform3fv","uniform3fv","_emscripten_glUniform3i","uniform3i","_emscripten_glUniform3iv","uniform3iv","_emscripten_glUniform3ui","uniform3ui","_emscripten_glUniform3uiv","uniform3uiv","_emscripten_glUniform4f","v3","uniform4f","_emscripten_glUniform4fv","uniform4fv","_emscripten_glUniform4i","uniform4i","_emscripten_glUniform4iv","uniform4iv","_emscripten_glUniform4ui","uniform4ui","_emscripten_glUniform4uiv","uniform4uiv","_emscripten_glUniformBlockBinding","uniformBlockBinding","_emscripten_glUniformMatrix2fv","transpose","uniformMatrix2fv","_emscripten_glUniformMatrix2x3fv","uniformMatrix2x3fv","_emscripten_glUniformMatrix2x4fv","uniformMatrix2x4fv","_emscripten_glUniformMatrix3fv","uniformMatrix3fv","_emscripten_glUniformMatrix3x2fv","uniformMatrix3x2fv","_emscripten_glUniformMatrix3x4fv","uniformMatrix3x4fv","_emscripten_glUniformMatrix4fv","uniformMatrix4fv","_emscripten_glUniformMatrix4x2fv","uniformMatrix4x2fv","_emscripten_glUniformMatrix4x3fv","uniformMatrix4x3fv","_emscripten_glUseProgram","useProgram","_emscripten_glValidateProgram","validateProgram","_emscripten_glVertexAttrib1f","vertexAttrib1f","_emscripten_glVertexAttrib1fv","_emscripten_glVertexAttrib2f","vertexAttrib2f","_emscripten_glVertexAttrib2fv","_emscripten_glVertexAttrib3f","vertexAttrib3f","_emscripten_glVertexAttrib3fv","_emscripten_glVertexAttrib4f","vertexAttrib4f","_emscripten_glVertexAttrib4fv","_glVertexAttribDivisor","vertexAttribDivisor","_emscripten_glVertexAttribDivisor","_emscripten_glVertexAttribDivisorANGLE","_emscripten_glVertexAttribDivisorARB","_emscripten_glVertexAttribDivisorEXT","_emscripten_glVertexAttribDivisorNV","_emscripten_glVertexAttribI4i","vertexAttribI4i","_emscripten_glVertexAttribI4iv","_emscripten_glVertexAttribI4ui","vertexAttribI4ui","_emscripten_glVertexAttribI4uiv","_emscripten_glVertexAttribIPointer","vertexAttribIPointer","_emscripten_glVertexAttribPointer","vertexAttribPointer","_emscripten_glViewport","_emscripten_glWaitSync","waitSync","growMemory","pages","grow","registerFocusEventCallback","userData","eventTypeId","focusEvent","registerFullscreenChangeEventCallback","fullscreenChangeEvent","mozFullScreenElement","msFullscreenElement","reportedElement","previousFullscreenElement","clientWidth","clientHeight","fillFullscreenChangeEventData","registerGamepadEventCallback","gamepadEvent","registerKeyEventCallback","keyEvent","keyEventData","timeStamp","ctrlKey","shiftKey","altKey","metaKey","repeat","charCode","keyCode","which","char","locale","fillMouseEventData","screenX","screenY","clientX","clientY","button","registerMouseEventCallback","mouseEvent","registerPointerlockChangeEventCallback","pointerlockChangeEvent","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","msPointerLockElement","fillPointerlockChangeEventData","registerTouchEventCallback","touchEvent","et","isChanged","onTarget","changedTouches","targetTouches","targetRect","numTouches","registerVisibilityChangeEventCallback","visibilityChangeEvent","visibilityState","hidden","_emscripten_sleep","ms","Asyncify","handleSleep","wakeUp","isAsync","ENV","getEnvStrings","strings","env","languages","doReadv","iov","iovcnt","doWritev","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","_strftime","maxsize","tm","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","leap","currentMonth","daysInCurrentMonth","setDate","setMonth","setFullYear","addDays","tm_year","tm_yday","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_wday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","EXPANSION_RULES_2","twelveHour","sum","arraySum","jan1","dec31","off","ahead","runAndAbortIfError","instrumentWasmImports","importPatterns","original","instrumentWasmExports","exportCallStack","maybeStopUnwind","State","Normal","Unwinding","Rewinding","Disabled","StackSize","currData","handleSleepReturnValue","callStackNameToId","callStackIdToName","callStackId","asyncPromiseHandlers","sleepCallbacks","getCallStackId","_asyncify_stop_unwind","Fibers","trampoline","whenDone","allocateData","setDataHeader","setDataRewindFunc","stackSize","rewindId","getDataRewindFunc","wasmExports","doRewind","startAsync","reachedCallback","reachedAfterCallback","_asyncify_start_rewind","asyncWasmReturnValue","isError","_asyncify_start_unwind","_asyncify_stop_rewind","_free","handleAsync","readMode","writeMode","createPreloadedFile","dontCreateFile","preFinish","processData","FS_handledByPreloadPlugin","noRunDep","dep","asyncLoad","miniTempWebGLFloatBuffersStorage","miniTempWebGLIntBuffersStorage","wasmImports","__cxa_throw","__syscall_chmod","__syscall_fchmod","__syscall_fcntl64","__syscall_fstat64","__syscall_ftruncate64","length_low","length_high","isNaN","__syscall_getcwd","cwdLengthInBytes","__syscall_getdents64","dirp","struct_size","child","__syscall_ioctl","op","termios","argp","winsize","__syscall_lstat64","__syscall_mkdirat","__syscall_newfstatat","nofollow","__syscall_openat","__syscall_rmdir","__syscall_stat64","__syscall_unlinkat","_emscripten_get_now_is_monotonic","_localtime_js","time_low","time_high","tmPtr","time","getSeconds","getMinutes","getHours","yday","getTimezoneOffset","summerOffset","winterOffset","_mktime_js","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","setTempRet0","_tzset_js","timezone","daylight","tzname","extractZone","toTimeString","currentYear","winter","summer","stdTimezoneOffset","winterName","summerName","winterNamePtr","summerNamePtr","eglBindAPI","api","eglChooseConfig","attrib_list","configs","eglCreateContext","hmm","contextAttribs","glesContextVersion","minorVersion","eglCreateWindowSurface","eglDestroyContext","eglDestroySurface","surface","eglGetConfigAttrib","eglGetDisplay","eglGetError","eglInitialize","eglMakeCurrent","draw","eglQueryString","eglSwapBuffers","isContextLost","eglSwapInterval","interval","eglTerminate","eglWaitGL","eglWaitNative","emscripten_asm_const_int","argbuf","runEmAsmFunction","emscripten_asm_const_int_sync_on_main_thread","runMainThreadEmAsm","emscripten_date_now","emscripten_enter_soft_fullscreen","fullscreenStrategy","hiddenElements","onlyVisibleElement","displayState","hideEverythingExceptGivenElement","restoreHiddenElements","emscripten_exit_fullscreen","webkitExitFullscreen","emscripten_exit_pointerlock","emscripten_exit_soft_fullscreen","emscripten_get_device_pixel_ratio","emscripten_get_element_css_size","emscripten_get_gamepad_status","gamepadState","lastGamepadState","emscripten_get_now","emscripten_get_num_gamepads","emscripten_get_screen_size","emscripten_glActiveTexture","emscripten_glAttachShader","emscripten_glBeginQuery","emscripten_glBeginQueryEXT","emscripten_glBeginTransformFeedback","emscripten_glBindAttribLocation","emscripten_glBindBuffer","emscripten_glBindBufferBase","emscripten_glBindBufferRange","emscripten_glBindFramebuffer","emscripten_glBindRenderbuffer","emscripten_glBindSampler","emscripten_glBindTexture","emscripten_glBindTransformFeedback","emscripten_glBindVertexArray","emscripten_glBindVertexArrayOES","emscripten_glBlendColor","emscripten_glBlendEquation","emscripten_glBlendEquationSeparate","emscripten_glBlendFunc","emscripten_glBlendFuncSeparate","emscripten_glBlitFramebuffer","emscripten_glBufferData","emscripten_glBufferSubData","emscripten_glCheckFramebufferStatus","emscripten_glClear","emscripten_glClearBufferfi","emscripten_glClearBufferfv","emscripten_glClearBufferiv","emscripten_glClearBufferuiv","emscripten_glClearColor","emscripten_glClearDepthf","emscripten_glClearStencil","emscripten_glClientWaitSync","emscripten_glColorMask","emscripten_glCompileShader","emscripten_glCompressedTexImage2D","emscripten_glCompressedTexImage3D","emscripten_glCompressedTexSubImage2D","emscripten_glCompressedTexSubImage3D","emscripten_glCopyBufferSubData","emscripten_glCopyTexImage2D","emscripten_glCopyTexSubImage2D","emscripten_glCopyTexSubImage3D","emscripten_glCreateProgram","emscripten_glCreateShader","emscripten_glCullFace","emscripten_glDeleteBuffers","emscripten_glDeleteFramebuffers","emscripten_glDeleteProgram","emscripten_glDeleteQueries","emscripten_glDeleteQueriesEXT","emscripten_glDeleteRenderbuffers","emscripten_glDeleteSamplers","emscripten_glDeleteShader","emscripten_glDeleteSync","emscripten_glDeleteTextures","emscripten_glDeleteTransformFeedbacks","emscripten_glDeleteVertexArrays","emscripten_glDeleteVertexArraysOES","emscripten_glDepthFunc","emscripten_glDepthMask","emscripten_glDepthRangef","emscripten_glDetachShader","emscripten_glDisable","emscripten_glDisableVertexAttribArray","emscripten_glDrawArrays","emscripten_glDrawArraysInstanced","emscripten_glDrawArraysInstancedANGLE","emscripten_glDrawArraysInstancedARB","emscripten_glDrawArraysInstancedEXT","emscripten_glDrawArraysInstancedNV","emscripten_glDrawBuffers","emscripten_glDrawBuffersEXT","emscripten_glDrawBuffersWEBGL","emscripten_glDrawElements","emscripten_glDrawElementsInstanced","emscripten_glDrawElementsInstancedANGLE","emscripten_glDrawElementsInstancedARB","emscripten_glDrawElementsInstancedEXT","emscripten_glDrawElementsInstancedNV","emscripten_glDrawRangeElements","emscripten_glEnable","emscripten_glEnableVertexAttribArray","emscripten_glEndQuery","emscripten_glEndQueryEXT","emscripten_glEndTransformFeedback","emscripten_glFenceSync","emscripten_glFinish","emscripten_glFlush","emscripten_glFramebufferRenderbuffer","emscripten_glFramebufferTexture2D","emscripten_glFramebufferTextureLayer","emscripten_glFrontFace","emscripten_glGenBuffers","emscripten_glGenFramebuffers","emscripten_glGenQueries","emscripten_glGenQueriesEXT","emscripten_glGenRenderbuffers","emscripten_glGenSamplers","emscripten_glGenTextures","emscripten_glGenTransformFeedbacks","emscripten_glGenVertexArrays","emscripten_glGenVertexArraysOES","emscripten_glGenerateMipmap","emscripten_glGetActiveAttrib","emscripten_glGetActiveUniform","emscripten_glGetActiveUniformBlockName","emscripten_glGetActiveUniformBlockiv","emscripten_glGetActiveUniformsiv","emscripten_glGetAttachedShaders","emscripten_glGetAttribLocation","emscripten_glGetBooleanv","emscripten_glGetBufferParameteri64v","emscripten_glGetBufferParameteriv","emscripten_glGetError","emscripten_glGetFloatv","emscripten_glGetFragDataLocation","emscripten_glGetFramebufferAttachmentParameteriv","emscripten_glGetInteger64i_v","emscripten_glGetInteger64v","emscripten_glGetIntegeri_v","emscripten_glGetIntegerv","emscripten_glGetInternalformativ","emscripten_glGetProgramBinary","emscripten_glGetProgramInfoLog","emscripten_glGetProgramiv","emscripten_glGetQueryObjecti64vEXT","emscripten_glGetQueryObjectivEXT","emscripten_glGetQueryObjectui64vEXT","emscripten_glGetQueryObjectuiv","emscripten_glGetQueryObjectuivEXT","emscripten_glGetQueryiv","emscripten_glGetQueryivEXT","emscripten_glGetRenderbufferParameteriv","emscripten_glGetSamplerParameterfv","emscripten_glGetSamplerParameteriv","emscripten_glGetShaderInfoLog","emscripten_glGetShaderPrecisionFormat","emscripten_glGetShaderSource","emscripten_glGetShaderiv","emscripten_glGetString","emscripten_glGetStringi","emscripten_glGetSynciv","emscripten_glGetTexParameterfv","emscripten_glGetTexParameteriv","emscripten_glGetTransformFeedbackVarying","emscripten_glGetUniformBlockIndex","emscripten_glGetUniformIndices","emscripten_glGetUniformLocation","emscripten_glGetUniformfv","emscripten_glGetUniformiv","emscripten_glGetUniformuiv","emscripten_glGetVertexAttribIiv","emscripten_glGetVertexAttribIuiv","emscripten_glGetVertexAttribPointerv","emscripten_glGetVertexAttribfv","emscripten_glGetVertexAttribiv","emscripten_glHint","emscripten_glInvalidateFramebuffer","emscripten_glInvalidateSubFramebuffer","emscripten_glIsBuffer","emscripten_glIsEnabled","emscripten_glIsFramebuffer","emscripten_glIsProgram","emscripten_glIsQuery","emscripten_glIsQueryEXT","emscripten_glIsRenderbuffer","emscripten_glIsSampler","emscripten_glIsShader","emscripten_glIsSync","emscripten_glIsTexture","emscripten_glIsTransformFeedback","emscripten_glIsVertexArray","emscripten_glIsVertexArrayOES","emscripten_glLineWidth","emscripten_glLinkProgram","emscripten_glPauseTransformFeedback","emscripten_glPixelStorei","emscripten_glPolygonOffset","emscripten_glProgramBinary","emscripten_glProgramParameteri","emscripten_glQueryCounterEXT","emscripten_glReadBuffer","emscripten_glReadPixels","emscripten_glReleaseShaderCompiler","emscripten_glRenderbufferStorage","emscripten_glRenderbufferStorageMultisample","emscripten_glResumeTransformFeedback","emscripten_glSampleCoverage","emscripten_glSamplerParameterf","emscripten_glSamplerParameterfv","emscripten_glSamplerParameteri","emscripten_glSamplerParameteriv","emscripten_glScissor","emscripten_glShaderBinary","emscripten_glShaderSource","emscripten_glStencilFunc","emscripten_glStencilFuncSeparate","emscripten_glStencilMask","emscripten_glStencilMaskSeparate","emscripten_glStencilOp","emscripten_glStencilOpSeparate","emscripten_glTexImage2D","emscripten_glTexImage3D","emscripten_glTexParameterf","emscripten_glTexParameterfv","emscripten_glTexParameteri","emscripten_glTexParameteriv","emscripten_glTexStorage2D","emscripten_glTexStorage3D","emscripten_glTexSubImage2D","emscripten_glTexSubImage3D","emscripten_glTransformFeedbackVaryings","emscripten_glUniform1f","emscripten_glUniform1fv","emscripten_glUniform1i","emscripten_glUniform1iv","emscripten_glUniform1ui","emscripten_glUniform1uiv","emscripten_glUniform2f","emscripten_glUniform2fv","emscripten_glUniform2i","emscripten_glUniform2iv","emscripten_glUniform2ui","emscripten_glUniform2uiv","emscripten_glUniform3f","emscripten_glUniform3fv","emscripten_glUniform3i","emscripten_glUniform3iv","emscripten_glUniform3ui","emscripten_glUniform3uiv","emscripten_glUniform4f","emscripten_glUniform4fv","emscripten_glUniform4i","emscripten_glUniform4iv","emscripten_glUniform4ui","emscripten_glUniform4uiv","emscripten_glUniformBlockBinding","emscripten_glUniformMatrix2fv","emscripten_glUniformMatrix2x3fv","emscripten_glUniformMatrix2x4fv","emscripten_glUniformMatrix3fv","emscripten_glUniformMatrix3x2fv","emscripten_glUniformMatrix3x4fv","emscripten_glUniformMatrix4fv","emscripten_glUniformMatrix4x2fv","emscripten_glUniformMatrix4x3fv","emscripten_glUseProgram","emscripten_glValidateProgram","emscripten_glVertexAttrib1f","emscripten_glVertexAttrib1fv","emscripten_glVertexAttrib2f","emscripten_glVertexAttrib2fv","emscripten_glVertexAttrib3f","emscripten_glVertexAttrib3fv","emscripten_glVertexAttrib4f","emscripten_glVertexAttrib4fv","emscripten_glVertexAttribDivisor","emscripten_glVertexAttribDivisorANGLE","emscripten_glVertexAttribDivisorARB","emscripten_glVertexAttribDivisorEXT","emscripten_glVertexAttribDivisorNV","emscripten_glVertexAttribI4i","emscripten_glVertexAttribI4iv","emscripten_glVertexAttribI4ui","emscripten_glVertexAttribI4uiv","emscripten_glVertexAttribIPointer","emscripten_glVertexAttribPointer","emscripten_glViewport","emscripten_glWaitSync","emscripten_has_asyncify","emscripten_memcpy_big","dest","copyWithin","emscripten_request_fullscreen_strategy","deferUntilInEventHandler","doRequestFullscreen","emscripten_request_pointerlock","emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","multiple","cutDown","overGrownHeapSize","emscripten_sample_gamepad_data","getGamepads","webkitGetGamepads","emscripten_set_beforeunload_callback_on_thread","targetThread","onbeforeunload","confirmationMessage","returnValue","registerBeforeUnloadEventCallback","emscripten_set_blur_callback_on_thread","emscripten_set_canvas_element_size","emscripten_set_element_css_size","emscripten_set_focus_callback_on_thread","emscripten_set_fullscreenchange_callback_on_thread","emscripten_set_gamepadconnected_callback_on_thread","emscripten_set_gamepaddisconnected_callback_on_thread","emscripten_set_keydown_callback_on_thread","emscripten_set_keypress_callback_on_thread","emscripten_set_keyup_callback_on_thread","emscripten_set_main_loop","dynCall_v","emscripten_set_mousedown_callback_on_thread","emscripten_set_mouseenter_callback_on_thread","emscripten_set_mouseleave_callback_on_thread","emscripten_set_mousemove_callback_on_thread","emscripten_set_mouseup_callback_on_thread","emscripten_set_pointerlockchange_callback_on_thread","mozRequestPointerLock","webkitRequestPointerLock","msRequestPointerLock","emscripten_set_resize_callback_on_thread","uiEvent","outerWidth","outerHeight","registerUiEventCallback","emscripten_set_touchcancel_callback_on_thread","emscripten_set_touchend_callback_on_thread","emscripten_set_touchmove_callback_on_thread","emscripten_set_touchstart_callback_on_thread","emscripten_set_visibilitychange_callback_on_thread","emscripten_set_wheel_callback_on_thread","onwheel","wheelEvent","registerWheelEventCallback","emscripten_set_window_title","emscripten_sleep","environ_get","__environ","environ_buf","stringToAscii","environ_sizes_get","penviron_count","penviron_buf_size","exit","fd_close","fd_fdstat_get","pbuf","rightsBase","rightsInheriting","fd_read","pnum","fd_seek","offset_low","offset_high","newOffset","fd_write","glGetFloatv","strftime","strftime_l","receiveInstance","instantiateStreaming","createWasm","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","a11","runCaller","ready","license","LicenseModal","_ref","onClose","class","onClick","overflowY","overflowX","fontFamily","whiteSpace","fontSize","defaultIWad","deathmatchIWad","indexDBName","WadHandler","_defineProperty","signal","_openDatabase","_uploadWad","trace","wadName","isIWAD","wadState","_asyncToGenerator","database","_database","upload","reader","FileReader","readAsArrayBuffer","iwad","trans","_database2","wad","setWad","_database3","_this2","dbrequest","projects","WadChooser","_useState2","_slicedToArray","useState","showLicense","setShowLicense","pelements","flex","fontWeight","flexGrow","maxWidth","padding","flexDirection","justifyContent","alignItems","singleton","click","onChange","uploadWad","flexShrink","EdgeClassic","canvasRef","useRef","canvasContainerRef","_useState4","loading","useEffect","syncCanvasSize","offsetWidth","offsetHeight","doSyncTimeout","canvasSync","_I_WebSyncScreenSize","find","_I_WebOpenGameMenu","_objectSpread","preEdgeSyncFS","postEdgeSyncFS","preInit","print","printErr","setStatus","monitorRunDependencies","globalThis","visibility","_canvasRef$current","_x2","Player","App"],"mappings":"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S,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,sCAAuC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,qCAAsC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,wCAAyC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,sCAAuC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,sCAAuC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,oCAAqC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,oCAAqC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,uCAAwC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,qCAAsC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,qCAAsC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,qCAAsC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,sCAAuC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,sCAAuC,MAAS,OAAQ,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,4CAA6C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,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IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uDAAwD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uDAAwD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,I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","file":"bundle.763d1.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Pq/i\");\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function(p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","function cycleDetected(): never {\n\tthrow new Error(\"Cycle detected\");\n}\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\nfunction batch<T>(callback: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn callback();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\tpeek(): T;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\tconst signal = this;\n\treturn effect(function (this: Effect) {\n\t\tconst value = signal.value;\n\t\tconst flag = this._flags & TRACKING;\n\t\tthis._flags &= ~TRACKING;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tthis._flags |= flag;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.peek = function () {\n\treturn this._value;\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget() {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tcycleDetected();\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\nfunction signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_compute: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(compute: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, compute: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._compute = compute;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._compute();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when the it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nComputed.prototype.peek = function () {\n\tif (!this._refresh()) {\n\t\tcycleDetected();\n\t}\n\tif (this._flags & HAS_ERROR) {\n\t\tthrow this._value;\n\t}\n\treturn this._value;\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget() {\n\t\tif (this._flags & RUNNING) {\n\t\t\tcycleDetected();\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\ninterface ReadonlySignal<T = any> extends Signal<T> {\n\treadonly value: T;\n}\n\nfunction computed<T>(compute: () => T): ReadonlySignal<T> {\n\treturn new Computed(compute);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._compute = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ndeclare class Effect {\n\t_compute?: () => unknown;\n\t_cleanup?: unknown;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(compute: () => void);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, compute: () => void) {\n\tthis._compute = compute;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (!(this._flags & DISPOSED) && this._compute !== undefined) {\n\t\t\tthis._cleanup = this._compute();\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tcycleDetected();\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nfunction effect(compute: () => unknown): () => void {\n\tconst effect = new Effect(compute);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { signal, computed, effect, batch, Signal, ReadonlySignal };\n","import { options, Component } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport { signal, computed, batch, effect, Signal, type ReadonlySignal };\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction Text(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst s = useMemo(() => {\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Replace this component's vdom updater with a direct text one:\n\t\tthis._updater!._callback = () => {\n\t\t\t(this.base as Text).data = s.peek();\n\t\t};\n\n\t\treturn computed(() => {\n\t\t\tlet data = currentSignal.value;\n\t\t\tlet s = data.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\t}, []);\n\n\treturn s.value;\n}\nText.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: Text },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(() => {\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// let reason;\n\t// if (!hasSignals && !hasComputeds.has(this)) {\n\t// \treason = \"no signals or computeds\";\n\t// } else if (hasPendingUpdate.has(this)) {\n\t// \treason = \"has pending update\";\n\t// } else if (hasHookState.has(this)) {\n\t// \treason = \"has hook state\";\n\t// }\n\t// if (reason) {\n\t// \tif (!this) reason += \" (`this` bug)\";\n\t// \tconsole.log(\"not optimizing\", this?.constructor?.name, \": \", reason, {\n\t// \t\tdetails: {\n\t// \t\t\thasSignals,\n\t// \t\t\thasComputeds: hasComputeds.has(this),\n\t// \t\t\thasPendingUpdate: hasPendingUpdate.has(this),\n\t// \t\t\thasHookState: hasHookState.has(this),\n\t// \t\t\tdeps: Array.from(updater._deps),\n\t// \t\t\tupdater,\n\t// \t\t},\n\t// \t});\n\t// }\n\n\t// if this component used no signals or computeds, update:\n\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t// if there is a pending re-render triggered from Signals,\n\t// or if there is hook or class state, update:\n\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T) {\n\treturn useMemo(() => signal<T>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(() => callback.current());\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"loading__O14bA\"};","\nvar createEdgeModule = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(moduleArg = {}) {\n\n// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = moduleArg;\n\n// Set up the promise that indicates the Module is initialized\nvar readyPromiseResolve, readyPromiseReject;\nModule['ready'] = new Promise((resolve, reject) => {\n  readyPromiseResolve = resolve;\n  readyPromiseReject = reject;\n});\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n  var Module = typeof Module !== 'undefined' ? Module : {};\n\n  if (!Module.expectedDataFileDownloads) {\n    Module.expectedDataFileDownloads = 0;\n  }\n\n  Module.expectedDataFileDownloads++;\n  (function() {\n    // Do not attempt to redownload the virtual filesystem data when in a pthread or a Wasm Worker context.\n    if (Module['ENVIRONMENT_IS_PTHREAD'] || Module['$ww']) return;\n    var loadPackage = function(metadata) {\n\n      var PACKAGE_PATH = '';\n      if (typeof window === 'object') {\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');\n      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {\n        // web worker\n        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');\n      }\n      var PACKAGE_NAME = '/Users/jenge/Dev/EDGE-latest/web/site/edge-classic.data';\n      var REMOTE_PACKAGE_BASE = 'edge-classic.data';\n      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {\n        Module['locateFile'] = Module['locateFilePackage'];\n        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');\n      }\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\nvar REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\n\n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\n        \n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', packageName, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.onprogress = function(event) {\n          var url = packageName;\n          var size = packageSize;\n          if (event.total) size = event.total;\n          if (event.loaded) {\n            if (!xhr.addedTotal) {\n              xhr.addedTotal = true;\n              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};\n              Module.dataFileDownloads[url] = {\n                loaded: event.loaded,\n                total: size\n              };\n            } else {\n              Module.dataFileDownloads[url].loaded = event.loaded;\n            }\n            var total = 0;\n            var loaded = 0;\n            var num = 0;\n            for (var download in Module.dataFileDownloads) {\n            var data = Module.dataFileDownloads[download];\n              total += data.total;\n              loaded += data.loaded;\n              num++;\n            }\n            total = Math.ceil(total * Module.expectedDataFileDownloads/num);\n            if (Module['setStatus']) Module['setStatus'](`Downloading data... (${loaded}/${total})`);\n          } else if (!Module.dataFileDownloads) {\n            if (Module['setStatus']) Module['setStatus']('Downloading data...');\n          }\n        };\n        xhr.onerror = function(event) {\n          throw new Error(\"NetworkError for: \" + packageName);\n        }\n        xhr.onload = function(event) {\n          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n            var packageData = xhr.response;\n            callback(packageData);\n          } else {\n            throw new Error(xhr.statusText + \" : \" + xhr.responseURL);\n          }\n        };\n        xhr.send(null);\n      };\n\n      function handleError(error) {\n        console.error('package error:', error);\n      };\n\n    function runWithFS() {\n\n      function assert(check, msg) {\n        if (!check) throw msg + new Error().stack;\n      }\nModule['FS_createPath'](\"/\", \"edge_base\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"blasphemer\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"chex\", true, true);\nModule['FS_createPath'](\"/edge_base/chex\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/chex/graphics\", \"chex_font\", true, true);\nModule['FS_createPath'](\"/edge_base/chex\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom1\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom2\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"freedoom1\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1/graphics\", \"freedoom_font\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"freedoom2\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2/graphics\", \"freedoom_font\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"hacx\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"harmony\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"heretic\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"plutonia\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"rekkr\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"tnt\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"textures\", true, true);\nModule['FS_createPath'](\"/\", \"edge_defs\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"colormaps\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_defs/graphics\", \"crosshairs\", true, true);\nModule['FS_createPath'](\"/edge_defs/graphics\", \"edge1_font\", true, true);\nModule['FS_createPath'](\"/edge_defs/graphics\", \"overlays\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"sounds\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_defs/sprites\", \"mbf_dog\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"ttf\", true, true);\nModule['FS_createPath'](\"/\", \"soundfont\", true, true);\n\n        var PACKAGE_UUID = metadata['package_uuid'];\n        var indexedDB;\n        if (typeof window === 'object') {\n          indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        } else if (typeof location !== 'undefined') {\n          // worker\n          indexedDB = self.indexedDB;\n        } else {\n          throw 'using IndexedDB to cache data can only be done on a web page or in a web worker';\n        }\n        var IDB_RO = \"readonly\";\n        var IDB_RW = \"readwrite\";\n        var DB_NAME = \"EM_PRELOAD_CACHE\";\n        var DB_VERSION = 1;\n        var METADATA_STORE_NAME = 'METADATA';\n        var PACKAGE_STORE_NAME = 'PACKAGES';\n        function openDatabase(callback, errback) {\n          try {\n            var openRequest = indexedDB.open(DB_NAME, DB_VERSION);\n          } catch (e) {\n            return errback(e);\n          }\n          openRequest.onupgradeneeded = function(event) {\n            var db = /** @type {IDBDatabase} */ (event.target.result);\n\n            if (db.objectStoreNames.contains(PACKAGE_STORE_NAME)) {\n              db.deleteObjectStore(PACKAGE_STORE_NAME);\n            }\n            var packages = db.createObjectStore(PACKAGE_STORE_NAME);\n\n            if (db.objectStoreNames.contains(METADATA_STORE_NAME)) {\n              db.deleteObjectStore(METADATA_STORE_NAME);\n            }\n            var metadata = db.createObjectStore(METADATA_STORE_NAME);\n          };\n          openRequest.onsuccess = function(event) {\n            var db = /** @type {IDBDatabase} */ (event.target.result);\n            callback(db);\n          };\n          openRequest.onerror = function(error) {\n            errback(error);\n          };\n        };\n\n        // This is needed as chromium has a limit on per-entry files in IndexedDB\n        // https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177\n        // https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60\n        // We set the chunk size to 64MB to stay well-below the limit\n        var CHUNK_SIZE = 64 * 1024 * 1024;\n\n        function cacheRemotePackage(\n          db,\n          packageName,\n          packageData,\n          packageMeta,\n          callback,\n          errback\n        ) {\n          var transactionPackages = db.transaction([PACKAGE_STORE_NAME], IDB_RW);\n          var packages = transactionPackages.objectStore(PACKAGE_STORE_NAME);\n          var chunkSliceStart = 0;\n          var nextChunkSliceStart = 0;\n          var chunkCount = Math.ceil(packageData.byteLength / CHUNK_SIZE);\n          var finishedChunks = 0;\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\n            nextChunkSliceStart += CHUNK_SIZE;\n            var putPackageRequest = packages.put(\n              packageData.slice(chunkSliceStart, nextChunkSliceStart),\n              `package/${packageName}/${chunkId}`\n            );\n            chunkSliceStart = nextChunkSliceStart;\n            putPackageRequest.onsuccess = function(event) {\n              finishedChunks++;\n              if (finishedChunks == chunkCount) {\n                var transaction_metadata = db.transaction(\n                  [METADATA_STORE_NAME],\n                  IDB_RW\n                );\n                var metadata = transaction_metadata.objectStore(METADATA_STORE_NAME);\n                var putMetadataRequest = metadata.put(\n                  {\n                    'uuid': packageMeta.uuid,\n                    'chunkCount': chunkCount\n                  },\n                  `metadata/${packageName}`\n                );\n                putMetadataRequest.onsuccess = function(event) {\n                  callback(packageData);\n                };\n                putMetadataRequest.onerror = function(error) {\n                  errback(error);\n                };\n              }\n            };\n            putPackageRequest.onerror = function(error) {\n              errback(error);\n            };\n          }\n        }\n\n        /* Check if there's a cached package, and if so whether it's the latest available */\n        function checkCachedPackage(db, packageName, callback, errback) {\n          var transaction = db.transaction([METADATA_STORE_NAME], IDB_RO);\n          var metadata = transaction.objectStore(METADATA_STORE_NAME);\n          var getRequest = metadata.get(`metadata/${packageName}`);\n          getRequest.onsuccess = function(event) {\n            var result = event.target.result;\n            if (!result) {\n              return callback(false, null);\n            } else {\n              return callback(PACKAGE_UUID === result['uuid'], result);\n            }\n          };\n          getRequest.onerror = function(error) {\n            errback(error);\n          };\n        }\n\n        function fetchCachedPackage(db, packageName, metadata, callback, errback) {\n          var transaction = db.transaction([PACKAGE_STORE_NAME], IDB_RO);\n          var packages = transaction.objectStore(PACKAGE_STORE_NAME);\n\n          var chunksDone = 0;\n          var totalSize = 0;\n          var chunkCount = metadata['chunkCount'];\n          var chunks = new Array(chunkCount);\n\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\n            var getRequest = packages.get(`package/${packageName}/${chunkId}`);\n            getRequest.onsuccess = function(event) {\n              // If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now\n              if (chunkCount == 1) {\n                callback(event.target.result);\n              } else {\n                chunksDone++;\n                totalSize += event.target.result.byteLength;\n                chunks.push(event.target.result);\n                if (chunksDone == chunkCount) {\n                  if (chunksDone == 1) {\n                    callback(event.target.result);\n                  } else {\n                    var tempTyped = new Uint8Array(totalSize);\n                    var byteOffset = 0;\n                    for (var chunkId in chunks) {\n                      var buffer = chunks[chunkId];\n                      tempTyped.set(new Uint8Array(buffer), byteOffset);\n                      byteOffset += buffer.byteLength;\n                      buffer = undefined;\n                    }\n                    chunks = undefined;\n                    callback(tempTyped.buffer);\n                    tempTyped = undefined;\n                  }\n                }\n              }\n            };\n            getRequest.onerror = function(error) {\n              errback(error);\n            };\n          }\n        }\n\n      function processPackageData(arrayBuffer) {\n        assert(arrayBuffer, 'Loading data file failed.');\n        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');\n        var byteArray = new Uint8Array(arrayBuffer);\n        var curr;\n        var compressedData = {\"data\":null,\"cachedOffset\":51932116,\"cachedIndexes\":[-1,-1],\"cachedChunks\":[null,null],\"offsets\":[0,2048,4096,6153,8201,10249,12297,14345,16393,18441,20489,22537,24585,26633,28681,30729,32777,34825,36873,38921,40969,43017,44466,45771,47201,48293,49223,50007,50920,51880,52830,53786,54540,55583,56332,57267,58245,59150,60014,60850,61758,62599,63367,64246,65086,66043,67285,68179,69159,70127,71289,72380,73373,74708,75832,76678,77597,78912,80228,81490,82948,83479,84008,84497,85075,85629,86567,87523,88483,89163,89715,90249,91068,91593,92325,93319,94111,94818,95482,96257,96905,97738,98608,99700,100847,101597,102237,102802,103324,103891,104535,105270,105965,106831,107428,108130,109003,109977,111150,111963,112736,113790,114802,115531,116443,117374,118281,119059,119982,120992,121970,122804,123465,123860,124586,125479,126413,126814,127480,128456,129077,129738,130357,131002,131893,132675,133452,134080,134722,135298,136326,138374,139903,140758,141797,143080,144334,145007,146432,147479,148639,149607,150677,151905,153046,154695,156231,157803,159505,160678,160727,160772,160867,160912,161014,161063,161232,161483,161882,162354,162952,163601,164150,164811,165612,166390,167631,169069,170587,172038,173447,175163,176726,178291,179940,181572,183288,184943,186659,188475,190152,191786,193383,195097,196751,198190,199758,201178,202489,203379,204274,205014,205614,206196,206805,207393,207982,208523,208869,209246,209488,209613,209693,209738,209786,209835,210487,212164,212209,212254,212302,212351,212396,212434,212479,212527,212576,212621,212689,212999,214046,215467,216791,218239,219634,221018,222212,223251,224369,225194,225825,226664,227511,228280,229152,229980,230945,231937,232788,233598,234317,235057,236015,236886,237707,238487,239256,240080,240835,241539,242097,242518,242686,242730,242775,242823,242872,242917,242961,243006,243054,243101,243146,243190,243338,245386,246850,248256,249658,250962,252264,253588,254901,256195,257546,258824,260165,261434,262691,263987,265142,266172,267211,268179,269118,270023,270826,271665,272705,273822,274961,276311,277759,279443,281061,282608,284221,285803,287199,288598,289696,290916,292222,293597,295109,296527,297851,298851,299848,300964,302117,303343,304586,305823,307070,308302,309581,310893,312298,313572,314886,316172,317518,319474,320107,320147,320192,320240,320289,320339,320623,321248,322105,323114,324296,325860,327559,329304,331095,332804,334516,336235,337990,339754,341584,343423,345216,346892,348308,349696,350984,352442,354227,356064,357911,359824,361713,363650,365583,367436,369284,371165,373032,374818,376598,378323,380001,381816,383710,385232,386668,388025,389196,389740,389862,389906,389951,390001,390048,390093,390137,390903,391723,393011,394156,395426,396274,397094,398213,399118,399990,401033,402957,404586,406008,407454,408954,410447,411983,413516,415010,416533,418032,419633,421399,423240,425186,427165,429173,431165,433169,435181,437185,439159,441057,442851,444645,446534,448466,450323,452308,454327,456249,458095,459911,461712,463441,465177,466901,468720,470555,472461,474420,476407,478409,480421,482406,484264,485903,487436,488930,490455,491964,493466,494982,496499,497968,499399,500837,502283,504120,505861,507136,508432,509733,511025,512280,513564,514932,516197,517425,518735,519943,521214,522603,524011,525446,526863,528317,529761,531189,532713,534225,535739,537287,538834,540374,541997,543638,545222,546830,548393,549994,551536,553024,554555,556219,557937,559499,561226,562812,564210,565578,566994,568264,569532,570769,572071,573297,574476,575632,576841,577997,579185,580370,581611,582902,584182,585763,587587,588660,589765,590927,592016,592986,593984,595068,596148,597253,598454,599516,600785,601956,603321,604775,606284,607805,609435,610984,612582,614195,615701,617072,618636,620239,621760,623328,624814,626162,627620,628857,630190,631591,632848,634217,635687,637168,638698,640206,641719,643133,644418,645648,646677,647690,648711,649802,650951,652156,653211,654074,655120,656147,657056,657993,658982,660172,662220,663694,665268,666844,668462,670053,671678,673358,674933,676540,678162,679831,681471,682871,684419,686037,687594,689227,690985,692585,694138,695762,697257,698730,700170,701707,703294,704741,706229,707771,709353,710919,712474,714000,715609,717192,718838,720490,722205,723794,725362,726974,728639,730164,731660,732901,734211,735792,737317,738799,740245,741844,743481,745175,746890,748437,749932,751496,753520,754767,755747,756833,757834,758967,760005,761094,762287,763306,764348,765459,766634,767827,768898,770007,771075,772219,773406,774626,775863,777071,778368,779727,781018,782187,783294,784328,785385,786386,787395,788400,789459,790495,791394,792356,793287,794213,795254,796285,797328,798343,799359,800401,801418,802351,803342,804297,805387,806436,807561,808681,809812,810927,812022,813090,813922,814798,816420,818156,819446,820741,822022,823301,824566,825869,827224,828488,829699,831006,832219,833389,834693,836037,837377,838702,840044,841378,842774,844268,845895,847509,849110,850501,851806,853215,854804,856392,858128,859791,861419,862844,864135,865483,866904,868391,869847,871343,872798,874192,875554,876979,878247,879525,880755,882039,883272,884436,885607,886814,887939,889142,890348,891584,892896,894159,895737,897689,899264,900861,902443,904054,905621,907176,908743,910356,911910,913469,915083,916839,918581,920386,922202,923956,925452,927154,928817,930603,932479,934296,936031,937949,939767,941563,943479,945304,947079,948850,950563,952288,954064,955742,957411,959147,960813,962684,964493,966296,967612,968974,970379,971625,973025,974537,976027,977507,979033,980562,982053,983601,985149,986626,988075,989558,991150,993186,993957,994775,995544,996441,997384,998114,998874,999784,1000572,1001445,1002265,1003100,1004061,1005224,1006478,1007688,1009053,1010288,1011629,1013145,1014686,1016211,1017769,1019448,1021030,1022683,1024262,1025851,1027493,1029118,1030715,1032195,1033680,1035180,1036730,1038300,1039829,1041286,1042781,1044208,1045574,1046893,1048080,1049276,1050480,1051684,1052788,1053820,1054836,1055883,1056891,1057868,1058840,1059870,1060875,1061744,1062534,1064444,1066194,1068042,1069935,1071796,1073620,1075424,1077247,1079115,1080887,1082619,1084216,1085760,1087168,1089011,1090905,1092829,1094625,1096509,1098378,1100249,1102156,1104088,1105894,1107598,1109214,1110762,1112173,1113962,1115959,1117802,1119625,1121536,1123452,1125322,1127075,1128822,1130357,1131802,1133345,1134964,1136578,1138319,1140214,1141920,1143933,1145726,1147546,1149536,1151200,1153149,1155152,1156602,1158002,1159618,1161136,1162606,1164487,1166210,1167480,1169071,1170665,1172191,1173735,1175668,1177100,1178535,1180214,1181755,1183312,1185197,1187045,1188718,1190391,1192134,1193903,1195641,1197393,1199148,1200924,1202752,1204564,1206424,1208273,1210038,1211792,1213593,1215381,1217208,1219034,1220828,1222706,1224530,1226303,1228053,1229804,1231558,1233322,1235016,1236761,1238570,1240279,1242058,1243799,1245648,1247415,1249198,1250947,1252687,1254415,1256122,1257845,1259600,1261320,1263039,1264689,1266453,1268317,1270207,1272048,1273875,1275687,1277577,1279482,1281361,1283162,1284836,1286452,1288255,1290303,1292222,1294138,1296041,1297991,1299895,1301790,1303705,1305628,1307490,1309376,1311298,1313215,1315024,1316830,1318583,1320332,1322093,1323932,1325733,1327561,1329328,1331193,1333044,1334866,1336676,1338440,1340175,1341842,1343431,1344991,1346678,1348436,1350252,1351992,1353758,1355473,1357146,1358874,1360576,1362314,1364095,1365878,1367684,1369424,1371257,1373175,1375073,1377031,1378864,1380650,1382499,1384431,1386348,1388272,1390165,1392076,1393976,1396024,1397986,1399932,1401937,1403941,1405928,1407942,1409924,1411876,1413800,1415706,1417693,1419693,1421680,1423621,1425516,1427468,1429449,1431415,1433386,1435387,1437384,1439409,1441313,1443248,1445160,1447061,1448962,1450780,1452552,1454292,1456108,1458032,1459966,1461903,1463859,1465831,1467811,1469792,1471721,1473653,1475642,1477573,1479385,1481246,1483111,1484980,1486811,1488641,1490444,1492274,1494129,1495950,1497664,1499317,1500874,1502366,1503816,1504585,1506633,1508681,1510729,1512777,1514825,1516873,1518921,1520969,1523017,1525065,1527113,1529161,1531209,1533257,1535305,1537353,1539401,1541449,1543497,1545545,1547593,1549641,1551689,1553737,1555785,1557833,1559881,1561929,1563977,1566025,1568073,1570121,1572169,1574217,1576265,1578313,1580361,1582409,1584457,1586505,1588553,1590601,1592649,1594697,1596745,1598793,1600841,1602889,1604937,1606985,1609033,1611081,1613129,1615177,1617225,1619273,1621321,1623369,1625417,1627465,1629513,1631561,1633609,1635657,1637705,1639753,1641801,1643849,1645897,1647945,1649993,1652041,1654089,1656137,1658185,1660233,1662281,1664329,1666377,1668425,1670473,1672521,1674578,1676626,1678674,1680722,1682770,1684818,1686866,1688914,1690962,1693010,1695058,1697106,1699154,1701202,1703250,1705298,1707346,1709394,1711442,1713490,1715538,1717586,1719634,1721682,1723730,1725778,1727826,1729874,1731922,1733970,1736018,1738066,1740114,1742162,1744210,1746258,1748306,1750354,1752402,1754450,1756498,1758546,1760594,1762642,1764690,1766738,1768786,1770834,1772882,1774930,1776978,1779026,1781074,1783122,1785170,1787218,1789266,1791314,1793362,1795410,1797458,1799506,1801554,1803602,1805650,1807698,1809746,1811794,1813842,1815890,1817938,1819986,1822034,1824082,1826130,1828178,1830226,1832274,1834322,1836370,1838418,1840466,1842514,1844562,1846610,1848658,1850706,1852754,1854802,1856850,1858898,1860946,1862994,1865042,1867090,1869138,1871186,1873234,1875282,1877330,1879378,1881426,1883474,1885522,1887570,1889618,1891666,1893714,1895762,1897810,1899858,1901906,1903954,1906002,1908050,1910098,1912146,1914194,1916242,1918290,1920338,1922386,1924434,1926482,1928530,1930578,1932626,1934674,1936722,1938770,1940818,1942866,1944914,1946962,1949010,1951058,1953106,1955154,1957202,1959250,1961298,1963346,1965394,1967442,1969490,1971538,1973586,1975634,1977682,1979730,1981778,1983826,1985874,1987922,1989970,1992018,1994066,1996114,1998162,2000210,2002258,2004306,2006354,2008402,2010450,2012498,2014546,2016594,2018642,2020690,2022738,2024786,2026834,2028882,2030307,2031724,2033114,2034665,2036157,2037698,2039114,2040588,2041838,2043058,2044453,2045943,2047249,2048443,2049800,2051276,2052818,2054258,2055729,2057143,2058542,2059917,2061442,2062912,2064362,2065846,2067349,2068846,2070297,2071854,2073358,2074893,2076410,2077888,2079490,2080989,2082531,2084083,2085549,2087045,2088608,2090178,2091557,2093011,2094378,2096036,2097683,2099346,2100986,2102559,2104109,2105764,2107437,2108999,2110556,2112203,2113720,2115734,2117004,2118074,2119243,2120345,2121416,2122426,2123481,2124585,2125645,2126792,2127894,2129082,2130307,2131672,2133021,2134520,2136043,2137631,2139189,2140726,2142359,2143886,2145284,2146781,2148401,2149928,2151462,2152976,2154373,2155860,2157182,2158526,2159868,2161190,2162468,2163910,2165342,2166886,2168414,2169888,2171378,2172677,2173912,2175055,2176054,2177082,2178100,2179238,2180405,2181581,2182528,2183468,2184489,2185437,2186378,2187381,2188423,2190183,2191693,2192738,2193894,2195022,2196111,2197089,2198135,2199214,2200267,2201390,2202582,2203892,2205162,2206448,2208008,2209556,2210984,2212553,2214031,2215517,2217149,2218726,2220179,2221696,2223299,2224913,2226342,2227875,2229385,2231012,2232625,2234359,2236187,2238091,2239877,2241495,2243298,2245042,2246713,2248260,2249910,2251190,2252527,2253822,2254711,2255847,2256958,2258110,2259264,2260434,2261401,2262282,2263320,2264307,2265200,2266138,2267164,2268703,2270620,2272151,2273712,2275232,2276798,2278318,2279781,2281288,2282825,2284310,2285796,2287361,2289041,2290772,2292572,2294346,2296055,2297553,2299226,2300887,2302619,2304505,2306242,2307913,2309767,2311515,2313263,2315208,2316828,2318525,2320313,2322013,2323696,2325471,2326999,2328567,2330254,2331909,2333777,2335520,2337278,2338552,2339918,2341301,2342506,2343882,2345316,2346820,2348282,2349728,2351192,2352666,2354144,2355603,2357010,2358417,2359854,2361437,2363485,2365162,2366824,2368484,2370245,2372026,2373770,2375496,2377285,2379072,2380905,2382709,2384628,2386370,2388113,2389908,2391683,2393522,2395360,2397175,2399000,2400865,2402669,2404440,2406223,2407989,2409734,2411505,2413198,2414994,2416771,2418523,2420266,2422067,2423885,2425641,2427412,2429169,2430873,2432612,2434343,2436092,2437818,2439539,2441237,2442888,2444737,2446608,2448478,2450333,2452145,2453953,2455852,2457723,2459558,2461287,2462944,2464487,2465271,2467319,2469367,2471415,2473463,2475511,2477559,2479607,2481655,2483703,2485751,2487799,2489847,2491895,2493943,2495991,2498039,2500087,2502135,2504183,2506231,2508279,2510327,2512375,2514423,2516471,2518519,2520567,2522615,2524663,2526711,2528759,2530807,2532855,2534903,2536951,2538999,2541047,2543095,2545143,2547191,2549239,2551287,2553335,2555383,2557431,2559479,2561527,2563575,2565623,2567671,2569719,2571767,2573815,2575863,2577911,2579968,2582016,2584064,2586112,2588160,2590208,2592256,2594304,2596352,2598400,2600457,2601780,2603120,2604447,2605907,2607318,2608855,2610383,2611790,2613238,2614704,2616188,2617629,2619055,2620458,2621820,2622992,2623709,2624703,2625901,2627386,2629016,2630766,2632603,2634444,2636333,2638205,2639993,2641730,2643141,2644918,2646659,2648509,2650378,2652219,2654039,2655856,2657629,2659382,2660865,2662131,2663109,2664227,2665553,2666790,2667989,2669395,2670587,2671716,2672934,2674246,2675718,2677169,2678645,2680127,2681519,2682888,2684284,2686212,2687852,2689286,2690781,2692293,2693830,2695273,2696810,2698302,2699732,2701222,2702808,2704438,2705863,2707420,2709106,2710777,2712464,2714258,2716018,2717669,2719408,2720985,2722556,2724113,2725631,2727235,2728851,2730442,2732063,2733677,2735276,2736862,2738405,2739980,2741584,2743258,2744848,2746504,2748074,2749626,2751215,2752883,2754495,2756090,2757477,2758639,2760078,2761598,2763057,2764417,2765881,2767401,2768976,2770576,2772090,2773486,2774948,2776746,2778533,2779942,2781317,2782702,2784147,2785526,2786945,2788433,2789809,2791206,2792649,2794173,2795393,2796721,2798276,2799805,2801314,2802949,2804585,2806194,2807811,2809345,2810819,2812274,2813805,2815338,2816906,2818344,2819817,2821345,2822914,2824401,2825878,2827405,2828931,2830486,2832063,2833669,2835288,2836793,2838319,2839882,2841386,2842783,2844085,2845008,2846172,2847536,2848926,2850210,2851573,2853011,2854467,2856004,2857503,2858848,2860189,2861741,2863768,2865348,2867004,2868681,2870427,2872185,2873901,2875679,2877341,2879029,2880763,2882590,2884264,2885712,2887354,2889012,2890642,2892364,2894176,2895853,2897493,2899174,2900728,2902281,2903786,2905440,2907122,2908636,2910183,2911743,2913378,2915044,2916666,2918305,2920012,2921675,2923409,2925148,2926929,2928575,2930174,2931853,2933514,2935084,2936608,2937871,2939372,2941099,2942815,2944394,2946007,2947717,2949489,2951301,2953141,2954789,2956403,2958081,2960137,2960820,2961412,2962067,2962731,2963372,2964058,2964858,2965855,2966904,2967959,2968810,2969970,2971464,2973003,2974613,2976182,2977309,2978883,2980406,2982103,2983869,2985528,2987069,2988797,2990428,2992132,2993843,2995463,2997009,2998819,3000502,3002228,3003968,3005678,3007317,3008988,3010690,3012409,3014193,3015956,3017477,3018891,3020280,3021515,3022712,3024090,3025478,3026728,3027948,3029242,3030574,3032039,3033583,3035136,3036671,3038217,3039846,3040853,3042901,3044949,3046997,3049045,3051093,3053141,3055189,3057237,3059285,3061333,3063381,3065429,3067477,3069525,3071573,3073621,3075669,3077717,3079765,3081813,3083861,3085909,3087957,3090005,3092053,3094101,3096149,3098197,3100245,3102293,3104341,3106389,3108437,3110485,3112533,3114581,3116629,3118677,3120725,3122773,3124821,3126869,3128917,3130965,3133013,3135061,3137109,3139157,3141205,3143253,3145301,3147349,3149397,3151445,3153493,3155541,3157589,3159637,3161685,3163733,3165781,3167829,3169886,3171934,3173982,3176030,3178078,3180126,3182174,3184222,3186279,3188327,3190375,3192423,3194471,3196519,3198567,3200615,3202663,3204711,3206759,3208807,3210855,3212903,3214951,3216999,3219047,3221095,3223143,3225191,3227239,3229287,3231335,3233383,3235431,3237479,3239527,3241575,3243623,3245671,3247719,3249767,3251815,3253863,3255911,3257959,3260007,3262055,3264103,3266151,3268199,3270256,3272304,3274352,3276400,3278448,3280496,3282544,3284592,3286640,3288688,3290736,3292784,3294839,3296887,3298935,3300983,3303031,3305079,3307127,3309175,3311223,3313271,3315319,3317367,3319415,3321463,3323511,3325559,3327607,3329655,3331703,3333751,3335799,3337847,3339895,3341943,3343991,3346039,3348087,3350135,3352183,3354231,3356279,3358327,3360375,3362423,3364471,3366519,3368567,3370615,3372663,3374711,3376759,3378807,3380855,3382903,3384951,3386999,3389047,3391095,3393143,3395191,3397239,3399287,3401335,3403383,3405431,3407479,3409527,3411575,3413623,3415671,3417719,3419775,3421820,3423828,3425857,3427907,3429962,3432019,3434076,3436125,3438182,3440230,3442278,3444326,3446374,3448422,3450470,3452518,3454566,3456614,3458662,3460710,3462758,3464806,3466854,3468902,3470950,3472998,3475046,3477094,3479142,3481190,3483238,3485286,3487334,3489382,3491430,3493478,3495526,3497574,3499622,3501670,3503718,3505766,3507814,3509862,3511910,3513958,3516015,3518064,3520084,3522103,3524152,3526204,3528252,3530300,3532357,3534403,3536451,3538499,3540547,3542595,3544643,3546691,3548739,3550787,3552835,3554883,3556931,3558979,3561027,3563075,3565123,3567171,3569219,3571267,3573324,3575372,3577420,3579468,3581516,3583564,3585612,3587660,3589708,3591756,3593804,3595852,3597900,3599948,3602005,3604053,3606101,3608149,3610197,3612245,3614293,3616349,3618387,3620392,3622436,3624487,3626535,3628583,3630640,3632691,3634739,3636787,3638835,3640883,3642931,3644979,3647027,3649075,3651123,3653171,3655219,3657267,3659315,3661363,3663411,3665459,3667507,3669555,3671603,3673651,3675699,3677747,3679795,3681843,3683891,3685939,3687987,3690035,3692083,3694131,3696179,3698227,3700275,3702323,3704371,3706419,3708467,3710515,3712563,3714611,3716659,3718707,3720755,3722803,3724851,3726899,3728947,3730995,3733043,3735091,3737139,3739196,3741244,3743292,3745340,3747388,3749436,3751484,3753532,3755580,3757628,3759676,3761724,3763772,3765820,3767868,3769916,3771964,3774012,3776060,3778108,3780156,3782204,3784252,3786300,3788348,3790396,3792444,3794492,3796540,3798588,3800636,3802684,3804732,3806780,3808828,3810876,3812924,3814972,3817020,3819068,3821116,3823164,3825212,3827260,3829308,3831356,3833404,3835452,3837500,3839548,3841596,3843644,3845692,3847740,3849788,3851836,3853884,3855932,3857980,3860028,3862076,3864124,3866172,3868220,3870268,3872316,3874364,3876412,3878460,3880508,3882556,3884604,3886652,3888700,3890748,3892796,3894853,3896901,3898958,3900992,3903000,3905037,3907090,3909147,3911195,3913243,3915292,3917340,3919388,3921436,3923484,3925532,3927580,3929628,3931676,3933724,3935772,3937820,3939868,3941916,3943964,3946012,3948060,3950108,3951715,3953079,3954492,3955705,3956851,3957957,3958970,3960142,3961222,3962430,3963548,3964782,3965959,3967015,3968146,3969280,3970418,3971497,3972658,3973744,3974914,3976110,3977283,3978259,3979176,3979991,3980944,3981893,3982534,3983550,3984402,3985259,3986045,3986395,3986745,3987099,3988429,3989749,3991263,3992713,3994198,3995581,3996464,3997535,3998416,3999313,4000175,4001144,4002513,4003908,4005187,4006366,4007508,4008452,4009579,4010734,4011823,4012925,4013998,4015167,4016454,4017549,4018690,4019700,4020903,4022030,4023242,4024381,4025509,4026654,4027634,4028556,4029489,4030368,4031339,4032278,4032848,4033809,4034591,4035379,4035994,4036350,4036716,4037331,4038542,4039859,4041350,4042771,4044235,4045285,4046406,4047545,4048448,4049384,4050241,4051856,4053194,4053242,4053291,4053336,4053395,4053515,4053648,4053846,4054035,4054200,4054463,4054689,4054967,4055604,4056568,4057584,4058580,4059774,4061255,4062850,4064419,4066081,4067693,4069470,4071225,4072977,4074578,4076144,4077716,4079358,4081049,4082732,4084492,4086269,4087897,4089552,4091180,4092812,4094461,4096011,4097044,4097963,4098934,4099717,4100271,4100540,4100732,4100872,4100982,4101112,4101285,4101402,4101468,4101521,4101559,4101604,4101652,4102149,4104039,4104192,4104451,4104627,4104832,4105047,4105452,4105854,4106249,4106658,4107097,4107360,4107714,4108403,4109214,4110212,4111157,4112259,4113545,4115130,4116832,4118627,4120387,4122161,4124014,4125823,4127570,4129259,4130941,4132632,4134495,4136316,4138205,4140065,4141877,4143674,4145595,4147444,4149301,4151192,4152490,4153470,4154363,4155237,4155943,4156483,4156869,4157204,4157516,4157936,4158307,4158742,4158893,4159072,4159209,4159420,4159618,4159725,4161750,4163081,4164397,4165696,4166901,4168225,4169627,4171056,4172368,4173754,4175091,4176494,4177957,4179367,4180759,4182208,4183706,4185155,4186614,4188078,4189620,4190995,4192377,4193773,4195183,4196460,4197575,4198842,4200235,4201534,4202898,4204235,4205627,4206877,4208274,4209708,4211034,4212314,4213708,4215233,4216695,4218092,4219605,4220887,4222268,4223678,4225119,4226539,4227975,4229353,4230662,4232037,4233321,4234800,4236147,4237337,4238578,4239799,4241140,4242123,4243156,4244602,4246085,4246129,4246174,4246222,4246541,4247544,4248591,4249621,4250961,4252455,4253961,4255301,4257108,4258906,4260662,4262347,4264026,4265252,4266204,4267671,4269376,4271119,4272971,4274676,4276503,4278329,4280095,4281729,4283383,4285070,4286870,4288752,4290595,4292481,4294329,4296077,4297951,4299840,4301725,4303567,4305478,4307060,4308651,4310150,4311862,4313420,4314729,4315981,4317335,4318489,4319637,4320753,4321450,4322314,4322361,4322406,4322450,4322766,4323451,4324547,4325322,4326025,4327103,4328458,4329820,4331039,4332029,4333137,4334095,4334790,4335472,4336184,4336867,4337557,4338450,4339360,4340254,4341152,4342074,4343027,4343863,4344774,4345577,4346502,4347411,4348394,4349278,4350253,4350848,4351668,4352325,4353089,4353807,4354612,4355520,4356356,4357328,4357997,4358807,4359569,4360388,4361234,4362082,4362889,4363876,4364759,4365592,4366448,4367290,4368099,4369149,4369963,4370798,4372491,4373997,4375512,4376959,4378637,4380234,4381761,4383377,4384923,4386427,4387947,4389576,4391186,4392742,4394261,4395922,4397238,4398727,4400309,4401918,4403500,4404944,4406509,4407977,4409658,4411511,4412969,4414433,4415687,4416789,4418026,4419383,4420692,4421739,4422880,4424090,4425189,4426370,4427574,4428873,4430086,4431132,4431919,4432766,4433909,4435539,4437082,4438494,4439964,4441318,4442611,4443997,4445159,4446443,4447810,4449122,4450323,4451383,4452298,4453124,4453761,4455022,4456795,4458328,4459776,4461303,4462678,4463963,4465349,4466470,4467741,4469066,4470381,4471519,4472344,4473179,4473812,4474750,4476662,4478165,4479624,4481102,4482515,4483815,4485139,4486434,4487617,4488950,4490326,4491622,4492771,4493728,4494665,4495496,4496170,4497502,4499245,4500679,4502128,4503575,4505031,4506562,4508072,4509372,4510530,4511408,4512236,4512997,4513906,4514760,4515672,4517543,4518995,4520474,4521889,4523302,4524569,4525902,4527143,4528307,4529655,4531029,4532330,4533472,4534369,4535306,4535991,4536790,4538641,4540190,4541674,4543038,4544142,4545436,4546921,4548334,4549546,4550478,4551517,4553009,4554769,4556354,4557933,4559243,4560458,4561776,4563265,4564620,4565803,4566907,4568182,4569438,4570805,4571690,4573121,4574732,4576571,4578365,4580186,4581846,4583325,4584818,4586695,4588604,4590340,4592131,4594106,4595834,4596956,4598359,4599636,4600979,4602425,4604050,4605858,4607050,4608491,4609800,4611140,4612540,4614247,4615470,4616286,4617211,4618661,4620272,4621196,4622078,4623132,4624988,4626211,4627687,4629427,4630957,4632548,4634304,4636021,4637739,4638967,4640535,4642269,4643783,4645459,4647350,4649265,4650611,4651963,4653630,4655254,4656820,4658636,4660553,4662464,4663737,4665133,4666846,4668440,4670044,4671919,4673826,4675679,4676915,4678418,4680166,4681803,4683335,4685150,4687047,4688882,4690222,4691684,4693387,4695003,4696516,4698309,4700166,4701979,4703246,4704734,4706459,4707986,4709577,4711324,4713119,4714724,4715967,4717554,4719252,4720759,4722436,4724211,4726075,4727345,4728741,4730439,4731983,4733545,4735306,4737021,4738859,4740061,4741612,4743359,4744858,4746513,4748354,4750116,4751689,4753344,4754909,4756481,4757996,4759607,4761178,4762869,4764324,4765930,4767551,4769058,4770602,4772153,4773754,4775295,4776733,4778193,4779627,4781163,4782591,4784001,4785128,4786224,4787458,4788849,4790078,4791253,4792585,4794255,4795748,4797045,4798325,4799753,4801183,4802498,4803710,4805105,4806211,4807663,4809117,4809162,4809208,4809256,4809305,4809352,4809518,4809998,4810736,4811488,4812361,4813316,4814279,4815288,4816305,4817262,4818473,4819595,4820913,4822246,4823395,4824726,4825999,4827190,4828350,4829391,4830478,4831681,4832701,4833910,4835027,4836048,4836944,4837865,4838575,4839255,4840006,4840554,4840756,4840805,4840850,4840895,4840940,4840988,4842748,4843336,4844066,4844929,4846110,4847458,4848626,4849575,4850631,4851607,4852632,4853325,4854119,4854878,4855898,4856855,4858027,4859169,4860305,4861538,4862815,4864013,4865253,4866611,4867965,4869352,4870699,4872005,4873312,4874447,4875367,4876097,4876599,4877119,4877704,4878513,4879445,4880241,4881065,4882009,4883050,4884000,4884892,4885935,4887181,4888218,4889235,4890213,4891288,4892485,4893460,4894768,4895477,4896535,4897716,4898504,4899695,4900659,4901643,4903107,4904526,4905755,4907088,4908408,4909920,4911342,4912859,4914514,4916266,4918071,4919893,4921725,4923464,4925215,4926926,4928524,4930270,4932013,4933650,4935277,4936903,4938574,4940075,4941594,4943276,4944963,4946504,4948091,4949688,4951276,4952802,4954178,4955334,4956405,4957896,4959459,4961022,4962607,4964180,4965573,4966930,4968355,4969885,4971675,4972385,4973201,4974270,4975354,4976528,4977862,4979269,4980571,4981881,4983414,4984827,4986021,4986738,4987721,4988940,4990277,4991665,4992903,4994117,4995306,4996475,4997652,4998863,5000079,5001351,5002549,5003887,5005285,5006512,5007795,5009157,5010480,5011829,5013117,5014378,5015590,5016799,5017760,5018752,5019968,5021102,5022399,5023603,5024883,5025801,5027078,5027990,5029019,5030589,5032398,5033981,5034757,5035626,5037052,5038496,5039308,5040099,5040978,5042056,5043145,5044155,5045200,5046243,5047483,5048843,5050476,5052123,5053800,5055396,5056811,5058210,5059635,5061205,5062895,5064499,5066192,5067827,5069450,5071023,5072571,5074070,5075546,5077279,5079119,5080989,5082844,5084663,5086392,5088103,5089466,5090832,5092199,5093585,5094869,5096091,5097006,5097597,5098808,5099852,5101116,5102139,5103108,5104220,5105023,5106248,5107294,5108195,5109029,5110131,5110988,5112246,5113629,5114796,5115434,5116007,5116670,5117224,5117798,5118397,5118959,5120086,5121334,5122154,5123124,5123947,5124742,5125555,5126362,5127151,5128111,5128992,5129903,5130876,5131705,5132609,5133512,5134454,5135485,5136430,5137340,5138343,5139043,5139707,5140294,5141068,5141814,5142652,5143557,5144437,5145255,5146116,5146903,5147740,5148609,5149624,5150401,5152010,5153826,5155638,5157451,5159499,5161556,5163604,5165652,5167700,5169748,5171796,5173844,5175892,5177940,5179988,5182036,5184084,5186132,5188186,5190234,5192282,5194330,5196378,5198426,5200474,5202531,5204431,5206268,5207987,5209728,5211452,5213184,5214932,5216850,5218745,5220793,5221150,5221197,5221242,5221286,5221331,5221381,5221428,5221473,5221517,5221562,5221612,5221659,5221875,5222629,5223743,5225160,5226545,5228085,5229658,5231079,5232594,5234167,5235796,5237471,5239186,5240936,5242686,5244348,5246070,5247696,5249341,5250978,5252624,5254212,5255813,5257213,5258533,5259826,5260938,5262081,5262906,5263377,5263708,5263915,5264047,5264096,5264144,5264189,5264235,5264283,5264332,5264379,5264424,5264469,5264517,5264566,5264612,5266082,5268130,5270178,5272226,5274274,5276322,5278370,5280418,5282466,5284514,5286562,5288610,5290658,5292706,5294754,5296802,5298850,5300898,5302946,5304994,5307042,5309090,5311138,5313186,5315234,5317282,5319330,5321378,5323433,5324805,5326003,5327186,5328407,5329675,5330794,5331963,5333089,5334346,5335574,5336819,5338108,5339295,5340662,5341881,5343366,5345073,5346638,5348159,5349535,5350910,5352425,5354006,5355440,5356802,5358422,5360058,5361613,5363104,5364571,5366161,5367564,5368922,5370288,5371773,5373233,5374716,5375945,5377154,5378497,5379740,5380998,5382135,5383192,5384047,5385116,5386173,5387289,5388247,5389041,5389743,5390517,5391327,5391959,5392586,5393248,5393834,5395763,5397385,5398531,5399608,5400729,5401737,5402924,5404261,5405599,5406727,5407939,5409143,5410399,5411716,5412998,5414593,5416118,5417896,5419693,5421400,5423149,5424914,5426512,5427943,5429495,5430950,5432351,5433942,5435527,5436992,5438452,5440078,5441654,5443310,5444807,5446480,5448020,5449431,5450704,5452088,5453293,5454405,5455530,5456541,5457540,5458563,5459434,5460443,5461430,5462446,5463501,5464449,5465293,5465955,5466493,5466950,5467373,5467741,5469212,5470518,5471213,5471906,5472522,5473175,5473868,5474562,5475220,5475877,5476520,5477177,5477883,5478563,5479817,5481396,5482915,5484467,5486046,5487716,5489325,5490872,5492360,5493767,5494787,5495615,5496951,5498415,5499879,5501441,5502943,5504404,5505918,5507336,5508634,5509742,5510749,5511950,5513359,5514883,5516346,5517786,5519267,5520654,5521864,5522787,5523493,5524192,5524848,5525508,5526165,5526891,5527551,5528218,5528920,5529601,5530288,5530970,5532218,5533861,5534563,5535229,5535908,5536597,5537253,5537932,5538595,5539276,5539980,5540659,5541334,5541994,5542878,5544343,5545961,5547567,5549220,5550919,5552598,5554154,5555639,5557070,5558453,5559800,5561163,5562361,5563693,5565025,5566354,5567611,5568875,5570151,5571329,5573011,5574698,5576324,5577930,5579592,5581183,5582706,5584079,5585174,5586163,5586933,5587646,5588298,5588947,5589667,5590311,5590976,5591640,5592310,5592993,5593665,5594308,5594931,5595833,5597865,5598632,5599027,5599549,5600188,5600828,5601580,5602490,5603326,5604296,5605361,5606408,5607574,5608928,5610425,5611954,5613527,5615103,5616667,5618171,5619628,5621059,5622544,5623978,5625413,5626902,5628361,5629805,5631237,5632614,5633833,5635243,5636690,5638123,5639711,5641327,5642878,5644326,5645649,5646736,5647902,5649192,5650423,5651665,5652890,5654025,5655154,5656186,5657140,5658143,5659182,5660188,5661173,5662041,5662887,5663566,5664137,5664545,5665859,5667037,5667353,5667876,5668450,5669104,5669800,5670590,5671496,5672417,5673439,5674461,5675593,5676835,5678186,5679716,5681352,5683035,5684766,5686420,5688029,5689518,5690951,5692313,5693607,5694932,5696299,5697690,5699140,5700564,5702056,5703561,5704974,5706405,5707832,5709313,5710748,5712296,5713988,5715622,5717137,5718456,5719758,5720979,5722223,5723447,5724614,5725859,5727064,5728157,5729228,5730243,5731215,5732086,5732932,5733635,5734281,5734780,5735774,5737429,5737784,5738266,5738840,5739468,5740167,5740990,5741870,5742767,5743820,5744878,5745926,5747316,5748852,5750344,5751810,5753361,5754884,5756368,5757667,5758946,5760275,5761683,5763006,5764399,5765776,5767196,5768566,5769827,5771198,5772559,5773929,5775263,5776594,5777927,5779224,5780603,5782129,5783689,5785312,5786724,5788205,5789615,5790988,5792191,5793388,5794644,5795870,5796979,5798058,5799093,5800079,5801034,5801916,5802671,5803356,5803894,5804357,5806405,5808368,5810416,5812377,5814383,5816392,5818438,5820403,5822451,5824499,5826461,5828255,5830073,5831763,5833235,5834939,5836939,5838987,5841035,5843083,5845131,5847179,5849227,5851275,5853323,5855371,5857419,5859467,5861515,5863563,5865611,5867659,5869707,5871755,5873803,5875851,5877899,5879947,5881995,5884043,5886091,5888022,5889081,5890007,5890758,5891651,5892644,5893570,5894460,5895234,5896208,5896951,5897925,5898733,5899608,5900438,5901251,5902255,5903040,5903840,5904720,5905501,5906549,5907622,5908518,5909502,5910467,5911628,5912714,5913692,5914970,5916082,5916793,5917378,5918871,5920085,5921362,5922632,5923542,5924121,5924704,5925248,5925780,5926284,5927340,5928330,5929364,5930216,5930716,5931239,5932028,5932542,5933189,5934354,5935193,5935843,5936544,5937286,5937908,5939040,5939939,5940959,5942077,5942831,5943484,5944027,5944568,5945115,5945821,5946588,5947378,5948199,5948789,5949447,5950308,5951309,5952442,5953340,5954126,5955159,5956185,5956833,5957748,5958688,5959649,5960346,5961319,5962280,5963251,5964160,5964685,5965131,5965931,5966738,5967610,5968052,5968652,5969625,5970247,5970921,5971558,5972226,5973183,5973949,5974751,5975411,5976042,5976623,5977894,5979690,5981353,5982858,5984278,5985721,5987100,5988598,5990155,5992182,5993927,5995685,5997207,5998661,6000069,6001446,6002998,6004662,6006709,6008311,6009953,6011698,6013348,6014990,6016639,6018381,6020157,6021955,6023718,6025436,6027136,6028456,6029675,6030872,6032237,6033838,6035440,6037127,6038908,6040670,6042416,6044129,6045847,6047585,6049336,6050986,6052733,6054391,6056163,6057910,6059586,6061356,6063134,6064833,6066605,6068362,6070156,6071803,6073380,6074955,6076429,6077714,6079047,6080366,6081887,6083407,6084982,6086610,6088195,6089809,6091482,6092963,6094468,6096121,6097721,6099358,6101406,6102851,6104257,6105738,6107287,6108791,6110243,6111791,6113268,6114732,6116243,6117858,6119466,6120857,6122461,6124143,6125797,6127478,6129251,6130988,6132628,6134353,6135925,6137494,6139003,6140562,6142152,6143758,6145333,6146944,6148574,6150171,6151726,6153279,6154899,6156505,6158141,6159739,6161365,6162917,6164502,6166102,6167749,6169361,6170926,6172218,6173418,6174900,6176386,6177832,6179147,6180616,6182152,6183743,6185371,6186812,6188193,6189691,6191643,6193191,6194433,6195641,6196862,6198090,6199325,6200588,6201838,6203085,6204354,6205643,6206984,6208481,6209761,6211049,6212328,6213640,6214963,6216250,6217552,6218772,6220065,6221334,6222573,6223835,6225099,6226324,6227558,6228809,6230053,6231285,6232497,6233674,6234890,6236114,6237329,6238589,6239815,6241065,6242301,6243558,6244820,6246091,6247368,6248682,6250250,6251544,6252816,6254099,6255429,6256750,6258072,6259321,6260548,6261842,6263143,6264377,6266071,6268047,6269778,6271547,6273323,6275113,6276915,6278699,6280470,6282236,6284025,6285806,6287544,6289267,6290947,6292666,6294336,6295976,6297595,6299165,6300826,6302453,6304096,6305657,6307325,6309038,6310746,6312475,6314220,6315950,6317757,6319533,6321294,6323038,6324788,6326533,6328144,6329826,6331514,6333145,6334836,6336479,6338153,6339886,6341565,6343273,6344999,6346754,6348462,6350244,6352028,6353791,6355516,6357255,6358979,6360724,6362498,6364275,6365823,6366818,6368389,6370443,6372491,6374539,6376587,6378635,6380683,6382731,6384779,6386827,6388875,6390923,6392971,6395019,6397067,6399115,6401163,6403211,6405259,6407307,6409355,6411403,6413460,6415508,6417556,6419604,6421652,6423700,6425748,6427796,6429844,6431892,6433940,6435988,6438036,6440084,6442132,6444180,6446228,6448276,6450324,6452372,6454420,6456468,6458516,6460564,6462612,6464660,6466708,6468756,6470804,6472852,6474900,6476948,6478996,6481044,6483092,6485140,6487188,6489236,6491284,6493332,6495380,6497428,6499476,6501524,6503572,6505620,6507677,6509725,6511773,6513821,6515869,6517917,6519965,6522013,6524061,6526109,6528157,6530205,6532253,6534301,6536349,6538397,6540445,6542493,6544541,6546589,6548637,6550685,6552733,6554781,6556829,6558877,6560925,6562973,6565021,6567069,6569117,6571165,6573213,6575261,6577309,6579357,6581405,6583453,6585501,6587549,6589597,6591645,6593693,6595741,6597789,6599837,6601885,6603933,6605981,6608029,6610077,6612125,6614173,6616221,6618269,6620317,6622365,6624413,6626461,6628509,6630557,6632605,6634653,6636701,6638749,6640797,6642845,6644893,6646941,6648989,6651037,6653085,6655133,6657181,6659229,6661277,6663325,6665373,6667421,6669469,6671517,6673565,6675613,6677661,6679709,6681757,6683805,6685853,6687901,6689949,6691997,6694045,6696093,6698141,6700189,6702237,6704285,6706333,6708381,6710429,6712477,6714525,6716573,6718621,6720669,6722717,6724765,6726813,6728861,6730909,6732957,6735005,6737053,6739101,6741149,6743197,6745245,6747293,6749341,6751389,6753437,6755485,6757533,6759581,6761629,6763677,6765725,6767773,6769821,6771869,6773917,6775965,6778013,6780061,6782109,6784157,6786205,6788253,6790301,6792349,6794397,6796445,6798493,6800541,6802589,6804637,6806685,6808733,6810781,6812829,6814877,6816925,6818973,6821021,6823069,6825117,6827165,6829213,6831261,6833309,6835357,6837405,6839453,6841501,6843549,6845597,6847645,6849693,6851741,6853789,6855837,6857885,6859933,6861981,6864029,6866077,6868125,6870173,6872221,6874269,6876317,6878365,6880413,6882461,6884509,6886557,6888605,6890653,6892701,6894749,6896797,6898845,6900893,6902941,6904989,6907037,6909085,6911133,6913181,6915229,6917277,6919325,6921373,6923421,6925469,6927517,6929565,6931613,6933661,6935709,6937757,6939805,6941853,6943901,6945949,6947997,6950045,6952093,6954141,6956189,6958237,6960285,6962333,6964381,6966429,6968477,6970525,6972573,6974621,6976669,6978717,6980765,6982813,6984861,6986909,6988957,6991005,6993053,6995101,6997149,6999197,7001245,7003293,7005341,7007389,7009437,7011485,7013533,7015581,7017629,7019677,7021725,7023773,7025821,7027869,7029917,7031965,7034013,7036061,7038109,7040157,7042205,7044253,7046301,7048349,7050397,7052445,7054493,7056541,7058589,7060637,7062685,7064733,7066781,7068829,7070877,7072925,7074973,7077021,7079069,7081117,7083165,7085213,7087261,7089309,7091357,7093405,7095453,7097501,7099549,7101597,7103645,7105693,7107741,7109789,7111837,7113885,7115933,7117981,7120029,7122077,7124125,7126173,7128221,7130269,7132317,7134365,7136413,7138461,7140509,7142557,7144605,7146653,7148701,7150749,7152797,7154845,7156893,7158941,7160989,7163037,7165085,7167133,7169181,7171229,7173277,7175325,7177382,7179430,7181478,7183526,7185574,7187622,7189670,7191718,7193766,7195814,7197862,7199910,7201958,7204006,7206054,7208102,7210150,7212207,7214255,7216303,7218351,7220399,7222456,7224504,7226552,7228600,7230648,7232696,7234744,7236792,7238840,7240888,7242936,7244984,7247032,7249080,7251128,7253176,7255224,7257272,7259320,7261368,7263416,7265464,7267512,7269560,7271608,7273656,7275704,7277752,7279800,7281848,7283896,7285944,7287992,7290040,7292088,7294136,7296184,7298232,7300280,7302328,7304231,7304880,7305521,7306069,7306656,7307270,7307881,7308543,7309205,7309818,7310361,7310994,7312182,7313006,7313514,7314092,7314747,7315279,7315668,7316067,7316522,7318136,7319880,7321354,7322413,7323409,7324522,7325825,7327274,7328850,7329962,7331220,7332989,7334305,7335367,7336780,7337224,7337627,7338087,7338535,7339078,7339584,7340077,7340500,7340817,7341122,7341389,7341673,7342042,7343620,7345584,7347281,7349001,7350533,7352341,7353284,7354356,7355275,7356195,7357233,7358260,7359332,7360389,7361549,7362214,7363271,7364204,7365021,7366106,7367408,7368204,7369541,7370668,7371710,7372578,7373651,7374728,7375805,7377061,7378020,7378989,7379893,7381203,7381826,7382950,7384033,7385328,7386412,7387483,7388514,7389316,7390357,7391440,7392565,7393460,7394404,7395607,7395923,7396240,7396555,7397569,7398624,7399880,7400669,7401966,7402880,7404687,7405621,7407569,7409505,7410974,7412483,7414024,7415577,7417163,7418783,7420407,7422065,7423741,7425361,7427013,7428708,7430284,7431944,7433574,7435173,7436807,7438447,7440175,7441892,7443579,7445337,7447078,7448841,7450520,7452210,7453984,7455788,7457598,7459403,7461256,7463157,7465060,7466937,7468823,7470688,7472453,7474242,7476064,7477867,7479688,7481493,7483283,7485094,7486842,7488587,7490129,7491698,7493346,7494954,7496508,7497944,7499449,7501053,7502645,7504370,7506040,7508088,7509485,7510866,7512340,7513889,7515369,7516839,7518371,7519853,7521312,7522842,7524464,7526058,7527449,7529069,7530739,7532374,7534071,7535853,7537572,7539240,7540942,7542512,7544103,7545602,7547173,7548782,7550391,7551972,7553590,7555210,7556798,7558348,7559901,7561541,7563140,7564778,7566360,7567986,7569567,7571148,7572758,7574415,7576029,7577603,7578850,7580068,7581552,7583048,7584456,7585792,7587275,7588804,7590418,7592027,7593465,7594852,7596344,7598347,7599266,7599860,7600594,7601093,7601708,7602435,7603274,7603959,7604970,7605913,7607033,7607956,7609147,7610416,7611664,7612966,7614301,7615644,7617006,7618388,7619796,7621247,7622630,7624047,7625527,7627094,7628529,7629962,7631409,7632708,7633751,7634742,7635607,7636829,7638108,7639360,7640596,7641624,7642697,7643691,7644653,7645724,7646545,7647491,7648530,7649402,7650122,7650968,7651898,7652736,7653238,7653903,7654711,7655363,7656073,7656709,7657311,7658786,7660159,7660917,7661676,7662605,7663569,7664611,7665727,7666793,7667934,7669053,7670131,7671070,7671888,7672623,7673672,7675021,7676326,7677758,7679185,7680700,7682188,7683704,7685048,7686522,7688061,7689692,7691237,7692756,7694330,7695983,7697726,7699389,7700926,7702410,7703958,7705531,7707016,7708502,7709955,7711217,7712505,7713719,7714802,7715756,7716767,7717812,7718907,7719967,7721144,7722376,7723608,7724687,7725676,7726512,7727250,7728087,7728879,7729683,7730799,7732420,7734463,7736511,7738559,7740607,7742655,7744703,7746751,7748799,7750847,7752895,7754943,7756991,7759039,7761087,7763135,7765183,7767231,7769279,7771327,7773375,7775423,7777471,7779519,7781567,7783615,7785663,7787711,7789759,7791807,7793855,7795903,7797951,7799999,7802047,7804095,7806143,7808191,7810239,7812287,7814335,7816383,7818431,7820479,7822527,7824575,7826623,7828671,7830719,7832767,7834815,7836863,7838911,7840959,7843007,7845055,7847103,7849151,7851199,7853247,7855295,7857343,7859391,7861439,7863487,7865535,7867583,7869631,7871679,7873727,7875775,7877823,7879871,7881919,7883967,7886015,7888063,7890111,7892159,7894207,7896255,7898303,7900351,7902399,7904447,7906495,7908543,7910591,7912639,7914687,7916735,7918783,7920831,7922879,7924927,7926975,7929023,7931071,7933119,7935167,7937215,7939263,7941311,7943359,7945407,7947455,7949503,7951551,7953599,7955647,7957695,7959674,7960937,7962259,7963439,7964340,7964834,7965233,7966502,7967232,7968303,7969403,7970511,7971404,7972037,7973519,7975081,7976422,7977828,7979219,7980575,7981909,7983021,7984166,7985350,7986467,7987768,7989196,7990532,7991860,7993091,7994322,7995507,7996689,7997838,7999210,8000677,8002061,8003450,8004772,8006000,8007260,8008666,8010157,8011782,8013403,8014956,8016509,8018096,8019648,8021195,8022728,8024219,8025746,8027215,8028664,8030057,8031413,8032777,8034774,8036822,8038879,8040927,8042975,8045028,8047081,8048966,8051014,8053062,8055110,8057158,8059206,8061254,8063302,8065350,8067398,8069446,8071494,8073542,8075590,8077638,8079686,8081734,8083782,8085830,8087878,8089926,8091974,8094029,8096077,8098128,8100182,8102231,8104263,8106309,8108316,8110229,8112281,8114329,8116377,8118425,8120473,8122521,8124569,8126617,8128665,8130713,8132761,8134809,8136857,8138905,8140953,8143001,8145049,8147097,8149145,8151193,8153241,8155289,8157337,8159385,8161433,8163481,8165529,8167577,8169625,8171673,8173721,8175769,8177817,8179865,8181913,8183961,8186009,8188057,8190105,8192153,8194201,8196249,8198297,8200345,8202393,8204441,8206489,8208537,8210585,8212633,8214681,8216729,8218777,8220825,8222873,8224921,8226969,8229017,8231065,8233113,8235161,8237209,8239257,8241305,8243353,8245401,8247449,8249497,8251545,8253593,8255641,8257689,8259737,8261785,8263833,8265881,8267929,8269977,8272025,8274073,8276121,8278169,8279959,8281287,8282717,8284129,8285519,8286893,8288293,8289783,8291233,8292872,8294561,8296136,8297578,8299013,8300359,8301768,8303402,8305130,8306892,8308600,8310240,8311769,8313224,8314705,8316359,8318018,8319676,8321330,8322975,8324554,8326072,8327601,8329400,8331448,8333496,8335522,8337554,8339611,8341641,8343661,8345685,8347719,8349767,8351764,8353812,8355843,8357863,8359911,8361960,8364006,8366054,8368099,8370137,8372164,8374046,8376094,8378146,8380192,8381890,8383211,8384867,8386476,8388064,8389727,8390773,8390986,8391205,8391418,8391634,8391847,8392224,8392446,8392665,8392879,8393121,8393342,8394101,8396028,8397304,8398536,8399830,8401167,8402345,8403494,8404663,8405842,8407043,8408236,8409461,8410596,8411687,8413501,8415548,8416438,8417225,8419282,8420896,8421559,8422873,8424921,8426264,8426854,8428543,8430598,8431467,8432383,8433247,8434231,8435120,8436024,8436954,8437909,8438827,8439481,8440432,8441276,8442021,8443007,8443921,8444878,8445915,8446897,8447910,8448667,8449684,8450604,8451827,8452856,8453923,8454951,8455883,8456920,8458072,8459308,8460440,8461237,8462036,8462438,8462806,8463814,8464887,8465885,8466804,8467332,8467682,8468033,8468443,8468824,8469213,8469784,8470330,8471740,8472933,8473836,8475058,8476460,8477964,8479568,8480913,8482287,8483369,8484630,8486175,8487619,8488849,8490044,8491295,8492751,8494206,8495764,8497253,8498504,8499641,8500783,8502165,8503593,8505043,8506613,8508053,8509151,8510306,8511496,8512950,8514369,8515913,8517505,8518641,8519852,8520992,8522322,8523788,8525237,8526780,8528292,8529248,8530445,8531593,8533024,8534504,8536040,8537568,8538600,8539900,8541060,8542484,8543818,8545181,8546045,8546636,8547204,8547914,8548508,8549104,8549690,8550274,8551064,8551955,8552844,8553707,8554387,8555316,8556277,8557088,8557746,8558741,8559471,8560379,8560827,8561553,8562326,8563121,8563835,8564609,8565341,8566098,8566828,8567558,8568210,8568920,8569415,8570155,8570767,8571432,8572141,8572813,8573601,8574255,8574777,8575411,8576061,8576717,8577321,8577761,8578335,8578803,8579242,8579992,8580633,8581516,8582015,8582464,8583353,8584264,8585266,8586387,8586952,8587439,8587933,8588689,8589464,8590314,8590983,8591637,8592280,8593029,8594194,8595140,8596276,8597043,8597558,8598458,8599253,8599870,8600480,8601151,8601993,8602680,8603195,8603718,8604546,8605262,8606053,8607092,8607999,8608828,8609676,8610223,8611065,8611925,8612773,8613689,8614579,8615451,8616307,8617153,8618107,8618848,8619659,8620515,8621343,8622116,8622957,8624014,8624889,8625828,8626759,8627672,8628590,8629517,8630450,8631368,8632291,8633214,8634160,8635132,8636113,8637091,8638066,8639032,8640040,8640893,8641711,8642433,8643236,8644151,8644983,8645785,8646604,8647426,8648165,8649016,8649869,8650734,8651475,8652283,8652838,8653686,8654354,8655034,8655577,8656966,8657789,8658519,8659720,8661526,8663300,8665058,8666960,8668810,8670858,8672906,8674954,8676914,8678326,8679827,8681678,8683571,8685619,8687497,8689267,8691311,8693305,8695184,8697038,8699086,8701134,8703173,8705049,8706855,8708887,8710758,8712573,8714593,8716523,8718448,8719950,8721117,8722032,8722534,8723068,8724479,8726457,8728477,8730238,8731703,8732937,8734120,8735157,8737073,8739067,8740452,8741652,8742886,8743678,8745574,8746869,8748373,8749853,8750478,8750627,8750855,8752401,8754449,8756497,8758545,8760593,8762641,8764689,8766737,8768785,8770833,8772881,8774929,8776977,8779025,8780954,8782579,8784322,8786370,8788418,8790466,8792514,8794562,8796610,8798658,8800064,8800089,8801441,8803434,8805482,8807530,8809565,8811161,8812874,8814722,8816770,8818799,8820649,8822697,8824745,8826793,8828841,8830874,8832724,8834772,8836820,8838672,8840720,8842768,8844765,8846813,8848861,8850903,8852954,8854997,8856915,8858423,8859978,8861793,8863842,8865890,8867938,8869986,8872034,8874082,8876130,8878178,8879590,8880692,8881675,8882979,8884162,8885489,8886557,8888113,8889652,8890924,8892150,8893393,8894630,8895635,8896780,8897828,8898862,8900056,8901340,8903213,8905124,8907009,8908868,8910801,8912082,8913834,8915556,8917193,8918901,8920203,8921552,8922636,8923605,8924807,8925950,8926924,8927983,8929079,8930092,8931738,8932845,8933834,8934990,8936286,8937545,8938795,8940601,8942579,8944636,8946668,8948700,8950730,8952778,8954814,8956848,8958885,8960925,8962982,8964953,8966994,8968982,8971030,8973065,8975045,8977093,8979072,8981129,8983169,8985139,8987187,8989217,8991208,8993248,8995272,8997302,8999350,9001324,9003381,9005415,9007397,9009454,9011496,9013469,9015517,9017553,9019579,9021627,9023670,9025697,9027745,9029770,9031764,9033790,9035792,9037836,9039884,9041911,9043959,9046016,9048073,9050129,9052177,9054225,9056273,9058321,9060369,9062267,9064315,9066363,9068411,9070459,9072507,9074555,9076603,9078651,9080699,9082747,9084640,9086688,9088736,9090784,9092832,9094880,9096928,9098976,9101024,9102917,9104965,9107013,9109061,9111109,9113157,9115205,9117107,9119155,9121203,9123251,9125299,9127347,9129395,9131443,9133334,9135382,9137430,9139478,9141526,9143574,9145622,9147520,9149568,9151616,9153664,9155712,9157760,9159808,9161856,9163756,9165804,9167852,9169900,9171948,9173996,9176044,9178092,9180140,9182188,9184211,9185650,9187524,9189127,9190880,9192361,9193396,9194908,9196891,9198940,9200988,9202994,9204982,9206978,9208917,9210800,9212774,9214772,9216780,9218736,9220784,9222455,9223687,9225414,9226519,9228366,9230017,9231630,9232714,9233873,9234887,9236023,9237594,9239081,9240560,9242039,9243046,9243687,9244364,9245053,9245773,9246473,9247161,9247773,9248232,9248799,9249345,9249958,9251951,9253647,9255339,9257037,9258749,9260475,9262333,9264098,9265819,9267472,9268185,9269831,9271501,9273114,9274616,9276094,9277394,9277953,9278258,9278602,9279062,9279592,9279908,9280381,9281493,9283334,9285032,9286707,9288387,9290276,9292081,9293864,9295038,9296801,9298279,9299745,9301255,9302404,9302771,9303267,9303873,9304380,9304744,9305126,9305711,9306260,9306627,9308548,9310212,9311890,9313575,9315241,9317163,9318945,9320705,9322372,9323607,9325331,9326848,9328329,9329803,9331289,9332575,9333146,9333770,9334342,9334957,9335393,9336041,9336497,9337168,9337662,9338219,9338849,9339192,9339331,9341346,9343123,9344825,9346516,9348188,9349881,9351560,9353546,9355312,9357047,9358756,9360348,9361186,9362977,9364704,9366288,9367780,9369264,9370756,9371354,9371928,9372524,9373130,9373650,9374274,9374844,9375376,9376002,9376583,9377131,9377857,9379869,9381541,9383232,9384890,9386569,9388252,9390184,9391887,9393615,9395307,9396919,9397547,9399268,9400910,9402498,9403991,9405488,9406970,9407784,9408400,9408933,9409545,9409915,9410420,9410991,9411591,9412173,9412615,9413041,9413572,9415536,9417208,9418910,9420581,9422227,9423922,9425767,9427557,9429284,9430923,9431835,9433362,9435078,9436664,9438145,9439640,9440196,9440701,9441176,9441539,9442062,9442581,9443010,9443508,9445004,9446656,9448310,9449955,9451685,9453434,9455157,9456845,9457926,9459496,9461044,9462515,9463991,9465457,9466942,9468422,9469284,9469930,9470492,9471080,9471638,9472319,9472778,9473471,9474015,9474635,9475232,9475920,9476495,9477258,9477970,9478555,9479243,9479833,9480512,9481049,9481417,9483261,9485152,9486805,9488512,9490206,9491885,9493563,9495260,9496969,9498671,9500396,9502425,9504046,9505823,9507507,9509283,9511145,9512931,9514348,9514987,9515826,9517339,9519140,9520915,9522622,9524334,9525832,9527305,9528785,9530252,9531467,9532060,9532451,9533035,9533567,9534099,9534766,9535321,9535889,9536354,9536870,9537391,9537924,9538444,9538905,9540737,9542560,9544275,9545968,9547662,9549351,9551036,9552782,9554729,9556420,9558206,9559969,9561710,9562503,9563177,9565107,9566954,9568645,9570252,9571735,9573212,9574701,9576180,9577183,9577854,9578490,9579132,9579719,9580286,9580873,9581374,9581972,9582659,9583131,9583627,9584142,9584580,9585108,9586221,9588179,9589875,9591556,9593253,9594936,9596651,9598362,9600316,9602063,9603727,9605494,9607295,9609062,9609980,9610925,9612960,9614684,9616356,9617832,9619317,9620812,9622290,9623236,9623708,9624347,9624917,9625521,9626089,9626601,9626963,9627252,9627438,9627662,9627895,9628116,9628916,9630945,9632704,9634407,9636110,9637820,9639552,9641295,9643169,9645066,9646832,9648578,9650387,9652173,9653663,9655029,9656637,9658227,9659701,9661109,9661775,9662362,9663080,9663697,9664850,9666544,9668205,9670019,9671208,9672945,9674418,9675881,9677368,9677981,9678565,9679187,9679761,9680237,9680726,9681180,9681612,9682163,9684029,9685703,9687373,9689034,9690834,9692514,9694207,9695571,9696738,9698520,9700055,9701518,9702993,9704465,9705247,9705794,9706371,9706946,9707449,9708061,9708625,9709094,9709554,9710193,9710735,9711917,9713786,9715453,9717128,9718811,9720492,9722388,9724029,9725789,9727534,9728765,9729804,9731707,9733430,9734886,9736361,9737805,9738517,9739034,9739467,9739905,9740463,9740914,9741256,9741554,9741865,9742383,9743657,9745462,9747137,9748809,9750463,9752122,9754002,9755673,9757388,9759046,9760010,9761435,9763234,9764725,9766179,9767627,9769039,9769327,9769644,9770016,9770414,9770857,9771295,9771667,9771951,9772351,9772816,9773068,9774192,9776001,9777624,9779281,9780950,9782618,9784476,9786168,9787810,9789515,9790526,9792176,9793824,9795304,9796797,9797841,9798301,9798757,9799289,9799906,9800550,9801160,9801784,9802363,9803014,9804922,9806582,9808241,9809895,9811670,9813391,9815068,9816814,9818043,9819558,9821278,9822759,9824244,9825734,9827212,9828129,9828599,9829142,9829662,9830274,9830841,9831428,9831991,9832445,9832891,9833435,9833861,9834337,9835670,9837512,9839172,9840852,9842526,9844192,9845863,9847738,9849481,9851134,9852837,9854598,9855703,9856629,9858565,9860271,9861845,9863321,9864802,9866299,9867769,9869269,9870748,9872248,9873730,9875082,9875666,9876404,9877100,9877603,9878335,9878816,9879558,9880227,9880770,9881307,9881908,9882534,9883212,9883877,9884529,9885087,9885751,9886149,9886711,9887351,9888093,9888695,9889069,9889631,9890136,9890556,9890818,9891159,9892864,9894891,9896778,9898508,9900230,9901947,9903612,9905316,9906987,9908684,9910373,9912071,9913753,9915445,9917308,9919362,9921046,9922778,9924482,9926150,9927799,9929553,9931220,9932898,9934645,9935632,9936343,9937311,9939175,9941073,9942405,9942683,9943717,9944159,9945348,9947044,9948735,9950276,9951776,9953269,9954794,9956303,9957806,9959296,9960775,9962252,9963739,9965104,9965777,9966545,9967354,9967876,9968583,9969262,9969952,9970717,9971422,9972034,9972717,9973395,9973965,9974666,9975340,9976003,9976733,9977432,9978058,9978564,9979051,9979622,9980065,9980240,9980579,9981018,9981615,9981963,9982432,9982620,9982789,9983187,9985240,9987252,9989155,9990846,9992541,9994241,9995912,9997568,9999260,10000961,10002640,10004313,10005963,10007635,10009339,10011035,10012756,10014804,10016731,10018486,10020198,10021948,10023649,10025345,10027028,10028694,10030316,10031981,10033697,10035334,10036336,10037115,10038769,10040638,10042487,10044152,10045954,10047672,10049155,10050647,10052117,10053612,10054541,10055077,10055650,10056214,10056738,10057208,10057674,10058164,10058556,10059110,10059362,10059747,10060375,10060835,10062839,10064553,10066248,10067895,10069578,10071266,10072979,10074889,10076534,10078247,10079989,10081636,10082416,10084207,10085918,10087487,10088900,10090361,10091828,10093327,10094828,10096324,10097793,10099290,10100187,10100865,10101461,10102094,10102635,10103278,10103925,10104654,10105293,10105998,10106475,10107066,10107794,10108441,10109065,10109765,10110456,10110862,10111487,10112077,10112731,10113264,10113676,10114263,10114967,10116996,10118965,10120661,10122339,10124010,10125704,10127401,10129107,10130795,10132453,10134135,10135841,10137854,10139688,10141366,10143029,10144724,10146414,10148100,10149829,10151605,10152715,10153614,10155219,10156943,10158484,10160154,10161796,10163428,10164870,10166338,10167819,10169304,10170789,10171864,10172420,10172929,10173429,10174041,10174742,10175370,10176032,10176625,10177322,10177926,10178430,10178923,10179566,10180278,10180821,10181172,10181988,10184000,10185752,10187432,10189095,10190773,10192473,10194152,10195820,10197574,10199527,10201205,10202923,10204682,10206436,10208152,10209575,10210673,10212501,10214301,10216000,10217483,10218978,10220471,10221964,10223474,10224945,10226431,10227932,10229427,10230942,10232454,10233952,10235196,10235703,10236433,10237073,10237651,10238291,10238890,10239447,10240053,10240722,10241301,10241853,10242507,10243106,10243695,10244185,10244807,10245402,10245885,10246416,10247063,10247531,10248043,10248637,10249256,10249818,10250429,10250911,10251475,10252040,10252602,10253237,10253799,10254345,10254862,10255312,10255812,10256301,10256924,10257431,10258106,10260163,10262205,10264257,10266052,10267769,10269486,10271193,10272914,10274619,10276324,10278025,10279724,10281450,10283163,10284872,10286576,10288283,10289994,10291710,10293421,10295203,10297251,10299252,10300932,10302704,10304425,10306143,10307847,10309567,10311289,10313014,10314716,10316466,10318221,10319957,10320986,10321875,10322772,10323629,10325050,10326707,10328362,10329901,10331489,10333065,10334571,10335643,10336582,10337810,10339586,10341339,10343126,10344603,10346073,10347556,10349051,10350533,10351319,10352000,10352700,10353302,10353762,10354111,10354514,10354985,10355298,10355715,10356208,10356676,10357070,10358770,10360626,10362321,10364011,10365689,10367378,10369056,10370952,10372707,10374426,10376167,10377864,10379174,10380478,10382253,10383912,10385385,10386859,10388103,10388706,10389149,10389557,10390054,10390301,10390627,10391099,10391493,10393147,10394820,10396490,10398161,10399940,10401726,10403414,10405065,10406288,10408020,10409512,10410989,10412459,10413922,10415306,10415907,10416465,10417055,10417660,10418228,10418801,10419365,10419972,10420527,10420854,10421278,10421768,10422184,10422947,10424873,10426523,10428181,10429845,10431504,10433166,10434829,10436749,10438409,10440094,10441811,10443479,10443981,10444535,10445945,10447253,10448806,10450410,10451898,10453382,10454173,10454336,10454697,10455091,10455419,10455679,10456067,10456376,10457628,10459312,10460944,10462602,10464421,10466061,10467692,10468738,10470204,10471764,10473207,10474666,10475632,10476182,10476717,10477155,10477706,10478209,10478633,10480305,10481983,10483635,10485409,10487145,10488552,10489990,10491593,10493076,10494566,10496035,10497485,10498972,10500454,10501655,10502350,10502948,10503545,10504162,10504714,10505131,10505668,10506269,10506681,10507143,10507560,10508146,10508641,10509097,10509550,10509953,10510343,10510678,10511089,10512931,10514842,10516503,10518174,10519867,10521570,10523267,10524962,10526621,10528272,10530127,10531973,10533687,10535485,10537164,10538878,10540538,10541971,10542788,10544045,10545684,10547154,10548723,10550414,10552000,10553472,10554966,10556445,10557647,10558092,10558446,10558940,10559399,10559879,10560154,10560519,10561042,10561513,10561968,10562307,10562661,10563105,10564518,10566338,10567987,10569649,10571309,10572960,10574630,10576431,10578209,10579878,10581580,10583233,10584216,10584897,10586380,10588061,10589685,10591164,10592642,10593315,10593835,10594251,10594470,10594848,10595346,10595514,10597176,10598862,10600560,10602338,10604127,10605896,10607398,10608741,10610588,10612645,10614696,10616724,10618776,10620689,10622257,10623844,10625305,10626460,10627298,10628093,10628833,10629717,10630627,10631523,10633560,10635567,10637564,10639487,10641344,10642595,10643737,10645235,10646420,10647775,10648547,10649684,10650751,10651502,10652491,10653570,10654787,10655639,10656659,10657799,10658829,10659876,10660870,10661824,10662957,10664080,10665173,10666037,10666925,10667916,10668843,10669749,10670752,10671569,10672586,10673510,10674403,10675461,10676470,10677470,10678480,10679528,10680537,10681449,10682344,10683265,10684282,10685122,10686109,10687114,10688013,10688994,10689897,10690787,10691806,10692743,10693771,10694690,10695624,10696809,10697809,10698874,10699939,10700893,10701988,10703019,10704170,10705254,10706425,10707546,10708658,10709764,10710882,10711963,10713180,10714328,10715381,10716410,10717461,10718157,10719187,10720326,10721460,10722541,10723490,10724623,10725783,10726914,10727996,10729027,10730093,10731164,10732172,10733415,10734614,10735655,10736627,10737735,10738895,10739944,10741120,10742318,10743427,10744606,10745613,10746753,10747998,10749108,10750308,10751381,10752520,10753764,10754855,10755919,10757097,10758262,10759421,10761311,10763283,10764330,10765362,10766433,10767359,10768313,10769413,10770509,10771510,10772532,10773552,10774718,10775611,10776687,10777706,10778598,10779618,10780469,10781359,10782080,10782875,10783728,10785091,10786498,10788089,10789415,10791253,10793273,10795321,10797378,10799048,10800709,10802735,10804783,10806831,10808879,10810586,10812640,10814664,10816275,10818301,10820349,10822405,10824453,10826501,10828549,10830597,10832645,10834673,10836705,10838760,10840775,10842823,10844859,10846839,10848730,10850519,10852195,10854243,10856291,10858339,10860387,10862435,10864483,10866531,10868579,10870635,10872683,10874731,10876772,10878728,10880663,10882475,10884157,10885418,10887454,10889421,10891140,10892996,10895014,10897067,10899119,10901167,10903215,10905272,10907320,10909368,10911416,10913464,10915512,10917560,10919608,10921656,10923713,10925510,10926665,10928241,10930298,10932346,10934394,10936442,10938490,10940538,10942586,10944634,10946682,10948730,10950778,10952826,10954874,10956922,10958970,10961018,10963066,10965114,10967170,10969136,10970775,10972832,10974880,10976937,10978943,10980701,10982185,10983495,10984617,10985526,10986110,10987135,10989183,10991231,10993287,10995335,10997383,10999440,11001496,11003553,11005610,11007652,11009244,11010492,11011702,11013750,11015797,11017796,11019694,11021512,11023124,11024514,11025533,11026300,11026711,11026872,11027975,11030018,11032066,11034119,11036176,11038224,11040272,11042328,11044376,11046424,11048481,11050538,11052586,11054628,11056528,11058235,11059802,11061181,11062815,11064863,11066911,11068959,11071007,11073055,11075103,11077151,11079199,11081247,11083297,11085353,11087375,11089387,11091187,11092802,11094129,11094870,11096601,11098404,11100431,11102451,11104508,11106564,11108594,11110462,11111998,11113025,11114530,11116578,11118626,11120683,11122404,11124452,11126500,11128486,11129956,11130018,11130184,11130287,11130312,11131988,11134036,11136084,11138132,11140187,11142244,11144299,11146355,11148361,11150318,11152366,11154414,11156462,11158469,11160517,11162565,11164613,11166661,11168717,11170765,11172813,11174861,11176918,11178963,11180696,11182388,11184396,11186184,11188119,11189806,11191863,11193705,11195109,11196451,11198182,11200172,11202222,11204279,11206336,11208382,11210436,11212397,11214116,11215183,11215212,11217175,11219223,11221279,11223327,11225381,11227429,11229486,11231543,11233600,11235637,11237669,11239629,11241482,11243401,11245223,11246855,11248903,11250951,11252999,11255047,11257095,11259143,11261191,11263239,11265142,11267190,11269247,11271295,11273352,11275400,11277448,11279496,11281544,11283150,11285191,11287151,11289121,11290324,11292130,11294186,11296241,11298205,11299838,11301834,11303882,11305930,11307978,11310031,11312079,11314127,11316175,11318223,11320261,11321885,11323201,11325080,11327062,11329071,11331100,11333149,11335187,11337221,11339249,11341301,11343353,11345406,11347457,11349483,11351479,11353439,11355406,11357431,11359479,11361530,11363576,11365630,11367643,11369680,11371711,11373754,11375802,11377839,11379882,11381890,11383750,11385480,11386993,11388374,11389604,11390852,11392050,11393209,11394211,11395309,11396398,11397361,11398355,11399151,11400071,11400983,11401713,11402323,11402808,11403194,11403400,11403575,11403635,11403685,11404486,11406534,11408572,11410623,11412671,11414692,11416479,11418212,11419677,11420639,11422042,11424090,11426138,11428186,11430234,11432124,11434172,11436220,11438268,11440234,11442282,11444330,11446378,11448379,11450435,11452491,11454539,11456596,11458646,11460699,11462747,11464802,11466834,11468877,11470931,11472940,11474866,11476780,11478542,11480316,11482057,11483686,11485741,11487789,11489838,11491895,11493947,11495996,11498052,11499819,11501874,11503922,11505970,11508026,11510081,11512134,11514191,11516193,11518166,11520222,11522249,11524113,11525589,11527645,11529702,11531627,11533080,11535123,11537171,11539219,11541267,11543315,11545363,11547411,11549459,11551503,11553489,11555262,11556965,11558454,11559821,11561051,11562185,11564131,11566179,11568227,11570283,11572339,11574335,11576173,11577680,11578313,11578829,11580033,11581632,11583427,11585373,11587305,11589254,11591205,11593195,11595023,11596695,11598148,11599427,11600304,11600772,11601572,11603451,11605485,11607407,11608675,11609591,11611639,11613687,11615735,11617783,11619831,11621879,11623927,11625975,11627960,11629963,11632011,11633980,11635681,11636997,11637860,11639908,11641921,11643555,11644894,11646920,11648968,11651016,11653067,11655115,11657172,11659229,11661270,11663292,11665261,11666764,11668781,11670829,11672258,11672850,11674819,11676867,11678915,11680963,11683011,11685059,11687116,11689115,11690860,11692909,11694966,11697014,11699062,11701110,11703158,11705206,11706696,11707803,11709433,11711403,11713449,11715505,11717562,11719468,11720648,11722592,11724397,11726445,11728493,11730541,11732597,11734627,11736635,11738244,11739471,11740353,11741015,11741439,11741782,11741948,11742715,11744763,11746811,11748859,11750907,11752955,11755003,11757051,11759099,11761147,11763195,11765243,11767291,11769339,11771387,11773435,11775483,11777531,11779381,11780897,11782945,11784993,11787041,11789089,11791137,11793185,11795233,11797147,11797474,11798205,11799760,11801554,11803592,11805640,11807688,11809736,11811784,11813832,11815880,11817928,11819976,11822024,11824030,11825748,11827320,11828717,11830036,11831183,11832175,11833208,11833981,11834687,11835579,11836546,11837242,11838501,11840407,11842455,11844503,11846551,11848599,11850647,11852695,11854743,11856791,11858839,11860887,11862935,11864983,11867035,11868592,11869610,11870274,11871112,11873144,11875192,11877240,11879288,11881224,11882519,11884576,11886500,11888110,11889197,11890037,11890745,11891287,11893120,11895158,11896758,11897441,11898673,11900559,11902498,11904533,11906586,11908639,11910688,11912727,11914766,11916457,11918183,11919974,11921918,11923803,11925851,11927899,11929947,11931995,11934043,11936100,11938157,11940205,11942246,11944145,11945761,11946925,11947573,11948762,11950698,11952746,11954794,11956842,11958890,11960938,11962986,11965034,11967082,11969120,11970983,11972599,11973921,11974779,11975507,11975747,11977018,11979068,11981099,11983040,11984947,11986621,11988339,11990308,11992356,11994269,11995897,11997261,11998982,12000664,12002567,12004611,12006659,12008576,12010134,12011642,12013475,12015407,12017061,12019117,12021038,12022813,12024521,12025879,12027118,12028317,12030351,12032371,12034403,12036321,12038322,12040319,12042227,12044275,12046332,12048387,12050377,12051643,12052442,12054433,12056481,12058529,12060577,12062625,12064496,12065074,12067003,12069060,12071108,12073156,12075209,12075976,12076900,12078948,12080996,12083044,12085092,12087140,12089196,12091253,12093176,12095224,12096980,12098756,12100804,12102583,12104640,12106688,12108448,12110344,12112400,12114220,12115501,12116960,12118981,12119752,12121266,12123314,12125362,12127410,12129313,12129833,12129936,12130559,12132403,12134460,12136508,12138565,12140622,12142670,12144718,12146612,12148660,12150708,12152738,12154715,12156765,12158739,12160787,12162843,12164886,12166941,12168977,12171025,12172875,12174915,12176543,12178530,12179934,12181887,12183161,12184689,12186315,12188021,12189376,12190688,12192348,12194403,12196198,12198148,12200196,12202244,12204301,12206358,12208120,12209371,12210288,12211061,12213116,12214595,12215894,12217860,12219908,12221956,12224004,12226052,12228100,12230148,12232196,12234244,12236292,12238346,12240361,12242242,12243912,12245378,12246673,12247655,12248416,12250448,12252496,12254544,12256592,12258640,12260688,12261306,12262883,12264923,12266969,12269017,12270916,12272873,12274918,12276973,12279021,12281078,12283126,12285183,12287237,12289269,12291162,12292745,12293947,12294325,12296247,12298295,12300343,12302391,12304348,12304950,12305222,12307035,12309090,12311138,12313186,12315234,12317291,12319339,12321387,12323441,12325146,12326007,12326310,12327254,12328975,12331031,12333079,12335127,12337175,12339223,12341271,12343319,12345367,12347415,12349463,12351511,12353457,12355269,12357040,12358826,12360473,12361952,12363286,12364537,12365773,12366907,12367789,12368452,12369004,12369543,12370014,12370446,12370925,12371346,12371767,12372192,12372657,12373200,12373676,12374119,12374297,12374898,12376053,12377256,12378517,12379666,12380771,12381805,12382661,12383440,12384062,12384433,12384646,12384729,12385254,12386686,12388429,12390430,12392486,12394534,12396571,12398602,12400582,12402466,12404356,12406205,12408158,12410141,12412068,12413472,12415429,12417476,12419533,12421588,12423579,12425617,12427661,12429693,12431721,12433725,12435694,12437742,12439670,12441593,12443634,12445682,12447730,12449628,12451340,12453304,12455168,12456948,12458962,12460966,12462321,12463850,12465725,12467780,12469831,12471716,12473627,12475641,12477392,12479385,12481309,12483357,12485414,12487471,12489420,12491374,12493429,12495302,12496753,12498407,12499875,12501133,12501839,12502336,12502849,12503192,12503939,12504461,12505352,12506799,12508285,12509703,12511130,12512396,12513801,12515357,12517012,12518828,12520640,12522480,12524435,12526467,12528501,12530555,12532608,12534656,12536704,12538760,12540814,12542868,12544916,12546943,12548925,12550910,12552907,12554895,12556710,12558386,12560094,12561799,12563465,12565052,12566534,12567964,12569413,12570866,12572282,12573557,12574790,12575997,12577223,12578396,12579485,12580497,12581402,12582357,12583550,12585120,12586527,12587999,12589504,12590926,12592412,12593958,12595502,12596900,12598467,12599975,12601512,12603194,12604832,12606392,12608029,12609604,12611066,12612786,12614442,12616259,12617968,12619724,12621563,12623414,12625315,12627194,12629093,12631072,12633013,12635031,12637076,12639132,12641180,12643228,12645285,12647341,12649396,12651368,12653216,12654895,12656342,12657230,12659017,12660855,12662903,12664952,12667000,12668995,12669545,12669826,12671639,12673687,12675735,12677442,12679196,12681029,12682342,12684390,12686447,12687669,12689588,12691636,12693684,12695732,12697680,12699368,12701415,12703253,12704597,12706266,12708314,12710362,12712410,12714466,12716514,12718564,12720495,12722543,12724591,12726639,12728687,12730735,12732783,12734831,12736879,12738927,12740975,12743023,12745047,12747092,12749148,12751204,12753252,12755300,12757357,12759300,12761293,12763322,12765370,12767418,12769463,12771511,12773559,12775607,12777664,12779712,12781760,12783771,12784953,12786923,12788971,12791019,12793075,12795123,12797180,12799228,12801268,12803114,12805060,12806699,12808271,12809812,12811318,12813133,12814856,12816361,12817781,12819023,12820082,12820832,12821339,12823387,12825435,12827491,12829546,12831594,12833456,12834927,12835505,12835965,12837498,12839546,12841594,12843254,12844900,12846356,12848220,12849928,12850297,12850497,12851528,12852090,12852229,12852785,12853168,12853553,12853911,12854310,12854541,12855164,12855959,12856761,12857592,12858109,12858719,12859242,12859693,12860397,12860906,12861519,12862169,12862724,12863063,12863559,12864264,12865105,12865783,12866176,12866695,12866972,12867357,12868157,12869249,12869825,12870195,12870485,12871158,12872245,12872978,12873708,12874389,12875356,12876069,12876812,12878014,12879064,12880164,12881096,12881503,12881944,12882174,12882475,12882723,12883088,12883475,12884080,12884858,12885108,12885343,12885619,12885945,12886082,12886288,12886649,12886868,12887094,12887342,12887630,12887954,12888137,12888430,12888581,12888649,12888857,12889029,12889239,12889893,12890664,12890936,12891353,12891674,12892608,12893515,12894014,12894819,12895850,12896770,12897466,12897968,12898556,12898743,12899423,12899628,12900066,12900319,12900618,12901119,12901642,12901952,12902502,12903348,12903796,12904898,12906012,12907075,12907936,12908672,12909152,12909605,12910012,12910464,12910684,12912430,12914117,12915525,12916524,12917986,12919390,12920823,12922381,12922989,12923793,12924775,12925845,12926820,12927577,12928584,12929450,12930367,12931070,12931756,12932543,12932900,12933710,12934015,12934545,12935154,12935542,12936314,12937117,12937740,12938267,12938842,12939153,12939736,12940575,12941508,12942712,12943782,12944709,12945641,12946824,12947910,12948801,12950337,12951751,12952835,12953585,12954819,12955612,12957067,12958246,12959480,12960209,12961497,12962297,12963280,12964040,12964976,12965972,12966640,12967810,12968602,12969053,12969624,12969898,12970356,12970580,12970859,12970945,12971025,12971458,12971857,12972448,12972856,12973362,12973920,12974369,12975126,12975974,12976899,12977640,12978333,12979508,12980691,12981875,12983030,12984112,12985294,12986064,12987355,12988147,12988513,12988874,12990072,12991330,12991862,12992848,12993383,12993706,12994105,12994595,12995245,12995958,12997171,12998524,12998889,12999232,12999897,13000127,13000953,13001574,13001985,13002408,13002705,13003229,13003556,13003972,13004589,13004933,13005543,13006016,13006315,13006958,13007816,13008222,13009146,13010172,13011009,13011357,13011871,13012341,13012911,13013433,13013804,13014220,13014711,13015120,13015471,13016004,13016622,13017711,13018356,13019594,13020289,13020952,13021749,13022482,13022592,13022904,13023157,13023469,13024223,13024710,13025399,13025883,13026465,13026830,13027521,13027913,13028307,13028699,13029248,13029502,13029808,13030131,13030375,13030660,13030910,13031242,13031452,13031721,13031947,13032200,13032308,13032421,13032615,13032719,13032836,13032942,13033046,13033163,13033358,13033437,13033960,13034137,13034383,13034919,13035771,13036607,13037412,13038153,13038910,13039531,13040404,13040950,13041467,13041776,13042922,13044106,13045517,13046706,13048009,13049173,13050704,13052356,13053906,13055314,13056439,13057615,13058449,13059441,13060658,13062142,13063723,13065305,13066560,13068031,13069566,13070249,13070915,13071548,13072310,13072651,13073119,13073734,13074228,13075085,13075810,13076228,13076572,13077056,13077410,13077774,13078148,13078756,13078951,13079276,13079715,13080268,13080663,13080946,13081193,13081477,13081542,13081787,13081912,13082363,13082694,13083653,13084975,13085591,13085945,13086425,13086881,13087309,13088032,13088513,13088987,13089257,13089794,13090034,13090645,13091480,13092590,13093225,13093660,13094233,13094728,13095303,13095704,13096462,13096660,13097400,13097951,13098484,13099159,13099974,13100407,13100824,13101205,13101541,13101930,13102402,13102793,13102834,13102874,13102915,13103085,13103279,13103483,13103743,13103924,13104082,13104291,13104488,13104617,13104970,13105257,13105586,13106002,13106210,13106288,13106666,13107682,13109046,13110134,13111353,13112715,13113746,13114775,13115565,13116082,13116477,13117343,13118274,13119288,13119950,13121800,13123221,13124636,13126090,13127689,13129088,13130691,13132098,13133452,13135014,13136546,13137961,13139456,13140831,13142438,13143978,13145435,13146845,13148327,13149783,13151147,13152499,13153940,13155459,13157021,13158537,13160023,13161622,13163254,13164835,13166532,13168201,13169908,13171740,13172759,13173818,13174900,13175906,13177078,13178707,13180474,13182208,13183956,13185646,13187343,13189054,13190800,13192492,13194224,13195937,13197631,13199381,13201124,13202881,13204611,13206354,13207895,13209562,13211225,13212886,13214589,13216292,13217988,13219705,13221427,13223106,13224750,13226413,13228090,13229698,13231268,13232920,13234601,13236432,13238078,13239795,13241392,13243044,13244715,13246419,13248157,13249931,13251756,13253554,13255362,13257217,13259044,13260780,13262494,13264171,13265940,13267737,13269586,13271370,13273085,13274747,13276567,13278326,13280012,13281823,13283564,13285279,13286983,13288579,13290245,13291747,13293632,13295230,13296887,13298481,13300067,13301685,13303294,13304984,13306677,13308382,13310025,13311738,13313478,13315149,13316882,13318606,13320313,13321989,13323759,13325461,13327140,13328847,13330512,13332177,13333869,13335495,13337123,13338729,13340335,13341922,13343433,13344929,13346430,13348278,13349401,13350534,13351397,13352229,13352711,13353926,13355343,13356782,13358221,13359468,13360523,13361726,13362918,13364199,13365598,13366896,13368207,13369522,13370772,13371996,13373082,13374027,13374818,13375683,13376546,13377387,13378041,13378747,13379729,13380832,13381805,13383025,13384203,13386067,13387505,13388953,13390345,13391758,13393324,13394747,13396272,13397740,13399217,13400588,13401881,13403121,13404388,13404600,13404834,13405053,13405269,13405505,13406259,13407650,13409241,13410582,13411558,13412877,13414082,13414984,13416292,13417731,13418768,13420351,13422007,13423236,13424400,13425942,13427032,13428800,13429895,13431533,13433193,13434803,13436246,13437944,13439395,13440610,13442288,13443578,13445204,13446695,13447919,13449625,13450700,13452261,13453810,13455336,13457024,13458414,13459901,13461351,13462838,13464608,13465762,13467108,13468740,13470451,13471680,13473274,13474768,13476265,13477828,13479482,13480881,13482211,13483774,13485294,13486742,13488469,13489925,13491672,13493044,13494400,13495934,13497403,13499085,13500495,13501673,13503397,13504942,13506442,13508095,13509372,13511016,13512040,13513510,13514987,13516657,13518052,13519535,13521108,13522561,13524020,13525605,13526919,13528433,13529758,13531266,13532680,13534065,13535354,13536923,13538305,13539442,13540843,13542108,13543665,13545170,13546766,13548415,13550118,13551580,13552880,13554407,13555874,13557149,13558612,13560168,13561977,13563319,13564983,13566276,13567938,13569556,13571010,13572737,13574563,13576079,13577829,13579413,13581102,13582640,13584291,13585808,13587289,13588786,13590515,13591863,13593507,13595085,13596812,13598025,13599702,13601312,13603021,13604404,13606047,13607709,13609237,13610636,13612211,13613816,13615618,13616976,13618748,13620166,13621700,13623478,13625108,13626770,13628684,13630545,13632438,13634492,13636517,13638557,13640596,13642621,13644642,13646667,13648712,13650738,13652767,13654818,13656854,13658898,13660942,13662949,13664953,13666847,13668897,13670909,13672941,13674987,13677036,13679090,13681134,13683178,13685201,13687233,13689236,13691269,13693317,13695356,13697403,13699454,13701495,13703540,13705549,13707585,13709609,13711602,13713637,13715690,13717745,13719771,13721799,13723847,13725881,13727868,13729824,13731844,13733853,13735827,13737843,13739865,13741886,13743919,13745966,13747990,13749988,13751987,13753999,13756001,13757984,13759995,13762001,13764008,13766049,13768095,13770127,13772116,13774109,13776111,13778109,13780102,13782115,13784120,13786168,13788224,13790253,13792298,13794305,13796298,13798307,13800319,13802319,13804361,13806405,13808449,13810489,13812534,13814561,13816605,13818643,13820675,13822723,13824742,13826680,13828700,13830708,13832680,13834665,13836666,13838638,13840573,13842572,13844561,13846549,13848485,13850446,13852414,13854376,13856367,13858364,13860304,13862256,13864238,13866231,13868196,13870133,13872132,13874129,13876101,13878092,13880050,13882050,13884025,13886010,13888004,13889965,13891958,13893934,13895914,13897907,13899862,13901839,13903822,13905830,13907805,13909806,13911781,13913770,13915771,13917750,13919734,13921680,13923638,13925629,13927622,13929596,13931604,13933561,13935554,13937523,13939522,13941476,13943447,13945452,13947444,13949445,13951436,13953442,13955451,13957451,13959430,13961413,13963407,13965385,13967328,13969327,13971376,13973371,13975264,13977255,13979282,13981265,13983214,13985231,13987245,13989263,13991235,13993243,13995277,13997284,13999267,14001269,14003275,14005316,14007365,14009371,14011381,14013409,14015429,14017437,14019433,14021404,14023457,14025476,14027461,14029456,14031383,14033252,14035306,14037353,14039379,14041372,14043345,14045256,14047180,14049079,14050854,14052774,14054700,14056547,14058363,14060194,14062174,14064156,14066161,14068071,14069911,14071815,14073738,14075495,14077402,14079384,14081329,14083249,14085230,14087151,14089059,14090993,14092918,14094851,14096721,14098683,14100623,14102601,14104502,14106440,14108288,14110161,14112044,14113911,14115804,14117777,14119740,14121691,14123668,14125673,14127419,14129369,14131165,14133185,14135005,14136948,14138866,14140870,14142792,14144756,14146787,14148578,14150506,14152235,14154211,14156189,14158074,14160061,14161957,14163878,14165802,14167797,14169721,14171608,14173581,14175590,14177362,14179174,14180988,14182751,14184541,14186439,14188289,14190211,14191975,14193918,14195725,14197624,14199588,14201480,14203430,14205353,14207226,14209146,14210997,14212933,14214803,14216761,14218594,14220545,14222536,14224446,14226414,14228294,14230254,14232153,14234031,14235922,14237799,14239608,14241502,14243382,14245267,14247105,14248862,14250493,14252126,14253658,14255353,14257248,14258943,14260889,14262867,14264816,14266801,14268803,14270783,14272726,14274707,14276678,14278641,14280610,14282599,14284584,14286055,14287451,14288862,14290241,14291690,14293173,14294730,14296145,14297761,14299259,14300815,14302360,14304062,14305761,14307295,14308989,14310977,14312983,14314905,14316921,14318863,14320779,14322669,14324557,14326543,14328550,14330553,14332451,14334429,14336361,14338269,14340147,14342038,14344036,14346070,14348048,14349987,14351954,14353940,14355782,14357703,14359610,14361592,14363598,14365525,14367513,14369483,14371446,14373248,14375150,14377103,14379039,14381047,14382970,14384961,14386848,14388757,14390586,14392480,14394432,14396382,14398407,14400332,14402302,14404245,14406214,14408012,14409914,14411885,14413877,14415882,14417835,14419826,14421778,14423659,14425567,14427455,14429408,14431354,14433263,14435241,14437111,14439111,14441061,14442960,14444898,14446655,14448382,14450030,14451676,14453391,14455080,14456814,14458526,14460241,14461960,14463626,14465281,14467000,14468735,14470493,14472170,14473839,14475501,14477185,14478914,14480653,14482351,14483981,14485595,14487315,14489016,14490700,14492475,14494197,14495861,14497433,14499026,14500714,14502487,14504145,14505832,14507450,14509069,14510721,14512454,14514212,14515938,14517618,14519308,14520933,14522635,14524430,14526231,14527910,14529526,14531181,14532933,14534750,14536591,14538413,14540163,14541931,14543683,14545515,14547385,14549220,14551016,14552851,14554665,14556419,14558183,14559977,14561656,14563282,14564970,14566733,14568455,14570075,14571689,14573461,14575160,14576769,14578553,14580345,14581938,14583627,14585461,14587037,14588643,14590348,14592005,14593723,14595421,14597257,14598970,14600647,14602399,14604260,14606029,14607730,14609411,14611238,14612932,14614680,14616461,14618192,14620053,14622003,14623915,14625940,14627911,14629857,14631767,14633735,14635670,14637600,14639577,14641550,14643528,14645509,14647504,14649504,14651510,14653491,14655475,14657456,14659407,14661414,14663380,14665378,14667394,14669360,14671335,14673314,14675279,14677248,14679231,14681254,14683269,14685258,14687228,14689215,14691177,14693145,14695101,14697084,14699062,14701042,14703007,14704979,14706953,14708930,14710894,14712857,14714803,14716765,14718724,14720715,14722681,14724642,14726593,14728575,14730519,14732489,14734445,14736390,14738334,14740299,14742243,14744207,14746150,14748114,14750054,14752022,14753966,14755932,14757880,14759847,14761794,14763763,14765710,14767683,14769605,14771520,14773409,14775321,14777221,14779127,14781047,14782949,14784852,14786755,14788666,14790568,14792505,14794399,14796312,14798228,14800126,14802038,14803870,14805835,14807657,14809501,14811462,14813305,14815123,14817095,14818952,14820775,14822734,14824606,14826442,14828385,14830273,14832099,14834036,14835917,14837739,14839663,14841564,14843396,14845316,14847218,14849026,14850903,14852779,14854563,14856453,14858292,14860081,14861972,14863787,14865615,14867504,14869311,14871141,14873031,14874828,14876659,14878547,14880321,14882167,14884060,14885811,14887674,14889571,14891350,14893238,14895118,14896951,14898864,14900723,14902559,14904467,14906291,14908165,14910071,14911897,14913805,14915661,14917507,14919419,14921233,14923111,14925014,14926822,14928728,14930578,14932494,14934334,14936191,14938115,14939949,14941807,14943721,14945563,14947422,14949334,14951179,14953042,14954952,14956798,14958664,14960574,14962413,14964285,14966195,14968040,14969908,14971816,14973666,14975534,14977444,14979306,14981157,14983077,14984926,14986757,14988697,14990552,14992406,14994315,14996180,14998041,14999923,15001798,15003666,15005533,15007412,15009292,15011153,15013039,15014934,15016775,15018661,15020564,15022420,15024347,15026257,15028175,15030102,15032016,15033931,15035852,15037769,15039678,15041591,15043495,15045417,15047335,15049251,15051166,15053107,15055026,15056993,15058970,15060965,15062955,15064939,15066913,15068904,15070899,15072884,15074873,15076852,15078819,15080705,15082655,15084538,15086469,15088363,15090330,15092179,15094115,15096004,15097846,15099811,15101765,15103685,15105665,15107604,15109573,15111507,15113466,15115412,15117374,15119343,15121310,15123265,15125237,15127199,15129143,15131127,15133051,15134999,15136874,15138777,15140666,15142558,15144498,15146345,15148328,15150158,15152130,15153979,15155910,15157808,15159690,15161593,15163479,15165435,15167195,15169130,15170913,15172811,15174669,15176515,15178376,15180198,15182101,15183907,15185847,15187664,15189542,15191398,15193242,15195112,15196934,15198860,15200766,15202815,15204835,15206866,15208870,15210879,15212881,15214896,15216897,15218949,15220956,15223006,15225039,15227066,15229084,15231103,15233087,15235115,15237087,15239115,15241149,15243199,15245255,15247287,15249333,15251354,15253363,15255389,15257401,15259431,15261475,15263531,15265578,15267620,15269660,15271688,15273671,15275561,15277573,15279571,15281591,15283631,15285667,15287704,15289698,15291676,15293680,15295687,15297650,15299635,15301661,15303694,15305707,15307740,15309744,15311727,15313712,15315737,15317720,15319679,15321673,15323690,15325731,15327752,15329781,15331803,15333786,15335790,15337789,15339763,15341725,15343739,15345755,15347783,15349810,15351843,15353885,15355907,15357946,15359948,15361963,15363941,15365944,15367925,15369958,15371981,15374038,15376091,15378140,15380191,15382214,15384228,15386243,15388276,15390310,15392362,15394405,15396443,15398468,15400432,15402415,15404400,15406411,15408405,15410403,15412392,15414346,15416338,15418324,15420287,15422220,15424191,15426149,15428143,15430086,15432049,15434070,15436022,15437963,15439959,15441915,15443729,15445565,15447578,15449577,15451562,15453558,15455555,15457506,15459473,15461427,15463470,15465465,15467416,15469303,15471196,15473105,15475097,15477068,15478949,15480853,15482817,15484783,15486741,15488569,15490472,15492450,15494434,15496387,15498216,15500131,15502072,15504013,15505907,15507742,15509653,15511505,15513379,15515317,15517285,15519219,15521200,15523093,15524950,15526847,15528678,15530602,15532515,15534489,15536439,15538328,15540224,15542124,15544009,15545949,15547915,15549864,15551796,15553607,15555476,15557289,15559234,15561222,15563159,15565051,15566897,15568753,15570584,15572484,15574409,15576294,15578194,15580075,15581936,15583827,15585720,15587542,15589463,15591354,15593183,15595078,15596875,15598645,15600613,15602580,15604496,15606433,15608369,15610213,15612052,15613906,15615712,15617529,15619417,15621400,15623338,15625301,15627228,15629072,15630945,15632883,15634866,15636823,15638852,15640867,15642857,15644580,15646556,15648577,15650587,15652582,15654564,15656525,15658529,15660561,15662534,15664562,15666446,15668438,15670435,15672469,15674402,15676209,15678219,15680218,15682223,15684216,15685998,15688008,15690020,15692054,15694046,15696041,15697959,15699896,15701911,15703903,15705893,15707920,15709956,15711984,15713974,15715977,15717982,15720006,15722025,15724016,15725995,15727962,15729987,15732015,15733941,15735748,15737546,15739384,15741368,15743374,15745374,15747354,15749377,15751372,15753350,15755260,15757227,15759216,15761097,15763024,15764974,15766936,15768873,15770855,15772856,15774843,15776849,15778838,15780812,15782749,15784747,15786734,15788720,15790647,15792543,15794505,15796454,15798403,15800237,15802193,15804132,15806088,15807927,15809896,15811862,15813862,15815826,15817833,15819826,15821834,15823865,15825822,15827735,15829646,15831594,15833519,15835427,15837347,15839309,15841267,15843190,15845120,15847103,15849117,15851124,15853111,15855095,15857049,15859060,15861096,15863070,15865042,15867029,15868961,15870936,15872880,15874832,15876783,15878764,15880727,15882704,15884704,15886738,15888738,15890714,15892699,15894696,15896715,15898673,15900624,15902590,15904574,15906508,15908503,15910386,15912364,15914360,15916379,15918360,15920300,15922282,15924291,15926268,15928252,15930201,15932163,15934147,15936190,15938108,15940112,15942090,15944066,15946104,15948047,15950051,15952058,15954029,15956057,15958032,15959999,15962009,15963976,15965921,15967904,15969863,15971885,15973852,15975827,15977736,15979701,15981657,15983633,15985544,15987534,15989486,15991435,15993384,15995349,15997352,15999365,16001302,16003249,16005222,16007172,16009106,16011054,16013005,16014932,16016829,16018688,16020621,16022606,16024534,16026437,16028412,16030293,16032235,16034203,16036077,16038050,16040016,16041970,16043931,16045936,16047868,16049843,16051832,16053766,16055729,16057677,16059678,16061707,16063687,16065723,16067767,16069751,16071720,16073723,16075692,16077702,16079737,16081780,16083814,16085864,16087875,16089837,16091848,16093819,16095834,16097872,16099895,16101939,16103944,16105950,16107965,16109979,16111980,16114009,16116058,16118081,16120125,16122166,16124188,16126145,16128152,16130139,16132170,16134209,16136257,16138308,16140365,16142416,16144376,16146391,16148361,16150406,16152430,16154485,16156522,16158566,16160587,16162568,16164488,16166468,16168278,16170249,16172224,16174214,16176200,16178210,16180241,16182247,16184274,16186228,16188234,16190215,16192059,16194049,16196028,16198006,16199989,16201995,16203928,16205722,16207689,16209646,16211601,16213591,16215585,16217518,16219387,16221218,16222981,16224594,16226314,16227812,16229403,16230924,16232489,16233917,16235509,16236981,16238302,16239734,16241204,16242541,16243701,16245248,16246492,16247874,16249090,16250619,16251730,16253110,16254383,16255241,16256754,16258087,16259428,16260592,16261837,16263412,16264245,16265476,16266893,16268037,16269545,16270704,16272026,16273324,16274514,16276098,16277218,16278659,16280156,16281482,16283052,16284405,16285918,16287418,16288883,16290536,16291766,16293250,16294758,16296086,16297526,16298924,16300229,16301563,16302657,16304292,16305529,16306988,16308208,16309027,16310675,16312080,16313377,16314565,16315810,16317402,16318262,16319487,16320948,16322184,16323785,16324832,16326134,16327350,16328710,16330153,16331508,16332960,16334459,16335691,16337320,16338741,16340246,16341831,16343158,16344766,16346067,16347576,16349107,16350314,16351928,16353122,16354501,16355791,16357166,16358593,16359882,16361335,16362550,16363402,16365063,16366464,16367702,16368908,16370169,16371767,16372552,16373782,16375208,16376379,16377974,16379033,16380362,16381642,16383021,16384481,16385850,16387315,16388817,16390057,16391679,16393138,16394604,16396178,16397544,16399047,16400419,16401918,16403319,16404471,16406084,16407273,16408741,16409923,16411475,16412733,16413978,16415397,16416504,16417482,16418997,16420444,16421556,16422835,16424290,16425500,16426470,16427742,16429082,16430213,16431679,16432860,16434236,16435384,16436923,16438081,16439491,16440982,16442314,16443904,16445317,16446845,16448345,16449823,16451435,16452682,16454140,16455627,16457042,16458315,16459838,16461100,16462457,16463585,16465193,16466410,16467898,16469205,16470056,16471651,16472979,16474332,16475503,16476810,16478438,16479330,16480481,16481892,16483174,16484652,16485837,16487123,16488348,16489573,16491187,16492417,16493941,16495461,16496688,16498298,16499665,16501185,16502741,16504098,16505748,16507007,16508501,16510036,16511320,16512979,16514141,16515565,16516854,16518131,16519611,16520831,16522250,16523409,16524274,16525876,16527259,16528510,16529705,16531025,16532577,16533415,16534675,16536126,16537288,16538907,16539956,16541323,16542567,16543961,16545424,16546786,16548282,16549777,16551018,16552569,16554013,16555548,16557181,16558500,16560102,16561501,16563076,16564597,16565744,16567354,16568572,16569909,16571175,16572448,16573860,16575077,16576510,16577709,16578575,16580167,16581542,16582790,16583982,16585242,16586838,16587651,16588922,16590350,16591470,16593030,16594096,16595410,16596688,16598129,16599477,16600699,16602182,16603716,16605076,16606704,16608165,16609730,16611288,16612697,16614333,16615696,16617260,16618780,16619951,16621454,16622836,16624171,16625473,16626574,16628213,16629360,16630774,16632066,16632896,16634475,16635832,16637206,16638356,16639593,16641172,16642042,16643216,16644635,16645818,16647161,16648400,16649664,16651065,16652338,16653977,16655114,16656580,16658151,16659585,16661096,16662576,16664107,16665559,16667119,16668694,16670070,16671509,16673032,16674386,16675617,16677276,16678500,16679902,16681033,16682674,16683841,16685340,16686675,16687553,16689056,16690342,16691721,16692835,16694137,16695570,16696743,16697772,16699099,16700489,16701707,16703230,16704404,16705778,16706943,16708595,16709817,16711312,16712749,16714062,16715643,16717095,16718688,16720183,16721716,16723393,16724694,16726200,16727732,16729085,16730312,16731939,16733263,16734689,16735837,16737476,16738651,16740157,16741522,16742427,16743866,16745175,16746577,16747689,16749062,16750267,16751689,16752635,16753989,16755455,16756750,16758384,16759449,16760876,16762173,16763757,16765022,16766414,16767946,16769414,16770694,16772402,16774026,16775607,16777240,16778627,16780332,16781545,16782760,16784071,16785469,16786764,16788618,16790086,16791537,16792722,16794023,16795597,16797056,16798576,16800358,16801714,16803058,16804334,16805895,16807300,16808788,16810595,16812029,16813466,16814748,16816075,16817561,16818935,16820343,16822170,16823648,16825203,16826527,16827792,16829276,16830503,16831849,16833319,16834985,16836097,16837339,16838583,16840177,16841691,16842983,16844402,16845913,16847317,16848792,16850487,16852263,16853962,16855841,16857385,16859321,16861204,16863035,16864742,16866620,16868435,16870248,16872128,16873527,16875211,16876878,16878644,16880379,16882061,16883741,16885282,16886656,16887576,16889481,16891458,16893393,16895168,16896505,16897289,16899100,16900691,16902495,16904305,16906183,16907867,16909769,16911315,16912907,16914763,16916366,16918260,16920129,16922013,16923822,16925515,16927250,16928861,16930809,16932763,16934465,16936448,16938396,16940306,16942170,16944027,16945789,16947437,16949271,16951106,16953006,16954892,16956563,16958245,16959879,16961410,16963255,16964886,16966535,16968182,16969699,16971302,16972739,16974403,16976419,16978424,16980441,16982337,16984303,16986337,16988349,16990289,16992293,16994341,16996367,16998311,17000307,17002338,17004350,17006285,17008269,17010224,17012182,17014144,17016116,17018062,17019988,17021992,17024015,17026027,17028022,17030070,17032090,17034086,17036088,17038019,17039888,17041936,17043986,17046013,17047987,17049983,17051871,17053750,17055726,17057625,17059538,17061487,17063388,17065305,17067198,17069117,17071017,17072904,17074844,17076682,17078577,17080521,17082391,17084334,17086245,17088160,17090062,17091622,17092984,17094912,17096587,17098435,17099870,17101222,17102460,17104320,17105912,17107569,17109232,17110994,17112513,17114096,17115678,17117269,17118716,17120101,17121840,17123538,17124951,17126078,17127670,17129381,17130794,17131913,17133825,17135716,17137494,17139211,17141016,17142795,17144430,17146341,17148160,17149855,17151528,17153211,17154929,17156473,17158312,17160038,17161418,17162997,17164517,17166250,17167623,17168911,17170155,17171814,17173351,17174799,17175968,17177144,17178868,17180461,17182091,17183646,17185670,17187644,17189614,17191605,17193544,17195411,17197158,17198945,17200826,17202698,17204675,17206563,17208444,17210431,17212256,17214150,17216072,17218040,17219933,17221540,17223478,17225146,17226560,17228142,17229791,17231205,17232565,17234283,17235773,17237218,17238916,17240502,17242241,17243798,17245407,17247139,17248821,17250345,17252161,17253790,17255386,17256800,17258428,17260247,17261885,17263333,17264602,17266298,17267553,17269366,17271256,17273036,17274704,17276140,17277529,17279331,17280896,17282483,17284060,17285584,17287336,17288961,17290436,17292086,17293713,17295293,17296932,17298238,17299799,17301390,17302937,17304563,17305826,17307477,17308992,17310610,17312236,17313447,17314977,17316514,17317997,17319241,17320383,17321862,17323037,17324523,17325776,17327388,17328466,17329847,17331319,17332567,17334084,17335371,17336661,17338244,17339706,17341222,17343004,17344857,17346501,17348309,17350125,17352049,17353876,17355781,17357511,17359445,17360941,17362564,17364173,17365776,17367474,17368882,17370873,17372511,17374121,17375770,17377478,17379291,17380874,17382296,17383921,17385421,17386980,17388566,17389968,17391570,17392994,17394607,17396102,17397701,17399146,17400718,17402271,17403845,17405321,17407016,17408905,17410536,17412512,17414186,17416072,17417554,17419180,17420677,17422296,17423881,17425896,17427735,17429558,17431469,17433346,17435253,17437141,17438808,17439333,17439939,17440392,17441174,17441698,17442391,17442858,17443479,17444749,17446747,17448718,17450683,17452602,17454574,17456536,17458487,17460405,17462262,17463901,17465512,17467163,17468970,17470528,17472112,17473675,17475265,17477046,17478581,17480365,17481712,17483221,17484687,17486235,17487594,17488984,17490456,17492037,17493350,17494602,17495855,17497372,17498775,17500282,17501723,17503051,17504642,17506102,17507656,17509148,17510572,17511935,17513350,17514756,17516187,17517540,17518967,17520730,17522485,17524280,17526144,17528031,17529906,17531748,17533512,17535240,17537038,17538700,17540458,17542257,17544101,17545864,17547580,17549270,17550790,17551586,17552370,17553226,17554243,17555942,17557650,17559326,17560945,17562637,17564227,17565823,17567469,17569137,17570863,17572517,17574264,17575930,17577674,17579472,17581322,17583137,17584755,17586470,17587956,17589764,17591155,17592961,17594514,17596426,17598070,17599931,17601715,17603577,17605321,17607161,17608952,17610809,17612071,17613149,17614181,17615229,17616309,17617371,17618466,17619519,17620989,17622555,17624111,17625641,17627223,17628752,17630316,17631851,17633407,17634986,17636461,17638100,17639709,17641258,17642314,17643348,17644377,17645485,17646971,17648389,17650146,17651952,17653533,17654691,17655927,17657457,17658808,17659899,17661396,17663075,17664332,17665861,17667493,17669064,17670617,17672260,17673871,17675270,17676511,17677354,17678442,17679130,17679960,17680777,17681495,17682942,17684314,17685602,17686146,17686947,17687479,17688027,17688812,17689343,17690225,17690940,17691880,17692378,17693019,17693760,17694403,17695272,17695770,17696622,17697287,17698192,17698697,17699219,17700156,17700850,17701698,17702150,17702960,17703598,17704357,17704700,17704982,17705521,17705717,17706360,17706582,17707161,17707349,17707528,17708115,17708287,17708809,17709009,17709537,17709577,17709884,17710232,17710456,17711033,17711260,17712356,17713799,17715321,17716517,17717745,17718955,17720125,17721317,17722284,17723266,17724250,17725221,17726173,17727184,17728170,17729540,17730914,17732300,17733719,17735199,17736712,17738126,17739490,17740900,17742500,17743977,17745470,17747033,17748647,17750234,17751738,17753229,17754840,17756223,17757621,17759024,17760419,17761818,17763231,17764700,17766143,17767524,17768921,17770330,17771669,17772989,17773914,17774854,17775790,17776866,17777840,17778785,17779744,17780682,17781742,17782663,17783638,17784561,17785861,17787270,17788744,17790087,17791451,17792380,17793287,17794260,17795270,17796984,17798569,17800159,17801745,17803198,17804763,17806352,17807955,17809690,17811058,17812387,17813731,17815013,17816301,17817613,17818966,17820319,17821910,17823487,17825051,17826286,17827671,17829090,17830356,17831852,17833470,17835130,17836654,17838197,17839776,17841570,17843241,17845006,17846629,17848124,17849348,17850800,17852222,17853587,17854901,17856065,17857552,17859004,17860507,17861955,17863382,17865018,17866454,17868193,17869858,17871541,17873199,17874806,17876469,17878132,17879779,17881443,17883142,17884851,17886493,17888158,17889651,17891285,17892930,17894504,17896183,17897835,17899513,17901153,17902777,17904372,17906037,17907735,17909318,17911027,17912709,17914376,17916053,17917553,17919195,17920858,17922458,17924159,17925844,17927468,17929094,17930747,17932570,17934216,17935840,17937481,17939276,17940975,17942665,17944328,17945985,17947795,17949395,17951103,17952711,17954283,17955235,17956183,17957128,17958182,17959727,17961215,17962787,17964269,17965815,17967085,17968346,17969669,17971034,17972169,17973344,17974620,17975992,17977181,17978132,17979096,17980253,17981594,17982751,17983855,17984936,17986109,17987236,17988163,17989070,17990504,17992015,17993518,17995045,17996578,17998106,17999633,18001159,18002695,18004328,18005748,18007107,18008484,18009857,18011244,18012621,18013972,18015562,18017097,18018616,18020145,18021727,18023276,18024798,18026340,18027871,18029619,18031217,18032817,18034482,18036107,18037672,18039278,18040932,18042646,18044234,18045681,18047088,18048477,18049912,18051389,18052797,18054222,18055997,18057772,18059514,18061206,18062940,18064684,18066400,18068088,18069838,18071689,18073426,18075102,18076743,18078484,18080186,18081872,18083529,18085246,18086318,18087447,18088621,18089731,18090841,18091916,18093206,18094387,18095441,18096426,18097378,18098055,18098713,18099393,18100429,18102180,18103862,18105612,18107281,18109029,18110705,18112430,18114089,18115956,18117708,18119418,18121063,18122730,18124407,18126125,18127841,18129634,18131470,18133224,18135040,18136755,18138533,18140280,18142043,18143779,18145658,18147405,18149118,18150756,18152414,18154082,18155788,18157478,18159190,18160698,18162207,18163594,18165092,18166516,18167506,18168510,18169511,18170994,18172852,18174629,18176455,18178216,18180043,18181833,18183682,18185536,18187123,18188341,18189529,18190821,18192556,18193641,18194676,18195721,18197412,18199060,18200674,18202280,18203969,18205491,18207132,18208718,18210395,18212001,18213455,18214869,18216304,18217663,18219122,18220542,18221971,18223419,18225027,18226584,18228109,18229671,18231113,18232552,18234005,18235459,18237042,18238677,18240321,18241892,18243440,18245114,18246727,18248323,18249979,18251604,18253054,18254515,18255990,18257394,18258859,18260281,18261686,18263251,18265102,18266909,18268763,18270506,18272354,18274129,18276012,18277859,18279529,18281137,18282729,18284340,18285901,18287542,18289176,18290794,18292538,18294078,18295571,18297029,18298443,18299944,18301408,18302872,18304381,18306087,18307901,18309738,18311595,18313276,18315146,18316953,18318812,18320665,18322310,18323953,18325542,18327255,18328754,18330402,18332000,18333625,18335283,18336763,18338194,18339626,18340997,18342513,18343994,18345425,18346877,18348731,18350540,18352353,18354237,18355901,18357758,18359588,18361441,18363189,18363906,18365552,18366620,18367338,18368511,18369177,18369850,18371029,18371706,18372674,18374233,18374889,18375564,18376239,18377670,18378879,18379978,18381293,18382577,18383479,18384477,18385739,18386933,18388174,18389502,18390981,18392490,18393857,18394873,18396094,18397798,18399361,18401090,18402740,18404472,18406016,18407586,18409315,18411026,18412061,18413224,18414667,18416046,18417584,18418769,18419775,18420772,18421782,18423156,18424238,18425367,18426487,18427592,18429178,18431199,18433238,18435247,18437234,18439257,18441255,18443250,18445264,18447301,18449341,18451351,18453364,18455370,18457385,18459395,18461343,18463356,18465392,18467423,18469422,18471410,18473427,18475417,18477412,18479395,18481431,18483452,18485468,18487468,18489456,18491474,18493484,18495434,18497455,18499499,18501388,18503319,18505197,18507102,18509013,18510865,18512722,18514590,18516468,18518367,18520260,18522109,18523981,18525803,18527643,18529529,18531410,18533059,18534724,18536411,18538089,18539756,18541413,18543044,18544772,18546450,18548111,18549752,18551380,18553023,18554677,18556318,18557913,18559646,18561079,18562542,18563982,18565408,18566834,18568267,18569655,18571056,18572677,18574083,18575545,18577213,18578568,18580031,18581532,18583203,18584614,18586088,18587629,18589213,18590757,18592156,18593764,18595288,18596897,18598250,18599692,18601053,18602928,18604693,18606187,18607792,18609454,18611013,18612603,18614103,18615798,18617435,18618991,18620551,18622215,18623965,18625668,18627226,18628788,18630473,18631999,18633564,18635090,18636655,18638191,18639748,18641279,18642816,18644353,18645846,18647487,18649080,18650611,18652299,18653975,18655609,18657263,18658967,18660807,18662326,18663837,18665797,18667724,18669431,18671134,18672929,18674877,18676808,18678733,18680724,18682645,18684606,18686510,18688424,18690291,18692108,18693950,18695845,18697843,18699697,18701570,18703401,18705233,18707016,18708791,18710560,18712461,18714449,18716404,18718379,18720304,18722210,18724123,18726031,18727944,18729957,18731841,18733739,18735601,18737419,18739223,18741051,18742832,18744700,18746723,18748714,18750698,18752681,18754607,18756551,18758483,18760401,18762422,18764240,18766050,18767818,18769596,18771357,18773153,18774874,18776649,18778570,18780441,18782231,18784034,18785853,18787673,18789502,18791284,18793118,18794553,18796012,18797486,18798881,18800299,18801719,18803135,18804555,18806460,18808428,18810361,18812390,18814318,18816239,18818133,18820058,18821983,18823885,18825750,18827695,18829652,18831597,18833544,18835441,18837360,18839286,18841212,18843146,18845081,18846619,18848136,18849734,18851354,18852920,18854536,18856075,18857585,18859531,18861355,18863155,18864911,18866676,18868409,18870150,18871870,18873662,18874984,18876317,18877595,18878961,18880268,18881582,18882947,18884315,18885979,18887467,18888960,18890486,18892070,18893594,18895089,18896557,18898118,18899722,18901324,18902953,18904537,18906161,18907714,18909353,18910745,18912058,18913416,18914663,18915954,18917112,18918340,18919695,18921660,18923544,18925419,18927322,18929231,18931131,18933005,18934896,18936861,18938770,18940647,18942504,18944389,18946272,18948159,18950017,18951880,18953543,18954966,18956411,18957751,18959192,18960639,18962108,18963561,18965180,18966840,18968556,18970267,18972002,18973636,18975229,18976802,18978336,18979733,18981282,18982872,18984500,18986124,18987877,18989571,18991235,18993040,18994496,18995941,18997418,18998901,19000322,19001657,19003090,19004538,19006222,19007694,19009211,19010736,19011945,19013495,19014979,19016484,19018020,19019632,19021141,19022657,19024127,19025235,19026689,19028213,19029683,19031501,19033475,19035411,19037376,19038796,19040225,19041662,19043075,19044496,19045882,19047252,19048663,19050135,19051281,19052467,19053530,19054280,19055383,19056536,19057657,19059074,19060455,19061919,19063512,19065414,19067301,19069178,19071114,19073016,19074907,19076819,19078700,19080237,19081860,19083267,19084740,19086223,19087321,19088206,19089042,19089829,19090766,19091594,19092481,19093310,19094261,19095208,19096124,19096931,19097877,19098845,19099878,19100865,19102115,19103433,19104707,19105958,19107259,19107451,19108090,19108683,19109291,19109498,19109987,19110393,19111353,19112583,19113336,19114339,19115082,19116458,19117411,19118534,19119617,19120071,19120221,19120716,19121100,19121958,19123236,19124775,19126254,19128199,19129977,19131748,19133575,19135386,19137184,19138943,19140716,19142551,19144154,19145811,19147448,19149008,19150652,19152284,19153894,19155408,19157004,19158312,19159637,19160959,19162397,19164031,19165681,19167370,19169053,19170734,19172401,19174070,19175733,19177377,19179070,19180734,19182381,19183813,19185649,19187497,19189317,19191074,19192874,19194718,19196559,19198327,19200120,19201570,19203017,19204499,19205926,19207786,19209661,19211514,19213389,19215230,19217097,19218935,19220821,19222679,19224408,19226211,19227881,19229025,19230133,19231297,19232403,19234188,19236197,19238186,19240126,19242071,19244028,19245960,19247839,19249721,19251653,19253616,19255552,19257481,19259408,19261333,19263245,19265213,19267176,19268841,19270576,19272320,19274160,19275960,19277694,19279331,19280961,19283017,19285067,19287123,19289163,19291216,19293254,19295293,19297329,19299385,19301433,19303487,19305528,19307577,19309627,19311675,19313702,19315753,19317705,19319597,19321482,19323307,19325149,19326988,19328838,19330681,19332628,19334484,19336401,19338288,19340140,19341958,19343816,19345653,19347531,19349209,19350526,19351682,19352434,19353267,19354007,19354593,19355198,19355988,19356809,19357738,19358319,19358650,19359473,19360337,19361186,19361714,19362154,19362927,19363838,19364624,19365027,19365652,19366445,19367302,19368040,19368435,19369497,19370641,19371741,19372430,19372901,19374072,19375195,19376389,19376895,19377511,19378740,19379774,19380928,19381546,19382056,19383319,19384400,19385532,19386361,19387601,19388981,19390476,19392080,19393865,19394923,19396000,19397137,19398273,19399420,19400555,19401652,19402803,19403888,19405040,19406167,19407380,19408532,19409623,19410686,19411833,19413467,19414518,19415628,19416822,19417947,19419023,19420105,19421176,19422182,19423215,19424136,19425093,19426149,19427158,19428003,19428772,19429625,19431124,19431584,19432127,19432614,19433117,19433662,19434223,19434752,19435284,19435750,19436240,19436747,19437233,19437751,19438271,19438801,19439359,19440408,19441856,19443315,19444807,19446333,19447829,19449320,19450847,19452315,19453687,19454633,19455649,19456836,19458513,19459942,19461349,19462722,19463976,19465449,19467001,19468732,19470385,19472062,19473697,19475299,19476931,19478605,19480260,19482036,19483548,19485004,19486519,19488017,19489452,19490988,19492465,19493923,19495201,19496331,19497504,19498806,19500150,19501422,19502789,19503972,19505240,19506650,19508051,19509492,19510968,19512461,19514035,19515535,19517124,19518850,19519893,19520988,19522125,19523267,19524444,19525587,19526694,19527869,19528989,19530118,19531232,19532438,19533576,19534646,19535645,19536728,19538369,19539437,19540532,19541695,19542810,19543852,19544900,19545985,19546999,19548032,19548979,19549974,19551046,19552029,19552886,19553653,19554533,19555996,19556468,19557000,19557491,19558013,19558547,19559097,19559652,19560205,19560650,19561134,19561653,19562141,19562650,19563173,19563699,19564235,19565438,19567207,19569007,19570810,19572562,19574385,19576160,19578000,19579424,19580830,19582222,19583595,19585007,19586410,19587634,19588819,19590188,19591839,19593135,19594435,19595801,19597338,19598354,19599402,19600396,19601626,19603195,19604914,19606586,19608195,19609787,19610991,19612128,19613312,19614662,19616012,19617687,19619366,19621031,19622640,19624336,19626001,19627598,19629232,19630904,19632279,19633453,19634929,19635905,19637759,19639438,19641381,19643180,19644953,19646573,19648277,19649993,19651691,19653365,19655127,19656918,19658521,19660064,19661555,19663109,19664658,19666184,19667791,19669334,19670712,19672345,19673944,19675548,19677142,19678710,19680285,19681843,19683475,19685114,19686753,19688542,19690212,19691559,19693181,19694982,19696665,19698279,19699561,19700552,19701698,19702876,19703995,19705154,19706230,19707319,19708409,19709570,19710664,19711859,19713062,19714147,19715185,19716268,19717581,19718361,19719455,19720693,19721828,19722238,19723339,19724566,19725690,19726598,19727462,19728623,19729863,19731037,19731461,19732504,19733731,19734890,19735743,19736714,19737903,19739078,19740266,19740657,19741625,19742868,19743961,19744915,19745942,19747123,19748271,19749415,19749879,19750813,19752059,19753195,19754161,19755154,19756270,19757468,19758586,19759230,19760076,19761260,19762381,19763371,19764914,19765991,19767084,19768219,19769344,19770419,19771493,19772591,19773624,19774637,19775554,19776589,19777651,19778637,19779496,19780273,19781138,19782388,19783350,19784564,19785681,19786622,19787191,19788334,19789555,19790715,19791787,19792899,19794060,19795295,19796413,19797689,19798858,19799989,19801219,19802388,19803696,19804818,19806034,19807216,19808385,19809611,19810720,19811941,19813129,19814394,19815634,19816713,19817682,19818789,19820049,19821258,19822331,19823290,19824411,19825747,19826912,19827959,19828953,19830074,19831348,19832514,19833504,19834544,19835639,19837043,19837470,19838006,19838872,19840296,19841995,19843827,19845683,19847552,19849291,19850743,19851674,19852193,19852701,19853234,19853819,19854321,19855703,19856872,19858020,19859522,19860815,19861861,19863141,19864651,19865839,19866939,19868400,19869743,19870792,19872057,19873736,19875542,19877447,19879160,19880895,19882781,19884499,19886379,19888151,19889902,19891854,19893659,19895375,19897127,19899022,19900754,19902567,19904421,19906109,19907995,19909668,19911505,19913292,19915117,19916867,19918653,19920480,19922246,19924082,19925958,19927704,19929563,19931292,19933040,19934936,19936639,19938481,19940255,19942033,19943846,19945711,19947447,19949165,19951061,19952750,19954575,19956462,19958157,19960043,19961827,19963658,19965379,19967231,19968978,19970768,19972660,19974414,19976144,19978032,19979766,19981608,19983398,19985150,19987038,19988757,19990586,19992335,19994234,19996034,19997882,19999638,20001380,20003267,20004932,20006755,20008650,20010393,20012116,20013149,20014430,20015552,20016841,20018090,20019254,20020498,20021605,20022189,20022966,20023805,20024729,20025358,20025681,20026509,20027349,20028226,20028737,20029196,20030003,20030902,20031685,20032086,20032707,20033485,20034358,20035053,20036420,20037495,20038580,20039733,20040885,20042052,20043190,20044281,20045425,20046526,20047695,20048792,20050017,20051172,20052244,20053293,20054381,20055833,20057267,20058963,20059995,20061074,20062192,20063354,20064416,20065462,20066612,20067614,20068631,20069581,20070537,20071590,20072636,20073455,20074257,20075104,20076258,20077710,20079124,20080862,20081320,20081849,20082339,20082854,20083385,20083927,20084484,20085043,20085485,20085944,20086453,20086949,20087456,20087994,20088522,20089042,20090239,20091865,20093526,20095111,20096784,20098484,20100092,20101741,20103419,20105132,20106922,20108575,20110216,20111812,20113427,20115093,20116789,20116881,20117667,20118835,20119171,20119609,20120036,20121036,20122736,20124767,20126788,20128814,20130827,20132836,20134852,20136792,20138808,20140824,20142845,20144856,20146858,20148872,20150850,20152845,20154829,20156491,20157931,20159428,20161091,20162135,20163356,20164826,20165946,20167069,20168191,20169312,20170437,20171557,20172734,20172949,20173077,20174912,20176933,20178876,20180768,20182666,20184548,20186361,20188237,20190135,20192013,20193935,20195843,20197765,20199752,20201647,20203504,20205410,20207340,20209219,20211023,20212994,20214928,20216808,20218708,20220662,20222581,20224327,20226102,20227937,20229666,20231572,20233473,20235367,20237194,20239113,20241031,20242907,20244792,20246700,20248645,20250487,20252322,20254196,20256116,20257940,20259477,20259907,20260505,20260988,20261713,20262376,20263019,20263633,20264278,20265030,20265752,20266451,20267256,20268096,20268831,20269660,20270210,20270612,20271545,20271860,20273163,20274016,20275015,20275549,20275845,20276263,20276452,20278220,20279696,20281220,20282819,20284446,20286013,20287542,20288996,20290589,20292188,20293811,20295477,20296990,20298528,20300097,20301653,20303192,20305095,20306619,20308285,20309833,20311358,20313331,20315133,20316903,20318684,20320548,20322426,20324282,20326125,20328073,20329426,20330701,20332006,20333368,20334641,20336004,20337328,20338559,20340200,20341664,20343123,20344566,20346060,20347523,20349015,20350449,20351984,20353516,20354987,20356461,20357915,20359403,20360852,20362301,20363729,20365348,20366799,20368259,20369696,20371177,20372668,20374130,20375566,20377030,20378677,20380100,20381513,20382961,20384430,20385897,20387328,20388737,20390341,20391771,20393162,20394562,20396015,20397484,20398912,20400332,20401736,20403362,20404746,20406147,20407615,20409086,20410549,20411927,20413327,20414926,20416335,20417697,20419072,20420546,20421996,20423408,20424839,20426219,20427834,20429255,20430660,20432151,20433644,20435142,20436567,20437942,20439530,20441050,20442507,20443964,20445450,20446909,20448396,20449845,20451232,20452852,20454187,20455508,20456883,20458252,20459600,20460920,20462240,20463574,20465087,20466431,20467768,20469140,20470491,20471877,20473177,20474471,20476046,20477358,20478649,20479989,20481357,20482648,20483989,20485360,20486619,20488250,20489709,20491124,20492612,20494078,20495570,20497037,20498417,20500037,20501472,20502866,20504290,20505801,20507256,20508727,20510179,20511582,20513176,20514580,20515950,20517376,20518830,20520304,20521712,20523107,20524714,20526153,20527557,20528899,20530385,20531849,20533276,20534655,20536068,20537672,20539083,20540466,20541906,20543372,20544861,20546279,20547694,20549177,20550752,20552171,20553609,20555057,20556541,20557991,20559428,20560837,20562595,20564239,20566074,20567811,20569618,20571346,20573027,20574816,20576643,20578478,20580279,20582004,20583657,20585466,20587194,20588992,20590704,20592554,20594325,20596203,20598060,20599899,20601807,20603714,20605558,20607451,20609377,20611197,20612994,20614775,20616603,20618403,20620173,20621936,20623870,20625642,20627431,20629176,20630945,20632710,20634441,20636181,20637924,20639824,20641644,20643434,20645172,20646951,20648688,20650455,20652197,20654028,20655953,20657808,20659642,20661445,20663225,20665058,20666865,20668685,20670601,20672323,20674074,20675843,20677575,20679300,20681023,20682812,20684583,20686386,20688289,20690142,20691988,20693808,20695616,20697358,20699150,20700915,20702828,20704464,20706223,20707984,20709515,20711273,20713013,20714652,20716424,20718228,20719975,20721719,20723469,20725065,20726742,20728332,20730152,20731985,20733661,20735342,20736964,20738612,20740303,20741984,20743666,20745332,20747106,20748764,20750383,20752015,20753697,20755405,20757091,20758773,20760460,20762335,20764144,20765859,20767643,20769486,20771286,20773091,20774895,20776756,20778547,20780269,20781989,20783743,20785535,20787290,20789110,20790849,20792708,20794500,20796396,20798273,20800133,20802053,20804019,20805827,20807687,20809360,20811028,20812789,20814533,20816271,20818052,20819782,20821510,20823300,20824989,20826734,20828545,20830338,20832149,20834027,20835757,20837562,20839013,20840502,20842005,20843562,20845061,20846561,20848079,20849564,20851448,20853449,20855376,20857334,20859354,20861309,20863260,20865247,20867142,20869082,20871088,20873109,20875101,20877023,20878996,20880990,20883004,20884871,20885991,20886029,20886069,20886109,20886423,20886463,20886501,20886541,20886579,20888332,20890123,20891959,20893800,20895651,20897494,20899275,20901073,20903006,20904447,20905914,20907317,20908758,20910170,20911610,20913029,20914482,20916348,20918195,20920020,20921771,20923564,20925314,20927116,20928883,20930651,20931339,20931655,20931693,20931733,20931773,20932090,20932130,20932168,20932208,20932761,20933932,20935348,20937068,20938797,20940536,20942309,20944039,20945748,20947482,20949231,20950996,20952248,20953513,20954968,20956461,20956945,20958454,20959985,20961324,20962373,20964055,20965842,20967435,20968656,20968694,20968734,20968772,20969086,20969126,20969164,20969204,20969242,20970411,20971746,20972897,20974071,20975520,20977191,20978801,20980443,20982126,20983796,20985434,20987083,20988721,20989417,20989455,20989495,20989535,20990424,20991316,20991385,20991954,20993811,20995661,20997610,20999274,21000903,21002535,21004181,21005831,21007533,21009270,21010979,21012702,21014459,21016186,21017933,21019659,21021368,21023034,21024696,21026176,21026989,21028057,21028270,21030149,21031937,21033665,21035364,21037133,21038897,21040604,21042336,21044155,21046067,21047868,21049754,21051642,21053473,21055328,21057181,21058968,21060911,21062666,21064240,21065991,21067683,21069430,21071183,21072935,21074732,21076565,21078447,21080341,21082191,21084119,21085954,21087875,21089687,21091676,21093183,21094367,21095543,21096565,21097642,21098999,21100367,21101718,21103075,21104500,21105773,21106936,21108025,21109154,21110292,21111511,21112886,21114074,21114831,21115725,21116738,21117893,21119552,21121049,21121881,21122519,21123278,21124377,21125987,21127681,21129408,21130503,21131582,21132899,21134616,21135885,21136932,21137693,21138672,21139566,21140121,21140891,21141972,21143276,21144581,21145726,21147062,21148408,21149786,21151134,21152378,21154176,21156095,21157978,21159892,21161735,21163586,21165514,21167373,21169231,21171137,21173051,21174970,21176918,21178760,21180615,21182542,21184241,21185176,21186113,21187100,21188208,21190153,21192112,21193713,21195696,21197122,21198301,21199489,21200697,21202402,21204411,21206430,21208444,21210460,21212339,21214254,21216179,21218005,21220053,21222092,21224143,21226177,21228073,21229886,21231627,21233499,21235314,21237138,21238866,21240675,21242463,21244395,21246343,21248283,21250183,21252091,21253393,21254702,21256137,21257764,21258951,21260198,21261409,21262811,21264003,21265228,21266481,21267785,21269563,21270726,21271917,21273408,21274976,21275921,21276686,21277748,21279157,21280496,21281216,21282140,21283888,21285487,21286268,21287058,21288600,21290236,21291555,21292965,21294418,21296351,21298108,21299881,21301681,21303497,21305251,21307066,21308943,21310725,21312442,21314105,21315790,21317449,21319275,21321022,21322846,21324656,21326426,21327880,21329270,21330721,21332303,21333754,21335153,21336580,21338073,21339677,21341175,21342600,21344105,21345730,21347254,21348721,21350214,21351961,21353939,21355918,21357849,21359783,21361779,21363764,21365728,21367739,21369656,21371424,21373189,21374923,21376769,21378413,21379974,21381551,21383228,21385155,21387030,21388829,21390727,21392576,21394399,21396192,21398003,21399964,21401855,21403698,21405587,21407522,21409317,21411124,21412893,21414715,21416337,21417957,21419433,21421064,21422220,21423496,21424811,21426504,21427620,21428903,21430098,21431486,21432996,21434148,21435404,21437014,21438843,21440628,21442386,21444165,21446103,21447881,21449660,21451421,21453294,21455125,21456960,21458774,21460608,21461483,21462365,21463232,21463953,21465182,21466353,21467504,21468680,21469961,21471183,21472418,21473583,21474989,21476276,21477671,21479027,21480339,21482221,21484063,21485926,21487752,21489653,21491472,21493329,21495177,21497096,21499000,21500923,21502836,21504736,21506653,21508571,21510514,21512452,21514263,21516090,21517964,21519758,21521562,21523401,21525132,21526761,21528445,21530079,21532006,21533803,21535643,21537558,21539418,21541253,21543153,21544867,21546346,21547729,21549195,21550755,21552237,21553951,21555697,21557245,21558788,21560496,21562112,21563803,21565528,21567316,21569055,21570841,21572689,21574707,21576757,21578814,21580693,21582691,21584667,21586632,21588584,21590576,21592545,21594490,21596360,21597889,21598991,21600446,21601630,21603048,21604830,21606610,21608327,21610109,21611689,21613173,21614757,21616312,21618083,21619859,21621637,21623396,21625214,21627022,21628868,21630660,21632481,21634161,21635861,21637562,21639206,21640834,21642629,21644442,21646120,21647625,21648609,21649720,21650614,21652070,21653096,21654014,21654857,21656101,21657172,21658278,21659347,21660372,21661313,21661936,21662580,21663061,21663837,21664541,21665285,21665988,21666896,21667782,21669110,21670275,21671251,21672615,21673971,21675433,21676787,21678139,21679608,21681070,21682794,21684217,21685513,21687119,21688772,21690139,21691724,21693411,21695028,21696656,21697387,21697632,21697855,21698062,21698882,21699390,21699821,21700285,21701344,21703379,21705415,21707457,21709498,21711543,21713584,21715619,21717636,21719682,21721651,21723576,21725551,21727449,21729360,21731285,21733191,21735130,21736479,21737855,21739287,21740718,21742042,21743197,21744374,21745495,21746810,21748266,21749614,21751132,21752614,21754485,21756302,21758139,21759998,21761904,21763701,21765487,21767318,21769193,21770963,21772695,21774444,21776266,21778049,21779795,21781514,21783225,21784578,21786060,21787551,21788984,21790419,21791876,21793430,21794898,21796544,21798432,21800325,21802183,21804040,21805273,21806543,21807780,21809066,21810962,21812755,21814538,21816357,21817978,21819392,21820829,21822301,21823938,21825960,21827994,21830030,21832050,21834046,21836039,21838014,21840001,21841684,21843201,21844707,21846182,21847949,21849636,21851295,21852970,21854766,21856758,21858740,21860711,21862719,21864506,21866211,21867934,21869668,21871672,21873726,21875764,21877819,21879674,21880943,21882305,21882845,21883378,21883911,21884443,21885539,21886952,21888376,21889778,21890834,21892196,21893697,21895306,21896507,21897929,21899485,21901063,21902476,21903992,21905522,21907355,21908979,21910895,21912701,21913998,21915268,21916568,21917814,21918939,21919897,21920928,21921853,21923186,21924041,21925020,21925991,21926975,21928790,21930755,21932710,21934663,21936661,21938689,21940687,21942667,21944678,21946422,21947907,21949459,21951063,21952872,21954484,21956217,21957833,21959639,21961195,21962672,21964295,21966013,21967686,21969373,21971091,21972716,21974255,21975922,21977553,21979004,21980482,21982010,21983592,21985079,21986740,21988634,21990534,21992383,21994251,21996173,21998062,21999919,22001796,22003670,22005148,22006607,22008087,22010013,22011988,22013952,22015940,22017949,22019772,22021562,22023354,22025132,22027011,22028913,22030818,22032710,22034342,22035767,22037239,22038622,22040075,22041534,22043067,22044548,22046017,22047531,22049252,22050936,22052545,22054086,22055645,22057228,22058780,22060435,22062174,22063780,22065535,22067273,22068961,22070677,22072395,22074109,22075794,22077464,22078989,22080665,22082320,22083975,22085497,22087187,22088914,22090401,22091913,22093495,22095013,22096613,22098092,22099730,22101486,22102928,22104434,22105951,22107461,22108939,22110425,22112031,22113730,22115162,22116505,22117725,22119273,22120767,22122428,22124108,22125556,22127220,22128692,22130317,22132081,22133825,22135378,22137029,22138407,22139645,22140786,22142080,22143372,22144710,22145943,22147352,22149037,22150426,22151798,22153172,22154385,22155547,22156681,22157957,22159149,22160551,22162027,22163399,22164769,22166337,22167677,22168890,22170249,22172126,22173883,22175620,22177124,22178363,22179365,22180407,22181271,22182265,22183342,22184511,22185837,22187129,22188761,22190375,22191973,22193712,22195593,22196669,22197816,22198830,22199814,22200604,22201233,22202490,22203586,22205005,22206222,22207502,22208752,22210188,22211766,22213480,22215300,22217295,22218965,22220745,22222535,22224095,22225366,22226612,22227873,22229173,22230446,22231761,22233112,22234350,22235574,22236866,22238153,22239347,22241099,22242664,22244349,22246024,22247526,22248929,22250525,22252287,22253860,22255431,22256663,22257851,22259124,22260357,22261616,22262940,22264412,22266049,22267651,22268974,22270290,22271613,22272861,22273945,22275200,22276505,22277993,22279720,22281413,22283050,22284600,22285965,22287429,22288777,22290330,22291921,22293489,22294761,22296042,22297263,22298468,22299675,22300923,22302489,22304241,22305891,22307656,22309197,22310771,22312496,22314098,22315617,22317249,22318766,22319066,22319402,22321067,22322626,22322920,22323215,22324862,22326398,22326692,22326975,22328652,22330196,22330493,22330772,22332448,22334012,22334328,22334607,22336215,22337797,22338109,22338370,22339723,22340937,22342266,22343496,22344945,22346197,22347497,22348777,22350198,22351482,22352786,22354107,22355484,22356819,22358098,22359449,22360730,22362177,22363670,22364972,22366199,22367457,22368681,22369940,22371192,22372456,22373804,22375186,22376395,22377578,22378795,22379963,22381186,22382380,22383624,22385131,22386384,22387625,22388879,22390133,22391374,22392660,22393913,22395172,22397089,22398790,22400581,22402267,22403930,22405574,22407442,22409399,22410737,22412023,22413349,22414735,22416068,22417444,22418797,22420088,22421479,22422791,22424196,22425502,22426879,22428269,22429684,22431046,22432640,22434386,22436019,22437625,22439203,22440795,22442400,22443877,22445199,22446552,22447932,22449333,22450870,22452392,22453931,22455380,22456985,22458775,22460614,22462250,22463836,22465428,22467043,22468656,22470159,22471540,22472846,22474219,22475631,22477124,22478641,22480200,22481612,22483192,22484925,22486788,22488455,22490044,22491623,22493241,22494818,22496304,22497707,22499010,22500400,22501784,22503248,22504789,22506326,22507720,22509280,22510984,22512881,22514563,22516146,22517742,22519388,22520981,22522483,22523945,22525218,22526566,22527980,22529438,22531007,22532543,22533964,22535468,22537193,22539039,22540194,22541400,22542455,22543303,22544174,22545249,22546255,22547274,22548370,22549663,22550900,22552092,22552986,22553975,22555032,22556095,22557732,22558917,22560150,22561221,22562092,22562974,22564012,22565032,22566039,22567140,22568440,22569680,22570871,22571766,22572743,22573821,22574833,22576425,22578368,22580269,22582202,22584162,22586135,22588069,22590032,22591934,22593808,22595596,22597382,22599251,22601132,22603099,22605029,22606969,22608416,22610399,22612365,22614314,22616282,22618288,22620266,22622177,22624139,22626140,22627907,22629668,22631438,22633198,22634986,22636722,22638560,22640308,22642064,22643838,22645626,22647382,22649233,22650732,22652687,22654679,22656630,22658521,22660391,22662361,22664159,22665018,22665825,22667562,22669491,22671481,22673460,22675461,22677394,22679396,22681378,22683326,22685341,22687287,22689261,22691240,22693180,22695157,22697109,22699056,22701040,22702620,22704174,22705739,22707318,22708891,22710443,22712008,22713585,22715360,22717046,22718686,22720361,22721926,22723794,22725607,22727431,22729231,22731055,22732539,22734135,22735625,22737177,22738836,22740515,22742215,22743831,22745564,22747177,22748884,22750591,22752450,22754263,22756126,22757946,22759822,22761468,22763185,22764826,22766461,22768319,22770119,22771976,22773790,22775552,22777121,22778740,22780287,22781926,22783566,22785323,22786966,22788665,22790380,22792114,22793892,22795669,22797347,22798903,22800635,22802340,22804107,22805596,22807380,22809136,22810803,22812444,22814263,22815995,22817604,22819299,22820904,22822664,22824228,22825825,22827456,22829189,22830817,22832455,22833470,22835378,22837272,22838657,22840274,22842232,22844103,22845806,22847361,22849214,22851224,22853231,22855004,22856716,22858078,22859127,22860240,22861493,22862730,22864447,22866041,22867562,22869046,22870478,22871963,22873420,22874892,22876533,22877812,22878849,22879660,22880668,22881960,22883034,22884029,22885083,22886148,22887655,22889482,22891295,22893178,22894927,22896828,22898595,22900479,22902311,22904131,22905795,22907432,22909157,22910776,22912550,22914293,22915976,22917862,22919697,22921480,22923343,22925140,22927017,22928808,22930685,22932489,22934332,22936022,22937684,22939478,22941095,22942887,22944624,22946313,22948180,22949924,22951823,22953649,22955530,22957382,22959245,22961140,22962973,22964932,22966886,22968807,22970808,22972689,22974661,22976627,22978661,22980595,22982536,22984279,22985970,22987764,22989535,22991460,22993287,22995092,22996830,22998525,22999937,23001140,23002757,23004250,23006027,23007415,23008433,23009663,23010690,23011455,23011710,23012642,23013964,23015199,23016573,23017835,23019245,23020572,23021867,23023216,23024528,23025977,23027267,23028578,23029891,23031198,23032681,23034010,23035327,23036668,23038071,23039512,23041105,23042072,23043712,23045235,23047108,23049048,23051064,23053110,23055102,23057109,23059085,23061013,23062829,23064445,23065951,23067462,23069093,23070718,23072392,23074078,23075881,23077630,23079368,23081081,23082764,23084417,23085986,23087576,23089221,23090428,23092128,23093973,23095924,23097779,23099446,23101131,23102887,23104846,23106873,23108756,23110533,23112184,23114064,23115983,23117876,23119663,23121223,23122924,23124866,23126781,23128666,23130383,23132023,23133944,23135891,23137893,23139828,23141671,23143311,23145135,23147001,23148890,23150739,23152328,23153277,23154279,23155251,23156326,23157895,23159420,23161041,23162692,23164341,23165969,23167588,23169288,23170774,23172648,23174337,23176040,23177767,23179407,23181105,23182766,23184405,23186105,23187757,23189568,23191422,23193186,23194948,23196667,23198331,23200134,23201794,23203436,23205157,23206845,23208630,23210256,23211928,23213575,23215171,23217038,23218906,23220781,23222710,23224614,23226595,23228499,23230267,23231927,23233694,23235355,23237040,23238978,23240887,23242784,23244670,23246582,23248548,23250493,23252392,23254345,23256288,23258146,23259933,23261707,23263498,23265304,23267295,23269204,23271110,23273001,23274903,23276754,23278638,23280543,23281878,23283023,23284326,23285977,23287598,23289262,23290852,23292642,23294506,23296344,23298223,23300055,23301931,23303753,23305587,23307503,23309324,23311216,23313112,23314646,23315246,23315761,23316341,23317582,23318620,23319842,23321112,23322349,23323387,23325076,23326816,23328401,23330034,23331723,23333460,23334945,23336642,23338387,23339638,23341350,23342880,23344215,23345303,23346949,23348591,23350249,23351965,23353723,23355410,23357195,23358793,23360393,23361958,23363315,23364827,23366303,23367822,23369257,23370677,23372224,23373620,23375085,23376472,23378030,23379511,23381311,23383118,23384960,23386866,23388726,23390555,23392392,23394235,23396122,23397959,23399794,23401693,23403595,23405476,23407351,23409213,23411154,23413150,23415123,23417054,23418940,23420835,23422776,23424692,23426600,23428524,23430457,23432392,23434266,23436127,23437976,23439892,23441785,23443638,23445203,23446617,23448026,23449845,23451480,23453060,23454683,23456289,23457896,23459548,23461180,23462935,23464584,23466249,23467884,23469547,23471183,23472817,23474443,23476071,23477832,23479499,23481144,23482782,23484411,23486084,23487718,23489373,23491080,23492964,23494839,23496710,23498575,23500466,23502324,23504175,23506015,23507960,23509781,23511619,23513443,23515285,23517139,23518987,23520830,23522697,23524659,23526517,23528373,23530234,23532097,23533931,23535802,23537663,23539536,23540869,23542291,23543724,23545102,23546476,23547901,23549507,23550905,23552237,23553647,23555140,23556558,23558025,23559619,23561501,23563398,23565238,23566962,23568766,23570595,23572465,23574368,23576184,23577841,23579578,23581309,23583040,23584707,23586423,23588153,23589795,23591430,23593132,23594858,23596523,23598297,23600013,23601796,23603353,23605070,23606840,23608693,23610504,23612379,23614036,23615715,23617604,23619488,23621424,23623280,23625069,23626704,23628519,23630278,23632072,23633888,23635367,23637027,23638747,23640424,23642224,23643925,23645550,23647382,23649104,23650952,23652700,23654501,23656148,23657856,23659491,23661110,23662873,23664462,23665598,23666890,23668148,23669344,23670636,23671896,23672956,23674660,23676238,23677732,23679324,23681002,23682600,23684126,23685736,23687301,23688848,23690417,23691938,23693705,23695514,23697425,23699383,23701243,23702522,23704371,23705802,23707225,23708999,23710791,23712620,23714355,23716062,23717672,23719139,23720847,23722549,23724335,23725958,23727306,23728619,23730480,23732316,23734113,23735584,23737082,23738528,23739964,23741641,23743202,23744688,23746201,23747682,23749199,23750689,23752235,23753762,23755305,23756571,23758015,23759562,23761126,23762670,23764160,23765636,23767124,23768808,23770334,23771868,23773271,23774643,23776096,23777604,23779402,23781162,23783040,23784847,23786676,23788516,23790325,23792066,23793786,23795342,23797047,23798828,23800515,23802295,23803995,23805730,23807494,23809228,23810965,23812854,23814795,23816646,23818517,23820284,23822169,23823988,23825741,23827439,23829083,23830798,23832518,23834299,23835996,23837690,23839392,23841207,23842972,23844575,23846403,23848105,23849833,23851510,23853176,23854854,23856574,23858243,23859996,23861685,23863452,23865136,23866800,23868539,23870255,23871905,23873693,23875256,23877075,23878728,23880150,23881584,23883342,23885090,23886762,23888448,23890157,23891583,23893080,23894623,23896121,23897635,23899114,23900693,23902190,23903749,23905541,23907281,23908965,23910714,23912373,23914076,23915839,23917597,23919220,23920885,23922544,23924224,23925847,23927462,23929078,23930728,23932429,23934109,23935756,23937366,23939074,23940692,23942349,23943986,23945725,23947386,23949035,23950677,23952355,23954005,23955639,23957290,23958937,23960633,23962251,23963909,23965534,23967239,23968884,23970500,23972097,23973830,23975439,23977099,23978806,23980579,23982269,23983914,23985532,23987152,23988873,23990497,23992168,23993834,23995638,23997276,23998866,24000488,24002192,24003851,24005657,24007500,24009198,24010830,24012553,24014387,24016043,24017750,24019517,24021350,24023120,24024911,24026796,24028672,24030558,24032552,24034504,24036470,24038403,24040381,24042220,24044058,24045962,24047921,24049930,24051944,24053962,24055852,24057739,24059622,24061425,24063285,24065283,24067302,24069313,24071309,24073298,24075260,24077181,24079083,24080961,24082901,24084820,24086744,24088708,24090704,24092469,24094320,24096217,24098139,24100033,24101852,24103438,24105048,24106865,24108733,24110546,24112178,24113817,24115427,24117056,24118693,24120386,24121862,24123280,24124625,24125946,24127377,24128900,24130373,24131807,24133205,24134657,24136195,24137699,24139056,24140444,24141970,24143500,24144846,24146538,24148234,24149966,24151719,24153385,24155095,24156788,24158547,24160231,24161923,24163681,24165494,24167160,24168845,24170486,24172176,24173836,24175562,24177211,24178899,24180541,24182278,24183953,24185652,24187288,24188983,24190702,24192325,24193964,24195627,24197601,24199458,24201383,24203308,24205203,24207133,24209024,24210897,24212834,24214626,24216427,24218241,24220047,24222076,24224066,24226086,24228126,24230174,24232206,24234234,24236270,24238295,24240333,24242357,24244408,24246465,24248516,24250572,24252611,24254647,24256634,24258482,24260352,24262266,24264203,24266111,24267989,24269846,24271727,24273211,24274619,24276085,24277621,24279365,24280976,24282509,24284096,24285725,24287226,24288866,24290476,24291920,24293443,24295054,24296594,24298137,24299771,24301301,24302706,24304242,24305668,24307346,24309083,24311031,24312725,24314397,24316076,24317777,24319718,24321583,24323452,24325240,24327006,24328743,24330540,24332371,24334288,24335693,24337697,24339648,24341670,24343624,24345533,24347431,24349180,24350892,24352527,24354297,24356008,24357798,24359554,24361331,24362996,24364749,24366470,24368140,24369848,24371554,24372884,24374397,24375909,24377427,24378908,24380470,24381987,24383515,24384997,24386549,24388062,24389559,24391064,24392614,24394129,24395643,24397155,24398719,24400021,24401317,24402607,24403893,24405556,24407496,24409407,24411321,24413196,24415153,24417088,24419016,24420973,24422424,24423743,24425013,24426337,24427665,24428959,24430249,24431632,24433284,24434780,24436228,24437787,24439470,24441010,24442517,24444149,24445714,24447571,24449184,24450862,24452610,24453991,24455641,24457332,24459001,24460888,24462112,24463353,24464633,24465892,24467178,24468509,24469738,24470920,24472419,24473592,24474547,24475730,24476815,24478100,24479144,24480332,24481815,24483028,24484299,24485533,24486722,24488026,24489222,24490600,24491936,24493598,24494973,24496281,24497574,24498940,24500242,24501547,24502838,24504318,24506275,24507696,24509363,24511122,24512761,24514304,24515747,24517278,24519256,24521106,24522102,24523348,24524462,24525745,24526986,24528230,24530169,24532172,24534037,24535559,24537378,24539208,24541011,24542485,24544406,24546143,24546548,24547204,24547706,24548160,24548783,24549262,24549823,24550260,24551147,24551869,24553198,24554629,24556000,24557226,24558379,24559078,24559964,24560408,24561556,24562969,24564490,24565979,24567401,24568795,24569241,24570599,24571541,24572943,24574330,24575634,24576982,24578200,24579379,24580972,24582816,24584563,24586326,24588125,24589132,24589188,24589790,24590816,24591582,24592084,24592773,24593196,24593989,24594457,24595104,24596032,24597068,24597738,24599124,24600544,24601956,24603388,24604815,24606230,24607932,24609592,24611237,24612850,24614401,24615921,24617728,24619426,24620690,24621774,24622988,24624160,24625479,24626881,24628091,24629330,24630738,24632197,24633806,24635371,24637050,24638739,24640151,24641468,24642897,24644173,24644307,24644332,24644362,24644387,24645353,24646143,24647277,24648316,24649963,24651575,24653207,24654810,24656318,24657683,24659302,24660861,24662398,24663919,24665802,24667713,24669635,24671550,24673463,24675375,24676348,24677287,24678767,24680264,24681209,24682137,24683316,24684548,24685979,24687411,24688899,24690381,24691936,24693445,24695176,24696950,24698488,24700066,24701614,24703152,24704739,24706252,24707805,24709377,24711406,24713463,24715518,24717550,24719443,24721299,24723345,24725343,24727133,24728911,24730831,24732707,24734720,24736722,24738748,24740744,24742762,24744755,24746765,24748745,24750792,24752841,24754621,24756350,24758340,24760340,24762355,24764344,24766047,24767728,24769000,24770211,24771435,24772642,24774574,24776570,24778278,24780000,24781877,24783770,24785563,24787328,24789076,24790836,24792795,24794729,24796707,24798668,24800617,24802611,24804604,24806573,24808163,24809684,24811233,24812745,24814301,24815847,24817416,24818911,24820343,24821711,24823033,24824339,24825622,24826854,24828252,24829511,24831496,24833496,24835483,24837433,24839437,24841397,24843334,24845236,24847241,24849231,24850906,24852615,24854241,24855913,24857565,24859229,24859556,24859846,24860885,24862251,24863621,24864789,24865737,24866787,24867754,24868774,24870347,24872067,24873692,24875353,24877092,24878815,24880357,24881862,24883473,24885034,24886617,24888175,24889726,24891191,24892578,24893957,24895072,24896158,24897469,24898790,24900103,24901298,24902743,24904162,24905734,24907319,24908780,24910221,24911604,24913010,24913984,24914930,24916455,24918042,24919139,24920040,24921337,24922653,24924122,24925559,24927051,24928592,24929814,24931022,24932456,24933948,24935558,24937231,24939056,24940902,24942686,24944509,24946108,24947652,24949289,24950894,24952492,24954064,24955617,24957124,24958670,24960174,24961434,24962741,24964272,24965853,24967271,24968647,24970054,24971438,24972845,24974201,24974906,24975447,24975922,24976347,24977753,24979246,24980891,24982473,24983890,24985328,24986858,24988373,24989798,24991185,24992360,24993485,24994804,24996127,24997630,24999118,25000252,25001240,25001586,25001859,25003544,25005363,25007206,25009006,25010579,25012115,25013112,25014129,25015638,25017175,25018753,25020330,25021913,25023497,25025070,25026650,25028521,25030313,25032131,25033890,25035748,25037576,25039411,25041235,25042488,25043857,25045242,25046598,25048033,25049451,25051084,25052747,25054362,25055903,25057417,25058912,25060435,25061981,25063470,25064946,25066821,25068767,25070331,25071857,25072493,25073210,25074105,25074954,25076074,25077636,25079280,25080945,25082492,25083956,25085457,25086819,25088009,25089132,25089845,25090495,25091351,25092160,25092835,25093435,25094702,25096270,25096807,25097328,25097863,25098349,25100093,25101932,25103105,25104218,25105285,25106319,25107685,25109074,25110236,25111272,25112245,25113154,25114519,25115957,25117419,25118849,25120279,25121714,25123402,25125105,25126798,25128448,25130330,25132227,25133818,25135383,25136409,25137417,25138636,25139779,25140733,25141676,25142634,25143520,25144588,25145567,25146806,25147996,25148564,25149076,25149717,25150349,25150895,25151423,25152066,25152702,25153236,25153765,25154406,25155037,25155582,25156111,25156743,25157332,25157838,25158325,25158884,25159428,25161238,25163121,25164265,25165304,25166385,25167417,25168499,25169531,25170681,25171742,25173543,25175291,25176958,25178669,25180318,25181995,25183721,25185411,25186607,25187774,25189407,25191073,25192738,25194469,25196355,25198206,25198516,25198710,25199042,25199330,25199547,25199740,25200109,25200339,25200542,25200663,25200861,25200903,25201099,25201241,25201480,25201773,25202091,25202361,25203726,25205203,25206784,25208465,25209543,25210639,25211712,25212825,25213989,25215218,25216716,25218220,25219691,25221142,25223022,25224876,25226594,25228283,25229833,25231234,25232849,25234462,25235877,25237237,25238539,25239803,25241185,25242885,25244509,25245711,25247268,25248736,25250186,25251691,25253190,25254348,25255791,25257231,25258664,25260132,25261653,25263181,25264686,25265664,25266935,25268292,25269726,25270831,25272134,25273381,25274511,25275588,25276866,25278402,25279919,25281403,25282918,25284454,25285975,25287504,25288825,25289575,25290287,25290839,25291480,25292232,25292969,25293628,25294246,25294844,25295456,25296092,25296729,25297458,25298098,25298796,25299535,25300226,25300964,25301755,25302522,25303245,25303807,25304338,25304854,25306711,25308766,25310542,25312287,25314018,25315685,25317368,25319070,25320784,25322510,25324197,25325890,25327621,25329668,25331487,25333244,25334947,25336636,25338392,25340120,25341873,25343243,25344219,25345176,25346967,25348595,25350160,25352082,25353716,25355196,25356648,25358135,25359612,25361075,25362547,25364039,25365511,25367012,25367661,25368245,25368790,25369404,25370083,25370568,25371094,25371639,25372284,25372857,25373448,25374037,25374656,25375171,25375529,25375925,25376446,25376935,25377165,25377623,25378223,25378589,25378909,25379435,25379626,25380213,25380828,25382811,25384721,25386375,25388028,25389683,25391376,25393035,25394699,25396379,25398068,25399753,25401450,25403125,25404867,25406924,25408570,25410257,25411927,25413676,25415420,25417109,25418821,25420297,25420963,25421762,25422578,25424482,25426292,25427969,25429665,25431256,25433061,25434779,25436296,25437766,25439278,25440787,25442280,25443777,25445281,25446779,25448271,25449769,25451284,25452775,25454254,25455763,25457239,25458745,25460235,25461734,25463219,25464699,25465658,25466098,25466530,25467056,25467706,25468364,25468867,25469532,25470151,25470607,25470966,25471459,25471989,25472469,25472855,25473249,25473691,25474221,25474810,25475438,25476088,25476773,25477381,25478003,25478681,25479287,25479815,25480429,25480885,25481281,25481694,25482335,25482692,25483165,25483537,25484098,25484573,25484931,25485563,25485990,25486493,25486897,25487494,25488044,25488625,25489287,25489637,25490121,25490620,25491025,25491528,25492046,25492313,25492805,25493345,25493761,25494276,25494605,25494898,25495303,25496661,25498646,25500669,25502694,25504689,25506730,25508586,25510284,25511970,25513662,25515349,25517061,25518767,25520474,25522149,25523845,25525528,25527241,25528932,25530618,25532294,25533987,25535699,25537385,25539104,25540833,25542540,25544247,25545918,25547636,25549303,25551017,25552693,25554483,25556531,25558579,25560555,25562242,25563894,25565574,25567272,25569021,25570759,25572416,25574060,25575798,25577557,25579251,25580924,25582607,25584357,25586102,25587784,25589426,25591058,25592765,25594385,25595552,25596474,25597371,25598200,25599015,25599688,25600699,25601790,25602829,25603918,25605126,25606296,25607306,25608332,25609406,25610408,25611306,25612196,25613420,25614015,25615872,25617859,25619799,25621603,25623248,25624755,25626273,25627754,25629252,25630769,25632280,25633764,25635219,25636745,25638223,25639710,25640569,25641156,25641480,25641924,25642353,25642779,25643289,25643633,25644156,25644780,25645399,25645889,25646441,25647066,25647600,25647903,25648232,25648366,25648567,25649101,25649749,25650280,25650795,25651171,25651731,25652026,25652538,25653066,25653196,25653570,25654602,25656631,25658634,25660393,25662104,25663776,25665486,25667175,25668880,25670589,25672268,25673952,25675708,25677439,25679128,25680808,25682741,25684771,25686499,25688169,25689839,25691541,25693293,25695029,25696729,25698577,25700301,25701932,25703143,25704071,25705617,25706873,25708709,25710535,25711952,25713582,25715072,25716560,25718050,25719537,25721024,25722516,25724003,25725458,25726931,25727768,25727986,25728225,25728359,25728790,25729322,25729576,25729801,25730112,25730535,25730763,25731211,25731566,25732004,25732139,25732248,25732444,25732740,25733131,25733504,25733943,25734353,25734595,25734932,25735450,25735954,25736408,25736659,25737515,25739512,25741555,25743366,25745074,25746772,25748473,25750156,25751839,25753526,25755198,25756879,25758578,25760299,25762004,25763736,25765784,25767714,25769511,25771388,25773083,25774825,25776519,25778218,25780018,25781877,25783707,25785501,25786171,25786696,25787475,25788416,25789337,25790369,25792054,25793702,25795471,25797038,25798535,25800029,25801521,25803023,25804502,25805777,25806196,25806559,25806890,25807273,25807760,25807928,25808315,25808801,25809258,25809631,25809912,25810395,25810674,25810926,25811224,25811641,25812281,25814248,25816141,25817834,25819538,25821208,25822874,25824570,25826251,25827953,25829795,25831731,25833482,25835190,25836842,25838575,25840402,25842249,25843546,25844388,25845969,25847289,25848979,25850563,25852062,25853556,25855044,25855908,25856521,25856958,25857453,25857965,25858446,25859010,25859509,25860010,25860309,25860619,25861050,25862883,25864608,25866261,25867912,25869567,25871246,25873107,25874804,25876506,25878135,25879853,25880667,25882474,25884115,25885656,25887169,25888640,25890159,25891662,25893155,25894654,25896153,25897637,25899115,25900637,25902127,25903630,25905134,25906630,25908131,25909621,25910441,25910910,25911403,25911777,25912094,25912536,25912983,25913425,25913774,25914133,25914655,25915182,25915600,25916017,25916404,25916752,25917207,25917674,25918065,25918459,25918706,25918889,25919197,25919519,25919851,25920071,25920254,25920543,25920893,25921198,25921392,25921725,25922057,25922428,25922660,25923090,25923416,25923738,25924131,25924450,25924876,25925296,25925765,25926067,25926495,25926733,25927004,25927387,25927702,25928053,25928552,25929014,25929407,25931075,25933050,25934972,25936926,25938965,25940615,25942279,25943938,25945596,25947285,25948988,25950665,25952345,25954023,25955756,25957440,25959122,25960793,25962469,25964142,25965799,25967478,25969147,25970838,25972490,25974166,25975847,25977523,25979280,25981328,25983376,25985123,25986733,25988372,25990009,25991664,25993281,25995104,25996747,25998485,26000185,26001888,26003528,26005108,26006761,26008430,26010140,26011759,26013269,26013787,26014444,26014954,26015596,26016176,26017158,26018334,26019898,26021057,26022182,26023224,26024369,26025946,26027344,26028832,26030299,26031674,26032975,26034815,26036644,26038464,26040287,26041942,26043527,26045010,26046467,26047945,26049432,26050938,26052421,26053926,26055418,26056917,26058421,26059908,26060535,26061042,26061607,26062267,26062860,26063467,26063852,26064373,26064674,26064956,26065331,26065702,26066061,26066537,26067120,26067576,26067987,26068407,26068916,26069468,26070069,26070709,26071285,26071737,26072202,26072607,26072891,26073418,26074050,26074722,26075418,26075930,26076212,26076629,26077064,26077485,26077708,26078276,26080282,26082255,26084281,26086027,26087736,26089425,26091114,26092817,26094509,26096176,26097869,26099586,26101276,26102952,26104695,26106419,26108125,26109837,26111535,26113431,26115479,26117404,26119166,26120916,26122646,26124441,26126242,26127972,26129804,26131511,26133238,26135076,26136832,26138570,26140400,26141394,26142309,26143216,26144586,26146184,26147720,26149404,26151109,26152977,26154625,26156178,26157829,26159487,26160969,26162455,26163960,26165457,26166938,26168439,26169937,26171414,26172901,26174400,26175902,26177396,26178878,26180361,26181840,26183302,26184777,26186257,26187756,26189269,26190766,26191575,26192207,26192808,26193467,26193956,26194506,26195043,26195653,26196244,26196764,26197352,26197746,26198217,26198727,26199269,26199782,26200263,26200624,26201163,26201618,26202225,26202728,26203266,26203873,26204329,26204754,26205169,26205711,26206207,26206837,26207239,26207628,26208125,26208567,26208911,26209500,26209794,26210073,26210649,26210904,26211470,26211965,26212484,26212985,26213165,26213600,26214118,26214430,26214747,26215229,26215381,26215690,26216096,26216533,26216944,26217473,26217870,26218140,26218574,26219104,26219545,26219723,26220118,26220558,26221034,26221388,26221575,26222010,26222639,26223087,26223518,26223886,26224391,26224791,26225453,26226052,26227516,26229564,26231621,26233665,26235722,26237770,26239818,26241639,26243382,26245122,26246873,26248636,26250420,26252165,26253888,26255613,26257324,26259066,26260793,26262528,26264227,26265980,26267738,26269483,26271244,26272995,26274746,26276492,26278253,26279988,26281728,26283441,26285204,26286963,26288739,26290509,26292248,26293992,26295763,26297519,26299241,26300985,26303001,26305049,26307097,26309145,26311184,26312975,26314757,26316555,26318396,26320278,26322118,26323833,26325660,26327466,26329271,26331036,26332771,26334595,26336433,26338241,26340043,26341849,26343685,26345520,26347401,26349207,26350902,26352724,26354577,26356424,26358283,26360114,26361967,26363818,26365649,26367551,26369352,26371059,26371967,26372821,26373653,26374406,26375238,26376414,26377808,26379329,26380384,26381712,26383067,26384491,26385488,26386342,26387165,26388290,26389635,26390892,26392242,26393975,26395943,26397864,26399655,26401354,26402891,26404468,26406053,26407612,26409200,26410706,26412176,26413673,26415192,26416719,26418219,26419669,26421123,26422619,26424122,26425608,26427079,26428574,26430082,26431619,26433089,26434577,26436087,26437569,26439069,26440358,26440907,26441491,26442100,26442536,26443082,26443480,26443918,26444480,26445126,26445769,26446364,26447011,26447698,26448291,26448733,26449283,26449848,26450446,26450940,26451232,26451707,26452193,26452758,26453307,26453844,26454310,26454757,26455160,26455629,26456264,26456501,26456741,26457020,26457438,26457937,26458240,26458587,26458959,26459340,26459750,26460259,26460666,26460905,26461314,26461743,26462175,26462633,26462872,26463149,26463452,26463866,26464347,26464530,26464754,26464917,26465261,26465427,26465939,26466444,26466997,26467462,26467994,26468444,26468957,26470331,26472356,26474265,26476236,26478213,26480202,26481905,26483554,26485241,26486921,26488590,26490269,26491991,26493692,26495385,26497076,26498742,26500381,26502043,26503745,26505449,26507124,26508820,26510527,26512208,26513899,26515568,26517258,26518936,26520604,26522289,26523951,26525618,26527278,26529226,26531274,26533322,26535009,26536688,26538387,26540114,26541839,26543664,26545345,26547036,26548689,26550422,26552188,26553924,26555640,26557336,26559092,26560830,26562608,26564252,26565949,26567719,26569448,26570384,26571263,26571827,26572434,26573035,26573719,26574548,26575609,26576688,26577366,26578107,26578702,26579392,26580112,26580882,26581448,26582102,26582894,26583551,26583836,26584489,26585195,26586126,26586901,26587447,26587948,26588511,26590021,26590836,26591996,26593652,26595385,26597181,26598934,26600678,26602338,26603942,26605493,26607106,26608710,26610178,26611655,26613144,26614625,26616102,26617568,26619050,26620518,26621999,26623447,26624945,26626414,26627893,26629351,26630828,26632306,26633780,26635251,26636710,26638183,26639664,26641155,26642636,26644121,26645615,26647102,26648576,26650050,26651491,26652969,26654423,26655879,26657338,26658788,26660260,26661745,26663200,26664660,26666141,26667580,26669073,26670565,26672055,26673519,26674983,26676450,26677934,26679384,26680859,26682288,26683709,26685127,26686584,26688058,26689558,26691012,26692463,26693952,26695412,26696885,26698353,26699838,26701323,26702807,26704275,26705747,26707199,26708672,26710145,26711620,26713101,26714577,26716039,26717457,26718337,26718919,26719279,26719890,26720419,26720871,26721250,26721724,26722250,26722638,26722890,26723346,26723966,26724427,26725003,26725379,26725895,26726467,26727104,26727627,26728277,26728822,26729336,26729899,26730374,26730752,26731312,26731858,26732452,26732963,26733353,26733832,26734326,26734840,26735397,26735789,26736282,26736774,26737258,26737764,26738394,26739007,26739596,26740206,26740640,26740925,26741224,26741844,26742291,26742801,26743365,26744006,26744541,26745088,26745639,26746134,26746677,26747152,26747557,26747979,26748552,26748992,26749447,26749979,26750527,26751006,26751418,26751919,26752351,26752882,26753373,26753862,26754214,26754754,26755303,26755861,26756437,26757108,26757670,26758287,26758792,26759407,26759893,26760479,26761102,26761427,26761764,26762153,26762564,26763068,26763575,26764089,26764509,26764795,26765158,26765736,26765929,26766387,26766819,26767359,26767898,26768083,26768655,26769209,26769699,26770241,26770723,26771190,26771523,26771829,26772370,26772571,26772779,26773018,26773490,26774079,26774683,26775177,26775475,26775927,26776300,26776633,26776929,26777272,26777616,26778146,26778551,26778990,26779501,26780005,26780506,26781067,26781670,26782137,26782660,26783252,26783762,26784271,26784751,26785113,26785639,26786280,26786773,26787306,26787838,26788316,26788766,26789246,26789500,26789760,26790367,26790736,26791277,26791832,26792343,26792880,26793385,26793743,26794081,26794607,26795048,26795583,26796035,26796482,26796901,26797371,26797810,26798399,26799036,26799534,26800013,26800456,26800918,26801386,26801861,26802510,26803088,26803540,26803896,26804327,26804799,26805287,26805736,26806390,26806835,26807202,26807539,26807916,26808203,26808492,26808903,26809275,26809593,26810061,26810282,26810723,26811217,26811791,26812388,26812730,26813164,26813592,26814041,26814569,26815121,26815546,26816070,26816641,26817081,26817637,26818140,26818591,26819066,26819518,26819677,26820069,26820566,26821052,26821673,26822230,26822662,26823105,26823670,26824182,26824619,26825100,26825713,26826294,26826759,26827225,26827720,26828291,26828824,26829285,26829730,26830264,26830614,26830713,26831073,26831660,26832251,26832775,26833308,26833786,26834347,26834885,26835384,26835903,26836119,26837770,26839713,26841648,26843567,26845495,26847415,26849402,26851447,26853393,26855405,26857353,26859329,26861311,26863228,26865225,26867203,26869168,26871100,26873148,26875205,26876855,26878501,26880129,26881774,26883467,26885162,26886886,26888598,26890304,26891979,26893679,26895359,26897045,26898723,26900398,26902076,26903745,26905425,26907109,26908790,26910464,26912165,26913839,26915529,26917221,26918916,26920597,26922276,26923946,26925615,26927298,26929006,26930684,26932369,26934055,26935724,26937422,26939088,26940782,26942467,26944146,26945793,26947443,26949098,26950782,26952473,26954147,26955816,26957498,26959154,26960787,26962464,26964164,26965825,26967496,26969187,26970890,26972592,26974279,26975970,26977660,26979323,26981003,26982675,26984304,26986009,26987716,26989434,26991089,26992752,26994401,26996060,26997750,26999424,27001072,27002751,27004417,27006064,27007732,27009406,27011080,27012754,27014435,27016089,27017757,27019421,27021149,27022852,27024541,27026223,27027899,27029611,27031295,27032969,27034640,27036360,27038050,27039747,27041431,27043112,27044771,27046434,27048111,27049826,27051504,27053161,27054866,27056914,27058962,27061010,27063058,27065106,27067154,27069202,27071250,27073298,27075346,27077363,27079036,27080597,27082270,27084003,27085774,27087520,27089293,27090967,27092692,27094406,27096091,27097730,27099428,27101150,27102838,27104563,27106286,27108014,27109673,27111402,27113109,27114850,27116603,27118271,27119944,27121613,27123326,27125043,27126717,27128388,27130004,27131662,27133325,27135028,27136750,27138349,27140061,27141790,27143484,27145212,27146970,27148691,27150444,27152117,27153856,27155488,27157240,27158986,27160683,27162336,27163997,27165741,27167519,27169075,27170556,27172123,27173663,27175401,27177109,27178784,27180545,27182356,27184110,27185827,27187560,27189230,27190899,27192702,27194413,27195990,27197704,27199466,27201202,27202995,27204717,27206399,27207843,27208700,27209486,27210282,27211084,27211853,27212624,27213410,27214027,27214686,27215280,27215809,27216569,27217118,27217637,27217908,27218457,27219075,27219818,27220572,27221442,27221980,27222693,27223326,27224046,27224846,27225666,27226333,27227055,27227859,27228620,27229250,27230240,27231152,27231751,27232547,27233428,27234198,27234933,27235657,27236275,27237011,27237578,27238257,27239038,27239775,27240615,27241430,27242100,27242819,27243582,27244227,27244622,27244996,27245577,27246311,27246996,27247718,27248276,27248775,27249666,27250216,27251129,27252102,27252948,27253641,27254121,27254591,27255228,27255829,27256538,27257233,27257909,27258562,27259033,27259626,27260164,27260779,27261441,27262303,27262938,27263720,27264676,27265267,27265795,27266560,27267303,27267963,27268364,27269147,27269934,27270873,27271653,27272451,27273108,27273717,27274310,27274989,27275839,27276517,27277144,27277775,27278466,27279149,27279926,27280601,27281142,27281675,27282097,27282512,27283494,27284347,27285225,27286072,27286846,27287457,27288270,27288727,27289221,27290210,27291008,27291706,27292387,27293160,27293830,27294432,27295132,27295956,27296636,27297198,27297848,27298526,27299082,27299662,27300428,27301087,27301493,27301808,27302102,27302422,27302706,27303039,27303464,27303772,27304065,27304364,27304672,27304955,27305299,27305718,27306284,27306856,27307535,27307828,27308391,27308973,27309606,27310279,27310924,27311554,27312119,27312923,27313639,27314230,27314921,27315851,27316599,27317060,27317357,27317845,27318311,27318607,27319056,27319394,27319663,27320157,27320573,27320880,27321166,27321445,27321633,27322088,27322645,27323055,27323728,27324366,27325076,27325564,27325840,27326035,27326296,27326566,27326762,27326930,27327151,27327416,27328391,27330148,27331548,27333368,27335270,27337170,27339133,27341052,27342946,27344913,27346857,27348781,27350727,27352669,27354596,27356486,27358267,27360167,27362061,27363875,27365660,27367137,27368609,27370080,27371574,27373055,27374544,27376039,27377523,27379025,27380524,27381306,27381826,27382242,27382788,27383221,27383622,27384155,27384630,27385020,27385376,27385768,27386216,27386747,27387310,27387720,27388284,27388729,27388950,27389415,27389699,27390121,27390516,27390860,27391198,27391668,27391962,27392269,27392726,27392894,27393303,27393667,27394164,27395674,27397620,27399644,27401383,27403069,27404778,27406481,27408187,27409913,27411595,27413300,27414997,27416692,27418365,27420046,27421723,27423394,27425072,27427081,27429105,27430822,27432581,27434304,27436064,27437857,27439574,27441348,27443119,27444879,27446609,27448307,27449945,27450757,27451495,27452275,27453748,27455255,27456616,27457782,27459107,27460818,27462509,27464196,27465729,27467197,27468702,27470181,27471627,27473119,27474607,27476103,27477596,27479092,27479964,27480161,27480676,27481134,27481510,27482047,27482726,27483255,27483815,27484446,27484999,27485455,27485906,27486306,27486700,27486890,27487435,27487850,27488121,27488602,27488867,27489195,27489768,27490292,27490555,27490977,27491390,27491604,27492034,27494032,27496080,27497993,27499672,27501369,27503063,27504786,27506515,27508204,27509906,27511593,27513309,27514997,27516697,27518386,27520098,27522146,27524050,27525673,27527404,27529222,27531053,27532865,27534608,27536348,27538186,27539951,27541709,27543509,27544983,27545531,27546374,27547417,27548340,27549546,27551044,27552422,27554071,27555790,27557490,27559042,27560669,27562163,27563673,27565146,27566640,27568109,27569608,27571106,27572612,27574094,27575545,27577019,27578491,27579984,27581444,27582924,27584400,27585894,27587382,27588858,27590356,27591815,27593280,27594761,27596231,27597729,27599196,27600684,27602175,27603656,27605144,27606618,27608111,27609609,27611105,27612584,27614080,27615297,27615791,27616333,27616891,27617559,27618314,27618934,27619516,27620089,27620701,27621207,27621835,27622442,27623064,27623662,27624292,27624908,27625537,27626086,27626630,27627271,27628010,27628598,27629190,27629768,27630374,27631035,27631619,27632225,27632822,27633421,27633780,27634381,27634945,27635597,27636113,27636641,27637264,27637790,27638290,27638865,27639377,27639906,27640493,27641067,27641542,27641977,27642244,27642471,27642951,27643375,27643786,27644332,27644752,27645158,27645613,27646298,27646877,27647382,27647631,27647832,27648219,27648391,27648553,27648755,27649324,27649723,27650263,27650822,27651236,27651870,27652472,27652989,27653639,27654231,27654856,27655449,27655911,27656351,27656808,27657366,27657968,27658549,27659082,27659682,27660062,27660436,27660983,27661468,27661939,27662358,27662664,27662883,27663407,27663980,27664657,27665194,27665735,27666093,27666617,27667219,27667793,27668313,27668849,27669523,27670087,27670699,27671184,27671685,27672652,27674653,27676660,27678631,27680624,27682602,27684540,27686503,27688461,27690488,27692294,27694010,27695727,27697450,27699153,27700861,27702575,27704280,27705990,27707694,27709383,27711082,27712760,27714475,27716186,27717884,27719563,27721251,27722924,27724637,27726305,27727950,27729614,27731232,27732910,27734572,27736261,27737942,27739639,27741325,27743012,27744670,27746371,27748055,27749758,27751455,27753155,27754808,27756479,27758170,27759856,27761517,27763186,27764850,27766515,27768182,27770007,27772055,27774103,27776151,27778199,27780001,27781752,27783489,27785216,27786837,27788553,27790275,27792089,27793832,27795658,27797381,27799093,27800783,27802486,27804171,27805839,27807501,27809212,27810936,27812663,27814394,27816077,27817794,27819551,27821338,27822989,27824614,27826286,27828003,27829699,27831428,27833066,27834501,27835436,27836318,27837198,27838007,27838812,27839671,27840514,27841341,27842063,27843014,27844040,27844999,27845810,27846778,27847617,27848758,27850077,27851286,27852383,27853355,27854475,27855678,27856760,27858049,27859131,27860494,27861909,27863331,27864509,27865476,27866788,27867788,27868584,27869371,27869826,27870611,27871218,27871553,27872108,27873077,27874098,27875063,27876169,27877387,27878133,27878905,27879530,27880245,27881315,27882577,27883442,27884426,27885865,27887460,27889279,27891132,27892987,27894858,27896793,27898722,27900640,27902570,27904239,27905803,27907286,27908772,27910257,27911757,27913237,27914731,27916175,27917664,27919157,27920637,27922041,27922528,27922842,27923139,27923693,27924190,27924556,27924960,27925527,27925940,27926161,27926355,27926508,27926781,27927103,27927393,27927835,27928245,27928667,27929133,27929476,27929763,27930164,27930631,27930936,27931362,27931690,27932025,27932402,27932792,27933089,27933404,27933793,27934191,27934466,27936335,27938311,27940327,27942141,27943832,27945510,27947189,27948891,27950572,27952249,27953957,27955661,27957374,27959058,27960757,27962474,27964166,27965840,27967765,27969813,27971515,27973208,27974945,27976695,27978436,27980155,27981964,27983777,27985490,27987236,27988933,27990627,27991681,27992318,27993342,27994878,27996184,27996792,27997614,27998905,28000732,28002550,28004215,28005835,28007320,28008799,28010300,28011779,28013286,28014805,28015897,28016388,28016958,28017520,28018034,28018477,28018967,28019484,28019911,28020320,28020772,28021124,28021441,28021704,28022065,28022480,28022930,28023363,28023613,28024035,28024561,28024719,28025053,28026736,28028734,28030497,28032210,28033924,28035603,28037301,28039009,28040657,28042343,28044042,28045750,28047634,28049577,28051319,28053154,28054881,28056660,28058429,28060153,28061976,28063826,28064700,28065517,28066857,28068565,28070023,28071472,28073011,28074669,28076233,28077707,28079065,28080525,28082008,28083483,28084985,28086463,28087926,28089398,28090886,28092389,28093894,28095381,28096875,28098371,28099861,28100574,28101074,28101528,28102141,28102723,28103195,28103700,28104173,28104608,28105262,28105790,28106306,28106839,28107481,28107858,28108209,28108642,28109036,28109369,28109775,28110379,28110801,28111225,28111655,28111933,28112122,28112552,28113186,28113771,28114363,28114918,28115473,28115887,28116468,28116958,28117218,28117829,28118126,28118753,28119315,28119813,28120205,28120729,28121170,28121696,28123027,28125011,28127045,28129034,28130866,28132567,28134279,28135977,28137681,28139348,28141042,28142710,28144371,28146113,28147790,28149477,28151156,28152857,28154595,28156320,28158036,28159774,28161512,28163235,28165045,28167093,28169141,28170850,28172544,28174250,28175965,28177738,28179374,28181079,28182778,28184391,28186083,28187869,28189666,28191379,28193176,28194953,28196620,28197502,28198311,28199150,28200394,28202124,28203538,28204945,28206505,28207990,28209607,28211175,28213040,28214831,28216459,28218002,28219372,28220891,28222407,28223893,28225359,28226837,28228322,28229802,28231276,28232742,28234222,28235712,28237213,28238680,28240168,28241039,28241551,28242201,28242726,28243222,28243598,28244116,28244699,28245267,28245670,28246082,28246511,28246896,28247378,28247628,28247933,28248437,28248988,28249447,28249968,28250498,28250955,28251519,28251912,28252225,28252456,28252654,28253005,28253548,28253982,28254252,28254397,28254525,28254800,28255136,28255385,28255684,28256159,28256637,28256975,28257498,28257778,28258027,28258382,28258664,28259718,28261678,28263543,28265531,28267444,28269140,28270813,28272504,28274169,28275860,28277563,28279245,28280953,28282618,28284287,28285939,28287648,28289340,28290997,28292685,28294342,28296032,28297724,28299416,28301157,28303205,28305253,28307016,28308718,28310450,28312147,28313885,28315595,28317401,28319063,28320756,28322464,28324087,28325770,28327485,28329205,28330960,28332775,28333467,28334304,28334763,28335416,28336375,28337140,28337960,28338733,28339567,28340412,28340963,28341676,28343046,28344619,28346373,28348036,28349693,28351305,28352915,28354363,28355861,28357368,28358862,28360364,28361881,28363310,28364771,28366271,28367755,28369263,28370782,28372264,28373760,28375261,28376751,28378221,28379664,28381164,28382673,28384191,28385297,28385808,28386406,28386795,28387138,28387643,28388161,28388718,28389234,28389767,28390178,28390524,28391038,28391634,28391831,28392207,28392868,28393370,28393852,28394314,28394751,28395198,28395381,28395554,28395852,28396470,28397014,28397493,28398062,28398591,28399104,28399560,28399953,28400349,28400746,28401267,28401834,28402357,28402616,28403023,28403498,28403851,28404245,28404593,28404737,28404884,28405364,28405898,28406273,28406847,28407331,28407681,28408113,28408536,28408987,28409307,28409669,28409912,28410100,28410531,28410924,28411339,28411753,28412196,28412664,28412890,28413399,28413772,28414241,28414674,28415214,28417241,28419269,28421326,28423330,28425355,28427391,28429090,28430804,28432475,28434143,28435805,28437508,28439169,28440836,28442554,28444241,28445932,28447620,28449299,28450997,28452651,28454336,28456017,28457710,28459417,28461115,28462817,28464483,28466152,28467798,28469518,28471240,28472914,28474598,28476300,28478022,28479720,28481587,28483635,28485683,28487731,28489435,28491192,28492808,28494487,28496209,28497843,28499557,28501348,28503068,28504859,28506548,28508263,28509998,28511687,28513426,28515148,28516868,28518583,28520262,28521978,28523799,28525508,28527210,28528955,28530798,28532385,28533128,28533624,28534251,28534875,28535401,28536223,28536842,28537665,28538204,28538423,28538716,28539509,28540234,28540776,28541243,28541665,28542044,28542388,28542837,28543331,28543623,28543736,28544478,28545817,28546490,28547741,28549317,28551033,28552862,28554590,28556385,28558053,28559442,28560936,28562425,28563927,28565444,28566942,28567524,28567850,28568085,28568318,28568739,28569086,28569278,28569469,28569727,28569954,28570310,28570769,28571232,28571503,28571969,28572438,28573293,28575278,28577071,28578771,28580471,28582186,28583859,28585541,28587207,28588916,28590908,28592665,28594427,28596225,28597935,28599568,28600912,28601730,28602681,28603890,28605491,28607209,28608778,28610375,28611878,28613392,28614895,28616372,28617881,28619374,28620837,28622340,28623822,28625300,28626780,28628265,28629774,28631279,28632744,28634238,28635722,28636912,28637495,28638116,28638756,28639189,28639710,28640245,28640776,28641299,28641818,28642405,28642967,28643452,28644014,28644611,28645193,28645682,28646184,28646562,28647136,28647692,28648264,28648802,28649327,28649916,28650371,28650808,28651329,28651913,28652302,28652768,28653175,28653597,28654029,28654486,28654987,28655390,28655869,28656366,28656846,28657199,28657802,28658240,28658799,28659412,28659942,28660548,28661109,28661520,28662004,28662588,28663037,28663408,28664021,28664500,28664969,28665544,28666162,28666760,28667346,28668124,28670144,28672170,28674217,28676242,28678229,28679932,28681645,28683353,28685079,28686764,28688458,28690165,28691865,28693563,28695241,28696915,28698584,28700284,28701984,28703695,28705373,28707096,28708800,28710486,28712155,28713811,28715461,28717170,28718860,28720584,28722272,28724297,28726345,28728302,28730113,28731828,28733655,28735344,28737039,28738720,28740360,28742116,28743819,28745715,28747464,28749298,28751066,28752711,28754398,28756246,28758044,28759712,28760631,28761402,28762245,28763017,28763695,28765128,28766864,28768166,28769386,28771075,28772836,28774372,28775761,28776680,28778383,28780248,28782100,28783873,28785698,28787382,28789014,28790397,28791945,28793448,28794931,28796424,28797909,28799385,28800874,28802345,28803816,28805326,28806808,28808260,28809745,28811238,28812737,28814256,28815757,28817261,28818745,28820232,28821744,28822583,28822840,28823024,28823238,28823638,28824108,28824646,28825119,28825547,28826018,28826574,28827190,28827641,28827938,28828384,28828766,28829276,28829528,28830026,28830580,28831129,28831510,28831966,28832184,28832416,28832908,28833084,28833499,28833941,28834458,28835008,28835492,28836032,28836432,28836966,28837420,28837695,28838187,28838667,28839020,28839567,28840146,28840678,28841301,28841594,28841798,28842163,28842515,28843045,28843428,28843880,28844390,28844978,28845460,28846126,28846772,28847245,28847771,28848302,28848669,28849024,28849475,28849860,28850000,28850321,28850706,28851135,28851527,28851797,28852724,28854723,28856768,28858784,28860802,28862850,28864602,28866289,28867973,28869689,28871346,28873002,28874669,28876353,28878009,28879704,28881395,28883061,28884744,28886427,28888134,28889845,28891546,28893226,28894906,28896605,28898314,28900015,28901713,28903410,28905141,28906837,28908531,28910221,28911870,28913575,28915524,28917572,28919620,28921556,28923195,28924938,28926695,28928392,28930128,28931742,28933502,28935243,28936933,28938690,28940460,28942254,28944058,28945747,28947467,28949205,28950915,28952604,28954371,28956033,28957694,28959275,28960757,28961506,28962261,28963014,28963826,28964606,28965328,28965959,28966583,28967311,28968032,28968981,28970018,28971062,28971996,28972714,28973534,28974354,28975392,28976448,28977338,28978409,28979376,28980426,28981240,28982208,28983117,28983883,28984300,28985137,28985450,28985695,28986875,28988121,28989738,28991590,28993416,28995256,28997081,28998777,29000287,29001807,29003336,29004840,29006329,29007817,29009302,29010813,29012305,29013791,29015305,29016706,29017103,29017592,29017806,29018094,29018544,29019132,29019549,29020043,29020456,29020962,29021397,29021895,29022190,29022659,29023027,29023407,29023857,29024235,29024616,29024959,29025355,29025822,29026200,29026597,29027029,29027270,29027609,29027826,29028168,29028474,29028900,29029374,29029533,29029796,29030044,29030894,29032893,29034865,29036807,29038480,29040165,29041852,29043538,29045192,29046874,29048544,29050226,29051900,29053564,29055260,29056939,29058633,29060343,29062034,29063917,29065965,29067835,29069612,29071353,29073102,29074815,29076519,29078230,29079900,29081544,29083298,29085049,29086777,29088486,29090062,29090611,29091282,29091977,29093017,29094201,29095282,29096158,29097694,29099588,29101489,29103229,29104758,29106308,29107773,29109276,29110778,29112269,29113770,29115267,29116765,29118257,29119758,29121251,29122745,29124256,29125771,29127280,29128771,29130249,29131743,29133245,29134758,29136251,29137733,29139235,29140735,29142213,29143717,29145238,29146748,29148214,29149722,29151235,29152732,29154200,29155321,29155749,29156300,29156831,29157119,29157683,29158286,29158856,29159480,29160044,29160667,29161196,29161622,29162069,29162643,29163112,29163654,29164111,29164675,29165271,29165910,29166519,29167046,29167584,29168169,29168608,29169108,29169626,29170243,29170867,29171203,29171651,29172114,29172596,29173211,29173654,29174138,29174584,29175082,29175690,29176258,29176591,29177247,29177631,29178081,29178386,29178631,29178998,29179435,29179825,29180135,29180553,29181060,29181264,29181843,29182149,29182709,29183291,29183877,29184185,29184687,29185218,29185804,29186398,29186976,29187491,29187977,29188480,29189008,29189556,29190072,29190516,29190962,29191372,29191654,29192199,29192739,29193208,29193610,29194096,29194497,29194946,29195510,29195803,29196299,29196873,29197162,29197558,29197896,29198174,29198782,29199224,29199609,29200013,29200426,29200780,29201239,29201798,29202109,29202603,29202941,29203148,29203476,29203835,29204234,29204555,29204848,29205304,29205567,29205859,29206301,29206826,29208845,29210871,29212918,29214895,29216876,29218904,29220902,29222924,29224972,29226897,29228575,29230259,29231938,29233612,29235308,29236997,29238671,29240385,29242115,29243802,29245533,29247246,29248976,29250701,29252419,29254158,29255899,29257623,29259336,29261055,29262761,29264442,29266144,29267819,29269511,29271191,29272864,29274547,29276254,29277960,29279666,29281338,29283008,29284673,29286339,29288038,29289743,29291466,29293193,29294952,29296683,29298438,29300118,29301765,29303472,29305168,29306861,29308512,29310199,29311915,29313963,29316011,29318059,29320107,29322155,29323940,29325646,29327301,29329000,29330590,29332286,29334023,29335757,29337452,29339266,29341002,29342773,29344512,29346271,29347962,29349666,29351362,29353090,29354781,29356435,29358135,29359724,29361397,29363113,29364879,29366569,29368272,29369937,29371540,29373216,29374886,29376603,29378393,29380058,29381847,29383530,29385092,29386735,29388077,29388826,29389557,29390395,29391225,29391986,29392543,29393301,29393951,29394564,29395525,29396426,29397307,29398305,29399013,29399408,29400059,29400617,29401456,29402416,29402854,29403625,29404175,29404909,29405665,29406301,29406914,29407555,29408197,29408385,29408951,29409864,29410662,29411494,29412489,29413611,29414615,29415610,29416488,29417387,29418149,29418643,29419485,29421084,29422568,29424453,29426254,29428072,29429954,29431763,29433554,29435444,29437255,29438893,29440531,29442033,29443541,29445048,29446532,29448033,29449523,29451001,29452491,29453976,29455459,29456148,29456565,29457103,29457606,29457989,29458514,29458956,29459460,29459841,29460215,29460544,29460972,29461023,29461143,29461354,29461914,29462459,29463109,29463654,29464185,29464817,29465282,29465595,29465655,29465801,29466248,29466525,29466912,29467202,29467560,29467611,29467769,29469018,29471069,29473118,29474982,29476663,29478347,29480054,29481753,29483465,29485199,29486937,29488635,29490297,29491986,29493695,29495403,29497122,29498994,29501042,29502965,29504798,29506587,29508428,29510173,29511934,29513684,29515466,29517173,29518956,29520781,29522599,29524043,29524799,29525478,29526415,29527276,29527951,29528923,29530279,29531097,29532622,29534233,29535893,29537392,29538947,29540497,29541999,29543465,29544967,29546452,29547961,29549428,29550927,29552411,29553901,29555392,29556887,29558374,29559862,29561291,29561557,29561885,29562195,29562561,29562914,29563377,29563715,29564102,29564429,29564631,29565102,29565610,29566125,29566682,29567213,29567667,29568142,29568420,29568733,29569132,29569464,29569798,29570210,29570617,29571114,29571394,29571782,29572150,29572510,29572965,29573346,29573690,29574145,29574537,29574945,29575412,29575812,29575986,29577788,29579745,29581788,29583689,29585335,29587013,29588687,29590403,29592095,29593800,29595491,29597211,29598936,29600631,29602343,29604012,29605661,29607304,29608966,29610605,29612503,29614551,29616333,29617988,29619726,29621603,29623483,29625331,29627082,29628887,29630759,29632608,29634343,29636022,29637713,29639097,29639691,29640312,29641002,29641674,29642049,29642455,29642788,29643202,29643577,29643921,29644385,29644838,29645993,29647408,29648211,29648518,29649874,29651355,29652882,29654392,29655963,29657733,29659343,29660984,29662612,29664096,29665593,29667124,29668642,29670173,29671692,29673211,29674719,29676231,29677752,29679254,29680756,29682272,29683798,29685291,29686812,29688328,29689835,29691339,29692844,29694367,29695876,29697400,29698896,29700414,29701948,29703463,29704964,29706521,29708050,29709571,29711110,29712635,29714153,29715690,29717189,29718681,29720183,29721685,29723188,29724684,29726168,29727636,29729110,29730613,29732109,29733610,29734592,29735142,29735536,29736159,29736601,29737079,29737716,29738226,29738570,29739269,29739952,29740610,29741323,29742021,29742710,29743403,29744053,29744700,29745359,29746019,29746746,29747472,29748040,29748698,29749316,29749732,29750266,29750837,29751465,29751995,29752705,29753350,29754005,29754683,29755316,29755954,29756537,29757167,29757669,29758306,29758846,29759360,29760058,29760649,29761164,29761813,29762305,29762842,29763381,29763910,29764528,29765108,29765759,29766301,29766914,29767498,29768078,29768611,29769145,29769684,29770238,29770911,29771328,29771767,29772406,29772898,29773479,29774115,29774672,29775338,29775905,29776526,29777128,29777666,29778275,29778737,29779390,29780061,29780584,29781106,29781631,29782271,29782684,29783293,29783830,29784365,29785056,29785634,29786056,29786549,29787219,29787800,29788400,29789067,29789681,29790369,29791087,29791775,29792434,29793080,29793816,29794503,29795235,29795818,29796345,29797036,29797653,29798300,29798904,29799410,29799917,29800530,29801152,29801709,29802359,29802969,29803519,29804135,29804734,29805333,29805935,29806512,29807064,29807528,29807953,29808371,29808929,29809531,29810082,29810606,29811195,29811729,29812262,29812745,29813225,29813827,29814365,29814936,29815388,29815841,29816286,29816863,29817353,29817861,29818421,29818731,29819151,29819748,29820248,29820777,29821234,29821643,29822204,29824233,29826287,29828343,29830391,29832446,29834477,29836534,29838590,29840641,29842689,29844737,29846775,29848828,29850603,29852321,29853998,29855675,29857389,29859106,29860831,29862506,29864204,29865907,29867609,29869325,29871018,29872724,29874426,29876115,29877832,29879575,29881307,29883035,29884766,29886481,29888234,29889969,29891724,29893479,29895232,29896989,29898721,29900436,29902140,29903854,29905555,29907259,29908968,29910621,29912286,29914004,29915728,29917412,29919111,29920815,29922518,29924217,29925943,29927681,29929428,29931184,29932947,29934696,29936431,29938155,29939865,29941607,29943341,29945080,29946816,29948558,29950316,29952063,29953793,29955560,29957295,29959040,29960768,29962510,29964431,29966479,29968527,29970575,29972623,29974671,29976719,29978767,29980540,29982249,29983887,29985622,29987405,29989067,29990772,29992513,29994257,29995964,29997731,29999528,30001359,30003180,30004990,30006830,30008594,30010435,30012192,30013985,30015737,30017534,30019259,30020913,30022572,30024320,30026054,30027667,30029242,30031006,30032751,30034420,30036167,30037826,30039568,30041346,30043188,30044992,30046807,30048658,30050472,30052138,30053859,30055459,30057113,30058839,30060664,30062503,30064286,30066106,30067976,30069808,30071606,30073184,30074037,30074931,30075883,30076779,30077793,30078560,30079324,30080199,30081163,30082143,30083386,30084767,30086073,30087227,30088474,30089671,30090887,30092150,30093448,30094650,30095831,30097069,30098052,30098754,30099501,30100377,30101282,30102188,30103254,30104417,30105695,30106277,30106751,30107952,30109588,30111037,30112978,30114809,30116508,30118398,30120293,30122168,30123977,30125807,30127637,30129470,30131365,30132962,30134566,30136066,30137578,30139059,30140566,30142064,30143562,30145056,30146554,30148043,30148741,30148805,30149050,30149283,30149333,30149519,30149798,30150160,30150422,30150811,30151096,30151430,30151606,30151961,30152270,30152479,30152632,30152725,30153098,30153523,30154009,30154135,30154532,30155046,30155428,30155905,30156162,30156383,30156811,30158764,30160803,30162711,30164393,30166108,30167801,30169510,30171216,30172876,30174564,30176299,30178017,30179726,30181420,30183097,30184755,30186803,30188772,30190544,30192310,30193871,30195686,30197386,30199177,30200927,30202696,30204558,30206399,30208136,30209269,30209868,30211469,30212974,30214629,30216178,30217768,30219371,30220871,30222086,30223551,30225056,30226027,30226492,30226930,30227459,30228003,30228519,30228995,30230021,30231834,30233542,30235214,30237086,30238799,30240563,30241552,30242249,30243461,30244964,30246446,30247935,30249438,30250946,30251309,30251608,30252085,30252487,30253098,30253286,30253457,30253895,30254292,30254741,30254856,30255300,30255771,30257244,30259094,30260770,30262457,30264148,30265834,30267517,30269390,30271111,30272763,30274514,30276238,30277916,30278642,30279949,30281703,30283462,30285057,30286499,30288007,30289479,30290988,30292488,30292964,30293421,30293774,30294136,30294602,30294955,30295375,30295715,30296279,30296667,30297117,30297498,30297965,30298516,30298978,30299502,30301327,30303146,30304807,30306467,30308145,30309822,30311492,30313185,30315042,30316757,30318468,30320187,30321917,30323690,30324342,30325022,30326172,30327062,30328256,30329883,30331589,30333633,30335687,30337734,30339787,30341839,30343332,30344927,30346449,30347725,30348611,30349422,30350245,30351056,30351948,30352622,30354523,30356528,30358497,30360390,30362344,30363399,30364049,30365267,30366456,30367815,30369168,30370568,30371923,30373129,30374099,30375067,30375752,30376868,30378040,30379158,30380244,30380997,30381976,30382920,30383906,30384955,30385992,30387017,30388190,30389268,30390454,30391120,30391768,30392579,30393502,30394371,30395149,30395986,30396704,30397509,30399505,30401365,30402412,30403480,30404521,30405475,30406445,30407543,30408626,30409642,30410639,30411693,30412843,30413737,30414842,30415883,30416789,30417806,30418608,30419517,30420254,30421056,30421906,30423317,30424734,30426305,30427653,30429543,30431591,30433648,30435693,30437276,30439052,30441080,30443128,30445176,30447230,30448970,30451018,30452952,30454657,30456701,30458749,30460797,30462845,30464893,30466941,30468989,30471037,30473068,30475108,30477130,30479173,30481224,30483240,30485225,30487119,30488853,30490637,30492685,30494733,30496781,30498829,30500877,30502925,30504973,30507024,30509072,30511120,30513168,30515206,30517168,30519059,30520882,30522488,30523853,30525842,30527834,30529548,30531384,30533428,30535480,30537528,30539576,30541624,30543672,30545720,30547768,30549816,30551864,30553912,30555960,30558008,30560065,30562102,30563814,30564792,30566624,30568681,30570729,30572777,30574825,30576873,30578921,30580969,30583017,30585065,30587113,30589161,30591209,30593257,30595305,30597353,30599401,30601449,30603497,30605550,30607420,30609132,30611189,30613237,30615285,30617248,30618950,30620392,30621670,30622764,30623664,30624218,30625503,30627560,30629608,30631656,30633712,30635760,30637817,30639865,30641922,30643978,30645978,30647547,30648716,30650151,30652206,30654254,30656225,30658134,30659906,30661481,30662852,30663823,30664543,30664916,30665045,30666437,30668490,30670538,30672591,30674645,30676693,30678741,30680798,30682855,30684903,30686951,30689007,30691053,30693101,30694981,30696685,30698205,30699465,30701341,30703397,30705445,30707493,30709541,30711589,30713637,30715693,30717741,30719789,30721837,30723892,30725923,30727945,30729716,30731301,30732497,30733314,30735128,30736958,30738995,30741010,30743064,30745112,30747121,30748913,30750365,30751215,30752991,30755036,30757084,30759136,30760873,30762921,30764969,30766916,30768145,30768170,30768378,30768444,30768469,30770485,30772533,30774581,30776638,30778693,30780741,30782794,30784842,30786824,30788826,30790874,30792922,30794970,30796981,30799036,30801084,30803132,30805180,30807228,30809276,30811324,30813380,30815435,30817491,30819174,30820911,30822927,30824557,30826375,30828185,30830233,30831989,30833401,30834807,30836584,30838597,30840652,30842707,30844763,30846811,30848857,30850790,30852444,30853258,30853520,30855575,30857623,30859680,30861736,30863791,30865839,30867894,30869942,30871990,30874024,30876034,30877952,30879797,30881718,30883471,30885172,30887220,30889268,30891325,30893373,30895421,30897469,30899517,30901565,30903463,30905511,30907566,30909614,30911662,30913710,30915758,30917806,30919854,30921440,30923484,30925438,30927387,30928456,30930409,30932457,30934499,30936438,30938020,30940068,30942116,30944164,30946212,30948269,30950317,30952365,30954413,30956461,30958467,30959983,30961391,30963307,30965264,30967271,30969322,30971375,30973411,30975437,30977475,30979523,30981575,30983630,30985665,30987695,30989694,30991664,30993638,30995672,30997724,30999769,31001815,31003868,31005888,31007927,31009972,31012016,31014055,31016101,31018139,31020117,31021934,31023601,31025077,31026416,31027617,31028842,31029976,31031114,31032131,31033226,31034257,31035325,31036346,31037200,31038101,31038890,31039647,31040229,31040656,31040994,31041184,31041338,31041405,31041446,31042591,31044629,31046675,31048723,31050774,31052763,31054514,31056225,31057624,31058478,31060157,31062205,31064253,31066301,31068317,31070276,31072324,31074372,31076420,31078383,31080431,31082479,31084527,31086526,31088583,31090631,31092679,31094727,31096761,31098809,31100857,31102905,31104953,31107005,31109051,31111048,31112978,31114867,31116615,31118381,31120087,31121809,31123861,31125909,31127966,31130023,31132079,31134126,31136140,31137929,31139984,31142041,31144089,31146145,31148193,31150241,31152289,31154214,31156259,31158316,31160276,31162079,31163677,31165725,31167781,31169584,31171153,31173201,31175249,31177297,31179345,31181393,31183441,31185489,31187541,31189583,31191555,31193321,31194930,31196403,31197803,31199009,31200186,31202226,31204274,31206330,31208378,31210426,31212377,31214199,31215591,31216068,31216724,31218022,31219648,31221471,31223425,31225354,31227291,31229267,31231247,31233070,31234724,31236146,31237397,31238198,31238632,31239632,31241592,31243632,31245417,31246622,31247763,31249811,31251859,31253907,31255955,31258003,31260051,31262099,31264147,31266101,31268128,31270176,31272121,31273761,31275036,31276031,31278079,31280061,31281603,31283006,31285054,31287102,31289150,31291203,31293251,31295302,31297350,31299405,31301370,31303347,31304849,31306887,31308918,31310381,31310981,31312996,31315044,31317092,31319140,31321188,31323245,31325293,31327269,31329022,31331074,31333122,31335170,31337218,31339266,31341314,31343362,31344653,31345902,31347621,31349618,31351668,31353716,31355764,31357545,31358730,31360741,31362584,31364640,31366688,31368736,31370784,31372837,31374762,31376294,31377451,31378323,31378895,31379333,31379659,31379781,31380882,31382930,31384978,31387026,31389074,31391122,31393170,31395218,31397266,31399314,31401362,31403410,31405458,31407506,31409554,31411602,31413650,31415698,31417373,31419060,31421108,31423156,31425204,31427252,31429300,31431348,31433396,31435117,31435363,31436303,31437908,31439761,31441808,31443863,31445911,31447959,31450007,31452055,31454103,31456151,31458199,31460256,31462241,31463964,31465536,31466929,31468230,31469332,31470364,31471387,31472186,31472961,31473879,31474838,31475531,31476887,31478876,31480924,31482972,31485020,31487068,31489116,31491164,31493212,31495260,31497308,31499356,31501404,31503452,31505507,31506973,31507880,31508576,31509581,31511638,31513686,31515734,31517782,31519596,31520986,31523043,31524914,31526390,31527527,31528260,31529047,31529561,31531614,31533615,31535102,31535557,31537089,31538974,31540949,31543005,31545053,31547110,31549164,31551207,31553242,31554906,31556640,31558437,31560400,31562292,31564348,31566396,31568444,31570492,31572549,31574605,31576661,31578709,31580731,31582532,31584117,31585195,31585863,31587194,31589196,31591244,31593292,31595340,31597388,31599444,31601492,31603540,31605588,31607615,31609442,31611029,31612276,31613180,31613726,31614019,31615588,31617636,31619640,31621559,31623429,31625120,31626798,31628816,31630873,31632744,31634322,31635630,31637446,31639154,31641097,31643140,31645151,31647117,31648394,31650179,31651984,31653870,31655567,31657615,31659412,31661279,31662887,31664325,31665523,31666866,31668874,31670826,31672830,31674853,31676849,31678810,31680723,31682771,31684819,31686858,31688765,31689956,31690862,31692910,31694958,31697006,31699054,31701102,31702808,31703446,31705465,31707513,31709569,31711617,31713505,31714114,31715315,31717363,31719397,31721445,31723493,31725549,31727597,31729645,31731595,31733643,31735285,31737164,31739212,31740954,31743010,31745058,31746756,31748746,31750795,31752500,31753771,31755352,31757224,31757860,31759678,31761726,31763774,31765827,31767576,31767885,31767985,31768852,31770787,31772842,31774890,31776945,31779001,31781049,31783102,31785020,31787068,31789116,31791117,31793137,31795190,31797149,31799197,31801246,31803297,31805354,31807387,31809440,31811286,31813249,31814921,31816879,31818291,31820177,31821419,31823016,31824654,31826337,31827607,31828891,31830683,31832713,31834444,31836371,31838419,31840467,31842515,31844563,31846200,31847390,31848155,31849156,31851184,31852541,31853976,31855819,31857867,31859915,31861963,31864011,31866059,31868107,31870155,31872203,31874251,31876305,31878313,31880161,31881814,31883235,31884465,31885392,31886344,31888392,31890440,31892488,31894536,31896584,31898511,31898931,31900812,31902862,31904910,31906922,31908847,31910834,31912883,31914936,31916984,31919032,31921080,31923137,31925187,31927200,31929044,31930563,31931657,31932138,31934158,31936206,31938254,31940302,31942148,31942546,31943027,31944959,31947007,31949055,31951103,31953151,31955208,31957265,31959313,31961349,31963021,31963634,31963975,31965126,31966929,31968986,31971034,31973082,31975130,31977178,31979226,31981274,31983322,31985378,31987426,31989470,31991420,31993244,31995008,31996773,31998389,31999845,32001138,32002393,32003642,32004768,32005625,32006255,32006825,32007340,32007827,32008206,32008718,32009129,32009581,32009975,32010473,32011026,32011509,32011881,32012137,32012797,32014010,32015228,32016454,32017618,32018727,32019713,32020550,32021360,32021912,32022254,32022440,32022529,32023199,32024748,32026543,32028565,32030613,32032661,32034706,32036734,32038717,32040566,32042506,32044314,32046292,32048231,32050099,32051473,32053482,32055524,32057576,32059632,32061642,32063665,32065722,32067758,32069785,32071788,32073765,32075822,32077735,32079662,32081711,32083759,32085807,32087638,32089361,32091344,32093162,32094945,32096991,32098935,32100218,32101813,32103738,32105794,32107840,32109692,32111615,32113643,32115400,32117395,32119344,32121392,32123440,32125488,32127360,32129392,32131434,32133233,32134702,32136369,32137788,32139012,32139610,32140139,32140617,32140930,32141727,32142272,32143198,32144754,32146237,32147632,32149052,32150307,32151685,32153307,32155019,32156805,32158627,32160519,32162482,32164508,32166549,32168603,32170657,32172705,32174762,32176810,32178867,32180915,32182963,32184974,32186947,32188946,32190928,32192884,32194686,32196386,32198111,32199797,32201490,32203052,32204508,32205938,32207396,32208837,32210232,32211524,32212717,32213932,32215135,32216299,32217390,32218351,32219281,32220238,32221469,32223016,32224518,32225946,32227424,32228880,32230407,32231943,32233514,32234957,32236503,32238017,32239583,32241232,32242874,32244452,32246059,32247624,32249116,32250854,32252512,32254354,32256048,32257806,32259622,32261510,32263403,32265237,32267198,32269177,32271117,32273139,32275184,32277241,32279294,32281342,32283399,32285456,32287474,32289433,32291249,32292913,32294268,32295228,32297072,32298909,32300966,32303020,32305068,32306949,32307308,32307715,32309725,32311773,32313830,32315269,32317279,32318928,32320407,32322455,32324443,32325655,32327673,32329721,32331769,32333817,32335548,32337411,32339442,32341205,32342497,32344313,32346361,32348409,32350465,32352513,32354561,32356604,32358568,32360616,32362664,32364712,32366760,32368808,32370856,32372904,32374952,32377000,32379048,32381096,32383099,32385152,32387200,32389256,32391304,32393352,32395405,32397339,32399333,32401381,32403438,32405486,32407528,32409576,32411624,32413672,32415720,32417768,32419816,32421807,32422917,32424962,32427015,32429063,32431118,32433166,32435210,32437267,32439271,32441141,32443067,32444678,32446280,32447778,32449374,32451188,32452868,32454357,32455779,32456998,32458014,32458673,32459478,32461526,32463574,32465622,32467678,32469713,32471528,32472929,32473281,32473916,32475616,32477664,32479716,32481395,32483034,32484575,32486484,32487895,32488236,32488589,32489520,32490057,32490340,32490787,32491168,32491612,32492024,32492360,32492608,32493321,32494031,32494804,32495665,32496240,32496835,32497913,32498688,32499300,32500466,32501893,32503360,32504791,32505999,32507184,32508005,32508876,32509642,32510215,32510535,32510804,32511392,32511715,32512432,32513474,32514111,32514519,32515116,32515490,32516137,32516744,32517267,32517830,32518208,32518736,32519153,32519991,32520711,32521769,32522579,32523586,32524157,32524937,32525963,32526533,32527320,32528390,32529092,32529352,32529982,32530758,32531256,32531937,32532356,32532645,32532943,32533250,32533558,32534099,32534403,32534721,32534922,32535376,32535959,32536512,32537169,32537827,32538179,32538428,32538821,32539329,32539996,32540494,32540819,32541465,32542012,32542233,32542587,32543094,32543577,32543856,32544364,32544677,32545400,32546250,32547112,32547229,32547402,32547666,32547945,32548640,32549484,32549797,32550119,32550614,32550917,32551395,32551899,32552133,32552945,32553771,32554302,32554503,32554882,32555227,32555714,32555981,32556243,32556618,32557160,32558085,32558644,32559094,32559563,32560201,32560724,32561175,32561603,32562025,32562707,32563032,32563357,32563990,32564540,32565087,32565365,32565596,32566084,32566734,32567115,32567460,32568138,32568378,32569212,32569842,32570254,32570666,32571156,32571513,32572130,32572696,32573195,32573717,32574243,32574829,32575391,32575629,32576278,32576799,32577543,32578199,32579237,32580300,32581423,32582476,32583635,32584776,32585139,32585488,32586402,32587515,32588651,32589640,32590048,32591061,32591916,32592372,32592713,32592945,32593294,32593476,32593678,32593817,32594041,32594174,32594728,32594879,32595036,32595155,32595296,32595763,32596309,32596879,32597295,32597949,32598538,32599081,32599853,32600254,32600817,32600983,32601635,32601912,32602234,32602651,32603234,32603808,32604232,32604547,32605130,32605363,32605631,32606010,32606692,32606837,32607094,32607322,32607560,32607976,32608199,32608419,32608697,32609096,32609300,32609423,32609691,32609865,32610214,32610640,32611137,32611707,32612271,32613158,32613849,32614249,32614666,32615167,32615794,32616403,32616798,32617424,32618293,32619005,32619841,32620726,32621148,32621531,32621802,32622217,32622692,32622845,32623252,32623583,32623974,32624213,32624497,32624727,32624974,32625822,32626949,32627576,32627969,32628854,32629244,32629784,32630195,32630462,32630967,32631680,32632056,32632423,32632614,32633035,32634016,32634617,32635527,32636212,32636604,32637294,32637490,32637931,32638121,32638439,32638671,32638958,32639484,32640161,32640702,32641173,32641664,32642373,32642926,32643548,32643906,32643966,32644494,32645162,32645859,32646584,32647006,32647357,32647836,32648182,32648556,32648927,32649845,32651149,32652402,32653730,32654500,32655655,32656982,32658569,32659557,32659842,32659961,32660167,32660666,32661033,32661215,32661337,32661686,32662069,32662462,32662997,32663453,32664383,32665337,32666169,32666399,32666817,32667100,32667296,32667601,32667789,32667980,32668177,32668535,32669022,32669392,32669825,32670293,32670692,32671210,32671697,32672369,32672843,32673352,32673734,32674099,32674539,32674871,32675341,32675532,32675762,32676130,32676513,32676804,32677167,32677452,32677632,32677895,32678428,32678726,32679014,32679239,32679384,32680029,32680271,32680678,32680951,32681496,32681974,32682536,32682821,32682996,32683331,32683788,32684031,32684439,32684939,32685314,32685876,32686676,32687095,32687374,32688008,32688668,32688945,32689681,32690260,32690392,32690531,32690738,32690912,32691047,32691293,32691744,32691912,32692064,32692235,32692424,32692714,32692955,32693172,32693511,32693669,32694135,32694702,32695109,32695311,32695594,32695812,32696072,32696570,32697225,32697510,32698037,32698424,32698609,32698838,32698997,32699455,32699875,32700469,32700638,32700916,32701311,32701490,32701714,32702081,32702225,32702581,32703050,32703331,32703515,32703864,32704001,32704284,32704420,32704546,32704942,32705555,32706055,32706419,32706790,32707150,32707445,32707716,32707915,32708406,32708775,32708880,32709502,32710226,32710604,32711094,32711505,32711880,32712262,32713013,32713706,32714669,32715442,32716116,32717012,32718533,32719570,32720843,32722175,32723591,32725051,32726464,32727977,32729546,32731004,32732551,32734101,32735546,32737059,32738567,32740132,32741663,32743201,32744669,32746159,32747747,32749157,32750575,32751889,32753155,32754364,32755680,32757093,32758390,32759570,32760747,32761845,32762965,32764525,32766058,32767779,32769564,32771300,32773065,32774763,32776454,32778164,32779910,32781595,32783325,32785034,32786734,32788470,32790220,32791971,32793718,32795449,32796998,32798666,32800316,32801966,32803675,32805367,32807053,32808778,32810502,32812173,32813809,32815476,32817154,32818787,32820375,32822020,32823663,32825483,32827127,32828837,32830441,32832099,32833758,32835464,32837197,32838966,32840795,32842584,32844405,32846235,32848063,32849823,32851531,32853206,32854968,32856770,32858614,32860404,32862125,32863754,32865587,32867355,32869059,32870862,32872593,32874319,32876023,32877619,32879297,32880801,32882677,32884256,32885903,32887497,32889080,32890703,32892309,32893999,32895678,32897374,32899020,32900736,32902474,32904164,32905897,32907643,32909360,32911026,32912802,32914497,32916185,32917901,32919559,32921200,32922891,32924529,32926165,32927786,32929394,32930982,32932530,32934030,32935539,32937360,32938515,32939691,32940551,32941379,32941874,32943080,32944504,32945929,32947358,32948575,32949640,32950864,32952040,32953325,32954746,32956054,32957360,32958649,32959882,32961109,32962212,32963147,32963920,32964814,32965661,32966506,32967159,32967841,32968786,32969891,32970869,32972087,32973223,32975117,32976539,32977960,32979330,32980766,32982343,32983760,32985257,32986704,32988216,32989575,32990890,32992146,32993446,32993659,32993879,32994098,32994320,32994564,32995302,32996657,32998213,32999517,33000447,33001760,33003000,33003907,33005249,33006719,33007775,33009344,33011019,33012287,33013394,33014901,33015965,33017713,33018806,33020448,33022051,33023679,33025138,33026851,33028256,33029495,33031181,33032424,33034070,33035563,33036815,33038508,33039626,33041276,33042798,33044310,33045991,33047313,33048802,33050245,33051736,33053480,33054641,33055999,33057630,33059368,33060608,33062214,33063709,33065257,33066770,33068405,33069836,33071153,33072704,33074209,33075632,33077392,33078799,33080502,33081941,33083251,33084759,33086240,33087936,33089344,33090539,33092285,33093809,33095352,33096987,33098343,33100031,33101040,33102454,33103951,33105680,33107037,33108526,33110104,33111620,33113050,33114683,33116021,33117507,33118904,33120453,33121874,33123192,33124510,33126059,33127447,33128637,33130002,33131333,33132819,33134339,33135903,33137563,33139269,33140725,33142024,33143477,33144931,33146221,33147994,33149408,33150983,33152427,33154049,33155193,33156916,33158631,33160034,33161382,33163273,33164661,33166372,33167642,33169262,33170839,33172127,33173606,33174937,33176647,33178292,33179943,33181640,33183318,33184825,33186183,33187927,33189736,33191362,33193043,33194225,33195929,33197461,33199043,33200571,33202347,33203886,33205442,33207236,33208494,33210172,33211882,33213605,33215016,33216799,33218450,33220240,33222159,33224033,33225922,33227976,33229995,33232035,33234075,33236097,33238141,33240159,33242213,33244236,33246280,33248328,33250367,33252413,33254453,33256461,33258468,33260366,33262382,33264393,33266428,33268473,33270521,33272560,33274602,33276643,33278674,33280704,33282711,33284745,33286794,33288824,33290871,33292928,33294971,33297009,33299031,33301058,33303072,33305065,33307101,33309155,33311210,33313234,33315270,33317320,33319349,33321340,33323302,33325322,33327338,33329310,33331320,33333343,33335363,33337382,33339434,33341460,33343448,33345442,33347447,33349445,33351421,33353435,33355440,33357446,33359494,33361544,33363572,33365559,33367553,33369557,33371553,33373534,33375546,33377553,33379600,33381656,33383686,33385717,33387720,33389711,33391735,33393752,33395752,33397792,33399838,33401879,33403923,33405964,33407994,33410028,33412067,33414099,33416143,33418161,33420107,33422127,33424127,33426084,33428066,33430068,33432040,33433970,33435970,33437955,33439943,33441878,33443836,33445807,33447768,33449754,33451757,33453698,33455637,33457619,33459615,33461577,33463524,33465519,33467522,33469492,33471479,33473440,33475419,33477395,33479382,33481380,33483339,33485328,33487303,33489283,33491279,33493233,33495213,33497197,33499216,33501186,33503188,33505163,33507137,33509130,33511113,33513099,33515045,33517001,33518993,33520984,33522959,33524966,33526918,33528901,33530869,33532864,33534821,33536792,33538795,33540788,33542790,33544781,33546788,33548781,33550801,33552779,33554761,33556770,33558737,33560701,33562700,33564744,33566729,33568613,33570605,33572631,33574618,33576566,33578584,33580598,33582616,33584583,33586590,33588621,33590609,33592598,33594597,33596610,33598661,33600703,33602711,33604714,33606743,33608764,33610768,33612764,33614734,33616749,33618769,33620755,33622747,33624672,33626549,33628599,33630646,33632672,33634649,33636619,33638534,33640448,33642341,33644130,33646046,33647971,33649816,33651633,33653471,33655454,33657436,33659442,33661354,33663196,33665096,33667030,33668795,33670683,33672664,33674605,33676526,33678506,33680435,33682322,33684264,33686184,33688134,33690000,33691965,33693907,33695889,33697795,33699745,33701588,33703472,33705362,33707245,33709139,33711114,33713083,33715038,33717016,33719009,33720781,33722726,33724528,33726539,33728365,33730311,33732228,33734231,33736161,33738117,33740148,33741933,33743871,33745596,33747592,33749570,33751456,33753441,33755333,33757248,33759178,33761157,33763077,33764967,33766937,33768950,33770710,33772501,33774323,33776100,33777893,33779796,33781642,33783565,33785333,33787276,33789070,33790972,33792940,33794844,33796804,33798736,33800609,33802527,33804381,33806307,33808171,33810129,33811953,33813896,33815887,33817810,33819758,33821638,33823593,33825485,33827364,33829250,33831130,33832935,33834822,33836711,33838596,33840423,33842166,33843805,33845422,33846969,33848668,33850555,33852262,33854204,33856179,33858129,33860110,33862108,33864087,33866027,33868018,33869990,33871954,33873924,33875916,33877896,33879347,33880730,33882152,33883547,33884983,33886456,33888023,33889447,33891062,33892577,33894105,33895645,33897369,33899059,33900588,33902290,33904276,33906282,33908203,33910224,33912171,33914090,33915985,33917869,33919852,33921855,33923864,33925766,33927744,33929671,33931557,33933426,33935313,33937317,33939346,33941319,33943265,33945229,33947212,33949048,33950972,33952885,33954867,33956870,33958793,33960789,33962758,33964740,33966550,33968446,33970402,33972340,33974355,33976274,33978256,33980134,33982047,33983882,33985773,33987726,33989676,33991704,33993643,33995618,33997539,33999506,34001304,34003205,34005178,34007179,34009198,34011146,34013141,34015094,34016982,34018889,34020771,34022724,34024668,34026577,34028553,34030431,34032418,34034370,34036282,34038221,34039974,34041685,34043346,34045002,34046709,34048408,34050139,34051843,34053550,34055272,34056917,34058593,34060313,34062060,34063811,34065480,34067143,34068808,34070485,34072220,34073948,34075637,34077259,34078872,34080581,34082279,34083976,34085741,34087457,34089122,34090689,34092290,34093982,34095743,34097402,34099080,34100697,34102324,34103980,34105723,34107500,34109218,34110893,34112580,34114196,34115904,34117708,34119499,34121183,34122798,34124456,34126213,34128053,34129893,34131716,34133473,34135223,34136981,34138817,34140689,34142533,34144326,34146160,34147973,34149704,34151485,34153285,34154970,34156597,34158285,34160052,34161757,34163400,34165000,34166788,34168495,34170110,34171885,34173688,34175275,34176938,34178761,34180353,34181952,34183662,34185305,34187002,34188704,34190549,34192254,34193923,34195686,34197518,34199284,34200966,34202661,34204479,34206175,34207919,34209701,34211443,34213313,34215264,34217189,34219211,34221191,34223139,34225052,34227020,34228956,34230893,34232878,34234851,34236830,34238807,34240797,34242791,34244797,34246784,34248767,34250742,34252693,34254708,34256668,34258664,34260669,34262638,34264600,34266579,34268543,34270510,34272495,34274518,34276531,34278518,34280490,34282479,34284447,34286416,34288379,34290355,34292332,34294317,34296283,34298249,34300225,34302202,34304164,34306121,34308075,34310044,34311999,34313984,34315946,34317920,34319873,34321861,34323807,34325770,34327733,34329684,34331627,34333591,34335531,34337499,34339443,34341409,34343357,34345324,34347271,34349240,34351187,34353160,34355104,34357071,34359014,34360979,34362893,34364813,34366703,34368632,34370532,34372444,34374371,34376273,34378169,34380089,34382000,34383909,34385846,34387731,34389645,34391560,34393454,34395376,34397203,34399173,34401004,34402842,34404808,34406633,34408467,34410430,34412280,34414100,34416061,34417936,34419767,34421723,34423607,34425438,34427369,34429247,34431070,34433001,34434899,34436725,34438656,34440553,34442374,34444257,34446122,34447911,34449796,34451632,34453433,34455327,34457141,34458974,34460862,34462681,34464504,34466389,34468179,34470007,34471897,34473673,34475516,34477403,34479154,34481020,34482913,34484695,34486590,34488462,34490299,34492211,34494065,34495905,34497813,34499634,34501513,34503406,34505230,34507134,34508995,34510833,34512740,34514552,34516434,34518335,34520143,34522043,34523900,34525814,34527656,34529515,34531427,34533272,34535135,34537045,34538891,34540757,34542667,34544506,34546378,34548288,34550133,34552001,34553909,34555759,34557627,34559531,34561386,34563258,34565159,34567008,34568885,34570791,34572647,34574507,34576428,34578278,34580110,34582040,34583895,34585743,34587664,34589527,34591382,34593268,34595141,34597011,34598883,34600759,34602638,34604499,34606384,34608270,34610118,34612004,34613907,34615772,34617695,34619611,34621535,34623455,34625368,34627288,34629220,34631137,34633045,34634958,34636857,34638781,34640700,34642614,34644524,34646475,34648390,34650375,34652356,34654347,34656341,34658328,34660302,34662287,34664281,34666263,34668249,34670241,34672205,34674098,34676040,34677927,34679858,34681743,34683700,34685549,34687477,34689366,34691212,34693177,34695146,34697070,34699055,34700992,34702959,34704898,34706864,34708810,34710768,34712739,34714715,34716670,34718635,34720598,34722540,34724525,34726435,34728384,34730252,34732159,34734047,34735942,34737873,34739725,34741696,34743522,34745496,34747340,34749274,34751173,34753067,34754952,34756846,34758788,34760557,34762485,34764269,34766176,34768030,34769894,34771763,34773582,34775483,34777280,34779216,34781032,34782916,34784777,34786615,34788487,34790307,34792231,34794144,34796189,34798209,34800239,34802245,34804262,34806261,34808279,34810278,34812328,34814334,34816391,34818429,34820454,34822471,34824481,34826454,34828481,34830460,34832491,34834525,34836574,34838631,34840649,34842687,34844705,34846709,34848736,34850747,34852777,34854822,34856878,34858925,34860968,34863007,34865039,34867022,34868893,34870911,34872907,34874927,34876969,34879004,34881029,34883029,34885009,34887011,34889013,34890972,34892958,34894981,34897016,34899027,34901064,34903077,34905071,34907055,34909077,34911061,34913022,34915011,34917033,34919070,34921093,34923125,34925149,34927132,34929137,34931142,34933126,34935084,34937082,34939099,34941130,34943175,34945211,34947248,34949270,34951321,34953345,34955360,34957340,34959336,34961317,34963348,34965371,34967424,34969478,34971531,34973578,34975602,34977626,34979639,34981661,34983673,34985726,34987771,34989809,34991833,34993802,34995791,34997774,34999791,35001778,35003775,35005764,35007720,35009708,35011695,35013650,35015586,35017558,35019514,35021511,35023470,35025436,35027461,35029414,35031354,35033359,35035311,35037121,35038954,35040966,35042956,35044946,35046947,35048940,35050894,35052865,35054811,35056853,35058851,35060796,35062689,35064581,35066501,35068487,35070459,35072339,35074246,35076217,35078180,35080130,35081947,35083852,35085830,35087814,35089759,35091601,35093512,35095469,35097411,35099297,35101133,35103061,35104905,35106775,35108713,35110685,35112617,35114597,35116493,35118353,35120248,35122084,35124014,35125920,35127895,35129846,35131741,35133632,35135531,35137404,35139360,35141325,35143273,35145201,35147013,35148917,35150724,35152665,35154661,35156594,35158478,35160325,35162180,35164028,35165933,35167856,35169742,35171642,35173515,35175375,35177277,35179168,35180998,35182924,35184821,35186645,35188544,35190341,35192121,35194092,35196059,35197982,35199910,35201847,35203689,35205533,35207389,35209206,35211012,35212895,35214875,35216814,35218771,35220707,35222548,35224439,35226387,35228368,35230322,35232370,35234389,35236383,35238103,35240085,35242112,35244127,35246121,35248101,35250058,35252067,35254102,35256070,35258088,35259986,35261988,35263985,35266019,35267946,35269760,35271763,35273761,35275757,35277751,35279544,35281550,35283560,35285591,35287578,35289574,35291501,35293437,35295450,35297445,35299437,35301466,35303502,35305532,35307523,35309529,35311532,35313550,35315567,35317561,35319540,35321510,35323536,35325563,35327482,35329291,35331094,35332944,35334939,35336955,35338950,35340929,35342946,35344926,35346910,35348818,35350786,35352776,35354667,35356590,35358545,35360510,35362446,35364423,35366424,35368420,35370430,35372417,35374386,35376322,35378315,35380303,35382283,35384208,35386106,35388064,35390025,35391971,35393802,35395757,35397699,35399660,35401506,35403483,35405449,35407449,35409413,35411419,35413405,35415410,35417437,35419392,35421298,35423209,35425157,35427078,35428987,35430922,35432897,35434852,35436779,35438705,35440692,35442727,35444736,35446722,35448706,35450660,35452667,35454680,35456655,35458621,35460612,35462546,35464536,35466479,35468447,35470392,35472374,35474340,35476315,35478312,35480343,35482347,35484325,35486306,35488301,35490318,35492286,35494235,35496212,35498200,35500138,35502135,35504020,35506000,35507991,35510008,35511981,35513920,35515907,35517919,35519896,35521871,35523816,35525784,35527779,35529822,35531740,35533748,35535744,35537721,35539754,35541692,35543693,35545701,35547674,35549701,35551669,35553640,35555655,35557630,35559574,35561560,35563531,35565545,35567515,35569501,35571416,35573378,35575340,35577331,35579246,35581239,35583196,35585151,35587108,35589081,35591072,35593088,35595031,35596980,35598958,35600909,35602849,35604797,35606757,35608691,35610581,35612437,35614380,35616359,35618287,35620189,35622163,35624027,35625971,35627941,35629821,35631787,35633761,35635714,35637671,35639673,35641596,35643569,35645554,35647498,35649463,35651410,35653410,35655438,35657424,35659459,35661495,35663494,35665475,35667474,35669446,35671454,35673487,35675529,35677561,35679609,35681618,35683576,35685586,35687557,35689571,35691607,35693626,35695670,35697676,35699680,35701694,35703713,35705713,35707748,35709794,35711822,35713873,35715907,35717929,35719890,35721903,35723876,35725900,35727938,35729987,35732041,35734088,35736112,35738074,35740091,35742065,35744111,35746133,35748180,35750215,35752253,35754270,35756262,35758188,35760163,35761975,35763945,35765913,35767905,35769888,35771901,35773934,35775943,35777962,35779924,35781937,35783914,35785740,35787726,35789704,35791672,35793659,35795664,35797619,35799400,35801361,35803313,35805272,35807260,35809261,35811186,35813047,35814864,35816617,35818230,35819936,35821453,35823048,35824562,35826132,35827570,35829137,35830622,35831924,35833359,35834814,35836157,35837336,35838869,35840132,35841512,35842716,35844228,35845346,35846751,35848025,35848899,35850449,35851778,35853113,35854284,35855518,35857093,35857911,35859141,35860550,35861694,35863231,35864365,35865674,35866952,35868129,35869713,35870830,35872270,35873785,35875104,35876671,35878031,35879536,35881043,35882520,35884158,35885388,35886878,35888396,35889705,35891140,35892522,35893847,35895180,35896277,35897896,35899140,35900586,35901807,35902628,35904298,35905701,35906988,35908197,35909441,35911063,35911910,35913129,35914592,35915814,35917403,35918444,35919744,35920957,35922352,35923772,35925126,35926579,35928098,35929332,35930961,35932395,35933912,35935503,35936827,35938429,35939732,35941245,35942775,35943979,35945582,35946787,35948171,35949448,35950847,35952258,35953554,35955009,35956214,35957069,35958738,35960149,35961364,35962556,35963815,35965416,35966214,35967447,35968877,35970038,35971620,35972683,35974009,35975276,35976662,35978108,35979488,35980967,35982456,35983690,35985320,35986784,35988272,35989862,35991243,35992728,35994107,35995597,35996987,35998137,35999758,36000950,36002428,36003612,36005170,36006407,36007664,36009075,36010171,36011174,36012680,36014113,36015200,36016485,36017950,36019126,36020110,36021392,36022732,36023888,36025337,36026527,36027897,36029044,36030586,36031714,36033136,36034632,36035953,36037549,36038948,36040471,36041962,36043424,36045050,36046291,36047754,36049246,36050659,36051940,36053454,36054719,36056105,36057242,36058841,36060063,36061548,36062837,36063703,36065312,36066649,36068005,36069168,36070461,36072102,36072983,36074159,36075592,36076878,36078374,36079532,36080824,36082059,36083316,36084916,36086143,36087656,36089160,36090406,36092013,36093372,36094880,36096456,36097818,36099477,36100738,36102240,36103758,36105026,36106678,36107863,36109284,36110557,36111854,36113307,36114546,36115955,36117118,36118015,36119633,36121027,36122265,36123466,36124794,36126338,36127193,36128456,36129925,36131102,36132718,36133790,36135169,36136396,36137813,36139252,36140628,36142128,36143648,36144886,36146455,36147908,36149456,36151085,36152416,36153996,36155381,36156955,36158480,36159617,36161204,36162433,36163786,36165031,36166327,36167723,36168941,36170380,36171597,36172470,36174059,36175436,36176679,36177877,36179142,36180753,36181593,36182858,36184292,36185419,36186972,36188045,36189359,36190633,36192097,36193420,36194646,36196138,36197662,36199019,36200637,36202083,36203629,36205196,36206569,36208216,36209575,36211134,36212646,36213820,36215366,36216740,36218078,36219385,36220515,36222129,36223287,36224709,36225997,36226864,36228462,36229819,36231172,36232342,36233565,36235141,36236000,36237200,36238622,36239814,36241173,36242384,36243668,36245050,36246341,36247973,36249089,36250565,36252152,36253576,36255099,36256575,36258097,36259539,36261101,36262688,36264041,36265478,36266997,36268352,36269545,36271206,36272450,36273835,36274979,36276615,36277778,36279270,36280606,36281490,36283026,36284306,36285681,36286788,36288077,36289534,36290678,36291733,36293074,36294459,36295698,36297208,36298374,36299729,36300900,36302545,36303763,36305261,36306709,36308018,36309608,36311052,36312647,36314159,36315673,36317378,36318663,36320166,36321699,36323032,36324280,36325893,36327226,36328637,36329778,36331416,36332598,36334110,36335459,36336368,36337845,36339148,36340557,36341674,36343049,36344264,36345660,36346594,36347965,36349428,36350724,36352358,36353417,36354842,36356143,36357751,36358998,36360390,36361918,36363384,36364694,36366389,36368025,36369585,36371206,36372597,36374302,36375541,36376767,36378085,36379482,36380812,36382658,36384129,36385568,36386751,36388067,36389637,36391097,36392623,36394396,36395753,36397085,36398375,36399928,36401350,36402853,36404654,36406080,36407521,36408788,36410132,36411631,36413007,36414420,36416234,36417731,36419283,36420606,36421879,36423355,36424583,36425928,36427400,36429048,36430140,36431372,36432611,36434225,36435730,36437023,36438443,36439968,36441357,36442848,36444540,36446327,36448040,36449922,36451466,36453395,36455290,36457117,36458826,36460715,36462527,36464347,36466229,36467599,36469304,36470984,36472746,36474486,36476162,36477834,36479387,36480721,36481652,36483547,36485526,36487459,36489231,36490525,36491348,36493151,36494708,36496512,36498323,36500210,36501885,36503787,36505360,36506961,36508823,36510441,36512333,36514204,36516090,36517890,36519579,36521312,36522895,36524846,36526823,36528571,36530558,36532506,36534416,36536275,36538140,36539899,36541559,36543396,36545235,36547135,36549020,36550694,36552380,36554008,36555561,36557415,36559065,36560705,36562351,36563871,36565483,36566917,36568588,36570606,36572640,36574646,36576541,36578517,36580551,36582585,36584521,36586524,36588570,36590594,36592534,36594529,36596556,36598561,36600493,36602477,36604436,36606398,36608353,36610326,36612250,36614171,36616171,36618193,36620233,36622225,36624249,36626270,36628269,36630272,36632203,36634079,36636134,36638187,36640214,36642162,36644148,36646027,36647921,36649884,36651804,36653719,36655653,36657554,36659478,36661363,36663283,36665168,36667066,36669004,36670855,36672748,36674702,36676556,36678496,36680396,36682316,36684222,36685768,36687119,36689040,36690707,36692542,36693979,36695299,36696546,36698429,36700012,36701651,36703307,36705058,36706586,36708171,36709759,36711356,36712798,36714156,36715880,36717564,36718974,36720094,36721665,36723369,36724782,36725904,36727821,36729706,36731485,36733210,36735006,36736793,36738438,36740345,36742159,36743862,36745533,36747204,36748926,36750462,36752311,36754036,36755417,36757003,36758521,36760242,36761635,36762902,36764163,36765861,36767394,36768851,36770023,36771228,36772958,36774546,36776201,36777776,36779810,36781777,36783746,36785744,36787683,36789556,36791313,36793110,36794995,36796867,36798810,36800688,36802569,36804544,36806385,36808285,36810204,36812173,36814058,36815665,36817606,36819267,36820701,36822307,36823952,36825365,36826734,36828449,36829928,36831359,36833026,36834621,36836356,36837938,36839539,36841276,36842941,36844475,36846288,36847926,36849527,36850925,36852540,36854354,36856019,36857435,36858710,36860400,36861648,36863463,36865338,36867115,36868780,36870194,36871596,36873393,36874950,36876521,36878102,36879619,36881367,36883001,36884472,36886123,36887761,36889327,36890945,36892258,36893807,36895403,36896956,36898569,36899851,36901494,36903013,36904624,36906252,36907438,36908977,36910518,36912006,36913244,36914377,36915849,36917042,36918519,36919772,36921380,36922452,36923843,36925314,36926569,36928090,36929388,36930650,36932250,36933693,36935199,36936986,36938812,36940463,36942285,36944109,36946036,36947847,36949747,36951514,36953457,36954950,36956589,36958207,36959810,36961478,36962906,36964906,36966536,36968113,36969773,36971476,36973280,36974871,36976288,36977897,36979390,36980943,36982534,36983937,36985537,36986957,36988572,36990069,36991674,36993119,36994695,36996237,36997815,36999279,37000978,37002868,37004506,37006467,37008154,37010036,37011507,37013128,37014615,37016212,37017785,37019795,37021636,37023473,37025387,37027283,37029198,37031089,37032747,37033279,37033900,37034364,37035165,37035671,37036348,37036771,37037384,37038711,37040705,37042673,37044638,37046576,37048545,37050499,37052461,37054394,37056248,37057879,37059494,37061153,37062962,37064534,37066128,37067689,37069280,37071068,37072606,37074389,37075766,37077265,37078729,37080248,37081619,37083017,37084481,37086039,37087353,37088603,37089887,37091394,37092809,37094310,37095744,37097079,37098675,37100137,37101693,37103172,37104590,37105953,37107383,37108793,37110227,37111567,37112983,37114746,37116500,37118297,37120163,37122050,37123940,37125769,37127530,37129281,37131069,37132731,37134483,37136288,37138130,37139890,37141623,37143303,37144813,37145651,37146427,37147285,37148354,37150061,37151763,37153458,37155071,37156763,37158348,37159957,37161608,37163287,37165010,37166668,37168418,37170075,37171825,37173611,37175460,37177262,37178904,37180603,37182069,37183876,37185291,37187091,37188632,37190541,37192180,37194038,37195827,37197694,37199420,37201254,37203058,37204923,37206182,37207253,37208277,37209340,37210402,37211481,37212568,37213630,37215132,37216681,37218238,37219756,37221344,37222881,37224426,37225963,37227525,37229074,37230531,37232158,37233770,37235320,37236346,37237368,37238449,37239540,37241011,37242428,37244195,37245994,37247580,37248729,37249983,37251498,37252831,37253921,37255407,37257110,37258327,37259858,37261487,37263053,37264619,37266264,37267876,37269250,37270478,37271345,37272449,37273127,37273981,37274772,37275485,37276952,37278317,37279588,37280116,37280936,37281463,37282005,37282787,37283334,37284219,37284951,37285888,37286418,37287082,37287791,37288494,37289356,37289855,37290687,37291349,37292294,37292799,37293329,37294273,37294966,37295835,37296277,37297099,37297723,37298502,37298806,37299087,37299625,37299813,37300446,37300690,37301281,37301543,37301774,37302345,37302516,37303074,37303267,37303776,37303814,37304167,37304469,37304692,37305266,37305503,37306641,37308075,37309603,37310818,37312043,37313271,37314465,37315647,37316605,37317576,37318578,37319524,37320480,37321484,37322463,37323849,37325210,37326618,37328028,37329498,37331018,37332420,37333792,37335188,37336783,37338258,37339747,37341322,37342927,37344510,37346008,37347497,37349105,37350492,37351917,37353328,37354723,37356128,37357536,37358986,37360420,37361811,37363218,37364618,37365980,37367264,37368188,37369142,37370050,37371151,37372108,37373048,37374023,37374945,37376016,37376939,37377906,37378840,37380146,37381553,37383008,37384375,37385738,37386663,37387592,37388526,37389539,37391251,37392830,37394417,37395999,37397458,37399013,37400607,37402196,37403940,37405310,37406639,37407989,37409272,37410570,37411869,37413234,37414590,37416192,37417762,37419311,37420579,37421952,37423362,37424602,37426104,37427710,37429377,37430914,37432462,37434045,37435851,37437519,37439281,37440893,37442378,37443618,37445063,37446493,37447862,37449151,37450328,37451811,37453280,37454798,37456262,37457683,37459295,37460727,37462464,37464125,37465810,37467470,37469067,37470718,37472383,37474029,37475697,37477394,37479097,37480740,37482412,37483909,37485568,37487217,37488784,37490450,37492098,37493763,37495415,37497027,37498626,37500293,37501984,37503551,37505273,37506956,37508628,37510309,37511808,37513456,37515118,37516717,37518417,37520091,37521722,37523356,37525025,37526858,37528496,37530119,37531746,37533548,37535239,37536921,37538597,37540249,37542063,37543658,37545367,37546972,37548544,37549523,37550452,37551396,37552489,37554023,37555535,37557108,37558599,37560139,37561443,37562716,37564039,37565396,37566528,37567729,37569012,37570399,37571587,37572528,37573514,37574647,37576000,37577149,37578271,37579349,37580525,37581641,37582561,37583456,37584921,37586440,37587946,37589483,37591018,37592535,37594066,37595595,37597126,37598751,37600167,37601553,37602922,37604306,37605690,37607054,37608413,37610004,37611550,37613069,37614590,37616165,37617712,37619235,37620770,37622310,37624069,37625663,37627267,37628937,37630570,37632148,37633759,37635415,37637141,37638721,37640178,37641587,37642965,37644399,37645866,37647257,37648685,37650468,37652246,37653985,37655667,37657403,37659138,37660856,37662553,37664309,37666158,37667889,37669572,37671211,37672949,37674653,37676335,37678002,37679705,37680763,37681901,37683071,37684171,37685281,37686337,37687628,37688752,37689820,37690799,37691737,37692410,37693093,37693781,37694843,37696589,37698271,37700017,37701686,37703425,37705105,37706845,37708496,37710375,37712120,37713839,37715479,37717150,37718825,37720540,37722254,37724055,37725890,37727650,37729453,37731174,37732952,37734694,37736470,37738202,37740088,37741834,37743554,37745192,37746853,37748528,37750221,37751908,37753637,37755139,37756654,37758041,37759546,37760981,37761963,37762969,37763949,37765437,37767302,37769091,37770905,37772649,37774496,37776277,37778147,37779992,37781576,37782777,37783978,37785286,37787001,37788076,37789104,37790158,37791861,37793506,37795123,37796732,37798396,37799949,37801585,37803184,37804855,37806449,37807916,37809325,37810782,37812138,37813597,37815023,37816444,37817905,37819521,37821057,37822581,37824156,37825627,37827067,37828526,37829976,37831575,37833211,37834844,37836428,37837986,37839659,37841277,37842866,37844535,37846149,37847606,37849099,37850542,37851954,37853417,37854838,37856245,37857818,37859659,37861467,37863322,37865059,37866897,37868671,37870553,37872374,37874078,37875693,37877300,37878908,37880452,37882085,37883714,37885337,37887067,37888621,37890111,37891568,37893005,37894496,37895958,37897417,37898904,37900599,37902427,37904260,37906118,37907799,37909663,37911484,37913337,37915192,37916828,37918465,37920060,37921767,37923258,37924913,37926513,37928140,37929771,37931246,37932705,37934138,37935509,37937039,37938514,37939961,37941414,37943277,37945084,37946909,37948785,37950462,37952315,37954127,37956004,37957739,37958437,37960106,37961153,37961833,37963000,37963662,37964325,37965487,37966174,37967165,37968704,37969356,37970035,37970710,37972149,37973350,37974470,37975794,37977087,37977954,37978984,37980228,37981428,37982660,37983951,37985466,37986958,37988322,37989342,37990588,37992285,37993860,37995592,37997231,37998969,38000527,38002096,38003795,38005510,38006539,38007688,38009154,38010548,38012087,38013277,38014273,38015267,38016279,38017676,38018748,38019864,38020970,38022042,38023613,38025647,38027691,38029692,38031683,38033711,38035709,38037701,38039717,38041747,38043788,38045801,38047819,38049867,38051906,38053917,38055869,38057888,38059913,38061937,38063938,38065924,38067945,38069969,38071965,38073957,38075983,38078012,38080024,38082020,38084013,38086028,38088031,38089973,38091996,38094036,38095930,38097848,38099725,38101651,38103571,38105422,38107276,38109145,38111032,38112929,38114816,38116637,38118510,38120335,38122184,38124074,38125940,38127598,38129264,38130934,38132618,38134282,38135934,38137553,38139293,38140962,38142625,38144269,38145899,38147553,38149217,38150858,38152463,38154178,38155623,38157061,38158501,38159919,38161351,38162779,38164177,38165584,38167205,38168618,38170083,38171747,38173103,38174568,38176067,38177733,38179137,38180617,38182160,38183747,38185282,38186676,38188270,38189799,38191393,38192740,38194195,38195537,38197416,38199192,38200676,38202291,38203944,38205513,38207106,38208615,38210310,38211941,38213509,38215077,38216724,38218482,38220182,38221748,38223331,38225011,38226533,38228095,38229621,38231190,38232721,38234280,38235805,38237332,38238868,38240352,38242006,38243588,38245115,38246793,38248476,38250105,38251763,38253475,38255290,38256811,38258326,38260282,38262207,38263898,38265612,38267409,38269352,38271275,38273200,38275181,38277106,38279070,38280974,38282891,38284752,38286567,38288408,38290309,38292299,38294152,38296023,38297851,38299681,38301450,38303245,38305005,38306908,38308902,38310864,38312841,38314774,38316683,38318593,38320505,38322423,38324429,38326299,38328195,38330050,38331868,38333682,38335514,38337293,38339166,38341186,38343173,38345153,38347137,38349066,38351017,38352938,38354856,38356866,38358683,38360489,38362246,38364028,38365788,38367579,38369300,38371078,38372994,38374868,38376658,38378461,38380281,38382090,38383914,38385699,38387529,38388958,38390402,38391896,38393320,38394743,38396175,38397597,38398992,38400910,38402879,38404806,38406837,38408762,38410687,38412603,38414539,38416452,38418363,38420229,38422184,38424145,38426093,38428040,38429941,38431851,38433774,38435669,38437598,38439514,38441015,38442527,38444125,38445745,38447318,38448924,38450453,38451991,38453930,38455746,38457536,38459290,38461060,38462785,38464520,38466232,38468019,38469335,38470667,38471947,38473302,38474606,38475943,38477321,38478688,38480362,38481840,38483339,38484883,38486467,38487982,38489459,38490919,38492498,38494100,38495708,38497331,38498917,38500542,38502086,38503721,38505117,38506435,38507777,38509014,38510292,38511446,38512682,38514101,38516062,38517961,38519826,38521724,38523623,38525526,38527393,38529283,38531258,38533158,38535031,38536887,38538768,38540663,38542549,38544414,38546281,38547931,38549359,38550776,38552105,38553533,38554996,38556457,38557918,38559560,38561232,38562950,38564664,38566405,38568046,38569637,38571200,38572733,38574174,38575715,38577290,38578919,38580559,38582311,38583997,38585666,38587469,38588917,38590360,38591823,38593308,38594727,38596090,38597536,38598971,38600661,38602116,38603636,38605162,38606347,38607897,38609396,38610909,38612455,38614054,38615557,38617066,38618550,38619683,38621147,38622670,38624151,38625986,38627953,38629890,38631823,38633254,38634667,38636065,38637458,38638901,38640327,38641721,38643137,38644581,38645727,38646924,38647987,38648712,38649810,38650973,38652115,38653546,38654919,38656392,38657994,38659906,38661778,38663650,38665565,38667473,38669362,38671257,38673129,38674683,38676303,38677711,38679203,38680676,38681772,38682661,38683495,38684298,38685239,38686063,38686910,38687730,38688706,38689643,38690545,38691341,38692278,38693242,38694275,38695269,38696527,38697851,38699128,38700393,38701708,38701860,38702513,38703111,38703710,38703918,38704420,38704812,38705791,38707006,38707785,38708770,38709508,38710879,38711813,38712954,38714022,38714458,38714631,38715126,38715505,38716382,38717671,38719204,38720668,38722614,38724397,38726168,38727989,38729804,38731591,38733349,38735130,38736959,38738565,38740204,38741832,38743412,38745045,38746677,38748297,38749817,38751403,38752722,38754047,38755366,38756826,38758474,38760116,38761811,38763500,38765169,38766844,38768508,38770176,38771829,38773510,38775152,38776767,38778213,38780044,38781897,38783721,38785469,38787283,38789118,38790954,38792714,38794485,38795939,38797388,38798862,38800309,38802166,38804039,38805898,38807779,38809618,38811480,38813321,38815204,38817059,38818754,38820547,38822188,38823314,38824400,38825564,38826666,38828458,38830470,38832460,38834397,38836338,38838291,38840216,38842097,38843984,38845916,38847883,38849814,38851738,38853658,38855573,38857489,38859458,38861407,38863067,38864811,38866552,38868401,38870206,38871942,38873577,38875223,38877279,38879333,38881381,38883425,38885479,38887516,38889554,38891590,38893645,38895696,38897751,38899786,38901836,38903886,38905925,38907953,38910005,38911954,38913848,38915736,38917563,38919405,38921261,38923105,38924954,38926905,38928761,38930681,38932547,38934391,38936205,38938062,38939914,38941789,38943445,38944785,38945925,38946688,38947533,38948268,38948888,38949484,38950263,38951097,38952032,38952655,38952974,38953805,38954642,38955516,38956031,38956483,38957288,38958190,38958959,38959359,38959980,38960754,38961627,38962325,38962725,38963790,38964942,38966046,38966701,38967185,38968382,38969465,38970663,38971192,38971798,38973043,38974092,38975229,38975839,38976378,38977637,38978745,38979864,38980710,38981962,38983346,38984813,38986442,38988209,38989255,38990339,38991491,38992665,38993809,38994957,38996023,38997178,38998287,38999450,39000561,39001771,39002916,39004003,39005073,39006156,39007777,39008835,39009949,39011116,39012230,39013305,39014375,39015430,39016456,39017462,39018350,39019342,39020415,39021374,39022231,39022999,39023890,39025394,39025846,39026387,39026871,39027377,39027911,39028466,39029005,39029535,39030003,39030487,39030997,39031486,39031982,39032512,39033044,39033593,39034666,39036124,39037598,39039113,39040645,39042133,39043627,39045157,39046626,39047977,39048942,39049980,39051168,39052829,39054258,39055670,39057038,39058299,39059769,39061331,39063053,39064715,39066390,39068025,39069631,39071265,39072939,39074604,39076371,39077866,39079352,39080862,39082377,39083824,39085364,39086841,39088309,39089568,39090700,39091889,39093184,39094552,39095831,39097178,39098357,39099639,39101042,39102466,39103896,39105407,39106889,39108466,39109980,39111574,39113284,39114330,39115432,39116574,39117741,39118917,39120052,39121152,39122329,39123472,39124594,39125717,39126917,39128078,39129157,39130180,39131281,39132900,39133978,39135075,39136277,39137389,39138451,39139548,39140618,39141619,39142605,39143543,39144547,39145619,39146588,39147443,39148228,39149087,39150550,39151016,39151539,39152025,39152542,39153074,39153609,39154151,39154706,39155144,39155622,39156135,39156633,39157131,39157672,39158194,39158719,39159948,39161722,39163527,39165315,39167074,39168894,39170667,39172513,39173923,39175327,39176722,39178122,39179543,39180928,39182157,39183321,39184695,39186350,39187627,39188922,39190296,39191849,39192875,39193929,39194928,39196184,39197754,39199455,39201138,39202724,39204293,39205493,39206650,39207835,39209193,39210542,39212229,39213911,39215578,39217184,39218884,39220554,39222139,39223771,39225441,39226798,39228001,39229499,39230488,39232362,39234036,39235997,39237778,39239539,39241156,39242849,39244568,39246260,39247927,39249691,39251479,39253084,39254619,39256122,39257687,39259241,39260776,39262370,39263926,39265308,39266944,39268535,39270132,39271723,39273281,39274859,39276433,39278072,39279699,39281353,39283128,39284801,39286148,39287773,39289580,39291250,39292906,39294125,39295131,39296255,39297450,39298580,39299734,39300787,39301878,39302988,39304174,39305277,39306482,39307668,39308749,39309795,39310901,39312243,39313020,39314097,39315313,39316403,39316803,39317923,39319115,39320251,39321172,39322046,39323205,39324404,39325570,39325995,39327068,39328293,39329453,39330312,39331258,39332425,39333631,39334825,39335166,39336157,39337421,39338521,39339444,39340500,39341687,39342863,39344000,39344439,39345365,39346631,39347768,39348755,39349774,39350916,39352108,39353253,39353867,39354688,39355892,39356994,39357992,39359560,39360635,39361729,39362868,39363992,39365066,39366138,39367219,39368230,39369207,39370121,39371120,39372189,39373148,39374026,39374826,39375683,39376921,39377884,39379129,39380223,39381163,39381770,39382876,39384119,39385251,39386349,39387450,39388599,39389835,39390966,39392207,39393375,39394481,39395719,39396883,39398226,39399339,39400581,39401715,39402911,39404126,39405273,39406484,39407677,39408929,39410137,39411202,39412167,39413274,39414534,39415756,39416826,39417794,39418914,39420262,39421431,39422470,39423466,39424599,39425856,39426999,39428002,39429020,39430112,39431517,39431946,39432496,39433395,39434808,39436527,39438354,39440203,39442079,39443815,39445272,39446180,39446689,39447191,39447722,39448286,39448800,39450194,39451346,39452483,39453996,39455272,39456314,39457597,39459111,39460298,39461404,39462878,39464206,39465260,39466534,39468223,39470009,39471891,39473603,39475343,39477234,39478956,39480832,39482610,39484362,39486333,39488173,39489891,39491616,39493506,39495228,39497079,39498968,39500660,39502554,39504233,39506072,39507852,39509698,39511457,39513251,39515090,39516852,39518666,39520544,39522288,39524149,39525894,39527645,39529545,39531249,39533087,39534867,39536685,39538458,39540325,39542054,39543783,39545777,39547447,39549253,39551141,39552835,39554711,39556514,39558350,39560057,39561914,39563664,39565433,39567324,39569075,39570805,39572692,39574442,39576253,39578043,39579795,39581733,39583492,39585318,39587037,39588933,39590666,39592528,39594282,39596019,39597904,39599565,39601388,39603275,39605031,39606736,39607775,39609051,39610185,39611467,39612712,39613918,39615173,39616331,39616878,39617646,39618498,39619404,39620042,39620382,39621188,39622057,39622912,39623392,39623890,39624692,39625582,39626372,39626761,39627402,39628205,39629057,39629754,39631133,39632207,39633287,39634415,39635573,39636707,39637848,39638932,39640088,39641183,39642342,39643474,39644671,39645850,39646944,39647974,39649052,39650524,39651953,39653662,39654673,39655774,39656902,39658059,39659112,39660150,39661283,39662334,39663363,39664307,39665265,39666290,39667337,39668153,39668930,39669789,39670957,39672402,39673820,39675550,39676006,39676528,39677022,39677545,39678065,39678599,39679163,39679703,39680159,39680628,39681138,39681636,39682154,39682697,39683235,39683765,39684969,39686593,39688243,39689831,39691493,39693184,39694808,39696460,39698139,39699859,39701649,39703303,39704937,39706532,39708156,39709818,39711519,39711611,39712395,39713527,39713867,39714291,39714756,39715752,39717484,39719515,39721544,39723573,39725591,39727585,39729604,39731543,39733560,39735582,39737599,39739607,39741610,39743620,39745600,39747582,39749568,39751213,39752660,39754168,39755832,39756910,39758111,39759578,39760702,39761825,39762947,39764068,39765187,39766308,39767522,39767697,39767828,39769701,39771704,39773642,39775530,39777433,39779315,39781133,39783012,39784914,39786795,39788714,39790635,39792543,39794529,39796424,39798284,39800196,39802125,39804012,39805810,39807788,39809733,39811614,39813503,39815457,39817373,39819122,39820882,39822707,39824453,39826355,39828262,39830150,39831983,39833912,39835812,39837688,39839576,39841481,39843409,39845251,39847085,39848946,39850858,39852689,39854220,39855839,39857288,39858869,39860521,39862114,39863689,39865141,39866661,39868265,39869883,39871508,39873120,39874603,39876183,39877753,39879278,39880962,39882578,39884281,39885797,39887288,39889117,39890976,39892765,39894524,39896349,39898219,39900055,39901889,39903754,39905524,39906833,39908126,39909470,39910817,39912129,39913445,39914774,39916150,39917723,39919182,39920632,39922095,39923588,39925076,39926544,39927971,39929577,39931040,39932502,39933944,39935406,39936891,39938333,39939778,39941198,39942857,39944310,39945758,39947203,39948691,39950163,39951605,39953027,39954631,39956093,39957524,39958939,39960391,39961888,39963344,39964777,39966179,39967798,39969167,39970557,39971969,39973483,39974928,39976353,39977775,39979369,39980797,39982201,39983556,39985037,39986506,39987923,39989322,39990738,39992341,39993729,39995089,39996519,39997978,39999447,40000863,40002254,40003795,40005295,40006694,40008136,40009634,40011108,40012567,40014008,40015423,40017062,40018509,40019923,40021407,40022905,40024398,40025859,40027329,40028735,40030288,40031609,40032930,40034296,40035641,40037007,40038302,40039538,40041091,40042420,40043722,40045049,40046451,40047796,40049138,40050469,40051758,40053299,40054615,40055912,40057247,40058584,40059919,40061219,40062513,40064059,40065525,40066953,40068409,40069894,40071379,40072848,40074299,40075692,40077337,40078757,40080168,40081652,40083142,40084639,40086078,40087473,40089060,40090531,40091880,40093280,40094751,40096208,40097628,40099064,40100454,40102070,40103495,40104875,40106323,40107799,40109274,40110671,40112057,40113509,40115088,40116469,40117854,40119293,40120771,40122223,40123641,40125071,40126688,40128164,40129571,40130999,40132440,40133933,40135381,40136804,40138194,40139984,40141720,40143551,40145276,40147161,40148735,40150472,40152270,40154103,40155937,40157713,40159351,40161042,40162845,40164603,40166320,40168125,40169975,40171785,40173667,40175484,40177416,40179257,40181156,40183002,40184874,40186720,40188549,40190312,40192131,40193964,40195742,40197510,40199332,40201274,40203065,40204852,40206569,40208350,40210079,40211849,40213565,40215352,40217217,40219024,40220790,40222535,40224326,40226085,40227825,40229592,40231535,40233417,40235240,40237069,40238881,40240678,40242524,40244318,40246101,40247987,40249710,40251497,40253227,40254969,40256698,40258462,40260234,40262093,40263877,40265727,40267563,40269416,40271244,40273001,40274760,40276548,40278343,40280154,40281884,40283639,40285300,40286893,40288650,40290375,40292001,40293799,40295608,40297341,40299113,40300784,40302415,40304070,40305737,40307542,40309433,40311094,40312704,40314341,40315994,40317688,40319369,40321050,40322697,40324467,40326150,40327767,40329413,40331114,40332821,40334518,40336189,40337993,40339797,40341553,40343325,40345110,40346940,40348714,40350556,40352329,40354172,40355972,40357659,40359403,40361209,40362990,40364777,40366547,40368407,40370167,40371990,40373888,40375751,40377626,40379561,40381470,40383274,40385076,40386755,40388441,40390173,40391944,40393683,40395488,40397184,40398964,40400720,40402384,40404198,40406005,40407794,40409627,40411464,40413169,40414910,40416324,40417850,40419361,40420873,40422403,40423906,40425409,40426938,40428986,40430946,40432877,40434872,40436860,40438794,40440785,40442725,40444630,40446599,40448588,40450605,40452558,40454496,40456482,40458475,40460502,40462139,40462696,40462734,40462774,40462814,40463132,40463172,40463210,40463250,40463842,40465707,40467491,40469314,40471162,40472974,40474795,40476576,40478412,40480197,40481663,40483124,40484557,40486026,40487444,40488869,40490302,40491853,40493719,40495550,40497364,40499115,40500899,40502666,40504454,40506266,40507525,40508345,40508385,40508423,40508463,40508634,40508788,40508828,40508866,40508906,40509940,40511026,40512755,40514482,40516225,40517979,40519747,40521452,40523155,40524897,40526662,40528522,40529523,40530759,40532202,40533466,40534273,40535842,40537287,40538575,40539570,40541368,40542979,40544623,40545198,40545236,40545276,40545314,40545632,40545672,40545710,40545750,40546291,40547617,40549068,40550257,40551481,40553149,40554808,40556414,40558096,40559774,40561439,40563111,40564724,40566356,40566396,40566433,40566473,40566513,40567600,40568048,40568147,40569294,40571135,40573142,40574894,40576563,40578174,40579810,40581499,40583170,40584894,40586638,40588326,40590053,40591797,40593538,40595276,40596995,40598677,40600363,40602076,40603177,40604290,40604767,40605761,40607580,40609349,40611058,40612803,40614531,40616326,40617988,40619720,40621593,40623432,40625255,40627145,40628922,40630843,40632640,40634527,40636360,40638200,40639880,40641549,40643320,40644969,40646770,40648542,40650244,40652132,40653920,40655890,40657664,40659615,40661457,40663377,40665251,40667125,40669102,40670369,40671545,40672675,40673668,40674866,40676302,40677666,40679037,40680409,40681813,40683011,40684179,40685259,40686386,40687546,40688831,40690496,40691163,40691996,40692917,40693939,40695297,40697002,40698186,40698934,40699594,40700408,40701842,40703453,40705209,40706814,40707653,40708980,40710588,40711986,40713205,40714159,40714969,40715924,40716702,40717182,40718086,40719283,40720675,40721871,40723076,40724406,40725786,40727190,40728507,40729863,40731787,40733690,40735554,40737470,40739314,40741172,40743072,40744960,40746816,40748718,40750649,40752592,40754428,40756326,40758205,40760154,40761427,40762337,40763277,40764208,40765752,40767709,40769456,40771333,40773247,40774392,40775598,40776793,40778010,40780038,40782065,40784050,40786077,40788023,40789933,40791815,40793724,40795650,40797680,40799720,40801757,40803813,40805593,40807409,40809191,40811032,40812841,40814656,40816353,40818171,40820012,40821963,40823898,40825826,40827785,40829399,40830694,40832006,40833660,40835000,40836193,40837475,40838759,40840079,40841271,40842542,40843775,40845356,40846848,40848068,40849258,40850914,40852542,40853345,40854128,40855675,40857278,40858136,40858895,40860092,40861346,40862520,40863262,40864219,40865864,40867498,40868868,40870269,40871913,40873743,40875482,40877279,40879052,40880883,40882648,40884491,40886330,40888150,40889812,40891481,40893157,40894882,40896650,40898437,40900254,40901994,40903638,40905089,40906472,40907908,40909501,40910968,40912395,40913832,40915408,40916939,40918375,40919869,40921415,40923017,40924517,40925974,40927521,40929409,40931386,40933364,40935291,40937317,40939288,40941266,40943235,40945242,40947009,40948781,40950526,40952286,40954084,40955675,40957225,40958799,40960679,40962596,40964408,40966289,40968212,40969985,40971822,40973585,40975414,40977384,40979248,40981080,40982989,40984897,40986724,40988498,40990300,40992193,40993694,40995258,40996884,40998510,40999698,41000958,41002570,41003922,41005096,41006379,41007578,41009271,41010453,41011679,41012948,41014735,41016506,41018296,41020052,41021822,41023668,41025465,41027257,41029040,41030906,41032745,41034562,41036383,41037913,41038756,41039578,41040381,41041313,41042469,41043648,41044791,41045976,41047295,41048495,41049680,41050885,41052199,41053568,41054971,41056284,41057870,41059713,41061560,41063423,41065284,41067160,41068955,41070814,41072643,41074597,41076500,41078438,41080358,41082286,41084199,41086115,41088084,41090006,41091807,41093670,41095488,41097232,41099062,41100888,41102615,41104201,41105866,41107636,41109482,41111325,41113219,41115102,41116901,41118784,41120647,41122148,41123622,41125016,41126526,41128080,41129663,41131445,41133028,41134581,41136210,41137863,41139568,41141245,41142994,41144765,41146546,41148345,41150222,41152270,41154319,41156289,41158250,41160220,41162208,41164177,41166164,41168102,41170058,41171979,41173873,41175060,41176345,41177744,41178784,41180496,41182283,41184022,41185780,41187522,41189093,41190695,41192179,41193811,41195598,41197356,41199138,41200873,41202721,41204513,41206321,41208089,41209876,41211583,41213292,41214995,41216659,41218330,41220140,41221938,41223556,41224796,41225779,41226858,41227972,41229344,41230253,41231157,41232057,41233382,41234348,41235561,41236489,41237786,41238343,41238987,41239521,41240126,41241111,41241867,41242669,41243328,41244053,41245202,41246422,41247604,41248615,41249923,41251270,41252720,41254104,41255423,41256893,41258450,41260102,41261439,41262847,41264504,41266036,41267496,41269222,41270838,41272511,41274069,41274297,41274522,41274723,41275025,41275866,41276361,41276778,41277245,41278901,41280938,41282992,41285033,41287065,41289103,41291159,41293193,41295210,41297222,41299151,41301096,41303045,41304923,41306832,41308772,41310692,41312409,41313840,41315182,41316676,41318131,41319255,41320463,41321591,41322660,41324096,41325551,41326957,41328434,41330110,41331982,41333798,41335629,41337509,41339366,41341167,41342949,41344821,41346638,41348373,41350114,41351886,41353591,41355349,41357139,41358844,41360444,41361838,41363332,41364786,41366292,41367718,41369171,41370782,41372251,41374056,41375912,41377783,41379657,41381289,41382499,41383738,41384970,41386544,41388386,41390186,41391963,41393806,41395197,41396654,41398115,41399557,41401485,41403507,41405532,41407550,41409593,41411600,41413601,41415574,41417577,41419071,41420584,41422087,41423570,41425349,41427011,41428667,41430346,41432320,41434282,41436270,41438267,41440273,41442002,41443719,41445445,41447234,41449289,41451343,41453396,41455448,41457003,41458267,41459343,41459876,41460406,41460941,41461697,41462884,41464338,41465768,41466926,41468140,41469651,41471023,41472461,41473744,41475290,41476816,41478438,41479898,41481301,41482988,41484754,41486519,41488361,41489997,41491218,41492547,41493790,41495166,41496112,41497105,41498115,41499164,41500094,41500959,41502012,41503086,41503980,41505990,41507966,41509914,41511869,41513889,41515903,41517880,41519899,41521879,41523462,41524927,41526557,41528258,41529923,41531588,41533291,41534928,41536732,41538231,41539701,41541310,41543130,41544721,41546450,41548136,41549836,41551315,41553026,41554608,41556050,41557535,41559145,41560688,41562106,41563945,41565853,41567717,41569564,41571460,41573356,41575223,41577080,41578989,41580622,41582143,41583581,41585222,41587198,41589185,41591154,41593148,41595143,41596958,41598748,41600545,41602385,41604252,41606161,41608082,41609902,41611339,41612792,41614232,41615606,41617089,41618591,41620118,41621591,41623108,41624646,41626401,41628088,41629714,41631166,41632765,41634288,41635776,41637519,41639250,41640879,41642636,41644317,41646038,41647712,41649493,41651181,41652855,41654393,41656071,41657733,41659414,41661061,41662598,41664278,41665875,41667449,41668996,41670480,41671971,41673766,41675095,41676825,41678507,41679964,41681459,41683007,41684549,41686049,41687569,41689223,41690841,41692176,41693506,41694822,41696336,41697930,41699772,41701176,41702724,41704419,41705859,41707588,41709348,41711045,41712682,41714277,41715558,41716768,41717988,41719287,41720621,41721863,41723172,41724870,41726267,41727742,41729034,41730417,41731545,41732714,41733955,41735176,41736469,41737896,41739339,41740716,41742133,41743713,41744955,41746230,41747750,41749507,41751360,41753051,41754438,41755601,41756624,41757530,41758444,41759523,41760663,41761922,41763196,41764610,41766263,41767839,41769506,41771343,41772861,41774033,41775034,41776053,41776997,41777734,41778539,41779872,41780942,41782223,41783462,41784719,41786022,41787512,41789181,41790894,41792765,41794635,41796395,41798165,41799909,41801327,41802598,41803796,41805105,41806372,41807704,41808981,41810270,41811492,41812789,41814107,41815382,41816716,41818416,41820002,41821678,41823296,41824818,41826238,41827886,41829550,41831198,41832613,41833815,41835004,41836286,41837556,41838783,41840199,41841681,41843542,41844985,41846258,41847644,41848853,41850111,41851187,41852439,41853836,41855439,41857153,41858820,41860436,41861882,41863256,41864736,41866054,41867889,41869326,41870758,41871994,41873250,41874504,41875682,41876946,41878365,41879982,41881705,41883416,41885102,41886610,41888240,41889979,41891489,41893144,41894698,41895728,41895980,41896955,41898533,41899627,41899875,41900791,41902350,41903420,41903670,41904599,41906168,41907238,41907459,41908383,41909916,41911012,41911276,41912147,41913679,41914784,41915043,41915833,41917052,41918322,41919628,41920992,41922378,41923632,41925017,41926294,41927698,41928986,41930321,41931595,41933027,41934329,41935645,41936975,41938299,41939705,41941157,41942426,41943661,41944876,41946130,41947366,41948601,41949878,41951409,41952558,41953725,41954884,41956093,41957305,41958485,41959704,41960905,41962406,41963673,41964927,41966191,41967445,41968710,41969975,41971224,41972811,41974561,41976296,41978066,41979719,41981394,41983086,41984914,41986833,41988005,41989338,41990647,41992050,41993345,41994773,41996024,41997344,41998721,42000064,42001436,42002768,42004128,42005532,42006908,42008288,42010102,42011793,42013409,42014997,42016654,42018212,42019751,42021211,42022455,42023841,42025205,42026641,42028220,42029729,42031196,42032703,42034400,42036317,42037989,42039601,42041180,42042840,42044395,42045958,42047472,42048767,42050181,42051523,42052946,42054491,42055980,42057473,42058985,42060649,42062526,42064249,42065862,42067467,42069104,42070680,42072265,42073748,42075034,42076404,42077759,42079138,42080680,42082176,42083702,42085187,42086806,42088647,42090393,42092022,42093632,42095211,42096803,42098408,42099882,42101207,42102562,42103940,42105342,42106879,42108399,42109939,42111387,42112991,42114781,42116315,42117522,42118684,42119694,42120543,42121476,42122544,42123527,42124646,42125815,42127078,42128311,42129315,42130256,42131269,42132309,42133380,42135011,42136215,42137426,42138445,42139277,42140177,42141259,42142242,42143331,42144449,42145708,42146912,42147993,42148868,42149899,42150918,42151977,42153920,42155857,42157743,42159690,42161659,42163653,42165571,42167518,42169394,42171233,42172996,42174811,42176695,42178601,42180555,42182496,42184442,42185917,42187897,42189811,42191768,42193753,42195728,42197705,42199662,42201638,42203552,42205330,42207093,42208866,42210642,42212393,42214238,42215998,42217735,42219524,42221289,42223073,42224824,42226545,42228245,42230251,42232203,42234088,42235982,42237877,42239854,42241448,42242162,42243020,42245048,42247005,42249011,42250992,42252947,42254916,42256905,42258861,42260864,42262815,42264766,42266723,42268701,42270680,42272650,42274592,42276546,42278350,42279930,42281488,42283054,42284609,42286183,42287729,42289310,42290981,42292757,42294378,42296085,42297665,42299294,42301146,42302946,42304787,42306599,42308273,42309808,42311372,42312857,42314572,42316234,42317967,42319564,42321286,42322918,42324595,42326309,42328076,42329908,42331745,42333579,42335455,42337283,42338935,42340656,42342212,42344001,42345832,42347646,42349488,42351326,42352902,42354497,42356076,42357620,42359295,42360983,42362735,42364386,42366154,42367870,42369658,42371395,42373205,42374771,42376325,42378038,42379770,42381447,42383003,42384866,42386491,42388266,42389918,42391733,42393386,42395086,42396664,42398314,42400023,42401523,42403066,42404793,42406462,42408091,42409537,42411131,42413067,42414895,42415907,42417779,42419695,42421362,42423160,42424691,42426711,42428710,42430718,42432499,42433992,42435320,42436522,42437798,42439036,42440539,42442139,42443714,42445216,42446662,42448131,42449638,42451154,42452688,42454156,42455388,42456382,42457254,42458274,42459564,42460658,42461652,42462760,42463841,42465606,42467424,42469288,42471180,42472962,42474825,42476578,42478372,42480348,42482096,42483686,42485324,42486976,42488703,42490483,42492271,42493937,42495790,42497616,42499483,42501372,42503129,42505027,42506789,42508604,42510541,42512379,42513981,42515651,42517313,42519045,42520832,42522619,42524300,42526148,42527937,42529843,42531632,42533560,42535330,42537274,42539060,42540979,42542961,42544845,42546841,42548817,42550703,42552653,42554630,42556601,42558598,42560446,42562135,42563883,42565698,42567474,42569307,42571176,42572991,42574682,42576313,42577577,42578871,42580545,42582100,42583707,42584902,42586072,42587172,42588177,42588643,42588957,42590181,42591461,42592779,42594078,42595405,42596870,42598140,42599480,42600790,42602215,42603559,42604853,42606198,42607453,42608891,42610232,42611513,42612892,42614198,42615656,42617232,42618398,42619826,42621267,42623085,42625000,42626962,42629004,42631041,42633045,42635037,42636993,42638962,42640602,42642213,42643721,42645203,42646950,42648516,42650233,42651959,42653521,42655262,42657066,42658661,42660427,42661999,42663588,42665200,42666828,42668485,42670292,42672196,42674111,42675938,42677585,42679317,42681145,42683091,42685042,42686900,42688591,42690351,42692203,42694127,42695943,42697698,42699366,42701212,42703138,42705031,42706916,42708540,42710304,42712217,42714194,42716158,42718087,42719810,42721502,42723382,42725276,42727150,42728911,42730238,42731211,42732240,42733224,42734626,42736125,42737723,42739311,42740957,42742580,42744278,42745920,42747539,42749121,42750976,42752682,42754411,42756137,42757735,42759452,42761075,42762713,42764396,42766103,42768036,42769775,42771487,42773236,42774953,42776696,42778422,42780022,42781742,42783413,42785154,42786834,42788434,42790107,42791729,42793254,42795236,42797132,42798988,42800916,42802864,42804791,42806664,42808364,42810130,42811779,42813453,42815225,42817199,42819074,42820979,42822863,42824761,42826761,42828676,42830645,42832576,42834494,42836312,42838099,42839887,42841683,42843578,42845533,42847401,42849289,42851197,42853103,42854954,42856833,42858490,42859857,42861063,42862443,42864154,42865753,42867413,42869041,42870952,42872826,42874674,42876520,42878363,42880206,42882042,42883909,42885796,42887662,42889560,42891466,42892344,42892895,42893518,42894467,42895536,42896548,42897835,42899062,42900376,42901336,42903161,42904854,42906475,42908033,42909787,42911385,42913038,42914732,42916301,42917777,42919417,42920869,42922199,42923440,42925014,42926676,42928351,42930078,42931778,42933492,42935212,42936817,42938517,42939854,42941191,42942754,42944206,42945746,42947229,42948728,42950172,42951647,42953072,42954431,42955770,42957640,42959436,42961256,42963115,42964976,42966825,42968684,42970490,42972386,42974211,42976029,42977870,42979794,42981694,42983562,42985412,42987302,42989294,42991307,42993267,42995163,42997067,42998942,43000887,43002802,43004740,43006625,43008565,43010467,43012341,43014203,43016065,43017960,43019849,43021607,43023090,43024558,43026139,43027787,43029393,43030980,43032654,43034280,43035908,43037530,43039141,43040891,43042559,43044188,43045863,43047509,43049140,43050792,43052420,43054119,43055798,43057447,43059092,43060749,43062383,43064005,43065638,43067285,43069175,43071046,43072925,43074757,43076626,43078496,43080322,43082192,43084031,43085967,43087832,43089678,43091526,43093360,43095204,43097036,43098914,43100859,43102733,43104588,43106437,43108306,43110150,43111991,43113864,43115761,43117353,43118752,43120176,43121603,43122906,43124358,43125773,43127371,43128770,43130077,43131566,43133044,43134455,43135874,43137713,43139589,43141428,43143252,43145057,43146887,43148717,43150630,43152560,43154230,43155964,43157679,43159364,43161049,43162754,43164526,43166126,43167850,43169437,43171226,43172936,43174655,43176396,43178165,43179884,43181480,43183133,43185032,43186873,43188709,43190577,43192178,43193992,43195852,43197718,43199563,43201417,43203084,43204817,43206598,43208363,43210158,43211908,43213533,43215287,43216983,43218666,43220495,43222106,43223821,43225562,43227375,43229120,43230898,43232616,43234291,43235985,43237623,43239287,43241016,43242395,43243577,43244863,43246052,43247293,43248582,43249751,43251123,43252792,43254316,43255829,43257477,43259142,43260678,43262234,43263818,43265372,43266938,43268469,43270063,43271941,43273809,43275739,43277624,43279501,43281030,43282670,43284083,43285685,43287428,43289234,43291015,43292717,43294494,43295974,43297433,43299144,43300877,43302639,43304123,43305476,43306949,43308808,43310716,43312208,43313667,43315288,43316716,43318253,43319816,43321282,43322965,43324477,43325948,43327466,43328992,43330467,43332041,43333479,43334990,43336529,43338017,43339617,43341115,43342595,43344111,43345756,43347302,43348785,43350335,43351694,43353156,43354573,43356086,43357986,43359828,43361661,43363453,43365257,43367082,43368829,43370565,43372251,43373822,43375628,43377327,43379122,43380915,43382523,43384285,43386069,43387708,43389561,43391499,43393352,43395239,43397132,43398881,43400804,43402501,43404260,43406025,43407616,43409385,43411111,43412889,43414521,43416264,43418015,43419784,43421474,43423266,43424949,43426751,43428462,43430104,43431780,43433406,43435137,43436857,43438674,43440323,43442003,43443728,43445462,43447171,43448899,43450565,43452299,43454010,43455791,43457318,43458730,43460423,43462181,43463843,43465540,43467306,43468929,43470392,43471956,43473464,43474987,43476385,43477908,43479422,43480936,43482599,43484392,43486070,43487823,43489594,43491253,43492955,43494675,43496337,43497958,43499631,43501254,43502951,43504544,43506153,43507773,43509482,43511111,43512771,43514373,43516074,43517713,43519353,43521006,43522648,43524366,43525992,43527644,43529288,43530976,43532611,43534242,43535856,43537582,43539220,43540876,43542532,43544177,43545890,43547510,43549127,43550721,43552492,43554117,43555826,43557529,43559318,43560958,43562599,43564207,43565906,43567554,43569157,43570852,43572541,43574349,43575956,43577580,43579211,43580919,43582572,43584457,43586206,43587884,43589495,43591302,43593079,43594669,43596421,43598221,43600015,43601719,43603627,43605501,43607383,43609324,43611338,43613281,43615228,43617181,43619180,43620910,43622773,43624708,43626702,43628708,43630711,43632720,43634535,43636468,43638300,43640113,43642031,43644038,43646065,43648086,43650084,43652050,43654012,43655929,43657844,43659726,43661637,43663541,43665478,43667428,43669409,43671183,43673081,43674971,43676867,43678730,43680473,43682070,43683710,43685661,43687431,43689257,43690795,43692420,43694040,43695665,43697241,43699048,43700474,43701873,43703185,43704537,43705953,43707486,43708978,43710342,43711782,43713317,43714796,43716219,43717658,43719110,43720630,43722116,43723519,43725207,43726959,43728769,43730466,43732157,43733847,43735598,43737320,43738984,43740697,43742385,43744139,43745805,43747480,43749138,43750832,43752455,43754183,43755851,43757524,43759157,43760895,43762579,43764224,43765871,43767602,43769242,43770883,43772529,43774270,43776219,43778108,43780004,43781964,43783849,43785775,43787654,43789542,43791469,43793250,43795028,43796818,43798737,43800749,43802731,43804775,43806827,43808857,43810896,43812915,43814942,43816980,43819026,43821060,43823098,43825152,43827208,43829246,43831279,43833322,43835172,43837010,43838881,43840806,43842733,43844631,43846507,43848382,43850115,43851571,43853082,43854478,43856157,43857782,43859416,43860940,43862522,43864160,43865709,43867328,43868848,43870281,43871835,43873443,43874989,43876512,43878162,43879629,43881046,43882606,43884011,43885778,43887636,43889440,43891162,43892829,43894463,43896287,43898120,43899983,43901832,43903624,43905405,43907058,43908890,43910727,43912531,43914150,43916159,43918145,43920148,43922065,43923964,43925892,43927473,43929177,43930889,43932634,43934343,43936122,43937918,43939673,43941334,43943107,43944802,43946496,43948177,43949838,43951357,43952867,43954374,43955882,43957439,43958968,43960513,43962033,43963588,43965089,43966577,43968115,43969618,43971191,43972702,43974204,43975701,43977199,43978506,43979784,43981067,43982254,43984240,43986181,43988103,43989992,43991925,43993892,43995832,43997754,43999622,44000967,44002232,44003541,44004882,44006242,44007568,44008870,44010326,44011969,44013437,44014896,44016508,44018158,44019637,44021230,44022789,44024498,44026193,44027858,44029525,44031174,44032845,44034481,44036160,44037877,44039524,44040745,44042011,44043320,44044606,44045921,44047158,44048354,44049782,44051018,44052100,44053122,44054229,44055424,44056604,44057603,44058951,44060455,44061734,44063028,44064263,44065492,44066728,44067992,44069389,44070667,44072202,44073525,44074842,44076200,44077542,44078881,44080165,44081490,44083214,44084821,44086455,44088186,44089906,44091522,44093028,44094294,44096148,44098126,44099632,44100668,44101932,44103084,44104420,44105549,44107092,44109050,44110974,44112560,44114309,44116138,44117956,44119710,44121287,44123237,44124418,44124844,44125480,44125953,44126470,44127003,44127538,44128000,44128876,44129335,44130415,44131725,44133170,44134523,44135704,44136830,44137309,44138171,44138721,44140110,44141558,44143068,44144579,44145969,44147047,44147636,44149134,44150194,44151598,44152742,44154235,44155584,44156784,44157969,44159770,44161551,44163260,44165002,44166808,44167158,44167266,44168465,44168966,44169598,44170237,44170787,44171275,44172043,44172688,44173191,44174494,44175432,44176343,44177776,44179181,44180567,44181986,44183363,44184930,44186527,44188237,44189834,44191471,44193037,44194633,44196477,44198053,44199180,44200369,44201536,44202766,44204077,44205326,44206620,44207881,44209323,44210830,44212440,44214066,44215741,44217326,44218714,44220077,44221457,44222314,44222339,44222369,44222394,44222871,44223532,44224770,44225485,44226956,44228580,44230261,44231877,44233510,44234713,44236380,44237884,44239484,44241005,44242714,44244610,44246551,44248448,44250395,44252281,44253989,44254879,44256038,44257537,44258887,44259836,44260781,44262046,44263367,44264791,44266224,44267723,44269241,44270797,44272423,44274139,44275902,44277432,44279025,44280521,44282092,44283673,44285181,44286730,44288436,44290490,44292546,44294580,44296589,44298475,44300423,44302443,44304416,44306153,44308070,44309949,44311891,44313883,44315913,44317908,44319940,44321946,44323963,44325941,44327972,44330028,44332031,44333745,44335581,44337592,44339615,44341625,44343558,44345225,44346817,44348069,44349279,44350455,44351890,44353885,44355787,44357503,44359257,44361147,44363034,44364800,44366590,44368369,44370217,44372163,44374128,44376091,44378058,44380027,44381991,44384005,44385875,44387419,44388975,44390532,44392042,44393553,44395117,44396631,44398134,44399508,44400899,44402245,44403594,44404874,44406188,44407527,44409076,44411093,44413109,44415097,44417066,44419072,44421032,44422951,44424885,44426898,44428722,44430430,44432101,44433762,44435477,44437118,44438425,44438614,44439014,44440260,44441578,44442904,44443890,44444919,44445868,44446955,44448119,44449750,44451460,44453022,44454721,44456450,44458124,44459644,44461216,44462793,44464409,44465963,44467550,44469030,44470515,44471752,44473144,44474210,44475392,44476678,44478015,44479233,44480565,44481984,44483486,44485052,44486656,44488102,44489551,44490952,44492236,44493209,44494291,44495887,44497386,44498144,44499305,44500578,44501958,44503444,44504929,44506425,44507911,44509090,44510371,44511815,44513310,44515009,44516725,44518584,44520415,44522205,44524001,44525567,44527211,44528820,44530476,44532047,44533658,44535140,44536732,44538245,44539703,44540933,44542340,44543867,44545444,44546801,44548194,44549578,44550996,44552355,44553620,44554112,44554745,44555172,44555899,44557340,44558866,44560425,44561966,44563398,44564869,44566416,44567875,44569242,44570564,44571723,44572881,44574197,44575571,44577097,44578463,44579557,44580362,44580663,44581560,44583291,44585197,44586989,44588760,44590321,44591716,44592728,44593863,44595423,44597019,44598582,44600128,44601703,44603272,44604824,44606537,44608296,44610129,44611844,44613671,44615442,44617323,44619087,44620833,44622224,44623628,44624989,44626386,44627794,44629297,44630968,44632679,44634220,44635781,44637284,44638774,44640322,44641855,44643327,44644998,44646907,44648724,44650263,44651503,44652234,44652999,44653848,44655075,44656589,44658179,44659847,44661558,44663040,44664657,44665990,44667339,44668568,44669527,44670118,44670942,44671744,44672602,44673213,44674162,44675593,44676804,44677299,44677840,44678307,44679276,44681028,44682707,44683793,44684927,44685949,44687130,44688499,44689847,44690928,44692063,44692975,44693985,44695407,44696884,44698306,44699751,44701164,44702732,44704423,44706182,44707807,44709600,44711464,44713313,44714876,44716276,44717268,44718425,44719566,44720736,44721688,44722683,44723519,44724603,44725595,44726731,44727961,44729112,44729562,44730098,44730714,44731385,44731867,44732399,44733016,44733679,44734156,44734709,44735346,44736061,44736566,44737136,44737738,44738401,44738831,44739317,44739877,44740929,44742808,44744493,44745530,44746659,44747687,44748810,44749838,44750930,44752035,44753376,44755173,44756832,44758523,44760234,44761872,44763547,44765281,44766826,44767979,44769326,44770988,44772645,44774330,44776095,44777969,44779417,44779659,44780017,44780286,44780647,44780826,44781101,44781338,44781695,44781746,44782012,44782037,44782217,44782362,44782630,44782909,44783188,44783423,44784084,44785533,44787019,44788649,44790192,44791265,44792353,44793416,44794538,44795688,44797034,44798514,44800040,44801494,44803120,44804968,44806849,44808541,44810253,44811631,44813257,44814880,44816532,44817912,44819347,44820624,44821910,44823545,44825112,44826682,44827877,44829502,44830954,44832443,44833925,44835311,44836573,44838012,44839479,44840891,44842412,44843948,44845459,44846749,44847882,44849176,44850524,44851868,44853091,44854416,44855489,44856621,44857657,44858526,44859335,44860205,44861021,44861909,44862697,44864553,44866342,44868249,44870142,44871573,44872783,44874126,44875376,44876410,44877366,44878421,44879399,44880822,44882421,44884072,44885667,44887363,44889011,44890711,44892330,44894018,44895728,44897437,44899054,44900738,44902452,44904127,44905804,44907511,44909186,44910868,44912549,44914224,44915911,44917528,44919180,44920855,44922577,44924219,44925869,44926884,44928272,44929785,44931412,44933085,44934976,44936871,44938788,44940728,44942019,44943178,44944542,44945562,44946833,44948246,44949551,44950389,44951168,44951931,44952841,44954120,44955364,44956671,44957848,44958200,44958303,44958403,44958506,44958722,44958769,44958885,44958932,44958979,44959026,44959070,44959185,44959226,44959420,44959597,44959644,44959688,44959787,44959837,44959887,44959935,44959980,44960085,44960126,44960172,44960220,44960347,44960395,44960443,44960629,44960677,44960725,44960773,44960822,44960871,44960987,44961034,44961156,44961203,44961250,44961297,44961424,44961469,44961511,44961551,44961590,44961688,44961738,44961788,44961830,44961872,44961978,44962031,44962080,44962126,44962170,44962209,44962326,44962372,44962418,44962528,44962574,44962690,44962736,44962782,44962828,44962875,44962984,44963029,44963074,44963119,44963225,44963270,44963315,44963360,44963405,44963447,44963554,44963593,44963643,44963740,44963790,44963832,44963874,44963980,44964033,44964127,44964929,44966098,44966509,44966555,44967175,44968302,44968846,44968894,44969365,44970518,44971198,44971581,44973629,44975582,44977590,44979638,44981686,44983734,44985782,44987830,44989784,44991832,44993880,44995819,44997867,44999915,45001918,45003966,45006014,45008062,45010110,45012158,45014206,45016214,45018092,45020030,45022083,45023976,45025944,45027950,45029892,45031842,45033890,45035938,45037986,45040034,45042082,45043980,45045854,45047902,45049950,45051998,45054046,45056055,45058103,45059972,45062020,45064068,45066116,45068115,45070163,45072104,45074152,45076200,45078248,45080296,45082344,45084392,45086440,45088444,45090492,45092540,45094588,45096636,45098684,45100732,45102732,45104780,45106724,45108772,45110650,45112698,45114746,45116794,45118842,45120890,45122938,45124945,45126993,45129041,45131089,45133137,45135110,45137167,45139043,45141091,45143139,45145141,45147041,45149008,45150968,45152888,45154835,45156841,45158755,45160803,45162851,45164899,45166947,45168995,45171043,45173091,45175139,45177119,45179167,45181215,45183214,45185262,45187258,45189221,45191225,45193229,45195176,45197116,45199058,45200945,45202948,45204996,45207044,45208983,45211031,45213079,45215127,45217131,45219179,45221171,45223226,45225274,45227322,45229370,45231418,45233466,45235514,45237562,45239610,45241658,45243706,45245754,45247758,45249806,45251854,45253902,45255950,45257998,45259973,45262021,45264069,45266117,45268165,45270213,45272261,45274223,45276271,45278319,45280367,45282415,45284463,45286511,45288559,45290528,45292535,45294583,45296458,45298506,45300554,45302602,45304650,45306698,45308746,45310794,45312842,45314836,45316884,45318932,45320980,45322979,45325027,45327032,45329038,45331086,45333134,45335182,45337230,45339278,45341326,45343333,45345381,45347429,45349477,45351525,45353573,45355621,45357669,45359717,45361765,45363813,45365861,45367909,45369957,45372005,45374053,45376101,45378149,45380155,45382103,45383958,45386006,45387948,45389897,45391945,45393959,45395897,45397769,45399817,45401865,45403913,45405961,45407969,45410017,45412065,45414113,45416161,45418209,45420257,45422071,45424011,45426012,45428060,45430062,45431892,45433728,45435776,45437824,45439872,45441920,45443968,45445959,45447968,45450016,45451889,45453937,45455985,45458033,45460081,45462129,45464177,45466225,45468273,45470276,45472324,45474372,45476420,45478468,45480516,45482564,45484612,45486660,45488708,45490756,45492804,45494805,45496853,45498901,45500949,45502997,45505045,45506986,45509034,45511082,45513086,45514838,45516419,45518467,45520515,45522563,45524611,45526549,45528597,45530645,45532693,45534700,45536748,45538796,45540761,45542809,45544772,45546820,45548824,45550821,45552760,45554808,45556856,45558604,45560652,45562530,45564578,45566626,45568674,45570722,45572770,45574818,45576782,45578830,45580878,45582926,45584974,45587022,45589070,45591118,45593119,45595167,45597215,45599263,45601311,45603359,45605314,45607362,45609410,45611458,45613506,45615380,45617428,45619476,45621445,45623493,45625389,45627437,45629436,45631435,45633375,45635423,45637432,45639480,45641528,45643576,45645624,45647672,45649720,45651728,45653776,45655712,45657760,45659808,45661856,45663904,45665915,45667963,45670011,45672059,45674107,45676155,45678096,45680144,45682192,45684195,45686243,45688117,45690165,45692213,45694261,45696309,45698318,45700366,45702414,45704462,45706465,45708513,45710561,45712479,45714527,45716479,45718527,45720467,45722408,45724332,45726336,45728384,45730328,45732376,45734424,45736472,45738229,45740203,45742206,45744211,45746259,45748307,45750355,45752403,45754451,45756392,45758440,45760317,45762277,45764231,45766233,45768281,45770329,45772377,45774425,45776473,45778421,45780469,45782411,45784459,45786400,45788287,45790132,45792131,45794179,45796227,45798275,45800323,45802371,45804378,45806262,45808310,45810358,45812406,45814412,45816460,45818508,45820556,45822501,45824549,45826477,45828515,45830512,45832560,45834608,45836610,45838658,45840706,45842754,45844755,45846803,45848851,45850856,45852904,45854952,45857000,45859048,45861054,45863102,45865150,45867198,45869198,45871246,45873294,45875342,45877214,45879262,45881310,45883358,45885406,45887454,45889452,45891500,45893548,45895596,45897596,45899644,45901586,45903634,45905577,45907457,45909400,45911448,45913496,45915315,45917325,45919373,45921421,45923424,45925472,45927520,45929525,45931573,45933572,45935620,45937668,45939716,45941764,45943812,45945867,45947915,45949963,45951905,45953953,45956001,45958049,45960097,45962145,45964144,45966192,45968198,45970246,45972294,45974342,45976390,45978438,45980310,45982358,45984406,45986145,45988071,45990119,45992167,45994215,45996263,45998311,45999744,46001393,46003441,46005489,46007537,46009489,46011537,46013585,46015633,46017633,46019681,46021493,46023541,46025589,46027571,46029431,46031479,46033356,46035404,46037275,46039323,46041371,46043419,46045376,46047243,46049291,46051339,46053387,46055435,46057422,46059450,46061498,46063458,46065506,46067554,46069558,46071497,46073545,46075528,46077576,46079624,46081672,46083625,46085570,46087572,46089620,46091668,46093716,46095764,46097812,46099860,46101859,46103907,46105955,46108003,46110051,46112052,46114100,46116148,46118196,46120196,46122244,46124292,46125504,46127552,46129600,46131648,46133696,46135699,46137747,46139795,46141843,46143846,46145894,46147942,46149990,46152038,46154086,46156089,46158137,46160185,46162233,46164281,46166329,46168377,46170376,46172424,46174472,46176520,46178568,46180570,46182618,46184666,46186714,46188671,46190719,46192767,46194815,46196863,46198868,46200916,46202964,46205012,46207013,46209061,46211014,46213062,46215110,46217158,46219206,46221254,46222941,46224815,46226863,46228864,46230912,46232903,46234903,46236832,46238880,46240928,46242976,46245024,46246903,46248951,46250999,46253047,46255095,46257143,46259191,46261239,46263287,46265335,46267383,46269431,46271479,46273527,46275575,46277623,46279671,46281554,46283602,46285650,46287522,46289579,46291627,46293675,46295548,46297596,46299644,46301692,46303740,46305788,46307836,46309884,46311755,46313631,46315505,46317553,46319425,46320920,46322968,46324892,46326894,46328942,46330990,46332940,46334988,46337036,46339032,46340972,46343020,46344887,46346935,46348934,46350940,46352942,46354958,46356908,46358856,46360904,46362904,46364952,46367000,46369048,46371001,46373049,46375097,46377100,46379148,46381196,46383244,46385188,46387236,46389284,46391128,46393088,46395136,46397184,46399232,46401280,46403282,46405330,46407378,46409426,46411429,46413477,46415525,46417467,46419515,46421563,46423497,46425545,46427487,46429455,46431503,46433551,46435494,46437542,46439590,46441529,46443535,46445583,46447531,46449530,46451578,46453626,46455581,46457588,46459598,46461646,46463694,46465570,46467618,46469666,46471536,46473584,46475632,46477680,46479728,46481776,46483824,46485872,46487920,46489925,46491973,46494021,46496069,46498117,46500118,46502166,46504214,46506262,46508264,46510312,46512212,46514260,46516308,46518356,46520404,46522404,46524409,46526413,46528423,46530471,46532464,46534296,46536344,46538392,46540440,46542488,46544536,46546584,46548632,46550680,46552728,46554776,46556824,46558872,46560920,46562968,46565016,46567013,46569016,46570967,46573015,46575063,46577111,46579159,46581207,46583255,46585208,46587256,46589304,46591352,46593400,46595448,46597496,46599456,46601504,46603552,46605600,46607600,46609648,46611696,46613744,46615792,46617840,46619888,46621936,46623984,46626032,46628080,46630128,46632176,46634181,46636229,46638277,46640325,46642373,46644421,46646469,46648517,46650565,46652613,46654661,46656709,46658757,46660759,46662807,46664855,46666903,46668951,46670999,46673047,46675095,46677143,46679191,46681239,46683240,46685288,46687336,46689384,46691432,46693480,46695528,46697576,46699624,46701672,46703671,46705719,46707767,46709815,46711863,46713911,46715959,46718007,46720055,46722103,46724106,46726154,46728202,46730250,46732298,46734346,46736394,46738403,46740451,46742499,46744547,46746595,46748643,46750691,46752739,46754741,46756789,46758837,46760885,46762933,46764981,46767029,46769032,46771080,46773128,46775176,46777224,46779272,46781320,46783317,46785365,46787413,46789461,46791429,46793477,46795476,46797417,46799465,46801513,46803561,46805436,46807378,46809426,46811386,46813434,46815482,46817530,46819532,46821580,46823628,46825676,46827724,46829772,46831820,46833819,46835867,46837915,46839963,46842011,46844014,46846062,46848110,46850158,46852206,46854147,46856195,46858134,46860182,46862187,46864235,46866283,46868288,46870336,46872384,46874387,46876435,46878483,46880531,46882528,46884576,46886624,46888492,46890540,46892588,46894636,46896684,46898732,46900780,46902828,46904835,46906883,46908931,46910979,46913027,46915075,46917123,46919171,46921219,46923225,46925232,46927243,46929291,46931243,46933291,46935339,46937287,46939335,46941383,46942923,46944971,46946961,46949009,46951057,46953105,46955161,46957209,46959257,46961305,46963353,46965401,46967449,46969497,46971545,46973593,46975641,46977642,46979690,46981738,46983786,46985834,46987882,46989930,46991978,46994026,46996074,46998078,47000126,47002174,47004222,47006270,47008318,47010366,47012414,47014462,47016510,47017871,47019234,47021282,47023239,47025287,47027059,47029107,47031155,47033203,47035251,47037299,47039347,47041323,47043371,47045419,47047467,47049515,47051563,47053611,47055610,47057658,47059706,47061754,47063802,47065850,47067898,47069946,47071945,47073993,47076041,47078089,47080137,47082185,47084186,47086234,47088282,47090330,47092378,47094383,47096431,47098479,47100527,47102534,47104474,47106522,47108570,47110618,47112666,47114722,47116770,47118818,47120866,47122873,47124921,47126969,47129017,47131065,47133113,47135113,47137161,47139209,47141212,47143260,47145308,47147356,47149404,47151452,47153500,47155370,47157418,47159466,47161514,47163562,47165610,47167469,47169517,47171565,47173613,47175661,47177709,47179757,47181805,47183853,47185725,47187773,47189821,47191869,47193745,47195793,47197841,47199889,47201937,47203985,47206033,47208081,47210129,47212177,47214225,47216273,47218321,47220369,47222293,47224201,47226249,47228297,47230345,47232393,47234397,47236445,47238493,47240541,47242589,47244594,47246642,47248690,47250738,47252786,47254785,47256725,47258668,47260716,47262764,47264588,47266636,47268684,47270732,47272780,47274717,47276592,47278096,47280144,47282192,47284240,47286114,47288162,47290210,47292258,47294306,47296354,47298402,47300450,47302455,47304445,47306496,47308501,47310344,47312330,47314378,47316426,47318298,47320346,47322394,47324442,47326490,47328538,47330586,47332592,47334640,47336688,47338736,47340784,47342832,47344836,47346884,47348757,47350805,47352808,47354856,47356731,47358779,47360827,47362875,47364923,47366971,47369019,47371067,47373115,47375163,47377211,47379259,47381263,47383311,47385359,47387407,47389455,47391503,47393551,47395599,47397647,47399651,47401699,47403747,47405795,47407843,47409891,47411939,47413940,47415988,47417874,47419748,47421796,47423844,47425892,47427940,47429988,47431991,47434039,47436087,47438135,47440183,47442231,47444279,47446327,47448329,47450377,47452425,47454473,47456521,47458569,47460617,47462626,47464674,47466722,47468770,47470818,47472866,47474914,47476921,47478969,47481017,47483065,47485113,47487170,47489218,47491222,47493270,47495323,47497351,47499399,47501447,47503495,47505543,47507591,47509639,47511687,47513735,47515783,47517789,47519837,47521885,47523933,47525981,47528029,47530077,47532125,47534173,47536221,47538269,47540273,47542321,47544369,47546417,47548465,47550513,47552561,47554609,47556657,47558705,47560702,47562750,47564798,47566846,47568894,47570942,47572990,47575038,47577086,47579134,47581182,47583230,47585278,47587326,47589325,47591373,47593421,47595469,47597517,47599565,47601563,47603611,47605659,47607707,47609712,47611610,47613480,47615353,47617401,47619449,47621497,47623496,47625544,47627592,47629640,47631688,47633736,47635784,47637832,47639880,47641880,47643928,47645976,47648024,47650072,47652120,47654119,47656167,47658215,47660263,47662311,47664310,47666358,47668406,47670454,47672502,47674500,47676548,47678596,47680539,47682587,47684635,47686605,47688653,47690701,47692749,47694797,47696845,47698893,47700941,47702989,47705037,47707038,47709086,47711134,47713182,47715230,47717278,47719326,47721374,47723422,47725470,47727466,47729514,47731562,47733610,47735658,47737706,47739754,47741802,47743850,47745898,47747946,47749946,47751994,47754042,47756090,47758138,47760186,47762234,47764239,47766287,47768248,47770296,47772344,47774392,47776440,47778439,47780325,47782373,47784421,47786469,47788517,47790565,47792613,47794661,47796709,47798757,47800805,47802853,47804901,47806956,47809012,47811060,47813114,47815055,47817103,47819151,47821199,47823199,47825247,47827254,47829237,47831285,47833333,47835381,47837429,47839477,47841525,47843573,47845621,47847570,47849618,47851666,47853322,47855354,47857402,47859432,47861483,47863531,47865579,47867627,47869675,47871723,47873771,47875819,47877771,47879819,47881867,47883915,47885963,47888011,47889930,47891580,47893628,47895633,47897576,47899624,47901672,47903720,47905768,47907816,47909791,47911795,47913843,47915850,47917898,47919847,47921895,47923943,47925883,47927931,47929979,47932027,47933881,47935929,47937977,47940025,47942073,47944067,47946115,47948115,47950163,47952217,47954106,47955739,47957787,47959789,47961837,47963885,47965933,47967921,47969969,47972017,47974065,47976113,47978096,47980144,47982192,47984240,47986212,47988260,47990308,47992356,47994404,47996452,47998376,48000356,48002404,48004452,48006500,48008548,48010596,48012644,48014692,48016740,48018796,48020844,48022843,48024891,48026939,48028925,48030973,48032975,48035023,48037071,48039119,48041167,48043215,48045263,48047311,48049359,48051407,48053455,48055503,48057551,48059599,48061647,48063695,48065743,48067791,48069839,48071887,48073891,48075939,48077987,48080035,48082083,48084131,48086179,48088227,48090275,48092323,48094371,48096419,48098467,48100515,48102563,48104611,48106659,48108707,48110755,48112803,48114851,48116899,48118947,48120995,48123043,48125091,48127092,48129140,48131188,48133236,48135284,48137332,48139380,48141428,48143476,48145469,48147517,48149565,48151613,48153661,48155709,48157757,48159805,48161853,48163846,48165894,48167942,48169990,48172038,48174086,48176134,48178182,48180230,48182278,48184326,48186374,48188422,48190470,48192518,48194566,48196614,48198662,48200710,48202758,48204815,48206863,48208863,48210911,48212959,48215007,48217004,48219052,48221053,48223101,48225149,48227146,48229194,48231242,48233290,48235179,48237181,48239229,48241110,48243158,48245206,48247042,48248856,48250904,48252952,48255000,48257048,48259098,48261086,48263134,48265182,48267230,48269278,48271272,48273320,48275368,48277416,48279464,48281520,48283568,48285616,48287621,48289669,48291717,48293765,48295813,48297870,48299918,48301968,48304021,48306011,48308059,48310107,48312155,48314203,48316204,48318252,48320300,48322289,48324337,48326332,48328332,48330389,48332437,48334485,48336439,48338487,48340535,48342583,48344631,48346679,48348684,48350732,48352690,48354739,48356736,48358784,48360832,48362880,48364864,48366912,48368960,48370948,48372996,48374986,48377034,48379035,48381083,48383131,48385179,48387227,48389275,48391313,48393355,48395403,48397451,48399499,48401547,48403595,48405643,48407691,48409739,48411787,48413788,48415836,48417884,48419817,48421865,48423913,48425961,48428009,48430057,48432059,48434107,48436155,48438203,48440203,48442251,48444299,48446347,48448395,48450443,48452491,48454539,48456587,48458635,48460683,48462731,48464779,48466827,48468875,48470870,48472918,48474966,48477014,48479010,48481058,48483106,48485154,48487202,48489250,48491298,48493346,48495394,48497442,48499490,48501538,48503586,48505634,48507682,48509626,48511674,48513722,48515770,48517818,48519866,48521914,48523962,48526010,48528015,48530063,48532111,48534159,48536207,48538198,48540246,48542294,48544342,48546390,48548438,48550486,48552534,48554582,48556573,48558621,48560669,48562717,48564765,48566813,48568861,48570860,48572908,48574956,48577004,48578963,48580957,48583005,48585053,48587101,48589149,48591197,48593245,48595293,48597341,48599389,48601437,48603485,48605533,48607581,48609629,48611677,48613725,48615730,48617778,48619826,48621874,48623922,48625970,48628018,48630066,48632114,48634104,48636152,48638200,48640248,48642296,48644344,48646401,48648449,48650400,48652448,48654496,48656544,48658592,48660640,48662688,48664686,48666734,48668782,48670830,48672878,48674926,48676974,48679022,48681070,48683069,48685117,48687165,48689213,48691261,48693309,48695357,48697405,48699453,48701501,48703549,48705597,48707586,48709634,48711682,48713730,48715778,48717826,48719874,48721922,48723970,48726018,48728066,48730114,48732162,48734210,48736258,48738254,48740302,48742350,48744398,48746446,48748494,48750542,48752590,48754638,48756686,48758734,48760782,48762774,48764649,48766697,48768745,48770741,48772789,48774837,48776885,48778933,48780981,48783029,48785077,48787125,48789173,48791221,48793269,48795317,48797365,48799413,48801461,48803509,48805506,48807554,48809602,48811650,48813698,48815746,48817794,48819794,48821842,48823890,48825938,48827931,48829979,48831976,48834024,48836072,48838062,48840110,48842158,48844210,48846258,48848306,48850301,48852349,48854397,48856445,48858501,48860498,48862546,48864594,48866642,48868690,48870738,48872786,48874834,48876882,48878930,48880978,48883026,48885074,48887122,48889170,48891218,48893266,48895314,48897324,48899372,48901420,48903468,48905516,48907564,48909612,48911660,48913708,48915756,48917804,48919852,48921900,48923948,48925996,48927676,48928711,48929813,48930981,48932143,48934050,48934896,48935586,48936714,48938762,48940810,48942038,48942072,48942106,48942140,48942174,48942208,48942242,48942762,48943114,48943605,48944128,48944737,48945472,48946112,48946618,48947233,48947818,48948455,48949004,48949680,48950339,48950954,48951627,48952289,48952973,48953734,48954552,48955290,48956068,48956754,48957837,48958885,48959816,48960729,48961644,48962590,48963554,48964500,48965505,48966520,48967463,48968422,48969237,48970186,48971514,48972698,48974028,48975159,48976491,48977714,48978888,48980031,48981210,48982377,48983522,48984678,48985829,48986976,48988105,48989046,48990518,48992389,48994272,48996168,48998143,48999927,49001819,49003867,49005915,49007963,49010011,49012059,49014107,49016155,49018203,49020251,49022299,49024347,49026395,49028443,49030491,49032539,49034587,49036635,49038683,49040739,49042715,49044763,49046811,49048859,49050907,49052955,49055003,49057051,49059099,49061147,49063195,49065243,49067291,49069339,49071387,49073435,49075483,49077531,49079579,49081556,49083604,49085652,49087700,49089748,49091796,49093844,49095892,49097940,49099988,49102036,49104084,49106132,49108180,49110228,49112276,49114324,49116372,49118420,49120468,49122447,49124495,49126543,49128591,49130639,49132687,49134735,49136783,49138831,49140879,49142927,49144975,49147023,49149071,49151119,49153167,49155215,49157263,49159311,49161359,49163343,49165391,49167439,49169487,49171535,49173583,49175631,49177679,49179727,49181775,49183823,49185871,49187919,49189967,49192015,49194063,49196111,49198159,49200207,49202185,49204233,49206281,49208329,49210377,49212425,49214473,49216521,49218569,49220617,49222665,49224713,49226761,49228809,49230857,49232905,49234953,49237001,49239049,49241097,49243070,49245118,49247166,49249214,49251262,49253310,49255358,49257406,49259454,49261502,49263550,49265598,49267646,49269694,49271742,49273790,49275838,49277886,49279934,49281914,49283962,49286010,49288058,49290106,49292154,49294202,49296250,49298298,49300346,49302394,49304442,49306490,49308538,49310586,49312634,49314682,49316730,49318778,49320826,49322803,49324851,49326899,49328876,49330924,49332906,49334954,49336515,49337846,49339335,49341007,49342175,49343417,49345004,49346381,49347544,49348791,49349919,49350737,49351626,49352426,49354218,49356196,49358174,49360155,49362203,49364178,49366155,49368203,49370183,49372231,49374204,49376252,49378228,49380276,49382250,49384298,49386280,49388328,49390376,49392354,49394402,49396377,49398425,49400405,49402453,49404432,49406480,49408458,49410436,49412484,49414532,49416510,49418558,49420537,49422585,49424633,49426605,49428584,49430632,49432617,49434596,49436644,49438692,49440667,49442715,49444763,49446739,49448716,49450764,49452738,49454786,49456765,49458740,49460630,49462678,49464655,49466703,49468676,49470724,49472696,49474671,49476654,49478702,49480750,49482772,49484806,49486854,49488902,49490869,49492843,49494814,49496862,49498910,49500886,49502869,49504917,49506965,49508938,49510986,49512964,49515012,49517060,49519108,49521081,49523129,49525177,49527154,49529202,49531183,49533231,49535279,49537327,49539309,49541357,49543340,49545388,49547436,49549484,49551532,49553580,49555557,49557605,49559653,49561701,49563749,49565797,49567845,49569893,49571870,49573855,49575903,49577878,49579859,49581907,49583880,49585854,49587827,49589804,49591852,49593827,49595802,49597780,49599754,49601734,49603782,49605762,49607810,49609791,49611839,49613811,49615784,49617832,49619811,49621859,49623831,49625808,49627786,49629834,49631882,49633930,49635978,49637952,49640000,49641975,49644023,49646001,49648049,49650021,49652069,49654045,49656019,49657998,49660046,49662018,49663997,49666045,49668093,49670141,49672118,49674166,49676214,49678192,49680240,49682288,49684261,49686309,49688357,49690333,49692381,49694358,49696338,49698386,49700434,49702410,49704458,49706506,49708554,49710534,49712582,49714630,49716606,49718654,49720637,49722685,49724661,49726644,49728692,49730665,49732713,49734690,49736738,49738717,49740765,49742813,49744788,49746762,49748810,49750788,49752763,49754735,49756783,49758758,49760739,49762722,49764703,49766685,49768733,49770712,49772760,49774737,49776715,49778763,49780738,49782721,49784769,49786817,49788865,49790913,49792890,49794938,49796986,49799034,49801082,49803130,49805108,49807156,49809204,49811252,49813300,49815348,49817331,49819379,49821427,49823475,49825523,49827571,49829619,49831595,49833643,49835691,49837739,49839787,49841764,49843812,49845860,49847908,49849956,49852004,49854052,49856026,49858074,49860122,49862170,49864218,49866266,49868232,49870280,49872328,49874376,49876424,49877965,49880013,49882061,49884109,49886157,49888205,49890250,49891720,49893700,49895748,49897724,49899707,49901755,49903734,49905782,49907830,49909878,49911857,49913905,49915953,49918001,49919983,49922031,49924079,49926127,49928175,49930223,49932203,49934251,49936299,49938347,49940395,49942443,49944491,49946476,49948524,49950572,49952620,49954668,49956716,49958764,49960812,49962860,49964836,49966884,49968932,49970980,49973028,49975076,49977124,49979172,49981150,49983198,49985246,49987294,49989342,49991390,49993438,49995486,49997534,49999512,50001560,50003608,50005656,50007704,50009752,50011800,50013777,50015825,50017873,50019853,50021901,50023949,50025997,50027973,50030021,50032069,50034117,50036096,50038144,50040192,50042240,50044288,50046266,50048314,50050362,50052410,50054458,50056506,50058481,50060529,50062577,50064625,50066673,50068653,50070701,50072749,50074797,50076845,50078893,50080941,50082914,50084962,50087010,50088989,50091037,50093085,50095133,50097181,50099229,50101277,50103325,50105373,50107421,50109477,50111222,50113201,50115184,50117165,50119213,50121101,50123149,50125124,50127103,50129078,50131061,50133109,50135157,50137205,50139253,50141301,50143349,50145397,50147445,50149451,50151502,50153550,50155598,50157646,50159694,50161742,50163790,50165838,50167886,50169862,50171910,50173958,50176006,50178054,50180102,50182150,50184198,50186246,50188225,50190273,50192321,50194369,50196417,50198465,50200513,50202561,50204609,50206657,50208642,50210690,50212738,50214786,50216834,50218882,50220857,50222905,50224953,50227001,50229049,50231097,50233145,50235123,50237171,50239219,50241267,50243315,50245363,50247411,50249459,50251433,50253481,50255529,50257577,50259625,50261673,50263721,50265692,50267740,50269788,50271836,50273884,50275932,50277980,50280028,50282076,50284061,50286109,50288157,50290205,50292253,50294301,50296349,50298328,50300376,50302424,50304472,50306520,50308568,50310616,50312594,50314642,50316690,50318738,50320786,50322834,50324811,50326859,50328907,50330955,50333003,50335051,50337099,50339078,50341126,50343174,50345222,50347270,50349318,50351366,50353414,50355392,50357440,50359421,50361400,50363376,50365264,50367312,50369283,50371260,50373233,50375116,50377164,50379138,50381113,50383089,50385072,50387120,50389097,50391078,50393126,50395018,50397066,50398952,50400842,50402819,50404797,50406776,50408754,50410733,50412714,50414693,50416673,50418721,50420694,50422584,50424563,50426542,50428522,50430570,50432544,50434523,50436503,50438551,50440526,50442574,50444548,50446527,50448575,50450555,50452603,50454578,50456626,50458674,50460722,50462770,50464818,50466866,50468914,50470886,50472934,50474982,50476957,50479005,50481053,50483032,50485080,50487128,50489176,50491224,50493199,50495247,50497295,50499273,50501321,50503369,50505341,50507389,50509364,50511343,50513391,50515439,50517487,50519535,50521583,50523631,50525608,50527656,50529704,50531752,50533800,50535848,50537896,50539873,50541921,50543969,50546017,50547994,50550042,50552019,50554067,50556115,50558163,50560211,50562259,50564235,50566283,50568331,50570379,50572427,50574475,50576523,50578496,50580544,50582592,50584640,50586617,50588665,50590713,50592761,50594735,50596783,50598831,50600879,50602927,50604975,50607023,50609071,50611119,50613093,50615141,50617189,50619237,50621285,50623333,50625381,50627359,50629407,50631455,50633503,50635551,50637599,50639647,50641625,50643673,50645721,50647769,50649817,50651865,50653913,50655961,50657951,50659999,50662047,50664095,50666143,50668191,50670239,50672287,50674335,50676310,50678358,50680406,50682454,50684502,50686550,50688598,50690646,50692624,50694672,50696637,50698685,50700733,50702710,50704693,50706741,50708789,50710837,50712885,50714933,50716981,50719029,50721077,50723125,50725105,50727153,50729201,50731249,50733297,50735273,50737321,50739369,50741417,50743465,50745513,50747561,50749609,50751657,50753705,50755682,50757730,50759778,50761826,50763874,50765851,50767899,50769947,50771995,50774043,50776091,50778139,50780187,50782235,50784213,50786261,50788309,50790357,50792405,50794453,50796501,50798479,50800527,50802575,50804623,50806671,50808719,50810697,50812745,50814793,50816841,50818889,50820937,50822985,50824962,50827010,50829058,50831106,50833154,50835202,50837250,50839298,50841279,50843327,50845375,50847423,50849471,50851519,50853491,50855539,50857587,50859635,50861683,50863731,50865779,50867827,50869804,50871852,50873900,50875948,50877996,50880044,50882025,50884073,50886121,50888097,50890145,50892193,50894241,50896289,50898337,50900385,50902433,50904416,50906464,50908512,50910485,50912533,50914510,50916485,50918460,50920438,50922419,50924402,50926450,50928431,50930407,50932455,50934428,50936405,50938294,50940269,50942259,50944307,50946355,50948403,50950451,50952430,50954478,50956526,50958499,50960547,50962511,50964493,50966541,50968589,50970637,50972616,50974664,50976712,50978680,50980728,50982776,50984755,50986803,50988851,50990821,50992869,50994843,50996891,50998874,51000922,51002970,51005018,51007066,51009041,51011089,51013137,51015112,51017160,51019138,51021186,51023234,51025210,51027258,51029306,51031354,51033402,51035450,51037503,51039505,51041553,51043601,51045649,51047697,51049604,51051463,51053281,51055329,51057279,51059327,51061372,51063384,51065349,51067397,51069374,51071422,51073470,51075518,51077494,51079542,51081590,51083638,51085686,51087734,51089708,51091756,51093691,51095739,51097787,51099835,51101883,51103931,51105979,51108027,51110005,51112053,51114101,51116149,51118197,51120175,51122223,51124271,51126319,51128367,51130347,51132395,51134443,51136491,51138539,51140587,51142562,51144610,51146658,51148706,51150687,51152735,51154783,51156831,51158879,51160927,51162975,51165023,51167071,51169044,51171092,51173140,51175188,51177236,51179217,51181200,51183183,51185163,51187138,51189186,51191216,51193244,51195220,51197268,51199245,51201219,51203267,51205150,51207198,51209177,51211225,51213199,51215247,51217295,51219253,51221301,51223349,51225319,51227367,51229339,51231387,51233358,51235406,51237348,51239329,51241377,51243425,51245398,51247369,51249417,51251394,51253369,51255344,51257392,51259364,51261336,51263326,51265374,51267349,51269397,51271445,51273493,51275476,51277524,51279572,51281620,51283668,51285716,51287764,51289651,51291699,51293747,51295716,51297624,51299672,51301646,51303623,51305671,51307647,51309534,51311503,51313551,51315532,51317509,51319557,51321533,51323513,51325561,51327536,51329584,51331561,51333537,51335582,51337594,51339568,51341540,51343517,51345565,51347541,51349589,51351637,51353618,51355666,51357714,51359762,51361810,51363716,51365764,51367812,51369860,51371908,51373781,51375829,51377877,51379925,51381973,51384021,51386000,51388048,51390021,51392069,51394117,51396082,51398130,51400113,51402161,51404209,51406257,51408232,51410280,51412232,51414279,51416245,51418221,51420269,51422135,51424183,51426231,51428204,51430172,51432220,51434198,51436246,51438294,51440342,51442319,51444367,51446340,51448323,51450371,51452419,51454331,51456379,51458427,51460381,51462429,51464477,51466462,51468510,51470558,51472606,51474654,51476594,51478642,51480690,51482738,51484786,51486834,51488784,51490832,51492880,51494928,51496854,51498902,51500950,51502998,51504926,51506974,51509022,51511070,51513118,51515166,51517214,51519262,51521310,51523283,51525331,51527379,51529427,51531475,51533523,51535571,51537619,51539667,51541715,51543693,51545670,51547647,51549631,51551610,51553582,51555630,51557678,51559726,51561774,51563822,51565803,51567851,51569899,51571947,51573995,51576043,51578091,51580139,51582116,51584164,51586143,51588191,51590239,51592287,51594265,51596228,51598276,51600324,51602372,51604420,51606468,51608516,51610564,51612612,51614660,51616708,51618684,51620732,51622780,51624828,51626808,51628856,51630904,51632881,51634929,51636977,51639025,51641073,51643121,51645169,51647217,51649265,51651313,51653291,51655339,51657387,51659435,51661483,51663531,51665579,51667558,51669606,51671654,51673702,51675750,51677798,51679846,51681894,51683877,51685925,51687973,51690021,51692069,51694117,51696165,51698213,51700261,51702309,51704357,51706296,51708344,51710392,51712440,51714488,51716478,51718526,51720503,51722551,51724599,51726647,51728695,51730743,51732791,51734839,51736887,51738670,51740718,51742766,51744814,51746862,51748910,51750958,51753006,51755054,51757102,51759150,51761198,51763246,51765294,51767342,51769390,51771438,51773486,51775534,51777582,51779612,51781640,51783688,51785736,51787784,51789832,51791880,51793928,51795976,51798024,51800072,51802120,51804168,51806216,51808149,51810197,51812178,51814226,51816216,51818264,51820312,51822360,51824408,51826456,51828324,51830300,51832348,51834396,51836444,51838420,51840468,51842516,51844564,51846612,51848587,51850635,51852683,51854731,51856779,51858827,51860875,51862923,51864971,51867019,51869067,51871115,51873080,51875128,51877176,51879224,51881202,51883250,51885298,51887346,51889394,51891369,51893417,51895465,51897446,51899494,51900780,51901706,51902791,51904201,51905433,51907037,51909085,51910615,51911757,51913007,51914310,51915209,51916365,51917524,51918593,51919890,51921178,51922428,51923716,51924989,51926278,51927665,51929097,51930504,51931920],\"sizes\":[2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1449,1305,1430,1092,930,784,913,960,950,956,754,1043,749,935,978,905,864,836,908,841,768,879,840,957,1242,894,980,968,1162,1091,993,1335,1124,846,919,1315,1316,1262,1458,531,529,489,578,554,938,956,960,680,552,534,819,525,732,994,792,707,664,775,648,833,870,1092,1147,750,640,565,522,567,644,735,695,866,597,702,873,974,1173,813,773,1054,1012,729,912,931,907,778,923,1010,978,834,661,395,726,893,934,401,666,976,621,661,619,645,891,782,777,628,642,576,1028,2048,1529,855,1039,1283,1254,673,1425,1047,1160,968,1070,1228,1141,1649,1536,1572,1702,1173,49,45,95,45,102,49,169,251,399,472,598,649,549,661,801,778,1241,1438,1518,1451,1409,1716,1563,1565,1649,1632,1716,1655,1716,1816,1677,1634,1597,1714,1654,1439,1568,1420,1311,890,895,740,600,582,609,588,589,541,346,377,242,125,80,45,48,49,652,1677,45,45,48,49,45,38,45,48,49,45,68,310,1047,1421,1324,1448,1395,1384,1194,1039,1118,825,631,839,847,769,872,828,965,992,851,810,719,740,958,871,821,780,769,824,755,704,558,421,168,44,45,48,49,45,44,45,48,47,45,44,148,2048,1464,1406,1402,1304,1302,1324,1313,1294,1351,1278,1341,1269,1257,1296,1155,1030,1039,968,939,905,803,839,1040,1117,1139,1350,1448,1684,1618,1547,1613,1582,1396,1399,1098,1220,1306,1375,1512,1418,1324,1000,997,1116,1153,1226,1243,1237,1247,1232,1279,1312,1405,1274,1314,1286,1346,1956,633,40,45,48,49,50,284,625,857,1009,1182,1564,1699,1745,1791,1709,1712,1719,1755,1764,1830,1839,1793,1676,1416,1388,1288,1458,1785,1837,1847,1913,1889,1937,1933,1853,1848,1881,1867,1786,1780,1725,1678,1815,1894,1522,1436,1357,1171,544,122,44,45,50,47,45,44,766,820,1288,1145,1270,848,820,1119,905,872,1043,1924,1629,1422,1446,1500,1493,1536,1533,1494,1523,1499,1601,1766,1841,1946,1979,2008,1992,2004,2012,2004,1974,1898,1794,1794,1889,1932,1857,1985,2019,1922,1846,1816,1801,1729,1736,1724,1819,1835,1906,1959,1987,2002,2012,1985,1858,1639,1533,1494,1525,1509,1502,1516,1517,1469,1431,1438,1446,1837,1741,1275,1296,1301,1292,1255,1284,1368,1265,1228,1310,1208,1271,1389,1408,1435,1417,1454,1444,1428,1524,1512,1514,1548,1547,1540,1623,1641,1584,1608,1563,1601,1542,1488,1531,1664,1718,1562,1727,1586,1398,1368,1416,1270,1268,1237,1302,1226,1179,1156,1209,1156,1188,1185,1241,1291,1280,1581,1824,1073,1105,1162,1089,970,998,1084,1080,1105,1201,1062,1269,1171,1365,1454,1509,1521,1630,1549,1598,1613,1506,1371,1564,1603,1521,1568,1486,1348,1458,1237,1333,1401,1257,1369,1470,1481,1530,1508,1513,1414,1285,1230,1029,1013,1021,1091,1149,1205,1055,863,1046,1027,909,937,989,1190,2048,1474,1574,1576,1618,1591,1625,1680,1575,1607,1622,1669,1640,1400,1548,1618,1557,1633,1758,1600,1553,1624,1495,1473,1440,1537,1587,1447,1488,1542,1582,1566,1555,1526,1609,1583,1646,1652,1715,1589,1568,1612,1665,1525,1496,1241,1310,1581,1525,1482,1446,1599,1637,1694,1715,1547,1495,1564,2024,1247,980,1086,1001,1133,1038,1089,1193,1019,1042,1111,1175,1193,1071,1109,1068,1144,1187,1220,1237,1208,1297,1359,1291,1169,1107,1034,1057,1001,1009,1005,1059,1036,899,962,931,926,1041,1031,1043,1015,1016,1042,1017,933,991,955,1090,1049,1125,1120,1131,1115,1095,1068,832,876,1622,1736,1290,1295,1281,1279,1265,1303,1355,1264,1211,1307,1213,1170,1304,1344,1340,1325,1342,1334,1396,1494,1627,1614,1601,1391,1305,1409,1589,1588,1736,1663,1628,1425,1291,1348,1421,1487,1456,1496,1455,1394,1362,1425,1268,1278,1230,1284,1233,1164,1171,1207,1125,1203,1206,1236,1312,1263,1578,1952,1575,1597,1582,1611,1567,1555,1567,1613,1554,1559,1614,1756,1742,1805,1816,1754,1496,1702,1663,1786,1876,1817,1735,1918,1818,1796,1916,1825,1775,1771,1713,1725,1776,1678,1669,1736,1666,1871,1809,1803,1316,1362,1405,1246,1400,1512,1490,1480,1526,1529,1491,1548,1548,1477,1449,1483,1592,2036,771,818,769,897,943,730,760,910,788,873,820,835,961,1163,1254,1210,1365,1235,1341,1516,1541,1525,1558,1679,1582,1653,1579,1589,1642,1625,1597,1480,1485,1500,1550,1570,1529,1457,1495,1427,1366,1319,1187,1196,1204,1204,1104,1032,1016,1047,1008,977,972,1030,1005,869,790,1910,1750,1848,1893,1861,1824,1804,1823,1868,1772,1732,1597,1544,1408,1843,1894,1924,1796,1884,1869,1871,1907,1932,1806,1704,1616,1548,1411,1789,1997,1843,1823,1911,1916,1870,1753,1747,1535,1445,1543,1619,1614,1741,1895,1706,2013,1793,1820,1990,1664,1949,2003,1450,1400,1616,1518,1470,1881,1723,1270,1591,1594,1526,1544,1933,1432,1435,1679,1541,1557,1885,1848,1673,1673,1743,1769,1738,1752,1755,1776,1828,1812,1860,1849,1765,1754,1801,1788,1827,1826,1794,1878,1824,1773,1750,1751,1754,1764,1694,1745,1809,1709,1779,1741,1849,1767,1783,1749,1740,1728,1707,1723,1755,1720,1719,1650,1764,1864,1890,1841,1827,1812,1890,1905,1879,1801,1674,1616,1803,2048,1919,1916,1903,1950,1904,1895,1915,1923,1862,1886,1922,1917,1809,1806,1753,1749,1761,1839,1801,1828,1767,1865,1851,1822,1810,1764,1735,1667,1589,1560,1687,1758,1816,1740,1766,1715,1673,1728,1702,1738,1781,1783,1806,1740,1833,1918,1898,1958,1833,1786,1849,1932,1917,1924,1893,1911,1900,2048,1962,1946,2005,2004,1987,2014,1982,1952,1924,1906,1987,2000,1987,1941,1895,1952,1981,1966,1971,2001,1997,2025,1904,1935,1912,1901,1901,1818,1772,1740,1816,1924,1934,1937,1956,1972,1980,1981,1929,1932,1989,1931,1812,1861,1865,1869,1831,1830,1803,1830,1855,1821,1714,1653,1557,1492,1450,769,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1425,1417,1390,1551,1492,1541,1416,1474,1250,1220,1395,1490,1306,1194,1357,1476,1542,1440,1471,1414,1399,1375,1525,1470,1450,1484,1503,1497,1451,1557,1504,1535,1517,1478,1602,1499,1542,1552,1466,1496,1563,1570,1379,1454,1367,1658,1647,1663,1640,1573,1550,1655,1673,1562,1557,1647,1517,2014,1270,1070,1169,1102,1071,1010,1055,1104,1060,1147,1102,1188,1225,1365,1349,1499,1523,1588,1558,1537,1633,1527,1398,1497,1620,1527,1534,1514,1397,1487,1322,1344,1342,1322,1278,1442,1432,1544,1528,1474,1490,1299,1235,1143,999,1028,1018,1138,1167,1176,947,940,1021,948,941,1003,1042,1760,1510,1045,1156,1128,1089,978,1046,1079,1053,1123,1192,1310,1270,1286,1560,1548,1428,1569,1478,1486,1632,1577,1453,1517,1603,1614,1429,1533,1510,1627,1613,1734,1828,1904,1786,1618,1803,1744,1671,1547,1650,1280,1337,1295,889,1136,1111,1152,1154,1170,967,881,1038,987,893,938,1026,1539,1917,1531,1561,1520,1566,1520,1463,1507,1537,1485,1486,1565,1680,1731,1800,1774,1709,1498,1673,1661,1732,1886,1737,1671,1854,1748,1748,1945,1620,1697,1788,1700,1683,1775,1528,1568,1687,1655,1868,1743,1758,1274,1366,1383,1205,1376,1434,1504,1462,1446,1464,1474,1478,1459,1407,1407,1437,1583,2048,1677,1662,1660,1761,1781,1744,1726,1789,1787,1833,1804,1919,1742,1743,1795,1775,1839,1838,1815,1825,1865,1804,1771,1783,1766,1745,1771,1693,1796,1777,1752,1743,1801,1818,1756,1771,1757,1704,1739,1731,1749,1726,1721,1698,1651,1849,1871,1870,1855,1812,1808,1899,1871,1835,1729,1657,1543,784,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1323,1340,1327,1460,1411,1537,1528,1407,1448,1466,1484,1441,1426,1403,1362,1172,717,994,1198,1485,1630,1750,1837,1841,1889,1872,1788,1737,1411,1777,1741,1850,1869,1841,1820,1817,1773,1753,1483,1266,978,1118,1326,1237,1199,1406,1192,1129,1218,1312,1472,1451,1476,1482,1392,1369,1396,1928,1640,1434,1495,1512,1537,1443,1537,1492,1430,1490,1586,1630,1425,1557,1686,1671,1687,1794,1760,1651,1739,1577,1571,1557,1518,1604,1616,1591,1621,1614,1599,1586,1543,1575,1604,1674,1590,1656,1570,1552,1589,1668,1612,1595,1387,1162,1439,1520,1459,1360,1464,1520,1575,1600,1514,1396,1462,1798,1787,1409,1375,1385,1445,1379,1419,1488,1376,1397,1443,1524,1220,1328,1555,1529,1509,1635,1636,1609,1617,1534,1474,1455,1531,1533,1568,1438,1473,1528,1569,1487,1477,1527,1526,1555,1577,1606,1619,1505,1526,1563,1504,1397,1302,923,1164,1364,1390,1284,1363,1438,1456,1537,1499,1345,1341,1552,2027,1580,1656,1677,1746,1758,1716,1778,1662,1688,1734,1827,1674,1448,1642,1658,1630,1722,1812,1677,1640,1681,1554,1553,1505,1654,1682,1514,1547,1560,1635,1666,1622,1639,1707,1663,1734,1739,1781,1646,1599,1679,1661,1570,1524,1263,1501,1727,1716,1579,1613,1710,1772,1812,1840,1648,1614,1678,2056,683,592,655,664,641,686,800,997,1049,1055,851,1160,1494,1539,1610,1569,1127,1574,1523,1697,1766,1659,1541,1728,1631,1704,1711,1620,1546,1810,1683,1726,1740,1710,1639,1671,1702,1719,1784,1763,1521,1414,1389,1235,1197,1378,1388,1250,1220,1294,1332,1465,1544,1553,1535,1546,1629,1007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2045,2008,2029,2050,2055,2057,2057,2049,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2049,2020,2019,2049,2052,2048,2048,2057,2046,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2056,2038,2005,2044,2051,2048,2048,2057,2051,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2057,2034,2008,2037,2053,2057,2048,2048,2049,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1607,1364,1413,1213,1146,1106,1013,1172,1080,1208,1118,1234,1177,1056,1131,1134,1138,1079,1161,1086,1170,1196,1173,976,917,815,953,949,641,1016,852,857,786,350,350,354,1330,1320,1514,1450,1485,1383,883,1071,881,897,862,969,1369,1395,1279,1179,1142,944,1127,1155,1089,1102,1073,1169,1287,1095,1141,1010,1203,1127,1212,1139,1128,1145,980,922,933,879,971,939,570,961,782,788,615,356,366,615,1211,1317,1491,1421,1464,1050,1121,1139,903,936,857,1615,1338,48,49,45,59,120,133,198,189,165,263,226,278,637,964,1016,996,1194,1481,1595,1569,1662,1612,1777,1755,1752,1601,1566,1572,1642,1691,1683,1760,1777,1628,1655,1628,1632,1649,1550,1033,919,971,783,554,269,192,140,110,130,173,117,66,53,38,45,48,497,1890,153,259,176,205,215,405,402,395,409,439,263,354,689,811,998,945,1102,1286,1585,1702,1795,1760,1774,1853,1809,1747,1689,1682,1691,1863,1821,1889,1860,1812,1797,1921,1849,1857,1891,1298,980,893,874,706,540,386,335,312,420,371,435,151,179,137,211,198,107,2025,1331,1316,1299,1205,1324,1402,1429,1312,1386,1337,1403,1463,1410,1392,1449,1498,1449,1459,1464,1542,1375,1382,1396,1410,1277,1115,1267,1393,1299,1364,1337,1392,1250,1397,1434,1326,1280,1394,1525,1462,1397,1513,1282,1381,1410,1441,1420,1436,1378,1309,1375,1284,1479,1347,1190,1241,1221,1341,983,1033,1446,1483,44,45,48,319,1003,1047,1030,1340,1494,1506,1340,1807,1798,1756,1685,1679,1226,952,1467,1705,1743,1852,1705,1827,1826,1766,1634,1654,1687,1800,1882,1843,1886,1848,1748,1874,1889,1885,1842,1911,1582,1591,1499,1712,1558,1309,1252,1354,1154,1148,1116,697,864,47,45,44,316,685,1096,775,703,1078,1355,1362,1219,990,1108,958,695,682,712,683,690,893,910,894,898,922,953,836,911,803,925,909,983,884,975,595,820,657,764,718,805,908,836,972,669,810,762,819,846,848,807,987,883,833,856,842,809,1050,814,835,1693,1506,1515,1447,1678,1597,1527,1616,1546,1504,1520,1629,1610,1556,1519,1661,1316,1489,1582,1609,1582,1444,1565,1468,1681,1853,1458,1464,1254,1102,1237,1357,1309,1047,1141,1210,1099,1181,1204,1299,1213,1046,787,847,1143,1630,1543,1412,1470,1354,1293,1386,1162,1284,1367,1312,1201,1060,915,826,637,1261,1773,1533,1448,1527,1375,1285,1386,1121,1271,1325,1315,1138,825,835,633,938,1912,1503,1459,1478,1413,1300,1324,1295,1183,1333,1376,1296,1149,957,937,831,674,1332,1743,1434,1449,1447,1456,1531,1510,1300,1158,878,828,761,909,854,912,1871,1452,1479,1415,1413,1267,1333,1241,1164,1348,1374,1301,1142,897,937,685,799,1851,1549,1484,1364,1104,1294,1485,1413,1212,932,1039,1492,1760,1585,1579,1310,1215,1318,1489,1355,1183,1104,1275,1256,1367,885,1431,1611,1839,1794,1821,1660,1479,1493,1877,1909,1736,1791,1975,1728,1122,1403,1277,1343,1446,1625,1808,1192,1441,1309,1340,1400,1707,1223,816,925,1450,1611,924,882,1054,1856,1223,1476,1740,1530,1591,1756,1717,1718,1228,1568,1734,1514,1676,1891,1915,1346,1352,1667,1624,1566,1816,1917,1911,1273,1396,1713,1594,1604,1875,1907,1853,1236,1503,1748,1637,1532,1815,1897,1835,1340,1462,1703,1616,1513,1793,1857,1813,1267,1488,1725,1527,1591,1747,1795,1605,1243,1587,1698,1507,1677,1775,1864,1270,1396,1698,1544,1562,1761,1715,1838,1202,1551,1747,1499,1655,1841,1762,1573,1655,1565,1572,1515,1611,1571,1691,1455,1606,1621,1507,1544,1551,1601,1541,1438,1460,1434,1536,1428,1410,1127,1096,1234,1391,1229,1175,1332,1670,1493,1297,1280,1428,1430,1315,1212,1395,1106,1452,1454,45,46,48,49,47,166,480,738,752,873,955,963,1009,1017,957,1211,1122,1318,1333,1149,1331,1273,1191,1160,1041,1087,1203,1020,1209,1117,1021,896,921,710,680,751,548,202,49,45,45,45,48,1760,588,730,863,1181,1348,1168,949,1056,976,1025,693,794,759,1020,957,1172,1142,1136,1233,1277,1198,1240,1358,1354,1387,1347,1306,1307,1135,920,730,502,520,585,809,932,796,824,944,1041,950,892,1043,1246,1037,1017,978,1075,1197,975,1308,709,1058,1181,788,1191,964,984,1464,1419,1229,1333,1320,1512,1422,1517,1655,1752,1805,1822,1832,1739,1751,1711,1598,1746,1743,1637,1627,1626,1671,1501,1519,1682,1687,1541,1587,1597,1588,1526,1376,1156,1071,1491,1563,1563,1585,1573,1393,1357,1425,1530,1790,710,816,1069,1084,1174,1334,1407,1302,1310,1533,1413,1194,717,983,1219,1337,1388,1238,1214,1189,1169,1177,1211,1216,1272,1198,1338,1398,1227,1283,1362,1323,1349,1288,1261,1212,1209,961,992,1216,1134,1297,1204,1280,918,1277,912,1029,1570,1809,1583,776,869,1426,1444,812,791,879,1078,1089,1010,1045,1043,1240,1360,1633,1647,1677,1596,1415,1399,1425,1570,1690,1604,1693,1635,1623,1573,1548,1499,1476,1733,1840,1870,1855,1819,1729,1711,1363,1366,1367,1386,1284,1222,915,591,1211,1044,1264,1023,969,1112,803,1225,1046,901,834,1102,857,1258,1383,1167,638,573,663,554,574,599,562,1127,1248,820,970,823,795,813,807,789,960,881,911,973,829,904,903,942,1031,945,910,1003,700,664,587,774,746,838,905,880,818,861,787,837,869,1015,777,1609,1816,1812,1813,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2048,2048,2048,2048,2048,2048,2057,1900,1837,1719,1741,1724,1732,1748,1918,1895,2048,357,47,45,44,45,50,47,45,44,45,50,47,216,754,1114,1417,1385,1540,1573,1421,1515,1573,1629,1675,1715,1750,1750,1662,1722,1626,1645,1637,1646,1588,1601,1400,1320,1293,1112,1143,825,471,331,207,132,49,48,45,46,48,49,47,45,45,48,49,46,1470,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,1372,1198,1183,1221,1268,1119,1169,1126,1257,1228,1245,1289,1187,1367,1219,1485,1707,1565,1521,1376,1375,1515,1581,1434,1362,1620,1636,1555,1491,1467,1590,1403,1358,1366,1485,1460,1483,1229,1209,1343,1243,1258,1137,1057,855,1069,1057,1116,958,794,702,774,810,632,627,662,586,1929,1622,1146,1077,1121,1008,1187,1337,1338,1128,1212,1204,1256,1317,1282,1595,1525,1778,1797,1707,1749,1765,1598,1431,1552,1455,1401,1591,1585,1465,1460,1626,1576,1656,1497,1673,1540,1411,1273,1384,1205,1112,1125,1011,999,1023,871,1009,987,1016,1055,948,844,662,538,457,423,368,1471,1306,695,693,616,653,693,694,658,657,643,657,706,680,1254,1579,1519,1552,1579,1670,1609,1547,1488,1407,1020,828,1336,1464,1464,1562,1502,1461,1514,1418,1298,1108,1007,1201,1409,1524,1463,1440,1481,1387,1210,923,706,699,656,660,657,726,660,667,702,681,687,682,1248,1643,702,666,679,689,656,679,663,681,704,679,675,660,884,1465,1618,1606,1653,1699,1679,1556,1485,1431,1383,1347,1363,1198,1332,1332,1329,1257,1264,1276,1178,1682,1687,1626,1606,1662,1591,1523,1373,1095,989,770,713,652,649,720,644,665,664,670,683,672,643,623,902,2032,767,395,522,639,640,752,910,836,970,1065,1047,1166,1354,1497,1529,1573,1576,1564,1504,1457,1431,1485,1434,1435,1489,1459,1444,1432,1377,1219,1410,1447,1433,1588,1616,1551,1448,1323,1087,1166,1290,1231,1242,1225,1135,1129,1032,954,1003,1039,1006,985,868,846,679,571,408,1314,1178,316,523,574,654,696,790,906,921,1022,1022,1132,1242,1351,1530,1636,1683,1731,1654,1609,1489,1433,1362,1294,1325,1367,1391,1450,1424,1492,1505,1413,1431,1427,1481,1435,1548,1692,1634,1515,1319,1302,1221,1244,1224,1167,1245,1205,1093,1071,1015,972,871,846,703,646,499,994,1655,355,482,574,628,699,823,880,897,1053,1058,1048,1390,1536,1492,1466,1551,1523,1484,1299,1279,1329,1408,1323,1393,1377,1420,1370,1261,1371,1361,1370,1334,1331,1333,1297,1379,1526,1560,1623,1412,1481,1410,1373,1203,1197,1256,1226,1109,1079,1035,986,955,882,755,685,538,463,2048,1963,2048,1961,2006,2009,2046,1965,2048,2048,1962,1794,1818,1690,1472,1704,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1931,1059,926,751,893,993,926,890,774,974,743,974,808,875,830,813,1004,785,800,880,781,1048,1073,896,984,965,1161,1086,978,1278,1112,711,585,1493,1214,1277,1270,910,579,583,544,532,504,1056,990,1034,852,500,523,789,514,647,1165,839,650,701,742,622,1132,899,1020,1118,754,653,543,541,547,706,767,790,821,590,658,861,1001,1133,898,786,1033,1026,648,915,940,961,697,973,961,971,909,525,446,800,807,872,442,600,973,622,674,637,668,957,766,802,660,631,581,1271,1796,1663,1505,1420,1443,1379,1498,1557,2027,1745,1758,1522,1454,1408,1377,1552,1664,2047,1602,1642,1745,1650,1642,1649,1742,1776,1798,1763,1718,1700,1320,1219,1197,1365,1601,1602,1687,1781,1762,1746,1713,1718,1738,1751,1650,1747,1658,1772,1747,1676,1770,1778,1699,1772,1757,1794,1647,1577,1575,1474,1285,1333,1319,1521,1520,1575,1628,1585,1614,1673,1481,1505,1653,1600,1637,2048,1445,1406,1481,1549,1504,1452,1548,1477,1464,1511,1615,1608,1391,1604,1682,1654,1681,1773,1737,1640,1725,1572,1569,1509,1559,1590,1606,1575,1611,1630,1597,1555,1553,1620,1606,1636,1598,1626,1552,1585,1600,1647,1612,1565,1292,1200,1482,1486,1446,1315,1469,1536,1591,1628,1441,1381,1498,1952,1548,1242,1208,1221,1228,1235,1263,1250,1247,1269,1289,1341,1497,1280,1288,1279,1312,1323,1287,1302,1220,1293,1269,1239,1262,1264,1225,1234,1251,1244,1232,1212,1177,1216,1224,1215,1260,1226,1250,1236,1257,1262,1271,1277,1314,1568,1294,1272,1283,1330,1321,1322,1249,1227,1294,1301,1234,1694,1976,1731,1769,1776,1790,1802,1784,1771,1766,1789,1781,1738,1723,1680,1719,1670,1640,1619,1570,1661,1627,1643,1561,1668,1713,1708,1729,1745,1730,1807,1776,1761,1744,1750,1745,1611,1682,1688,1631,1691,1643,1674,1733,1679,1708,1726,1755,1708,1782,1784,1763,1725,1739,1724,1745,1774,1777,1548,995,1571,2054,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1903,649,641,548,587,614,611,662,662,613,543,633,1188,824,508,578,655,532,389,399,455,1614,1744,1474,1059,996,1113,1303,1449,1576,1112,1258,1769,1316,1062,1413,444,403,460,448,543,506,493,423,317,305,267,284,369,1578,1964,1697,1720,1532,1808,943,1072,919,920,1038,1027,1072,1057,1160,665,1057,933,817,1085,1302,796,1337,1127,1042,868,1073,1077,1077,1256,959,969,904,1310,623,1124,1083,1295,1084,1071,1031,802,1041,1083,1125,895,944,1203,316,317,315,1014,1055,1256,789,1297,914,1807,934,1948,1936,1469,1509,1541,1553,1586,1620,1624,1658,1676,1620,1652,1695,1576,1660,1630,1599,1634,1640,1728,1717,1687,1758,1741,1763,1679,1690,1774,1804,1810,1805,1853,1901,1903,1877,1886,1865,1765,1789,1822,1803,1821,1805,1790,1811,1748,1745,1542,1569,1648,1608,1554,1436,1505,1604,1592,1725,1670,2048,1397,1381,1474,1549,1480,1470,1532,1482,1459,1530,1622,1594,1391,1620,1670,1635,1697,1782,1719,1668,1702,1570,1591,1499,1571,1609,1609,1581,1618,1620,1588,1550,1553,1640,1599,1638,1582,1626,1581,1581,1610,1657,1614,1574,1247,1218,1484,1496,1408,1336,1483,1529,1614,1609,1438,1387,1492,2003,919,594,734,499,615,727,839,685,1011,943,1120,923,1191,1269,1248,1302,1335,1343,1362,1382,1408,1451,1383,1417,1480,1567,1435,1433,1447,1299,1043,991,865,1222,1279,1252,1236,1028,1073,994,962,1071,821,946,1039,872,720,846,930,838,502,665,808,652,710,636,602,1475,1373,758,759,929,964,1042,1116,1066,1141,1119,1078,939,818,735,1049,1349,1305,1432,1427,1515,1488,1516,1344,1474,1539,1631,1545,1519,1574,1653,1743,1663,1537,1484,1548,1573,1485,1486,1453,1262,1288,1214,1083,954,1011,1045,1095,1060,1177,1232,1232,1079,989,836,738,837,792,804,1116,1621,2043,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,1263,1322,1180,901,494,399,1269,730,1071,1100,1108,893,633,1482,1562,1341,1406,1391,1356,1334,1112,1145,1184,1117,1301,1428,1336,1328,1231,1231,1185,1182,1149,1372,1467,1384,1389,1322,1228,1260,1406,1491,1625,1621,1553,1553,1587,1552,1547,1533,1491,1527,1469,1449,1393,1356,1364,1997,2048,2057,2048,2048,2053,2053,1885,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2051,2054,2049,2032,2046,2007,1913,2052,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1790,1328,1430,1412,1390,1374,1400,1490,1450,1639,1689,1575,1442,1435,1346,1409,1634,1728,1762,1708,1640,1529,1455,1481,1654,1659,1658,1654,1645,1579,1518,1529,1799,2048,2048,2026,2032,2057,2030,2020,2024,2034,2048,1997,2048,2031,2020,2048,2049,2046,2048,2045,2038,2027,1882,2048,2052,2046,1698,1321,1656,1609,1588,1663,1046,213,219,213,216,213,377,222,219,214,242,221,759,1927,1276,1232,1294,1337,1178,1149,1169,1179,1201,1193,1225,1135,1091,1814,2047,890,787,2057,1614,663,1314,2048,1343,590,1689,2055,869,916,864,984,889,904,930,955,918,654,951,844,745,986,914,957,1037,982,1013,757,1017,920,1223,1029,1067,1028,932,1037,1152,1236,1132,797,799,402,368,1008,1073,998,919,528,350,351,410,381,389,571,546,1410,1193,903,1222,1402,1504,1604,1345,1374,1082,1261,1545,1444,1230,1195,1251,1456,1455,1558,1489,1251,1137,1142,1382,1428,1450,1570,1440,1098,1155,1190,1454,1419,1544,1592,1136,1211,1140,1330,1466,1449,1543,1512,956,1197,1148,1431,1480,1536,1528,1032,1300,1160,1424,1334,1363,864,591,568,710,594,596,586,584,790,891,889,863,680,929,961,811,658,995,730,908,448,726,773,795,714,774,732,757,730,730,652,710,495,740,612,665,709,672,788,654,522,634,650,656,604,440,574,468,439,750,641,883,499,449,889,911,1002,1121,565,487,494,756,775,850,669,654,643,749,1165,946,1136,767,515,900,795,617,610,671,842,687,515,523,828,716,791,1039,907,829,848,547,842,860,848,916,890,872,856,846,954,741,811,856,828,773,841,1057,875,939,931,913,918,927,933,918,923,923,946,972,981,978,975,966,1008,853,818,722,803,915,832,802,819,822,739,851,853,865,741,808,555,848,668,680,543,1389,823,730,1201,1806,1774,1758,1902,1850,2048,2048,2048,1960,1412,1501,1851,1893,2048,1878,1770,2044,1994,1879,1854,2048,2048,2039,1876,1806,2032,1871,1815,2020,1930,1925,1502,1167,915,502,534,1411,1978,2020,1761,1465,1234,1183,1037,1916,1994,1385,1200,1234,792,1896,1295,1504,1480,625,149,228,1546,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1929,1625,1743,2048,2048,2048,2048,2048,2048,2048,1406,25,1352,1993,2048,2048,2035,1596,1713,1848,2048,2029,1850,2048,2048,2048,2048,2033,1850,2048,2048,1852,2048,2048,1997,2048,2048,2042,2051,2043,1918,1508,1555,1815,2049,2048,2048,2048,2048,2048,2048,2048,1412,1102,983,1304,1183,1327,1068,1556,1539,1272,1226,1243,1237,1005,1145,1048,1034,1194,1284,1873,1911,1885,1859,1933,1281,1752,1722,1637,1708,1302,1349,1084,969,1202,1143,974,1059,1096,1013,1646,1107,989,1156,1296,1259,1250,1806,1978,2057,2032,2032,2030,2048,2036,2034,2037,2040,2057,1971,2041,1988,2048,2035,1980,2048,1979,2057,2040,1970,2048,2030,1991,2040,2024,2030,2048,1974,2057,2034,1982,2057,2042,1973,2048,2036,2026,2048,2043,2027,2048,2025,1994,2026,2002,2044,2048,2027,2048,2057,2057,2056,2048,2048,2048,2048,2048,1898,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1893,2048,2048,2048,2048,2048,2048,2048,2048,1893,2048,2048,2048,2048,2048,2048,1902,2048,2048,2048,2048,2048,2048,2048,1891,2048,2048,2048,2048,2048,2048,1898,2048,2048,2048,2048,2048,2048,2048,1900,2048,2048,2048,2048,2048,2048,2048,2048,2048,2023,1439,1874,1603,1753,1481,1035,1512,1983,2049,2048,2006,1988,1996,1939,1883,1974,1998,2008,1956,2048,1671,1232,1727,1105,1847,1651,1613,1084,1159,1014,1136,1571,1487,1479,1479,1007,641,677,689,720,700,688,612,459,567,546,613,1993,1696,1692,1698,1712,1726,1858,1765,1721,1653,713,1646,1670,1613,1502,1478,1300,559,305,344,460,530,316,473,1112,1841,1698,1675,1680,1889,1805,1783,1174,1763,1478,1466,1510,1149,367,496,606,507,364,382,585,549,367,1921,1664,1678,1685,1666,1922,1782,1760,1667,1235,1724,1517,1481,1474,1486,1286,571,624,572,615,436,648,456,671,494,557,630,343,139,2015,1777,1702,1691,1672,1693,1679,1986,1766,1735,1709,1592,838,1791,1727,1584,1492,1484,1492,598,574,596,606,520,624,570,532,626,581,548,726,2012,1672,1691,1658,1679,1683,1932,1703,1728,1692,1612,628,1721,1642,1588,1493,1497,1482,814,616,533,612,370,505,571,600,582,442,426,531,1964,1672,1702,1671,1646,1695,1845,1790,1727,1639,912,1527,1716,1586,1481,1495,556,505,475,363,523,519,429,498,1496,1652,1654,1645,1730,1749,1723,1688,1081,1570,1548,1471,1476,1466,1485,1480,862,646,562,588,558,681,459,693,544,620,597,688,575,763,712,585,688,590,679,537,368,1844,1891,1653,1707,1694,1679,1678,1697,1709,1702,1725,2029,1621,1777,1684,1776,1862,1786,1417,639,839,1513,1801,1775,1707,1712,1498,1473,1480,1467,1215,593,391,584,532,532,667,555,568,465,516,521,533,520,461,1832,1823,1715,1693,1694,1689,1685,1746,1947,1691,1786,1763,1741,793,674,1930,1847,1691,1607,1483,1477,1489,1479,1003,671,636,642,587,567,587,501,598,687,472,496,515,438,528,1113,1958,1696,1681,1697,1683,1715,1711,1954,1747,1664,1767,1801,1767,918,945,2035,1724,1672,1476,1485,1495,1478,946,472,639,570,604,568,512,362,289,186,224,233,221,800,2029,1759,1703,1703,1710,1732,1743,1874,1897,1766,1746,1809,1786,1490,1366,1608,1590,1474,1408,666,587,718,617,1153,1694,1661,1814,1189,1737,1473,1463,1487,613,584,622,574,476,489,454,432,551,1866,1674,1670,1661,1800,1680,1693,1364,1167,1782,1535,1463,1475,1472,782,547,577,575,503,612,564,469,460,639,542,1182,1869,1667,1675,1683,1681,1896,1641,1760,1745,1231,1039,1903,1723,1456,1475,1444,712,517,433,438,558,451,342,298,311,518,1274,1805,1675,1672,1654,1659,1880,1671,1715,1658,964,1425,1799,1491,1454,1448,1412,288,317,372,398,443,438,372,284,400,465,252,1124,1809,1623,1657,1669,1668,1858,1692,1642,1705,1011,1650,1648,1480,1493,1044,460,456,532,617,644,610,624,579,651,1908,1660,1659,1654,1775,1721,1677,1746,1229,1515,1720,1481,1485,1490,1478,917,470,543,520,612,567,587,563,454,446,544,426,476,1333,1842,1660,1680,1674,1666,1671,1875,1743,1653,1703,1761,1105,926,1936,1706,1574,1476,1481,1497,1470,1500,1479,1500,1482,1352,584,738,696,503,732,481,742,669,543,537,601,626,678,665,652,558,664,398,562,640,742,602,374,562,505,420,262,341,1705,2027,1887,1730,1722,1717,1665,1704,1671,1697,1689,1698,1682,1692,1863,2054,1684,1732,1704,1668,1649,1754,1667,1678,1747,987,711,968,1864,1898,1332,278,1034,442,1189,1696,1691,1541,1500,1493,1525,1509,1503,1490,1479,1477,1487,1365,673,768,809,522,707,679,690,765,705,612,683,678,570,701,674,663,730,699,626,506,487,571,443,175,339,439,597,348,469,188,169,398,2053,2012,1903,1691,1695,1700,1671,1656,1692,1701,1679,1673,1650,1672,1704,1696,1721,2048,1927,1755,1712,1750,1701,1696,1683,1666,1622,1665,1716,1637,1002,779,1654,1869,1849,1665,1802,1718,1483,1492,1470,1495,929,536,573,564,524,470,466,490,392,554,252,385,628,460,2004,1714,1695,1647,1683,1688,1713,1910,1645,1713,1742,1647,780,1791,1711,1569,1413,1461,1467,1499,1501,1496,1469,1497,897,678,596,633,541,643,647,729,639,705,477,591,728,647,624,700,691,406,625,590,654,533,412,587,704,2029,1969,1696,1678,1671,1694,1697,1706,1688,1658,1682,1706,2013,1834,1678,1663,1695,1690,1686,1729,1776,1110,899,1605,1724,1541,1670,1642,1632,1442,1468,1481,1485,1485,1075,556,509,500,612,701,628,662,593,697,604,504,493,643,712,543,351,816,2012,1752,1680,1663,1678,1700,1679,1668,1754,1953,1678,1718,1759,1754,1716,1423,1098,1828,1800,1699,1483,1495,1493,1493,1510,1471,1486,1501,1495,1515,1512,1498,1244,507,730,640,578,640,599,557,606,669,579,552,654,599,589,490,622,595,483,531,647,468,512,594,619,562,611,482,564,565,562,635,562,546,517,450,500,489,623,507,675,2057,2042,2052,1795,1717,1717,1707,1721,1705,1705,1701,1699,1726,1713,1709,1704,1707,1711,1716,1711,1782,2048,2001,1680,1772,1721,1718,1704,1720,1722,1725,1702,1750,1755,1736,1029,889,897,857,1421,1657,1655,1539,1588,1576,1506,1072,939,1228,1776,1753,1787,1477,1470,1483,1495,1482,786,681,700,602,460,349,403,471,313,417,493,468,394,1700,1856,1695,1690,1678,1689,1678,1896,1755,1719,1741,1697,1310,1304,1775,1659,1473,1474,1244,603,443,408,497,247,326,472,394,1654,1673,1670,1671,1779,1786,1688,1651,1223,1732,1492,1477,1470,1463,1384,601,558,590,605,568,573,564,607,555,327,424,490,416,763,1926,1650,1658,1664,1659,1662,1663,1920,1660,1685,1717,1668,502,554,1410,1308,1553,1604,1488,1484,791,163,361,394,328,260,388,309,1252,1684,1632,1658,1819,1640,1631,1046,1466,1560,1443,1459,966,550,535,438,551,503,424,1672,1678,1652,1774,1736,1407,1438,1603,1483,1490,1469,1450,1487,1482,1201,695,598,597,617,552,417,537,601,412,462,417,586,495,456,453,403,390,335,411,1842,1911,1661,1671,1693,1703,1697,1695,1659,1651,1855,1846,1714,1798,1679,1714,1660,1433,817,1257,1639,1470,1569,1691,1586,1472,1494,1479,1202,445,354,494,459,480,275,365,523,471,455,339,354,444,1413,1820,1649,1662,1660,1651,1670,1801,1778,1669,1702,1653,983,681,1483,1681,1624,1479,1478,673,520,416,219,378,498,168,1662,1686,1698,1778,1789,1769,1502,1343,1847,2057,2051,2028,2052,1913,1568,1587,1461,1155,838,795,740,884,910,896,2037,2007,1997,1923,1857,1251,1142,1498,1185,1355,772,1137,1067,751,989,1079,1217,852,1020,1140,1030,1047,994,954,1133,1123,1093,864,888,991,927,906,1003,817,1017,924,893,1058,1009,1000,1010,1048,1009,912,895,921,1017,840,987,1005,899,981,903,890,1019,937,1028,919,934,1185,1000,1065,1065,954,1095,1031,1151,1084,1171,1121,1112,1106,1118,1081,1217,1148,1053,1029,1051,696,1030,1139,1134,1081,949,1133,1160,1131,1082,1031,1066,1071,1008,1243,1199,1041,972,1108,1160,1049,1176,1198,1109,1179,1007,1140,1245,1110,1200,1073,1139,1244,1091,1064,1178,1165,1159,1890,1972,1047,1032,1071,926,954,1100,1096,1001,1022,1020,1166,893,1076,1019,892,1020,851,890,721,795,853,1363,1407,1591,1326,1838,2020,2048,2057,1670,1661,2026,2048,2048,2048,1707,2054,2024,1611,2026,2048,2056,2048,2048,2048,2048,2048,2028,2032,2055,2015,2048,2036,1980,1891,1789,1676,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2041,1956,1935,1812,1682,1261,2036,1967,1719,1856,2018,2053,2052,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2057,1797,1155,1576,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1966,1639,2057,2048,2057,2006,1758,1484,1310,1122,909,584,1025,2048,2048,2056,2048,2048,2057,2056,2057,2057,2042,1592,1248,1210,2048,2047,1999,1898,1818,1612,1390,1019,767,411,161,1103,2043,2048,2053,2057,2048,2048,2056,2048,2048,2057,2057,2048,2042,1900,1707,1567,1379,1634,2048,2048,2048,2048,2048,2048,2048,2048,2048,2050,2056,2022,2012,1800,1615,1327,741,1731,1803,2027,2020,2057,2056,2030,1868,1536,1027,1505,2048,2048,2057,1721,2048,2048,1986,1470,62,166,103,25,1676,2048,2048,2048,2055,2057,2055,2056,2006,1957,2048,2048,2048,2007,2048,2048,2048,2048,2056,2048,2048,2048,2057,2045,1733,1692,2008,1788,1935,1687,2057,1842,1404,1342,1731,1990,2050,2057,2057,2046,2054,1961,1719,1067,29,1963,2048,2056,2048,2054,2048,2057,2057,2057,2037,2032,1960,1853,1919,1822,1632,2048,2048,2048,2048,2048,2048,2048,2048,1903,2048,2057,2048,2057,2048,2048,2048,2048,1606,2041,1960,1970,1203,1806,2056,2055,1964,1633,1996,2048,2048,2048,2053,2048,2048,2048,2048,2038,1624,1316,1879,1982,2009,2029,2049,2038,2034,2028,2052,2052,2053,2051,2026,1996,1960,1967,2025,2048,2051,2046,2054,2013,2037,2031,2043,2048,2037,2043,2008,1860,1730,1513,1381,1230,1248,1198,1159,1002,1098,1089,963,994,796,920,912,730,610,485,386,206,175,60,50,801,2048,2038,2051,2048,2021,1787,1733,1465,962,1403,2048,2048,2048,2048,1890,2048,2048,2048,1966,2048,2048,2048,2001,2056,2056,2048,2057,2050,2053,2048,2055,2032,2043,2054,2009,1926,1914,1762,1774,1741,1629,2055,2048,2049,2057,2052,2049,2056,1767,2055,2048,2048,2056,2055,2053,2057,2002,1973,2056,2027,1864,1476,2056,2057,1925,1453,2043,2048,2048,2048,2048,2048,2048,2048,2044,1986,1773,1703,1489,1367,1230,1134,1946,2048,2048,2056,2056,1996,1838,1507,633,516,1204,1599,1795,1946,1932,1949,1951,1990,1828,1672,1453,1279,877,468,800,1879,2034,1922,1268,916,2048,2048,2048,2048,2048,2048,2048,2048,1985,2003,2048,1969,1701,1316,863,2048,2013,1634,1339,2026,2048,2048,2051,2048,2057,2057,2041,2022,1969,1503,2017,2048,1429,592,1969,2048,2048,2048,2048,2048,2057,1999,1745,2049,2057,2048,2048,2048,2048,2048,1490,1107,1630,1970,2046,2056,2057,1906,1180,1944,1805,2048,2048,2048,2056,2030,2008,1609,1227,882,662,424,343,166,767,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1850,1516,2048,2048,2048,2048,2048,2048,2048,1914,327,731,1555,1794,2038,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,1718,1572,1397,1319,1147,992,1033,773,706,892,967,696,1259,1906,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,1557,1018,664,838,2032,2048,2048,2048,1936,1295,2057,1924,1610,1087,840,708,542,1833,2038,1600,683,1232,1886,1939,2035,2053,2053,2049,2039,2039,1691,1726,1791,1944,1885,2048,2048,2048,2048,2048,2057,2057,2048,2041,1899,1616,1164,648,1189,1936,2048,2048,2048,2048,2048,2048,2048,2048,2038,1863,1616,1322,858,728,240,1271,2050,2031,1941,1907,1674,1718,1969,2048,1913,1628,1364,1721,1682,1903,2044,2048,1917,1558,1508,1833,1932,1654,2056,1921,1775,1708,1358,1239,1199,2034,2020,2032,1918,2001,1997,1908,2048,2057,2055,1990,1266,799,1991,2048,2048,2048,2048,1871,578,1929,2057,2048,2048,2053,767,924,2048,2048,2048,2048,2048,2056,2057,1923,2048,1756,1776,2048,1779,2057,2048,1760,1896,2056,1820,1281,1459,2021,771,1514,2048,2048,2048,1903,520,103,623,1844,2057,2048,2057,2057,2048,2048,1894,2048,2048,2030,1977,2050,1974,2048,2056,2043,2055,2036,2048,1850,2040,1628,1987,1404,1953,1274,1528,1626,1706,1355,1312,1660,2055,1795,1950,2048,2048,2057,2057,1762,1251,917,773,2055,1479,1299,1966,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2015,1881,1670,1466,1295,982,761,2032,2048,2048,2048,2048,2048,618,1577,2040,2046,2048,1899,1957,2045,2055,2048,2057,2048,2057,2054,2032,1893,1583,1202,378,1922,2048,2048,2048,1957,602,272,1813,2055,2048,2048,2048,2057,2048,2048,2054,1705,861,303,944,1721,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1946,1812,1771,1786,1647,1479,1334,1251,1236,1134,882,663,552,539,471,432,479,421,421,425,465,543,476,443,178,601,1155,1203,1261,1149,1105,1034,856,779,622,371,213,83,525,1432,1743,2001,2056,2048,2037,2031,1980,1884,1890,1849,1953,1983,1927,1404,1957,2047,2057,2055,1991,2038,2044,2032,2028,2004,1969,2048,1928,1923,2041,2048,2048,1898,1712,1964,1864,1780,2014,2004,1355,1529,1875,2055,2051,1885,1911,2014,1751,1993,1924,2048,2057,2057,1949,1954,2055,1873,1451,1654,1468,1258,706,497,513,343,747,522,891,1447,1486,1418,1427,1266,1405,1556,1655,1816,1812,1840,1955,2032,2034,2054,2053,2048,2048,2056,2054,2054,2048,2027,1982,1985,1997,1988,1815,1676,1708,1705,1666,1587,1482,1430,1449,1453,1416,1275,1233,1207,1226,1173,1089,1012,905,955,1193,1570,1407,1472,1505,1422,1486,1546,1544,1398,1567,1508,1537,1682,1638,1560,1637,1575,1462,1720,1656,1817,1709,1756,1839,1851,1901,1879,1899,1979,1941,2018,2045,2056,2048,2048,2057,2056,2055,1972,1848,1679,1447,888,1787,1838,2048,2049,2048,1995,550,281,1813,2048,2048,1707,1754,1833,1313,2048,2057,1222,1919,2048,2048,2048,1948,1688,2047,1838,1344,1669,2048,2048,2048,2056,2048,2050,1931,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2024,2045,2056,2056,2048,2048,2057,1943,1993,2029,2048,2048,2045,2048,2048,2048,2057,2048,2048,2011,1182,1970,2048,2048,2056,2048,2057,2048,2040,1846,1946,1639,1572,1541,1506,1815,1723,1505,1420,1242,1059,750,507,2048,2048,2056,2055,2048,1862,1471,578,460,1533,2048,2048,1660,1646,1456,1864,1708,369,200,1031,562,139,556,383,385,358,399,231,623,795,802,831,517,610,523,451,704,509,613,650,555,339,496,705,841,678,393,519,277,385,800,1092,576,370,290,673,1087,733,730,681,967,713,743,1202,1050,1100,932,407,441,230,301,248,365,387,605,778,250,235,276,326,137,206,361,219,226,248,288,324,183,293,151,68,208,172,210,654,771,272,417,321,934,907,499,805,1031,920,696,502,588,187,680,205,438,253,299,501,523,310,550,846,448,1102,1114,1063,861,736,480,453,407,452,220,1746,1687,1408,999,1462,1404,1433,1558,608,804,982,1070,975,757,1007,866,917,703,686,787,357,810,305,530,609,388,772,803,623,527,575,311,583,839,933,1204,1070,927,932,1183,1086,891,1536,1414,1084,750,1234,793,1455,1179,1234,729,1288,800,983,760,936,996,668,1170,792,451,571,274,458,224,279,86,80,433,399,591,408,506,558,449,757,848,925,741,693,1175,1183,1184,1155,1082,1182,770,1291,792,366,361,1198,1258,532,986,535,323,399,490,650,713,1213,1353,365,343,665,230,826,621,411,423,297,524,327,416,617,344,610,473,299,643,858,406,924,1026,837,348,514,470,570,522,371,416,491,409,351,533,618,1089,645,1238,695,663,797,733,110,312,253,312,754,487,689,484,582,365,691,392,394,392,549,254,306,323,244,285,250,332,210,269,226,253,108,113,194,104,117,106,104,117,195,79,523,177,246,536,852,836,805,741,757,621,873,546,517,309,1146,1184,1411,1189,1303,1164,1531,1652,1550,1408,1125,1176,834,992,1217,1484,1581,1582,1255,1471,1535,683,666,633,762,341,468,615,494,857,725,418,344,484,354,364,374,608,195,325,439,553,395,283,247,284,65,245,125,451,331,959,1322,616,354,480,456,428,723,481,474,270,537,240,611,835,1110,635,435,573,495,575,401,758,198,740,551,533,675,815,433,417,381,336,389,472,391,41,40,41,170,194,204,260,181,158,209,197,129,353,287,329,416,208,78,378,1016,1364,1088,1219,1362,1031,1029,790,517,395,866,931,1014,662,1850,1421,1415,1454,1599,1399,1603,1407,1354,1562,1532,1415,1495,1375,1607,1540,1457,1410,1482,1456,1364,1352,1441,1519,1562,1516,1486,1599,1632,1581,1697,1669,1707,1832,1019,1059,1082,1006,1172,1629,1767,1734,1748,1690,1697,1711,1746,1692,1732,1713,1694,1750,1743,1757,1730,1743,1541,1667,1663,1661,1703,1703,1696,1717,1722,1679,1644,1663,1677,1608,1570,1652,1681,1831,1646,1717,1597,1652,1671,1704,1738,1774,1825,1798,1808,1855,1827,1736,1714,1677,1769,1797,1849,1784,1715,1662,1820,1759,1686,1811,1741,1715,1704,1596,1666,1502,1885,1598,1657,1594,1586,1618,1609,1690,1693,1705,1643,1713,1740,1671,1733,1724,1707,1676,1770,1702,1679,1707,1665,1665,1692,1626,1628,1606,1606,1587,1511,1496,1501,1848,1123,1133,863,832,482,1215,1417,1439,1439,1247,1055,1203,1192,1281,1399,1298,1311,1315,1250,1224,1086,945,791,865,863,841,654,706,982,1103,973,1220,1178,1864,1438,1448,1392,1413,1566,1423,1525,1468,1477,1371,1293,1240,1267,212,234,219,216,236,754,1391,1591,1341,976,1319,1205,902,1308,1439,1037,1583,1656,1229,1164,1542,1090,1768,1095,1638,1660,1610,1443,1698,1451,1215,1678,1290,1626,1491,1224,1706,1075,1561,1549,1526,1688,1390,1487,1450,1487,1770,1154,1346,1632,1711,1229,1594,1494,1497,1563,1654,1399,1330,1563,1520,1448,1727,1456,1747,1372,1356,1534,1469,1682,1410,1178,1724,1545,1500,1653,1277,1644,1024,1470,1477,1670,1395,1483,1573,1453,1459,1585,1314,1514,1325,1508,1414,1385,1289,1569,1382,1137,1401,1265,1557,1505,1596,1649,1703,1462,1300,1527,1467,1275,1463,1556,1809,1342,1664,1293,1662,1618,1454,1727,1826,1516,1750,1584,1689,1538,1651,1517,1481,1497,1729,1348,1644,1578,1727,1213,1677,1610,1709,1383,1643,1662,1528,1399,1575,1605,1802,1358,1772,1418,1534,1778,1630,1662,1914,1861,1893,2054,2025,2040,2039,2025,2021,2025,2045,2026,2029,2051,2036,2044,2044,2007,2004,1894,2050,2012,2032,2046,2049,2054,2044,2044,2023,2032,2003,2033,2048,2039,2047,2051,2041,2045,2009,2036,2024,1993,2035,2053,2055,2026,2028,2048,2034,1987,1956,2020,2009,1974,2016,2022,2021,2033,2047,2024,1998,1999,2012,2002,1983,2011,2006,2007,2041,2046,2032,1989,1993,2002,1998,1993,2013,2005,2048,2056,2029,2045,2007,1993,2009,2012,2000,2042,2044,2044,2040,2045,2027,2044,2038,2032,2048,2019,1938,2020,2008,1972,1985,2001,1972,1935,1999,1989,1988,1936,1961,1968,1962,1991,1997,1940,1952,1982,1993,1965,1937,1999,1997,1972,1991,1958,2000,1975,1985,1994,1961,1993,1976,1980,1993,1955,1977,1983,2008,1975,2001,1975,1989,2001,1979,1984,1946,1958,1991,1993,1974,2008,1957,1993,1969,1999,1954,1971,2005,1992,2001,1991,2006,2009,2000,1979,1983,1994,1978,1943,1999,2049,1995,1893,1991,2027,1983,1949,2017,2014,2018,1972,2008,2034,2007,1983,2002,2006,2041,2049,2006,2010,2028,2020,2008,1996,1971,2053,2019,1985,1995,1927,1869,2054,2047,2026,1993,1973,1911,1924,1899,1775,1920,1926,1847,1816,1831,1980,1982,2005,1910,1840,1904,1923,1757,1907,1982,1945,1920,1981,1921,1908,1934,1925,1933,1870,1962,1940,1978,1901,1938,1848,1873,1883,1867,1893,1973,1963,1951,1977,2005,1746,1950,1796,2020,1820,1943,1918,2004,1922,1964,2031,1791,1928,1729,1976,1978,1885,1987,1896,1921,1924,1995,1924,1887,1973,2009,1772,1812,1814,1763,1790,1898,1850,1922,1764,1943,1807,1899,1964,1892,1950,1923,1873,1920,1851,1936,1870,1958,1833,1951,1991,1910,1968,1880,1960,1899,1878,1891,1877,1809,1894,1880,1885,1838,1757,1631,1633,1532,1695,1895,1695,1946,1978,1949,1985,2002,1980,1943,1981,1971,1963,1969,1989,1985,1471,1396,1411,1379,1449,1483,1557,1415,1616,1498,1556,1545,1702,1699,1534,1694,1988,2006,1922,2016,1942,1916,1890,1888,1986,2007,2003,1898,1978,1932,1908,1878,1891,1998,2034,1978,1939,1967,1986,1842,1921,1907,1982,2006,1927,1988,1970,1963,1802,1902,1953,1936,2008,1923,1991,1887,1909,1829,1894,1952,1950,2025,1925,1970,1943,1969,1798,1902,1971,1992,2005,1953,1991,1952,1881,1908,1888,1953,1946,1909,1978,1870,2000,1950,1899,1938,1757,1727,1648,1646,1715,1689,1734,1712,1715,1719,1666,1655,1719,1735,1758,1677,1669,1662,1684,1729,1739,1698,1630,1614,1720,1701,1684,1775,1722,1664,1572,1593,1688,1773,1658,1687,1618,1619,1652,1733,1758,1726,1680,1690,1625,1702,1795,1801,1679,1616,1655,1752,1817,1841,1822,1750,1768,1752,1832,1870,1835,1796,1835,1814,1754,1764,1794,1679,1626,1688,1763,1722,1620,1614,1772,1699,1609,1784,1792,1593,1689,1834,1576,1606,1705,1657,1718,1698,1836,1713,1677,1752,1861,1769,1701,1681,1827,1694,1748,1781,1731,1861,1950,1912,2025,1971,1946,1910,1968,1935,1930,1977,1973,1978,1981,1995,2000,2006,1981,1984,1981,1951,2007,1966,1998,2016,1966,1975,1979,1965,1969,1983,2023,2015,1989,1970,1987,1962,1968,1956,1983,1978,1980,1965,1972,1974,1977,1964,1963,1946,1962,1959,1991,1966,1961,1951,1982,1944,1970,1956,1945,1944,1965,1944,1964,1943,1964,1940,1968,1944,1966,1948,1967,1947,1969,1947,1973,1922,1915,1889,1912,1900,1906,1920,1902,1903,1903,1911,1902,1937,1894,1913,1916,1898,1912,1832,1965,1822,1844,1961,1843,1818,1972,1857,1823,1959,1872,1836,1943,1888,1826,1937,1881,1822,1924,1901,1832,1920,1902,1808,1877,1876,1784,1890,1839,1789,1891,1815,1828,1889,1807,1830,1890,1797,1831,1888,1774,1846,1893,1751,1863,1897,1779,1888,1880,1833,1913,1859,1836,1908,1824,1874,1906,1826,1908,1856,1846,1912,1814,1878,1903,1808,1906,1850,1916,1840,1857,1924,1834,1858,1914,1842,1859,1912,1845,1863,1910,1846,1866,1910,1839,1872,1910,1845,1868,1908,1850,1868,1910,1862,1851,1920,1849,1831,1940,1855,1854,1909,1865,1861,1882,1875,1868,1867,1879,1880,1861,1886,1895,1841,1886,1903,1856,1927,1910,1918,1927,1914,1915,1921,1917,1909,1913,1904,1922,1918,1916,1915,1941,1919,1967,1977,1995,1990,1984,1974,1991,1995,1985,1989,1979,1967,1886,1950,1883,1931,1894,1967,1849,1936,1889,1842,1965,1954,1920,1980,1939,1969,1934,1959,1946,1962,1969,1967,1955,1972,1962,1944,1984,1924,1948,1875,1903,1889,1892,1940,1847,1983,1830,1972,1849,1931,1898,1882,1903,1886,1956,1760,1935,1783,1898,1858,1846,1861,1822,1903,1806,1940,1817,1878,1856,1844,1870,1822,1926,1906,2049,2020,2031,2004,2009,2002,2015,2001,2052,2007,2050,2033,2027,2018,2019,1984,2028,1972,2028,2034,2050,2056,2032,2046,2021,2009,2026,2012,2030,2044,2056,2047,2042,2040,2028,1983,1890,2012,1998,2020,2040,2036,2037,1994,1978,2004,2007,1963,1985,2026,2033,2013,2033,2004,1983,1985,2025,1983,1959,1994,2017,2041,2021,2029,2022,1983,2004,1999,1974,1962,2014,2016,2028,2027,2033,2042,2022,2039,2002,2015,1978,2003,1981,2033,2023,2057,2053,2049,2051,2023,2014,2015,2033,2034,2052,2043,2038,2025,1964,1983,1985,2011,1994,1998,1989,1954,1992,1986,1963,1933,1971,1958,1994,1943,1963,2021,1952,1941,1996,1956,1814,1836,2013,1999,1985,1996,1997,1951,1967,1954,2043,1995,1951,1887,1893,1909,1992,1971,1881,1904,1964,1966,1958,1828,1903,1978,1984,1953,1829,1915,1941,1941,1894,1835,1911,1852,1874,1938,1968,1934,1981,1893,1857,1897,1831,1924,1913,1974,1950,1889,1896,1900,1885,1940,1966,1949,1932,1811,1869,1813,1945,1988,1937,1892,1846,1856,1831,1900,1925,1885,1900,1881,1861,1891,1893,1822,1921,1891,1829,1895,1797,1770,1968,1967,1916,1937,1936,1844,1839,1854,1806,1817,1888,1983,1938,1963,1927,1844,1873,1938,1983,1957,2029,2015,1990,1723,1976,2021,2010,1995,1982,1961,2004,2032,1973,2028,1884,1992,1997,2034,1933,1807,2010,1999,2005,1993,1782,2010,2012,2034,1992,1995,1918,1937,2015,1992,1990,2027,2036,2028,1990,2003,2005,2024,2019,1991,1979,1967,2025,2028,1926,1807,1798,1838,1984,2006,2000,1980,2023,1995,1978,1910,1967,1989,1881,1927,1950,1962,1937,1982,2001,1987,2006,1989,1974,1937,1998,1987,1986,1927,1896,1962,1949,1949,1834,1956,1939,1956,1839,1969,1966,2000,1964,2007,1993,2008,2031,1957,1913,1911,1948,1925,1908,1920,1962,1958,1923,1930,1983,2014,2007,1987,1984,1954,2011,2036,1974,1972,1987,1932,1975,1944,1952,1951,1981,1963,1977,2000,2034,2000,1976,1985,1997,2019,1958,1951,1966,1984,1934,1995,1883,1978,1996,2019,1981,1940,1982,2009,1977,1984,1949,1962,1984,2043,1918,2004,1978,1976,2038,1943,2004,2007,1971,2028,1975,1967,2010,1967,1945,1983,1959,2022,1967,1975,1909,1965,1956,1976,1911,1990,1952,1949,1949,1965,2003,2013,1937,1947,1973,1950,1934,1948,1951,1927,1897,1859,1933,1985,1928,1903,1975,1881,1942,1968,1874,1973,1966,1954,1961,2005,1932,1975,1989,1934,1963,1948,2001,2029,1980,2036,2044,1984,1969,2003,1969,2010,2035,2043,2034,2050,2011,1962,2011,1971,2015,2038,2023,2044,2005,2006,2015,2014,2001,2029,2049,2023,2044,2041,2022,1957,2007,1987,2031,2039,2048,2051,2057,2051,1960,2015,1970,2045,2024,2055,2037,2044,2021,1981,1920,1980,1810,1971,1975,1990,1986,2010,2031,2006,2027,1954,2006,1981,1844,1990,1979,1978,1983,2006,1933,1794,1967,1957,1955,1990,1994,1933,1869,1831,1763,1613,1720,1498,1591,1521,1565,1428,1592,1472,1321,1432,1470,1337,1160,1547,1244,1382,1216,1529,1111,1380,1273,858,1513,1333,1341,1164,1245,1575,833,1231,1417,1144,1508,1159,1322,1298,1190,1584,1120,1441,1497,1326,1570,1353,1513,1500,1465,1653,1230,1484,1508,1328,1440,1398,1305,1334,1094,1635,1237,1459,1220,819,1648,1405,1297,1188,1245,1592,860,1225,1461,1236,1601,1047,1302,1216,1360,1443,1355,1452,1499,1232,1629,1421,1505,1585,1327,1608,1301,1509,1531,1207,1614,1194,1379,1290,1375,1427,1289,1453,1215,852,1661,1401,1238,1206,1261,1598,785,1230,1426,1171,1595,1059,1329,1280,1379,1460,1369,1465,1502,1240,1622,1459,1466,1574,1366,1503,1372,1499,1401,1152,1613,1189,1468,1182,1552,1258,1245,1419,1107,978,1515,1447,1112,1279,1455,1210,970,1272,1340,1131,1466,1181,1376,1148,1539,1158,1410,1491,1332,1590,1413,1528,1500,1478,1612,1247,1458,1487,1415,1273,1523,1262,1357,1128,1608,1217,1488,1307,851,1595,1328,1353,1171,1307,1628,892,1151,1411,1282,1478,1185,1286,1225,1225,1614,1230,1524,1520,1227,1610,1367,1520,1556,1357,1650,1259,1494,1535,1284,1659,1162,1424,1289,1277,1480,1220,1419,1159,865,1602,1383,1251,1195,1320,1552,838,1260,1451,1162,1619,1049,1367,1244,1394,1463,1362,1496,1495,1241,1551,1444,1535,1633,1319,1602,1399,1575,1521,1147,1610,1218,1337,1266,1273,1412,1217,1433,1199,866,1592,1375,1248,1192,1260,1596,813,1271,1428,1120,1560,1066,1314,1278,1441,1348,1222,1483,1534,1360,1628,1461,1565,1558,1409,1636,1363,1564,1520,1171,1503,1382,1335,1302,1101,1639,1147,1414,1292,830,1579,1357,1374,1150,1237,1579,870,1174,1419,1183,1343,1239,1264,1401,1273,1639,1137,1466,1571,1434,1511,1480,1531,1452,1560,1575,1376,1439,1523,1354,1231,1659,1224,1402,1131,1641,1167,1499,1335,878,1503,1286,1379,1114,1302,1433,1173,1029,1327,1390,1218,1523,1174,1374,1165,1652,1222,1495,1437,1313,1581,1452,1593,1495,1533,1677,1301,1506,1532,1353,1227,1627,1324,1426,1148,1639,1175,1506,1365,905,1439,1309,1402,1112,1373,1205,1422,946,1354,1466,1295,1634,1065,1427,1297,1584,1265,1392,1532,1468,1280,1708,1624,1581,1633,1387,1705,1213,1215,1311,1398,1295,1854,1468,1451,1185,1301,1574,1459,1520,1782,1356,1344,1276,1561,1405,1488,1807,1434,1437,1282,1327,1486,1374,1408,1827,1478,1555,1324,1265,1484,1227,1346,1470,1666,1112,1242,1244,1594,1514,1292,1419,1511,1404,1475,1695,1776,1699,1879,1544,1936,1883,1831,1707,1878,1815,1813,1880,1399,1684,1667,1766,1735,1682,1680,1541,1374,920,1905,1977,1935,1775,1337,784,1811,1591,1804,1810,1878,1684,1902,1546,1592,1856,1603,1894,1869,1884,1809,1693,1735,1611,1948,1954,1702,1983,1948,1910,1864,1857,1762,1648,1834,1835,1900,1886,1671,1682,1634,1531,1845,1631,1649,1647,1517,1603,1437,1664,2016,2005,2017,1896,1966,2034,2012,1940,2004,2048,2026,1944,1996,2031,2012,1935,1984,1955,1958,1962,1972,1946,1926,2004,2023,2012,1995,2048,2020,1996,2002,1931,1869,2048,2050,2027,1974,1996,1888,1879,1976,1899,1913,1949,1901,1917,1893,1919,1900,1887,1940,1838,1895,1944,1870,1943,1911,1915,1902,1560,1362,1928,1675,1848,1435,1352,1238,1860,1592,1657,1663,1762,1519,1583,1582,1591,1447,1385,1739,1698,1413,1127,1592,1711,1413,1119,1912,1891,1778,1717,1805,1779,1635,1911,1819,1695,1673,1683,1718,1544,1839,1726,1380,1579,1520,1733,1373,1288,1244,1659,1537,1448,1169,1176,1724,1593,1630,1555,2024,1974,1970,1991,1939,1867,1747,1787,1881,1872,1977,1888,1881,1987,1825,1894,1922,1968,1893,1607,1938,1668,1414,1582,1649,1414,1360,1718,1490,1445,1698,1586,1739,1557,1609,1732,1682,1524,1816,1629,1596,1414,1628,1819,1638,1448,1269,1696,1255,1813,1890,1780,1668,1436,1389,1802,1565,1587,1577,1524,1752,1625,1475,1650,1627,1580,1639,1306,1561,1591,1547,1626,1263,1651,1515,1618,1626,1211,1530,1537,1483,1244,1142,1479,1175,1486,1253,1612,1078,1381,1472,1248,1517,1287,1290,1583,1462,1516,1782,1853,1644,1808,1816,1924,1827,1905,1730,1934,1496,1623,1609,1603,1698,1408,1991,1638,1610,1649,1708,1813,1583,1422,1625,1500,1559,1586,1402,1602,1424,1613,1495,1599,1445,1572,1553,1574,1476,1695,1889,1631,1976,1674,1886,1482,1626,1497,1619,1585,2015,1839,1823,1911,1877,1907,1888,1667,525,606,453,782,524,693,467,621,1270,1998,1971,1965,1919,1972,1962,1951,1918,1857,1639,1611,1651,1807,1558,1584,1563,1590,1781,1535,1784,1347,1509,1466,1548,1359,1390,1472,1581,1313,1252,1253,1517,1403,1507,1441,1328,1591,1460,1554,1492,1424,1363,1415,1406,1431,1353,1427,1763,1755,1795,1864,1887,1875,1842,1764,1728,1798,1662,1758,1799,1844,1763,1716,1690,1520,796,784,856,1017,1699,1708,1676,1619,1692,1590,1596,1646,1668,1726,1654,1747,1666,1744,1798,1850,1815,1618,1715,1486,1808,1391,1806,1553,1912,1644,1861,1784,1862,1744,1840,1791,1857,1262,1078,1032,1048,1080,1062,1095,1053,1470,1566,1556,1530,1582,1529,1564,1535,1556,1579,1475,1639,1609,1549,1056,1034,1029,1108,1486,1418,1757,1806,1581,1158,1236,1530,1351,1091,1497,1679,1257,1529,1632,1571,1553,1643,1611,1399,1241,843,1088,688,830,817,718,1447,1372,1288,544,801,532,548,785,531,882,715,940,498,641,741,643,869,498,852,665,905,505,522,937,694,848,452,810,638,759,343,282,539,196,643,222,579,188,179,587,172,522,200,528,40,307,348,224,577,227,1096,1443,1522,1196,1228,1210,1170,1192,967,982,984,971,952,1011,986,1370,1374,1386,1419,1480,1513,1414,1364,1410,1600,1477,1493,1563,1614,1587,1504,1491,1611,1383,1398,1403,1395,1399,1413,1469,1443,1381,1397,1409,1339,1320,925,940,936,1076,974,945,959,938,1060,921,975,923,1300,1409,1474,1343,1364,929,907,973,1010,1714,1585,1590,1586,1453,1565,1589,1603,1735,1368,1329,1344,1282,1288,1312,1353,1353,1591,1577,1564,1235,1385,1419,1266,1496,1618,1660,1524,1543,1579,1794,1671,1765,1623,1495,1224,1452,1422,1365,1314,1164,1487,1452,1503,1448,1427,1636,1436,1739,1665,1683,1658,1607,1663,1663,1647,1664,1699,1709,1642,1665,1493,1634,1645,1574,1679,1652,1678,1640,1624,1595,1665,1698,1583,1709,1682,1667,1677,1500,1642,1663,1600,1701,1685,1624,1626,1653,1823,1646,1624,1641,1795,1699,1690,1663,1657,1810,1600,1708,1608,1572,952,948,945,1054,1545,1488,1572,1482,1546,1270,1261,1323,1365,1135,1175,1276,1372,1189,951,964,1157,1341,1157,1104,1081,1173,1127,927,907,1434,1511,1503,1527,1533,1528,1527,1526,1536,1633,1420,1359,1377,1373,1387,1377,1351,1590,1535,1519,1529,1582,1549,1522,1542,1531,1748,1598,1600,1665,1625,1565,1606,1654,1714,1588,1447,1407,1389,1435,1477,1408,1425,1775,1775,1742,1692,1734,1744,1716,1688,1750,1851,1737,1676,1641,1741,1702,1686,1657,1717,1072,1129,1174,1110,1110,1075,1290,1181,1054,985,952,677,658,680,1036,1751,1682,1750,1669,1748,1676,1725,1659,1867,1752,1710,1645,1667,1677,1718,1716,1793,1836,1754,1816,1715,1778,1747,1763,1736,1879,1747,1713,1638,1658,1668,1706,1690,1712,1508,1509,1387,1498,1424,990,1004,1001,1483,1858,1777,1826,1761,1827,1790,1849,1854,1587,1218,1188,1292,1735,1085,1035,1045,1691,1648,1614,1606,1689,1522,1641,1586,1677,1606,1454,1414,1435,1359,1459,1420,1429,1448,1608,1557,1525,1562,1442,1439,1453,1454,1583,1635,1644,1571,1548,1674,1613,1596,1656,1625,1450,1461,1475,1404,1465,1422,1405,1565,1851,1807,1854,1743,1848,1775,1883,1847,1670,1608,1592,1611,1561,1641,1634,1618,1744,1540,1493,1458,1414,1501,1464,1464,1509,1706,1814,1837,1857,1681,1870,1807,1859,1853,1645,1643,1589,1713,1499,1648,1598,1625,1658,1480,1431,1432,1371,1516,1481,1431,1452,1854,1809,1813,1884,1664,1857,1830,1853,1748,717,1646,1068,718,1173,666,673,1179,677,968,1559,656,675,675,1431,1209,1099,1315,1284,902,998,1262,1194,1241,1328,1479,1509,1367,1016,1221,1704,1563,1729,1650,1732,1544,1570,1729,1711,1035,1163,1443,1379,1538,1185,1006,997,1010,1374,1082,1129,1120,1105,1586,2021,2039,2009,1987,2023,1998,1995,2014,2037,2040,2010,2013,2006,2015,2010,1948,2013,2036,2031,1999,1988,2017,1990,1995,1983,2036,2021,2016,2000,1988,2018,2010,1950,2021,2044,1889,1931,1878,1905,1911,1852,1857,1868,1878,1899,1893,1849,1872,1822,1840,1886,1881,1649,1665,1687,1678,1667,1657,1631,1728,1678,1661,1641,1628,1643,1654,1641,1595,1733,1433,1463,1440,1426,1426,1433,1388,1401,1621,1406,1462,1668,1355,1463,1501,1671,1411,1474,1541,1584,1544,1399,1608,1524,1609,1353,1442,1361,1875,1765,1494,1605,1662,1559,1590,1500,1695,1637,1556,1560,1664,1750,1703,1558,1562,1685,1526,1565,1526,1565,1536,1557,1531,1537,1537,1493,1641,1593,1531,1688,1676,1634,1654,1704,1840,1519,1511,1960,1927,1707,1703,1795,1948,1931,1925,1991,1921,1961,1904,1914,1867,1817,1842,1895,1998,1854,1873,1831,1832,1783,1775,1769,1901,1988,1955,1975,1925,1906,1913,1908,1913,2013,1884,1898,1862,1818,1804,1828,1781,1868,2023,1991,1984,1983,1926,1944,1932,1918,2021,1818,1810,1768,1778,1761,1796,1721,1775,1921,1871,1790,1803,1819,1820,1829,1782,1834,1435,1459,1474,1395,1418,1420,1416,1420,1905,1968,1933,2029,1928,1921,1894,1925,1925,1902,1865,1945,1957,1945,1947,1897,1919,1926,1926,1934,1935,1538,1517,1598,1620,1566,1616,1539,1510,1946,1824,1800,1756,1765,1733,1741,1720,1792,1322,1333,1278,1366,1307,1314,1365,1368,1664,1488,1493,1526,1584,1524,1495,1468,1561,1604,1602,1629,1584,1624,1553,1639,1392,1313,1358,1247,1291,1158,1228,1355,1965,1884,1875,1903,1909,1900,1874,1891,1965,1909,1877,1857,1885,1883,1887,1858,1863,1663,1423,1445,1340,1441,1447,1469,1453,1619,1660,1716,1711,1735,1634,1593,1573,1534,1397,1549,1590,1628,1624,1753,1694,1664,1805,1456,1445,1477,1483,1421,1335,1433,1448,1684,1472,1517,1525,1209,1550,1484,1505,1536,1612,1509,1516,1470,1108,1454,1524,1470,1818,1974,1936,1965,1420,1429,1437,1413,1421,1386,1370,1411,1472,1146,1186,1063,750,1103,1153,1121,1417,1381,1464,1593,1902,1887,1877,1936,1902,1891,1912,1881,1537,1623,1407,1473,1483,1098,885,836,787,937,828,887,829,951,947,916,807,946,968,1033,987,1250,1318,1274,1251,1301,192,639,593,608,207,489,406,960,1230,753,1003,743,1376,953,1123,1083,454,150,495,384,858,1278,1539,1479,1945,1778,1771,1827,1811,1798,1759,1773,1835,1603,1657,1637,1560,1644,1632,1610,1514,1596,1308,1325,1322,1438,1634,1650,1689,1683,1681,1667,1669,1663,1644,1693,1664,1647,1432,1836,1848,1820,1757,1800,1844,1841,1768,1793,1450,1447,1482,1427,1860,1875,1853,1875,1841,1867,1838,1886,1858,1729,1803,1670,1144,1108,1164,1106,1785,2009,1989,1940,1945,1957,1932,1879,1882,1932,1963,1936,1929,1927,1925,1912,1968,1963,1665,1735,1744,1840,1800,1734,1637,1630,2056,2050,2056,2040,2053,2038,2039,2036,2056,2048,2054,2041,2049,2050,2048,2027,2051,1952,1892,1885,1825,1842,1839,1850,1843,1947,1856,1917,1887,1852,1818,1858,1837,1878,1678,1317,1156,752,833,740,586,605,790,821,929,581,331,823,864,849,528,440,773,911,786,403,625,793,857,738,395,1062,1144,1100,689,471,1171,1123,1194,506,616,1229,1034,1154,618,510,1263,1081,1132,829,1240,1380,1495,1604,1785,1058,1077,1137,1136,1147,1135,1097,1151,1085,1152,1127,1213,1152,1091,1063,1147,1634,1051,1110,1194,1125,1076,1082,1071,1006,1033,921,957,1056,1009,845,769,853,1499,460,543,487,503,545,561,529,532,466,490,507,486,518,520,530,558,1049,1448,1459,1492,1526,1496,1491,1527,1468,1372,946,1016,1187,1677,1429,1407,1373,1254,1473,1552,1731,1653,1677,1635,1602,1632,1674,1655,1776,1512,1456,1515,1498,1435,1536,1477,1458,1278,1130,1173,1302,1344,1272,1367,1183,1268,1410,1401,1441,1476,1493,1574,1500,1589,1726,1043,1095,1137,1142,1177,1143,1107,1175,1120,1129,1114,1206,1138,1070,999,1083,1641,1068,1095,1163,1115,1042,1048,1085,1014,1033,947,995,1072,983,857,767,880,1463,472,532,491,522,534,550,555,553,445,484,519,488,509,523,526,536,1203,1769,1800,1803,1752,1823,1775,1840,1424,1406,1392,1373,1412,1403,1224,1185,1369,1651,1296,1300,1366,1537,1016,1048,994,1230,1569,1719,1672,1609,1592,1204,1137,1184,1350,1350,1675,1679,1665,1609,1696,1665,1597,1634,1672,1375,1174,1476,976,1854,1679,1943,1799,1773,1620,1704,1716,1698,1674,1762,1791,1603,1543,1491,1554,1549,1526,1607,1543,1378,1633,1599,1604,1594,1568,1575,1558,1632,1639,1639,1789,1670,1347,1622,1801,1683,1614,1282,991,1146,1178,1119,1159,1076,1089,1090,1161,1094,1195,1203,1085,1038,1083,1313,780,1094,1238,1135,410,1101,1227,1124,908,864,1161,1240,1174,424,1043,1227,1159,853,971,1189,1175,1188,391,968,1243,1093,954,1027,1181,1148,1144,464,934,1246,1136,966,993,1116,1198,1118,644,846,1184,1121,990,1543,1077,1093,1135,1125,1075,1074,1098,1033,1013,917,1035,1062,986,859,777,865,1250,962,1214,1117,941,569,1143,1221,1160,1072,1112,1161,1235,1118,1276,1169,1131,1230,1169,1308,1122,1216,1182,1169,1226,1109,1221,1188,1265,1240,1079,969,1107,1260,1209,1073,959,1121,1336,1165,1047,994,1121,1274,1166,990,1040,1095,1404,427,536,866,1424,1699,1832,1856,1869,1739,1452,931,519,508,533,585,502,1382,1169,1148,1502,1293,1046,1280,1510,1188,1100,1461,1343,1049,1265,1679,1806,1905,1713,1735,1886,1718,1880,1772,1751,1952,1805,1716,1752,1895,1732,1813,1854,1688,1886,1673,1837,1787,1825,1750,1786,1827,1766,1836,1876,1746,1859,1729,1748,1896,1703,1842,1774,1778,1813,1865,1736,1718,1896,1689,1825,1887,1695,1886,1784,1831,1721,1852,1747,1790,1892,1754,1730,1888,1734,1842,1790,1752,1888,1719,1829,1749,1899,1800,1848,1756,1742,1887,1665,1823,1895,1743,1723,1033,1281,1122,1289,1249,1164,1244,1107,584,777,839,924,629,323,828,840,877,511,459,807,899,783,401,621,778,873,695,1367,1075,1085,1153,1152,1167,1138,1091,1144,1101,1169,1097,1225,1155,1072,1049,1088,1452,1434,1696,1032,1079,1118,1162,1062,1046,1150,1002,1017,950,956,1053,1046,819,802,847,1154,1452,1414,1738,458,529,490,515,531,542,557,559,442,459,509,496,507,538,528,520,1197,1626,1661,1585,1673,1700,1608,1649,1678,1713,1790,1653,1641,1596,1615,1666,1696,92,786,1168,336,438,427,1000,1700,2031,2021,2026,2013,2009,2016,1940,2016,2016,2021,2011,2002,2014,1978,1995,1984,1662,1440,1497,1663,1044,1221,1470,1120,1123,1122,1121,1125,1120,1177,215,128,1835,2021,1943,1892,1898,1882,1813,1876,1898,1878,1922,1908,1922,1987,1895,1857,1906,1930,1879,1804,1971,1934,1880,1900,1954,1919,1746,1775,1835,1729,1906,1901,1894,1827,1919,1918,1876,1885,1908,1945,1842,1835,1874,1920,1824,1537,430,598,483,725,663,643,614,645,752,722,699,805,840,735,829,550,402,933,315,1303,853,999,534,296,418,189,1768,1476,1524,1599,1627,1567,1529,1454,1593,1599,1623,1666,1513,1538,1569,1556,1539,1903,1524,1666,1548,1525,1973,1802,1770,1781,1864,1878,1856,1843,1948,1353,1275,1305,1362,1273,1363,1324,1231,1641,1464,1459,1443,1494,1463,1492,1434,1535,1532,1471,1474,1454,1488,1449,1449,1428,1619,1451,1460,1437,1481,1491,1462,1436,1464,1647,1423,1413,1448,1469,1467,1431,1409,1604,1430,1391,1400,1453,1469,1428,1420,1404,1626,1384,1401,1468,1471,1463,1378,1400,1599,1409,1362,1375,1474,1450,1412,1431,1380,1615,1421,1405,1491,1493,1498,1425,1375,1588,1520,1457,1457,1486,1459,1487,1449,1387,1620,1335,1321,1375,1369,1348,1320,1320,1334,1513,1344,1337,1372,1351,1386,1300,1294,1575,1312,1291,1340,1368,1291,1341,1371,1259,1631,1459,1415,1488,1466,1492,1467,1380,1620,1435,1394,1424,1511,1455,1471,1452,1403,1594,1404,1370,1426,1454,1474,1408,1395,1607,1439,1404,1342,1486,1464,1427,1379,1413,1604,1411,1383,1440,1466,1489,1418,1415,1483,1575,1419,1438,1448,1484,1450,1437,1409,1758,1644,1835,1737,1807,1728,1681,1789,1827,1835,1801,1725,1653,1809,1728,1798,1712,1850,1771,1878,1857,1839,1908,1907,1844,1893,1926,1820,1797,1781,1828,1800,1770,1763,1934,1772,1789,1745,1769,1765,1731,1740,1743,1900,1820,1790,1738,1779,1737,1767,1742,1831,1925,1855,1834,1803,1780,1833,1807,1820,1916,1722,1751,1769,1732,1725,1723,1789,1771,1803,1903,1853,1846,1820,1808,1742,1792,1765,1913,1636,1759,1761,1531,1758,1740,1639,1772,1804,1747,1744,1750,1596,1677,1590,1820,1833,1676,1681,1622,1648,1691,1681,1682,1666,1774,1658,1619,1632,1682,1708,1686,1682,1687,1875,1809,1715,1784,1843,1800,1805,1804,1861,1791,1722,1720,1754,1792,1755,1820,1739,1859,1792,1896,1877,1860,1920,1966,1808,1860,1673,1668,1761,1744,1738,1781,1730,1728,1790,1689,1745,1811,1793,1811,1878,1730,1805,1451,1489,1503,1557,1499,1500,1518,1485,1884,2001,1927,1958,2020,1955,1951,1987,1895,1940,2006,2021,1992,1922,1973,1994,2014,1867,1120,38,40,40,314,40,38,40,38,1753,1791,1836,1841,1851,1843,1781,1798,1933,1441,1467,1403,1441,1412,1440,1419,1453,1866,1847,1825,1751,1793,1750,1802,1767,1768,688,316,38,40,40,317,40,38,40,553,1171,1416,1720,1729,1739,1773,1730,1709,1734,1749,1765,1252,1265,1455,1493,484,1509,1531,1339,1049,1682,1787,1593,1221,38,40,38,314,40,38,40,38,1169,1335,1151,1174,1449,1671,1610,1642,1683,1670,1638,1649,1638,696,38,40,40,889,892,69,569,1857,1850,1949,1664,1629,1632,1646,1650,1702,1737,1709,1723,1757,1727,1747,1726,1709,1666,1662,1480,813,1068,213,1879,1788,1728,1699,1769,1764,1707,1732,1819,1912,1801,1886,1888,1831,1855,1853,1787,1943,1755,1574,1751,1692,1747,1753,1752,1797,1833,1882,1894,1850,1928,1835,1921,1812,1989,1507,1184,1176,1022,1077,1357,1368,1351,1357,1425,1273,1163,1089,1129,1138,1219,1375,1188,757,894,1013,1155,1659,1497,832,638,759,1099,1610,1694,1727,1095,1079,1317,1717,1269,1047,761,979,894,555,770,1081,1304,1305,1145,1336,1346,1378,1348,1244,1798,1919,1883,1914,1843,1851,1928,1859,1858,1906,1914,1919,1948,1842,1855,1927,1699,935,937,987,1108,1945,1959,1601,1983,1426,1179,1188,1208,1705,2009,2019,2014,2016,1879,1915,1925,1826,2048,2039,2051,2034,1896,1813,1741,1872,1815,1824,1728,1809,1788,1932,1948,1940,1900,1908,1302,1309,1435,1627,1187,1247,1211,1402,1192,1225,1253,1304,1778,1163,1191,1491,1568,945,765,1062,1409,1339,720,924,1748,1599,781,790,1542,1636,1319,1410,1453,1933,1757,1773,1800,1816,1754,1815,1877,1782,1717,1663,1685,1659,1826,1747,1824,1810,1770,1454,1390,1451,1582,1451,1399,1427,1493,1604,1498,1425,1505,1625,1524,1467,1493,1747,1978,1979,1931,1934,1996,1985,1964,2011,1917,1768,1765,1734,1846,1644,1561,1577,1677,1927,1875,1799,1898,1849,1823,1793,1811,1961,1891,1843,1889,1935,1795,1807,1769,1822,1622,1620,1476,1631,1156,1276,1315,1693,1116,1283,1195,1388,1510,1152,1256,1610,1829,1785,1758,1779,1938,1778,1779,1761,1873,1831,1835,1814,1834,875,882,867,721,1229,1171,1151,1176,1281,1222,1235,1165,1406,1287,1395,1356,1312,1882,1842,1863,1826,1901,1819,1857,1848,1919,1904,1923,1913,1900,1917,1918,1943,1938,1811,1827,1874,1794,1804,1839,1731,1629,1684,1634,1927,1797,1840,1915,1860,1835,1900,1714,1479,1383,1466,1560,1482,1714,1746,1548,1543,1708,1616,1691,1725,1788,1739,1786,1848,2018,2050,2057,1879,1998,1976,1965,1952,1992,1969,1945,1870,1529,1102,1455,1184,1418,1782,1780,1717,1782,1580,1484,1584,1555,1771,1776,1778,1759,1818,1808,1846,1792,1821,1680,1700,1701,1644,1628,1795,1813,1678,1505,984,1111,894,1456,1026,918,843,1244,1071,1106,1069,1025,941,623,644,481,776,704,744,703,908,886,1328,1165,976,1364,1356,1462,1354,1352,1469,1462,1724,1423,1296,1606,1653,1367,1585,1687,1617,1628,731,245,223,207,820,508,431,464,1059,2035,2036,2042,2041,2045,2041,2035,2017,2046,1969,1925,1975,1898,1911,1925,1906,1939,1349,1376,1432,1431,1324,1155,1177,1121,1315,1456,1348,1518,1482,1871,1817,1837,1859,1906,1797,1786,1831,1875,1770,1732,1749,1822,1783,1746,1719,1711,1353,1482,1491,1433,1435,1457,1554,1468,1646,1888,1893,1858,1857,1233,1270,1237,1286,1896,1793,1783,1819,1621,1414,1437,1472,1637,2022,2034,2036,2020,1996,1993,1975,1987,1683,1517,1506,1475,1767,1687,1659,1675,1796,1992,1982,1971,2008,1787,1705,1723,1734,2004,2054,2038,2055,1855,1269,1362,540,533,533,532,1096,1413,1424,1402,1056,1362,1501,1609,1201,1422,1556,1578,1413,1516,1530,1833,1624,1916,1806,1297,1270,1300,1246,1125,958,1031,925,1333,855,979,971,984,1815,1965,1955,1953,1998,2028,1998,1980,2011,1744,1485,1552,1604,1809,1612,1733,1616,1806,1556,1477,1623,1718,1673,1687,1718,1625,1539,1667,1631,1451,1478,1528,1582,1487,1661,1894,1900,1849,1868,1922,1889,1857,1877,1874,1478,1459,1480,1926,1975,1964,1988,2009,1823,1790,1792,1778,1879,1902,1905,1892,1632,1425,1472,1383,1453,1459,1533,1481,1469,1514,1721,1684,1609,1541,1559,1583,1552,1655,1739,1606,1755,1738,1688,1716,1718,1714,1685,1670,1525,1676,1655,1655,1522,1690,1727,1487,1512,1582,1518,1600,1479,1638,1756,1442,1506,1517,1510,1478,1486,1606,1699,1432,1343,1220,1548,1494,1661,1680,1448,1664,1472,1625,1764,1744,1553,1651,1378,1238,1141,1294,1292,1338,1233,1409,1685,1389,1372,1374,1213,1162,1134,1276,1192,1402,1476,1372,1370,1568,1340,1213,1359,1877,1757,1737,1504,1239,1002,1042,864,994,1077,1169,1326,1292,1632,1614,1598,1739,1881,1076,1147,1014,984,790,629,1257,1096,1419,1217,1280,1250,1436,1578,1714,1820,1995,1670,1780,1790,1560,1271,1246,1261,1300,1273,1315,1351,1238,1224,1292,1287,1194,1752,1565,1685,1675,1502,1403,1596,1762,1573,1571,1232,1188,1273,1233,1259,1324,1472,1637,1602,1323,1316,1323,1248,1084,1255,1305,1488,1727,1693,1637,1550,1365,1464,1348,1553,1591,1568,1272,1281,1221,1205,1207,1248,1566,1752,1650,1765,1541,1574,1725,1602,1519,1632,1517,300,336,1665,1559,294,295,1647,1536,294,283,1677,1544,297,279,1676,1564,316,279,1608,1582,312,261,1353,1214,1329,1230,1449,1252,1300,1280,1421,1284,1304,1321,1377,1335,1279,1351,1281,1447,1493,1302,1227,1258,1224,1259,1252,1264,1348,1382,1209,1183,1217,1168,1223,1194,1244,1507,1253,1241,1254,1254,1241,1286,1253,1259,1917,1701,1791,1686,1663,1644,1868,1957,1338,1286,1326,1386,1333,1376,1353,1291,1391,1312,1405,1306,1377,1390,1415,1362,1594,1746,1633,1606,1578,1592,1605,1477,1322,1353,1380,1401,1537,1522,1539,1449,1605,1790,1839,1636,1586,1592,1615,1613,1503,1381,1306,1373,1412,1493,1517,1559,1412,1580,1733,1863,1667,1589,1579,1618,1577,1486,1403,1303,1390,1384,1464,1541,1537,1394,1560,1704,1897,1682,1583,1596,1646,1593,1502,1462,1273,1348,1414,1458,1569,1536,1421,1504,1725,1846,1155,1206,1055,848,871,1075,1006,1019,1096,1293,1237,1192,894,989,1057,1063,1637,1185,1233,1071,871,882,1038,1020,1007,1101,1300,1240,1191,895,977,1078,1012,1592,1943,1901,1933,1960,1973,1934,1963,1902,1874,1788,1786,1869,1881,1967,1930,1940,1447,1983,1966,1949,1968,2006,1978,1911,1962,2001,1767,1761,1770,1760,1788,1736,1838,1748,1756,1774,1788,1756,1851,1499,1955,1992,1951,1891,1870,1970,1798,859,807,1737,1929,1990,1979,2001,1933,2002,1982,1948,2015,1946,1974,1979,1940,1977,1952,1947,1984,1580,1554,1565,1579,1573,1552,1565,1577,1775,1686,1640,1675,1565,1868,1813,1824,1800,1824,1484,1596,1490,1552,1659,1679,1700,1616,1733,1613,1707,1707,1859,1813,1863,1820,1876,1646,1717,1641,1635,1858,1800,1857,1814,1762,1569,1619,1547,1639,1640,1757,1643,1699,1715,1734,1778,1777,1678,1556,1732,1705,1767,1489,1784,1756,1667,1641,1819,1732,1609,1695,1605,1760,1564,1597,1631,1733,1628,1638,1015,1908,1894,1385,1617,1958,1871,1703,1555,1853,2010,2007,1773,1712,1362,1049,1113,1253,1237,1717,1594,1521,1484,1432,1485,1457,1472,1641,1279,1037,811,1008,1292,1074,995,1054,1065,1507,1827,1813,1883,1749,1901,1767,1884,1832,1820,1664,1637,1725,1619,1774,1743,1683,1886,1835,1783,1863,1797,1877,1791,1877,1804,1843,1690,1662,1794,1617,1792,1737,1689,1867,1744,1899,1826,1881,1852,1863,1895,1833,1959,1954,1921,2001,1881,1972,1966,2034,1934,1941,1743,1691,1794,1771,1925,1827,1805,1738,1695,1412,1203,1617,1493,1777,1388,1018,1230,1027,765,255,932,1322,1235,1374,1262,1410,1327,1295,1349,1312,1449,1290,1311,1313,1307,1483,1329,1317,1341,1403,1441,1593,967,1640,1523,1873,1940,2016,2046,1992,2007,1976,1928,1816,1616,1506,1511,1631,1625,1674,1686,1803,1749,1738,1713,1683,1653,1569,1590,1645,1207,1700,1845,1951,1855,1667,1685,1756,1959,2027,1883,1777,1651,1880,1919,1893,1787,1560,1701,1942,1915,1885,1717,1640,1921,1947,2002,1935,1843,1640,1824,1866,1889,1849,1589,949,1002,972,1075,1569,1525,1621,1651,1649,1628,1619,1700,1486,1874,1689,1703,1727,1640,1698,1661,1639,1700,1652,1811,1854,1764,1762,1719,1664,1803,1660,1642,1721,1688,1785,1626,1672,1647,1596,1867,1868,1875,1929,1904,1981,1904,1768,1660,1767,1661,1685,1938,1909,1897,1886,1912,1966,1945,1899,1953,1943,1858,1787,1774,1791,1806,1991,1909,1906,1891,1902,1851,1884,1905,1335,1145,1303,1651,1621,1664,1590,1790,1864,1838,1879,1832,1876,1822,1834,1916,1821,1892,1896,1534,600,515,580,1241,1038,1222,1270,1237,1038,1689,1740,1585,1633,1689,1737,1485,1697,1745,1251,1712,1530,1335,1088,1646,1642,1658,1716,1758,1687,1785,1598,1600,1565,1357,1512,1476,1519,1435,1420,1547,1396,1465,1387,1558,1481,1800,1807,1842,1906,1860,1829,1837,1843,1887,1837,1835,1899,1902,1881,1875,1862,1941,1996,1973,1931,1886,1895,1941,1916,1908,1924,1933,1935,1874,1861,1849,1916,1893,1853,1565,1414,1409,1819,1635,1580,1623,1606,1607,1652,1632,1755,1649,1665,1635,1663,1636,1634,1626,1628,1761,1667,1645,1638,1629,1673,1634,1655,1707,1884,1875,1871,1865,1891,1858,1851,1840,1945,1821,1838,1824,1842,1854,1848,1843,1867,1962,1858,1856,1861,1863,1834,1871,1861,1873,1333,1422,1433,1378,1374,1425,1606,1398,1332,1410,1493,1418,1467,1594,1882,1897,1840,1724,1804,1829,1870,1903,1816,1657,1737,1731,1731,1667,1716,1730,1642,1635,1702,1726,1665,1774,1716,1783,1557,1717,1770,1853,1811,1875,1657,1679,1889,1884,1936,1856,1789,1635,1815,1759,1794,1816,1479,1660,1720,1677,1800,1701,1625,1832,1722,1848,1748,1801,1647,1708,1635,1619,1763,1589,1136,1292,1258,1196,1292,1260,1060,1704,1578,1494,1592,1678,1598,1526,1610,1565,1547,1569,1521,1767,1809,1911,1958,1860,1279,1849,1431,1423,1774,1792,1829,1735,1707,1610,1467,1708,1702,1786,1623,1348,1313,1861,1836,1797,1471,1498,1446,1436,1677,1561,1486,1513,1481,1517,1490,1546,1527,1543,1266,1444,1547,1564,1544,1490,1476,1488,1684,1526,1534,1403,1372,1453,1508,1798,1760,1878,1807,1829,1840,1809,1741,1720,1556,1705,1781,1687,1780,1700,1735,1764,1734,1737,1889,1941,1851,1871,1767,1885,1819,1753,1698,1644,1715,1720,1781,1697,1694,1702,1815,1765,1603,1828,1702,1728,1677,1666,1678,1720,1669,1753,1689,1767,1684,1664,1739,1716,1650,1788,1563,1819,1653,1422,1434,1758,1748,1672,1686,1709,1426,1497,1543,1498,1514,1479,1579,1497,1559,1792,1740,1684,1749,1659,1703,1763,1758,1623,1665,1659,1680,1623,1615,1616,1650,1701,1680,1647,1610,1708,1618,1657,1637,1739,1661,1649,1642,1678,1650,1634,1651,1647,1696,1618,1658,1625,1705,1645,1616,1597,1733,1609,1660,1707,1773,1690,1645,1618,1620,1721,1624,1671,1666,1804,1638,1590,1622,1704,1659,1806,1843,1698,1632,1723,1834,1656,1707,1767,1833,1770,1791,1885,1876,1886,1994,1952,1966,1933,1978,1839,1838,1904,1959,2009,2014,2018,1890,1887,1883,1803,1860,1998,2019,2011,1996,1989,1962,1921,1902,1878,1940,1919,1924,1964,1996,1765,1851,1897,1922,1894,1819,1586,1610,1817,1868,1813,1632,1639,1610,1629,1637,1693,1476,1418,1345,1321,1431,1523,1473,1434,1398,1452,1538,1504,1357,1388,1526,1530,1346,1692,1696,1732,1753,1666,1710,1693,1759,1684,1692,1758,1813,1666,1685,1641,1690,1660,1726,1649,1688,1642,1737,1675,1699,1636,1695,1719,1623,1639,1663,1974,1857,1925,1925,1895,1930,1891,1873,1937,1792,1801,1814,1806,2029,1990,2020,2040,2048,2032,2028,2036,2025,2038,2024,2051,2057,2051,2056,2039,2036,1987,1848,1870,1914,1937,1908,1878,1857,1881,1484,1408,1466,1536,1744,1611,1533,1587,1629,1501,1640,1610,1444,1523,1611,1540,1543,1634,1530,1405,1536,1426,1678,1737,1948,1694,1672,1679,1701,1941,1865,1869,1788,1766,1737,1797,1831,1917,1405,2004,1951,2022,1954,1909,1898,1749,1712,1635,1770,1711,1790,1756,1777,1665,1753,1721,1670,1708,1706,1330,1513,1512,1518,1481,1562,1517,1528,1482,1552,1513,1497,1505,1550,1515,1514,1512,1564,1302,1296,1290,1286,1663,1940,1911,1914,1875,1957,1935,1928,1957,1451,1319,1270,1324,1328,1294,1290,1383,1652,1496,1448,1559,1683,1540,1507,1632,1565,1857,1613,1678,1748,1381,1650,1691,1669,1887,1224,1241,1280,1259,1286,1331,1229,1182,1499,1173,955,1183,1085,1285,1044,1188,1483,1213,1271,1234,1189,1304,1196,1378,1336,1662,1375,1308,1293,1366,1302,1305,1291,1480,1957,1421,1667,1759,1639,1543,1443,1531,1978,1850,996,1246,1114,1283,1241,1244,1939,2003,1865,1522,1819,1830,1803,1474,1921,1737,405,656,502,454,623,479,561,437,887,722,1329,1431,1371,1226,1153,699,886,444,1148,1413,1521,1489,1422,1394,446,1358,942,1402,1387,1304,1348,1218,1179,1593,1844,1747,1763,1799,1007,56,602,1026,766,502,689,423,793,468,647,928,1036,670,1386,1420,1412,1432,1427,1415,1702,1660,1645,1613,1551,1520,1807,1698,1264,1084,1214,1172,1319,1402,1210,1239,1408,1459,1609,1565,1679,1689,1412,1317,1429,1276,134,25,30,25,966,790,1134,1039,1647,1612,1632,1603,1508,1365,1619,1559,1537,1521,1883,1911,1922,1915,1913,1912,973,939,1480,1497,945,928,1179,1232,1431,1432,1488,1482,1555,1509,1731,1774,1538,1578,1548,1538,1587,1513,1553,1572,2029,2057,2055,2032,1893,1856,2046,1998,1790,1778,1920,1876,2013,2002,2026,1996,2018,1993,2010,1980,2047,2049,1780,1729,1990,2000,2015,1989,1703,1681,1272,1211,1224,1207,1932,1996,1708,1722,1877,1893,1793,1765,1748,1760,1959,1934,1978,1961,1949,1994,1993,1969,1590,1521,1549,1512,1556,1546,1569,1495,1432,1368,1322,1306,1283,1232,1398,1259,1985,2000,1987,1950,2004,1960,1937,1902,2005,1990,1675,1709,1626,1672,1652,1664,327,290,1039,1366,1370,1168,948,1050,967,1020,1573,1720,1625,1661,1739,1723,1542,1505,1611,1561,1583,1558,1551,1465,1387,1379,1115,1086,1311,1321,1313,1195,1445,1419,1572,1585,1461,1441,1383,1406,974,946,1525,1587,1097,901,1297,1316,1469,1437,1492,1541,1222,1208,1434,1492,1610,1673,1825,1846,1784,1823,1599,1544,1637,1605,1598,1572,1553,1507,1546,1504,1260,1307,1531,1581,1418,1376,1407,1384,1407,1356,705,541,475,425,1406,1493,1645,1582,1417,1438,1530,1515,1425,1387,1175,1125,1319,1323,1503,1488,1134,988,346,273,1685,1819,1843,1800,1573,1536,997,1017,1509,1537,1578,1577,1583,1584,1573,1580,1871,1792,1818,1759,1858,1828,1835,1824,1253,1369,1385,1356,1435,1418,1633,1663,1615,1541,1514,1495,1523,1546,1489,1476,1875,1946,1564,1526,636,717,895,849,1120,1562,1644,1665,1547,1464,1501,1362,1190,1123,713,650,856,809,675,600,1267,1568,537,521,535,486,1744,1839,1173,1113,1067,1034,1366,1389,1162,1036,973,909,1365,1438,1462,1430,1430,1435,1688,1703,1693,1650,1882,1897,1591,1565,1026,1008,1219,1143,954,943,958,886,1068,979,1239,1190,568,512,641,632,546,528,643,636,534,529,641,631,545,529,632,589,506,487,559,544,1810,1883,1144,1039,1081,1032,1082,1032,1150,1061,1801,1748,1667,1711,1649,1677,1726,1690,1196,1167,1633,1666,1665,1731,1886,1851,310,194,332,288,217,193,369,230,203,121,198,42,196,142,239,293,318,270,1365,1477,1581,1681,1078,1096,1073,1113,1164,1229,1498,1504,1471,1451,1880,1854,1718,1689,1550,1401,1615,1613,1415,1360,1302,1264,1382,1700,1624,1202,1557,1468,1450,1505,1499,1158,1443,1440,1433,1468,1521,1528,1505,978,1271,1357,1434,1105,1303,1247,1130,1077,1278,1536,1517,1484,1515,1536,1521,1529,1321,750,712,552,641,752,737,659,618,598,612,636,637,729,640,698,739,691,738,791,767,723,562,531,516,1857,2055,1776,1745,1731,1667,1683,1702,1714,1726,1687,1693,1731,2047,1819,1757,1703,1689,1756,1728,1753,1370,976,957,1791,1628,1565,1922,1634,1480,1452,1487,1477,1463,1472,1492,1472,1501,649,584,545,614,679,485,526,545,645,573,591,589,619,515,358,396,521,489,230,458,600,366,320,526,191,587,615,1983,1910,1654,1653,1655,1693,1659,1664,1680,1689,1685,1697,1675,1742,2057,1646,1687,1670,1749,1744,1689,1712,1476,666,799,816,1904,1810,1677,1696,1591,1805,1718,1517,1470,1512,1509,1493,1497,1504,1498,1492,1498,1515,1491,1479,1509,1476,1506,1490,1499,1485,1480,959,440,432,526,650,658,503,665,619,456,359,493,530,480,386,394,442,530,589,628,650,685,608,622,678,606,528,614,456,396,413,641,357,473,372,561,475,358,632,427,503,404,597,550,581,662,350,484,499,405,503,518,267,492,540,416,515,329,293,405,1358,1985,2023,2025,1995,2041,1856,1698,1686,1692,1687,1712,1706,1707,1675,1696,1683,1713,1691,1686,1676,1693,1712,1686,1719,1729,1707,1707,1671,1718,1667,1714,1676,1790,2048,2048,1976,1687,1652,1680,1698,1749,1738,1657,1644,1738,1759,1694,1673,1683,1750,1745,1682,1642,1632,1707,1620,1167,922,897,829,815,673,1011,1091,1039,1089,1208,1170,1010,1026,1074,1002,898,890,1224,595,1857,1987,1940,1804,1645,1507,1518,1481,1498,1517,1511,1484,1455,1526,1478,1487,859,587,324,444,429,426,510,344,523,624,619,490,552,625,534,303,329,134,201,534,648,531,515,376,560,295,512,528,130,374,1032,2029,2003,1759,1711,1672,1710,1689,1705,1709,1679,1684,1756,1731,1689,1680,1933,2030,1728,1670,1670,1702,1752,1736,1700,1848,1724,1631,1211,928,1546,1256,1836,1826,1417,1630,1490,1488,1490,1487,1487,1492,1487,1455,1473,837,218,239,134,431,532,254,225,311,423,228,448,355,438,135,109,196,296,391,373,439,410,242,337,518,504,454,251,856,1997,2043,1811,1708,1698,1701,1683,1683,1687,1672,1681,1699,1721,1705,1732,2048,1930,1797,1877,1695,1742,1694,1699,1800,1859,1830,1794,670,525,779,941,921,1032,1685,1648,1769,1567,1497,1494,1492,1502,1479,1275,419,363,331,383,487,168,387,486,457,373,281,483,279,252,298,417,640,1967,1893,1693,1704,1670,1666,1696,1681,1702,1842,1936,1751,1708,1652,1733,1827,1847,1297,842,1581,1320,1690,1584,1499,1494,1488,864,613,437,495,512,481,564,499,501,299,310,431,1833,1725,1653,1651,1655,1679,1861,1697,1702,1629,1718,814,1807,1641,1541,1513,1471,1519,1503,1493,1499,1499,1484,1478,1522,1490,1503,1504,1496,1501,1490,820,469,493,374,317,442,447,442,349,359,522,527,418,417,387,348,455,467,391,394,247,183,308,322,332,220,183,289,350,305,194,333,332,371,232,430,326,322,393,319,426,420,469,302,428,238,271,383,315,351,499,462,393,1668,1975,1922,1954,2039,1650,1664,1659,1658,1689,1703,1677,1680,1678,1733,1684,1682,1671,1676,1673,1657,1679,1669,1691,1652,1676,1681,1676,1757,2048,2048,1747,1610,1639,1637,1655,1617,1823,1643,1738,1700,1703,1640,1580,1653,1669,1710,1619,1510,518,657,510,642,580,982,1176,1564,1159,1125,1042,1145,1577,1398,1488,1467,1375,1301,1840,1829,1820,1823,1655,1585,1483,1457,1478,1487,1506,1483,1505,1492,1499,1504,1487,627,507,565,660,593,607,385,521,301,282,375,371,359,476,583,456,411,420,509,552,601,640,576,452,465,405,284,527,632,672,696,512,282,417,435,421,223,568,2006,1973,2026,1746,1709,1689,1689,1703,1692,1667,1693,1717,1690,1676,1743,1724,1706,1712,1698,1896,2048,1925,1762,1750,1730,1795,1801,1730,1832,1707,1727,1838,1756,1738,1830,994,915,907,1370,1598,1536,1684,1705,1868,1648,1553,1651,1658,1482,1486,1505,1497,1481,1501,1498,1477,1487,1499,1502,1494,1482,1483,1479,1462,1475,1480,1499,1513,1497,809,632,601,659,489,550,537,610,591,520,588,394,471,510,542,513,481,361,539,455,607,503,538,607,456,425,415,542,496,630,402,389,497,442,344,589,294,279,576,255,566,495,519,501,180,435,518,312,317,482,152,309,406,437,411,529,397,270,434,530,441,178,395,440,476,354,187,435,629,448,431,368,505,400,662,599,1464,2048,2057,2044,2057,2048,2048,1821,1743,1740,1751,1763,1784,1745,1723,1725,1711,1742,1727,1735,1699,1753,1758,1745,1761,1751,1751,1746,1761,1735,1740,1713,1763,1759,1776,1770,1739,1744,1771,1756,1722,1744,2016,2048,2048,2048,2039,1791,1782,1798,1841,1882,1840,1715,1827,1806,1805,1765,1735,1824,1838,1808,1802,1806,1836,1835,1881,1806,1695,1822,1853,1847,1859,1831,1853,1851,1831,1902,1801,1707,908,854,832,753,832,1176,1394,1521,1055,1328,1355,1424,997,854,823,1125,1345,1257,1350,1733,1968,1921,1791,1699,1537,1577,1585,1559,1588,1506,1470,1497,1519,1527,1500,1450,1454,1496,1503,1486,1471,1495,1508,1537,1470,1488,1510,1482,1500,1289,549,584,609,436,546,398,438,562,646,643,595,647,687,593,442,550,565,598,494,292,475,486,565,549,537,466,447,403,469,635,237,240,279,418,499,303,347,372,381,410,509,407,239,409,429,432,458,239,277,303,414,481,183,224,163,344,166,512,505,553,465,532,450,513,1374,2025,1909,1971,1977,1989,1703,1649,1687,1680,1669,1679,1722,1701,1693,1691,1666,1639,1662,1702,1704,1675,1696,1707,1681,1691,1669,1690,1678,1668,1685,1662,1667,1660,1948,2048,2048,1687,1679,1699,1727,1725,1825,1681,1691,1653,1733,1766,1736,1716,1696,1756,1738,1778,1644,1697,1770,1729,936,879,564,607,601,684,829,1061,1079,678,741,595,690,720,770,566,654,792,657,285,653,706,931,775,546,501,563,1510,815,1160,1656,1733,1796,1753,1744,1660,1604,1551,1613,1604,1468,1477,1489,1481,1477,1466,1482,1468,1481,1448,1498,1469,1479,1458,1477,1478,1474,1471,1459,1473,1481,1491,1481,1485,1494,1487,1474,1474,1441,1478,1454,1456,1459,1450,1472,1485,1455,1460,1481,1439,1493,1492,1490,1464,1464,1467,1484,1450,1475,1429,1421,1418,1457,1474,1500,1454,1451,1489,1460,1473,1468,1485,1485,1484,1468,1472,1452,1473,1473,1475,1481,1476,1462,1418,880,582,360,611,529,452,379,474,526,388,252,456,620,461,576,376,516,572,637,523,650,545,514,563,475,378,560,546,594,511,390,479,494,514,557,392,493,492,484,506,630,613,589,610,434,285,299,620,447,510,564,641,535,547,551,495,543,475,405,422,573,440,455,532,548,479,412,501,432,531,491,489,352,540,549,558,576,671,562,617,505,615,486,586,623,325,337,389,411,504,507,514,420,286,363,578,193,458,432,540,539,185,572,554,490,542,482,467,333,306,541,201,208,239,472,589,604,494,298,452,373,333,296,343,344,530,405,439,511,504,501,561,603,467,523,592,510,509,480,362,526,641,493,533,532,478,450,480,254,260,607,369,541,555,511,537,505,358,338,526,441,535,452,447,419,470,439,589,637,498,479,443,462,468,475,649,578,452,356,431,472,488,449,654,445,367,337,377,287,289,411,372,318,468,221,441,494,574,597,342,434,428,449,528,552,425,524,571,440,556,503,451,475,452,159,392,497,486,621,557,432,443,565,512,437,481,613,581,465,466,495,571,533,461,445,534,350,99,360,587,591,524,533,478,561,538,499,519,216,1651,1943,1935,1919,1928,1920,1987,2045,1946,2012,1948,1976,1982,1917,1997,1978,1965,1932,2048,2057,1650,1646,1628,1645,1693,1695,1724,1712,1706,1675,1700,1680,1686,1678,1675,1678,1669,1680,1684,1681,1674,1701,1674,1690,1692,1695,1681,1679,1670,1669,1683,1708,1678,1685,1686,1669,1698,1666,1694,1685,1679,1647,1650,1655,1684,1691,1674,1669,1682,1656,1633,1677,1700,1661,1671,1691,1703,1702,1687,1691,1690,1663,1680,1672,1629,1705,1707,1718,1655,1663,1649,1659,1690,1674,1648,1679,1666,1647,1668,1674,1674,1674,1681,1654,1668,1664,1728,1703,1689,1682,1676,1712,1684,1674,1671,1720,1690,1697,1684,1681,1659,1663,1677,1715,1678,1657,1705,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2017,1673,1561,1673,1733,1771,1746,1773,1674,1725,1714,1685,1639,1698,1722,1688,1725,1723,1728,1659,1729,1707,1741,1753,1668,1673,1669,1713,1717,1674,1671,1616,1658,1663,1703,1722,1599,1712,1729,1694,1728,1758,1721,1753,1673,1739,1632,1752,1746,1697,1653,1661,1744,1778,1556,1481,1567,1540,1738,1708,1675,1761,1811,1754,1717,1733,1670,1669,1803,1711,1577,1714,1762,1736,1793,1722,1682,1444,857,786,796,802,769,771,786,617,659,594,529,760,549,519,271,549,618,743,754,870,538,713,633,720,800,820,667,722,804,761,630,990,912,599,796,881,770,735,724,618,736,567,679,781,737,840,815,670,719,763,645,395,374,581,734,685,722,558,499,891,550,913,973,846,693,480,470,637,601,709,695,676,653,471,593,538,615,662,862,635,782,956,591,528,765,743,660,401,783,787,939,780,798,657,609,593,679,850,678,627,631,691,683,777,675,541,533,422,415,982,853,878,847,774,611,813,457,494,989,798,698,681,773,670,602,700,824,680,562,650,678,556,580,766,659,406,315,294,320,284,333,425,308,293,299,308,283,344,419,566,572,679,293,563,582,633,673,645,630,565,804,716,591,691,930,748,461,297,488,466,296,449,338,269,494,416,307,286,279,188,455,557,410,673,638,710,488,276,195,261,270,196,168,221,265,975,1757,1400,1820,1902,1900,1963,1919,1894,1967,1944,1924,1946,1942,1927,1890,1781,1900,1894,1814,1785,1477,1472,1471,1494,1481,1489,1495,1484,1502,1499,782,520,416,546,433,401,533,475,390,356,392,448,531,563,410,564,445,221,465,284,422,395,344,338,470,294,307,457,168,409,364,497,1510,1946,2024,1739,1686,1709,1703,1706,1726,1682,1705,1697,1695,1673,1681,1677,1671,1678,2009,2024,1717,1759,1723,1760,1793,1717,1774,1771,1760,1730,1698,1638,812,738,780,1473,1507,1361,1166,1325,1711,1691,1687,1533,1468,1505,1479,1446,1492,1488,1496,1493,1496,872,197,515,458,376,537,679,529,560,631,553,456,451,400,394,190,545,415,271,481,265,328,573,524,263,422,413,214,430,1998,2048,1913,1679,1697,1694,1723,1729,1689,1702,1687,1716,1688,1700,1689,1712,2048,1904,1623,1731,1818,1831,1812,1743,1740,1838,1765,1758,1800,1474,548,843,1043,923,1206,1498,1378,1649,1719,1700,1552,1627,1494,1510,1473,1494,1469,1499,1498,1506,1482,1451,1474,1472,1493,1460,1480,1476,1494,1488,1476,1498,1459,1465,1481,1470,1498,1467,1488,1491,1481,1488,1474,1493,1498,1496,1479,1496,1217,494,542,558,668,755,620,582,573,612,506,628,607,622,598,630,616,629,549,544,641,739,588,592,578,606,661,584,606,597,599,359,601,564,652,516,528,623,526,500,575,512,529,587,574,475,435,267,227,480,424,411,546,420,406,455,685,579,505,249,201,387,172,162,202,569,399,540,559,414,634,602,517,650,592,625,593,462,440,457,558,602,581,533,600,380,374,547,485,471,419,306,219,524,573,677,537,541,358,524,602,574,520,536,674,564,612,485,501,967,2001,2007,1971,1993,1978,1938,1963,1958,2027,1806,1716,1717,1723,1703,1708,1714,1705,1710,1704,1689,1699,1678,1715,1711,1698,1679,1688,1673,1713,1668,1645,1664,1618,1678,1662,1689,1681,1697,1686,1687,1658,1701,1684,1703,1697,1700,1653,1671,1691,1686,1661,1669,1664,1665,1667,1825,2048,2048,2048,2048,1802,1751,1737,1727,1621,1716,1722,1814,1743,1826,1723,1712,1690,1703,1685,1668,1662,1711,1724,1727,1731,1683,1717,1757,1787,1651,1625,1672,1717,1696,1729,1638,1435,935,882,880,809,805,859,843,827,722,951,1026,959,811,968,839,1141,1319,1209,1097,972,1120,1203,1082,1289,1082,1363,1415,1422,1178,967,1312,1000,796,787,455,785,607,335,555,969,1021,965,1106,1218,746,772,625,715,1070,1262,865,984,1439,1595,1819,1853,1855,1871,1935,1929,1918,1930,1669,1564,1483,1486,1485,1500,1480,1494,1444,1489,1493,1480,1404,487,314,297,554,497,366,404,567,413,221,194,153,273,322,290,442,410,422,466,343,287,401,467,305,426,328,335,377,390,297,315,389,398,275,1869,1976,2016,1814,1691,1678,1679,1702,1681,1677,1708,1704,1713,1684,1699,1717,1692,1674,1925,2048,1702,1693,1737,1750,1741,1719,1809,1813,1713,1746,1697,1694,1054,637,1024,1536,1306,608,822,1291,1827,1818,1665,1620,1485,1479,1501,1479,1507,1519,1092,491,570,562,514,443,490,517,427,409,452,352,317,263,361,415,450,433,250,422,526,158,334,1683,1998,1763,1713,1714,1679,1698,1708,1648,1686,1699,1708,1884,1943,1742,1835,1727,1779,1769,1724,1823,1850,874,817,1340,1708,1458,1449,1539,1658,1564,1474,1358,1460,1483,1475,1502,1478,1463,1472,1488,1503,1505,1487,1494,1496,1490,713,500,454,613,582,472,505,473,435,654,528,516,533,642,377,351,433,394,333,406,604,422,424,430,278,189,430,634,585,592,555,555,414,581,490,260,611,297,627,562,498,392,524,441,526,1331,1984,2034,1989,1832,1701,1712,1698,1704,1667,1694,1668,1661,1742,1677,1687,1679,1701,1738,1725,1716,1738,1738,1723,1810,2048,2048,1709,1694,1706,1715,1773,1636,1705,1699,1613,1692,1786,1797,1713,1797,1777,1667,882,809,839,1244,1730,1414,1407,1560,1485,1617,1568,1865,1791,1628,1543,1370,1519,1516,1486,1466,1478,1485,1480,1474,1466,1480,1490,1501,1467,1488,871,512,650,525,496,376,518,583,568,403,412,429,385,482,250,305,504,551,459,521,530,457,564,393,313,231,198,351,543,434,270,145,128,275,336,249,299,475,478,338,523,280,249,355,282,1054,1960,1865,1988,1913,1696,1673,1691,1665,1691,1703,1682,1708,1665,1669,1652,1709,1692,1657,1688,1657,1690,1692,1692,1741,2048,2048,1763,1702,1732,1697,1738,1710,1806,1662,1693,1708,1623,1683,1715,1720,1755,1815,692,837,459,653,959,765,820,773,834,845,551,713,1370,1573,1754,1663,1657,1612,1610,1448,1498,1507,1494,1502,1517,1429,1461,1500,1484,1508,1519,1482,1496,1501,1490,1470,1443,1500,1509,1518,1106,511,598,389,343,505,518,557,516,533,411,346,514,596,197,376,661,502,482,462,437,447,183,173,298,618,544,479,569,529,513,456,393,396,397,521,567,523,259,407,475,353,394,348,144,147,480,534,375,574,484,350,432,423,451,320,362,243,188,431,393,415,414,443,468,226,509,373,469,433,540,2027,2028,2057,2004,2025,2036,1699,1714,1671,1668,1662,1703,1661,1667,1718,1687,1691,1688,1679,1698,1654,1685,1681,1693,1707,1698,1702,1666,1669,1646,1720,1722,1674,1684,1702,1722,1698,1867,2048,2048,2048,1704,1757,1616,1679,1722,1634,1714,1791,1720,1791,1689,1715,1735,1689,1739,1722,1720,1715,1679,1716,1821,1709,1702,1745,1843,1587,743,496,627,624,526,822,619,823,539,219,293,793,725,542,467,422,379,344,449,494,292,113,742,1339,673,1251,1576,1716,1829,1728,1795,1668,1389,1494,1489,1502,1517,1498,582,326,235,233,421,347,192,191,258,227,356,459,463,271,466,469,855,1985,1793,1700,1700,1715,1673,1682,1666,1709,1992,1757,1762,1798,1710,1633,1344,818,951,1209,1601,1718,1569,1597,1503,1514,1503,1477,1509,1493,1463,1503,1482,1478,1480,1485,1509,1505,1465,1494,1484,1190,583,621,640,433,521,535,531,523,519,587,562,485,562,597,582,489,502,378,574,556,572,538,525,589,455,437,521,584,389,466,407,422,432,457,501,403,479,497,480,353,603,438,559,613,530,606,561,411,484,584,449,371,613,479,469,575,618,598,586,778,2020,2026,2047,2025,1987,1703,1713,1708,1726,1685,1694,1707,1700,1698,1678,1674,1669,1700,1700,1711,1678,1723,1704,1686,1669,1656,1650,1709,1690,1724,1688,2025,2048,1957,1811,1715,1827,1689,1695,1681,1640,1756,1703,1896,1749,1834,1768,1645,1687,1848,1798,1668,919,771,843,772,678,1433,1736,1302,1220,1689,1761,1536,1389,919,1703,1865,1852,1773,1825,1684,1632,1383,1548,1503,1483,1493,1485,1476,1489,1471,1471,1510,1482,1452,1485,1493,1499,1519,1501,1504,1484,1487,1512,839,257,184,214,400,470,538,473,428,471,556,616,451,297,446,382,510,252,498,554,549,381,456,218,232,492,176,415,442,517,550,484,540,400,534,454,275,492,480,353,547,579,532,623,293,204,365,352,530,383,452,510,588,482,666,646,473,526,531,367,355,451,385,140,321,385,429,392,270,927,1999,2045,2016,2018,2048,1752,1687,1684,1716,1657,1656,1667,1684,1656,1695,1691,1666,1683,1683,1707,1711,1701,1680,1680,1699,1709,1701,1698,1697,1731,1696,1694,1690,1649,1705,1949,2048,2048,1936,1639,1743,1757,1697,1736,1614,1760,1741,1690,1757,1770,1794,1804,1689,1720,1738,1710,1689,1767,1662,1661,1581,1482,749,755,753,812,780,722,631,624,728,721,949,1037,1044,934,718,820,820,1038,1056,890,1071,967,1050,814,968,909,766,417,837,313,245,1180,1246,1617,1852,1826,1840,1825,1696,1510,1520,1529,1504,1489,1488,1485,1511,1492,1486,1514,1401,397,489,214,288,450,588,417,494,413,506,435,498,295,469,368,380,450,378,381,343,396,467,378,397,432,241,339,217,342,306,426,474,159,263,248,850,1999,1972,1942,1673,1685,1687,1686,1654,1682,1670,1682,1674,1664,1696,1679,1694,1710,1691,1883,2048,1870,1777,1741,1749,1713,1704,1711,1670,1644,1754,1751,1728,1709,1576,549,671,695,1040,1184,1081,876,1536,1894,1901,1740,1529,1550,1465,1503,1502,1491,1501,1497,1498,1492,1501,1493,1494,1511,1515,1509,1491,1478,1494,1502,1513,1493,1482,1502,1500,1478,1504,1521,1510,1466,1508,1513,1497,1468,1121,428,551,531,288,564,603,570,624,564,623,529,426,447,574,469,542,457,564,596,639,609,527,538,585,439,500,518,617,624,336,448,463,482,615,443,484,446,498,608,568,333,656,384,450,305,245,367,437,390,310,418,507,204,579,306,560,582,586,308,502,531,586,594,578,515,486,503,528,548,516,444,446,410,282,545,540,469,402,486,401,449,564,293,496,574,289,396,338,278,608,442,385,404,413,354,459,559,311,494,338,207,328,359,399,321,293,456,263,292,442,525,2019,2026,2047,1977,1981,2028,1998,2022,2048,1925,1678,1684,1679,1674,1696,1689,1674,1714,1730,1687,1731,1713,1730,1725,1718,1739,1741,1724,1713,1719,1706,1681,1702,1675,1692,1680,1673,1683,1707,1706,1706,1672,1670,1665,1666,1699,1705,1723,1727,1759,1731,1755,1680,1647,1707,1696,1693,1651,1687,1716,2048,2048,2048,2048,2048,1785,1706,1655,1699,1590,1696,1737,1734,1695,1814,1736,1771,1739,1759,1691,1704,1696,1728,1691,1654,1700,1589,1673,1716,1766,1690,1703,1665,1603,1676,1670,1717,1790,1665,1789,1683,1562,1643,1342,749,731,838,830,761,557,758,650,613,961,901,881,998,708,395,651,558,839,960,438,771,550,734,756,636,613,641,642,188,566,913,798,832,995,1122,1004,995,878,899,762,494,842,1599,1484,1885,1801,1818,1882,1809,1791,1890,1811,1638,1638,1502,1508,1507,1484,1501,1490,1478,1490,1485,1483,689,417,538,503,383,525,442,504,381,374,329,428,51,120,211,560,545,650,545,531,632,465,313,60,146,447,277,387,290,358,51,158,1249,2051,2049,1864,1681,1684,1707,1699,1712,1734,1738,1698,1662,1689,1709,1708,1719,1872,2048,1923,1833,1789,1841,1745,1761,1750,1782,1707,1783,1825,1818,1444,756,679,937,861,675,972,1356,818,1525,1611,1660,1499,1555,1550,1502,1466,1502,1485,1509,1467,1499,1484,1490,1491,1495,1487,1488,1429,266,328,310,366,353,463,338,387,327,202,471,508,515,557,531,454,475,278,313,399,332,334,412,407,497,280,388,368,360,455,381,344,455,392,408,467,400,174,1802,1957,2043,1901,1646,1678,1674,1716,1692,1705,1691,1720,1725,1695,1712,1669,1649,1643,1662,1639,1898,2048,1782,1655,1738,1877,1880,1848,1751,1805,1872,1849,1735,1679,1691,1384,594,621,690,672,375,406,333,414,375,344,464,453,1155,1415,803,307,1356,1481,1527,1510,1571,1770,1610,1641,1628,1484,1497,1531,1518,1531,1519,1519,1508,1512,1521,1502,1502,1516,1526,1493,1521,1516,1507,1504,1505,1523,1509,1524,1496,1518,1534,1515,1501,1557,1529,1521,1539,1525,1518,1537,1499,1492,1502,1502,1503,1496,1484,1468,1474,1503,1496,1501,982,550,394,623,442,478,637,510,344,699,683,658,713,698,689,693,650,647,659,660,727,726,568,658,618,416,534,571,628,530,710,645,655,678,633,638,583,630,502,637,540,514,698,591,515,649,492,537,539,529,618,580,651,542,613,584,580,533,534,539,554,673,417,439,639,492,581,636,557,666,567,621,602,538,609,462,653,671,523,522,525,640,413,609,537,535,691,578,422,493,670,581,600,667,614,688,718,688,659,646,736,687,732,583,527,691,617,647,604,506,507,613,622,557,650,610,550,616,599,599,602,577,552,464,425,418,558,602,551,524,589,534,533,483,480,602,538,571,452,453,445,577,490,508,560,310,420,597,500,529,457,409,561,2029,2054,2056,2048,2055,2031,2057,2056,2051,2048,2048,2038,2053,1775,1718,1677,1677,1714,1717,1725,1675,1698,1703,1702,1716,1693,1706,1702,1689,1717,1743,1732,1728,1731,1715,1753,1735,1755,1755,1753,1757,1732,1715,1704,1714,1701,1704,1709,1653,1665,1718,1724,1684,1699,1704,1703,1699,1726,1738,1747,1756,1763,1749,1735,1724,1710,1742,1734,1739,1736,1742,1758,1747,1730,1767,1735,1745,1728,1742,1921,2048,2048,2048,2048,2048,2048,2048,1773,1709,1638,1735,1783,1662,1705,1741,1744,1707,1767,1797,1831,1821,1810,1840,1764,1841,1757,1793,1752,1797,1725,1654,1659,1748,1734,1613,1575,1764,1745,1669,1747,1659,1742,1778,1842,1804,1815,1851,1814,1666,1721,1600,1654,1726,1825,1839,1783,1820,1870,1832,1798,1578,853,894,952,896,1014,767,764,875,964,980,1243,1381,1306,1154,1247,1197,1216,1263,1298,1202,1181,1238,983,702,747,876,905,906,1066,1163,1278,582,474,1201,1636,1449,1941,1831,1699,1890,1895,1875,1809,1830,1830,1833,1895,1597,1604,1500,1512,1481,1507,1498,1498,1494,1498,1489,698,64,245,233,50,186,279,362,262,389,285,334,176,355,309,209,153,93,373,425,486,126,397,514,382,477,257,221,428,1953,2039,1908,1682,1715,1693,1709,1706,1660,1688,1735,1718,1709,1694,1677,1658,2048,1969,1772,1766,1561,1815,1700,1791,1750,1769,1862,1841,1737,1133,599,1601,1505,1655,1549,1590,1603,1500,1215,1465,1505,971,465,438,529,544,516,476,1026,1813,1708,1672,1872,1713,1764,989,697,1212,1503,1482,1489,1503,1508,363,299,477,402,611,188,171,438,397,449,115,444,471,1473,1850,1676,1687,1691,1686,1683,1873,1721,1652,1751,1724,1678,726,1307,1754,1759,1595,1442,1508,1472,1509,1500,476,457,353,362,466,353,420,340,564,388,450,381,467,551,462,524,1825,1819,1661,1660,1678,1677,1670,1693,1857,1715,1711,1719,1730,1773,652,680,1150,890,1194,1627,1706,2044,2054,2047,2053,2052,1493,1595,1522,1276,886,811,823,811,892,674,1901,2005,1969,1893,1954,1055,650,1218,1189,1359,1353,1400,1355,1206,970,968,685,1116,1172,1118,1086,753,979,944,986,1049,1037,1025,1173,1078,1186,666,648,811,923,869,778,837,718,805,1996,1860,1047,1068,1041,954,970,1098,1083,1016,997,1054,1150,894,1105,1041,906,1017,802,909,737,802,850,1411,1417,1571,1348,1890,2048,2057,2045,1583,1776,2028,2048,2048,2054,1740,2048,1934,1705,2044,2048,2048,2048,2048,2048,2048,2048,2031,2040,2022,2043,2051,2016,1985,1894,1734,1784,2048,2048,2048,2048,2048,2048,2048,2051,2048,2048,2048,2038,1962,1891,1823,1606,1365,1989,1992,1714,1836,2044,2052,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2037,1712,978,1832,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,1870,1712,2057,2048,2048,1963,1702,1442,1278,1094,900,554,1285,2057,2048,2048,2056,2048,2057,2048,2057,2056,2000,1569,1169,1435,2055,2048,1971,1909,1772,1575,1371,971,720,373,129,1392,2053,2048,2053,2054,2048,2048,2057,2057,2048,2048,2056,2046,2048,1880,1704,1520,1260,1876,2056,2048,2048,2048,2048,2048,2056,2048,2048,2048,2055,2031,2022,1771,1585,1196,817,1814,1830,2037,2015,2054,2048,2009,1792,1452,850,1776,2045,2048,2052,1737,2048,2048,1947,1229,25,208,66,25,2016,2048,2048,2057,2055,2048,2053,2048,1982,2002,2048,2048,2048,2011,2055,2048,2048,2048,2048,2048,2048,2056,2055,2056,1683,1737,2016,1630,1818,1810,2048,1756,1412,1406,1777,2013,2055,2055,2056,2048,2046,1933,1654,814,262,2055,2048,2057,2056,2055,2048,2055,2048,2048,2034,2010,1918,1845,1921,1753,1701,2048,2048,2057,2048,2048,2048,2048,2048,1898,2048,2055,2048,2048,2048,2048,2048,2048,1586,2044,1954,1949,1069,1953,2048,2042,1939,1582,2048,2048,2048,2048,2057,2048,2048,2048,2048,2006,1516,1408,1916,1957,2007,2051,2053,2036,2026,2038,2048,2052,2055,2035,2030,1999,1970,1974,2034,2052,2045,2046,2053,2020,2039,2045,2044,2039,2046,2038,1978,1817,1667,1476,1339,1201,1225,1134,1138,1017,1095,1031,1068,1021,854,901,789,757,582,427,338,190,154,67,41,1145,2038,2046,2048,2051,1989,1751,1711,1399,854,1679,2048,2048,2048,2016,1959,2048,2048,2048,1963,2048,2048,2048,1999,2057,2048,2048,2048,2034,2048,2048,2048,2048,2052,2046,1997,1930,1889,1748,1766,1706,1722,2052,2048,2057,2057,2056,2047,2014,1789,2055,2057,2048,2056,2048,2048,2048,1925,2045,2057,1960,1803,1598,2048,2056,1803,1569,2048,2048,2048,2048,2048,2048,2048,2052,2042,1972,1766,1609,1473,1400,1206,1177,2040,2048,2056,2048,2048,1951,1822,1392,477,656,1298,1626,1823,1954,1929,1937,1976,1980,1823,1654,1422,1251,801,434,1000,1960,2040,1785,1205,1141,2048,2048,2048,2048,2048,2048,2048,2048,1954,2027,2048,1945,1640,1275,995,2048,1982,1542,1403,2048,2048,2048,2053,2048,2051,2048,2055,1965,1977,1502,2038,2031,1463,600,2015,2048,2048,2048,2048,2057,2048,1976,1753,2052,2048,2048,2048,2048,2048,2048,1291,1249,1719,1997,2050,2048,2048,1781,1185,2011,1843,2056,2048,2048,2048,2053,1925,1532,1157,872,572,438,326,122,1101,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1675,1687,2048,2048,2048,2048,2048,2048,2048,1721,246,940,1605,1853,2047,2055,2048,2048,2048,2048,2048,2048,2048,2057,1985,1723,1572,1393,1301,1102,1032,1023,799,775,918,959,693,1356,1989,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,1466,907,696,1005,2057,2048,2048,2048,1814,1390,2057,1871,1476,1137,733,787,514,2053,2001,1487,455,1532,1885,1975,2056,2048,2057,2054,2043,2035,1664,1734,1797,1963,1892,2056,2048,2048,2048,2057,2056,2056,2048,2022,1801,1585,1078,668,1331,2002,2048,2048,2048,2048,2056,2048,2048,2048,2027,1827,1587,1247,904,546,293,1569,2048,2004,1919,1870,1691,1678,2018,2057,1871,1578,1308,1816,1708,1943,2043,2011,1966,1277,1785,1805,1886,1697,2048,1797,1867,1608,1438,1198,1343,2008,1952,2004,2023,1996,1961,1913,2048,2048,2039,1907,1191,906,2048,2048,2048,2048,2048,1706,638,2019,2048,2056,2048,1888,609,1201,2048,2034,2048,2048,2056,2048,2048,1950,2048,1642,1879,2048,1742,2056,2048,1698,1990,2049,1705,1271,1581,1872,636,1818,2048,2048,2053,1749,309,100,867,1935,2055,2048,2055,2056,2048,2053,1918,2048,2048,2001,2020,2053,1959,2048,2049,2051,2057,2033,2053,1846,1963,1672,1958,1412,1886,1242,1597,1638,1683,1270,1284,1792,2030,1731,1927,2048,2048,2048,2048,1637,1190,765,1001,2028,1357,1435,1843,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2008,1848,1653,1421,1230,927,952,2048,2048,2048,2048,2048,1927,420,1881,2050,2048,2012,1925,1987,2049,2053,2048,2048,2048,2057,2050,2013,1844,1519,1094,481,2020,2048,2048,2048,1846,398,481,1932,2048,2048,2048,2048,2057,2057,2048,2036,1672,613,341,1151,1803,2057,2048,2048,2048,2048,2048,2048,2048,2056,2048,2044,1950,1824,1764,1765,1616,1456,1293,1255,1249,1126,857,630,570,515,487,379,512,411,452,394,498,553,483,372,256,660,1213,1218,1226,1164,1109,986,837,810,552,342,186,89,670,1549,1795,2022,2048,2048,2045,2028,1983,1849,1940,1808,1978,1939,1868,1374,2009,2042,2052,2056,2010,2023,2057,2036,2027,2003,1977,2057,1913,1927,2049,2048,2048,1831,1723,1983,1818,1783,2046,1944,1283,1595,1925,2056,2046,1852,1923,2028,1757,1995,1949,2048,2048,2048,1872,2032,2042,1799,1469,1667,1419,1224,598,529,478,313,797,545,926,1556,1483,1395,1420,1255,1378,1622,1712,1786,1822,1892,1963,2026,2041,2054,2054,2048,2057,2048,2057,2048,2048,2011,1973,1999,1982,1956,1802,1700,1725,1686,1693,1562,1456,1430,1458,1441,1395,1292,1193,1215,1203,1164,1091,961,930,957,1231,1547,1502,1428,1478,1456,1527,1536,1571,1443,1546,1514,1566,1649,1642,1578,1607,1565,1492,1738,1658,1842,1694,1758,1816,1888,1893,1834,1961,1979,1940,2022,2045,2057,2053,2048,2057,2057,2018,1959,1816,1664,1355,960,1844,1837,2057,2054,2048,1881,359,407,2010,2048,2057,1439,2010,1649,1479,2048,1988,1212,2018,2048,2048,2048,1731,1863,2031,1763,1292,1816,2048,2048,2056,2048,2048,2043,1964,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2053,2048,2056,2048,2048,2053,1934,1994,2048,2057,2048,2042,2048,2048,2048,2048,2048,2048,1991,1110,2045,2053,2048,2055,2048,2044,2057,2004,1870,1926,1611,1602,1498,1596,1814,1680,1489,1422,1219,1016,659,805,2048,2048,2048,2056,2035,1815,1401,352,635,1700,2048,2052,1679,1639,1541,1909,1411,341,353,931,537,283,447,381,444,412,336,248,713,710,773,861,575,595,1078,775,612,1166,1427,1467,1431,1208,1185,821,871,766,573,320,269,588,323,717,1042,637,408,597,374,647,607,523,563,378,528,417,838,720,1058,810,1007,571,780,1026,570,787,1070,702,260,630,776,498,681,419,289,298,307,308,541,304,318,201,454,583,553,657,658,352,249,393,508,667,498,325,646,547,221,354,507,483,279,508,313,723,850,862,117,173,264,279,695,844,313,322,495,303,478,504,234,812,826,531,201,379,345,487,267,262,375,542,925,559,450,469,638,523,451,428,422,682,325,325,633,550,547,278,231,488,650,381,345,678,240,834,630,412,412,490,357,617,566,499,522,526,586,562,238,649,521,744,656,1038,1063,1123,1053,1159,1141,363,349,914,1113,1136,989,408,1013,855,456,341,232,349,182,202,139,224,133,554,151,157,119,141,467,546,570,416,654,589,543,772,401,563,166,652,277,322,417,583,574,424,315,583,233,268,379,682,145,257,228,238,416,223,220,278,399,204,123,268,174,349,426,497,570,564,887,691,400,417,501,627,609,395,626,869,712,836,885,422,383,271,415,475,153,407,331,391,239,284,230,247,848,1127,627,393,885,390,540,411,267,505,713,376,367,191,421,981,601,910,685,392,690,196,441,190,318,232,287,526,677,541,471,491,709,553,622,358,60,528,668,697,725,422,351,479,346,374,371,918,1304,1253,1328,770,1155,1327,1587,988,285,119,206,499,367,182,122,349,383,393,535,456,930,954,832,230,418,283,196,305,188,191,197,358,487,370,433,468,399,518,487,672,474,509,382,365,440,332,470,191,230,368,383,291,363,285,180,263,533,298,288,225,145,645,242,407,273,545,478,562,285,175,335,457,243,408,500,375,562,800,419,279,634,660,277,736,579,132,139,207,174,135,246,451,168,152,171,189,290,241,217,339,158,466,567,407,202,283,218,260,498,655,285,527,387,185,229,159,458,420,594,169,278,395,179,224,367,144,356,469,281,184,349,137,283,136,126,396,613,500,364,371,360,295,271,199,491,369,105,622,724,378,490,411,375,382,751,693,963,773,674,896,1521,1037,1273,1332,1416,1460,1413,1513,1569,1458,1547,1550,1445,1513,1508,1565,1531,1538,1468,1490,1588,1410,1418,1314,1266,1209,1316,1413,1297,1180,1177,1098,1120,1560,1533,1721,1785,1736,1765,1698,1691,1710,1746,1685,1730,1709,1700,1736,1750,1751,1747,1731,1549,1668,1650,1650,1709,1692,1686,1725,1724,1671,1636,1667,1678,1633,1588,1645,1643,1820,1644,1710,1604,1658,1659,1706,1733,1769,1829,1789,1821,1830,1828,1760,1708,1675,1762,1802,1844,1790,1721,1629,1833,1768,1704,1803,1731,1726,1704,1596,1678,1504,1876,1579,1647,1594,1583,1623,1606,1690,1679,1696,1646,1716,1738,1690,1733,1746,1717,1666,1776,1695,1688,1716,1658,1641,1691,1638,1636,1621,1608,1588,1548,1500,1509,1821,1155,1176,860,828,495,1206,1424,1425,1429,1217,1065,1224,1176,1285,1421,1308,1306,1289,1233,1227,1103,935,773,894,847,845,653,682,945,1105,978,1218,1136,1894,1422,1421,1370,1436,1577,1417,1497,1447,1512,1359,1315,1256,1300,213,220,219,222,244,738,1355,1556,1304,930,1313,1240,907,1342,1470,1056,1569,1675,1268,1107,1507,1064,1748,1093,1642,1603,1628,1459,1713,1405,1239,1686,1243,1646,1493,1252,1693,1118,1650,1522,1512,1681,1322,1489,1443,1491,1744,1161,1358,1631,1738,1240,1606,1495,1548,1513,1635,1431,1317,1551,1505,1423,1760,1407,1703,1439,1310,1508,1481,1696,1408,1195,1746,1524,1543,1635,1356,1688,1009,1414,1497,1729,1357,1489,1578,1516,1430,1633,1338,1486,1397,1549,1421,1318,1318,1549,1388,1190,1365,1331,1486,1520,1564,1660,1706,1456,1299,1453,1454,1290,1773,1414,1575,1444,1622,1144,1723,1715,1403,1348,1891,1388,1711,1270,1620,1577,1288,1479,1331,1710,1645,1651,1697,1678,1507,1358,1744,1809,1626,1681,1182,1704,1532,1582,1528,1776,1539,1556,1794,1258,1678,1710,1723,1411,1783,1651,1790,1919,1874,1889,2054,2019,2040,2040,2022,2044,2018,2054,2023,2044,2048,2039,2046,2040,2008,2007,1898,2016,2011,2035,2045,2048,2039,2042,2041,2031,2030,2007,2034,2049,2030,2047,2057,2043,2038,2022,2027,2014,1993,2036,2054,2055,2024,2036,2050,2029,1991,1962,2020,2016,1972,2010,2023,2020,2019,2052,2026,1988,1994,2005,1998,1976,2014,2005,2006,2048,2050,2028,1987,1994,2004,1996,1981,2012,2007,2047,2056,2030,2031,2003,1991,2024,2017,2000,2040,2046,2041,2044,2041,2030,2034,2039,2032,2044,2018,1946,2020,2000,1957,1982,2002,1972,1930,2000,1985,1988,1935,1958,1971,1961,1986,2003,1941,1939,1982,1996,1962,1947,1995,2003,1970,1987,1961,1979,1976,1987,1998,1959,1989,1975,1980,1996,1954,1980,1984,2019,1970,2002,1975,1974,1993,1983,1986,1946,1956,1992,1991,1975,2007,1952,1983,1968,1995,1957,1971,2003,1993,2002,1991,2007,1993,2020,1978,1982,2009,1967,1964,1999,2044,1985,1884,1992,2026,1987,1948,2018,2014,2018,1967,2007,2031,1988,1989,1999,2013,2051,2042,2008,2003,2029,2021,2004,1996,1970,2015,2020,1986,1992,1925,1877,2050,2047,2026,1977,1970,1915,1914,1893,1789,1916,1925,1845,1817,1838,1983,1982,2006,1912,1842,1900,1934,1765,1888,1981,1941,1921,1980,1929,1887,1942,1920,1950,1866,1965,1942,1982,1906,1950,1843,1884,1890,1883,1894,1975,1969,1955,1978,1993,1772,1945,1802,2011,1826,1946,1917,2003,1930,1956,2031,1785,1938,1725,1996,1978,1886,1985,1892,1915,1930,1979,1920,1890,1970,2013,1760,1791,1822,1777,1793,1903,1846,1923,1768,1943,1794,1902,1968,1904,1960,1932,1873,1918,1854,1926,1864,1958,1824,1943,1991,1923,1948,1880,1955,1892,1879,1886,1880,1805,1887,1889,1885,1827,1743,1639,1617,1547,1699,1887,1707,1942,1975,1950,1981,1998,1979,1940,1991,1972,1964,1970,1992,1980,1451,1383,1422,1395,1436,1473,1567,1424,1615,1515,1528,1540,1724,1690,1529,1702,1986,2006,1921,2021,1947,1919,1895,1884,1983,2003,2009,1902,1978,1927,1886,1869,1887,2004,2029,1973,1946,1964,1983,1836,1924,1913,1982,2003,1923,1996,1969,1982,1810,1896,1956,1938,2015,1919,1982,1878,1913,1835,1891,1953,1950,2028,1939,1975,1921,1967,1798,1901,1973,2001,2019,1948,1995,1953,1888,1907,1882,1953,1944,1909,1976,1878,1987,1952,1912,1939,1753,1711,1661,1656,1707,1699,1731,1704,1707,1722,1645,1676,1720,1747,1751,1669,1663,1665,1677,1735,1728,1689,1622,1613,1709,1698,1697,1765,1716,1665,1567,1601,1692,1761,1659,1678,1617,1627,1656,1743,1777,1718,1675,1687,1616,1708,1804,1791,1684,1615,1658,1757,1840,1840,1823,1757,1750,1758,1836,1872,1844,1793,1834,1813,1731,1781,1800,1685,1627,1688,1767,1705,1643,1600,1788,1707,1615,1775,1803,1587,1663,1823,1592,1599,1710,1643,1697,1702,1845,1705,1669,1763,1832,1766,1682,1695,1818,1696,1744,1782,1742,1870,1951,1925,2022,1980,1948,1913,1968,1936,1937,1985,1973,1979,1977,1990,1994,2006,1987,1983,1975,1951,2015,1960,1996,2005,1969,1962,1979,1964,1967,1985,2023,2013,1987,1972,1989,1968,1969,1963,1976,1977,1985,1966,1966,1976,1977,1962,1957,1954,1969,1955,1985,1962,1974,1953,1988,1946,1963,1963,1951,1943,1964,1940,1968,1944,1966,1948,1967,1947,1969,1947,1973,1944,1967,1943,1965,1914,1920,1890,1929,1900,1912,1927,1902,1896,1920,1911,1909,1937,1885,1914,1915,1894,1922,1827,1970,1831,1838,1966,1825,1834,1963,1850,1820,1961,1875,1831,1956,1884,1831,1931,1878,1823,1931,1898,1826,1931,1897,1821,1883,1865,1789,1885,1836,1801,1894,1814,1833,1888,1819,1823,1885,1790,1828,1890,1776,1843,1887,1751,1866,1893,1782,1895,1872,1837,1912,1854,1840,1908,1821,1879,1893,1824,1904,1861,1838,1907,1812,1882,1901,1808,1900,1857,1914,1842,1859,1912,1845,1863,1910,1846,1866,1910,1839,1872,1910,1845,1868,1908,1850,1868,1904,1855,1872,1901,1849,1877,1906,1856,1860,1921,1850,1832,1930,1855,1848,1921,1863,1855,1886,1873,1870,1872,1876,1879,1861,1885,1886,1848,1886,1903,1865,1923,1916,1924,1920,1913,1920,1932,1917,1908,1913,1899,1924,1919,1914,1910,1951,1915,1985,1981,1991,1994,1987,1974,1985,1994,1982,1986,1992,1964,1893,1942,1887,1931,1885,1957,1849,1928,1889,1846,1965,1969,1924,1985,1937,1967,1939,1966,1946,1958,1971,1976,1955,1965,1963,1942,1985,1910,1949,1868,1907,1888,1895,1931,1852,1971,1826,1974,1844,1934,1899,1894,1885,1894,1942,1769,1928,1784,1907,1854,1864,1869,1819,1901,1797,1936,1816,1884,1861,1838,1872,1820,1924,1913,2045,2020,2030,2006,2017,1999,2018,1999,2050,2006,2057,2038,2025,2017,2010,1973,2027,1979,2031,2034,2049,2057,2018,2038,2018,2004,2027,2011,2030,2045,2056,2047,2043,2039,2032,1983,1871,2018,1996,2020,2042,2035,2025,2000,1980,2002,2002,1959,1986,2023,2035,2011,2037,2013,1994,1984,2022,1984,1961,1989,2022,2037,2023,2032,2024,1983,2005,2005,1984,1958,1998,2017,2031,2045,2036,2037,2022,2051,2024,2015,1980,1996,1981,2031,2023,2053,2054,2053,2047,2024,2024,2013,2022,2012,2053,2045,2038,2024,1969,1989,1983,2017,1987,1997,1989,1956,1988,1987,1955,1936,1972,1956,1997,1959,1966,2025,1953,1940,2005,1952,1810,1833,2012,1990,1990,2001,1993,1954,1971,1946,2042,1998,1945,1893,1892,1920,1986,1972,1880,1907,1971,1963,1950,1817,1905,1978,1984,1945,1842,1911,1957,1942,1886,1836,1928,1844,1870,1938,1972,1932,1980,1896,1860,1895,1836,1930,1906,1975,1951,1895,1891,1899,1873,1956,1965,1948,1928,1812,1904,1807,1941,1996,1933,1884,1847,1855,1848,1905,1923,1886,1900,1873,1860,1902,1891,1830,1926,1897,1824,1899,1797,1780,1971,1967,1923,1928,1937,1842,1844,1856,1817,1806,1883,1980,1939,1957,1936,1841,1891,1948,1981,1954,2048,2019,1994,1720,1982,2027,2015,1994,1980,1957,2009,2035,1968,2018,1898,2002,1997,2034,1927,1814,2003,1998,1996,1994,1793,2006,2010,2031,1987,1996,1927,1936,2013,1995,1992,2029,2036,2030,1991,2006,2003,2018,2017,1994,1979,1970,2026,2027,1919,1809,1803,1850,1995,2016,1995,1979,2017,1980,1984,1908,1968,1990,1891,1923,1955,1965,1936,1977,2001,1996,2010,1987,1969,1936,1993,1988,1980,1925,1898,1958,1961,1946,1831,1955,1942,1961,1846,1977,1966,2000,1964,2006,1986,2005,2027,1955,1906,1911,1948,1921,1909,1935,1975,1955,1927,1926,1987,2035,2009,1986,1984,1954,2007,2013,1975,1966,1991,1934,1990,1943,1968,1945,1982,1966,1975,1997,2031,2004,1978,1981,1995,2017,1968,1949,1977,1988,1938,1997,1885,1980,1991,2017,1973,1939,1987,2012,1977,1975,1945,1968,1995,2043,1918,2008,1996,1977,2033,1938,2001,2008,1973,2027,1968,1971,2015,1975,1944,1986,1971,2014,1970,1986,1915,1962,1962,1991,1915,1993,1957,1955,1957,1973,1991,2016,1943,1949,1978,1951,1940,1948,1960,1934,1890,1856,1943,1979,1928,1902,1974,1864,1944,1970,1880,1966,1974,1953,1957,2002,1923,1973,1985,1944,1965,1947,2000,2028,1986,2035,2036,1999,1981,1999,1972,2008,2033,2042,2032,2048,2009,1958,2010,1971,2014,2036,2019,2044,2006,2004,2014,2019,2000,2035,2046,2028,2051,2034,2022,1961,2013,1973,2024,2038,2049,2054,2047,2024,1962,2017,1974,2046,2022,2047,2035,2038,2017,1992,1926,1975,1812,1970,1968,1992,1983,2013,2033,2009,2019,1962,2013,1977,1826,1986,1978,1968,1987,2005,1955,1781,1961,1952,1959,1988,2001,1925,1861,1817,1753,1613,1706,1517,1595,1514,1570,1438,1567,1485,1302,1435,1455,1343,1179,1533,1263,1380,1204,1512,1118,1405,1274,874,1550,1329,1335,1171,1234,1575,818,1230,1409,1144,1537,1134,1309,1278,1177,1584,1117,1440,1515,1319,1567,1360,1505,1507,1477,1638,1230,1490,1518,1309,1435,1382,1325,1333,1097,1619,1244,1446,1221,821,1670,1403,1287,1209,1244,1622,847,1219,1463,1222,1589,1041,1300,1213,1395,1420,1354,1453,1519,1234,1629,1434,1517,1591,1324,1602,1303,1513,1530,1204,1603,1205,1384,1277,1399,1411,1296,1455,1205,855,1669,1411,1215,1192,1259,1601,798,1233,1430,1161,1582,1063,1326,1267,1386,1446,1380,1479,1489,1234,1630,1464,1488,1590,1381,1485,1379,1490,1390,1150,1621,1192,1478,1184,1558,1237,1257,1411,1096,1003,1506,1433,1087,1285,1465,1176,984,1282,1340,1156,1449,1190,1370,1147,1542,1128,1422,1496,1321,1596,1399,1523,1491,1462,1626,1241,1463,1492,1413,1281,1514,1265,1386,1137,1599,1222,1485,1289,866,1609,1337,1356,1163,1293,1641,881,1176,1433,1286,1496,1158,1292,1235,1257,1600,1227,1513,1504,1246,1607,1359,1508,1576,1362,1659,1261,1502,1518,1268,1652,1185,1421,1273,1297,1453,1239,1409,1163,897,1618,1394,1238,1201,1328,1544,855,1263,1469,1177,1616,1072,1379,1227,1417,1439,1376,1500,1520,1238,1569,1453,1548,1629,1331,1580,1385,1574,1525,1137,1587,1229,1353,1245,1296,1396,1218,1439,1217,873,1589,1377,1243,1198,1265,1611,840,1265,1434,1127,1553,1073,1314,1274,1464,1323,1226,1492,1524,1357,1618,1446,1546,1567,1373,1647,1359,1559,1512,1174,1546,1374,1338,1307,1130,1614,1158,1422,1288,867,1598,1357,1353,1170,1223,1576,859,1200,1422,1192,1359,1211,1284,1382,1291,1632,1116,1476,1587,1424,1523,1476,1522,1442,1562,1587,1353,1437,1519,1355,1193,1661,1244,1385,1144,1636,1163,1492,1336,884,1536,1280,1375,1107,1289,1457,1144,1055,1341,1385,1239,1510,1166,1355,1171,1645,1218,1498,1448,1309,1590,1444,1595,1512,1514,1705,1285,1503,1533,1333,1248,1613,1333,1411,1141,1638,1182,1512,1349,909,1477,1303,1409,1117,1375,1215,1396,934,1371,1463,1296,1634,1059,1425,1301,1608,1247,1392,1528,1466,1310,1695,1636,1560,1621,1391,1705,1239,1226,1318,1397,1330,1846,1471,1439,1183,1316,1570,1460,1526,1773,1357,1332,1290,1553,1422,1503,1801,1426,1441,1267,1344,1499,1376,1413,1814,1497,1552,1323,1273,1476,1228,1345,1472,1648,1092,1232,1239,1614,1505,1293,1420,1525,1389,1491,1692,1787,1713,1882,1544,1929,1895,1827,1709,1889,1812,1820,1882,1370,1705,1680,1762,1740,1676,1672,1553,1334,931,1895,1979,1933,1772,1294,823,1803,1557,1804,1811,1887,1675,1902,1573,1601,1862,1618,1892,1871,1886,1800,1689,1733,1583,1951,1977,1748,1987,1948,1910,1859,1865,1759,1660,1837,1839,1900,1885,1674,1686,1628,1553,1854,1650,1640,1646,1520,1612,1434,1671,2018,2034,2006,1895,1976,2034,2034,1936,2003,2046,2024,1940,1995,2027,2005,1932,1984,1959,1962,1955,1973,1924,1921,2000,2022,2040,1992,2024,2021,1999,2003,1931,1876,2055,2053,2027,1948,1986,1879,1894,1963,1920,1915,1934,1901,1924,1885,1920,1885,1898,1938,1851,1893,1954,1854,1940,1900,1920,1906,1546,1351,1921,1667,1835,1437,1320,1247,1883,1583,1639,1656,1751,1528,1585,1588,1597,1442,1358,1724,1684,1410,1120,1571,1704,1413,1122,1917,1885,1779,1725,1796,1787,1645,1907,1814,1703,1671,1671,1722,1536,1849,1725,1381,1586,1518,1721,1393,1267,1261,1698,1533,1457,1172,1205,1730,1588,1655,1575,2034,1967,1969,1998,1939,1873,1757,1797,1885,1872,1943,1878,1881,1975,1841,1900,1919,1969,1885,1607,1941,1661,1434,1606,1645,1413,1369,1715,1479,1431,1667,1595,1735,1582,1601,1737,1665,1534,1813,1638,1601,1398,1615,1814,1665,1416,1275,1690,1248,1815,1875,1777,1665,1414,1402,1797,1557,1571,1581,1517,1748,1634,1471,1651,1638,1566,1618,1313,1549,1596,1553,1613,1282,1643,1519,1611,1628,1186,1539,1541,1488,1238,1133,1472,1193,1477,1253,1608,1072,1391,1471,1255,1521,1298,1262,1600,1443,1506,1787,1826,1651,1822,1824,1927,1811,1900,1767,1943,1493,1639,1618,1603,1668,1428,2000,1630,1577,1660,1703,1804,1591,1417,1609,1493,1553,1591,1403,1600,1420,1615,1497,1605,1445,1576,1542,1578,1464,1699,1890,1638,1961,1687,1882,1471,1621,1487,1597,1573,2010,1841,1837,1914,1896,1915,1891,1658,532,621,464,801,506,677,423,613,1327,1994,1968,1965,1938,1969,1954,1962,1933,1854,1631,1615,1659,1809,1572,1594,1561,1591,1788,1538,1783,1377,1499,1464,1519,1371,1398,1464,1558,1314,1250,1284,1507,1415,1501,1434,1335,1596,1462,1556,1479,1418,1363,1430,1410,1434,1340,1416,1763,1754,1797,1866,1887,1890,1829,1761,1751,1788,1662,1752,1805,1842,1760,1733,1680,1510,838,776,858,1069,1707,1702,1695,1613,1692,1585,1609,1651,1679,1723,1658,1750,1657,1750,1786,1849,1802,1642,1699,1466,1807,1415,1800,1541,1909,1639,1858,1789,1867,1726,1834,1804,1865,1259,1071,1024,1063,1062,1079,1087,1062,1502,1549,1557,1518,1588,1537,1545,1537,1562,1549,1457,1627,1612,1550,1026,1022,1081,1091,1471,1417,1767,1799,1586,1149,1254,1515,1333,1090,1486,1703,1217,1531,1629,1566,1566,1645,1612,1374,1228,867,1104,678,854,791,713,1467,1365,1271,528,820,527,542,782,547,885,732,937,530,664,709,703,862,499,832,662,945,505,530,944,693,869,442,822,624,779,304,281,538,188,633,244,591,262,231,571,171,558,193,509,38,353,302,223,574,237,1138,1434,1528,1215,1225,1228,1194,1182,958,971,1002,946,956,1004,979,1386,1361,1408,1410,1470,1520,1402,1372,1396,1595,1475,1489,1575,1605,1583,1498,1489,1608,1387,1425,1411,1395,1405,1408,1450,1434,1391,1407,1400,1362,1284,924,954,908,1101,957,940,975,922,1071,923,967,934,1306,1407,1455,1367,1363,925,929,934,1013,1712,1579,1587,1582,1459,1555,1594,1589,1744,1370,1329,1350,1283,1298,1299,1365,1356,1602,1570,1549,1268,1373,1410,1240,1502,1606,1667,1537,1548,1583,1806,1668,1762,1612,1485,1240,1445,1430,1369,1289,1177,1483,1469,1518,1464,1421,1612,1432,1737,1661,1685,1660,1597,1651,1665,1646,1668,1697,1703,1643,1672,1497,1659,1649,1567,1666,1648,1665,1652,1612,1599,1667,1691,1567,1722,1683,1672,1681,1499,1648,1662,1599,1700,1674,1631,1634,1669,1833,1638,1623,1627,1802,1691,1682,1676,1652,1814,1595,1709,1605,1572,979,929,944,1093,1534,1512,1573,1491,1540,1304,1273,1323,1357,1132,1201,1283,1387,1188,941,986,1133,1353,1149,1122,1078,1176,1116,920,895,1465,1519,1506,1537,1535,1517,1531,1529,1531,1625,1416,1386,1369,1384,1384,1364,1359,1591,1546,1519,1521,1575,1547,1523,1535,1540,1759,1594,1604,1670,1633,1578,1611,1656,1726,1580,1457,1409,1378,1434,1467,1391,1428,1783,1778,1739,1682,1736,1735,1718,1697,1756,1849,1731,1683,1639,1738,1704,1682,1667,1703,1058,1138,1170,1100,1110,1056,1291,1124,1068,979,938,673,683,688,1062,1746,1682,1746,1669,1739,1680,1740,1651,1879,1745,1719,1640,1671,1675,1715,1714,1801,1835,1760,1803,1721,1778,1742,1776,1732,1886,1746,1720,1638,1661,1675,1693,1687,1729,1502,1515,1387,1505,1435,982,1006,980,1488,1865,1789,1814,1744,1847,1781,1870,1845,1584,1201,1201,1308,1715,1075,1028,1054,1703,1645,1617,1609,1664,1553,1636,1599,1671,1594,1467,1409,1457,1356,1459,1426,1421,1461,1616,1536,1524,1575,1471,1440,1459,1450,1599,1636,1633,1584,1558,1673,1618,1589,1669,1614,1457,1493,1443,1412,1463,1421,1407,1573,1841,1808,1855,1737,1838,1774,1882,1821,1704,1615,1607,1608,1544,1633,1629,1623,1730,1554,1490,1457,1437,1491,1462,1459,1487,1695,1828,1833,1858,1681,1864,1821,1853,1855,1636,1637,1595,1707,1491,1655,1600,1627,1631,1475,1459,1433,1371,1530,1475,1447,1453,1863,1807,1825,1876,1677,1853,1812,1877,1735,698,1669,1047,680,1167,662,663,1162,687,991,1539,652,679,675,1439,1201,1120,1324,1293,867,1030,1244,1200,1232,1291,1515,1492,1364,1020,1246,1697,1575,1732,1639,1738,1558,1569,1699,1715,1029,1149,1466,1394,1539,1190,996,994,1012,1397,1072,1116,1106,1072,1571,2034,2044,2001,1991,2028,1998,1992,2016,2030,2041,2013,2018,2048,2039,2011,1952,2019,2025,2024,2001,1986,2021,2024,1996,1992,2026,2029,2012,1996,1993,2015,2003,1942,2023,2040,1894,1918,1877,1926,1920,1851,1854,1869,1887,1897,1887,1821,1873,1825,1849,1890,1866,1658,1666,1670,1684,1664,1652,1619,1740,1669,1663,1644,1630,1654,1664,1641,1605,1715,1445,1438,1440,1418,1432,1428,1398,1407,1621,1413,1465,1664,1356,1465,1499,1666,1404,1480,1543,1587,1535,1394,1594,1529,1594,1347,1455,1342,1879,1776,1484,1615,1653,1569,1593,1509,1695,1631,1568,1568,1647,1758,1700,1566,1583,1680,1522,1562,1526,1569,1531,1559,1525,1527,1536,1484,1654,1582,1527,1678,1683,1629,1658,1712,1815,1521,1515,1956,1925,1691,1714,1797,1943,1923,1925,1981,1925,1964,1904,1917,1861,1815,1841,1901,1990,1853,1871,1828,1830,1769,1795,1760,1903,1994,1962,1977,1933,1909,1910,1912,1918,2006,1870,1896,1855,1818,1814,1832,1779,1873,2020,1987,1980,1984,1929,1951,1921,1918,2010,1817,1806,1757,1782,1760,1791,1721,1778,1916,1874,1790,1803,1820,1809,1824,1785,1830,1429,1444,1494,1424,1423,1432,1422,1395,1918,1969,1927,2031,1925,1925,1916,1936,1913,1911,1866,1955,1961,1948,1947,1901,1910,1923,1895,1929,1916,1501,1512,1598,1620,1573,1606,1529,1538,1939,1816,1790,1754,1770,1725,1735,1712,1787,1316,1332,1280,1355,1304,1337,1378,1367,1674,1478,1499,1544,1584,1515,1477,1460,1579,1602,1608,1623,1586,1625,1544,1635,1396,1318,1342,1237,1278,1154,1236,1419,1961,1899,1865,1898,1899,1903,1867,1890,1975,1900,1873,1856,1881,1895,1886,1865,1867,1650,1428,1417,1329,1428,1463,1461,1461,1642,1672,1718,1714,1741,1641,1591,1563,1533,1441,1541,1575,1629,1640,1752,1686,1669,1803,1448,1443,1463,1485,1419,1363,1446,1435,1690,1455,1520,1526,1185,1550,1499,1513,1546,1599,1503,1509,1484,1133,1464,1523,1481,1835,1967,1937,1933,1431,1413,1398,1393,1443,1426,1394,1416,1444,1146,1197,1063,725,1098,1163,1142,1431,1373,1473,1602,1912,1872,1872,1915,1908,1889,1895,1872,1554,1620,1408,1492,1473,1096,889,834,803,941,824,847,820,976,937,902,796,937,964,1033,994,1258,1324,1277,1265,1315,152,653,598,599,208,502,392,979,1215,779,985,738,1371,934,1141,1068,436,173,495,379,877,1289,1533,1464,1946,1783,1771,1821,1815,1787,1758,1781,1829,1606,1639,1628,1580,1633,1632,1620,1520,1586,1319,1325,1319,1460,1648,1642,1695,1689,1669,1675,1664,1668,1653,1681,1642,1615,1446,1831,1853,1824,1748,1814,1835,1836,1760,1771,1454,1449,1474,1447,1857,1873,1859,1881,1839,1862,1841,1883,1855,1695,1793,1641,1126,1086,1164,1102,1792,2012,1990,1937,1941,1953,1925,1881,1887,1932,1967,1931,1924,1920,1915,1916,1969,1949,1660,1744,1741,1849,1805,1736,1635,1646,2056,2054,2048,2044,2054,2037,2038,2036,2055,2051,2055,2035,2050,2050,2039,2028,2052,1949,1894,1888,1827,1842,1856,1844,1849,1951,1856,1920,1866,1844,1814,1857,1852,1875,1656,1340,1140,763,845,735,620,596,779,834,935,623,319,831,837,874,515,452,805,902,769,400,621,774,873,698,400,1065,1152,1104,655,484,1197,1083,1198,529,606,1245,1049,1137,610,539,1259,1108,1119,846,1252,1384,1467,1629,1767,1046,1084,1152,1174,1144,1148,1066,1155,1109,1163,1111,1210,1145,1087,1070,1083,1621,1058,1114,1167,1114,1075,1070,1055,1026,1006,888,992,1073,959,857,768,891,1504,452,541,484,506,534,555,539,530,468,484,510,489,496,530,532,549,1073,1458,1474,1515,1532,1488,1494,1530,1469,1351,965,1038,1188,1661,1429,1412,1368,1261,1470,1562,1722,1662,1675,1635,1606,1634,1674,1665,1767,1495,1486,1510,1515,1447,1540,1477,1468,1259,1132,1189,1295,1368,1279,1347,1179,1282,1403,1424,1430,1511,1482,1577,1514,1594,1710,1046,1102,1142,1167,1176,1135,1100,1177,1143,1122,1123,1200,1161,1079,1023,1101,1619,1078,1097,1202,1112,1062,1097,1070,1001,986,938,1004,1072,969,855,785,859,1463,466,523,486,517,532,535,542,555,438,478,513,498,498,541,522,525,1229,1774,1805,1788,1759,1820,1773,1846,1410,1404,1395,1400,1421,1385,1229,1164,1374,1655,1277,1295,1374,1553,1026,1054,999,1256,1570,1701,1683,1586,1569,1200,1157,1185,1358,1349,1687,1682,1667,1606,1700,1670,1585,1632,1670,1357,1203,1498,989,1874,1674,1961,1781,1761,1617,1693,1719,1692,1667,1764,1788,1605,1535,1503,1565,1554,1535,1594,1556,1382,1636,1591,1597,1591,1558,1578,1574,1639,1627,1654,1775,1673,1347,1625,1807,1670,1656,1219,1006,1124,1195,1130,1154,1053,1091,1110,1186,1103,1205,1186,1081,1046,1106,1342,777,1077,1216,1090,400,1120,1192,1136,921,874,1159,1199,1166,425,1073,1225,1160,859,946,1167,1206,1194,341,991,1264,1100,923,1056,1187,1176,1137,439,926,1266,1137,987,1019,1142,1192,1145,614,821,1204,1102,998,1568,1075,1094,1139,1124,1074,1072,1081,1011,977,914,999,1069,959,878,800,857,1238,963,1245,1094,940,607,1106,1243,1132,1098,1101,1149,1236,1131,1241,1168,1106,1238,1164,1343,1113,1242,1134,1196,1215,1147,1211,1193,1252,1208,1065,965,1107,1260,1222,1070,968,1120,1348,1169,1039,996,1133,1257,1143,1003,1018,1092,1405,429,550,899,1413,1719,1827,1849,1876,1736,1457,908,509,502,531,564,514,1394,1152,1137,1513,1276,1042,1283,1514,1187,1106,1474,1328,1054,1274,1689,1786,1882,1712,1740,1891,1722,1876,1778,1752,1971,1840,1718,1725,1890,1722,1851,1889,1692,1894,1679,1839,1780,1846,1759,1794,1839,1762,1814,1878,1744,1861,1745,1751,1900,1704,1838,1780,1818,1773,1867,1729,1729,1994,1670,1806,1888,1694,1876,1803,1836,1707,1857,1750,1769,1891,1751,1730,1887,1750,1811,1790,1752,1938,1759,1826,1719,1896,1733,1862,1754,1737,1885,1661,1823,1887,1756,1705,1039,1276,1134,1282,1245,1206,1255,1158,547,768,852,906,638,340,806,869,855,480,498,802,890,790,389,641,803,852,697,1379,1074,1080,1128,1158,1134,1141,1084,1156,1095,1159,1132,1197,1179,1094,1030,1078,1472,1429,1709,1011,1101,1128,1157,1053,1038,1133,1051,1029,944,958,1025,1047,816,777,859,1168,1445,1418,1730,456,522,494,523,520,534,564,540,456,469,510,498,518,543,538,530,1204,1624,1650,1588,1662,1691,1624,1652,1679,1720,1790,1654,1634,1595,1624,1662,1701,92,784,1132,340,424,465,996,1732,2031,2029,2029,2018,1994,2019,1939,2017,2022,2017,2008,2003,2010,1980,1982,1986,1645,1447,1508,1664,1078,1201,1467,1124,1123,1122,1121,1119,1121,1214,175,131,1873,2003,1938,1888,1903,1882,1818,1879,1902,1881,1919,1921,1908,1986,1895,1860,1912,1929,1887,1798,1978,1945,1881,1889,1954,1916,1749,1760,1825,1746,1902,1907,1888,1833,1929,1900,1876,1888,1905,1928,1842,1834,1861,1912,1831,1531,1619,1449,1581,1652,1593,1575,1452,1520,1604,1618,1625,1612,1483,1580,1570,1525,1684,1616,1703,1516,1491,1829,1859,1789,1759,1825,1870,1836,1834,1865,1770,1309,1293,1344,1347,1312,1316,1329,1376,1573,1459,1450,1463,1493,1488,1468,1427,1606,1463,1462,1442,1462,1485,1442,1445,1420,1659,1453,1448,1445,1488,1472,1442,1422,1604,1462,1431,1415,1452,1497,1456,1433,1402,1619,1369,1390,1412,1514,1445,1425,1422,1594,1428,1404,1355,1481,1469,1417,1399,1416,1603,1388,1360,1430,1459,1469,1416,1391,1541,1500,1399,1442,1498,1474,1459,1441,1415,1639,1447,1414,1484,1498,1493,1461,1470,1406,1553,1321,1321,1366,1345,1366,1295,1236,1553,1329,1302,1327,1402,1345,1342,1331,1289,1541,1316,1297,1335,1337,1335,1300,1294,1546,1466,1428,1456,1485,1485,1469,1451,1393,1645,1420,1411,1484,1490,1497,1439,1395,1587,1471,1349,1400,1471,1457,1420,1436,1390,1616,1425,1380,1448,1476,1475,1397,1386,1452,1579,1381,1385,1439,1478,1452,1418,1430,1617,1476,1407,1428,1441,1493,1448,1423,1390,1790,1736,1831,1725,1885,1574,1737,1798,1833,1834,1776,1638,1691,1803,1758,1717,1805,1850,1810,1882,1817,1932,1841,1899,1846,1872,1846,1829,1763,1819,1833,1778,1768,1822,1942,1791,1787,1717,1781,1729,1770,1716,1787,1865,1807,1766,1745,1791,1759,1740,1767,1943,1882,1823,1829,1812,1797,1846,1794,1783,1886,1723,1787,1730,1742,1729,1764,1772,1859,1784,1850,1836,1853,1828,1757,1759,1788,1795,1811,1730,1755,1661,1593,1757,1725,1626,1798,1809,1733,1772,1671,1631,1655,1667,1805,1891,1661,1610,1637,1653,1694,1681,1681,1647,1770,1683,1617,1646,1701,1707,1697,1671,1804,1804,1756,1772,1785,1830,1774,1842,1773,1843,1800,1687,1744,1806,1781,1787,1770,1860,1760,1823,1898,1863,1875,1935,1909,1804,1802,1679,1686,1732,1771,1739,1805,1696,1780,1756,1664,1814,1807,1789,1833,1837,1705,1741,1414,1526,1511,1512,1530,1503,1503,1529,2048,1960,1931,1995,1988,1934,1991,1940,1905,1969,1989,2017,1953,1938,1986,1993,2027,1637,557,38,40,40,318,40,38,40,592,1865,1784,1823,1848,1812,1821,1781,1836,1785,1466,1461,1433,1469,1418,1425,1433,1551,1866,1831,1814,1751,1784,1767,1788,1812,1259,820,40,38,40,171,154,40,38,40,1034,1086,1729,1727,1743,1754,1768,1705,1703,1742,1765,1860,1001,1236,1443,1264,807,1569,1445,1288,995,1798,1611,1644,575,38,40,38,318,40,38,40,541,1326,1451,1189,1224,1668,1659,1606,1682,1678,1665,1672,1613,1632,40,37,40,40,1087,448,99,1147,1841,2007,1752,1669,1611,1636,1689,1671,1724,1744,1688,1727,1744,1741,1738,1719,1682,1686,1713,1101,1113,477,994,1819,1769,1709,1745,1728,1795,1662,1732,1873,1839,1823,1890,1777,1921,1797,1887,1833,1840,1680,1669,1771,1649,1801,1772,1702,1888,1788,1970,1774,1951,1842,1920,1874,1874,1977,1267,1176,1130,993,1198,1436,1364,1371,1372,1404,1198,1168,1080,1127,1160,1285,1665,667,833,921,1022,1358,1705,1184,748,660,814,1434,1611,1756,1605,839,1327,1608,1398,1219,954,810,955,778,480,904,1197,1392,1196,1205,1330,1380,1404,1317,1356,1924,1903,1864,1916,1844,1858,1900,1888,1856,1902,1931,1943,1836,1898,1879,1949,1273,910,940,931,1544,1957,1747,1877,1914,1145,1206,1195,1217,2028,2027,1985,2027,1946,1910,1882,1909,1926,2030,2040,2037,2056,1780,1816,1782,1841,1809,1815,1697,1818,1841,1951,1935,1928,1959,1614,1295,1312,1654,1340,1193,1282,1284,1320,1192,1271,1233,1581,1492,1220,1190,1656,1628,803,783,1547,1603,858,759,1197,1254,1174,742,957,1645,1634,1370,1401,1644,1830,1739,1797,1773,1831,1765,1843,1839,1820,1662,1669,1676,1725,1768,1787,1817,1740,1644,1451,1383,1436,1593,1467,1427,1437,1576,1531,1436,1494,1546,1602,1500,1457,1547,1888,1977,1978,1927,2026,1971,1978,1969,2007,1767,1772,1745,1760,1798,1591,1550,1574,1880,1917,1812,1881,1923,1773,1837,1763,1829,1970,1864,1832,1909,1908,1827,1774,1802,1893,1501,1564,1626,1626,1188,1260,1612,1352,1174,1283,1199,1693,1182,1226,1269,1787,1771,1790,1756,1770,1846,1797,1792,1783,1866,1839,1817,1821,1530,843,822,803,932,1156,1179,1143,1185,1319,1200,1185,1205,1314,1369,1403,1313,1586,1843,1847,1863,1861,1876,1795,1859,1829,1954,1903,1938,1920,1928,1913,1916,1969,1922,1801,1863,1818,1744,1830,1826,1727,1586,1665,1770,1846,1843,1894,1883,1799,1883,1863,1501,1474,1394,1510,1554,1583,1782,1583,1553,1629,1653,1705,1677,1749,1771,1781,1799,1877,2048,2049,1970,1961,1970,1988,1969,1987,1938,1956,1921,1894,1187,1285,1399,1040,1712,1787,1739,1758,1742,1571,1602,1484,1632,1787,1758,1782,1735,1848,1792,1808,1768,1787,1707,1709,1703,1664,1671,1810,1798,1618,1240,983,1079,1114,1372,909,904,900,1325,966,1213,928,1297,557,644,534,605,985,756,802,659,725,1149,1220,1182,1011,1308,1347,1450,1384,1319,1470,1557,1652,1337,1408,1657,1532,1460,1726,1616,1673,1558,228,225,201,302,841,495,417,467,1656,2037,2054,2041,2032,2038,2056,2034,2017,2012,1929,1945,1949,1878,1909,1940,1920,1717,1431,1342,1494,1455,1124,1208,1128,1069,1436,1455,1406,1477,1676,1872,1816,1831,1880,1857,1801,1782,1872,1817,1735,1741,1772,1705,1758,1790,1705,1600,1394,1494,1454,1506,1426,1453,1611,1469,1805,1856,1871,1874,1632,1210,1239,1232,1574,1842,1800,1777,1843,1391,1457,1461,1442,1928,2022,2025,2018,2043,2007,2001,1973,2003,1494,1513,1503,1483,1779,1662,1656,1679,1974,1962,1988,1997,2006,1729,1717,1726,1789,2055,2054,2053,2052,1555,1264,1076,533,530,535,756,1187,1454,1430,1158,1214,1511,1372,1438,1283,1546,1526,1622,1460,1403,1687,1766,1765,1842,1636,1221,1329,1243,1376,946,993,1010,1049,930,865,1053,1074,894,2010,1976,1948,1955,2020,2014,1977,2019,1980,1583,1465,1630,1701,1665,1665,1703,1637,1804,1499,1470,1609,1820,1591,1729,1686,1700,1479,1711,1582,1442,1485,1610,1543,1418,1839,1908,1864,1847,1896,1896,1867,1857,1909,1633,1521,1438,1641,1976,1987,1969,1994,1995,1815,1790,1797,1840,1867,1909,1921,1820,1437,1453,1440,1374,1483,1502,1527,1473,1517,1538,1755,1687,1626,1452,1599,1523,1488,1743,1731,1629,1757,1681,1721,1674,1781,1688,1674,1538,1678,1662,1681,1647,1537,1680,1597,1574,1547,1484,1491,1795,1329,1730,1682,1457,1495,1548,1542,1500,1520,1654,1618,1335,1330,1316,1514,1594,1842,1404,1548,1695,1440,1729,1760,1697,1637,1595,1281,1210,1220,1299,1334,1242,1309,1698,1397,1475,1292,1383,1128,1169,1241,1221,1293,1427,1443,1377,1417,1580,1242,1275,1520,1757,1853,1691,1387,1163,1023,906,914,1079,1140,1259,1274,1414,1653,1576,1667,1837,1518,1172,1001,1019,944,737,805,1333,1070,1281,1239,1257,1303,1490,1669,1713,1871,1870,1760,1770,1744,1418,1271,1198,1309,1267,1332,1277,1289,1222,1297,1318,1275,1334,1700,1586,1676,1618,1522,1420,1648,1664,1648,1415,1202,1189,1282,1270,1227,1416,1482,1861,1443,1273,1386,1209,1258,1076,1252,1397,1603,1714,1667,1616,1446,1374,1480,1318,1835,1437,1432,1236,1256,1254,1178,1264,1419,1617,1723,1711,1686,1508,1630,1739,1510,1655,1554,1030,252,975,1578,1094,248,916,1559,1070,250,929,1569,1070,221,924,1533,1096,264,871,1532,1105,259,790,1219,1270,1306,1364,1386,1254,1385,1277,1404,1288,1335,1274,1432,1302,1316,1330,1324,1406,1452,1269,1235,1215,1254,1236,1235,1277,1531,1149,1167,1159,1209,1212,1180,1219,1201,1501,1267,1254,1264,1254,1265,1265,1249,1587,1750,1735,1770,1653,1675,1692,1828,1919,1172,1333,1309,1403,1295,1428,1251,1320,1377,1343,1372,1332,1360,1404,1376,1380,1814,1691,1616,1588,1657,1558,1539,1460,1244,1386,1364,1436,1579,1509,1467,1507,1697,1917,1672,1612,1579,1660,1555,1563,1514,1295,1414,1342,1423,1545,1489,1493,1512,1664,1877,1723,1613,1605,1637,1576,1585,1483,1286,1370,1355,1379,1542,1496,1526,1485,1619,1841,1746,1629,1610,1579,1592,1605,1474,1325,1355,1378,1402,1537,1520,1540,1448,1604,1790,1534,1207,1162,1010,849,933,1068,983,1119,1169,1263,1233,1004,941,1013,1040,1071,1631,1204,1211,1019,832,900,1082,983,1089,1118,1259,1204,1081,875,1031,1019,1059,1943,1937,1886,1947,1969,1994,1918,1947,1876,1839,1763,1815,1884,1906,1954,1941,1946,1475,1980,1914,1957,1985,1975,1977,1957,1976,1914,1778,1763,1773,1776,1751,1845,1760,1737,1789,1765,1784,1751,1721,1700,2006,1952,1885,1894,1895,1977,1594,714,858,2028,1957,2006,1981,1955,1969,1989,1956,2003,1951,1951,1957,1978,1979,1970,1942,1954,1804,1580,1558,1566,1555,1574,1546,1581,1671,1776,1621,1707,1580,1629,1852,1800,1841,1812,1674,1535,1564,1485,1715,1662,1733,1597,1722,1632,1677,1714,1767,1832,1837,1834,1876,1828,1652,1721,1556,1789,1831,1814,1842,1838,1576,1595,1579,1544,1675,1688,1752,1651,1768,1716,1788,1737,1810,1566,1554,1713,1732,1677,1556,1863,1625,1775,1652,1815,1653,1700,1578,1650,1709,1500,1543,1727,1669,1629,1446,1594,1936,1828,1012,1872,1916,1667,1798,1531,2020,1999,2008,1781,1493,1328,1202,1276,1238,1503,1600,1575,1502,1446,1469,1507,1516,1534,1468,1232,994,872,1020,1290,1094,994,1108,1081,1765,1818,1864,1892,1782,1863,1753,1794,1976,1748,1590,1638,1652,1727,1780,1788,1666,1853,1826,1867,1889,1757,1898,1762,1815,1937,1838,1602,1670,1662,1732,1787,1787,1681,1848,1789,1906,1789,1928,1770,1944,1786,1919,1982,1884,1996,1976,1886,1950,1977,1971,1997,1848,1689,1748,1815,1776,1833,1869,1815,1691,1631,1264,1294,1674,1555,1607,1195,1170,1100,1005,466,314,1224,1280,1318,1299,1327,1465,1270,1340,1310,1425,1344,1294,1345,1255,1438,1341,1281,1379,1306,1458,1576,1166,1428,1441,1818,1915,1962,2042,2037,2004,1992,1956,1969,1640,1611,1508,1482,1747,1566,1717,1726,1562,1741,1804,1595,1766,1572,1589,1612,1628,1657,1807,1904,1915,1827,1647,1732,1828,1946,1951,1858,1691,1760,1852,1924,1816,1755,1668,1846,1926,1893,1885,1624,1764,1913,1977,1964,1929,1723,1692,1880,1894,1874,1761,1327,973,1029,984,1402,1499,1598,1588,1646,1623,1698,1642,1619,1582,1855,1706,1729,1726,1598,1717,1623,1638,1683,1707,1933,1739,1712,1749,1717,1743,1726,1600,1720,1671,1741,1680,1600,1673,1622,1525,1982,1896,1856,1928,1948,1927,1873,1700,1766,1649,1674,1772,1974,1875,1905,1884,1898,2000,1915,1969,1931,1918,1818,1787,1788,1796,1895,1955,1868,1888,1908,1906,1851,1879,1657,1367,1206,1380,1711,1599,1660,1628,1911,1874,1848,1846,1843,1843,1836,1867,1887,1866,1898,1906,878,551,623,949,1069,1012,1287,1227,1314,960,1825,1693,1621,1558,1754,1598,1653,1694,1569,1476,1640,1452,1330,1241,1574,1662,1675,1727,1700,1714,1720,1605,1700,1337,1337,1563,1452,1540,1483,1499,1444,1475,1425,1359,1339,1870,1796,1820,1859,1861,1849,1859,1806,1896,1825,1818,1841,1924,1900,1868,1850,1890,1992,2013,1960,1896,1904,1875,1945,1915,1938,1885,1940,1902,1874,1862,1862,1895,1889,1758,1483,1468,1581,1648,1606,1587,1674,1626,1628,1622,1611,1750,1668,1629,1675,1646,1631,1652,1628,1699,1679,1649,1645,1657,1634,1622,1633,1647,1890,1871,1879,1832,1869,1870,1826,1870,1839,1936,1865,1846,1848,1834,1844,1832,1878,1945,1874,1855,1849,1869,1844,1841,1873,1897,1592,1399,1424,1427,1303,1452,1415,1598,1399,1307,1489,1478,1411,1419,1839,1876,1839,1824,1805,1830,1830,1913,1930,1670,1734,1715,1685,1685,1705,1772,1600,1724,1587,1789,1710,1719,1741,1769,1719,1596,1653,1899,1841,1836,1868,1601,1814,1860,1866,1845,1854,1667,1733,1781,1765,1795,1750,1625,1754,1696,1683,1829,1611,1715,1741,1813,1745,1778,1718,1675,1694,1638,1664,1729,1379,1182,1286,1189,1241,1289,1169,1372,1669,1524,1513,1648,1665,1536,1556,1584,1554,1566,1531,1594,1878,1868,1930,1885,1877,1529,1640,1413,1602,1743,1806,1781,1702,1777,1480,1459,1711,1733,1762,1484,1353,1473,1859,1908,1492,1459,1621,1428,1537,1563,1466,1683,1512,1471,1518,1526,1475,1574,1438,1511,1539,1488,1600,1498,1480,1516,1645,1546,1483,1550,1359,1462,1417,1513,1900,1842,1833,1792,1804,1825,1747,1736,1686,1571,1806,1699,1795,1793,1608,1762,1784,1639,1853,1938,1853,1887,1893,1749,1923,1697,1759,1765,1591,1769,1726,1778,1632,1743,1751,1769,1690,1792,1683,1802,1711,1642,1676,1626,1731,1720,1817,1649,1680,1725,1734,1709,1728,1666,1734,1711,1781,1527,1412,1693,1758,1662,1697,1766,1623,1463,1564,1508,1523,1398,1523,1514,1514,1663,1793,1678,1753,1771,1659,1702,1720,1662,1621,1673,1623,1697,1593,1609,1620,1709,1629,1660,1602,1701,1639,1640,1653,1642,1718,1626,1652,1644,1688,1635,1631,1614,1726,1638,1656,1656,1645,1713,1620,1617,1594,1771,1625,1709,1703,1789,1640,1641,1608,1699,1648,1603,1695,1689,1808,1607,1624,1631,1708,1653,1885,1749,1678,1611,1807,1777,1590,1752,1800,1794,1704,1908,1874,1882,1941,2014,1943,1947,1953,1999,1730,1863,1935,1994,2006,2003,2009,1815,1933,1832,1813,1918,2007,2027,2021,1998,1966,1962,1917,1915,1882,1911,1904,1937,1950,1981,1774,1898,1890,1896,1863,1743,1597,1640,1951,1770,1826,1538,1625,1620,1625,1576,1807,1426,1399,1312,1352,1416,1533,1492,1364,1440,1535,1479,1423,1439,1452,1520,1486,1403,1688,1752,1810,1697,1691,1690,1751,1722,1664,1713,1688,1754,1666,1675,1658,1694,1623,1728,1668,1673,1633,1738,1684,1645,1647,1731,1640,1641,1646,1741,1949,1889,1896,1960,1885,1926,1879,1888,1927,1781,1778,1790,1919,2012,1982,2044,2052,2030,2039,2019,2027,2038,2046,2034,2038,2054,2056,2038,2033,2043,1850,1838,1871,1925,1927,1898,1876,1875,1733,1456,1511,1396,1679,1625,1634,1524,1582,1638,1549,1619,1520,1433,1554,1608,1546,1523,1650,1467,1417,1560,1405,1767,1858,1804,1722,1667,1634,1824,1833,1863,1849,1792,1781,1653,1832,1837,1804,1619,2009,1986,2003,1917,1899,1928,1581,1704,1712,1745,1709,1779,1796,1755,1661,1773,1695,1694,1681,1661,1519,1510,1507,1508,1557,1529,1545,1520,1555,1501,1488,1538,1503,1573,1511,1502,1497,1498,1307,1278,1283,1187,1986,1941,1922,1889,1933,1967,1940,1922,1868,1345,1265,1309,1341,1360,1326,1302,1456,1643,1468,1459,1612,1650,1479,1593,1559,1709,1695,1665,1667,1649,1671,1636,1679,1717,1647,1221,1266,1309,1286,1315,1237,1196,1428,1236,1082,1022,1107,1195,1180,999,1348,1504,1279,1294,1235,1229,1236,1264,1397,1278,1535,1323,1317,1358,1342,1339,1284,1325,1724,1607,1634,1731,1720,1616,1506,1266,1854,1978,1506,1036,1264,1152,1336,1129,1543,1958,1924,1586,1749,1829,1818,1754,1577,1950,1181,426,636,473,517,533,535,462,876,459,1080,1310,1445,1353,1181,1126,479,862,550,1389,1448,1510,1511,1390,1078,589,1498,1060,1404,1144,1493,1349,1200,1185,1801,1781,1709,1742,1806,350,108,1199,501,632,639,550,488,768,645,503,1303,938,911,1433,1405,1386,1419,1377,1567,1597,1710,1597,1637,1566,1596,1844,1576,1127,1189,1167,1230,1311,1249,1294,1261,1442,1507,1610,1626,1675,1585,1388,1363,1380,857,25,30,25,477,661,1238,715,1471,1624,1681,1616,1633,1203,1667,1504,1600,1521,1709,1896,1941,1897,1947,1886,1708,890,1159,1499,1350,949,945,1265,1321,1424,1433,1499,1518,1556,1626,1716,1763,1530,1593,1496,1571,1581,1508,1549,1706,2054,2056,2034,2009,1886,1948,2020,1973,1737,1917,1879,1942,1992,2030,1995,2032,2006,2017,1978,2031,2056,2003,1714,1836,2011,2023,2010,1933,1667,1592,1252,1210,1176,1435,1995,1902,1716,1754,1890,1887,1766,1790,1779,1848,1946,1965,1963,1967,1969,1964,2014,1870,1544,1556,1557,1510,1511,1564,1514,1503,1374,1391,1346,1349,1280,1314,1339,1549,2017,2016,1988,1969,2006,1960,1919,1934,2013,1824,1708,1671,1661,1715,1641,1307,189,400,1246,1318,1326,986,1029,949,1087,1164,1631,1710,1562,1699,1729,1674,1520,1572,1577,1616,1554,1587,1480,1485,1237,1392,1066,1182,1286,1337,1218,1332,1419,1502,1566,1604,1446,1449,1401,1284,973,1082,1596,1499,758,1161,1273,1380,1486,1485,1496,1486,1179,1281,1444,1495,1699,1716,1859,1831,1790,1796,1566,1644,1609,1656,1571,1611,1482,1592,1513,1458,1230,1407,1527,1577,1357,1393,1384,1418,1359,1265,492,633,427,727,1441,1526,1559,1541,1432,1471,1547,1459,1367,1322,1159,1158,1316,1374,1526,1366,1094,805,301,897,1731,1906,1792,1771,1561,1395,1012,1135,1560,1596,1563,1546,1575,1569,1552,1713,1759,1833,1715,1827,1771,1881,1764,1746,1391,1404,1361,1397,1408,1503,1671,1711,1541,1561,1503,1490,1548,1533,1472,1671,1909,1817,1539,1240,731,765,849,1227,1514,1590,1668,1711,1482,1617,1333,1349,1229,959,591,824,802,858,611,949,1431,1211,495,541,467,969,1752,1679,1086,1134,1022,1181,1369,1348,1081,1135,912,1010,1422,1477,1422,1445,1413,1568,1691,1759,1625,1793,1864,1849,1563,1400,992,1157,1141,1170,952,995,836,1084,992,1136,1230,1151,450,536,616,671,482,532,617,663,477,553,637,715,505,570,602,663,430,486,560,1052,1879,1685,1037,1129,1028,1123,1028,1092,1105,1341,1797,1659,1691,1711,1638,1675,1734,1545,1153,1347,1662,1657,1685,1765,1874,1448,242,358,269,361,179,275,237,357,51,266,25,180,145,268,279,279,235,661,1449,1486,1630,1543,1073,1088,1063,1122,1150,1346,1480,1526,1454,1626,1848,1881,1692,1712,1378,1626,1623,1652,1380,1435,1277,1286,1635,1567,1570,1195,1625,1452,1489,1482,1386,1262,1439,1467,1412,1521,1536,1511,1290,1133,1294,1348,1344,1223,1325,1073,1132,1036,869,809,870,816,888,788,1856,1789,1907,1893,1431,1210,1343,1250,1034,956,1055,978,1423,1599,1651,1595,1696,1648,1700,1619,1688,1710,1709,1617,1684,1714,1675,1677,1707,1675,1682,1681,1675,1687,1617,1652,1675,1722,1642,1650,1015,1388,1513,1627,1673,1891,1895,1917,1940,1291,1159,1364,1020,1271,1413,1305,838,779,763,910,1279,1244,1307,1177,352,103,100,103,216,47,116,47,47,47,44,115,41,194,177,47,44,99,50,50,48,45,105,41,46,48,127,48,48,186,48,48,48,49,49,116,47,122,47,47,47,127,45,42,40,39,98,50,50,42,42,106,53,49,46,44,39,117,46,46,110,46,116,46,46,46,47,109,45,45,45,106,45,45,45,45,42,107,39,50,97,50,42,42,106,53,94,802,1169,411,46,620,1127,544,48,471,1153,680,383,2048,1953,2008,2048,2048,2048,2048,2048,1954,2048,2048,1939,2048,2048,2003,2048,2048,2048,2048,2048,2048,2008,1878,1938,2053,1893,1968,2006,1942,1950,2048,2048,2048,2048,2048,1898,1874,2048,2048,2048,2048,2009,2048,1869,2048,2048,2048,1999,2048,1941,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2000,2048,1944,2048,1878,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,1973,2057,1876,2048,2048,2002,1900,1967,1960,1920,1947,2006,1914,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,1999,2048,1996,1963,2004,2004,1947,1940,1942,1887,2003,2048,2048,1939,2048,2048,2048,2004,2048,1992,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,1962,2048,2048,2048,2048,2048,2048,2048,1969,2007,2048,1875,2048,2048,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,1999,2048,2005,2006,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,1948,1855,2048,1942,1949,2048,2014,1938,1872,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,1814,1940,2001,2048,2002,1830,1836,2048,2048,2048,2048,2048,1991,2009,2048,1873,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,1941,2048,2048,2004,1752,1581,2048,2048,2048,2048,1938,2048,2048,2048,2007,2048,2048,1965,2048,1963,2048,2004,1997,1939,2048,2048,1748,2048,1878,2048,2048,2048,2048,2048,2048,1964,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,1955,2048,2048,2048,2048,1874,2048,2048,1969,2048,1896,2048,1999,1999,1940,2048,2009,2048,2048,2048,2048,2048,2048,2008,2048,1936,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,1941,2048,2048,2003,2048,1874,2048,2048,2048,2048,2009,2048,2048,2048,2003,2048,2048,1918,2048,1952,2048,1940,1941,1924,2004,2048,1944,2048,2048,2048,1757,1974,2003,2005,2048,2048,2048,2048,2048,1941,2048,1877,1960,1954,2002,2048,2048,2048,2048,2048,1948,2048,1942,2048,1941,1887,1845,1999,2048,2048,2048,2048,2048,2007,1884,2048,2048,2048,2006,2048,2048,2048,1945,2048,1928,2038,1997,2048,2048,2002,2048,2048,2048,2001,2048,2048,2005,2048,2048,2048,2048,2006,2048,2048,2048,2000,2048,2048,2048,1872,2048,2048,2048,2048,2048,1998,2048,2048,2048,2000,2048,1942,2048,1943,1880,1943,2048,2048,1819,2010,2048,2048,2003,2048,2048,2005,2048,1999,2048,2048,2048,2048,2048,2055,2048,2048,1942,2048,2048,2048,2048,2048,1999,2048,2006,2048,2048,2048,2048,2048,1872,2048,2048,1739,1926,2048,2048,2048,2048,2048,1433,1649,2048,2048,2048,1952,2048,2048,2048,2000,2048,1812,2048,2048,1982,1860,2048,1877,2048,1871,2048,2048,2048,1957,1867,2048,2048,2048,2048,1987,2028,2048,1960,2048,2048,2004,1939,2048,1983,2048,2048,2048,1953,1945,2002,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2001,2048,2048,2048,2000,2048,2048,1212,2048,2048,2048,2048,2003,2048,2048,2048,2003,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2002,2048,2048,2048,1957,2048,2048,2048,2048,2005,2048,2048,2048,2001,2048,1953,2048,2048,2048,2048,2048,1687,1874,2048,2001,2048,1991,2000,1929,2048,2048,2048,2048,1879,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1883,2048,2048,1872,2057,2048,2048,1873,2048,2048,2048,2048,2048,2048,2048,1871,1876,1874,2048,1872,1495,2048,1924,2002,2048,2048,1950,2048,2048,1996,1940,2048,1867,2048,1999,2006,2002,2016,1950,1948,2048,2000,2048,2048,2048,1953,2048,2048,2003,2048,2048,2048,1944,2048,2048,1844,1960,2048,2048,2048,2048,2002,2048,2048,2048,2003,2048,2048,1942,2048,2048,1934,2048,1942,1968,2048,2048,1943,2048,2048,1939,2006,2048,1948,1999,2048,2048,1955,2007,2010,2048,2048,1876,2048,2048,1870,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2001,2048,2048,2048,2002,2048,1900,2048,2048,2048,2048,2000,2005,2004,2010,2048,1993,1832,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2003,1951,2048,2048,2048,2048,2048,2048,1953,2048,2048,2048,2048,2048,2048,1960,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,1968,2048,1999,1941,2048,2048,2048,1875,1942,2048,1960,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2003,2048,2048,2048,2048,1941,2048,1939,2048,2005,2048,2048,2005,2048,2048,2003,2048,2048,2048,1997,2048,2048,1868,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2006,2007,2011,2048,1952,2048,2048,1948,2048,2048,1540,2048,1990,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,1361,1363,2048,1957,2048,1772,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2005,2048,2048,2048,2007,1940,2048,2048,2048,2048,2056,2048,2048,2048,2007,2048,2048,2048,2048,2048,2000,2048,2048,2003,2048,2048,2048,2048,2048,2048,1870,2048,2048,2048,2048,2048,1859,2048,2048,2048,2048,2048,2048,2048,2048,1872,2048,2048,2048,1876,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1924,1908,2048,2048,2048,2048,2004,2048,2048,2048,2048,2005,2048,2048,2048,2048,1999,1940,1943,2048,2048,1824,2048,2048,2048,2048,1937,1875,1504,2048,2048,2048,1874,2048,2048,2048,2048,2048,2048,2048,2005,1990,2051,2005,1843,1986,2048,2048,1872,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2004,2048,1873,2048,2003,2048,1875,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2001,2048,1886,1874,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2057,2048,2004,2048,2053,2028,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,1998,2048,2048,2048,2005,1898,1870,1873,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,1999,2048,2048,2048,2048,1998,2048,2048,1943,2048,2048,1970,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2005,2048,1961,2048,2048,2048,2048,1999,1886,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2056,2048,2054,1941,2048,2048,2048,2000,2048,2007,1983,2048,2048,2048,2048,2048,2048,2048,2048,1949,2048,2048,1656,2032,2048,2030,2051,2048,2048,2048,2048,2048,2048,2048,1952,2048,2048,2048,2048,2048,1919,1650,2048,2005,1943,2048,2048,2048,2048,2048,1975,2004,2048,2007,2048,1949,2048,2048,1940,2048,2048,2048,1854,2048,2048,2048,2048,1994,2048,2000,2048,2054,1889,1633,2048,2002,2048,2048,2048,1988,2048,2048,2048,2048,1983,2048,2048,2048,1972,2048,2048,2048,2048,2048,1924,1980,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,1999,2048,2048,1986,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2000,2048,2048,2048,1997,2048,2001,2048,2048,1997,2048,2048,2048,1889,2002,2048,1881,2048,2048,1836,1814,2048,2048,2048,2048,2050,1988,2048,2048,2048,2048,1994,2048,2048,2048,2048,2056,2048,2048,2005,2048,2048,2048,2048,2057,2048,2050,2053,1990,2048,2048,2048,2048,2001,2048,2048,1989,2048,1995,2000,2057,2048,2048,1954,2048,2048,2048,2048,2048,2005,2048,1958,2049,1997,2048,2048,2048,1984,2048,2048,1988,2048,1990,2048,2001,2048,2048,2048,2048,2048,2038,2042,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,1933,2048,2048,2048,2048,2048,2002,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1944,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,1991,2048,2048,2048,2048,2048,2048,2048,2048,1991,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,1959,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,1990,2048,2048,2048,2048,2048,2057,2048,1951,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1989,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1992,1875,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,1993,2048,1997,2048,2048,1990,2048,2048,2052,2048,2048,1995,2048,2048,2048,2056,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2010,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1680,1035,1102,1168,1162,1907,846,690,1128,2048,2048,1228,34,34,34,34,34,34,520,352,491,523,609,735,640,506,615,585,637,549,676,659,615,673,662,684,761,818,738,778,686,1083,1048,931,913,915,946,964,946,1005,1015,943,959,815,949,1328,1184,1330,1131,1332,1223,1174,1143,1179,1167,1145,1156,1151,1147,1129,941,1472,1871,1883,1896,1975,1784,1892,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1984,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,1977,2048,1982,2048,1561,1331,1489,1672,1168,1242,1587,1377,1163,1247,1128,818,889,800,1792,1978,1978,1981,2048,1975,1977,2048,1980,2048,1973,2048,1976,2048,1974,2048,1982,2048,2048,1978,2048,1975,2048,1980,2048,1979,2048,1978,1978,2048,2048,1978,2048,1979,2048,2048,1972,1979,2048,1985,1979,2048,2048,1975,2048,2048,1976,1977,2048,1974,2048,1979,1975,1890,2048,1977,2048,1973,2048,1972,1975,1983,2048,2048,2022,2034,2048,2048,1967,1974,1971,2048,2048,1976,1983,2048,2048,1973,2048,1978,2048,2048,2048,1973,2048,2048,1977,2048,1981,2048,2048,2048,1982,2048,1983,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,1977,1985,2048,1975,1981,2048,1973,1974,1973,1977,2048,1975,1975,1978,1974,1980,2048,1980,2048,1981,2048,1972,1973,2048,1979,2048,1972,1977,1978,2048,2048,2048,2048,1974,2048,1975,2048,1978,2048,1972,2048,1976,1974,1979,2048,1972,1979,2048,2048,2048,1977,2048,2048,1978,2048,2048,1973,2048,2048,1976,2048,1977,1980,2048,2048,1976,2048,2048,2048,1980,2048,2048,1976,2048,1983,2048,1976,1983,2048,1973,2048,1977,2048,1979,2048,2048,1975,1974,2048,1978,1975,1972,2048,1975,1981,1983,1981,1982,2048,1979,2048,1977,1978,2048,1975,1983,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,1966,2048,2048,2048,2048,1541,2048,2048,2048,2048,2048,2045,1470,1980,2048,1976,1983,2048,1979,2048,2048,2048,1979,2048,2048,2048,1982,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,1985,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,1977,2048,2048,1980,2048,2048,2048,1976,2048,2048,2048,1979,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,2048,1973,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1745,1979,1983,1981,2048,1888,2048,1975,1979,1975,1983,2048,2048,2048,2048,2048,2048,2048,2048,2006,2051,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,1985,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,1971,2048,2048,2048,2048,2048,2048,2048,2048,1985,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,1978,2048,1981,1979,1976,1888,2048,1971,1977,1973,1883,2048,1974,1975,1976,1983,2048,1977,1981,2048,1892,2048,1886,1890,1977,1978,1979,1978,1979,1981,1979,1980,2048,1973,1890,1979,1979,1980,2048,1974,1979,1980,2048,1975,2048,1974,1979,2048,1980,2048,1975,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,1975,2048,2048,1979,2048,2048,2048,2048,1975,2048,2048,1978,2048,2048,1972,2048,1975,1979,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,1977,2048,1977,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,1977,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,1990,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,1978,2048,1965,2048,2048,1977,1983,2048,2048,2048,2048,2048,2048,2048,2048,2048,1980,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,1981,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,1973,2048,1977,1975,1975,1978,1981,1983,2048,1981,1976,2048,1973,1977,1889,1975,1990,2048,2048,2048,2048,1979,2048,2048,1973,2048,1964,1982,2048,2048,2048,1979,2048,2048,1968,2048,2048,1979,2048,2048,1970,2048,1974,2048,1983,2048,2048,2048,2048,1975,2048,2048,1975,2048,1978,2048,2048,1976,2048,2048,2048,2048,2048,2053,2002,2048,2048,2048,2048,1907,1859,1818,2048,1950,2048,2045,2012,1965,2048,1977,2048,2048,2048,1976,2048,2048,2048,2048,2048,1974,2048,1935,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,1978,2048,2048,2048,2048,1980,2048,2048,2048,2048,2048,1975,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,1981,1983,1983,1980,1975,2048,2030,2028,1976,2048,1977,1974,2048,1883,2048,1979,2048,1974,2048,2048,1958,2048,2048,1970,2048,1972,2048,1971,2048,1942,1981,2048,2048,1973,1971,2048,1977,1975,1975,2048,1972,1972,1990,2048,1975,2048,2048,2048,1983,2048,2048,2048,2048,2048,2048,1887,2048,2048,1969,1908,2048,1974,1977,2048,1976,1887,1969,2048,1981,1977,2048,1976,1980,2048,1975,2048,1977,1976,2045,2012,1974,1972,1977,2048,1976,2048,2048,1981,2048,2048,2048,2048,1906,2048,2048,2048,2048,1873,2048,2048,2048,2048,2048,1979,2048,1973,2048,2048,1965,2048,1983,2048,2048,2048,1975,2048,1952,2047,1966,1976,2048,1866,2048,2048,1973,1968,2048,1978,2048,2048,2048,1977,2048,1973,1983,2048,2048,1912,2048,2048,1954,2048,2048,1985,2048,2048,2048,2048,1940,2048,2048,2048,2048,2048,1950,2048,2048,2048,1926,2048,2048,2048,1928,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,1977,1977,1984,1979,1972,2048,2048,2048,2048,2048,1981,2048,2048,2048,2048,2048,2048,2048,1977,2048,1979,2048,2048,2048,1978,1963,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,1980,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,1983,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1939,2048,2048,2048,2048,1990,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,1783,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2030,2028,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1933,2048,1981,2048,1990,2048,2048,2048,2048,2048,1868,1976,2048,2048,2048,1976,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1965,2048,2048,2048,1978,2048,2048,2048,2048,1975,2048,2048,1981,2048,1286,926,1085,1410,1232,1604,2048,1530,1142,1250,1303,899,1156,1159,1069,1297,1288,1250,1288,1273,1289,1387,1432,1407,1416,196],\"successes\":[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,0,1,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,1,1,1,1,1,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,0,0,1,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,1,1,1,0,1,0,0,0,1,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,1,0,0,1,0,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,0,0,0,1,0,0,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,0,0,1,1,0,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,0,0,1,1,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,0,0,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,1,1,1,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0,0,1,1,1,0,1,0,1,1,1,0,1,0,0,1,0,0,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,1,1,1,1,0,1,0,0,0,0,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0,1,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,1,1,1,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,0,1,1,1,1,0,1,0,0,0,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,0,0,0,0,0,1,0,1,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,1,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,0,1,1,1,0,0,1,1,0,0,1,0,0,1,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,0,1,0,0,1,1,0,1,0,1,0,0,0,1,1,0,0,0,0,1,1,0,1,0,0,1,1,0,1,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,1,0,1,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,1,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,1,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,1,0,0,1,1,0,1,1,0,0,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0,1,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1,0,0,1,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,1,1,0,1,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,1,1,1,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,1,0,1,1,1,0,0,0,0,1,0,0,1,0,1,1,1,0,0,1,0,0,0,0,0,1,0,1,1,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,1,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1,1,0,0,1,0,1,0,0,1,1,0,1,1,0,0,1,0,0,1,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1,0,0,1,1,0,0,1,1,1,0,0,1,1,0,0,1,0,1,0,0,0,1,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,1,0,1,0,1,1,1,0,0,0,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,1,1,0,0,1,0,0,0,1,0,0,1,0,1,0,1,1,0,1,0,1,0,1,0,0,1,1,0,1,1,1,0,1,1,1,1,1,0,1,0,1,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,1,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,0,0,0,1,0,0,1,0,1,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,1,0,0,0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,1,0,1,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,0,1,1,1,0,1,1,0,1,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,1,0,0,1,1,0,1,1,1,0,1,1,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1,0,1,1,0,1,1,1,0,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,1,0,1,1,1,1,0,1,0,0,1,1,0,1,0,0,0,1,0,1,1,0,0,1,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}\n;\n            compressedData['data'] = byteArray;\n            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');\n            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, false);\n            Module['removeRunDependency']('datafile_/Users/jenge/Dev/EDGE-latest/web/site/edge-classic.data');\n      };\n      Module['addRunDependency']('datafile_/Users/jenge/Dev/EDGE-latest/web/site/edge-classic.data');\n\n      if (!Module.preloadResults) Module.preloadResults = {};\n\n        function preloadFallback(error) {\n          console.error(error);\n          console.error('falling back to default preload behavior');\n          fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, processPackageData, handleError);\n        };\n\n        openDatabase(\n          function(db) {\n            checkCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME,\n              function(useCached, metadata) {\n                Module.preloadResults[PACKAGE_NAME] = {fromCache: useCached};\n                if (useCached) {\n                  fetchCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME, metadata, processPackageData, preloadFallback);\n                } else {\n                  fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE,\n                    function(packageData) {\n                      cacheRemotePackage(db, PACKAGE_PATH + PACKAGE_NAME, packageData, {uuid:PACKAGE_UUID}, processPackageData,\n                        function(error) {\n                          console.error(error);\n                          processPackageData(packageData);\n                        });\n                    }\n                  , preloadFallback);\n                }\n              }\n            , preloadFallback);\n          }\n        , preloadFallback);\n\n        if (Module['setStatus']) Module['setStatus']('Downloading...');\n\n    }\n    if (Module['calledRun']) {\n      runWithFS();\n    } else {\n      if (!Module['preRun']) Module['preRun'] = [];\n      Module[\"preRun\"].push(runWithFS); // FS is not initialized yet, wait for it\n    }\n\n    }\n    loadPackage({\"files\": [{\"filename\": \"/.gitkeep\", \"start\": 0, \"end\": 0}, {\"filename\": \"/edge_base/blasphemer/graphics/AUTOPAGE.png\", \"start\": 0, \"end\": 42807}, {\"filename\": \"/edge_base/blasphemer/graphics/NULL.png\", \"start\": 42807, \"end\": 43967}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARL.lmp\", \"start\": 43967, \"end\": 46678}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARR.lmp\", \"start\": 46678, \"end\": 49389}, {\"filename\": \"/edge_base/blasphemer/scripts/anims.ddf\", \"start\": 49389, \"end\": 50853}, {\"filename\": \"/edge_base/blasphemer/scripts/attacks.ddf\", \"start\": 50853, \"end\": 92267}, {\"filename\": \"/edge_base/blasphemer/scripts/coal_hud.ec\", \"start\": 92267, \"end\": 108003}, {\"filename\": \"/edge_base/blasphemer/scripts/colmap.ddf\", \"start\": 108003, \"end\": 108275}, {\"filename\": \"/edge_base/blasphemer/scripts/flats.ddf\", \"start\": 108275, \"end\": 108799}, {\"filename\": \"/edge_base/blasphemer/scripts/fonts.ddf\", \"start\": 108799, \"end\": 109780}, {\"filename\": \"/edge_base/blasphemer/scripts/games.ddf\", \"start\": 109780, \"end\": 112375}, {\"filename\": \"/edge_base/blasphemer/scripts/images.ddf\", \"start\": 112375, \"end\": 114090}, {\"filename\": \"/edge_base/blasphemer/scripts/language.ldf\", \"start\": 114090, \"end\": 122344}, {\"filename\": \"/edge_base/blasphemer/scripts/levels.ddf\", \"start\": 122344, \"end\": 134555}, {\"filename\": \"/edge_base/blasphemer/scripts/lines.ddf\", \"start\": 134555, \"end\": 139126}, {\"filename\": \"/edge_base/blasphemer/scripts/playlist.ddf\", \"start\": 139126, \"end\": 141205}, {\"filename\": \"/edge_base/blasphemer/scripts/rscript.rts\", \"start\": 141205, \"end\": 153637}, {\"filename\": \"/edge_base/blasphemer/scripts/sectors.ddf\", \"start\": 153637, \"end\": 155029}, {\"filename\": \"/edge_base/blasphemer/scripts/sounds.ddf\", \"start\": 155029, \"end\": 165859}, {\"filename\": \"/edge_base/blasphemer/scripts/styles.ddf\", \"start\": 165859, \"end\": 170724}, {\"filename\": \"/edge_base/blasphemer/scripts/switch.ddf\", \"start\": 170724, \"end\": 171109}, {\"filename\": \"/edge_base/blasphemer/scripts/things.ddf\", \"start\": 171109, \"end\": 255688}, {\"filename\": \"/edge_base/blasphemer/scripts/weapons.ddf\", \"start\": 255688, \"end\": 265590}, {\"filename\": \"/edge_base/chex/graphics/M_SKULL1.png\", \"start\": 265590, \"end\": 266157}, {\"filename\": \"/edge_base/chex/graphics/M_SKULL2.png\", \"start\": 266157, \"end\": 266905}, {\"filename\": \"/edge_base/chex/graphics/STBAR.lmp\", \"start\": 266905, \"end\": 290447}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT033.lmp\", \"start\": 290447, \"end\": 290564}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT034.lmp\", \"start\": 290564, \"end\": 290697}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT035.lmp\", \"start\": 290697, \"end\": 290948}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT036.lmp\", \"start\": 290948, \"end\": 291275}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT037.lmp\", \"start\": 291275, \"end\": 291538}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT038.lmp\", \"start\": 291538, \"end\": 291630}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT039.lmp\", \"start\": 291630, \"end\": 291788}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT040.lmp\", \"start\": 291788, \"end\": 291946}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT041.lmp\", \"start\": 291946, \"end\": 292106}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT042.lmp\", \"start\": 292106, \"end\": 292226}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT043.lmp\", \"start\": 292226, \"end\": 292301}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT044.lmp\", \"start\": 292301, \"end\": 292379}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT045.lmp\", \"start\": 292379, \"end\": 292453}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT046.lmp\", \"start\": 292453, \"end\": 292644}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT047.lmp\", \"start\": 292644, \"end\": 292871}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT048.lmp\", \"start\": 292871, \"end\": 293009}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT049.lmp\", \"start\": 293009, \"end\": 293253}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT050.lmp\", \"start\": 293253, \"end\": 293500}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT051.lmp\", \"start\": 293500, \"end\": 293706}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT052.lmp\", \"start\": 293706, \"end\": 293950}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT053.lmp\", \"start\": 293950, \"end\": 294189}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT054.lmp\", \"start\": 294189, \"end\": 294387}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT055.lmp\", \"start\": 294387, \"end\": 294614}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT056.lmp\", \"start\": 294614, \"end\": 294853}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT057.lmp\", \"start\": 294853, \"end\": 294941}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT058.lmp\", \"start\": 294941, \"end\": 295047}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT059.lmp\", \"start\": 295047, \"end\": 295208}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT060.lmp\", \"start\": 295208, \"end\": 295300}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT061.lmp\", \"start\": 295300, \"end\": 295461}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT062.lmp\", \"start\": 295461, \"end\": 295655}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT063.lmp\", \"start\": 295655, \"end\": 295876}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT064.lmp\", \"start\": 295876, \"end\": 296077}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT065.lmp\", \"start\": 296077, \"end\": 296280}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT066.lmp\", \"start\": 296280, \"end\": 296506}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT067.lmp\", \"start\": 296506, \"end\": 296702}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT068.lmp\", \"start\": 296702, \"end\": 296860}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT069.lmp\", \"start\": 296860, \"end\": 297085}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT070.lmp\", \"start\": 297085, \"end\": 297312}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT071.lmp\", \"start\": 297312, \"end\": 297423}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT072.lmp\", \"start\": 297423, \"end\": 297614}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT073.lmp\", \"start\": 297614, \"end\": 297820}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT074.lmp\", \"start\": 297820, \"end\": 297982}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT075.lmp\", \"start\": 297982, \"end\": 298270}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT076.lmp\", \"start\": 298270, \"end\": 298493}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT077.lmp\", \"start\": 298493, \"end\": 298716}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT078.lmp\", \"start\": 298716, \"end\": 298886}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT079.lmp\", \"start\": 298886, \"end\": 299115}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT080.lmp\", \"start\": 299115, \"end\": 299329}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT081.lmp\", \"start\": 299329, \"end\": 299533}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT082.lmp\", \"start\": 299533, \"end\": 299692}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT083.lmp\", \"start\": 299692, \"end\": 299913}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT084.lmp\", \"start\": 299913, \"end\": 300109}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT085.lmp\", \"start\": 300109, \"end\": 300426}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT086.lmp\", \"start\": 300426, \"end\": 300628}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT087.lmp\", \"start\": 300628, \"end\": 300798}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT088.lmp\", \"start\": 300798, \"end\": 300998}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT089.lmp\", \"start\": 300998, \"end\": 301216}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT090.lmp\", \"start\": 301216, \"end\": 301407}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT091.lmp\", \"start\": 301407, \"end\": 301625}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT092.lmp\", \"start\": 301625, \"end\": 301808}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT093.lmp\", \"start\": 301808, \"end\": 301888}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT094.lmp\", \"start\": 301888, \"end\": 301980}, {\"filename\": \"/edge_base/chex/graphics/credit.lmp\", \"start\": 301980, \"end\": 421268}, {\"filename\": \"/edge_base/chex/graphics/help1.lmp\", \"start\": 421268, \"end\": 540556}, {\"filename\": \"/edge_base/chex/graphics/titlepic.lmp\", \"start\": 540556, \"end\": 659844}, {\"filename\": \"/edge_base/chex/graphics/wimap0.lmp\", \"start\": 659844, \"end\": 779132}, {\"filename\": \"/edge_base/chex/scripts/attacks.ddf\", \"start\": 779132, \"end\": 782334}, {\"filename\": \"/edge_base/chex/scripts/fonts.ddf\", \"start\": 782334, \"end\": 782938}, {\"filename\": \"/edge_base/chex/scripts/games.ddf\", \"start\": 782938, \"end\": 783787}, {\"filename\": \"/edge_base/chex/scripts/language.ldf\", \"start\": 783787, \"end\": 788721}, {\"filename\": \"/edge_base/chex/scripts/levels.ddf\", \"start\": 788721, \"end\": 791705}, {\"filename\": \"/edge_base/chex/scripts/styles.ddf\", \"start\": 791705, \"end\": 793879}, {\"filename\": \"/edge_base/chex/scripts/things.ddf\", \"start\": 793879, \"end\": 801074}, {\"filename\": \"/edge_base/doom/graphics/CREDIT.lmp\", \"start\": 801074, \"end\": 920362}, {\"filename\": \"/edge_base/doom/graphics/ENDPIC.lmp\", \"start\": 920362, \"end\": 1039650}, {\"filename\": \"/edge_base/doom/graphics/HELP1.lmp\", \"start\": 1039650, \"end\": 1158938}, {\"filename\": \"/edge_base/doom/graphics/INTERPIC.lmp\", \"start\": 1158938, \"end\": 1278226}, {\"filename\": \"/edge_base/doom/graphics/PFUB1.lmp\", \"start\": 1278226, \"end\": 1397514}, {\"filename\": \"/edge_base/doom/graphics/PFUB2.lmp\", \"start\": 1397514, \"end\": 1516802}, {\"filename\": \"/edge_base/doom/graphics/TITLEPIC.lmp\", \"start\": 1516802, \"end\": 1636090}, {\"filename\": \"/edge_base/doom/graphics/VICTORY2.lmp\", \"start\": 1636090, \"end\": 1755378}, {\"filename\": \"/edge_base/doom/graphics/WIA20000.lmp\", \"start\": 1755378, \"end\": 1784498}, {\"filename\": \"/edge_base/doom/graphics/WIA20001.lmp\", \"start\": 1784498, \"end\": 1813618}, {\"filename\": \"/edge_base/doom/graphics/WIA20002.lmp\", \"start\": 1813618, \"end\": 1842738}, {\"filename\": \"/edge_base/doom/graphics/WIA20400.lmp\", \"start\": 1842738, \"end\": 1848336}, {\"filename\": \"/edge_base/doom/graphics/WIA20401.lmp\", \"start\": 1848336, \"end\": 1853934}, {\"filename\": \"/edge_base/doom/graphics/WIA20402.lmp\", \"start\": 1853934, \"end\": 1859532}, {\"filename\": \"/edge_base/doom/graphics/WIA20500.lmp\", \"start\": 1859532, \"end\": 1872740}, {\"filename\": \"/edge_base/doom/graphics/WIA20501.lmp\", \"start\": 1872740, \"end\": 1885948}, {\"filename\": \"/edge_base/doom/graphics/WIA20502.lmp\", \"start\": 1885948, \"end\": 1899156}, {\"filename\": \"/edge_base/doom/graphics/WIMAP0.lmp\", \"start\": 1899156, \"end\": 2018444}, {\"filename\": \"/edge_base/doom/graphics/WIMAP1.lmp\", \"start\": 2018444, \"end\": 2137732}, {\"filename\": \"/edge_base/doom/graphics/WIMAP2.lmp\", \"start\": 2137732, \"end\": 2257020}, {\"filename\": \"/edge_base/doom/scripts/images.ddf\", \"start\": 2257020, \"end\": 2258743}, {\"filename\": \"/edge_base/doom/textures/SKY1_B.png\", \"start\": 2258743, \"end\": 2273386}, {\"filename\": \"/edge_base/doom/textures/SKY1_E.png\", \"start\": 2273386, \"end\": 2296565}, {\"filename\": \"/edge_base/doom/textures/SKY1_N.png\", \"start\": 2296565, \"end\": 2319452}, {\"filename\": \"/edge_base/doom/textures/SKY1_S.png\", \"start\": 2319452, \"end\": 2342077}, {\"filename\": \"/edge_base/doom/textures/SKY1_T.png\", \"start\": 2342077, \"end\": 2369269}, {\"filename\": \"/edge_base/doom/textures/SKY1_W.png\", \"start\": 2369269, \"end\": 2392112}, {\"filename\": \"/edge_base/doom/textures/SKY2_B.png\", \"start\": 2392112, \"end\": 2408979}, {\"filename\": \"/edge_base/doom/textures/SKY2_E.png\", \"start\": 2408979, \"end\": 2435548}, {\"filename\": \"/edge_base/doom/textures/SKY2_N.png\", \"start\": 2435548, \"end\": 2462404}, {\"filename\": \"/edge_base/doom/textures/SKY2_S.png\", \"start\": 2462404, \"end\": 2489904}, {\"filename\": \"/edge_base/doom/textures/SKY2_T.png\", \"start\": 2489904, \"end\": 2514258}, {\"filename\": \"/edge_base/doom/textures/SKY2_W.png\", \"start\": 2514258, \"end\": 2540445}, {\"filename\": \"/edge_base/doom/textures/SKY3_B.png\", \"start\": 2540445, \"end\": 2552428}, {\"filename\": \"/edge_base/doom/textures/SKY3_E.png\", \"start\": 2552428, \"end\": 2571994}, {\"filename\": \"/edge_base/doom/textures/SKY3_N.png\", \"start\": 2571994, \"end\": 2591695}, {\"filename\": \"/edge_base/doom/textures/SKY3_S.png\", \"start\": 2591695, \"end\": 2612029}, {\"filename\": \"/edge_base/doom/textures/SKY3_T.png\", \"start\": 2612029, \"end\": 2636472}, {\"filename\": \"/edge_base/doom/textures/SKY3_W.png\", \"start\": 2636472, \"end\": 2655517}, {\"filename\": \"/edge_base/doom/textures/SKY4_B.png\", \"start\": 2655517, \"end\": 2693853}, {\"filename\": \"/edge_base/doom/textures/SKY4_E.png\", \"start\": 2693853, \"end\": 2706462}, {\"filename\": \"/edge_base/doom/textures/SKY4_N.png\", \"start\": 2706462, \"end\": 2718178}, {\"filename\": \"/edge_base/doom/textures/SKY4_S.png\", \"start\": 2718178, \"end\": 2729894}, {\"filename\": \"/edge_base/doom/textures/SKY4_T.png\", \"start\": 2729894, \"end\": 2768230}, {\"filename\": \"/edge_base/doom/textures/SKY4_W.png\", \"start\": 2768230, \"end\": 2780839}, {\"filename\": \"/edge_base/doom1/graphics/CREDIT.lmp\", \"start\": 2780839, \"end\": 2900127}, {\"filename\": \"/edge_base/doom1/graphics/HELP1.lmp\", \"start\": 2900127, \"end\": 3019415}, {\"filename\": \"/edge_base/doom1/graphics/HELP2.lmp\", \"start\": 3019415, \"end\": 3138703}, {\"filename\": \"/edge_base/doom1/graphics/TITLEPIC.lmp\", \"start\": 3138703, \"end\": 3257991}, {\"filename\": \"/edge_base/doom1/graphics/WIMAP0.lmp\", \"start\": 3257991, \"end\": 3377279}, {\"filename\": \"/edge_base/doom1/scripts/images.ddf\", \"start\": 3377279, \"end\": 3379011}, {\"filename\": \"/edge_base/doom1/textures/SKY1_B.png\", \"start\": 3379011, \"end\": 3393654}, {\"filename\": \"/edge_base/doom1/textures/SKY1_E.png\", \"start\": 3393654, \"end\": 3416833}, {\"filename\": \"/edge_base/doom1/textures/SKY1_N.png\", \"start\": 3416833, \"end\": 3439720}, {\"filename\": \"/edge_base/doom1/textures/SKY1_S.png\", \"start\": 3439720, \"end\": 3462345}, {\"filename\": \"/edge_base/doom1/textures/SKY1_T.png\", \"start\": 3462345, \"end\": 3489537}, {\"filename\": \"/edge_base/doom1/textures/SKY1_W.png\", \"start\": 3489537, \"end\": 3512380}, {\"filename\": \"/edge_base/doom2/graphics/BOSSBACK.lmp\", \"start\": 3512380, \"end\": 3631668}, {\"filename\": \"/edge_base/doom2/graphics/CREDIT.lmp\", \"start\": 3631668, \"end\": 3750956}, {\"filename\": \"/edge_base/doom2/graphics/HELP.lmp\", \"start\": 3750956, \"end\": 3870244}, {\"filename\": \"/edge_base/doom2/graphics/INTERPIC.lmp\", \"start\": 3870244, \"end\": 3989532}, {\"filename\": \"/edge_base/doom2/graphics/TITLEPIC.lmp\", \"start\": 3989532, \"end\": 4108820}, {\"filename\": \"/edge_base/doom2/scripts/images.ddf\", \"start\": 4108820, \"end\": 4110158}, {\"filename\": \"/edge_base/doom2/textures/SKY1_B.png\", \"start\": 4110158, \"end\": 4131438}, {\"filename\": \"/edge_base/doom2/textures/SKY1_E.png\", \"start\": 4131438, \"end\": 4149118}, {\"filename\": \"/edge_base/doom2/textures/SKY1_N.png\", \"start\": 4149118, \"end\": 4166798}, {\"filename\": \"/edge_base/doom2/textures/SKY1_S.png\", \"start\": 4166798, \"end\": 4184478}, {\"filename\": \"/edge_base/doom2/textures/SKY1_T.png\", \"start\": 4184478, \"end\": 4205758}, {\"filename\": \"/edge_base/doom2/textures/SKY1_W.png\", \"start\": 4205758, \"end\": 4223438}, {\"filename\": \"/edge_base/doom2/textures/SKY2_B.png\", \"start\": 4223438, \"end\": 4237361}, {\"filename\": \"/edge_base/doom2/textures/SKY2_E.png\", \"start\": 4237361, \"end\": 4262580}, {\"filename\": \"/edge_base/doom2/textures/SKY2_N.png\", \"start\": 4262580, \"end\": 4287812}, {\"filename\": \"/edge_base/doom2/textures/SKY2_S.png\", \"start\": 4287812, \"end\": 4313015}, {\"filename\": \"/edge_base/doom2/textures/SKY2_T.png\", \"start\": 4313015, \"end\": 4337767}, {\"filename\": \"/edge_base/doom2/textures/SKY2_W.png\", \"start\": 4337767, \"end\": 4362971}, {\"filename\": \"/edge_base/doom2/textures/SKY3_B.png\", \"start\": 4362971, \"end\": 4446541}, {\"filename\": \"/edge_base/doom2/textures/SKY3_E.png\", \"start\": 4446541, \"end\": 4541350}, {\"filename\": \"/edge_base/doom2/textures/SKY3_N.png\", \"start\": 4541350, \"end\": 4640121}, {\"filename\": \"/edge_base/doom2/textures/SKY3_S.png\", \"start\": 4640121, \"end\": 4738892}, {\"filename\": \"/edge_base/doom2/textures/SKY3_T.png\", \"start\": 4738892, \"end\": 4925383}, {\"filename\": \"/edge_base/doom2/textures/SKY3_W.png\", \"start\": 4925383, \"end\": 5020192}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARL.lmp\", \"start\": 5020192, \"end\": 5023603}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARR.lmp\", \"start\": 5023603, \"end\": 5027014}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT033.png\", \"start\": 5027014, \"end\": 5027359}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT034.png\", \"start\": 5027359, \"end\": 5027706}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT035.png\", \"start\": 5027706, \"end\": 5028137}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT036.png\", \"start\": 5028137, \"end\": 5028546}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT037.png\", \"start\": 5028546, \"end\": 5028967}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT038.png\", \"start\": 5028967, \"end\": 5029414}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT039.png\", \"start\": 5029414, \"end\": 5029735}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT040.png\", \"start\": 5029735, \"end\": 5030125}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT041.png\", \"start\": 5030125, \"end\": 5030514}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT042.png\", \"start\": 5030514, \"end\": 5030965}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT043.png\", \"start\": 5030965, \"end\": 5031324}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT044.png\", \"start\": 5031324, \"end\": 5031648}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT045.png\", \"start\": 5031648, \"end\": 5031961}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT046.png\", \"start\": 5031961, \"end\": 5032257}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT047.png\", \"start\": 5032257, \"end\": 5032680}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT048.png\", \"start\": 5032680, \"end\": 5033085}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT049.png\", \"start\": 5033085, \"end\": 5033465}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT050.png\", \"start\": 5033465, \"end\": 5033873}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT051.png\", \"start\": 5033873, \"end\": 5034336}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT052.png\", \"start\": 5034336, \"end\": 5034755}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT053.png\", \"start\": 5034755, \"end\": 5035163}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT054.png\", \"start\": 5035163, \"end\": 5035571}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT055.png\", \"start\": 5035571, \"end\": 5035975}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT056.png\", \"start\": 5035975, \"end\": 5036447}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT057.png\", \"start\": 5036447, \"end\": 5036862}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT058.png\", \"start\": 5036862, \"end\": 5037210}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT059.png\", \"start\": 5037210, \"end\": 5037571}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT060.png\", \"start\": 5037571, \"end\": 5037940}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT061.png\", \"start\": 5037940, \"end\": 5038281}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT062.png\", \"start\": 5038281, \"end\": 5038702}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT063.png\", \"start\": 5038702, \"end\": 5039105}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT064.png\", \"start\": 5039105, \"end\": 5039523}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT065.png\", \"start\": 5039523, \"end\": 5040026}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT066.png\", \"start\": 5040026, \"end\": 5040451}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT067.png\", \"start\": 5040451, \"end\": 5040854}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT068.png\", \"start\": 5040854, \"end\": 5041287}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT069.png\", \"start\": 5041287, \"end\": 5041703}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT070.png\", \"start\": 5041703, \"end\": 5042108}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT071.png\", \"start\": 5042108, \"end\": 5042527}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT072.png\", \"start\": 5042527, \"end\": 5042952}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT073.png\", \"start\": 5042952, \"end\": 5043354}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT074.png\", \"start\": 5043354, \"end\": 5043823}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT075.png\", \"start\": 5043823, \"end\": 5044257}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT076.png\", \"start\": 5044257, \"end\": 5044646}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT077.png\", \"start\": 5044646, \"end\": 5045101}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT078.png\", \"start\": 5045101, \"end\": 5045611}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT079.png\", \"start\": 5045611, \"end\": 5046021}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT080.png\", \"start\": 5046021, \"end\": 5046428}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT081.png\", \"start\": 5046428, \"end\": 5046845}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT082.png\", \"start\": 5046845, \"end\": 5047264}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT083.png\", \"start\": 5047264, \"end\": 5047690}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT084.png\", \"start\": 5047690, \"end\": 5048075}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT085.png\", \"start\": 5048075, \"end\": 5048490}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT086.png\", \"start\": 5048490, \"end\": 5048914}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT087.png\", \"start\": 5048914, \"end\": 5049359}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT088.png\", \"start\": 5049359, \"end\": 5049785}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT089.png\", \"start\": 5049785, \"end\": 5050250}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT090.png\", \"start\": 5050250, \"end\": 5050668}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT091.png\", \"start\": 5050668, \"end\": 5051055}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT092.png\", \"start\": 5051055, \"end\": 5051489}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT093.png\", \"start\": 5051489, \"end\": 5051885}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT094.png\", \"start\": 5051885, \"end\": 5052236}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT095.png\", \"start\": 5052236, \"end\": 5052549}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT096.png\", \"start\": 5052549, \"end\": 5052869}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT097.png\", \"start\": 5052869, \"end\": 5053327}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT098.png\", \"start\": 5053327, \"end\": 5053727}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT099.png\", \"start\": 5053727, \"end\": 5054161}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT100.png\", \"start\": 5054161, \"end\": 5054568}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT101.png\", \"start\": 5054568, \"end\": 5054964}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT102.png\", \"start\": 5054964, \"end\": 5055355}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT103.png\", \"start\": 5055355, \"end\": 5055799}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT104.png\", \"start\": 5055799, \"end\": 5056201}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT105.png\", \"start\": 5056201, \"end\": 5056581}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT106.png\", \"start\": 5056581, \"end\": 5057025}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT107.png\", \"start\": 5057025, \"end\": 5057494}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT108.png\", \"start\": 5057494, \"end\": 5057868}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT109.png\", \"start\": 5057868, \"end\": 5058289}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT110.png\", \"start\": 5058289, \"end\": 5058705}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT111.png\", \"start\": 5058705, \"end\": 5059154}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT112.png\", \"start\": 5059154, \"end\": 5059544}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT113.png\", \"start\": 5059544, \"end\": 5060002}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT114.png\", \"start\": 5060002, \"end\": 5060399}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT115.png\", \"start\": 5060399, \"end\": 5060810}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT116.png\", \"start\": 5060810, \"end\": 5061244}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT117.png\", \"start\": 5061244, \"end\": 5061646}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT118.png\", \"start\": 5061646, \"end\": 5062107}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT119.png\", \"start\": 5062107, \"end\": 5062524}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT120.png\", \"start\": 5062524, \"end\": 5062968}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT121.png\", \"start\": 5062968, \"end\": 5063361}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT122.png\", \"start\": 5063361, \"end\": 5063796}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT123.png\", \"start\": 5063796, \"end\": 5064186}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT124.png\", \"start\": 5064186, \"end\": 5064547}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT125.png\", \"start\": 5064547, \"end\": 5064935}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT126.png\", \"start\": 5064935, \"end\": 5065325}, {\"filename\": \"/edge_base/freedoom1/scripts/attacks.ddf\", \"start\": 5065325, \"end\": 5085598}, {\"filename\": \"/edge_base/freedoom1/scripts/fonts.ddf\", \"start\": 5085598, \"end\": 5086236}, {\"filename\": \"/edge_base/freedoom1/scripts/images.ddf\", \"start\": 5086236, \"end\": 5093432}, {\"filename\": \"/edge_base/freedoom1/scripts/language.ldf\", \"start\": 5093432, \"end\": 5104702}, {\"filename\": \"/edge_base/freedoom1/scripts/styles.ddf\", \"start\": 5104702, \"end\": 5109674}, {\"filename\": \"/edge_base/freedoom1/scripts/things.ddf\", \"start\": 5109674, \"end\": 5117992}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARL.lmp\", \"start\": 5117992, \"end\": 5121403}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARR.lmp\", \"start\": 5121403, \"end\": 5124814}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT033.png\", \"start\": 5124814, \"end\": 5125159}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT034.png\", \"start\": 5125159, \"end\": 5125506}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT035.png\", \"start\": 5125506, \"end\": 5125937}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT036.png\", \"start\": 5125937, \"end\": 5126346}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT037.png\", \"start\": 5126346, \"end\": 5126767}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT038.png\", \"start\": 5126767, \"end\": 5127214}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT039.png\", \"start\": 5127214, \"end\": 5127535}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT040.png\", \"start\": 5127535, \"end\": 5127925}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT041.png\", \"start\": 5127925, \"end\": 5128314}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT042.png\", \"start\": 5128314, \"end\": 5128765}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT043.png\", \"start\": 5128765, \"end\": 5129124}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT044.png\", \"start\": 5129124, \"end\": 5129448}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT045.png\", \"start\": 5129448, \"end\": 5129761}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT046.png\", \"start\": 5129761, \"end\": 5130057}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT047.png\", \"start\": 5130057, \"end\": 5130480}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT048.png\", \"start\": 5130480, \"end\": 5130885}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT049.png\", \"start\": 5130885, \"end\": 5131265}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT050.png\", \"start\": 5131265, \"end\": 5131673}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT051.png\", \"start\": 5131673, \"end\": 5132136}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT052.png\", \"start\": 5132136, \"end\": 5132555}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT053.png\", \"start\": 5132555, \"end\": 5132963}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT054.png\", \"start\": 5132963, \"end\": 5133371}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT055.png\", \"start\": 5133371, \"end\": 5133775}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT056.png\", \"start\": 5133775, \"end\": 5134247}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT057.png\", \"start\": 5134247, \"end\": 5134662}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT058.png\", \"start\": 5134662, \"end\": 5135010}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT059.png\", \"start\": 5135010, \"end\": 5135371}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT060.png\", \"start\": 5135371, \"end\": 5135740}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT061.png\", \"start\": 5135740, \"end\": 5136081}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT062.png\", \"start\": 5136081, \"end\": 5136502}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT063.png\", \"start\": 5136502, \"end\": 5136905}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT064.png\", \"start\": 5136905, \"end\": 5137323}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT065.png\", \"start\": 5137323, \"end\": 5137826}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT066.png\", \"start\": 5137826, \"end\": 5138251}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT067.png\", \"start\": 5138251, \"end\": 5138654}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT068.png\", \"start\": 5138654, \"end\": 5139087}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT069.png\", \"start\": 5139087, \"end\": 5139503}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT070.png\", \"start\": 5139503, \"end\": 5139908}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT071.png\", \"start\": 5139908, \"end\": 5140327}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT072.png\", \"start\": 5140327, \"end\": 5140752}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT073.png\", \"start\": 5140752, \"end\": 5141154}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT074.png\", \"start\": 5141154, \"end\": 5141623}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT075.png\", \"start\": 5141623, \"end\": 5142057}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT076.png\", \"start\": 5142057, \"end\": 5142446}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT077.png\", \"start\": 5142446, \"end\": 5142901}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT078.png\", \"start\": 5142901, \"end\": 5143411}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT079.png\", \"start\": 5143411, \"end\": 5143821}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT080.png\", \"start\": 5143821, \"end\": 5144228}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT081.png\", \"start\": 5144228, \"end\": 5144645}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT082.png\", \"start\": 5144645, \"end\": 5145064}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT083.png\", \"start\": 5145064, \"end\": 5145490}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT084.png\", \"start\": 5145490, \"end\": 5145875}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT085.png\", \"start\": 5145875, \"end\": 5146290}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT086.png\", \"start\": 5146290, \"end\": 5146714}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT087.png\", \"start\": 5146714, \"end\": 5147159}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT088.png\", \"start\": 5147159, \"end\": 5147585}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT089.png\", \"start\": 5147585, \"end\": 5148050}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT090.png\", \"start\": 5148050, \"end\": 5148468}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT091.png\", \"start\": 5148468, \"end\": 5148855}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT092.png\", \"start\": 5148855, \"end\": 5149289}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT093.png\", \"start\": 5149289, \"end\": 5149685}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT094.png\", \"start\": 5149685, \"end\": 5150036}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT095.png\", \"start\": 5150036, \"end\": 5150349}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT096.png\", \"start\": 5150349, \"end\": 5150669}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT097.png\", \"start\": 5150669, \"end\": 5151127}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT098.png\", \"start\": 5151127, \"end\": 5151527}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT099.png\", \"start\": 5151527, \"end\": 5151961}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT100.png\", \"start\": 5151961, \"end\": 5152368}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT101.png\", \"start\": 5152368, \"end\": 5152764}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT102.png\", \"start\": 5152764, \"end\": 5153155}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT103.png\", \"start\": 5153155, \"end\": 5153599}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT104.png\", \"start\": 5153599, \"end\": 5154001}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT105.png\", \"start\": 5154001, \"end\": 5154381}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT106.png\", \"start\": 5154381, \"end\": 5154825}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT107.png\", \"start\": 5154825, \"end\": 5155294}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT108.png\", \"start\": 5155294, \"end\": 5155668}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT109.png\", \"start\": 5155668, \"end\": 5156089}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT110.png\", \"start\": 5156089, \"end\": 5156505}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT111.png\", \"start\": 5156505, \"end\": 5156954}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT112.png\", \"start\": 5156954, \"end\": 5157344}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT113.png\", \"start\": 5157344, \"end\": 5157802}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT114.png\", \"start\": 5157802, \"end\": 5158199}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT115.png\", \"start\": 5158199, \"end\": 5158610}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT116.png\", \"start\": 5158610, \"end\": 5159044}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT117.png\", \"start\": 5159044, \"end\": 5159446}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT118.png\", \"start\": 5159446, \"end\": 5159907}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT119.png\", \"start\": 5159907, \"end\": 5160324}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT120.png\", \"start\": 5160324, \"end\": 5160768}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT121.png\", \"start\": 5160768, \"end\": 5161161}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT122.png\", \"start\": 5161161, \"end\": 5161596}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT123.png\", \"start\": 5161596, \"end\": 5161986}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT124.png\", \"start\": 5161986, \"end\": 5162347}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT125.png\", \"start\": 5162347, \"end\": 5162735}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT126.png\", \"start\": 5162735, \"end\": 5163125}, {\"filename\": \"/edge_base/freedoom2/scripts/attacks.ddf\", \"start\": 5163125, \"end\": 5183398}, {\"filename\": \"/edge_base/freedoom2/scripts/fonts.ddf\", \"start\": 5183398, \"end\": 5184036}, {\"filename\": \"/edge_base/freedoom2/scripts/images.ddf\", \"start\": 5184036, \"end\": 5191232}, {\"filename\": \"/edge_base/freedoom2/scripts/language.ldf\", \"start\": 5191232, \"end\": 5202366}, {\"filename\": \"/edge_base/freedoom2/scripts/styles.ddf\", \"start\": 5202366, \"end\": 5206979}, {\"filename\": \"/edge_base/freedoom2/scripts/things.ddf\", \"start\": 5206979, \"end\": 5215292}, {\"filename\": \"/edge_base/hacx/graphics/CREDIT.lmp\", \"start\": 5215292, \"end\": 5334580}, {\"filename\": \"/edge_base/hacx/graphics/HELP.lmp\", \"start\": 5334580, \"end\": 5453868}, {\"filename\": \"/edge_base/hacx/graphics/INTERPIC.lmp\", \"start\": 5453868, \"end\": 5573156}, {\"filename\": \"/edge_base/hacx/graphics/STBARL.lmp\", \"start\": 5573156, \"end\": 5576567}, {\"filename\": \"/edge_base/hacx/graphics/STBARR.lmp\", \"start\": 5576567, \"end\": 5579978}, {\"filename\": \"/edge_base/hacx/graphics/TITLEPIC.lmp\", \"start\": 5579978, \"end\": 5699266}, {\"filename\": \"/edge_base/hacx/scripts/anims.ddf\", \"start\": 5699266, \"end\": 5702201}, {\"filename\": \"/edge_base/hacx/scripts/attacks.ddf\", \"start\": 5702201, \"end\": 5709360}, {\"filename\": \"/edge_base/hacx/scripts/colmap.ddf\", \"start\": 5709360, \"end\": 5709628}, {\"filename\": \"/edge_base/hacx/scripts/fonts.ddf\", \"start\": 5709628, \"end\": 5710255}, {\"filename\": \"/edge_base/hacx/scripts/language.ldf\", \"start\": 5710255, \"end\": 5716089}, {\"filename\": \"/edge_base/hacx/scripts/lines.ddf\", \"start\": 5716089, \"end\": 5716937}, {\"filename\": \"/edge_base/hacx/scripts/playlist.ddf\", \"start\": 5716937, \"end\": 5718370}, {\"filename\": \"/edge_base/hacx/scripts/styles.ddf\", \"start\": 5718370, \"end\": 5720827}, {\"filename\": \"/edge_base/hacx/scripts/switch.ddf\", \"start\": 5720827, \"end\": 5723848}, {\"filename\": \"/edge_base/hacx/scripts/things.ddf\", \"start\": 5723848, \"end\": 5807633}, {\"filename\": \"/edge_base/hacx/scripts/weapons.ddf\", \"start\": 5807633, \"end\": 5812639}, {\"filename\": \"/edge_base/hacx/sprites/CHGFA0.lmp\", \"start\": 5812639, \"end\": 5827443}, {\"filename\": \"/edge_base/hacx/sprites/CHGFB0.lmp\", \"start\": 5827443, \"end\": 5842469}, {\"filename\": \"/edge_base/hacx/sprites/CHGGA0.lmp\", \"start\": 5842469, \"end\": 5857043}, {\"filename\": \"/edge_base/hacx/sprites/CHGGB0.lmp\", \"start\": 5857043, \"end\": 5863400}, {\"filename\": \"/edge_base/hacx/sprites/MISFA0.lmp\", \"start\": 5863400, \"end\": 5903672}, {\"filename\": \"/edge_base/hacx/sprites/MISFB0.lmp\", \"start\": 5903672, \"end\": 5938838}, {\"filename\": \"/edge_base/hacx/sprites/MISFC0.lmp\", \"start\": 5938838, \"end\": 5971991}, {\"filename\": \"/edge_base/hacx/sprites/MISFD0.lmp\", \"start\": 5971991, \"end\": 6008374}, {\"filename\": \"/edge_base/hacx/sprites/MISGA0.lmp\", \"start\": 6008374, \"end\": 6039904}, {\"filename\": \"/edge_base/hacx/sprites/MISGB0.lmp\", \"start\": 6039904, \"end\": 6075010}, {\"filename\": \"/edge_base/hacx/sprites/PISGD0.lmp\", \"start\": 6075010, \"end\": 6099153}, {\"filename\": \"/edge_base/hacx/sprites/PISGE0.lmp\", \"start\": 6099153, \"end\": 6128819}, {\"filename\": \"/edge_base/hacx/sprites/PLSGA0.lmp\", \"start\": 6128819, \"end\": 6139683}, {\"filename\": \"/edge_base/hacx/sprites/PLSGB0.lmp\", \"start\": 6139683, \"end\": 6153077}, {\"filename\": \"/edge_base/hacx/sprites/SAWGA0.lmp\", \"start\": 6153077, \"end\": 6167526}, {\"filename\": \"/edge_base/hacx/sprites/SAWGB0.lmp\", \"start\": 6167526, \"end\": 6181634}, {\"filename\": \"/edge_base/hacx/sprites/SAWGC0.lmp\", \"start\": 6181634, \"end\": 6190719}, {\"filename\": \"/edge_base/hacx/sprites/SAWGD0.lmp\", \"start\": 6190719, \"end\": 6199804}, {\"filename\": \"/edge_base/hacx/sprites/SHT2A0.lmp\", \"start\": 6199804, \"end\": 6215315}, {\"filename\": \"/edge_base/hacx/sprites/SHT2B0.lmp\", \"start\": 6215315, \"end\": 6231056}, {\"filename\": \"/edge_base/hacx/sprites/SHT2C0.lmp\", \"start\": 6231056, \"end\": 6247089}, {\"filename\": \"/edge_base/hacx/sprites/SHT2D0.lmp\", \"start\": 6247089, \"end\": 6263216}, {\"filename\": \"/edge_base/hacx/sprites/SHT2E0.lmp\", \"start\": 6263216, \"end\": 6279502}, {\"filename\": \"/edge_base/hacx/sprites/SHT2F0.lmp\", \"start\": 6279502, \"end\": 6295656}, {\"filename\": \"/edge_base/hacx/sprites/SHT2G0.lmp\", \"start\": 6295656, \"end\": 6311472}, {\"filename\": \"/edge_base/hacx/sprites/SHT2H0.lmp\", \"start\": 6311472, \"end\": 6326983}, {\"filename\": \"/edge_base/hacx/sprites/SHT2I0.lmp\", \"start\": 6326983, \"end\": 6342666}, {\"filename\": \"/edge_base/hacx/sprites/SHT2J0.lmp\", \"start\": 6342666, \"end\": 6358871}, {\"filename\": \"/edge_base/hacx/sprites/SHTFA0.lmp\", \"start\": 6358871, \"end\": 6367933}, {\"filename\": \"/edge_base/hacx/sprites/SHTFB0.lmp\", \"start\": 6367933, \"end\": 6377424}, {\"filename\": \"/edge_base/hacx/sprites/SHTGA0.lmp\", \"start\": 6377424, \"end\": 6386083}, {\"filename\": \"/edge_base/hacx/sprites/SHTGB0.lmp\", \"start\": 6386083, \"end\": 6399165}, {\"filename\": \"/edge_base/hacx/sprites/SHTGC0.lmp\", \"start\": 6399165, \"end\": 6418404}, {\"filename\": \"/edge_base/hacx/sprites/SHTGD0.lmp\", \"start\": 6418404, \"end\": 6436651}, {\"filename\": \"/edge_base/harmony/ENDOOM.bin\", \"start\": 6436651, \"end\": 6440651}, {\"filename\": \"/edge_base/harmony/graphics/BOSSBACK.lmp\", \"start\": 6440651, \"end\": 6531397}, {\"filename\": \"/edge_base/harmony/graphics/CREDIT.lmp\", \"start\": 6531397, \"end\": 6622143}, {\"filename\": \"/edge_base/harmony/graphics/CWILV00.lmp\", \"start\": 6622143, \"end\": 6624193}, {\"filename\": \"/edge_base/harmony/graphics/CWILV01.lmp\", \"start\": 6624193, \"end\": 6626345}, {\"filename\": \"/edge_base/harmony/graphics/CWILV02.lmp\", \"start\": 6626345, \"end\": 6628123}, {\"filename\": \"/edge_base/harmony/graphics/CWILV03.lmp\", \"start\": 6628123, \"end\": 6630723}, {\"filename\": \"/edge_base/harmony/graphics/CWILV04.lmp\", \"start\": 6630723, \"end\": 6632814}, {\"filename\": \"/edge_base/harmony/graphics/CWILV05.lmp\", \"start\": 6632814, \"end\": 6636680}, {\"filename\": \"/edge_base/harmony/graphics/CWILV06.lmp\", \"start\": 6636680, \"end\": 6640268}, {\"filename\": \"/edge_base/harmony/graphics/CWILV07.lmp\", \"start\": 6640268, \"end\": 6642763}, {\"filename\": \"/edge_base/harmony/graphics/CWILV08.lmp\", \"start\": 6642763, \"end\": 6645602}, {\"filename\": \"/edge_base/harmony/graphics/CWILV09.lmp\", \"start\": 6645602, \"end\": 6649437}, {\"filename\": \"/edge_base/harmony/graphics/CWILV10.lmp\", \"start\": 6649437, \"end\": 6651055}, {\"filename\": \"/edge_base/harmony/graphics/CWILV11.lmp\", \"start\": 6651055, \"end\": 6652784}, {\"filename\": \"/edge_base/harmony/graphics/HELP.lmp\", \"start\": 6652784, \"end\": 6741826}, {\"filename\": \"/edge_base/harmony/graphics/INTERPIC.lmp\", \"start\": 6741826, \"end\": 6832572}, {\"filename\": \"/edge_base/harmony/graphics/M_EPISOD.lmp\", \"start\": 6832572, \"end\": 6835769}, {\"filename\": \"/edge_base/harmony/graphics/M_JKILL.lmp\", \"start\": 6835769, \"end\": 6837187}, {\"filename\": \"/edge_base/harmony/graphics/M_NEWG.lmp\", \"start\": 6837187, \"end\": 6839561}, {\"filename\": \"/edge_base/harmony/graphics/M_NGAME.lmp\", \"start\": 6839561, \"end\": 6840511}, {\"filename\": \"/edge_base/harmony/graphics/M_RDTHIS.lmp\", \"start\": 6840511, \"end\": 6842370}, {\"filename\": \"/edge_base/harmony/graphics/M_SAVEG.lmp\", \"start\": 6842370, \"end\": 6843383}, {\"filename\": \"/edge_base/harmony/graphics/M_THERML.png\", \"start\": 6843383, \"end\": 6844323}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMM.png\", \"start\": 6844323, \"end\": 6845252}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMO.png\", \"start\": 6845252, \"end\": 6846167}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMR.png\", \"start\": 6846167, \"end\": 6847105}, {\"filename\": \"/edge_base/harmony/graphics/STBARL.lmp\", \"start\": 6847105, \"end\": 6850516}, {\"filename\": \"/edge_base/harmony/graphics/STBARR.lmp\", \"start\": 6850516, \"end\": 6853927}, {\"filename\": \"/edge_base/harmony/graphics/TITLEPIC.lmp\", \"start\": 6853927, \"end\": 6942969}, {\"filename\": \"/edge_base/harmony/graphics/WICOLON.lmp\", \"start\": 6942969, \"end\": 6943071}, {\"filename\": \"/edge_base/harmony/graphics/WIF.lmp\", \"start\": 6943071, \"end\": 6943119}, {\"filename\": \"/edge_base/harmony/graphics/WIFRGS.lmp\", \"start\": 6943119, \"end\": 6944250}, {\"filename\": \"/edge_base/harmony/graphics/WIKILRS.lmp\", \"start\": 6944250, \"end\": 6944723}, {\"filename\": \"/edge_base/harmony/graphics/WIMINUS.lmp\", \"start\": 6944723, \"end\": 6944843}, {\"filename\": \"/edge_base/harmony/graphics/WIMSTT.lmp\", \"start\": 6944843, \"end\": 6945943}, {\"filename\": \"/edge_base/harmony/graphics/WINUM0.lmp\", \"start\": 6945943, \"end\": 6946193}, {\"filename\": \"/edge_base/harmony/graphics/WINUM1.lmp\", \"start\": 6946193, \"end\": 6946339}, {\"filename\": \"/edge_base/harmony/graphics/WINUM2.lmp\", \"start\": 6946339, \"end\": 6946625}, {\"filename\": \"/edge_base/harmony/graphics/WINUM3.lmp\", \"start\": 6946625, \"end\": 6946878}, {\"filename\": \"/edge_base/harmony/graphics/WINUM4.lmp\", \"start\": 6946878, \"end\": 6947102}, {\"filename\": \"/edge_base/harmony/graphics/WINUM5.lmp\", \"start\": 6947102, \"end\": 6947357}, {\"filename\": \"/edge_base/harmony/graphics/WINUM6.lmp\", \"start\": 6947357, \"end\": 6947619}, {\"filename\": \"/edge_base/harmony/graphics/WINUM7.lmp\", \"start\": 6947619, \"end\": 6947836}, {\"filename\": \"/edge_base/harmony/graphics/WINUM8.lmp\", \"start\": 6947836, \"end\": 6948098}, {\"filename\": \"/edge_base/harmony/graphics/WINUM9.lmp\", \"start\": 6948098, \"end\": 6948357}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTF.lmp\", \"start\": 6948357, \"end\": 6948597}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTI.lmp\", \"start\": 6948597, \"end\": 6950045}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTK.lmp\", \"start\": 6950045, \"end\": 6951390}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTS.lmp\", \"start\": 6951390, \"end\": 6952559}, {\"filename\": \"/edge_base/harmony/graphics/WIPAR.lmp\", \"start\": 6952559, \"end\": 6953536}, {\"filename\": \"/edge_base/harmony/graphics/WIPCNT.lmp\", \"start\": 6953536, \"end\": 6953785}, {\"filename\": \"/edge_base/harmony/graphics/WISCRT2.lmp\", \"start\": 6953785, \"end\": 6955560}, {\"filename\": \"/edge_base/harmony/graphics/WISUCKS.lmp\", \"start\": 6955560, \"end\": 6957269}, {\"filename\": \"/edge_base/harmony/graphics/WITIME.lmp\", \"start\": 6957269, \"end\": 6958116}, {\"filename\": \"/edge_base/harmony/graphics/WIVCTMS.lmp\", \"start\": 6958116, \"end\": 6958916}, {\"filename\": \"/edge_base/harmony/scripts/attacks.ddf\", \"start\": 6958916, \"end\": 6966439}, {\"filename\": \"/edge_base/harmony/scripts/coal_hud.ec\", \"start\": 6966439, \"end\": 6970165}, {\"filename\": \"/edge_base/harmony/scripts/colmap.ddf\", \"start\": 6970165, \"end\": 6970464}, {\"filename\": \"/edge_base/harmony/scripts/flats.ddf\", \"start\": 6970464, \"end\": 6970785}, {\"filename\": \"/edge_base/harmony/scripts/language.ldf\", \"start\": 6970785, \"end\": 6974430}, {\"filename\": \"/edge_base/harmony/scripts/levels.ddf\", \"start\": 6974430, \"end\": 6989810}, {\"filename\": \"/edge_base/harmony/scripts/playlist.ddf\", \"start\": 6989810, \"end\": 6991239}, {\"filename\": \"/edge_base/harmony/scripts/styles.ddf\", \"start\": 6991239, \"end\": 6993471}, {\"filename\": \"/edge_base/harmony/scripts/things.ddf\", \"start\": 6993471, \"end\": 7060402}, {\"filename\": \"/edge_base/harmony/scripts/weapons.ddf\", \"start\": 7060402, \"end\": 7063975}, {\"filename\": \"/edge_base/harmony/sprites/CELLA0.png\", \"start\": 7063975, \"end\": 7065717}, {\"filename\": \"/edge_base/harmony/sprites/CLIPA0.png\", \"start\": 7065717, \"end\": 7068403}, {\"filename\": \"/edge_base/harmony/sprites/ROCKA0.png\", \"start\": 7068403, \"end\": 7069834}, {\"filename\": \"/edge_base/harmony/sprites/SHELA0.png\", \"start\": 7069834, \"end\": 7072018}, {\"filename\": \"/edge_base/heretic/graphics/AUTOPAGE.png\", \"start\": 7072018, \"end\": 7114825}, {\"filename\": \"/edge_base/heretic/graphics/BARBACK.lmp\", \"start\": 7114825, \"end\": 7135339}, {\"filename\": \"/edge_base/heretic/graphics/CREDIT.lmp\", \"start\": 7135339, \"end\": 7254627}, {\"filename\": \"/edge_base/heretic/graphics/E2END.png\", \"start\": 7254627, \"end\": 7311051}, {\"filename\": \"/edge_base/heretic/graphics/FINAL1.lmp\", \"start\": 7311051, \"end\": 7430339}, {\"filename\": \"/edge_base/heretic/graphics/FINAL2.lmp\", \"start\": 7430339, \"end\": 7549627}, {\"filename\": \"/edge_base/heretic/graphics/HELP1.lmp\", \"start\": 7549627, \"end\": 7668915}, {\"filename\": \"/edge_base/heretic/graphics/HELP2.lmp\", \"start\": 7668915, \"end\": 7788203}, {\"filename\": \"/edge_base/heretic/graphics/LTFCTOP.lmp\", \"start\": 7788203, \"end\": 7788894}, {\"filename\": \"/edge_base/heretic/graphics/MAPE1.lmp\", \"start\": 7788894, \"end\": 7908182}, {\"filename\": \"/edge_base/heretic/graphics/MAPE2.lmp\", \"start\": 7908182, \"end\": 8027470}, {\"filename\": \"/edge_base/heretic/graphics/MAPE3.lmp\", \"start\": 8027470, \"end\": 8146758}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL00.png\", \"start\": 8146758, \"end\": 8147934}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL01.png\", \"start\": 8147934, \"end\": 8149143}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL02.png\", \"start\": 8149143, \"end\": 8150408}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL03.png\", \"start\": 8150408, \"end\": 8151720}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL04.png\", \"start\": 8151720, \"end\": 8153134}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL05.png\", \"start\": 8153134, \"end\": 8154448}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL06.png\", \"start\": 8154448, \"end\": 8155835}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL07.png\", \"start\": 8155835, \"end\": 8157109}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL08.png\", \"start\": 8157109, \"end\": 8158163}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL09.png\", \"start\": 8158163, \"end\": 8159161}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL10.png\", \"start\": 8159161, \"end\": 8160253}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL11.png\", \"start\": 8160253, \"end\": 8161510}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL12.png\", \"start\": 8161510, \"end\": 8162993}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL13.png\", \"start\": 8162993, \"end\": 8164343}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL14.png\", \"start\": 8164343, \"end\": 8165947}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL15.png\", \"start\": 8165947, \"end\": 8167448}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL16.png\", \"start\": 8167448, \"end\": 8168726}, {\"filename\": \"/edge_base/heretic/graphics/M_SKL17.png\", \"start\": 8168726, \"end\": 8169958}, {\"filename\": \"/edge_base/heretic/graphics/NULL.png\", \"start\": 8169958, \"end\": 8171118}, {\"filename\": \"/edge_base/heretic/graphics/RTFCTOP.lmp\", \"start\": 8171118, \"end\": 8171867}, {\"filename\": \"/edge_base/heretic/graphics/STBARL.lmp\", \"start\": 8171867, \"end\": 8176108}, {\"filename\": \"/edge_base/heretic/graphics/STBARR.lmp\", \"start\": 8176108, \"end\": 8180349}, {\"filename\": \"/edge_base/heretic/graphics/TITLE.png\", \"start\": 8180349, \"end\": 8230972}, {\"filename\": \"/edge_base/heretic/graphics/WIENTER.png\", \"start\": 8230972, \"end\": 8231871}, {\"filename\": \"/edge_base/heretic/graphics/WIF.png\", \"start\": 8231871, \"end\": 8232617}, {\"filename\": \"/edge_base/heretic/scripts/anims.ddf\", \"start\": 8232617, \"end\": 8234253}, {\"filename\": \"/edge_base/heretic/scripts/attacks.ddf\", \"start\": 8234253, \"end\": 8275631}, {\"filename\": \"/edge_base/heretic/scripts/coal_hud.ec\", \"start\": 8275631, \"end\": 8291208}, {\"filename\": \"/edge_base/heretic/scripts/colmap.ddf\", \"start\": 8291208, \"end\": 8291480}, {\"filename\": \"/edge_base/heretic/scripts/flats.ddf\", \"start\": 8291480, \"end\": 8292143}, {\"filename\": \"/edge_base/heretic/scripts/fonts.ddf\", \"start\": 8292143, \"end\": 8293124}, {\"filename\": \"/edge_base/heretic/scripts/games.ddf\", \"start\": 8293124, \"end\": 8295624}, {\"filename\": \"/edge_base/heretic/scripts/images.ddf\", \"start\": 8295624, \"end\": 8298596}, {\"filename\": \"/edge_base/heretic/scripts/language.ldf\", \"start\": 8298596, \"end\": 8307067}, {\"filename\": \"/edge_base/heretic/scripts/levels.ddf\", \"start\": 8307067, \"end\": 8319974}, {\"filename\": \"/edge_base/heretic/scripts/lines.ddf\", \"start\": 8319974, \"end\": 8324545}, {\"filename\": \"/edge_base/heretic/scripts/playlist.ddf\", \"start\": 8324545, \"end\": 8326624}, {\"filename\": \"/edge_base/heretic/scripts/rscript.rts\", \"start\": 8326624, \"end\": 8338914}, {\"filename\": \"/edge_base/heretic/scripts/sectors.ddf\", \"start\": 8338914, \"end\": 8340306}, {\"filename\": \"/edge_base/heretic/scripts/sounds.ddf\", \"start\": 8340306, \"end\": 8351136}, {\"filename\": \"/edge_base/heretic/scripts/styles.ddf\", \"start\": 8351136, \"end\": 8356306}, {\"filename\": \"/edge_base/heretic/scripts/switch.ddf\", \"start\": 8356306, \"end\": 8356731}, {\"filename\": \"/edge_base/heretic/scripts/things.ddf\", \"start\": 8356731, \"end\": 8441310}, {\"filename\": \"/edge_base/heretic/scripts/weapons.ddf\", \"start\": 8441310, \"end\": 8451214}, {\"filename\": \"/edge_base/heretic/sprites/STFFC0.lmp\", \"start\": 8451214, \"end\": 8468344}, {\"filename\": \"/edge_base/heretic/sprites/STFFH0.lmp\", \"start\": 8468344, \"end\": 8486390}, {\"filename\": \"/edge_base/plutonia/graphics/BOSSBACK.lmp\", \"start\": 8486390, \"end\": 8605678}, {\"filename\": \"/edge_base/plutonia/graphics/CREDIT.lmp\", \"start\": 8605678, \"end\": 8724966}, {\"filename\": \"/edge_base/plutonia/graphics/INTERPIC.lmp\", \"start\": 8724966, \"end\": 8844254}, {\"filename\": \"/edge_base/plutonia/graphics/TITLEPIC.lmp\", \"start\": 8844254, \"end\": 8963542}, {\"filename\": \"/edge_base/plutonia/scripts/images.ddf\", \"start\": 8963542, \"end\": 8964877}, {\"filename\": \"/edge_base/plutonia/scripts/language.ldf\", \"start\": 8964877, \"end\": 8968257}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_B.png\", \"start\": 8968257, \"end\": 8983288}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_E.png\", \"start\": 8983288, \"end\": 8998284}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_N.png\", \"start\": 8998284, \"end\": 9011363}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_S.png\", \"start\": 9011363, \"end\": 9024442}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_T.png\", \"start\": 9024442, \"end\": 9039473}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_W.png\", \"start\": 9039473, \"end\": 9054469}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_B.png\", \"start\": 9054469, \"end\": 9082404}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_E.png\", \"start\": 9082404, \"end\": 9094044}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_N.png\", \"start\": 9094044, \"end\": 9105953}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_S.png\", \"start\": 9105953, \"end\": 9117862}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_T.png\", \"start\": 9117862, \"end\": 9145797}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_W.png\", \"start\": 9145797, \"end\": 9157437}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_B.png\", \"start\": 9157437, \"end\": 9356187}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_E.png\", \"start\": 9356187, \"end\": 9446780}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_N.png\", \"start\": 9446780, \"end\": 9530164}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_S.png\", \"start\": 9530164, \"end\": 9613548}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_T.png\", \"start\": 9613548, \"end\": 9812298}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_W.png\", \"start\": 9812298, \"end\": 9902891}, {\"filename\": \"/edge_base/rekkr/graphics/M_DOOM.lmp\", \"start\": 9902891, \"end\": 9928182}, {\"filename\": \"/edge_base/rekkr/graphics/M_EPISOD.lmp\", \"start\": 9928182, \"end\": 9945652}, {\"filename\": \"/edge_base/rekkr/graphics/M_HURT.lmp\", \"start\": 9945652, \"end\": 9947791}, {\"filename\": \"/edge_base/rekkr/graphics/M_JKILL.lmp\", \"start\": 9947791, \"end\": 9950550}, {\"filename\": \"/edge_base/rekkr/graphics/M_LGTTL.lmp\", \"start\": 9950550, \"end\": 9952737}, {\"filename\": \"/edge_base/rekkr/graphics/M_LOADG.lmp\", \"start\": 9952737, \"end\": 9954854}, {\"filename\": \"/edge_base/rekkr/graphics/M_NEWG.lmp\", \"start\": 9954854, \"end\": 9958129}, {\"filename\": \"/edge_base/rekkr/graphics/M_NGAME.lmp\", \"start\": 9958129, \"end\": 9960177}, {\"filename\": \"/edge_base/rekkr/graphics/M_NMARE.lmp\", \"start\": 9960177, \"end\": 9962611}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTION.lmp\", \"start\": 9962611, \"end\": 9964448}, {\"filename\": \"/edge_base/rekkr/graphics/M_QUITG.lmp\", \"start\": 9964448, \"end\": 9966516}, {\"filename\": \"/edge_base/rekkr/graphics/M_RDTHIS.lmp\", \"start\": 9966516, \"end\": 9967761}, {\"filename\": \"/edge_base/rekkr/graphics/M_ROUGH.lmp\", \"start\": 9967761, \"end\": 9970330}, {\"filename\": \"/edge_base/rekkr/graphics/M_SAVEG.lmp\", \"start\": 9970330, \"end\": 9972550}, {\"filename\": \"/edge_base/rekkr/graphics/M_SGTTL.lmp\", \"start\": 9972550, \"end\": 9974770}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKILL.lmp\", \"start\": 9974770, \"end\": 10002862}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL1.png\", \"start\": 10002862, \"end\": 10003450}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL2.png\", \"start\": 10003450, \"end\": 10004032}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL3.png\", \"start\": 10004032, \"end\": 10004627}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL4.png\", \"start\": 10004627, \"end\": 10005215}, {\"filename\": \"/edge_base/rekkr/graphics/M_ULTRA.lmp\", \"start\": 10005215, \"end\": 10007589}, {\"filename\": \"/edge_base/rekkr/graphics/STBARL.lmp\", \"start\": 10007589, \"end\": 10011000}, {\"filename\": \"/edge_base/rekkr/graphics/STBARR.lmp\", \"start\": 10011000, \"end\": 10014411}, {\"filename\": \"/edge_base/rekkr/graphics/WIENTER.lmp\", \"start\": 10014411, \"end\": 10016336}, {\"filename\": \"/edge_base/rekkr/graphics/WIF.lmp\", \"start\": 10016336, \"end\": 10018117}, {\"filename\": \"/edge_base/rekkr/graphics/WILV00.lmp\", \"start\": 10018117, \"end\": 10019716}, {\"filename\": \"/edge_base/rekkr/graphics/WILV01.lmp\", \"start\": 10019716, \"end\": 10020732}, {\"filename\": \"/edge_base/rekkr/graphics/WILV02.lmp\", \"start\": 10020732, \"end\": 10022759}, {\"filename\": \"/edge_base/rekkr/graphics/WILV03.lmp\", \"start\": 10022759, \"end\": 10025326}, {\"filename\": \"/edge_base/rekkr/graphics/WILV04.lmp\", \"start\": 10025326, \"end\": 10027041}, {\"filename\": \"/edge_base/rekkr/graphics/WILV05.lmp\", \"start\": 10027041, \"end\": 10028769}, {\"filename\": \"/edge_base/rekkr/graphics/WILV06.lmp\", \"start\": 10028769, \"end\": 10032153}, {\"filename\": \"/edge_base/rekkr/graphics/WILV07.lmp\", \"start\": 10032153, \"end\": 10035657}, {\"filename\": \"/edge_base/rekkr/graphics/WILV08.lmp\", \"start\": 10035657, \"end\": 10038500}, {\"filename\": \"/edge_base/rekkr/graphics/WILV10.lmp\", \"start\": 10038500, \"end\": 10039879}, {\"filename\": \"/edge_base/rekkr/graphics/WILV11.lmp\", \"start\": 10039879, \"end\": 10041515}, {\"filename\": \"/edge_base/rekkr/graphics/WILV12.lmp\", \"start\": 10041515, \"end\": 10043835}, {\"filename\": \"/edge_base/rekkr/graphics/WILV13.lmp\", \"start\": 10043835, \"end\": 10045045}, {\"filename\": \"/edge_base/rekkr/graphics/WILV14.lmp\", \"start\": 10045045, \"end\": 10047742}, {\"filename\": \"/edge_base/rekkr/graphics/WILV15.lmp\", \"start\": 10047742, \"end\": 10050829}, {\"filename\": \"/edge_base/rekkr/graphics/WILV16.lmp\", \"start\": 10050829, \"end\": 10052470}, {\"filename\": \"/edge_base/rekkr/graphics/WILV17.lmp\", \"start\": 10052470, \"end\": 10054358}, {\"filename\": \"/edge_base/rekkr/graphics/WILV18.lmp\", \"start\": 10054358, \"end\": 10055545}, {\"filename\": \"/edge_base/rekkr/graphics/WILV20.lmp\", \"start\": 10055545, \"end\": 10057506}, {\"filename\": \"/edge_base/rekkr/graphics/WILV21.lmp\", \"start\": 10057506, \"end\": 10060622}, {\"filename\": \"/edge_base/rekkr/graphics/WILV22.lmp\", \"start\": 10060622, \"end\": 10062383}, {\"filename\": \"/edge_base/rekkr/graphics/WILV23.lmp\", \"start\": 10062383, \"end\": 10065242}, {\"filename\": \"/edge_base/rekkr/graphics/WILV24.lmp\", \"start\": 10065242, \"end\": 10066955}, {\"filename\": \"/edge_base/rekkr/graphics/WILV25.lmp\", \"start\": 10066955, \"end\": 10069219}, {\"filename\": \"/edge_base/rekkr/graphics/WILV26.lmp\", \"start\": 10069219, \"end\": 10070452}, {\"filename\": \"/edge_base/rekkr/graphics/WILV27.lmp\", \"start\": 10070452, \"end\": 10071195}, {\"filename\": \"/edge_base/rekkr/graphics/WILV28.lmp\", \"start\": 10071195, \"end\": 10074973}, {\"filename\": \"/edge_base/rekkr/graphics/WILV30.lmp\", \"start\": 10074973, \"end\": 10076825}, {\"filename\": \"/edge_base/rekkr/graphics/WILV31.lmp\", \"start\": 10076825, \"end\": 10078463}, {\"filename\": \"/edge_base/rekkr/graphics/WILV32.lmp\", \"start\": 10078463, \"end\": 10079585}, {\"filename\": \"/edge_base/rekkr/graphics/WILV33.lmp\", \"start\": 10079585, \"end\": 10081924}, {\"filename\": \"/edge_base/rekkr/graphics/WILV34.lmp\", \"start\": 10081924, \"end\": 10083927}, {\"filename\": \"/edge_base/rekkr/graphics/WILV35.lmp\", \"start\": 10083927, \"end\": 10086061}, {\"filename\": \"/edge_base/rekkr/graphics/WILV36.lmp\", \"start\": 10086061, \"end\": 10089127}, {\"filename\": \"/edge_base/rekkr/graphics/WILV37.lmp\", \"start\": 10089127, \"end\": 10091122}, {\"filename\": \"/edge_base/rekkr/graphics/WILV38.lmp\", \"start\": 10091122, \"end\": 10092982}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTF.lmp\", \"start\": 10092982, \"end\": 10093244}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTI.lmp\", \"start\": 10093244, \"end\": 10094450}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTK.lmp\", \"start\": 10094450, \"end\": 10095515}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTS.lmp\", \"start\": 10095515, \"end\": 10096545}, {\"filename\": \"/edge_base/rekkr/graphics/WIPAR.lmp\", \"start\": 10096545, \"end\": 10097307}, {\"filename\": \"/edge_base/rekkr/graphics/WISCRT2.lmp\", \"start\": 10097307, \"end\": 10098874}, {\"filename\": \"/edge_base/rekkr/graphics/WITIME.lmp\", \"start\": 10098874, \"end\": 10099788}, {\"filename\": \"/edge_base/rekkr/scripts/anims.ddf\", \"start\": 10099788, \"end\": 10099922}, {\"filename\": \"/edge_base/rekkr/scripts/attacks.ddf\", \"start\": 10099922, \"end\": 10100650}, {\"filename\": \"/edge_base/rekkr/scripts/images.ddf\", \"start\": 10100650, \"end\": 10107448}, {\"filename\": \"/edge_base/rekkr/scripts/language.ldf\", \"start\": 10107448, \"end\": 10108182}, {\"filename\": \"/edge_base/rekkr/scripts/styles.ddf\", \"start\": 10108182, \"end\": 10112334}, {\"filename\": \"/edge_base/rekkr/scripts/things.ddf\", \"start\": 10112334, \"end\": 10114504}, {\"filename\": \"/edge_base/rekkr/scripts/weapons.ddf\", \"start\": 10114504, \"end\": 10116369}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA1.lmp\", \"start\": 10116369, \"end\": 10116994}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA2A8.lmp\", \"start\": 10116994, \"end\": 10117969}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA3A7.lmp\", \"start\": 10117969, \"end\": 10118944}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA4A6.lmp\", \"start\": 10118944, \"end\": 10119919}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA5.lmp\", \"start\": 10119919, \"end\": 10120550}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB1.lmp\", \"start\": 10120550, \"end\": 10121133}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB2B8.lmp\", \"start\": 10121133, \"end\": 10122100}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB3B7.lmp\", \"start\": 10122100, \"end\": 10123067}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB4B6.lmp\", \"start\": 10123067, \"end\": 10124034}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB5.lmp\", \"start\": 10124034, \"end\": 10124616}, {\"filename\": \"/edge_base/tnt/graphics/BOSSBACK.lmp\", \"start\": 10124616, \"end\": 10243904}, {\"filename\": \"/edge_base/tnt/graphics/CREDIT.lmp\", \"start\": 10243904, \"end\": 10363192}, {\"filename\": \"/edge_base/tnt/graphics/INTERPIC.lmp\", \"start\": 10363192, \"end\": 10482480}, {\"filename\": \"/edge_base/tnt/graphics/TITLEPIC.lmp\", \"start\": 10482480, \"end\": 10601768}, {\"filename\": \"/edge_base/tnt/scripts/images.ddf\", \"start\": 10601768, \"end\": 10603105}, {\"filename\": \"/edge_base/tnt/scripts/language.ldf\", \"start\": 10603105, \"end\": 10606772}, {\"filename\": \"/edge_base/tnt/textures/SKY1_B.png\", \"start\": 10606772, \"end\": 10622765}, {\"filename\": \"/edge_base/tnt/textures/SKY1_E.png\", \"start\": 10622765, \"end\": 10642231}, {\"filename\": \"/edge_base/tnt/textures/SKY1_N.png\", \"start\": 10642231, \"end\": 10659657}, {\"filename\": \"/edge_base/tnt/textures/SKY1_S.png\", \"start\": 10659657, \"end\": 10675564}, {\"filename\": \"/edge_base/tnt/textures/SKY1_T.png\", \"start\": 10675564, \"end\": 10715682}, {\"filename\": \"/edge_base/tnt/textures/SKY1_W.png\", \"start\": 10715682, \"end\": 10735006}, {\"filename\": \"/edge_base/tnt/textures/SKY2_B.png\", \"start\": 10735006, \"end\": 10736317}, {\"filename\": \"/edge_base/tnt/textures/SKY2_E.png\", \"start\": 10736317, \"end\": 10740840}, {\"filename\": \"/edge_base/tnt/textures/SKY2_N.png\", \"start\": 10740840, \"end\": 10742069}, {\"filename\": \"/edge_base/tnt/textures/SKY2_S.png\", \"start\": 10742069, \"end\": 10748286}, {\"filename\": \"/edge_base/tnt/textures/SKY2_T.png\", \"start\": 10748286, \"end\": 10752413}, {\"filename\": \"/edge_base/tnt/textures/SKY2_W.png\", \"start\": 10752413, \"end\": 10753955}, {\"filename\": \"/edge_base/tnt/textures/SKY3_B.png\", \"start\": 10753955, \"end\": 10778426}, {\"filename\": \"/edge_base/tnt/textures/SKY3_E.png\", \"start\": 10778426, \"end\": 10786128}, {\"filename\": \"/edge_base/tnt/textures/SKY3_N.png\", \"start\": 10786128, \"end\": 10794007}, {\"filename\": \"/edge_base/tnt/textures/SKY3_S.png\", \"start\": 10794007, \"end\": 10801355}, {\"filename\": \"/edge_base/tnt/textures/SKY3_T.png\", \"start\": 10801355, \"end\": 10825826}, {\"filename\": \"/edge_base/tnt/textures/SKY3_W.png\", \"start\": 10825826, \"end\": 10833167}, {\"filename\": \"/edge_defs/colormaps/AUTOMAPS.dat\", \"start\": 10833167, \"end\": 10833679}, {\"filename\": \"/edge_defs/colormaps/LAVAMAP.cmp\", \"start\": 10833679, \"end\": 10842383}, {\"filename\": \"/edge_defs/colormaps/NITEVMAP.cmp\", \"start\": 10842383, \"end\": 10842639}, {\"filename\": \"/edge_defs/colormaps/PLYRMAPS.dat\", \"start\": 10842639, \"end\": 10846479}, {\"filename\": \"/edge_defs/colormaps/SARGMAPS.dat\", \"start\": 10846479, \"end\": 10848015}, {\"filename\": \"/edge_defs/colormaps/SHADEMAP.cmp\", \"start\": 10848015, \"end\": 10848271}, {\"filename\": \"/edge_defs/colormaps/SKINMAPS.dat\", \"start\": 10848271, \"end\": 10849551}, {\"filename\": \"/edge_defs/colormaps/SLIMEMAP.cmp\", \"start\": 10849551, \"end\": 10858255}, {\"filename\": \"/edge_defs/colormaps/TEXTMAPS.dat\", \"start\": 10858255, \"end\": 10860047}, {\"filename\": \"/edge_defs/colormaps/TXTBLUES.dat\", \"start\": 10860047, \"end\": 10861327}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS1.dat\", \"start\": 10861327, \"end\": 10862607}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS2.dat\", \"start\": 10862607, \"end\": 10863887}, {\"filename\": \"/edge_defs/colormaps/TXTGREYS.dat\", \"start\": 10863887, \"end\": 10865167}, {\"filename\": \"/edge_defs/colormaps/TXTGRNS.dat\", \"start\": 10865167, \"end\": 10866447}, {\"filename\": \"/edge_defs/colormaps/TXTORANS.dat\", \"start\": 10866447, \"end\": 10867727}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS1.dat\", \"start\": 10867727, \"end\": 10869007}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS2.dat\", \"start\": 10869007, \"end\": 10870287}, {\"filename\": \"/edge_defs/colormaps/TXTPURPS.dat\", \"start\": 10870287, \"end\": 10871567}, {\"filename\": \"/edge_defs/colormaps/TXTREDS.dat\", \"start\": 10871567, \"end\": 10872847}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS1.dat\", \"start\": 10872847, \"end\": 10874127}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS2.dat\", \"start\": 10874127, \"end\": 10875407}, {\"filename\": \"/edge_defs/colormaps/WATERMAP.cmp\", \"start\": 10875407, \"end\": 10884111}, {\"filename\": \"/edge_defs/graphics/CREDIT2.lmp\", \"start\": 10884111, \"end\": 10950999}, {\"filename\": \"/edge_defs/graphics/DLITEXPN.png\", \"start\": 10950999, \"end\": 10965342}, {\"filename\": \"/edge_defs/graphics/EDGECBG1.jpg\", \"start\": 10965342, \"end\": 11028709}, {\"filename\": \"/edge_defs/graphics/EDGECRED.png\", \"start\": 11028709, \"end\": 11196308}, {\"filename\": \"/edge_defs/graphics/EDGETTL.lmp\", \"start\": 11196308, \"end\": 11263196}, {\"filename\": \"/edge_defs/graphics/ENDFONT.png\", \"start\": 11263196, \"end\": 11270300}, {\"filename\": \"/edge_defs/graphics/FONTVERD.png\", \"start\": 11270300, \"end\": 11314931}, {\"filename\": \"/edge_defs/graphics/MOUSE.lmp\", \"start\": 11314931, \"end\": 11315114}, {\"filename\": \"/edge_defs/graphics/M_EPI5.lmp\", \"start\": 11315114, \"end\": 11316258}, {\"filename\": \"/edge_defs/graphics/M_EPI6.lmp\", \"start\": 11316258, \"end\": 11319288}, {\"filename\": \"/edge_defs/graphics/STBARL.lmp\", \"start\": 11319288, \"end\": 11322699}, {\"filename\": \"/edge_defs/graphics/STBARR.lmp\", \"start\": 11322699, \"end\": 11326110}, {\"filename\": \"/edge_defs/graphics/STCFN000.lmp\", \"start\": 11326110, \"end\": 11326254}, {\"filename\": \"/edge_defs/graphics/STCFN132.lmp\", \"start\": 11326254, \"end\": 11326396}, {\"filename\": \"/edge_defs/graphics/STCFN134.lmp\", \"start\": 11326396, \"end\": 11326523}, {\"filename\": \"/edge_defs/graphics/STCFN148.lmp\", \"start\": 11326523, \"end\": 11326658}, {\"filename\": \"/edge_defs/graphics/STDESYNC.lmp\", \"start\": 11326658, \"end\": 11329255}, {\"filename\": \"/edge_defs/graphics/STFB0.lmp\", \"start\": 11329255, \"end\": 11330663}, {\"filename\": \"/edge_defs/graphics/STFB1.lmp\", \"start\": 11330663, \"end\": 11332071}, {\"filename\": \"/edge_defs/graphics/STFB2.lmp\", \"start\": 11332071, \"end\": 11333479}, {\"filename\": \"/edge_defs/graphics/STFB3.lmp\", \"start\": 11333479, \"end\": 11334887}, {\"filename\": \"/edge_defs/graphics/STFB4.lmp\", \"start\": 11334887, \"end\": 11336295}, {\"filename\": \"/edge_defs/graphics/STFB5.lmp\", \"start\": 11336295, \"end\": 11337703}, {\"filename\": \"/edge_defs/graphics/STFB6.lmp\", \"start\": 11337703, \"end\": 11339111}, {\"filename\": \"/edge_defs/graphics/STFB7.lmp\", \"start\": 11339111, \"end\": 11340519}, {\"filename\": \"/edge_defs/graphics/STKEYS6.lmp\", \"start\": 11340519, \"end\": 11340639}, {\"filename\": \"/edge_defs/graphics/STKEYS7.lmp\", \"start\": 11340639, \"end\": 11340759}, {\"filename\": \"/edge_defs/graphics/STKEYS8.lmp\", \"start\": 11340759, \"end\": 11340879}, {\"filename\": \"/edge_defs/graphics/STPB0.lmp\", \"start\": 11340879, \"end\": 11342357}, {\"filename\": \"/edge_defs/graphics/STPB1.lmp\", \"start\": 11342357, \"end\": 11343835}, {\"filename\": \"/edge_defs/graphics/STPB2.lmp\", \"start\": 11343835, \"end\": 11345313}, {\"filename\": \"/edge_defs/graphics/STPB3.lmp\", \"start\": 11345313, \"end\": 11346791}, {\"filename\": \"/edge_defs/graphics/STPB4.lmp\", \"start\": 11346791, \"end\": 11348269}, {\"filename\": \"/edge_defs/graphics/STPB5.lmp\", \"start\": 11348269, \"end\": 11349747}, {\"filename\": \"/edge_defs/graphics/STPB6.lmp\", \"start\": 11349747, \"end\": 11351225}, {\"filename\": \"/edge_defs/graphics/STPB7.lmp\", \"start\": 11351225, \"end\": 11352703}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR1.png\", \"start\": 11352703, \"end\": 11352896}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR2.png\", \"start\": 11352896, \"end\": 11353081}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR3.png\", \"start\": 11353081, \"end\": 11353266}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR4.png\", \"start\": 11353266, \"end\": 11353453}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR5.png\", \"start\": 11353453, \"end\": 11353719}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR6.png\", \"start\": 11353719, \"end\": 11354060}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR7.png\", \"start\": 11354060, \"end\": 11354354}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR8.png\", \"start\": 11354354, \"end\": 11355738}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR9.png\", \"start\": 11355738, \"end\": 11356157}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN001.png\", \"start\": 11356157, \"end\": 11356514}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN002.png\", \"start\": 11356514, \"end\": 11356859}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN003.png\", \"start\": 11356859, \"end\": 11357215}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN004.png\", \"start\": 11357215, \"end\": 11357563}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN005.png\", \"start\": 11357563, \"end\": 11357902}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN006.png\", \"start\": 11357902, \"end\": 11358220}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN007.png\", \"start\": 11358220, \"end\": 11358570}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN008.png\", \"start\": 11358570, \"end\": 11358926}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN009.png\", \"start\": 11358926, \"end\": 11359205}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN010.png\", \"start\": 11359205, \"end\": 11359530}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN011.png\", \"start\": 11359530, \"end\": 11359899}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN012.png\", \"start\": 11359899, \"end\": 11360223}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN013.png\", \"start\": 11360223, \"end\": 11360589}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN014.png\", \"start\": 11360589, \"end\": 11360945}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN015.png\", \"start\": 11360945, \"end\": 11361318}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN016.png\", \"start\": 11361318, \"end\": 11361652}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN017.png\", \"start\": 11361652, \"end\": 11362027}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN018.png\", \"start\": 11362027, \"end\": 11362385}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN019.png\", \"start\": 11362385, \"end\": 11362736}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN020.png\", \"start\": 11362736, \"end\": 11363055}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN021.png\", \"start\": 11363055, \"end\": 11363401}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN022.png\", \"start\": 11363401, \"end\": 11363730}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN023.png\", \"start\": 11363730, \"end\": 11364085}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN024.png\", \"start\": 11364085, \"end\": 11364436}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN025.png\", \"start\": 11364436, \"end\": 11364785}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN026.png\", \"start\": 11364785, \"end\": 11365123}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN027.png\", \"start\": 11365123, \"end\": 11365412}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN028.png\", \"start\": 11365412, \"end\": 11365726}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN029.png\", \"start\": 11365726, \"end\": 11365969}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN030.png\", \"start\": 11365969, \"end\": 11366212}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN031.png\", \"start\": 11366212, \"end\": 11366478}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN032.png\", \"start\": 11366478, \"end\": 11366711}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN033.png\", \"start\": 11366711, \"end\": 11367049}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN034.png\", \"start\": 11367049, \"end\": 11367342}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN035.png\", \"start\": 11367342, \"end\": 11367680}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN036.png\", \"start\": 11367680, \"end\": 11368009}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN037.png\", \"start\": 11368009, \"end\": 11368338}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN038.png\", \"start\": 11368338, \"end\": 11368671}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN039.png\", \"start\": 11368671, \"end\": 11369007}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN040.png\", \"start\": 11369007, \"end\": 11369304}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN041.png\", \"start\": 11369304, \"end\": 11369644}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN042.png\", \"start\": 11369644, \"end\": 11369984}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN043.png\", \"start\": 11369984, \"end\": 11370219}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN044.png\", \"start\": 11370219, \"end\": 11370539}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN045.png\", \"start\": 11370539, \"end\": 11370823}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN046.png\", \"start\": 11370823, \"end\": 11371153}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN047.png\", \"start\": 11371153, \"end\": 11371491}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN048.png\", \"start\": 11371491, \"end\": 11371806}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN049.png\", \"start\": 11371806, \"end\": 11372135}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN050.png\", \"start\": 11372135, \"end\": 11372457}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN051.png\", \"start\": 11372457, \"end\": 11372774}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN052.png\", \"start\": 11372774, \"end\": 11373113}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN053.png\", \"start\": 11373113, \"end\": 11373433}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN054.png\", \"start\": 11373433, \"end\": 11373707}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN055.png\", \"start\": 11373707, \"end\": 11374014}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN056.png\", \"start\": 11374014, \"end\": 11374359}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN057.png\", \"start\": 11374359, \"end\": 11374657}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN058.png\", \"start\": 11374657, \"end\": 11375011}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN059.png\", \"start\": 11375011, \"end\": 11375350}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN060.png\", \"start\": 11375350, \"end\": 11375689}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN061.png\", \"start\": 11375689, \"end\": 11376013}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN062.png\", \"start\": 11376013, \"end\": 11376353}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN063.png\", \"start\": 11376353, \"end\": 11376678}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN064.png\", \"start\": 11376678, \"end\": 11377017}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN065.png\", \"start\": 11377017, \"end\": 11377323}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN066.png\", \"start\": 11377323, \"end\": 11377657}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN067.png\", \"start\": 11377657, \"end\": 11377989}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN068.png\", \"start\": 11377989, \"end\": 11378337}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN069.png\", \"start\": 11378337, \"end\": 11378678}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN070.png\", \"start\": 11378678, \"end\": 11379003}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN071.png\", \"start\": 11379003, \"end\": 11379335}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN072.png\", \"start\": 11379335, \"end\": 11379664}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN073.png\", \"start\": 11379664, \"end\": 11379898}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN074.png\", \"start\": 11379898, \"end\": 11380144}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN075.png\", \"start\": 11380144, \"end\": 11380470}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN076.png\", \"start\": 11380470, \"end\": 11380757}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN077.png\", \"start\": 11380757, \"end\": 11381075}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN078.png\", \"start\": 11381075, \"end\": 11381395}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN079.png\", \"start\": 11381395, \"end\": 11381706}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN080.png\", \"start\": 11381706, \"end\": 11382023}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN081.png\", \"start\": 11382023, \"end\": 11382338}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN082.png\", \"start\": 11382338, \"end\": 11382640}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN083.png\", \"start\": 11382640, \"end\": 11382968}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN084.png\", \"start\": 11382968, \"end\": 11383300}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN085.png\", \"start\": 11383300, \"end\": 11383548}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN086.png\", \"start\": 11383548, \"end\": 11383799}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_1x.png\", \"start\": 11383799, \"end\": 11391135}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_2x.png\", \"start\": 11391135, \"end\": 11398524}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_1x.png\", \"start\": 11398524, \"end\": 11398688}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_2x.png\", \"start\": 11398688, \"end\": 11398862}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_1x.png\", \"start\": 11398862, \"end\": 11406165}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_2x.png\", \"start\": 11406165, \"end\": 11413500}, {\"filename\": \"/edge_defs/scripts/anims.ddf\", \"start\": 11413500, \"end\": 11415528}, {\"filename\": \"/edge_defs/scripts/attacks.ddf\", \"start\": 11415528, \"end\": 11439786}, {\"filename\": \"/edge_defs/scripts/coal_api.ec\", \"start\": 11439786, \"end\": 11454398}, {\"filename\": \"/edge_defs/scripts/coal_hud.ec\", \"start\": 11454398, \"end\": 11472419}, {\"filename\": \"/edge_defs/scripts/colmap.ddf\", \"start\": 11472419, \"end\": 11476315}, {\"filename\": \"/edge_defs/scripts/flats.ddf\", \"start\": 11476315, \"end\": 11481592}, {\"filename\": \"/edge_defs/scripts/fonts.ddf\", \"start\": 11481592, \"end\": 11483224}, {\"filename\": \"/edge_defs/scripts/games.ddf\", \"start\": 11483224, \"end\": 11487561}, {\"filename\": \"/edge_defs/scripts/images.ddf\", \"start\": 11487561, \"end\": 11505825}, {\"filename\": \"/edge_defs/scripts/language.ldf\", \"start\": 11505825, \"end\": 11621196}, {\"filename\": \"/edge_defs/scripts/levels.ddf\", \"start\": 11621196, \"end\": 11638424}, {\"filename\": \"/edge_defs/scripts/lines.ddf\", \"start\": 11638424, \"end\": 11731753}, {\"filename\": \"/edge_defs/scripts/playlist.ddf\", \"start\": 11731753, \"end\": 11734571}, {\"filename\": \"/edge_defs/scripts/rscript.rts\", \"start\": 11734571, \"end\": 11736174}, {\"filename\": \"/edge_defs/scripts/sectors.ddf\", \"start\": 11736174, \"end\": 11749336}, {\"filename\": \"/edge_defs/scripts/sounds.ddf\", \"start\": 11749336, \"end\": 11760192}, {\"filename\": \"/edge_defs/scripts/styles.ddf\", \"start\": 11760192, \"end\": 11766107}, {\"filename\": \"/edge_defs/scripts/switch.ddf\", \"start\": 11766107, \"end\": 11770158}, {\"filename\": \"/edge_defs/scripts/things.ddf\", \"start\": 11770158, \"end\": 11914102}, {\"filename\": \"/edge_defs/scripts/wadfixes.ddf\", \"start\": 11914102, \"end\": 11915001}, {\"filename\": \"/edge_defs/scripts/weapons.ddf\", \"start\": 11915001, \"end\": 11920485}, {\"filename\": \"/edge_defs/sounds/DPBAREXP.lmp\", \"start\": 11920485, \"end\": 11920568}, {\"filename\": \"/edge_defs/sounds/DPBDCLS.lmp\", \"start\": 11920568, \"end\": 11920614}, {\"filename\": \"/edge_defs/sounds/DPBDOPN.lmp\", \"start\": 11920614, \"end\": 11920655}, {\"filename\": \"/edge_defs/sounds/DPBFG.lmp\", \"start\": 11920655, \"end\": 11920843}, {\"filename\": \"/edge_defs/sounds/DPBGACT.lmp\", \"start\": 11920843, \"end\": 11920942}, {\"filename\": \"/edge_defs/sounds/DPBGDTH1.lmp\", \"start\": 11920942, \"end\": 11921031}, {\"filename\": \"/edge_defs/sounds/DPBGDTH2.lmp\", \"start\": 11921031, \"end\": 11921120}, {\"filename\": \"/edge_defs/sounds/DPBGSIT1.lmp\", \"start\": 11921120, \"end\": 11921231}, {\"filename\": \"/edge_defs/sounds/DPBGSIT2.lmp\", \"start\": 11921231, \"end\": 11921342}, {\"filename\": \"/edge_defs/sounds/DPBOSCUB.lmp\", \"start\": 11921342, \"end\": 11921378}, {\"filename\": \"/edge_defs/sounds/DPBOSDTH.lmp\", \"start\": 11921378, \"end\": 11921657}, {\"filename\": \"/edge_defs/sounds/DPBOSPIT.lmp\", \"start\": 11921657, \"end\": 11921702}, {\"filename\": \"/edge_defs/sounds/DPBOSPN.lmp\", \"start\": 11921702, \"end\": 11921740}, {\"filename\": \"/edge_defs/sounds/DPBOSSIT.lmp\", \"start\": 11921740, \"end\": 11921874}, {\"filename\": \"/edge_defs/sounds/DPBRSDTH.lmp\", \"start\": 11921874, \"end\": 11921986}, {\"filename\": \"/edge_defs/sounds/DPBRSSIT.lmp\", \"start\": 11921986, \"end\": 11922094}, {\"filename\": \"/edge_defs/sounds/DPBSPACT.lmp\", \"start\": 11922094, \"end\": 11922150}, {\"filename\": \"/edge_defs/sounds/DPBSPDTH.lmp\", \"start\": 11922150, \"end\": 11922241}, {\"filename\": \"/edge_defs/sounds/DPBSPSIT.lmp\", \"start\": 11922241, \"end\": 11922380}, {\"filename\": \"/edge_defs/sounds/DPBSPWLK.lmp\", \"start\": 11922380, \"end\": 11922425}, {\"filename\": \"/edge_defs/sounds/DPCACDTH.lmp\", \"start\": 11922425, \"end\": 11922514}, {\"filename\": \"/edge_defs/sounds/DPCACSIT.lmp\", \"start\": 11922514, \"end\": 11922626}, {\"filename\": \"/edge_defs/sounds/DPCLAW.lmp\", \"start\": 11922626, \"end\": 11922672}, {\"filename\": \"/edge_defs/sounds/DPCYBDTH.lmp\", \"start\": 11922672, \"end\": 11922809}, {\"filename\": \"/edge_defs/sounds/DPCYBSIT.lmp\", \"start\": 11922809, \"end\": 11922958}, {\"filename\": \"/edge_defs/sounds/DPDBCLS.lmp\", \"start\": 11922958, \"end\": 11922969}, {\"filename\": \"/edge_defs/sounds/DPDBLOAD.lmp\", \"start\": 11922969, \"end\": 11922980}, {\"filename\": \"/edge_defs/sounds/DPDBOPN.lmp\", \"start\": 11922980, \"end\": 11922991}, {\"filename\": \"/edge_defs/sounds/DPDMACT.lmp\", \"start\": 11922991, \"end\": 11923018}, {\"filename\": \"/edge_defs/sounds/DPDMPAIN.lmp\", \"start\": 11923018, \"end\": 11923059}, {\"filename\": \"/edge_defs/sounds/DPDORCLS.lmp\", \"start\": 11923059, \"end\": 11923130}, {\"filename\": \"/edge_defs/sounds/DPDOROPN.lmp\", \"start\": 11923130, \"end\": 11923203}, {\"filename\": \"/edge_defs/sounds/DPDSHTGN.lmp\", \"start\": 11923203, \"end\": 11923246}, {\"filename\": \"/edge_defs/sounds/DPFIRSHT.lmp\", \"start\": 11923246, \"end\": 11923281}, {\"filename\": \"/edge_defs/sounds/DPFIRXPL.lmp\", \"start\": 11923281, \"end\": 11923298}, {\"filename\": \"/edge_defs/sounds/DPFLAME.lmp\", \"start\": 11923298, \"end\": 11923375}, {\"filename\": \"/edge_defs/sounds/DPFLAMST.lmp\", \"start\": 11923375, \"end\": 11923389}, {\"filename\": \"/edge_defs/sounds/DPGETPOW.lmp\", \"start\": 11923389, \"end\": 11923526}, {\"filename\": \"/edge_defs/sounds/DPHOOF.lmp\", \"start\": 11923526, \"end\": 11923606}, {\"filename\": \"/edge_defs/sounds/DPITEMUP.lmp\", \"start\": 11923606, \"end\": 11923693}, {\"filename\": \"/edge_defs/sounds/DPITMBK.lmp\", \"start\": 11923693, \"end\": 11923778}, {\"filename\": \"/edge_defs/sounds/DPKEENDT.lmp\", \"start\": 11923778, \"end\": 11923884}, {\"filename\": \"/edge_defs/sounds/DPKEENPN.lmp\", \"start\": 11923884, \"end\": 11923940}, {\"filename\": \"/edge_defs/sounds/DPKNTDTH.lmp\", \"start\": 11923940, \"end\": 11924063}, {\"filename\": \"/edge_defs/sounds/DPKNTSIT.lmp\", \"start\": 11924063, \"end\": 11924129}, {\"filename\": \"/edge_defs/sounds/DPMANATK.lmp\", \"start\": 11924129, \"end\": 11924195}, {\"filename\": \"/edge_defs/sounds/DPMANDTH.lmp\", \"start\": 11924195, \"end\": 11924273}, {\"filename\": \"/edge_defs/sounds/DPMANSIT.lmp\", \"start\": 11924273, \"end\": 11924370}, {\"filename\": \"/edge_defs/sounds/DPMETAL.lmp\", \"start\": 11924370, \"end\": 11924389}, {\"filename\": \"/edge_defs/sounds/DPMNPAIN.lmp\", \"start\": 11924389, \"end\": 11924449}, {\"filename\": \"/edge_defs/sounds/DPNOWAY.lmp\", \"start\": 11924449, \"end\": 11924490}, {\"filename\": \"/edge_defs/sounds/DPOOF.lmp\", \"start\": 11924490, \"end\": 11924509}, {\"filename\": \"/edge_defs/sounds/DPPDIEHI.lmp\", \"start\": 11924509, \"end\": 11924587}, {\"filename\": \"/edge_defs/sounds/DPPEDTH.lmp\", \"start\": 11924587, \"end\": 11924696}, {\"filename\": \"/edge_defs/sounds/DPPEPAIN.lmp\", \"start\": 11924696, \"end\": 11924746}, {\"filename\": \"/edge_defs/sounds/DPPESIT.lmp\", \"start\": 11924746, \"end\": 11924863}, {\"filename\": \"/edge_defs/sounds/DPPISTOL.lmp\", \"start\": 11924863, \"end\": 11924881}, {\"filename\": \"/edge_defs/sounds/DPPLASMA.lmp\", \"start\": 11924881, \"end\": 11924923}, {\"filename\": \"/edge_defs/sounds/DPPLDETH.lmp\", \"start\": 11924923, \"end\": 11925072}, {\"filename\": \"/edge_defs/sounds/DPPLPAIN.lmp\", \"start\": 11925072, \"end\": 11925102}, {\"filename\": \"/edge_defs/sounds/DPPODTH1.lmp\", \"start\": 11925102, \"end\": 11925191}, {\"filename\": \"/edge_defs/sounds/DPPODTH2.lmp\", \"start\": 11925191, \"end\": 11925280}, {\"filename\": \"/edge_defs/sounds/DPPODTH3.lmp\", \"start\": 11925280, \"end\": 11925369}, {\"filename\": \"/edge_defs/sounds/DPPOPAIN.lmp\", \"start\": 11925369, \"end\": 11925407}, {\"filename\": \"/edge_defs/sounds/DPPOSACT.lmp\", \"start\": 11925407, \"end\": 11925437}, {\"filename\": \"/edge_defs/sounds/DPPOSIT1.lmp\", \"start\": 11925437, \"end\": 11925548}, {\"filename\": \"/edge_defs/sounds/DPPOSIT2.lmp\", \"start\": 11925548, \"end\": 11925659}, {\"filename\": \"/edge_defs/sounds/DPPOSIT3.lmp\", \"start\": 11925659, \"end\": 11925770}, {\"filename\": \"/edge_defs/sounds/DPPSTART.lmp\", \"start\": 11925770, \"end\": 11925811}, {\"filename\": \"/edge_defs/sounds/DPPSTOP.lmp\", \"start\": 11925811, \"end\": 11925828}, {\"filename\": \"/edge_defs/sounds/DPPUNCH.lmp\", \"start\": 11925828, \"end\": 11925865}, {\"filename\": \"/edge_defs/sounds/DPRADIO.lmp\", \"start\": 11925865, \"end\": 11925917}, {\"filename\": \"/edge_defs/sounds/DPRLAUNC.lmp\", \"start\": 11925917, \"end\": 11925980}, {\"filename\": \"/edge_defs/sounds/DPRXPLOD.lmp\", \"start\": 11925980, \"end\": 11926152}, {\"filename\": \"/edge_defs/sounds/DPSAWFUL.lmp\", \"start\": 11926152, \"end\": 11926180}, {\"filename\": \"/edge_defs/sounds/DPSAWHIT.lmp\", \"start\": 11926180, \"end\": 11926208}, {\"filename\": \"/edge_defs/sounds/DPSAWIDL.lmp\", \"start\": 11926208, \"end\": 11926213}, {\"filename\": \"/edge_defs/sounds/DPSAWUP.lmp\", \"start\": 11926213, \"end\": 11926301}, {\"filename\": \"/edge_defs/sounds/DPSGCOCK.lmp\", \"start\": 11926301, \"end\": 11926364}, {\"filename\": \"/edge_defs/sounds/DPSGTATK.lmp\", \"start\": 11926364, \"end\": 11926438}, {\"filename\": \"/edge_defs/sounds/DPSGTDTH.lmp\", \"start\": 11926438, \"end\": 11926527}, {\"filename\": \"/edge_defs/sounds/DPSGTSIT.lmp\", \"start\": 11926527, \"end\": 11926638}, {\"filename\": \"/edge_defs/sounds/DPSHOTGN.lmp\", \"start\": 11926638, \"end\": 11926680}, {\"filename\": \"/edge_defs/sounds/DPSKEACT.lmp\", \"start\": 11926680, \"end\": 11926720}, {\"filename\": \"/edge_defs/sounds/DPSKEATK.lmp\", \"start\": 11926720, \"end\": 11926779}, {\"filename\": \"/edge_defs/sounds/DPSKEDTH.lmp\", \"start\": 11926779, \"end\": 11926859}, {\"filename\": \"/edge_defs/sounds/DPSKEPCH.lmp\", \"start\": 11926859, \"end\": 11926896}, {\"filename\": \"/edge_defs/sounds/DPSKESIT.lmp\", \"start\": 11926896, \"end\": 11927002}, {\"filename\": \"/edge_defs/sounds/DPSKESWG.lmp\", \"start\": 11927002, \"end\": 11927042}, {\"filename\": \"/edge_defs/sounds/DPSKLATK.lmp\", \"start\": 11927042, \"end\": 11927122}, {\"filename\": \"/edge_defs/sounds/DPSKLDTH.lmp\", \"start\": 11927122, \"end\": 11927139}, {\"filename\": \"/edge_defs/sounds/DPSLOP.lmp\", \"start\": 11927139, \"end\": 11927248}, {\"filename\": \"/edge_defs/sounds/DPSPIDTH.lmp\", \"start\": 11927248, \"end\": 11927361}, {\"filename\": \"/edge_defs/sounds/DPSPISIT.lmp\", \"start\": 11927361, \"end\": 11927509}, {\"filename\": \"/edge_defs/sounds/DPSSDTH.lmp\", \"start\": 11927509, \"end\": 11927598}, {\"filename\": \"/edge_defs/sounds/DPSSSIT.lmp\", \"start\": 11927598, \"end\": 11927709}, {\"filename\": \"/edge_defs/sounds/DPSTNMOV.lmp\", \"start\": 11927709, \"end\": 11927717}, {\"filename\": \"/edge_defs/sounds/DPSWTCHN.lmp\", \"start\": 11927717, \"end\": 11927745}, {\"filename\": \"/edge_defs/sounds/DPSWTCHX.lmp\", \"start\": 11927745, \"end\": 11927774}, {\"filename\": \"/edge_defs/sounds/DPTELEPT.lmp\", \"start\": 11927774, \"end\": 11927876}, {\"filename\": \"/edge_defs/sounds/DPTINK.lmp\", \"start\": 11927876, \"end\": 11927928}, {\"filename\": \"/edge_defs/sounds/DPVILACT.lmp\", \"start\": 11927928, \"end\": 11927983}, {\"filename\": \"/edge_defs/sounds/DPVILATK.lmp\", \"start\": 11927983, \"end\": 11928046}, {\"filename\": \"/edge_defs/sounds/DPVILDTH.lmp\", \"start\": 11928046, \"end\": 11928314}, {\"filename\": \"/edge_defs/sounds/DPVILSIT.lmp\", \"start\": 11928314, \"end\": 11928390}, {\"filename\": \"/edge_defs/sounds/DPVIPAIN.lmp\", \"start\": 11928390, \"end\": 11928501}, {\"filename\": \"/edge_defs/sounds/DPWPNUP.lmp\", \"start\": 11928501, \"end\": 11928545}, {\"filename\": \"/edge_defs/sounds/DSACIDFT.ogg\", \"start\": 11928545, \"end\": 11936095, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSCRUSH.lmp\", \"start\": 11936095, \"end\": 11943113}, {\"filename\": \"/edge_defs/sounds/DSDGACT.ogg\", \"start\": 11943113, \"end\": 11950774, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGATK.ogg\", \"start\": 11950774, \"end\": 11957580, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGDTH.ogg\", \"start\": 11957580, \"end\": 11968396, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGPAIN.ogg\", \"start\": 11968396, \"end\": 11974388, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGSIT.ogg\", \"start\": 11974388, \"end\": 11980551, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT1.wav\", \"start\": 11980551, \"end\": 11995895, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT2.wav\", \"start\": 11995895, \"end\": 12011367, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT3.wav\", \"start\": 12011367, \"end\": 12023607, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT4.wav\", \"start\": 12023607, \"end\": 12038973, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSGLSBRK.wav\", \"start\": 12038973, \"end\": 12071571, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSJPDOWN.lmp\", \"start\": 12071571, \"end\": 12088159}, {\"filename\": \"/edge_defs/sounds/DSJPFLOW.lmp\", \"start\": 12088159, \"end\": 12092081}, {\"filename\": \"/edge_defs/sounds/DSJPIDLE.lmp\", \"start\": 12092081, \"end\": 12095048}, {\"filename\": \"/edge_defs/sounds/DSJPMOVE.lmp\", \"start\": 12095048, \"end\": 12096465}, {\"filename\": \"/edge_defs/sounds/DSJPRISE.lmp\", \"start\": 12096465, \"end\": 12104285}, {\"filename\": \"/edge_defs/sounds/DSMUCKFT.ogg\", \"start\": 12104285, \"end\": 12110359, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSSECRET.ogg\", \"start\": 12110359, \"end\": 12123200, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWATRFT.ogg\", \"start\": 12123200, \"end\": 12130861, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWTDIVE.wav\", \"start\": 12130861, \"end\": 12153337, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/HEARTBT1.ogg\", \"start\": 12153337, \"end\": 12173692, \"audio\": 1}, {\"filename\": \"/edge_defs/sprites/BSPHA0.png\", \"start\": 12173692, \"end\": 12174908}, {\"filename\": \"/edge_defs/sprites/BSPHB0.png\", \"start\": 12174908, \"end\": 12176129}, {\"filename\": \"/edge_defs/sprites/BSPHC0.png\", \"start\": 12176129, \"end\": 12177339}, {\"filename\": \"/edge_defs/sprites/BSPHD0.png\", \"start\": 12177339, \"end\": 12178540}, {\"filename\": \"/edge_defs/sprites/BSPHE0.png\", \"start\": 12178540, \"end\": 12179821}, {\"filename\": \"/edge_defs/sprites/BSPHF0.png\", \"start\": 12179821, \"end\": 12181164}, {\"filename\": \"/edge_defs/sprites/BSPHG0.png\", \"start\": 12181164, \"end\": 12182568}, {\"filename\": \"/edge_defs/sprites/BSPHH0.png\", \"start\": 12182568, \"end\": 12183913}, {\"filename\": \"/edge_defs/sprites/BSPHI0.png\", \"start\": 12183913, \"end\": 12185220}, {\"filename\": \"/edge_defs/sprites/BSPHJ0.png\", \"start\": 12185220, \"end\": 12186487}, {\"filename\": \"/edge_defs/sprites/BSPHK0.png\", \"start\": 12186487, \"end\": 12187724}, {\"filename\": \"/edge_defs/sprites/GLS1A0.lmp\", \"start\": 12187724, \"end\": 12187818}, {\"filename\": \"/edge_defs/sprites/GLS2A0.lmp\", \"start\": 12187818, \"end\": 12188032}, {\"filename\": \"/edge_defs/sprites/GLS3A0.lmp\", \"start\": 12188032, \"end\": 12188336}, {\"filename\": \"/edge_defs/sprites/GLS4A0.lmp\", \"start\": 12188336, \"end\": 12188704}, {\"filename\": \"/edge_defs/sprites/GLS5A0.lmp\", \"start\": 12188704, \"end\": 12189099}, {\"filename\": \"/edge_defs/sprites/GLS6A0.lmp\", \"start\": 12189099, \"end\": 12189535}, {\"filename\": \"/edge_defs/sprites/GLS7A0.lmp\", \"start\": 12189535, \"end\": 12190005}, {\"filename\": \"/edge_defs/sprites/GLS8A0.lmp\", \"start\": 12190005, \"end\": 12190437}, {\"filename\": \"/edge_defs/sprites/GLS9A0.lmp\", \"start\": 12190437, \"end\": 12190800}, {\"filename\": \"/edge_defs/sprites/JPCKA0.lmp\", \"start\": 12190800, \"end\": 12191616}, {\"filename\": \"/edge_defs/sprites/JPCKB0.lmp\", \"start\": 12191616, \"end\": 12192434}, {\"filename\": \"/edge_defs/sprites/JPCKC0.lmp\", \"start\": 12192434, \"end\": 12193252}, {\"filename\": \"/edge_defs/sprites/LVASA0.png\", \"start\": 12193252, \"end\": 12194550}, {\"filename\": \"/edge_defs/sprites/LVASB0.png\", \"start\": 12194550, \"end\": 12195933}, {\"filename\": \"/edge_defs/sprites/LVASC0.png\", \"start\": 12195933, \"end\": 12197287}, {\"filename\": \"/edge_defs/sprites/LVASD0.png\", \"start\": 12197287, \"end\": 12198587}, {\"filename\": \"/edge_defs/sprites/LVASE0.png\", \"start\": 12198587, \"end\": 12199856}, {\"filename\": \"/edge_defs/sprites/LVASF0.png\", \"start\": 12199856, \"end\": 12201079}, {\"filename\": \"/edge_defs/sprites/MUDSA0.png\", \"start\": 12201079, \"end\": 12202289}, {\"filename\": \"/edge_defs/sprites/MUDSB0.png\", \"start\": 12202289, \"end\": 12203501}, {\"filename\": \"/edge_defs/sprites/MUDSC0.png\", \"start\": 12203501, \"end\": 12204692}, {\"filename\": \"/edge_defs/sprites/MUDSD0.png\", \"start\": 12204692, \"end\": 12205877}, {\"filename\": \"/edge_defs/sprites/MUDSE0.png\", \"start\": 12205877, \"end\": 12207128}, {\"filename\": \"/edge_defs/sprites/MUDSF0.png\", \"start\": 12207128, \"end\": 12208369}, {\"filename\": \"/edge_defs/sprites/MUDSG0.png\", \"start\": 12208369, \"end\": 12209618}, {\"filename\": \"/edge_defs/sprites/MUDSH0.png\", \"start\": 12209618, \"end\": 12210840}, {\"filename\": \"/edge_defs/sprites/NVSCA0.lmp\", \"start\": 12210840, \"end\": 12211444}, {\"filename\": \"/edge_defs/sprites/NVSCB0.lmp\", \"start\": 12211444, \"end\": 12212048}, {\"filename\": \"/edge_defs/sprites/PLAYX1.lmp\", \"start\": 12212048, \"end\": 12212971}, {\"filename\": \"/edge_defs/sprites/PLAYX2X8.lmp\", \"start\": 12212971, \"end\": 12214187}, {\"filename\": \"/edge_defs/sprites/PLAYX3X7.lmp\", \"start\": 12214187, \"end\": 12215582}, {\"filename\": \"/edge_defs/sprites/PLAYX4X6.lmp\", \"start\": 12215582, \"end\": 12216711}, {\"filename\": \"/edge_defs/sprites/PLAYX5.lmp\", \"start\": 12216711, \"end\": 12217513}, {\"filename\": \"/edge_defs/sprites/PLAYY1.lmp\", \"start\": 12217513, \"end\": 12218461}, {\"filename\": \"/edge_defs/sprites/PLAYY2Y8.lmp\", \"start\": 12218461, \"end\": 12219689}, {\"filename\": \"/edge_defs/sprites/PLAYY3Y7.lmp\", \"start\": 12219689, \"end\": 12221075}, {\"filename\": \"/edge_defs/sprites/PLAYY4Y6.lmp\", \"start\": 12221075, \"end\": 12222213}, {\"filename\": \"/edge_defs/sprites/PLAYY5.lmp\", \"start\": 12222213, \"end\": 12223010}, {\"filename\": \"/edge_defs/sprites/PLS1A0.lmp\", \"start\": 12223010, \"end\": 12223395}, {\"filename\": \"/edge_defs/sprites/PLS1B0.lmp\", \"start\": 12223395, \"end\": 12223794}, {\"filename\": \"/edge_defs/sprites/PLS1C0.lmp\", \"start\": 12223794, \"end\": 12224179}, {\"filename\": \"/edge_defs/sprites/PLS1D0.lmp\", \"start\": 12224179, \"end\": 12224578}, {\"filename\": \"/edge_defs/sprites/PLS1E0.lmp\", \"start\": 12224578, \"end\": 12226936}, {\"filename\": \"/edge_defs/sprites/PLS1F0.lmp\", \"start\": 12226936, \"end\": 12229294}, {\"filename\": \"/edge_defs/sprites/PLS1G0.lmp\", \"start\": 12229294, \"end\": 12231521}, {\"filename\": \"/edge_defs/sprites/PLS2A0.lmp\", \"start\": 12231521, \"end\": 12231737}, {\"filename\": \"/edge_defs/sprites/PLS2B0.lmp\", \"start\": 12231737, \"end\": 12231980}, {\"filename\": \"/edge_defs/sprites/PLS2C0.lmp\", \"start\": 12231980, \"end\": 12232192}, {\"filename\": \"/edge_defs/sprites/PLS2D0.lmp\", \"start\": 12232192, \"end\": 12232582}, {\"filename\": \"/edge_defs/sprites/PLS2E0.lmp\", \"start\": 12232582, \"end\": 12233276}, {\"filename\": \"/edge_defs/sprites/PRT1A0.png\", \"start\": 12233276, \"end\": 12234148}, {\"filename\": \"/edge_defs/sprites/PRT2A0.png\", \"start\": 12234148, \"end\": 12235020}, {\"filename\": \"/edge_defs/sprites/PRT3A0.png\", \"start\": 12235020, \"end\": 12235149}, {\"filename\": \"/edge_defs/sprites/SLDGA0.png\", \"start\": 12235149, \"end\": 12236365}, {\"filename\": \"/edge_defs/sprites/SLDGB0.png\", \"start\": 12236365, \"end\": 12237583}, {\"filename\": \"/edge_defs/sprites/SLDGC0.png\", \"start\": 12237583, \"end\": 12238779}, {\"filename\": \"/edge_defs/sprites/SLDGD0.png\", \"start\": 12238779, \"end\": 12239966}, {\"filename\": \"/edge_defs/sprites/SLDGE0.png\", \"start\": 12239966, \"end\": 12241217}, {\"filename\": \"/edge_defs/sprites/SLDGF0.png\", \"start\": 12241217, \"end\": 12242458}, {\"filename\": \"/edge_defs/sprites/SLDGG0.png\", \"start\": 12242458, \"end\": 12243707}, {\"filename\": \"/edge_defs/sprites/SLDGH0.png\", \"start\": 12243707, \"end\": 12244929}, {\"filename\": \"/edge_defs/sprites/SLIMA0.png\", \"start\": 12244929, \"end\": 12246130}, {\"filename\": \"/edge_defs/sprites/SLIMB0.png\", \"start\": 12246130, \"end\": 12247335}, {\"filename\": \"/edge_defs/sprites/SLIMC0.png\", \"start\": 12247335, \"end\": 12248522}, {\"filename\": \"/edge_defs/sprites/SLIMD0.png\", \"start\": 12248522, \"end\": 12249700}, {\"filename\": \"/edge_defs/sprites/SLIME0.png\", \"start\": 12249700, \"end\": 12250945}, {\"filename\": \"/edge_defs/sprites/SLIMF0.png\", \"start\": 12250945, \"end\": 12252181}, {\"filename\": \"/edge_defs/sprites/SLIMG0.png\", \"start\": 12252181, \"end\": 12253426}, {\"filename\": \"/edge_defs/sprites/SLIMH0.png\", \"start\": 12253426, \"end\": 12254642}, {\"filename\": \"/edge_defs/sprites/SPSHA0.png\", \"start\": 12254642, \"end\": 12255859}, {\"filename\": \"/edge_defs/sprites/SPSHB0.png\", \"start\": 12255859, \"end\": 12257079}, {\"filename\": \"/edge_defs/sprites/SPSHC0.png\", \"start\": 12257079, \"end\": 12258290}, {\"filename\": \"/edge_defs/sprites/SPSHD0.png\", \"start\": 12258290, \"end\": 12259491}, {\"filename\": \"/edge_defs/sprites/SPSHE0.png\", \"start\": 12259491, \"end\": 12260771}, {\"filename\": \"/edge_defs/sprites/SPSHF0.png\", \"start\": 12260771, \"end\": 12262122}, {\"filename\": \"/edge_defs/sprites/SPSHG0.png\", \"start\": 12262122, \"end\": 12263529}, {\"filename\": \"/edge_defs/sprites/SPSHH0.png\", \"start\": 12263529, \"end\": 12264881}, {\"filename\": \"/edge_defs/sprites/SPSHI0.png\", \"start\": 12264881, \"end\": 12266192}, {\"filename\": \"/edge_defs/sprites/SPSHJ0.png\", \"start\": 12266192, \"end\": 12267460}, {\"filename\": \"/edge_defs/sprites/SPSHK0.png\", \"start\": 12267460, \"end\": 12268697}, {\"filename\": \"/edge_defs/sprites/TSTPA0.png\", \"start\": 12268697, \"end\": 12269822}, {\"filename\": \"/edge_defs/sprites/TSTPB0.lmp\", \"start\": 12269822, \"end\": 12270164}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA1.png\", \"start\": 12270164, \"end\": 12271444}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA2.png\", \"start\": 12271444, \"end\": 12272997}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA3.png\", \"start\": 12272997, \"end\": 12274628}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA4.png\", \"start\": 12274628, \"end\": 12276161}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA5.png\", \"start\": 12276161, \"end\": 12277347}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA6.png\", \"start\": 12277347, \"end\": 12278863}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA7.png\", \"start\": 12278863, \"end\": 12280456}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA8.png\", \"start\": 12280456, \"end\": 12281974}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB1.png\", \"start\": 12281974, \"end\": 12283204}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB2.png\", \"start\": 12283204, \"end\": 12284724}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB3.png\", \"start\": 12284724, \"end\": 12286331}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB4.png\", \"start\": 12286331, \"end\": 12287864}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB5.png\", \"start\": 12287864, \"end\": 12289074}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB6.png\", \"start\": 12289074, \"end\": 12290572}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB7.png\", \"start\": 12290572, \"end\": 12292164}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB8.png\", \"start\": 12292164, \"end\": 12293678}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC1.png\", \"start\": 12293678, \"end\": 12294975}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC2.png\", \"start\": 12294975, \"end\": 12296481}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC3.png\", \"start\": 12296481, \"end\": 12298052}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC4.png\", \"start\": 12298052, \"end\": 12299583}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC5.png\", \"start\": 12299583, \"end\": 12300920}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC6.png\", \"start\": 12300920, \"end\": 12302440}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC7.png\", \"start\": 12302440, \"end\": 12303976}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC8.png\", \"start\": 12303976, \"end\": 12305465}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD1.png\", \"start\": 12305465, \"end\": 12306776}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD2.png\", \"start\": 12306776, \"end\": 12308294}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD3.png\", \"start\": 12308294, \"end\": 12309882}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD4.png\", \"start\": 12309882, \"end\": 12311407}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD5.png\", \"start\": 12311407, \"end\": 12312733}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD6.png\", \"start\": 12312733, \"end\": 12314275}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD7.png\", \"start\": 12314275, \"end\": 12315848}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD8.png\", \"start\": 12315848, \"end\": 12317351}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE1.png\", \"start\": 12317351, \"end\": 12318713}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE2.png\", \"start\": 12318713, \"end\": 12320230}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE3.png\", \"start\": 12320230, \"end\": 12321778}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE4.png\", \"start\": 12321778, \"end\": 12323376}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE5.png\", \"start\": 12323376, \"end\": 12324814}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE6.png\", \"start\": 12324814, \"end\": 12326364}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE7.png\", \"start\": 12326364, \"end\": 12327918}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE8.png\", \"start\": 12327918, \"end\": 12329477}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF1.png\", \"start\": 12329477, \"end\": 12330874}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF2.png\", \"start\": 12330874, \"end\": 12332445}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF3.png\", \"start\": 12332445, \"end\": 12334047}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF4.png\", \"start\": 12334047, \"end\": 12335613}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF5.png\", \"start\": 12335613, \"end\": 12337016}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF6.png\", \"start\": 12337016, \"end\": 12338533}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF7.png\", \"start\": 12338533, \"end\": 12340129}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF8.png\", \"start\": 12340129, \"end\": 12341737}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG1.png\", \"start\": 12341737, \"end\": 12343126}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG2.png\", \"start\": 12343126, \"end\": 12344714}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG3.png\", \"start\": 12344714, \"end\": 12346358}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG4.png\", \"start\": 12346358, \"end\": 12347878}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG5.png\", \"start\": 12347878, \"end\": 12349228}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG6.png\", \"start\": 12349228, \"end\": 12350749}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG7.png\", \"start\": 12350749, \"end\": 12352371}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG8.png\", \"start\": 12352371, \"end\": 12353941}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH1.png\", \"start\": 12353941, \"end\": 12355251}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH2.png\", \"start\": 12355251, \"end\": 12356782}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH3.png\", \"start\": 12356782, \"end\": 12358374}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH4.png\", \"start\": 12358374, \"end\": 12359857}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH5.png\", \"start\": 12359857, \"end\": 12361151}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH6.png\", \"start\": 12361151, \"end\": 12362618}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH7.png\", \"start\": 12362618, \"end\": 12364196}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH8.png\", \"start\": 12364196, \"end\": 12365765}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDI0.png\", \"start\": 12365765, \"end\": 12367455}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDJ0.png\", \"start\": 12367455, \"end\": 12369237}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDK0.png\", \"start\": 12369237, \"end\": 12370983}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDL0.png\", \"start\": 12370983, \"end\": 12372703}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDM0.png\", \"start\": 12372703, \"end\": 12374430}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDN0.png\", \"start\": 12374430, \"end\": 12376169}, {\"filename\": \"/edge_defs/textures/FUZZMAP8.png\", \"start\": 12376169, \"end\": 12390969}, {\"filename\": \"/edge_defs/textures/PORTAL7A.jpg\", \"start\": 12390969, \"end\": 12413087}, {\"filename\": \"/edge_defs/textures/PORTAL7B.jpg\", \"start\": 12413087, \"end\": 12431440}, {\"filename\": \"/edge_defs/textures/PORTAL7C.jpg\", \"start\": 12431440, \"end\": 12446931}, {\"filename\": \"/edge_defs/textures/PORTAL7D.jpg\", \"start\": 12446931, \"end\": 12462225}, {\"filename\": \"/edge_defs/textures/PORTAL7E.jpg\", \"start\": 12462225, \"end\": 12477092}, {\"filename\": \"/edge_defs/textures/PORTAL7F.jpg\", \"start\": 12477092, \"end\": 12494093}, {\"filename\": \"/edge_defs/textures/PORTAL7G.jpg\", \"start\": 12494093, \"end\": 12514801}, {\"filename\": \"/edge_defs/ttf/ECFONT01.ttf\", \"start\": 12514801, \"end\": 12579141}, {\"filename\": \"/edge_defs/version.txt\", \"start\": 12579141, \"end\": 12579145}, {\"filename\": \"/freedm.wad\", \"start\": 12579145, \"end\": 34403593}, {\"filename\": \"/freedoom2.wad\", \"start\": 34403593, \"end\": 62947725}, {\"filename\": \"/soundfont/AdPlug.op2\", \"start\": 62947725, \"end\": 62959633}, {\"filename\": \"/soundfont/ChipFreak.sf2\", \"start\": 62959633, \"end\": 63069117}, {\"filename\": \"/soundfont/DMXOPL.op2\", \"start\": 63069117, \"end\": 63081025}, {\"filename\": \"/soundfont/DMXOPL3.wopl\", \"start\": 63081025, \"end\": 63293094}, {\"filename\": \"/soundfont/Default.sf2\", \"start\": 63293094, \"end\": 67439534}, {\"filename\": \"/soundfont/ProtoSquare!.sf2\", \"start\": 67439534, \"end\": 67803772}, {\"filename\": \"/soundfont/WadSmoosh.op2\", \"start\": 67803772, \"end\": 67815680}, {\"filename\": \"/soundfont/microGM.sf2\", \"start\": 67815680, \"end\": 70445322}], \"remote_package_size\": 51936212, \"package_uuid\": \"sha256-236d61b5f47100922de00b270ec33a5687fa47124e252b51603e2a4ec36e396d\"});\n\n  })();\n\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\nvar ENVIRONMENT_IS_WEB = true;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary,\n    setWindowTitle;\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\n  // is gone, so we saved it, and we use it here instead of any other info.\n  if (_scriptDir) {\n    scriptDirectory = _scriptDir;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n  // they are removed because they could contain a slash.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n// include: web_or_worker_shell_read.js\nread_ = (url) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, false);\n    xhr.send(null);\n    return xhr.responseText;\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = (url) => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.responseType = 'arraybuffer';\n      xhr.send(null);\n      return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = (url, onload, onerror) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = () => {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  }\n\n// end include: web_or_worker_shell_read.js\n  }\n\n  setWindowTitle = (title) => document.title = title;\n} else\n{\n}\n\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.error.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];\n\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\nif (Module['quit']) quit_ = Module['quit'];\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n\n// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary;\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\nvar noExitRuntime = Module['noExitRuntime'] || true;\n\nif (typeof WebAssembly != 'object') {\n  abort('no native wasm support detected');\n}\n\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    // This build was created without ASSERTIONS defined.  `assert()` should not\n    // ever be called in this configuration but in case there are callers in\n    // the wild leave this simple abort() implemenation here for now.\n    abort(text);\n  }\n}\n\n// Memory management\n\nvar HEAP,\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/** @type {!Float64Array} */\n  HEAPF64;\n\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n}\n\n// include: runtime_init_table.js\n// In regular non-RELOCATABLE mode the table is exported\n// from the wasm module and this will be assigned once\n// the exports are available.\nvar wasmTable;\n// end include: runtime_init_table.js\n// include: runtime_stack_check.js\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// end include: runtime_assertions.js\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATMAIN__    = []; // functions called when main() is to be run\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\n\nvar runtimeKeepaliveCounter = 0;\n\nfunction keepRuntimeAlive() {\n  return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\n\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  runtimeInitialized = true;\n\n  \nif (!Module[\"noFSInit\"] && !FS.init.initialized)\n  FS.init();\nFS.ignorePermissions = false;\n\nTTY.init();\n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  \n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction postRun() {\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnPreMain(cb) {\n  __ATMAIN__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\n\nfunction getUniqueRunDependency(id) {\n  return id;\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  what += '. Build with -sASSERTIONS for more info.';\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  readyPromiseReject(e);\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\n  return filename.startsWith(dataURIPrefix);\n}\n\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename) {\n  return filename.startsWith('file://');\n}\n// end include: URIUtils.js\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;\n  wasmBinaryFile = 'edge-classic.wasm';\n  if (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n  }\n\nfunction getBinarySync(file) {\n  if (file == wasmBinaryFile && wasmBinary) {\n    return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n    return readBinary(file);\n  }\n  throw \"both async and sync fetching of the wasm failed\";\n}\n\nfunction getBinaryPromise(binaryFile) {\n  // If we don't have the binary yet, try to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary\n      && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function'\n    ) {\n      return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\n        if (!response['ok']) {\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n        }\n        return response['arrayBuffer']();\n      }).catch(() => getBinarySync(binaryFile));\n    }\n  }\n\n  // Otherwise, getBinarySync should be able to get it synchronously\n  return Promise.resolve().then(() => getBinarySync(binaryFile));\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n  return getBinaryPromise(binaryFile).then((binary) => {\n    return WebAssembly.instantiate(binary, imports);\n  }).then((instance) => {\n    return instance;\n  }).then(receiver, (reason) => {\n    err(`failed to asynchronously prepare wasm: ${reason}`);\n\n    abort(reason);\n  });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n  if (!binary &&\n      typeof WebAssembly.instantiateStreaming == 'function' &&\n      !isDataURI(binaryFile) &&\n      typeof fetch == 'function') {\n    return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\n      // Suppress closure warning here since the upstream definition for\n      // instantiateStreaming only allows Promise<Repsponse> rather than\n      // an actual Response.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n      /** @suppress {checkTypes} */\n      var result = WebAssembly.instantiateStreaming(response, imports);\n\n      return result.then(\n        callback,\n        function(reason) {\n          // We expect the most common failure cause to be a bad MIME type for the binary,\n          // in which case falling back to ArrayBuffer instantiation should work.\n          err(`wasm streaming compile failed: ${reason}`);\n          err('falling back to ArrayBuffer instantiation');\n          return instantiateArrayBuffer(binaryFile, imports, callback);\n        });\n    });\n  }\n  return instantiateArrayBuffer(binaryFile, imports, callback);\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports,\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n\n    exports = Asyncify.instrumentWasmExports(exports);\n\n    wasmExports = exports;\n    \n\n    wasmMemory = wasmExports['memory'];\n    \n    updateMemoryViews();\n\n    wasmTable = wasmExports['__indirect_function_table'];\n    \n\n    addOnInit(wasmExports['__wasm_call_ctors']);\n\n    removeRunDependency('wasm-instantiate');\n    return exports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch(e) {\n      err(`Module.instantiateWasm callback failed with error: ${e}`);\n        // If instantiation fails, reject the module ready promise.\n        readyPromiseReject(e);\n    }\n  }\n\n  // If instantiation fails, reject the module ready promise.\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// include: runtime_debug.js\n// end include: runtime_debug.js\n// === Body ===\n\nvar ASM_CONSTS = {\n  650424: () => { if (Module.edgePostInit) { Module.edgePostInit(); } },  \n 650480: ($0, $1) => { const args = []; for (let i = 0; i < $0; i++) { args.push(UTF8ToString(HEAP32[($1 >> 2) + i])); } console.log(`Edge command line: ${args}`); const homeIndex = args.indexOf(\"-home\"); if (homeIndex === -1 || homeIndex >= args.length || args[homeIndex + 1].startsWith(\"-\")) { throw \"No home command line option specified\" } const homeDir = args[homeIndex + 1]; if (!FS.analyzePath(homeDir).exists) { FS.mkdirTree(homeDir); } FS.mount(IDBFS, {}, homeDir); FS.syncfs(true, function (err) { if (err) { console.error(`Error mounting home dir ${err}`); return; } Module._I_WebMain($0, $1); }); },  \n 651070: () => { if (Module.onFullscreen) { Module.onFullscreen(); } },  \n 651126: ($0) => { if (Module.edgePreSyncFS) { Module.edgePreSyncFS(); } FS.syncfs($0, function (err) { if (Module.edgePostSyncFS) { Module.edgePostSyncFS(); } }); },  \n 651275: ($0) => { var str = UTF8ToString($0) + '\\n\\n' + 'Abort/Retry/Ignore/AlwaysIgnore? [ariA] :'; var reply = window.prompt(str, \"i\"); if (reply === null) { reply = \"i\"; } return allocate(intArrayFromString(reply), 'i8', ALLOC_NORMAL); },  \n 651500: () => { if (typeof(AudioContext) !== 'undefined') { return true; } else if (typeof(webkitAudioContext) !== 'undefined') { return true; } return false; },  \n 651647: () => { if ((typeof(navigator.mediaDevices) !== 'undefined') && (typeof(navigator.mediaDevices.getUserMedia) !== 'undefined')) { return true; } else if (typeof(navigator.webkitGetUserMedia) !== 'undefined') { return true; } return false; },  \n 651881: ($0) => { if(typeof(Module['SDL2']) === 'undefined') { Module['SDL2'] = {}; } var SDL2 = Module['SDL2']; if (!$0) { SDL2.audio = {}; } else { SDL2.capture = {}; } if (!SDL2.audioContext) { if (typeof(AudioContext) !== 'undefined') { SDL2.audioContext = new AudioContext(); } else if (typeof(webkitAudioContext) !== 'undefined') { SDL2.audioContext = new webkitAudioContext(); } if (SDL2.audioContext) { autoResumeAudioContext(SDL2.audioContext); } } return SDL2.audioContext === undefined ? -1 : 0; },  \n 652374: () => { var SDL2 = Module['SDL2']; return SDL2.audioContext.sampleRate; },  \n 652442: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; var have_microphone = function(stream) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); SDL2.capture.silenceTimer = undefined; } SDL2.capture.mediaStreamNode = SDL2.audioContext.createMediaStreamSource(stream); SDL2.capture.scriptProcessorNode = SDL2.audioContext.createScriptProcessor($1, $0, 1); SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) { if ((SDL2 === undefined) || (SDL2.capture === undefined)) { return; } audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0); SDL2.capture.currentCaptureBuffer = audioProcessingEvent.inputBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode); SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination); SDL2.capture.stream = stream; }; var no_microphone = function(error) { }; SDL2.capture.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { SDL2.capture.currentCaptureBuffer = SDL2.capture.silenceBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.silenceTimer = setTimeout(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); if ((navigator.mediaDevices !== undefined) && (navigator.mediaDevices.getUserMedia !== undefined)) { navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(have_microphone).catch(no_microphone); } else if (navigator.webkitGetUserMedia !== undefined) { navigator.webkitGetUserMedia({ audio: true, video: false }, have_microphone, no_microphone); } },  \n 654094: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; SDL2.audio.scriptProcessorNode = SDL2.audioContext['createScriptProcessor']($1, 0, $0); SDL2.audio.scriptProcessorNode['onaudioprocess'] = function (e) { if ((SDL2 === undefined) || (SDL2.audio === undefined)) { return; } SDL2.audio.currentOutputBuffer = e['outputBuffer']; dynCall('vi', $2, [$3]); }; SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']); },  \n 654504: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.capture.currentCaptureBuffer.numberOfChannels; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.capture.currentCaptureBuffer.getChannelData(c); if (channelData.length != $1) { throw 'Web Audio capture buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } if (numChannels == 1) { for (var j = 0; j < $1; ++j) { setValue($0 + (j * 4), channelData[j], 'float'); } } else { for (var j = 0; j < $1; ++j) { setValue($0 + (((j * numChannels) + c) * 4), channelData[j], 'float'); } } } },  \n 655109: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.audio.currentOutputBuffer['numberOfChannels']; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.audio.currentOutputBuffer['getChannelData'](c); if (channelData.length != $1) { throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } for (var j = 0; j < $1; ++j) { channelData[j] = HEAPF32[$0 + ((j*numChannels + c) << 2) >> 2]; } } },  \n 655589: ($0) => { var SDL2 = Module['SDL2']; if ($0) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); } if (SDL2.capture.stream !== undefined) { var tracks = SDL2.capture.stream.getAudioTracks(); for (var i = 0; i < tracks.length; i++) { SDL2.capture.stream.removeTrack(tracks[i]); } SDL2.capture.stream = undefined; } if (SDL2.capture.scriptProcessorNode !== undefined) { SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) {}; SDL2.capture.scriptProcessorNode.disconnect(); SDL2.capture.scriptProcessorNode = undefined; } if (SDL2.capture.mediaStreamNode !== undefined) { SDL2.capture.mediaStreamNode.disconnect(); SDL2.capture.mediaStreamNode = undefined; } if (SDL2.capture.silenceBuffer !== undefined) { SDL2.capture.silenceBuffer = undefined } SDL2.capture = undefined; } else { if (SDL2.audio.scriptProcessorNode != undefined) { SDL2.audio.scriptProcessorNode.disconnect(); SDL2.audio.scriptProcessorNode = undefined; } SDL2.audio = undefined; } if ((SDL2.audioContext !== undefined) && (SDL2.audio === undefined) && (SDL2.capture === undefined)) { SDL2.audioContext.close(); SDL2.audioContext = undefined; } },  \n 656761: ($0) => { window.open(UTF8ToString($0), \"_blank\"); },  \n 656806: ($0, $1, $2) => { var w = $0; var h = $1; var pixels = $2; if (!Module['SDL2']) Module['SDL2'] = {}; var SDL2 = Module['SDL2']; if (SDL2.ctxCanvas !== Module['canvas']) { SDL2.ctx = Module['createContext'](Module['canvas'], false, true); SDL2.ctxCanvas = Module['canvas']; } if (SDL2.w !== w || SDL2.h !== h || SDL2.imageCtx !== SDL2.ctx) { SDL2.image = SDL2.ctx.createImageData(w, h); SDL2.w = w; SDL2.h = h; SDL2.imageCtx = SDL2.ctx; } var data = SDL2.image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = 0xff; src++; dst += 4; } } else { if (SDL2.data32Data !== data) { SDL2.data32 = new Int32Array(data.buffer); SDL2.data8 = new Uint8Array(data.buffer); SDL2.data32Data = data; } var data32 = SDL2.data32; num = data32.length; data32.set(HEAP32.subarray(src, src + num)); var data8 = SDL2.data8; var i = 3; var j = i + 4*num; if (num % 8 == 0) { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; } } else { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; } } } SDL2.ctx.putImageData(SDL2.image, 0, 0); },  \n 658275: ($0, $1, $2, $3, $4) => { var w = $0; var h = $1; var hot_x = $2; var hot_y = $3; var pixels = $4; var canvas = document.createElement(\"canvas\"); canvas.width = w; canvas.height = h; var ctx = canvas.getContext(\"2d\"); var image = ctx.createImageData(w, h); var data = image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = (val >> 24) & 0xff; src++; dst += 4; } } else { var data32 = new Int32Array(data.buffer); num = data32.length; data32.set(HEAP32.subarray(src, src + num)); } ctx.putImageData(image, 0, 0); var url = hot_x === 0 && hot_y === 0 ? \"url(\" + canvas.toDataURL() + \"), auto\" : \"url(\" + canvas.toDataURL() + \") \" + hot_x + \" \" + hot_y + \", auto\"; var urlBuf = _malloc(url.length + 1); stringToUTF8(url, urlBuf, url.length + 1); return urlBuf; },  \n 659264: ($0) => { if (Module['canvas']) { Module['canvas'].style['cursor'] = UTF8ToString($0); } },  \n 659347: () => { if (Module['canvas']) { Module['canvas'].style['cursor'] = 'none'; } },  \n 659416: () => { return window.innerWidth; },  \n 659446: () => { return window.innerHeight; },  \n 659477: ($0, $1) => { alert(UTF8ToString($0) + \"\\n\\n\" + UTF8ToString($1)); }\n};\n\n\n// end include: preamble.js\n\n  /** @constructor */\n  function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = `Program terminated with exit(${status})`;\n      this.status = status;\n    }\n\n  var listenOnce = (object, event, func) => {\n      object.addEventListener(event, func, { 'once': true });\n    };\n  /** @param {Object=} elements */\n  var autoResumeAudioContext = (ctx, elements) => {\n      if (!elements) {\n        elements = [document, document.getElementById('canvas')];\n      }\n      ['keydown', 'mousedown', 'touchstart'].forEach((event) => {\n        elements.forEach((element) => {\n          if (element) {\n            listenOnce(element, event, () => {\n              if (ctx.state === 'suspended') ctx.resume();\n            });\n          }\n        });\n      });\n    };\n\n  var callRuntimeCallbacks = (callbacks) => {\n      while (callbacks.length > 0) {\n        // Pass the module as the first argument.\n        callbacks.shift()(Module);\n      }\n    };\n\n  var dynCallLegacy = (sig, ptr, args) => {\n      var f = Module['dynCall_' + sig];\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n    };\n  \n  var wasmTableMirror = [];\n  var getWasmTableEntry = (funcPtr) => {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      return func;\n    };\n  /** @param {Object=} args */\n  var dynCall = (sig, ptr, args) => {\n      var rtn = dynCallLegacy(sig, ptr, args);\n      return rtn;\n    };\n\n  \n    /**\n     * @param {number} ptr\n     * @param {string} type\n     */\n  function getValue(ptr, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': abort('to do getValue(i64) use WASM_BIGINT');\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      case '*': return HEAPU32[((ptr)>>2)];\n      default: abort(`invalid type for getValue: ${type}`);\n    }\n  }\n\n  \n    /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */\n  function setValue(ptr, value, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\n      case 'i64': abort('to do setValue(i64) use WASM_BIGINT');\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\n      default: abort(`invalid type for setValue: ${type}`);\n    }\n  }\n\n  /** @constructor */\n  function ExceptionInfo(excPtr) {\n      this.excPtr = excPtr;\n      this.ptr = excPtr - 24;\n  \n      this.set_type = function(type) {\n        HEAPU32[(((this.ptr)+(4))>>2)] = type;\n      };\n  \n      this.get_type = function() {\n        return HEAPU32[(((this.ptr)+(4))>>2)];\n      };\n  \n      this.set_destructor = function(destructor) {\n        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;\n      };\n  \n      this.get_destructor = function() {\n        return HEAPU32[(((this.ptr)+(8))>>2)];\n      };\n  \n      this.set_caught = function(caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[(((this.ptr)+(12))>>0)] = caught;\n      };\n  \n      this.get_caught = function() {\n        return HEAP8[(((this.ptr)+(12))>>0)] != 0;\n      };\n  \n      this.set_rethrown = function(rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[(((this.ptr)+(13))>>0)] = rethrown;\n      };\n  \n      this.get_rethrown = function() {\n        return HEAP8[(((this.ptr)+(13))>>0)] != 0;\n      };\n  \n      // Initialize native structure fields. Should be called once after allocated.\n      this.init = function(type, destructor) {\n        this.set_adjusted_ptr(0);\n        this.set_type(type);\n        this.set_destructor(destructor);\n      }\n  \n      this.set_adjusted_ptr = function(adjustedPtr) {\n        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;\n      };\n  \n      this.get_adjusted_ptr = function() {\n        return HEAPU32[(((this.ptr)+(16))>>2)];\n      };\n  \n      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\n      // when the pointer is casted to some of the exception object base classes (e.g. when virtual\n      // inheritance is used). When a pointer is thrown this method should return the thrown pointer\n      // itself.\n      this.get_exception_ptr = function() {\n        // Work around a fastcomp bug, this code is still included for some reason in a build without\n        // exceptions support.\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\n        if (isPointer) {\n          return HEAPU32[((this.excPtr)>>2)];\n        }\n        var adjusted = this.get_adjusted_ptr();\n        if (adjusted !== 0) return adjusted;\n        return this.excPtr;\n      };\n    }\n  \n  var exceptionLast = 0;\n  \n  var uncaughtExceptionCount = 0;\n  var ___cxa_throw = (ptr, type, destructor) => {\n      var info = new ExceptionInfo(ptr);\n      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\n      info.init(type, destructor);\n      exceptionLast = ptr;\n      uncaughtExceptionCount++;\n      throw exceptionLast;\n    };\n\n  var PATH = {\n  isAbs:(path) => path.charAt(0) === '/',\n  splitPath:(filename) => {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n  normalizeArray:(parts, allowAboveRoot) => {\n        // if the path tries to go above the root, `up` ends up > 0\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        // if the path is allowed to go above the root, restore leading ..s\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n  normalize:(path) => {\n        var isAbsolute = PATH.isAbs(path),\n            trailingSlash = path.substr(-1) === '/';\n        // Normalize the path\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n  dirname:(path) => {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n        if (!root && !dir) {\n          // No dirname whatsoever\n          return '.';\n        }\n        if (dir) {\n          // It has a dirname, strip trailing slash\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n  basename:(path) => {\n        // EMSCRIPTEN return '/'' for '/', not an empty string\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, \"\");\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash+1);\n      },\n  join:function() {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join('/'));\n      },\n  join2:(l, r) => {\n        return PATH.normalize(l + '/' + r);\n      },\n  };\n  \n  var initRandomFill = () => {\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\n        // for modern web browsers\n        return (view) => crypto.getRandomValues(view);\n      } else\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\n      abort(\"initRandomDevice\");\n    };\n  var randomFill = (view) => {\n      // Lazily init on the first invocation.\n      return (randomFill = initRandomFill())(view);\n    };\n  \n  \n  \n  var PATH_FS = {\n  resolve:function() {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\n          // Skip empty and invalid entries\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return ''; // an invalid portion invalidates the whole thing\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n      },\n  relative:(from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n  };\n  \n  \n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n  \n    /**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */\n  var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.  Also, use the length info to avoid running tiny\n      // strings through TextDecoder, since .subarray() allocates garbage.\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n      // so that undefined means Infinity)\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  \n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n      // If building with TextDecoder, we have already computed the string length\n      // above, so test loop end condition against that\n      while (idx < endPtr) {\n        // For UTF8 byte structure, see:\n        // http://en.wikipedia.org/wiki/UTF-8#Description\n        // https://www.ietf.org/rfc/rfc2279.txt\n        // https://tools.ietf.org/html/rfc3629\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xF0) == 0xE0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n        }\n  \n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        }\n      }\n      return str;\n    };\n  \n  var FS_stdin_getChar_buffer = [];\n  \n  var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var c = str.charCodeAt(i); // possibly a lead surrogate\n        if (c <= 0x7F) {\n          len++;\n        } else if (c <= 0x7FF) {\n          len += 2;\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\n          len += 4; ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n  \n  var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n      // undefined and false each don't write out any bytes.\n      if (!(maxBytesToWrite > 0))\n        return 0;\n  \n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n        // and https://www.ietf.org/rfc/rfc2279.txt\n        // and https://tools.ietf.org/html/rfc3629\n        var u = str.charCodeAt(i); // possibly a lead surrogate\n        if (u >= 0xD800 && u <= 0xDFFF) {\n          var u1 = str.charCodeAt(++i);\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n        }\n        if (u <= 0x7F) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xC0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xFFFF) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xE0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xF0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n      // Null-terminate the pointer to the buffer.\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n  /** @type {function(string, boolean=, number=)} */\n  function intArrayFromString(stringy, dontAddNull, length) {\n    var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n    var u8array = new Array(len);\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n    if (dontAddNull) u8array.length = numBytesWritten;\n    return u8array;\n  }\n  var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n        if (typeof window != 'undefined' &&\n          typeof window.prompt == 'function') {\n          // Browser.\n          result = window.prompt('Input: ');  // returns null on cancel\n          if (result !== null) {\n            result += '\\n';\n          }\n        } else if (typeof readline == 'function') {\n          // Command line.\n          result = readline();\n          if (result !== null) {\n            result += '\\n';\n          }\n        }\n        if (!result) {\n          return null;\n        }\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n      return FS_stdin_getChar_buffer.shift();\n    };\n  var TTY = {\n  ttys:[],\n  init() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\n        //   // with text files until FS.init can be refactored.\n        //   process.stdin.setEncoding('utf8');\n        // }\n      },\n  shutdown() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\n        //   process.stdin.pause();\n        // }\n      },\n  register(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n  stream_ops:{\n  open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n  close(stream) {\n          // flush any pending line data\n          stream.tty.ops.fsync(stream.tty);\n        },\n  fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n  read(stream, buffer, offset, length, pos /* ignored */) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset+i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n  write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n  },\n  default_tty_ops:{\n  get_char(tty) {\n          return FS_stdin_getChar();\n        },\n  put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\n          }\n        },\n  fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n  ioctl_tcgets(tty) {\n          // typical setting\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [\n              0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a, 0x00,\n              0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            ]\n          };\n        },\n  ioctl_tcsets(tty, optional_actions, data) {\n          // currently just ignore\n          return 0;\n        },\n  ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        },\n  },\n  default_tty1_ops:{\n  put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n  fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n  },\n  };\n  \n  \n  var zeroMemory = (address, size) => {\n      HEAPU8.fill(0, address, address + size);\n      return address;\n    };\n  \n  var alignMemory = (size, alignment) => {\n      return Math.ceil(size / alignment) * alignment;\n    };\n  var mmapAlloc = (size) => {\n      abort();\n    };\n  var MEMFS = {\n  ops_table:null,\n  mount(mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\n      },\n  createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          // no supported\n          throw new FS.ErrnoError(63);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek\n              }\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync\n              }\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink\n              },\n              stream: {}\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr\n              },\n              stream: FS.chrdev_stream_ops\n            }\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\n          node.contents = null; \n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n        // add the new node to the parent\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n  getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\n        return new Uint8Array(node.contents);\n      },\n  expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\n        // avoid overshooting the allocation cap by a very large margin.\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\n      },\n  resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null; // Fully decommit when requesting a resize to zero.\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\n          }\n          node.usedBytes = newSize;\n        }\n      },\n  node_ops:{\n  getattr(node) {\n          var attr = {};\n          // device numbers reuse inode numbers.\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\n          //       but this is not required by the standard.\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n  setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n  lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n  mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n  rename(old_node, new_dir, new_name) {\n          // if we're overwriting a directory at new_name, make sure it's empty.\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          // do the internal rewiring\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now()\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n  unlink(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n  rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n  readdir(node) {\n          var entries = ['.', '..'];\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },\n  symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n  readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n  },\n  stream_ops:{\n  read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n  write(stream, buffer, offset, length, position, canOwn) {\n          // If the buffer is located in main memory (HEAP), and if\n          // memory can grow, we can't hold on to references of the\n          // memory buffer, as they may get invalidated. That means we\n          // need to do copy its contents.\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n  \n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n  \n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n  \n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\n          MEMFS.expandFileStorage(node, position+length);\n          if (node.contents.subarray && buffer.subarray) {\n            // Use typed array write which is available.\n            node.contents.set(buffer.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n  llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n  allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },\n  mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          // Only make a new copy when MAP_PRIVATE is specified.\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            // We can't emulate MAP_SHARED when the file is not backed by the\n            // buffer we're mapping to (e.g. the HEAP buffer).\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            // Try to avoid unnecessary slices.\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return { ptr, allocated };\n        },\n  msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          // should we check if bytesWritten and length are the same?\n          return 0;\n        },\n  },\n  };\n  \n  /** @param {boolean=} noRunDep */\n  var asyncLoad = (url, onload, onerror, noRunDep) => {\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : '';\n      readAsync(url, (arrayBuffer) => {\n        assert(arrayBuffer, `Loading data file \"${url}\" failed (no arrayBuffer).`);\n        onload(new Uint8Array(arrayBuffer));\n        if (dep) removeRunDependency(dep);\n      }, (event) => {\n        if (onerror) {\n          onerror();\n        } else {\n          throw `Loading data file \"${url}\" failed.`;\n        }\n      });\n      if (dep) addRunDependency(dep);\n    };\n  \n  \n  var preloadPlugins = Module['preloadPlugins'] || [];\n  var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      // Ensure plugins are ready.\n      if (typeof Browser != 'undefined') Browser.init();\n  \n      var handled = false;\n      preloadPlugins.forEach((plugin) => {\n        if (handled) return;\n        if (plugin['canHandle'](fullname)) {\n          plugin['handle'](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n  var FS_createPreloadedFile = (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\n      // TODO we should allow people to just pass in a complete filename instead\n      // of parent and name being that we just join them anyways\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`); // might have several active requests for the same fullname\n      function processData(byteArray) {\n        function finish(byteArray) {\n          if (preFinish) preFinish();\n          if (!dontCreateFile) {\n            FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n          }\n          if (onload) onload();\n          removeRunDependency(dep);\n        }\n        if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n          if (onerror) onerror();\n          removeRunDependency(dep);\n        })) {\n          return;\n        }\n        finish(byteArray);\n      }\n      addRunDependency(dep);\n      if (typeof url == 'string') {\n        asyncLoad(url, (byteArray) => processData(byteArray), onerror);\n      } else {\n        processData(url);\n      }\n    };\n  \n  var FS_modeStringToFlags = (str) => {\n      var flagModes = {\n        'r': 0,\n        'r+': 2,\n        'w': 512 | 64 | 1,\n        'w+': 512 | 64 | 2,\n        'a': 1024 | 64 | 1,\n        'a+': 1024 | 64 | 2,\n      };\n      var flags = flagModes[str];\n      if (typeof flags == 'undefined') {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n      return flags;\n    };\n  \n  var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n  \n  \n  \n  \n  \n  \n  var IDBFS = {\n  dbs:{\n  },\n  indexedDB:() => {\n        if (typeof indexedDB != 'undefined') return indexedDB;\n        var ret = null;\n        if (typeof window == 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        assert(ret, 'IDBFS used, but indexedDB not supported');\n        return ret;\n      },\n  DB_VERSION:21,\n  DB_STORE_NAME:\"FILE_DATA\",\n  mount:function(mount) {\n        // reuse all of the core MEMFS functionality\n        return MEMFS.mount.apply(null, arguments);\n      },\n  syncfs:(mount, populate, callback) => {\n        IDBFS.getLocalSet(mount, (err, local) => {\n          if (err) return callback(err);\n  \n          IDBFS.getRemoteSet(mount, (err, remote) => {\n            if (err) return callback(err);\n  \n            var src = populate ? remote : local;\n            var dst = populate ? local : remote;\n  \n            IDBFS.reconcile(src, dst, callback);\n          });\n        });\n      },\n  quit:() => {\n        Object.values(IDBFS.dbs).forEach((value) => value.close());\n        IDBFS.dbs = {};\n      },\n  getDB:(name, callback) => {\n        // check the cache first\n        var db = IDBFS.dbs[name];\n        if (db) {\n          return callback(null, db);\n        }\n  \n        var req;\n        try {\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\n        } catch (e) {\n          return callback(e);\n        }\n        if (!req) {\n          return callback(\"Unable to connect to IndexedDB\");\n        }\n        req.onupgradeneeded = (e) => {\n          var db = /** @type {IDBDatabase} */ (e.target.result);\n          var transaction = e.target.transaction;\n  \n          var fileStore;\n  \n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\n          } else {\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\n          }\n  \n          if (!fileStore.indexNames.contains('timestamp')) {\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\n          }\n        };\n        req.onsuccess = () => {\n          db = /** @type {IDBDatabase} */ (req.result);\n  \n          // add to the cache\n          IDBFS.dbs[name] = db;\n          callback(null, db);\n        };\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  getLocalSet:(mount, callback) => {\n        var entries = {};\n  \n        function isRealDir(p) {\n          return p !== '.' && p !== '..';\n        };\n        function toAbsolute(root) {\n          return (p) => {\n            return PATH.join2(root, p);\n          }\n        };\n  \n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\n  \n        while (check.length) {\n          var path = check.pop();\n          var stat;\n  \n          try {\n            stat = FS.stat(path);\n          } catch (e) {\n            return callback(e);\n          }\n  \n          if (FS.isDir(stat.mode)) {\n            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\n          }\n  \n          entries[path] = { 'timestamp': stat.mtime };\n        }\n  \n        return callback(null, { type: 'local', entries: entries });\n      },\n  getRemoteSet:(mount, callback) => {\n        var entries = {};\n  \n        IDBFS.getDB(mount.mountpoint, (err, db) => {\n          if (err) return callback(err);\n  \n          try {\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\n            transaction.onerror = (e) => {\n              callback(e.target.error);\n              e.preventDefault();\n            };\n  \n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\n            var index = store.index('timestamp');\n  \n            index.openKeyCursor().onsuccess = (event) => {\n              var cursor = event.target.result;\n  \n              if (!cursor) {\n                return callback(null, { type: 'remote', db, entries });\n              }\n  \n              entries[cursor.primaryKey] = { 'timestamp': cursor.key };\n  \n              cursor.continue();\n            };\n          } catch (e) {\n            return callback(e);\n          }\n        });\n      },\n  loadLocalEntry:(path, callback) => {\n        var stat, node;\n  \n        try {\n          var lookup = FS.lookupPath(path);\n          node = lookup.node;\n          stat = FS.stat(path);\n        } catch (e) {\n          return callback(e);\n        }\n  \n        if (FS.isDir(stat.mode)) {\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode });\n        } else if (FS.isFile(stat.mode)) {\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode, 'contents': node.contents });\n        } else {\n          return callback(new Error('node type not supported'));\n        }\n      },\n  storeLocalEntry:(path, entry, callback) => {\n        try {\n          if (FS.isDir(entry['mode'])) {\n            FS.mkdirTree(path, entry['mode']);\n          } else if (FS.isFile(entry['mode'])) {\n            FS.writeFile(path, entry['contents'], { canOwn: true });\n          } else {\n            return callback(new Error('node type not supported'));\n          }\n  \n          FS.chmod(path, entry['mode']);\n          FS.utime(path, entry['timestamp'], entry['timestamp']);\n        } catch (e) {\n          return callback(e);\n        }\n  \n        callback(null);\n      },\n  removeLocalEntry:(path, callback) => {\n        try {\n          var stat = FS.stat(path);\n  \n          if (FS.isDir(stat.mode)) {\n            FS.rmdir(path);\n          } else if (FS.isFile(stat.mode)) {\n            FS.unlink(path);\n          }\n        } catch (e) {\n          return callback(e);\n        }\n  \n        callback(null);\n      },\n  loadRemoteEntry:(store, path, callback) => {\n        var req = store.get(path);\n        req.onsuccess = (event) => { callback(null, event.target.result); };\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  storeRemoteEntry:(store, path, entry, callback) => {\n        try {\n          var req = store.put(entry, path);\n        } catch (e) {\n          callback(e);\n          return;\n        }\n        req.onsuccess = () => { callback(null); };\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  removeRemoteEntry:(store, path, callback) => {\n        var req = store.delete(path);\n        req.onsuccess = () => { callback(null); };\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  reconcile:(src, dst, callback) => {\n        var total = 0;\n  \n        var create = [];\n        Object.keys(src.entries).forEach(function (key) {\n          var e = src.entries[key];\n          var e2 = dst.entries[key];\n          if (!e2 || e['timestamp'].getTime() != e2['timestamp'].getTime()) {\n            create.push(key);\n            total++;\n          }\n        });\n  \n        var remove = [];\n        Object.keys(dst.entries).forEach(function (key) {\n          if (!src.entries[key]) {\n            remove.push(key);\n            total++;\n          }\n        });\n  \n        if (!total) {\n          return callback(null);\n        }\n  \n        var errored = false;\n        var db = src.type === 'remote' ? src.db : dst.db;\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\n  \n        function done(err) {\n          if (err && !errored) {\n            errored = true;\n            return callback(err);\n          }\n        };\n  \n        transaction.onerror = (e) => {\n          done(this.error);\n          e.preventDefault();\n        };\n  \n        transaction.oncomplete = (e) => {\n          if (!errored) {\n            callback(null);\n          }\n        };\n  \n        // sort paths in ascending order so directory entries are created\n        // before the files inside them\n        create.sort().forEach((path) => {\n          if (dst.type === 'local') {\n            IDBFS.loadRemoteEntry(store, path, (err, entry) => {\n              if (err) return done(err);\n              IDBFS.storeLocalEntry(path, entry, done);\n            });\n          } else {\n            IDBFS.loadLocalEntry(path, (err, entry) => {\n              if (err) return done(err);\n              IDBFS.storeRemoteEntry(store, path, entry, done);\n            });\n          }\n        });\n  \n        // sort paths in descending order so files are deleted before their\n        // parent directories\n        remove.sort().reverse().forEach((path) => {\n          if (dst.type === 'local') {\n            IDBFS.removeLocalEntry(path, done);\n          } else {\n            IDBFS.removeRemoteEntry(store, path, done);\n          }\n        });\n      },\n  };\n  \n  \n  var LZ4 = {\n  DIR_MODE:16895,\n  FILE_MODE:33279,\n  CHUNK_SIZE:-1,\n  codec:null,\n  init() {\n        if (LZ4.codec) return;\n        LZ4.codec = (function() {\n          /*\n  MiniLZ4: Minimal LZ4 block decoding and encoding.\n  \n  based off of node-lz4, https://github.com/pierrec/node-lz4\n  \n  ====\n  Copyright (c) 2012 Pierre Curto\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n  ====\n  \n  changes have the same license\n  */\n  \n  var MiniLZ4 = (function() {\n  \n  var exports = {};\n  \n  /**\n   * Decode a block. Assumptions: input contains all sequences of a \n   * chunk, output is large enough to receive the decoded data.\n   * If the output buffer is too small, an error will be thrown.\n   * If the returned value is negative, an error occured at the returned offset.\n   *\n   * @param {ArrayBufferView} input input data\n   * @param {ArrayBufferView} output output data\n   * @param {number=} sIdx\n   * @param {number=} eIdx\n   * @return {number} number of decoded bytes\n   * @private\n   */\n  exports.uncompress = function (input, output, sIdx, eIdx) {\n  \tsIdx = sIdx || 0\n  \teIdx = eIdx || (input.length - sIdx)\n  \t// Process each sequence in the incoming data\n  \tfor (var i = sIdx, n = eIdx, j = 0; i < n;) {\n  \t\tvar token = input[i++]\n  \n  \t\t// Literals\n  \t\tvar literals_length = (token >> 4)\n  \t\tif (literals_length > 0) {\n  \t\t\t// length of literals\n  \t\t\tvar l = literals_length + 240\n  \t\t\twhile (l === 255) {\n  \t\t\t\tl = input[i++]\n  \t\t\t\tliterals_length += l\n  \t\t\t}\n  \n  \t\t\t// Copy the literals\n  \t\t\tvar end = i + literals_length\n  \t\t\twhile (i < end) output[j++] = input[i++]\n  \n  \t\t\t// End of buffer?\n  \t\t\tif (i === n) return j\n  \t\t}\n  \n  \t\t// Match copy\n  \t\t// 2 bytes offset (little endian)\n  \t\tvar offset = input[i++] | (input[i++] << 8)\n  \n  \t\t// XXX 0 is an invalid offset value\n  \t\tif (offset === 0) return j\n  \t\tif (offset > j) return -(i-2)\n  \n  \t\t// length of match copy\n  \t\tvar match_length = (token & 0xf)\n  \t\tvar l = match_length + 240\n  \t\twhile (l === 255) {\n  \t\t\tl = input[i++]\n  \t\t\tmatch_length += l\n  \t\t}\n  \n  \t\t// Copy the match\n  \t\tvar pos = j - offset // position of the match copy in the current output\n  \t\tvar end = j + match_length + 4 // minmatch = 4\n  \t\twhile (j < end) output[j++] = output[pos++]\n  \t}\n  \n  \treturn j\n  }\n  \n  var\n  \tmaxInputSize\t= 0x7E000000\n  ,\tminMatch\t\t= 4\n  // uint32() optimization\n  ,\thashLog\t\t\t= 16\n  ,\thashShift\t\t= (minMatch * 8) - hashLog\n  ,\thashSize\t\t= 1 << hashLog\n  \n  ,\tcopyLength\t\t= 8\n  ,\tlastLiterals\t= 5\n  ,\tmfLimit\t\t\t= copyLength + minMatch\n  ,\tskipStrength\t= 6\n  \n  ,\tmlBits  \t\t= 4\n  ,\tmlMask  \t\t= (1 << mlBits) - 1\n  ,\trunBits \t\t= 8 - mlBits\n  ,\trunMask \t\t= (1 << runBits) - 1\n  \n  ,\thasher \t\t\t= /* XXX uint32( */ 2654435761 /* ) */\n  \n  assert(hashShift === 16);\n  var hashTable = new Int16Array(1<<16);\n  var empty = new Int16Array(hashTable.length);\n  \n  // CompressBound returns the maximum length of a lz4 block, given it's uncompressed length\n  exports.compressBound = function (isize) {\n  \treturn isize > maxInputSize\n  \t\t? 0\n  \t\t: (isize + (isize/255) + 16) | 0\n  }\n  \n  /** @param {number=} sIdx\n  \t@param {number=} eIdx */\n  exports.compress = function (src, dst, sIdx, eIdx) {\n  \thashTable.set(empty);\n  \treturn compressBlock(src, dst, 0, sIdx || 0, eIdx || dst.length)\n  }\n  \n  function compressBlock (src, dst, pos, sIdx, eIdx) {\n  \t// XXX var Hash = uint32() // Reusable unsigned 32 bits integer\n  \tvar dpos = sIdx\n  \tvar dlen = eIdx - sIdx\n  \tvar anchor = 0\n  \n  \tif (src.length >= maxInputSize) throw new Error(\"input too large\")\n  \n  \t// Minimum of input bytes for compression (LZ4 specs)\n  \tif (src.length > mfLimit) {\n  \t\tvar n = exports.compressBound(src.length)\n  \t\tif ( dlen < n ) throw Error(\"output too small: \" + dlen + \" < \" + n)\n  \n  \t\tvar \n  \t\t\tstep  = 1\n  \t\t,\tfindMatchAttempts = (1 << skipStrength) + 3\n  \t\t// Keep last few bytes incompressible (LZ4 specs):\n  \t\t// last 5 bytes must be literals\n  \t\t,\tsrcLength = src.length - mfLimit\n  \n  \t\twhile (pos + minMatch < srcLength) {\n  \t\t\t// Find a match\n  \t\t\t// min match of 4 bytes aka sequence\n  \t\t\tvar sequenceLowBits = src[pos+1]<<8 | src[pos]\n  \t\t\tvar sequenceHighBits = src[pos+3]<<8 | src[pos+2]\n  \t\t\t// compute hash for the current sequence\n  \t\t\tvar hash = Math.imul(sequenceLowBits | (sequenceHighBits << 16), hasher) >>> hashShift;\n  \t\t\t/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)\n  \t\t\t\t\t\t\t.multiply(hasher)\n  \t\t\t\t\t\t\t.shiftr(hashShift)\n  \t\t\t\t\t\t\t.toNumber() */\n  \t\t\t// get the position of the sequence matching the hash\n  \t\t\t// NB. since 2 different sequences may have the same hash\n  \t\t\t// it is double-checked below\n  \t\t\t// do -1 to distinguish between initialized and uninitialized values\n  \t\t\tvar ref = hashTable[hash] - 1\n  \t\t\t// save position of current sequence in hash table\n  \t\t\thashTable[hash] = pos + 1\n  \n  \t\t\t// first reference or within 64k limit or current sequence !== hashed one: no match\n  \t\t\tif ( ref < 0 ||\n  \t\t\t\t((pos - ref) >>> 16) > 0 ||\n  \t\t\t\t(\n  \t\t\t\t\t((src[ref+3]<<8 | src[ref+2]) != sequenceHighBits) ||\n  \t\t\t\t\t((src[ref+1]<<8 | src[ref]) != sequenceLowBits )\n  \t\t\t\t)\n  \t\t\t) {\n  \t\t\t\t// increase step if nothing found within limit\n  \t\t\t\tstep = findMatchAttempts++ >> skipStrength\n  \t\t\t\tpos += step\n  \t\t\t\tcontinue\n  \t\t\t}\n  \n  \t\t\tfindMatchAttempts = (1 << skipStrength) + 3\n  \n  \t\t\t// got a match\n  \t\t\tvar literals_length = pos - anchor\n  \t\t\tvar offset = pos - ref\n  \n  \t\t\t// minMatch already verified\n  \t\t\tpos += minMatch\n  \t\t\tref += minMatch\n  \n  \t\t\t// move to the end of the match (>=minMatch)\n  \t\t\tvar match_length = pos\n  \t\t\twhile (pos < srcLength && src[pos] == src[ref]) {\n  \t\t\t\tpos++\n  \t\t\t\tref++\n  \t\t\t}\n  \n  \t\t\t// match length\n  \t\t\tmatch_length = pos - match_length\n  \n  \t\t\t// token\n  \t\t\tvar token = match_length < mlMask ? match_length : mlMask\n  \n  \t\t\t// encode literals length\n  \t\t\tif (literals_length >= runMask) {\n  \t\t\t\t// add match length to the token\n  \t\t\t\tdst[dpos++] = (runMask << mlBits) + token\n  \t\t\t\tfor (var len = literals_length - runMask; len > 254; len -= 255) {\n  \t\t\t\t\tdst[dpos++] = 255\n  \t\t\t\t}\n  \t\t\t\tdst[dpos++] = len\n  \t\t\t} else {\n  \t\t\t\t// add match length to the token\n  \t\t\t\tdst[dpos++] = (literals_length << mlBits) + token\n  \t\t\t}\n  \n  \t\t\t// write literals\n  \t\t\tfor (var i = 0; i < literals_length; i++) {\n  \t\t\t\tdst[dpos++] = src[anchor+i]\n  \t\t\t}\n  \n  \t\t\t// encode offset\n  \t\t\tdst[dpos++] = offset\n  \t\t\tdst[dpos++] = (offset >> 8)\n  \n  \t\t\t// encode match length\n  \t\t\tif (match_length >= mlMask) {\n  \t\t\t\tmatch_length -= mlMask\n  \t\t\t\twhile (match_length >= 255) {\n  \t\t\t\t\tmatch_length -= 255\n  \t\t\t\t\tdst[dpos++] = 255\n  \t\t\t\t}\n  \n  \t\t\t\tdst[dpos++] = match_length\n  \t\t\t}\n  \n  \t\t\tanchor = pos\n  \t\t}\n  \t}\n  \n  \t// cannot compress input\n  \tif (anchor == 0) return 0\n  \n  \t// Write last literals\n  \t// encode literals length\n  \tliterals_length = src.length - anchor\n  \tif (literals_length >= runMask) {\n  \t\t// add match length to the token\n  \t\tdst[dpos++] = (runMask << mlBits)\n  \t\tfor (var ln = literals_length - runMask; ln > 254; ln -= 255) {\n  \t\t\tdst[dpos++] = 255\n  \t\t}\n  \t\tdst[dpos++] = ln\n  \t} else {\n  \t\t// add match length to the token\n  \t\tdst[dpos++] = (literals_length << mlBits)\n  \t}\n  \n  \t// write literals\n  \tpos = anchor\n  \twhile (pos < src.length) {\n  \t\tdst[dpos++] = src[pos++]\n  \t}\n  \n  \treturn dpos\n  }\n  \n  exports.CHUNK_SIZE = 2048; // musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea\n  \n  exports.compressPackage = function(data, verify) {\n    if (verify) {\n      var temp = new Uint8Array(exports.CHUNK_SIZE);\n    }\n    // compress the data in chunks\n    assert(data instanceof ArrayBuffer);\n    data = new Uint8Array(data);\n    console.log('compressing package of size ' + data.length);\n    var compressedChunks = [];\n    var successes = [];\n    var offset = 0;\n    var total = 0;\n    while (offset < data.length) {\n      var chunk = data.subarray(offset, offset + exports.CHUNK_SIZE);\n      //console.log('compress a chunk ' + [offset, total, data.length]);\n      offset += exports.CHUNK_SIZE;\n      var bound = exports.compressBound(chunk.length);\n      var compressed = new Uint8Array(bound);\n      var compressedSize = exports.compress(chunk, compressed);\n      if (compressedSize > 0) {\n        assert(compressedSize <= bound);\n        compressed = compressed.subarray(0, compressedSize);\n        compressedChunks.push(compressed);\n        total += compressedSize;\n        successes.push(1);\n        if (verify) {\n          var back = exports.uncompress(compressed, temp);\n          assert(back === chunk.length, [back, chunk.length]);\n          for (var i = 0; i < chunk.length; i++) {\n            assert(chunk[i] === temp[i]);\n          }\n        }\n      } else {\n        assert(compressedSize === 0);\n        // failure to compress :(\n        compressedChunks.push(chunk);\n        total += chunk.length; // last chunk may not be the full exports.CHUNK_SIZE size\n        successes.push(0);\n      }\n    }\n    data = null; // XXX null out pack['data'] too?\n    var compressedData = {\n      'data': new Uint8Array(total + exports.CHUNK_SIZE*2), // store all the compressed data, plus room for two cached decompressed chunk, in one fast array\n      'cachedOffset': total,\n      'cachedIndexes': [-1, -1], // cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing\n      'cachedChunks': [null, null],\n      'offsets': [], // chunk# => start in compressed data\n      'sizes': [],\n      'successes': successes, // 1 if chunk is compressed\n    };\n    offset = 0;\n    for (var i = 0; i < compressedChunks.length; i++) {\n      compressedData['data'].set(compressedChunks[i], offset);\n      compressedData['offsets'][i] = offset;\n      compressedData['sizes'][i] = compressedChunks[i].length\n      offset += compressedChunks[i].length;\n    }\n    console.log('compressed package into ' + [compressedData['data'].length]);\n    assert(offset === total);\n    return compressedData;\n  };\n  \n  assert(exports.CHUNK_SIZE < (1 << 15)); // we use 16-bit ints as the type of the hash table, chunk size must be smaller\n  \n  return exports;\n  \n  })();\n  \n  ;\n          return MiniLZ4;\n        })();\n        LZ4.CHUNK_SIZE = LZ4.codec.CHUNK_SIZE;\n      },\n  loadPackage(pack, preloadPlugin) {\n        LZ4.init();\n        var compressedData = pack['compressedData'];\n        if (!compressedData) compressedData = LZ4.codec.compressPackage(pack['data']);\n        assert(compressedData['cachedIndexes'].length === compressedData['cachedChunks'].length);\n        for (var i = 0; i < compressedData['cachedIndexes'].length; i++) {\n          compressedData['cachedIndexes'][i] = -1;\n          compressedData['cachedChunks'][i] = compressedData['data'].subarray(compressedData['cachedOffset'] + i*LZ4.CHUNK_SIZE,\n                                                                        compressedData['cachedOffset'] + (i+1)*LZ4.CHUNK_SIZE);\n          assert(compressedData['cachedChunks'][i].length === LZ4.CHUNK_SIZE);\n        }\n        pack['metadata'].files.forEach((file) => {\n          var dir = PATH.dirname(file.filename);\n          var name = PATH.basename(file.filename);\n          FS.createPath('', dir, true, true);\n          var parent = FS.analyzePath(dir).object;\n          LZ4.createNode(parent, name, LZ4.FILE_MODE, 0, {\n            compressedData,\n            start: file.start,\n            end: file.end,\n          });\n        });\n        // Preload files if necessary. This code is largely similar to\n        // createPreloadedFile in library_fs.js. However, a main difference here\n        // is that we only decompress the file if it can be preloaded.\n        // Abstracting out the common parts seems to be more effort than it is\n        // worth.\n        if (preloadPlugin) {\n          Browser.init();\n          pack['metadata'].files.forEach((file) => {\n            var handled = false;\n            var fullname = file.filename;\n            preloadPlugins.forEach((plugin) => {\n              if (handled) return;\n              if (plugin['canHandle'](fullname)) {\n                var dep = getUniqueRunDependency('fp ' + fullname);\n                addRunDependency(dep);\n                var finish = () => removeRunDependency(dep);\n                var byteArray = FS.readFile(fullname);\n                plugin['handle'](byteArray, fullname, finish, finish);\n                handled = true;\n              }\n            });\n          });\n        }\n      },\n  createNode(parent, name, mode, dev, contents, mtime) {\n        var node = FS.createNode(parent, name, mode);\n        node.mode = mode;\n        node.node_ops = LZ4.node_ops;\n        node.stream_ops = LZ4.stream_ops;\n        node.timestamp = (mtime || new Date).getTime();\n        assert(LZ4.FILE_MODE !== LZ4.DIR_MODE);\n        if (mode === LZ4.FILE_MODE) {\n          node.size = contents.end - contents.start;\n          node.contents = contents;\n        } else {\n          node.size = 4096;\n          node.contents = {};\n        }\n        if (parent) {\n          parent.contents[name] = node;\n        }\n        return node;\n      },\n  node_ops:{\n  getattr(node) {\n          return {\n            dev: 1,\n            ino: node.id,\n            mode: node.mode,\n            nlink: 1,\n            uid: 0,\n            gid: 0,\n            rdev: 0,\n            size: node.size,\n            atime: new Date(node.timestamp),\n            mtime: new Date(node.timestamp),\n            ctime: new Date(node.timestamp),\n            blksize: 4096,\n            blocks: Math.ceil(node.size / 4096),\n          };\n        },\n  setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n        },\n  lookup(parent, name) {\n          throw new FS.ErrnoError(44);\n        },\n  mknod(parent, name, mode, dev) {\n          throw new FS.ErrnoError(63);\n        },\n  rename(oldNode, newDir, newName) {\n          throw new FS.ErrnoError(63);\n        },\n  unlink(parent, name) {\n          throw new FS.ErrnoError(63);\n        },\n  rmdir(parent, name) {\n          throw new FS.ErrnoError(63);\n        },\n  readdir(node) {\n          throw new FS.ErrnoError(63);\n        },\n  symlink(parent, newName, oldPath) {\n          throw new FS.ErrnoError(63);\n        },\n  },\n  stream_ops:{\n  read(stream, buffer, offset, length, position) {\n          //out('LZ4 read ' + [offset, length, position]);\n          length = Math.min(length, stream.node.size - position);\n          if (length <= 0) return 0;\n          var contents = stream.node.contents;\n          var compressedData = contents.compressedData;\n          var written = 0;\n          while (written < length) {\n            var start = contents.start + position + written; // start index in uncompressed data\n            var desired = length - written;\n            //out('current read: ' + ['start', start, 'desired', desired]);\n            var chunkIndex = Math.floor(start / LZ4.CHUNK_SIZE);\n            var compressedStart = compressedData['offsets'][chunkIndex];\n            var compressedSize = compressedData['sizes'][chunkIndex];\n            var currChunk;\n            if (compressedData['successes'][chunkIndex]) {\n              var found = compressedData['cachedIndexes'].indexOf(chunkIndex);\n              if (found >= 0) {\n                currChunk = compressedData['cachedChunks'][found];\n              } else {\n                // decompress the chunk\n                compressedData['cachedIndexes'].pop();\n                compressedData['cachedIndexes'].unshift(chunkIndex);\n                currChunk = compressedData['cachedChunks'].pop();\n                compressedData['cachedChunks'].unshift(currChunk);\n                if (compressedData['debug']) {\n                  out('decompressing chunk ' + chunkIndex);\n                  Module['decompressedChunks'] = (Module['decompressedChunks'] || 0) + 1;\n                }\n                var compressed = compressedData['data'].subarray(compressedStart, compressedStart + compressedSize);\n                //var t = Date.now();\n                var originalSize = LZ4.codec.uncompress(compressed, currChunk);\n                //out('decompress time: ' + (Date.now() - t));\n                if (chunkIndex < compressedData['successes'].length-1) assert(originalSize === LZ4.CHUNK_SIZE); // all but the last chunk must be full-size\n              }\n            } else {\n              // uncompressed\n              currChunk = compressedData['data'].subarray(compressedStart, compressedStart + LZ4.CHUNK_SIZE);\n            }\n            var startInChunk = start % LZ4.CHUNK_SIZE;\n            var endInChunk = Math.min(startInChunk + desired, LZ4.CHUNK_SIZE);\n            buffer.set(currChunk.subarray(startInChunk, endInChunk), offset + written);\n            var currWritten = endInChunk - startInChunk;\n            written += currWritten;\n          }\n          return written;\n        },\n  write(stream, buffer, offset, length, position) {\n          throw new FS.ErrnoError(29);\n        },\n  llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.size;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n  },\n  };\n  var FS = {\n  root:null,\n  mounts:[],\n  devices:{\n  },\n  streams:[],\n  nextInode:1,\n  nameTable:null,\n  currentPath:\"/\",\n  initialized:false,\n  ignorePermissions:true,\n  ErrnoError:null,\n  genericErrors:{\n  },\n  filesystems:null,\n  syncFSRequests:0,\n  lookupPath(path, opts = {}) {\n        path = PATH_FS.resolve(path);\n  \n        if (!path) return { path: '', node: null };\n  \n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0\n        };\n        opts = Object.assign(defaults, opts)\n  \n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\n          throw new FS.ErrnoError(32);\n        }\n  \n        // split the absolute path\n        var parts = path.split('/').filter((p) => !!p);\n  \n        // start at the root\n        var current = FS.root;\n        var current_path = '/';\n  \n        for (var i = 0; i < parts.length; i++) {\n          var islast = (i === parts.length-1);\n          if (islast && opts.parent) {\n            // stop resolving\n            break;\n          }\n  \n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n  \n          // jump to the mount's root node if this is a mountpoint\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n  \n          // by default, lookupPath will not follow a symlink if it is the final path component.\n          // setting opts.follow = true will override this behavior.\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n  \n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\n              current = lookup.node;\n  \n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n  \n        return { path: current_path, node: current };\n      },\n  getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length-1] !== '/' ? `${mount}/${path}` : mount + path;\n          }\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n  hashName(parentid, name) {\n        var hash = 0;\n  \n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n  hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n  hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n  lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        // if we failed to find it in the cache, call into the VFS\n        return FS.lookup(parent, name);\n      },\n  createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n  \n        FS.hashAddNode(node);\n  \n        return node;\n      },\n  destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n  isRoot(node) {\n        return node === node.parent;\n      },\n  isMountpoint(node) {\n        return !!node.mounted;\n      },\n  isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n  isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n  isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n  isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n  isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n  isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n  isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n  flagsToPermissionString(flag) {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if ((flag & 512)) {\n          perms += 'w';\n        }\n        return perms;\n      },\n  nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        // return 0 if any user, group or owner bits are set.\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n  mayLookup(dir) {\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n  mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {\n        }\n        return FS.nodePermissions(dir, 'wx');\n      },\n  mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n  mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n  MAX_OPEN_FDS:4096,\n  nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n  getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        return stream;\n      },\n  getStream:(fd) => FS.streams[fd],\n  createStream(stream, fd = -1) {\n        if (!FS.FSStream) {\n          FS.FSStream = /** @constructor */ function() {\n            this.shared = { };\n          };\n          FS.FSStream.prototype = {};\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              /** @this {FS.FSStream} */\n              get() { return this.node; },\n              /** @this {FS.FSStream} */\n              set(val) { this.node = val; }\n            },\n            isRead: {\n              /** @this {FS.FSStream} */\n              get() { return (this.flags & 2097155) !== 1; }\n            },\n            isWrite: {\n              /** @this {FS.FSStream} */\n              get() { return (this.flags & 2097155) !== 0; }\n            },\n            isAppend: {\n              /** @this {FS.FSStream} */\n              get() { return (this.flags & 1024); }\n            },\n            flags: {\n              /** @this {FS.FSStream} */\n              get() { return this.shared.flags; },\n              /** @this {FS.FSStream} */\n              set(val) { this.shared.flags = val; },\n            },\n            position : {\n              /** @this {FS.FSStream} */\n              get() { return this.shared.position; },\n              /** @this {FS.FSStream} */\n              set(val) { this.shared.position = val; },\n            },\n          });\n        }\n        // clone it, so we can return an instance of FSStream\n        stream = Object.assign(new FS.FSStream(), stream);\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n  closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n  chrdev_stream_ops:{\n  open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          // override node's stream ops with the device's\n          stream.stream_ops = device.stream_ops;\n          // forward the open call\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },\n  llseek() {\n          throw new FS.ErrnoError(70);\n        },\n  },\n  major:(dev) => ((dev) >> 8),\n  minor:(dev) => ((dev) & 0xff),\n  makedev:(ma, mi) => ((ma) << 8 | (mi)),\n  registerDevice(dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n  getDevice:(dev) => FS.devices[dev],\n  getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n  \n        while (check.length) {\n          var m = check.pop();\n  \n          mounts.push(m);\n  \n          check.push.apply(check, m.mounts);\n        }\n  \n        return mounts;\n      },\n  syncfs(populate, callback) {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n  \n        FS.syncFSRequests++;\n  \n        if (FS.syncFSRequests > 1) {\n          err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);\n        }\n  \n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n  \n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n  \n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        };\n  \n        // sync all mounts\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n  mount(type, opts, mountpoint) {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n  \n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n          mountpoint = lookup.path;  // use the absolute path\n          node = lookup.node;\n  \n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n  \n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n  \n        var mount = {\n          type,\n          opts,\n          mountpoint,\n          mounts: []\n        };\n  \n        // create a root node for the fs\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n  \n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          // set as a mountpoint\n          node.mounted = mount;\n  \n          // add the new mount to the current mount's children\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n  \n        return mountRoot;\n      },\n  unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n  \n        // destroy the nodes for this mount, and all its child mounts\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n  \n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n  \n          while (current) {\n            var next = current.name_next;\n  \n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n  \n            current = next;\n          }\n        });\n  \n        // no longer a mountpoint\n        node.mounted = null;\n  \n        // remove this mount from the child mounts\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n  lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n  mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n  create(path, mode) {\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n  mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n  mkdirTree(path, mode) {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch(e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n  mkdev(path, mode, dev) {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438 /* 0666 */;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n  symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n  rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        // parents must exist\n        var lookup, old_dir, new_dir;\n  \n        // let the errors from non existant directories percolate up\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n  \n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n        // need to be part of the same mount\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n        // source must exist\n        var old_node = FS.lookupNode(old_dir, old_name);\n        // old path should not be an ancestor of the new path\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n        // new path should not be an ancestor of the old path\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n        // see if the new path already exists\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {\n          // not fatal\n        }\n        // early out if nothing needs to change\n        if (old_node === new_node) {\n          return;\n        }\n        // we'll need to delete the old entry\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        // need delete permissions if we'll be overwriting.\n        // need create permissions if new doesn't already exist.\n        errCode = new_node ?\n          FS.mayDelete(new_dir, new_name, isdir) :\n          FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\n          throw new FS.ErrnoError(10);\n        }\n        // if we are going to change the parent, check write permissions\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // remove the node from the lookup hash\n        FS.hashRemoveNode(old_node);\n        // do the underlying fs rename\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          // add the node back to the hash (in case node_ops.rename\n          // changed its name)\n          FS.hashAddNode(old_node);\n        }\n      },\n  rmdir(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n  readdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n  unlink(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          // According to POSIX, we should map EISDIR to EPERM, but\n          // we instead do what Linux does (and we must, as we use\n          // the musl linux libc).\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n  readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n      },\n  stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n  lstat(path) {\n        return FS.stat(path, true);\n      },\n  chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now()\n        });\n      },\n  lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n  fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chmod(stream.node, mode);\n      },\n  chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now()\n          // we ignore the uid / gid for now\n        });\n      },\n  lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n  fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chown(stream.node, uid, gid);\n      },\n  truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },\n  ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n  utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime)\n        });\n      },\n  open(path, flags, mode) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;\n        mode = typeof mode == 'undefined' ? 438 /* 0666 */ : mode;\n        if ((flags & 64)) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072)\n            });\n            node = lookup.node;\n          } catch (e) {\n            // ignore\n          }\n        }\n        // perhaps we need to create the node\n        var created = false;\n        if ((flags & 64)) {\n          if (node) {\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\n            if ((flags & 128)) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            // node doesn't exist, try to create it\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        // can't truncate a device\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        // if asked only for a directory, then this must be one\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        // check permissions, if this is not a file we just created now (it is ok to\n        // create and write to a file with read-only permissions; it is read-only\n        // for later use)\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // do truncation if necessary\n        if ((flags & 512) && !created) {\n          FS.truncate(node, 0);\n        }\n        // we've already handled these, don't pass down to the underlying vfs\n        flags &= ~(128 | 512 | 131072);\n  \n        // register the stream with the filesystem\n        var stream = FS.createStream({\n          node,\n          path: FS.getPath(node),  // we want the absolute path to the node\n          flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\n          ungotten: [],\n          error: false\n        });\n        // call the new stream's open function\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n  close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null; // free readdir state\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n  isClosed(stream) {\n        return stream.fd === null;\n      },\n  llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n  read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n  write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          // seek to the end before writing in append mode\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n  allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n  mmap(stream, length, position, prot, flags) {\n        // User requests writing to file (prot & PROT_WRITE != 0).\n        // Checking if we have permissions to write to the file unless\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\n        // as all modifications will be visible only in the memory of\n        // the current process.\n        if ((prot & 2) !== 0\n            && (flags & 2) === 0\n            && (stream.flags & 2097155) !== 2) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n  msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },\n  munmap:(stream) => 0,\n  ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n  readFile(path, opts = {}) {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n  writeFile(path, data, opts = {}) {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n  cwd:() => FS.currentPath,\n  chdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n  createDefaultDirectories() {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n  createDefaultDevices() {\n        // create /dev\n        FS.mkdir('/dev');\n        // setup /dev/null\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n        // setup /dev/tty and /dev/tty1\n        // stderr needs to print output using err() rather than out()\n        // so we register a second tty just for it.\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n        // setup /dev/[u]random\n        // use a buffer to avoid overhead of individual crypto calls per byte\n        var randomBuffer = new Uint8Array(1024), randomLeft = 0;\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomLeft = randomFill(randomBuffer).byteLength;\n          }\n          return randomBuffer[--randomLeft];\n        };\n        FS.createDevice('/dev', 'random', randomByte);\n        FS.createDevice('/dev', 'urandom', randomByte);\n        // we're not going to emulate the actual shm device,\n        // just create the tmp dirs that reside in it commonly\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n  createSpecialDirectories() {\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\n        // name of the stream for fd 6 (see test_unistd_ttyname)\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount({\n          mount() {\n            var node = FS.createNode(proc_self, 'fd', 16384 | 511 /* 0777 */, 73);\n            node.node_ops = {\n              lookup(parent, name) {\n                var fd = +name;\n                var stream = FS.getStreamChecked(fd);\n                var ret = {\n                  parent: null,\n                  mount: { mountpoint: 'fake' },\n                  node_ops: { readlink: () => stream.path },\n                };\n                ret.parent = ret; // make it look like a simple root node\n                return ret;\n              }\n            };\n            return node;\n          }\n        }, {}, '/proc/self/fd');\n      },\n  createStandardStreams() {\n        // TODO deprecate the old functionality of a single\n        // input / output callback and that utilizes FS.createDevice\n        // and instead require a unique set of stream ops\n  \n        // by default, we symlink the standard streams to the\n        // default tty devices. however, if the standard streams\n        // have been overwritten we create a unique device for\n        // them instead.\n        if (Module['stdin']) {\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (Module['stdout']) {\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (Module['stderr']) {\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n  \n        // open default streams for the stdin, stdout and stderr devices\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n  ensureErrnoError() {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = /** @this{Object} */ function ErrnoError(errno, node) {\n          // We set the `name` property to be able to identify `FS.ErrnoError`\n          // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\n          // - when using PROXYFS, an error can come from an underlying FS\n          // as different FS objects have their own FS.ErrnoError each,\n          // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\n          // we'll use the reliable test `err.name == \"ErrnoError\"` instead\n          this.name = 'ErrnoError';\n          this.node = node;\n          this.setErrno = /** @this{Object} */ function(errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = 'FS error';\n  \n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n      },\n  staticInit() {\n        FS.ensureErrnoError();\n  \n        FS.nameTable = new Array(4096);\n  \n        FS.mount(MEMFS, {}, '/');\n  \n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n  \n        FS.filesystems = {\n          'MEMFS': MEMFS,\n          'IDBFS': IDBFS,\n        };\n      },\n  init(input, output, error) {\n        FS.init.initialized = true;\n  \n        FS.ensureErrnoError();\n  \n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\n        Module['stdin'] = input || Module['stdin'];\n        Module['stdout'] = output || Module['stdout'];\n        Module['stderr'] = error || Module['stderr'];\n  \n        FS.createStandardStreams();\n      },\n  quit() {\n        FS.init.initialized = false;\n        // force-flush all streams, so we get musl std streams printed out\n        // close all of our streams\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n  findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n  analyzePath(path, dontResolveLastLink) {\n        // operate from within the context of the symlink's target\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {\n        }\n        var ret = {\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\n          parentExists: false, parentPath: null, parentObject: null\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        };\n        return ret;\n      },\n  createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {\n            // ignore EEXIST\n          }\n          parent = current;\n        }\n        return current;\n      },\n  createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n  createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n          // make sure we can write to the file\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n        return node;\n      },\n  createDevice(parent, name, input, output) {\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        // Create a fake device that a set of stream ops to emulate\n        // the old behavior.\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n          close(stream) {\n            // flush any pending line data\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read(stream, buffer, offset, length, pos /* ignored */) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset+i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset+i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n  forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else if (read_) {\n          // Command-line.\n          try {\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\n            //          read() will try to parse UTF8.\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\n        }\n      },\n  createLazyFile(parent, name, url, canRead, canWrite) {\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\n        /** @constructor */\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = []; // Loaded chunks. Index is the chunk number\n        }\n        LazyUint8Array.prototype.get = /** @this{Object} */ function LazyUint8Array_get(idx) {\n          if (idx > this.length-1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize)|0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n          this.getter = getter;\n        };\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n          // Find length\n          var xhr = new XMLHttpRequest();\n          xhr.open('HEAD', url, false);\n          xhr.send(null);\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n          var header;\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n  \n          var chunkSize = 1024*1024; // Chunk size in bytes\n  \n          if (!hasByteServing) chunkSize = datalength;\n  \n          // Function to get a range from the remote URL.\n          var doXHR = (from, to) => {\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n  \n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n  \n            // Some hints to the browser that we want binary data.\n            xhr.responseType = 'arraybuffer';\n            if (xhr.overrideMimeType) {\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\n            }\n  \n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            if (xhr.response !== undefined) {\n              return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\n            }\n            return intArrayFromString(xhr.responseText || '', true);\n          };\n          var lazyArray = this;\n          lazyArray.setDataGetter((chunkNum) => {\n            var start = chunkNum * chunkSize;\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\n            }\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\n            return lazyArray.chunks[chunkNum];\n          });\n  \n          if (usesGzip || !datalength) {\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\n            datalength = this.getter(0).length;\n            chunkSize = datalength;\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n          }\n  \n          this._length = datalength;\n          this._chunkSize = chunkSize;\n          this.lengthKnown = true;\n        };\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: /** @this{Object} */ function() {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              }\n            },\n            chunkSize: {\n              get: /** @this{Object} */ function() {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              }\n            }\n          });\n  \n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n  \n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        // This is a total hack, but I want to get this lazy file code out of the\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\n        // be its own thin LAZYFS proxying calls to MEMFS.\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        // Add a function that defers querying the file size until it is asked the first time.\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: /** @this {FSNode} */ function() { return this.contents.length; }\n          }\n        });\n        // override each stream op with one that tries to force load the lazy file first\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length)\n            return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) { // normal array\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n        // use a custom read function\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position)\n        };\n        // use a custom mmap function\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n  };\n  \n  \n    /**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */\n  var UTF8ToString = (ptr, maxBytesToRead) => {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    };\n  var SYSCALLS = {\n  DEFAULT_POLLMASK:5,\n  calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n        // relative path\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);;\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n  doStat(func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n            // an error occurred while trying to look up the path; we should just report ENOTDIR\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[((buf)>>2)] = stat.dev;\n        HEAP32[(((buf)+(4))>>2)] = stat.mode;\n        HEAPU32[(((buf)+(8))>>2)] = stat.nlink;\n        HEAP32[(((buf)+(12))>>2)] = stat.uid;\n        HEAP32[(((buf)+(16))>>2)] = stat.gid;\n        HEAP32[(((buf)+(20))>>2)] = stat.rdev;\n        (tempI64 = [stat.size>>>0,(tempDouble=stat.size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(24))>>2)] = tempI64[0],HEAP32[(((buf)+(28))>>2)] = tempI64[1]);\n        HEAP32[(((buf)+(32))>>2)] = 4096;\n        HEAP32[(((buf)+(36))>>2)] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        (tempI64 = [Math.floor(atime / 1000)>>>0,(tempDouble=Math.floor(atime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(40))>>2)] = tempI64[0],HEAP32[(((buf)+(44))>>2)] = tempI64[1]);\n        HEAPU32[(((buf)+(48))>>2)] = (atime % 1000) * 1000;\n        (tempI64 = [Math.floor(mtime / 1000)>>>0,(tempDouble=Math.floor(mtime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(56))>>2)] = tempI64[0],HEAP32[(((buf)+(60))>>2)] = tempI64[1]);\n        HEAPU32[(((buf)+(64))>>2)] = (mtime % 1000) * 1000;\n        (tempI64 = [Math.floor(ctime / 1000)>>>0,(tempDouble=Math.floor(ctime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(72))>>2)] = tempI64[0],HEAP32[(((buf)+(76))>>2)] = tempI64[1]);\n        HEAPU32[(((buf)+(80))>>2)] = (ctime % 1000) * 1000;\n        (tempI64 = [stat.ino>>>0,(tempDouble=stat.ino,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(88))>>2)] = tempI64[0],HEAP32[(((buf)+(92))>>2)] = tempI64[1]);\n        return 0;\n      },\n  doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n  varargs:undefined,\n  get() {\n        var ret = HEAP32[((SYSCALLS.varargs)>>2)];\n        SYSCALLS.varargs += 4;\n        return ret;\n      },\n  getp() { return SYSCALLS.get() },\n  getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n  getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      },\n  };\n  function ___syscall_chmod(path, mode) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.chmod(path, mode);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_fchmod(fd, mode) {\n  try {\n  \n      FS.fchmod(fd, mode);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  var setErrNo = (value) => {\n      HEAP32[((___errno_location())>>2)] = value;\n      return value;\n    };\n  \n  function ___syscall_fcntl64(fd, cmd, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      switch (cmd) {\n        case 0: {\n          var arg = SYSCALLS.get();\n          if (arg < 0) {\n            return -28;\n          }\n          while (FS.streams[arg]) {\n            arg++;\n          }\n          var newStream;\n          newStream = FS.createStream(stream, arg);\n          return newStream.fd;\n        }\n        case 1:\n        case 2:\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\n        case 3:\n          return stream.flags;\n        case 4: {\n          var arg = SYSCALLS.get();\n          stream.flags |= arg;\n          return 0;\n        }\n        case 5: {\n          var arg = SYSCALLS.getp();\n          var offset = 0;\n          // We're always unlocked.\n          HEAP16[(((arg)+(offset))>>1)] = 2;\n          return 0;\n        }\n        case 6:\n        case 7:\n          return 0; // Pretend that the locking is successful.\n        case 16:\n        case 8:\n          return -28; // These are for sockets. We don't have them fully implemented yet.\n        case 9:\n          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fcntl() returns that, and we set errno ourselves.\n          setErrNo(28);\n          return -1;\n        default: {\n          return -28;\n        }\n      }\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_fstat64(fd, buf) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      return SYSCALLS.doStat(FS.stat, stream.path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  \n  var convertI32PairToI53Checked = (lo, hi) => {\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\n    };\n  function ___syscall_ftruncate64(fd,length_low, length_high) {\n    var length = convertI32PairToI53Checked(length_low, length_high);;\n  \n    \n  try {\n  \n      if (isNaN(length)) return 61;\n      FS.ftruncate(fd, length);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  ;\n  }\n\n  \n  var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    };\n  \n  function ___syscall_getcwd(buf, size) {\n  try {\n  \n      if (size === 0) return -28;\n      var cwd = FS.cwd();\n      var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\n      if (size < cwdLengthInBytes) return -68;\n      stringToUTF8(cwd, buf, size);\n      return cwdLengthInBytes;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  \n  function ___syscall_getdents64(fd, dirp, count) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd)\n      if (!stream.getdents) {\n        stream.getdents = FS.readdir(stream.path);\n      }\n  \n      var struct_size = 280;\n      var pos = 0;\n      var off = FS.llseek(stream, 0, 1);\n  \n      var idx = Math.floor(off / struct_size);\n  \n      while (idx < stream.getdents.length && pos + struct_size <= count) {\n        var id;\n        var type;\n        var name = stream.getdents[idx];\n        if (name === '.') {\n          id = stream.node.id;\n          type = 4; // DT_DIR\n        }\n        else if (name === '..') {\n          var lookup = FS.lookupPath(stream.path, { parent: true });\n          id = lookup.node.id;\n          type = 4; // DT_DIR\n        }\n        else {\n          var child = FS.lookupNode(stream.node, name);\n          id = child.id;\n          type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.\n                 FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.\n                 FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.\n                 8;                             // DT_REG, regular file.\n        }\n        (tempI64 = [id>>>0,(tempDouble=id,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((dirp + pos)>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(4))>>2)] = tempI64[1]);\n        (tempI64 = [(idx + 1) * struct_size>>>0,(tempDouble=(idx + 1) * struct_size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((dirp + pos)+(8))>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(12))>>2)] = tempI64[1]);\n        HEAP16[(((dirp + pos)+(16))>>1)] = 280;\n        HEAP8[(((dirp + pos)+(18))>>0)] = type;\n        stringToUTF8(name, dirp + pos + 19, 256);\n        pos += struct_size;\n        idx += 1;\n      }\n      FS.llseek(stream, idx * struct_size, 0);\n      return pos;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_ioctl(fd, op, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      switch (op) {\n        case 21509: {\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        case 21505: {\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tcgets) {\n            var termios = stream.tty.ops.ioctl_tcgets(stream);\n            var argp = SYSCALLS.getp();\n            HEAP32[((argp)>>2)] = termios.c_iflag || 0;\n            HEAP32[(((argp)+(4))>>2)] = termios.c_oflag || 0;\n            HEAP32[(((argp)+(8))>>2)] = termios.c_cflag || 0;\n            HEAP32[(((argp)+(12))>>2)] = termios.c_lflag || 0;\n            for (var i = 0; i < 32; i++) {\n              HEAP8[(((argp + i)+(17))>>0)] = termios.c_cc[i] || 0;\n            }\n            return 0;\n          }\n          return 0;\n        }\n        case 21510:\n        case 21511:\n        case 21512: {\n          if (!stream.tty) return -59;\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21506:\n        case 21507:\n        case 21508: {\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tcsets) {\n            var argp = SYSCALLS.getp();\n            var c_iflag = HEAP32[((argp)>>2)];\n            var c_oflag = HEAP32[(((argp)+(4))>>2)];\n            var c_cflag = HEAP32[(((argp)+(8))>>2)];\n            var c_lflag = HEAP32[(((argp)+(12))>>2)];\n            var c_cc = []\n            for (var i = 0; i < 32; i++) {\n              c_cc.push(HEAP8[(((argp + i)+(17))>>0)]);\n            }\n            return stream.tty.ops.ioctl_tcsets(stream.tty, op, { c_iflag, c_oflag, c_cflag, c_lflag, c_cc });\n          }\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21519: {\n          if (!stream.tty) return -59;\n          var argp = SYSCALLS.getp();\n          HEAP32[((argp)>>2)] = 0;\n          return 0;\n        }\n        case 21520: {\n          if (!stream.tty) return -59;\n          return -28; // not supported\n        }\n        case 21531: {\n          var argp = SYSCALLS.getp();\n          return FS.ioctl(stream, op, argp);\n        }\n        case 21523: {\n          // TODO: in theory we should write to the winsize struct that gets\n          // passed in, but for now musl doesn't read anything on it\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tiocgwinsz) {\n            var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);\n            var argp = SYSCALLS.getp();\n            HEAP16[((argp)>>1)] = winsize[0];\n            HEAP16[(((argp)+(2))>>1)] = winsize[1];\n          }\n          return 0;\n        }\n        case 21524: {\n          // TODO: technically, this ioctl call should change the window size.\n          // but, since emscripten doesn't have any concept of a terminal window\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        case 21515: {\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        default: return -28; // not supported\n      }\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_lstat64(path, buf) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.doStat(FS.lstat, path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_mkdirat(dirfd, path, mode) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      // remove a trailing slash, if one - /a/b/ has basename of '', but\n      // we want to create b in the context of this function\n      path = PATH.normalize(path);\n      if (path[path.length-1] === '/') path = path.substr(0, path.length-1);\n      FS.mkdir(path, mode, 0);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_newfstatat(dirfd, path, buf, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      var nofollow = flags & 256;\n      var allowEmpty = flags & 4096;\n      flags = flags & (~6400);\n      path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n      return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_openat(dirfd, path, flags, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      var mode = varargs ? SYSCALLS.get() : 0;\n      return FS.open(path, flags, mode).fd;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_rmdir(path) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.rmdir(path);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_stat64(path, buf) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.doStat(FS.stat, path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_unlinkat(dirfd, path, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      if (flags === 0) {\n        FS.unlink(path);\n      } else if (flags === 512) {\n        FS.rmdir(path);\n      } else {\n        abort('Invalid flags passed to unlinkat');\n      }\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  var nowIsMonotonic = true;;\n  var __emscripten_get_now_is_monotonic = () => nowIsMonotonic;\n\n  var isLeapYear = (year) => {\n        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);\n    };\n  \n  var MONTH_DAYS_LEAP_CUMULATIVE = [0,31,60,91,121,152,182,213,244,274,305,335];\n  \n  var MONTH_DAYS_REGULAR_CUMULATIVE = [0,31,59,90,120,151,181,212,243,273,304,334];\n  var ydayFromDate = (date) => {\n      var leap = isLeapYear(date.getFullYear());\n      var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1; // -1 since it's days since Jan 1\n  \n      return yday;\n    };\n  \n  function __localtime_js(time_low, time_high,tmPtr) {\n    var time = convertI32PairToI53Checked(time_low, time_high);;\n  \n    \n      var date = new Date(time*1000);\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getFullYear()-1900;\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\n  \n      var yday = ydayFromDate(date)|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n      HEAP32[(((tmPtr)+(36))>>2)] = -(date.getTimezoneOffset() * 60);\n  \n      // Attention: DST is in December in South, and some regions don't have DST at all.\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\n      HEAP32[(((tmPtr)+(32))>>2)] = dst;\n    ;\n  }\n\n  \n  \n  var __mktime_js = function(tmPtr) {\n  \n    var ret = (() => { \n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\n                          HEAP32[(((tmPtr)+(16))>>2)],\n                          HEAP32[(((tmPtr)+(12))>>2)],\n                          HEAP32[(((tmPtr)+(8))>>2)],\n                          HEAP32[(((tmPtr)+(4))>>2)],\n                          HEAP32[((tmPtr)>>2)],\n                          0);\n  \n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\n      var guessedOffset = date.getTimezoneOffset();\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\n      if (dst < 0) {\n        // Attention: some regions don't have DST at all.\n        HEAP32[(((tmPtr)+(32))>>2)] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\n      }\n  \n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\n      var yday = ydayFromDate(date)|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n      // To match expected behavior, update fields from date\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getYear();\n  \n      return date.getTime() / 1000;\n     })();\n    return (setTempRet0((tempDouble=ret,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)), ret>>>0);\n  };\n\n  \n  \n  var stringToNewUTF8 = (str) => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = _malloc(size);\n      if (ret) stringToUTF8(str, ret, size);\n      return ret;\n    };\n  var __tzset_js = (timezone, daylight, tzname) => {\n      // TODO: Use (malleable) environment variables instead of system settings.\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n  \n      // Local standard timezone offset. Local standard time is not adjusted for daylight savings.\n      // This code uses the fact that getTimezoneOffset returns a greater value during Standard Time versus Daylight Saving Time (DST).\n      // Thus it determines the expected output during Standard Time, and it compares whether the output of the given date the same (Standard) or less (DST).\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n  \n      // timezone is specified as seconds west of UTC (\"The external variable\n      // `timezone` shall be set to the difference, in seconds, between\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\n      // as returned by stdTimezoneOffset.\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\n      HEAPU32[((timezone)>>2)] = stdTimezoneOffset * 60;\n  \n      HEAP32[((daylight)>>2)] = Number(winterOffset != summerOffset);\n  \n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : \"GMT\";\n      };\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = stringToNewUTF8(winterName);\n      var summerNamePtr = stringToNewUTF8(summerName);\n      if (summerOffset < winterOffset) {\n        // Northern hemisphere\n        HEAPU32[((tzname)>>2)] = winterNamePtr;\n        HEAPU32[(((tzname)+(4))>>2)] = summerNamePtr;\n      } else {\n        HEAPU32[((tzname)>>2)] = summerNamePtr;\n        HEAPU32[(((tzname)+(4))>>2)] = winterNamePtr;\n      }\n    };\n\n  var _abort = () => {\n      abort('');\n    };\n\n  var _emscripten_set_main_loop_timing = (mode, value) => {\n      Browser.mainLoop.timingMode = mode;\n      Browser.mainLoop.timingValue = value;\n  \n      if (!Browser.mainLoop.func) {\n        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.\n      }\n  \n      if (!Browser.mainLoop.running) {\n        \n        Browser.mainLoop.running = true;\n      }\n      if (mode == 0) {\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {\n          var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now())|0;\n          setTimeout(Browser.mainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop\n        };\n        Browser.mainLoop.method = 'timeout';\n      } else if (mode == 1) {\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {\n          Browser.requestAnimationFrame(Browser.mainLoop.runner);\n        };\n        Browser.mainLoop.method = 'rAF';\n      } else if (mode == 2) {\n        if (typeof setImmediate == 'undefined') {\n          // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)\n          var setImmediates = [];\n          var emscriptenMainLoopMessageId = 'setimmediate';\n          /** @param {Event} event */\n          var Browser_setImmediate_messageHandler = (event) => {\n            // When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,\n            // so check for both cases.\n            if (event.data === emscriptenMainLoopMessageId || event.data.target === emscriptenMainLoopMessageId) {\n              event.stopPropagation();\n              setImmediates.shift()();\n            }\n          };\n          addEventListener(\"message\", Browser_setImmediate_messageHandler, true);\n          setImmediate = /** @type{function(function(): ?, ...?): number} */(function Browser_emulated_setImmediate(func) {\n            setImmediates.push(func);\n            if (ENVIRONMENT_IS_WORKER) {\n              if (Module['setImmediates'] === undefined) Module['setImmediates'] = [];\n              Module['setImmediates'].push(func);\n              postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js\n            } else postMessage(emscriptenMainLoopMessageId, \"*\"); // On the main thread, can just send the message to itself.\n          });\n        }\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {\n          setImmediate(Browser.mainLoop.runner);\n        };\n        Browser.mainLoop.method = 'immediate';\n      }\n      return 0;\n    };\n  \n  var _emscripten_get_now;\n      // Modern environment where performance.now() is supported:\n      // N.B. a shorter form \"_emscripten_get_now = performance.now;\" is\n      // unfortunately not allowed even in current browsers (e.g. FF Nightly 75).\n      _emscripten_get_now = () => performance.now();\n  ;\n  \n  \n    /**\n     * @param {number=} arg\n     * @param {boolean=} noSetTiming\n     */\n  var setMainLoop = (browserIterationFunc, fps, simulateInfiniteLoop, arg, noSetTiming) => {\n      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');\n  \n      Browser.mainLoop.func = browserIterationFunc;\n      Browser.mainLoop.arg = arg;\n  \n      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;\n      function checkIsRunning() {\n        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) {\n          \n          return false;\n        }\n        return true;\n      }\n  \n      // We create the loop runner here but it is not actually running until\n      // _emscripten_set_main_loop_timing is called (which might happen a\n      // later time).  This member signifies that the current runner has not\n      // yet been started so that we can call runtimeKeepalivePush when it\n      // gets it timing set for the first time.\n      Browser.mainLoop.running = false;\n      Browser.mainLoop.runner = function Browser_mainLoop_runner() {\n        if (ABORT) return;\n        if (Browser.mainLoop.queue.length > 0) {\n          var start = Date.now();\n          var blocker = Browser.mainLoop.queue.shift();\n          blocker.func(blocker.arg);\n          if (Browser.mainLoop.remainingBlockers) {\n            var remaining = Browser.mainLoop.remainingBlockers;\n            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);\n            if (blocker.counted) {\n              Browser.mainLoop.remainingBlockers = next;\n            } else {\n              // not counted, but move the progress along a tiny bit\n              next = next + 0.5; // do not steal all the next one's progress\n              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;\n            }\n          }\n          Browser.mainLoop.updateStatus();\n  \n          // catches pause/resume main loop from blocker execution\n          if (!checkIsRunning()) return;\n  \n          setTimeout(Browser.mainLoop.runner, 0);\n          return;\n        }\n  \n        // catch pauses from non-main loop sources\n        if (!checkIsRunning()) return;\n  \n        // Implement very basic swap interval control\n        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;\n        if (Browser.mainLoop.timingMode == 1 && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {\n          // Not the scheduled time to render this frame - skip.\n          Browser.mainLoop.scheduler();\n          return;\n        } else if (Browser.mainLoop.timingMode == 0) {\n          Browser.mainLoop.tickStartTime = _emscripten_get_now();\n        }\n  \n        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize\n        // VBO double-buffering and reduce GPU stalls.\n        GL.newRenderingFrameStarted();\n  \n        Browser.mainLoop.runIter(browserIterationFunc);\n  \n        // catch pauses from the main loop itself\n        if (!checkIsRunning()) return;\n  \n        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able\n        // to queue the newest produced audio samples.\n        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()\n        //       do not need to be hardcoded into this function, but can be more generic.\n        if (typeof SDL == 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();\n  \n        Browser.mainLoop.scheduler();\n      }\n  \n      if (!noSetTiming) {\n        if (fps && fps > 0) {\n          _emscripten_set_main_loop_timing(0, 1000.0 / fps);\n        } else {\n          // Do rAF by rendering each frame (no decimating)\n          _emscripten_set_main_loop_timing(1, 1);\n        }\n  \n        Browser.mainLoop.scheduler();\n      }\n  \n      if (simulateInfiniteLoop) {\n        throw 'unwind';\n      }\n    };\n  \n  var handleException = (e) => {\n      // Certain exception types we do not treat as errors since they are used for\n      // internal control flow.\n      // 1. ExitStatus, which is thrown by exit()\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\n      //    that wish to return to JS event loop.\n      if (e instanceof ExitStatus || e == 'unwind') {\n        return EXITSTATUS;\n      }\n      quit_(1, e);\n    };\n  \n  \n  var _proc_exit = (code) => {\n      EXITSTATUS = code;\n      if (!keepRuntimeAlive()) {\n        if (Module['onExit']) Module['onExit'](code);\n        ABORT = true;\n      }\n      quit_(code, new ExitStatus(code));\n    };\n  /** @suppress {duplicate } */\n  /** @param {boolean|number=} implicit */\n  var exitJS = (status, implicit) => {\n      EXITSTATUS = status;\n  \n      _proc_exit(status);\n    };\n  var _exit = exitJS;\n  \n  var maybeExit = () => {\n      if (!keepRuntimeAlive()) {\n        try {\n          _exit(EXITSTATUS);\n        } catch (e) {\n          handleException(e);\n        }\n      }\n    };\n  var callUserCallback = (func) => {\n      if (ABORT) {\n        return;\n      }\n      try {\n        func();\n        maybeExit();\n      } catch (e) {\n        handleException(e);\n      }\n    };\n  \n  /** @param {number=} timeout */\n  var safeSetTimeout = (func, timeout) => {\n      \n      return setTimeout(() => {\n        \n        callUserCallback(func);\n      }, timeout);\n    };\n  \n  var warnOnce = (text) => {\n      if (!warnOnce.shown) warnOnce.shown = {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        err(text);\n      }\n    };\n  \n  \n  \n  var Browser = {\n  mainLoop:{\n  running:false,\n  scheduler:null,\n  method:\"\",\n  currentlyRunningMainloop:0,\n  func:null,\n  arg:0,\n  timingMode:0,\n  timingValue:0,\n  currentFrameNumber:0,\n  queue:[],\n  pause() {\n          Browser.mainLoop.scheduler = null;\n          // Incrementing this signals the previous main loop that it's now become old, and it must return.\n          Browser.mainLoop.currentlyRunningMainloop++;\n        },\n  resume() {\n          Browser.mainLoop.currentlyRunningMainloop++;\n          var timingMode = Browser.mainLoop.timingMode;\n          var timingValue = Browser.mainLoop.timingValue;\n          var func = Browser.mainLoop.func;\n          Browser.mainLoop.func = null;\n          // do not set timing and call scheduler, we will do it on the next lines\n          setMainLoop(func, 0, false, Browser.mainLoop.arg, true);\n          _emscripten_set_main_loop_timing(timingMode, timingValue);\n          Browser.mainLoop.scheduler();\n        },\n  updateStatus() {\n          if (Module['setStatus']) {\n            var message = Module['statusMessage'] || 'Please wait...';\n            var remaining = Browser.mainLoop.remainingBlockers;\n            var expected = Browser.mainLoop.expectedBlockers;\n            if (remaining) {\n              if (remaining < expected) {\n                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');\n              } else {\n                Module['setStatus'](message);\n              }\n            } else {\n              Module['setStatus']('');\n            }\n          }\n        },\n  runIter(func) {\n          if (ABORT) return;\n          if (Module['preMainLoop']) {\n            var preRet = Module['preMainLoop']();\n            if (preRet === false) {\n              return; // |return false| skips a frame\n            }\n          }\n          callUserCallback(func);\n          if (Module['postMainLoop']) Module['postMainLoop']();\n        },\n  },\n  isFullscreen:false,\n  pointerLock:false,\n  moduleContextCreatedCallbacks:[],\n  workers:[],\n  init() {\n        if (Browser.initted) return;\n        Browser.initted = true;\n  \n        // Support for plugins that can process preloaded files. You can add more of these to\n        // your app by creating and appending to preloadPlugins.\n        //\n        // Each plugin is asked if it can handle a file based on the file's name. If it can,\n        // it is given the file's raw data. When it is done, it calls a callback with the file's\n        // (possibly modified) data. For example, a plugin might decompress a file, or it\n        // might create some side data structure for use later (like an Image element, etc.).\n  \n        var imagePlugin = {};\n        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {\n          return !Module.noImageDecoding && /\\.(jpg|jpeg|png|bmp)$/i.test(name);\n        };\n        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\n          if (b.size !== byteArray.length) { // Safari bug #118630\n            // Safari's Blob can only take an ArrayBuffer\n            b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });\n          }\n          var url = URL.createObjectURL(b);\n          var img = new Image();\n          img.onload = () => {\n            assert(img.complete, `Image ${name} could not be decoded`);\n            var canvas = /** @type {!HTMLCanvasElement} */ (document.createElement('canvas'));\n            canvas.width = img.width;\n            canvas.height = img.height;\n            var ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0);\n            preloadedImages[name] = canvas;\n            URL.revokeObjectURL(url);\n            if (onload) onload(byteArray);\n          };\n          img.onerror = (event) => {\n            err(`Image ${url} could not be decoded`);\n            if (onerror) onerror();\n          };\n          img.src = url;\n        };\n        preloadPlugins.push(imagePlugin);\n  \n        var audioPlugin = {};\n        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {\n          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };\n        };\n        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {\n          var done = false;\n          function finish(audio) {\n            if (done) return;\n            done = true;\n            preloadedAudios[name] = audio;\n            if (onload) onload(byteArray);\n          }\n          function fail() {\n            if (done) return;\n            done = true;\n            preloadedAudios[name] = new Audio(); // empty shim\n            if (onerror) onerror();\n          }\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\n          var url = URL.createObjectURL(b); // XXX we never revoke this!\n          var audio = new Audio();\n          audio.addEventListener('canplaythrough', () => finish(audio), false); // use addEventListener due to chromium bug 124926\n          audio.onerror = function audio_onerror(event) {\n            if (done) return;\n            err(`warning: browser could not fully decode audio ${name}, trying slower base64 approach`);\n            function encode64(data) {\n              var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n              var PAD = '=';\n              var ret = '';\n              var leftchar = 0;\n              var leftbits = 0;\n              for (var i = 0; i < data.length; i++) {\n                leftchar = (leftchar << 8) | data[i];\n                leftbits += 8;\n                while (leftbits >= 6) {\n                  var curr = (leftchar >> (leftbits-6)) & 0x3f;\n                  leftbits -= 6;\n                  ret += BASE[curr];\n                }\n              }\n              if (leftbits == 2) {\n                ret += BASE[(leftchar&3) << 4];\n                ret += PAD + PAD;\n              } else if (leftbits == 4) {\n                ret += BASE[(leftchar&0xf) << 2];\n                ret += PAD;\n              }\n              return ret;\n            }\n            audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);\n            finish(audio); // we don't wait for confirmation this worked - but it's worth trying\n          };\n          audio.src = url;\n          // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror\n          safeSetTimeout(() => {\n            finish(audio); // try to use it even though it is not necessarily ready to play\n          }, 10000);\n        };\n        preloadPlugins.push(audioPlugin);\n  \n        // Canvas event setup\n  \n        function pointerLockChange() {\n          Browser.pointerLock = document['pointerLockElement'] === Module['canvas'] ||\n                                document['mozPointerLockElement'] === Module['canvas'] ||\n                                document['webkitPointerLockElement'] === Module['canvas'] ||\n                                document['msPointerLockElement'] === Module['canvas'];\n        }\n        var canvas = Module['canvas'];\n        if (canvas) {\n          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module\n          // Module['forcedAspectRatio'] = 4 / 3;\n  \n          canvas.requestPointerLock = canvas['requestPointerLock'] ||\n                                      canvas['mozRequestPointerLock'] ||\n                                      canvas['webkitRequestPointerLock'] ||\n                                      canvas['msRequestPointerLock'] ||\n                                      (() => {});\n          canvas.exitPointerLock = document['exitPointerLock'] ||\n                                   document['mozExitPointerLock'] ||\n                                   document['webkitExitPointerLock'] ||\n                                   document['msExitPointerLock'] ||\n                                   (() => {}); // no-op if function does not exist\n          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\n  \n          document.addEventListener('pointerlockchange', pointerLockChange, false);\n          document.addEventListener('mozpointerlockchange', pointerLockChange, false);\n          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);\n          document.addEventListener('mspointerlockchange', pointerLockChange, false);\n  \n          if (Module['elementPointerLock']) {\n            canvas.addEventListener(\"click\", (ev) => {\n              if (!Browser.pointerLock && Module['canvas'].requestPointerLock) {\n                Module['canvas'].requestPointerLock();\n                ev.preventDefault();\n              }\n            }, false);\n          }\n        }\n      },\n  createContext(/** @type {HTMLCanvasElement} */ canvas, useWebGL, setInModule, webGLContextAttributes) {\n        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.\n  \n        var ctx;\n        var contextHandle;\n        if (useWebGL) {\n          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.\n          var contextAttributes = {\n            antialias: false,\n            alpha: false,\n            majorVersion: (typeof WebGL2RenderingContext != 'undefined') ? 2 : 1,\n          };\n  \n          if (webGLContextAttributes) {\n            for (var attribute in webGLContextAttributes) {\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\n            }\n          }\n  \n          // This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not\n          // actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function\n          // Browser.createContext() should not even be emitted.\n          if (typeof GL != 'undefined') {\n            contextHandle = GL.createContext(canvas, contextAttributes);\n            if (contextHandle) {\n              ctx = GL.getContext(contextHandle).GLctx;\n            }\n          }\n        } else {\n          ctx = canvas.getContext('2d');\n        }\n  \n        if (!ctx) return null;\n  \n        if (setInModule) {\n          if (!useWebGL) assert(typeof GLctx == 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');\n  \n          Module.ctx = ctx;\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\n          Module.useWebGL = useWebGL;\n          Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\n          Browser.init();\n        }\n        return ctx;\n      },\n  destroyContext(canvas, useWebGL, setInModule) {},\n  fullscreenHandlersInstalled:false,\n  lockPointer:undefined,\n  resizeCanvas:undefined,\n  requestFullscreen(lockPointer, resizeCanvas) {\n        Browser.lockPointer = lockPointer;\n        Browser.resizeCanvas = resizeCanvas;\n        if (typeof Browser.lockPointer == 'undefined') Browser.lockPointer = true;\n        if (typeof Browser.resizeCanvas == 'undefined') Browser.resizeCanvas = false;\n  \n        var canvas = Module['canvas'];\n        function fullscreenChange() {\n          Browser.isFullscreen = false;\n          var canvasContainer = canvas.parentNode;\n          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||\n               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\n               document['webkitCurrentFullScreenElement']) === canvasContainer) {\n            canvas.exitFullscreen = Browser.exitFullscreen;\n            if (Browser.lockPointer) canvas.requestPointerLock();\n            Browser.isFullscreen = true;\n            if (Browser.resizeCanvas) {\n              Browser.setFullscreenCanvasSize();\n            } else {\n              Browser.updateCanvasDimensions(canvas);\n            }\n          } else {\n            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\n            canvasContainer.parentNode.removeChild(canvasContainer);\n  \n            if (Browser.resizeCanvas) {\n              Browser.setWindowedCanvasSize();\n            } else {\n              Browser.updateCanvasDimensions(canvas);\n            }\n          }\n          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullscreen);\n          if (Module['onFullscreen']) Module['onFullscreen'](Browser.isFullscreen);\n        }\n  \n        if (!Browser.fullscreenHandlersInstalled) {\n          Browser.fullscreenHandlersInstalled = true;\n          document.addEventListener('fullscreenchange', fullscreenChange, false);\n          document.addEventListener('mozfullscreenchange', fullscreenChange, false);\n          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);\n          document.addEventListener('MSFullscreenChange', fullscreenChange, false);\n        }\n  \n        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root\n        var canvasContainer = document.createElement(\"div\");\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\n        canvasContainer.appendChild(canvas);\n  \n        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)\n        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||\n                                            canvasContainer['mozRequestFullScreen'] ||\n                                            canvasContainer['msRequestFullscreen'] ||\n                                           (canvasContainer['webkitRequestFullscreen'] ? () => canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) : null) ||\n                                           (canvasContainer['webkitRequestFullScreen'] ? () => canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) : null);\n  \n        canvasContainer.requestFullscreen();\n      },\n  exitFullscreen() {\n        // This is workaround for chrome. Trying to exit from fullscreen\n        // not in fullscreen state will cause \"TypeError: Document not active\"\n        // in chrome. See https://github.com/emscripten-core/emscripten/pull/8236\n        if (!Browser.isFullscreen) {\n          return false;\n        }\n  \n        var CFS = document['exitFullscreen'] ||\n                  document['cancelFullScreen'] ||\n                  document['mozCancelFullScreen'] ||\n                  document['msExitFullscreen'] ||\n                  document['webkitCancelFullScreen'] ||\n            (() => {});\n        CFS.apply(document, []);\n        return true;\n      },\n  nextRAF:0,\n  fakeRequestAnimationFrame(func) {\n        // try to keep 60fps between calls to here\n        var now = Date.now();\n        if (Browser.nextRAF === 0) {\n          Browser.nextRAF = now + 1000/60;\n        } else {\n          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0\n            Browser.nextRAF += 1000/60;\n          }\n        }\n        var delay = Math.max(Browser.nextRAF - now, 0);\n        setTimeout(func, delay);\n      },\n  requestAnimationFrame(func) {\n        if (typeof requestAnimationFrame == 'function') {\n          requestAnimationFrame(func);\n          return;\n        }\n        var RAF = Browser.fakeRequestAnimationFrame;\n        RAF(func);\n      },\n  safeSetTimeout(func, timeout) {\n        // Legacy function, this is used by the SDL2 port so we need to keep it\n        // around at least until that is updated.\n        // See https://github.com/libsdl-org/SDL/pull/6304\n        return safeSetTimeout(func, timeout);\n      },\n  safeRequestAnimationFrame(func) {\n        \n        return Browser.requestAnimationFrame(() => {\n          \n          callUserCallback(func);\n        });\n      },\n  getMimetype(name) {\n        return {\n          'jpg': 'image/jpeg',\n          'jpeg': 'image/jpeg',\n          'png': 'image/png',\n          'bmp': 'image/bmp',\n          'ogg': 'audio/ogg',\n          'wav': 'audio/wav',\n          'mp3': 'audio/mpeg'\n        }[name.substr(name.lastIndexOf('.')+1)];\n      },\n  getUserMedia(func) {\n        if (!window.getUserMedia) {\n          window.getUserMedia = navigator['getUserMedia'] ||\n                                navigator['mozGetUserMedia'];\n        }\n        window.getUserMedia(func);\n      },\n  getMovementX(event) {\n        return event['movementX'] ||\n               event['mozMovementX'] ||\n               event['webkitMovementX'] ||\n               0;\n      },\n  getMovementY(event) {\n        return event['movementY'] ||\n               event['mozMovementY'] ||\n               event['webkitMovementY'] ||\n               0;\n      },\n  getMouseWheelDelta(event) {\n        var delta = 0;\n        switch (event.type) {\n          case 'DOMMouseScroll':\n            // 3 lines make up a step\n            delta = event.detail / 3;\n            break;\n          case 'mousewheel':\n            // 120 units make up a step\n            delta = event.wheelDelta / 120;\n            break;\n          case 'wheel':\n            delta = event.deltaY\n            switch (event.deltaMode) {\n              case 0:\n                // DOM_DELTA_PIXEL: 100 pixels make up a step\n                delta /= 100;\n                break;\n              case 1:\n                // DOM_DELTA_LINE: 3 lines make up a step\n                delta /= 3;\n                break;\n              case 2:\n                // DOM_DELTA_PAGE: A page makes up 80 steps\n                delta *= 80;\n                break;\n              default:\n                throw 'unrecognized mouse wheel delta mode: ' + event.deltaMode;\n            }\n            break;\n          default:\n            throw 'unrecognized mouse wheel event: ' + event.type;\n        }\n        return delta;\n      },\n  mouseX:0,\n  mouseY:0,\n  mouseMovementX:0,\n  mouseMovementY:0,\n  touches:{\n  },\n  lastTouches:{\n  },\n  calculateMouseEvent(event) { // event should be mousemove, mousedown or mouseup\n        if (Browser.pointerLock) {\n          // When the pointer is locked, calculate the coordinates\n          // based on the movement of the mouse.\n          // Workaround for Firefox bug 764498\n          if (event.type != 'mousemove' &&\n              ('mozMovementX' in event)) {\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\n          } else {\n            Browser.mouseMovementX = Browser.getMovementX(event);\n            Browser.mouseMovementY = Browser.getMovementY(event);\n          }\n  \n          // check if SDL is available\n          if (typeof SDL != \"undefined\") {\n            Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;\n            Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;\n          } else {\n            // just add the mouse delta to the current absolut mouse position\n            // FIXME: ideally this should be clamped against the canvas size and zero\n            Browser.mouseX += Browser.mouseMovementX;\n            Browser.mouseY += Browser.mouseMovementY;\n          }\n        } else {\n          // Otherwise, calculate the movement based on the changes\n          // in the coordinates.\n          var rect = Module[\"canvas\"].getBoundingClientRect();\n          var cw = Module[\"canvas\"].width;\n          var ch = Module[\"canvas\"].height;\n  \n          // Neither .scrollX or .pageXOffset are defined in a spec, but\n          // we prefer .scrollX because it is currently in a spec draft.\n          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)\n          var scrollX = ((typeof window.scrollX != 'undefined') ? window.scrollX : window.pageXOffset);\n          var scrollY = ((typeof window.scrollY != 'undefined') ? window.scrollY : window.pageYOffset);\n  \n          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {\n            var touch = event.touch;\n            if (touch === undefined) {\n              return; // the \"touch\" property is only defined in SDL\n  \n            }\n            var adjustedX = touch.pageX - (scrollX + rect.left);\n            var adjustedY = touch.pageY - (scrollY + rect.top);\n  \n            adjustedX = adjustedX * (cw / rect.width);\n            adjustedY = adjustedY * (ch / rect.height);\n  \n            var coords = { x: adjustedX, y: adjustedY };\n  \n            if (event.type === 'touchstart') {\n              Browser.lastTouches[touch.identifier] = coords;\n              Browser.touches[touch.identifier] = coords;\n            } else if (event.type === 'touchend' || event.type === 'touchmove') {\n              var last = Browser.touches[touch.identifier];\n              if (!last) last = coords;\n              Browser.lastTouches[touch.identifier] = last;\n              Browser.touches[touch.identifier] = coords;\n            }\n            return;\n          }\n  \n          var x = event.pageX - (scrollX + rect.left);\n          var y = event.pageY - (scrollY + rect.top);\n  \n          // the canvas might be CSS-scaled compared to its backbuffer;\n          // SDL-using content will want mouse coordinates in terms\n          // of backbuffer units.\n          x = x * (cw / rect.width);\n          y = y * (ch / rect.height);\n  \n          Browser.mouseMovementX = x - Browser.mouseX;\n          Browser.mouseMovementY = y - Browser.mouseY;\n          Browser.mouseX = x;\n          Browser.mouseY = y;\n        }\n      },\n  resizeListeners:[],\n  updateResizeListeners() {\n        var canvas = Module['canvas'];\n        Browser.resizeListeners.forEach((listener) => listener(canvas.width, canvas.height));\n      },\n  setCanvasSize(width, height, noUpdates) {\n        var canvas = Module['canvas'];\n        Browser.updateCanvasDimensions(canvas, width, height);\n        if (!noUpdates) Browser.updateResizeListeners();\n      },\n  windowedWidth:0,\n  windowedHeight:0,\n  setFullscreenCanvasSize() {\n        // check if SDL is available\n        if (typeof SDL != \"undefined\") {\n          var flags = HEAPU32[((SDL.screen)>>2)];\n          flags = flags | 0x00800000; // set SDL_FULLSCREEN flag\n          HEAP32[((SDL.screen)>>2)] = flags;\n        }\n        Browser.updateCanvasDimensions(Module['canvas']);\n        Browser.updateResizeListeners();\n      },\n  setWindowedCanvasSize() {\n        // check if SDL is available\n        if (typeof SDL != \"undefined\") {\n          var flags = HEAPU32[((SDL.screen)>>2)];\n          flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag\n          HEAP32[((SDL.screen)>>2)] = flags;\n        }\n        Browser.updateCanvasDimensions(Module['canvas']);\n        Browser.updateResizeListeners();\n      },\n  updateCanvasDimensions(canvas, wNative, hNative) {\n        if (wNative && hNative) {\n          canvas.widthNative = wNative;\n          canvas.heightNative = hNative;\n        } else {\n          wNative = canvas.widthNative;\n          hNative = canvas.heightNative;\n        }\n        var w = wNative;\n        var h = hNative;\n        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {\n          if (w/h < Module['forcedAspectRatio']) {\n            w = Math.round(h * Module['forcedAspectRatio']);\n          } else {\n            h = Math.round(w / Module['forcedAspectRatio']);\n          }\n        }\n        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||\n             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\n             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {\n           var factor = Math.min(screen.width / w, screen.height / h);\n           w = Math.round(w * factor);\n           h = Math.round(h * factor);\n        }\n        if (Browser.resizeCanvas) {\n          if (canvas.width  != w) canvas.width  = w;\n          if (canvas.height != h) canvas.height = h;\n          if (typeof canvas.style != 'undefined') {\n            canvas.style.removeProperty( \"width\");\n            canvas.style.removeProperty(\"height\");\n          }\n        } else {\n          if (canvas.width  != wNative) canvas.width  = wNative;\n          if (canvas.height != hNative) canvas.height = hNative;\n          if (typeof canvas.style != 'undefined') {\n            if (w != wNative || h != hNative) {\n              canvas.style.setProperty( \"width\", w + \"px\", \"important\");\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\n            } else {\n              canvas.style.removeProperty( \"width\");\n              canvas.style.removeProperty(\"height\");\n            }\n          }\n        }\n      },\n  };\n  \n  var EGL = {\n  errorCode:12288,\n  defaultDisplayInitialized:false,\n  currentContext:0,\n  currentReadSurface:0,\n  currentDrawSurface:0,\n  contextAttributes:{\n  alpha:false,\n  depth:false,\n  stencil:false,\n  antialias:false,\n  },\n  stringCache:{\n  },\n  setErrorCode(code) {\n        EGL.errorCode = code;\n      },\n  chooseConfig(display, attribList, config, config_size, numConfigs) {\n        if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\n          EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n          return 0;\n        }\n  \n        if (attribList) {\n          // read attribList if it is non-null\n          for (;;) {\n            var param = HEAP32[((attribList)>>2)];\n            if (param == 0x3021 /*EGL_ALPHA_SIZE*/) {\n              var alphaSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.alpha = (alphaSize > 0);\n            } else if (param == 0x3025 /*EGL_DEPTH_SIZE*/) {\n              var depthSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.depth = (depthSize > 0);\n            } else if (param == 0x3026 /*EGL_STENCIL_SIZE*/) {\n              var stencilSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.stencil = (stencilSize > 0);\n            } else if (param == 0x3031 /*EGL_SAMPLES*/) {\n              var samples = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.antialias = (samples > 0);\n            } else if (param == 0x3032 /*EGL_SAMPLE_BUFFERS*/) {\n              var samples = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.antialias = (samples == 1);\n            } else if (param == 0x3100 /*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/) {\n              var requestedPriority = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.lowLatency = (requestedPriority != 0x3103 /*EGL_CONTEXT_PRIORITY_LOW_IMG*/);\n            } else if (param == 0x3038 /*EGL_NONE*/) {\n                break;\n            }\n            attribList += 8;\n          }\n        }\n  \n        if ((!config || !config_size) && !numConfigs) {\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n          return 0;\n        }\n        if (numConfigs) {\n          HEAP32[((numConfigs)>>2)] = 1; // Total number of supported configs: 1.\n        }\n        if (config && config_size > 0) {\n          HEAP32[((config)>>2)] = 62002;\n        }\n  \n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1;\n      },\n  };\n  var _eglBindAPI = (api) => {\n      if (api == 0x30A0 /* EGL_OPENGL_ES_API */) {\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1;\n      }\n      // if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {\n      EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n      return 0;\n    };\n\n  var _eglChooseConfig = (display, attrib_list, configs, config_size, numConfigs) => {\n      return EGL.chooseConfig(display, attrib_list, configs, config_size, numConfigs);\n    };\n\n  var webgl_enable_ANGLE_instanced_arrays = (ctx) => {\n      // Extension available in WebGL 1 from Firefox 26 and Google Chrome 30 onwards. Core feature in WebGL 2.\n      var ext = ctx.getExtension('ANGLE_instanced_arrays');\n      if (ext) {\n        ctx['vertexAttribDivisor'] = (index, divisor) => ext['vertexAttribDivisorANGLE'](index, divisor);\n        ctx['drawArraysInstanced'] = (mode, first, count, primcount) => ext['drawArraysInstancedANGLE'](mode, first, count, primcount);\n        ctx['drawElementsInstanced'] = (mode, count, type, indices, primcount) => ext['drawElementsInstancedANGLE'](mode, count, type, indices, primcount);\n        return 1;\n      }\n    };\n  \n  var webgl_enable_OES_vertex_array_object = (ctx) => {\n      // Extension available in WebGL 1 from Firefox 25 and WebKit 536.28/desktop Safari 6.0.3 onwards. Core feature in WebGL 2.\n      var ext = ctx.getExtension('OES_vertex_array_object');\n      if (ext) {\n        ctx['createVertexArray'] = () => ext['createVertexArrayOES']();\n        ctx['deleteVertexArray'] = (vao) => ext['deleteVertexArrayOES'](vao);\n        ctx['bindVertexArray'] = (vao) => ext['bindVertexArrayOES'](vao);\n        ctx['isVertexArray'] = (vao) => ext['isVertexArrayOES'](vao);\n        return 1;\n      }\n    };\n  \n  var webgl_enable_WEBGL_draw_buffers = (ctx) => {\n      // Extension available in WebGL 1 from Firefox 28 onwards. Core feature in WebGL 2.\n      var ext = ctx.getExtension('WEBGL_draw_buffers');\n      if (ext) {\n        ctx['drawBuffers'] = (n, bufs) => ext['drawBuffersWEBGL'](n, bufs);\n        return 1;\n      }\n    };\n  \n  var webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance = (ctx) =>\n      // Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.\n      !!(ctx.dibvbi = ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance'));\n  \n  var webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance = (ctx) => {\n      // Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.\n      return !!(ctx.mdibvbi = ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));\n    };\n  \n  var webgl_enable_WEBGL_multi_draw = (ctx) => {\n      // Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.\n      return !!(ctx.multiDrawWebgl = ctx.getExtension('WEBGL_multi_draw'));\n    };\n  \n  \n  var GL = {\n  counter:1,\n  buffers:[],\n  programs:[],\n  framebuffers:[],\n  renderbuffers:[],\n  textures:[],\n  shaders:[],\n  vaos:[],\n  contexts:[],\n  offscreenCanvases:{\n  },\n  queries:[],\n  samplers:[],\n  transformFeedbacks:[],\n  syncs:[],\n  byteSizeByTypeRoot:5120,\n  byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],\n  stringCache:{\n  },\n  stringiCache:{\n  },\n  unpackAlignment:4,\n  recordError:function recordError(errorCode) {\n        if (!GL.lastError) {\n          GL.lastError = errorCode;\n        }\n      },\n  getNewId:(table) => {\n        var ret = GL.counter++;\n        for (var i = table.length; i < ret; i++) {\n          table[i] = null;\n        }\n        return ret;\n      },\n  MAX_TEMP_BUFFER_SIZE:16777216,\n  numTempVertexBuffersPerSize:64,\n  log2ceilLookup:(i) => {\n        return 32 - Math.clz32(i === 0 ? 0 : i - 1);\n      },\n  generateTempBuffers:(quads, context) => {\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\n        context.tempVertexBufferCounters1 = [];\n        context.tempVertexBufferCounters2 = [];\n        context.tempVertexBufferCounters1.length = context.tempVertexBufferCounters2.length = largestIndex+1;\n        context.tempVertexBuffers1 = [];\n        context.tempVertexBuffers2 = [];\n        context.tempVertexBuffers1.length = context.tempVertexBuffers2.length = largestIndex+1;\n        context.tempIndexBuffers = [];\n        context.tempIndexBuffers.length = largestIndex+1;\n        for (var i = 0; i <= largestIndex; ++i) {\n          context.tempIndexBuffers[i] = null; // Created on-demand\n          context.tempVertexBufferCounters1[i] = context.tempVertexBufferCounters2[i] = 0;\n          var ringbufferLength = GL.numTempVertexBuffersPerSize;\n          context.tempVertexBuffers1[i] = [];\n          context.tempVertexBuffers2[i] = [];\n          var ringbuffer1 = context.tempVertexBuffers1[i];\n          var ringbuffer2 = context.tempVertexBuffers2[i];\n          ringbuffer1.length = ringbuffer2.length = ringbufferLength;\n          for (var j = 0; j < ringbufferLength; ++j) {\n            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand\n          }\n        }\n  \n        if (quads) {\n          // GL_QUAD indexes can be precalculated\n          context.tempQuadIndexBuffer = GLctx.createBuffer();\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, context.tempQuadIndexBuffer);\n          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;\n          var quadIndexes = new Uint16Array(numIndexes);\n          var i = 0, v = 0;\n          while (1) {\n            quadIndexes[i++] = v;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v+1;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v+2;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v+2;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v+3;\n            if (i >= numIndexes) break;\n            v += 4;\n          }\n          context.GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, quadIndexes, 0x88E4 /*GL_STATIC_DRAW*/);\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\n        }\n      },\n  getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {\n        var idx = GL.log2ceilLookup(sizeBytes);\n        var ringbuffer = GL.currentContext.tempVertexBuffers1[idx];\n        var nextFreeBufferIndex = GL.currentContext.tempVertexBufferCounters1[idx];\n        GL.currentContext.tempVertexBufferCounters1[idx] = (GL.currentContext.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);\n        var vbo = ringbuffer[nextFreeBufferIndex];\n        if (vbo) {\n          return vbo;\n        }\n        var prevVBO = GLctx.getParameter(0x8894 /*GL_ARRAY_BUFFER_BINDING*/);\n        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, ringbuffer[nextFreeBufferIndex]);\n        GLctx.bufferData(0x8892 /*GL_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, prevVBO);\n        return ringbuffer[nextFreeBufferIndex];\n      },\n  getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {\n        var idx = GL.log2ceilLookup(sizeBytes);\n        var ibo = GL.currentContext.tempIndexBuffers[idx];\n        if (ibo) {\n          return ibo;\n        }\n        var prevIBO = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\n        GL.currentContext.tempIndexBuffers[idx] = GLctx.createBuffer();\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, GL.currentContext.tempIndexBuffers[idx]);\n        GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, prevIBO);\n        return GL.currentContext.tempIndexBuffers[idx];\n      },\n  newRenderingFrameStarted:function newRenderingFrameStarted() {\n        if (!GL.currentContext) {\n          return;\n        }\n        var vb = GL.currentContext.tempVertexBuffers1;\n        GL.currentContext.tempVertexBuffers1 = GL.currentContext.tempVertexBuffers2;\n        GL.currentContext.tempVertexBuffers2 = vb;\n        vb = GL.currentContext.tempVertexBufferCounters1;\n        GL.currentContext.tempVertexBufferCounters1 = GL.currentContext.tempVertexBufferCounters2;\n        GL.currentContext.tempVertexBufferCounters2 = vb;\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\n        for (var i = 0; i <= largestIndex; ++i) {\n          GL.currentContext.tempVertexBufferCounters1[i] = 0;\n        }\n      },\n  getSource:(shader, count, string, length) => {\n        var source = '';\n        for (var i = 0; i < count; ++i) {\n          var len = length ? HEAP32[(((length)+(i*4))>>2)] : -1;\n          source += UTF8ToString(HEAP32[(((string)+(i*4))>>2)], len < 0 ? undefined : len);\n        }\n        return source;\n      },\n  calcBufLength:function calcBufLength(size, type, stride, count) {\n        if (stride > 0) {\n          return count * stride;  // XXXvlad this is not exactly correct I don't think\n        }\n        var typeSize = GL.byteSizeByType[type - GL.byteSizeByTypeRoot];\n        return size * typeSize * count;\n      },\n  usedTempBuffers:[],\n  preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count) {\n        GL.resetBufferBinding = false;\n  \n        // TODO: initial pass to detect ranges we need to upload, might not need an upload per attrib\n        for (var i = 0; i < GL.currentContext.maxVertexAttribs; ++i) {\n          var cb = GL.currentContext.clientBuffers[i];\n          if (!cb.clientside || !cb.enabled) continue;\n  \n          GL.resetBufferBinding = true;\n  \n          var size = GL.calcBufLength(cb.size, cb.type, cb.stride, count);\n          var buf = GL.getTempVertexBuffer(size);\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, buf);\n          GLctx.bufferSubData(0x8892 /*GL_ARRAY_BUFFER*/,\n                                   0,\n                                   HEAPU8.subarray(cb.ptr, cb.ptr + size));\n          cb.vertexAttribPointerAdaptor.call(GLctx, i, cb.size, cb.type, cb.normalized, cb.stride, 0);\n        }\n      },\n  postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings() {\n        if (GL.resetBufferBinding) {\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, GL.buffers[GLctx.currentArrayBufferBinding]);\n        }\n      },\n  createContext:(/** @type {HTMLCanvasElement} */ canvas, webGLContextAttributes) => {\n  \n        // BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL context on a canvas,\n        // calling .getContext() will always return that context independent of which 'webgl' or 'webgl2'\n        // context version was passed. See https://bugs.webkit.org/show_bug.cgi?id=222758 and\n        // https://github.com/emscripten-core/emscripten/issues/13295.\n        // TODO: Once the bug is fixed and shipped in Safari, adjust the Safari version field in above check.\n        if (!canvas.getContextSafariWebGL2Fixed) {\n          canvas.getContextSafariWebGL2Fixed = canvas.getContext;\n          /** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */\n          function fixedGetContext(ver, attrs) {\n            var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\n            return ((ver == 'webgl') == (gl instanceof WebGLRenderingContext)) ? gl : null;\n          }\n          canvas.getContext = fixedGetContext;\n        }\n  \n        var ctx =\n          (webGLContextAttributes.majorVersion > 1)\n          ?\n            canvas.getContext(\"webgl2\", webGLContextAttributes)\n          :\n          (canvas.getContext(\"webgl\", webGLContextAttributes)\n            // https://caniuse.com/#feat=webgl\n            );\n  \n        if (!ctx) return 0;\n  \n        var handle = GL.registerContext(ctx, webGLContextAttributes);\n  \n        return handle;\n      },\n  registerContext:(ctx, webGLContextAttributes) => {\n        // without pthreads a context is just an integer ID\n        var handle = GL.getNewId(GL.contexts);\n  \n        var context = {\n          handle,\n          attributes: webGLContextAttributes,\n          version: webGLContextAttributes.majorVersion,\n          GLctx: ctx\n        };\n  \n        // Store the created context object so that we can access the context given a canvas without having to pass the parameters again.\n        if (ctx.canvas) ctx.canvas.GLctxObject = context;\n        GL.contexts[handle] = context;\n        if (typeof webGLContextAttributes.enableExtensionsByDefault == 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {\n          GL.initExtensions(context);\n        }\n  \n        context.maxVertexAttribs = context.GLctx.getParameter(0x8869 /*GL_MAX_VERTEX_ATTRIBS*/);\n        context.clientBuffers = [];\n        for (var i = 0; i < context.maxVertexAttribs; i++) {\n          context.clientBuffers[i] = { enabled: false, clientside: false, size: 0, type: 0, normalized: 0, stride: 0, ptr: 0, vertexAttribPointerAdaptor: null };\n        }\n  \n        GL.generateTempBuffers(false, context);\n  \n        return handle;\n      },\n  makeContextCurrent:(contextHandle) => {\n  \n        GL.currentContext = GL.contexts[contextHandle]; // Active Emscripten GL layer context object.\n        Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx; // Active WebGL context object.\n        return !(contextHandle && !GLctx);\n      },\n  getContext:(contextHandle) => {\n        return GL.contexts[contextHandle];\n      },\n  deleteContext:(contextHandle) => {\n        if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = null;\n        if (typeof JSEvents == 'object') JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas); // Release all JS event handlers on the DOM element that the GL context is associated with since the context is now deleted.\n        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined; // Make sure the canvas object no longer refers to the context object so there are no GC surprises.\n        GL.contexts[contextHandle] = null;\n      },\n  initExtensions:(context) => {\n        // If this function is called without a specific context object, init the extensions of the currently active context.\n        if (!context) context = GL.currentContext;\n  \n        if (context.initExtensionsDone) return;\n        context.initExtensionsDone = true;\n  \n        var GLctx = context.GLctx;\n  \n        // Detect the presence of a few extensions manually, ction GL interop layer itself will need to know if they exist.\n  \n        // Extensions that are only available in WebGL 1 (the calls will be no-ops if called on a WebGL 2 context active)\n        webgl_enable_ANGLE_instanced_arrays(GLctx);\n        webgl_enable_OES_vertex_array_object(GLctx);\n        webgl_enable_WEBGL_draw_buffers(GLctx);\n        // Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)\n        webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);\n        webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);\n  \n        // On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative\n        // that's based on core APIs, and exposes only the queryCounterEXT()\n        // entrypoint.\n        if (context.version >= 2) {\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\");\n        }\n  \n        // However, Firefox exposes the WebGL 1 version on WebGL 2 as well and\n        // thus we look for the WebGL 1 version again if the WebGL 2 version\n        // isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882\n        if (context.version < 2 || !GLctx.disjointTimerQueryExt)\n        {\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query\");\n        }\n  \n        webgl_enable_WEBGL_multi_draw(GLctx);\n  \n        // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\n        var exts = GLctx.getSupportedExtensions() || [];\n        exts.forEach((ext) => {\n          // WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders are not enabled by default.\n          if (!ext.includes('lose_context') && !ext.includes('debug')) {\n            // Call .getExtension() to enable that extension permanently.\n            GLctx.getExtension(ext);\n          }\n        });\n      },\n  };\n  \n  var _eglCreateContext = (display, config, hmm, contextAttribs) => {\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n  \n      // EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.\n      // So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.\n      var glesContextVersion = 1;\n      for (;;) {\n        var param = HEAP32[((contextAttribs)>>2)];\n        if (param == 0x3098 /*EGL_CONTEXT_CLIENT_VERSION*/) {\n          glesContextVersion = HEAP32[(((contextAttribs)+(4))>>2)];\n        } else if (param == 0x3038 /*EGL_NONE*/) {\n          break;\n        } else {\n          /* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */\n          EGL.setErrorCode(0x3004 /*EGL_BAD_ATTRIBUTE*/);\n          return 0;\n        }\n        contextAttribs += 8;\n      }\n      if (glesContextVersion < 2 || glesContextVersion > 3) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0; /* EGL_NO_CONTEXT */\n      }\n  \n      EGL.contextAttributes.majorVersion = glesContextVersion - 1; // WebGL 1 is GLES 2, WebGL2 is GLES3\n      EGL.contextAttributes.minorVersion = 0;\n  \n      EGL.context = GL.createContext(Module['canvas'], EGL.contextAttributes);\n  \n      if (EGL.context != 0) {\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n  \n        // Run callbacks so that GL emulation works\n        GL.makeContextCurrent(EGL.context);\n        Module.useWebGL = true;\n        Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });\n  \n        // Note: This function only creates a context, but it shall not make it active.\n        GL.makeContextCurrent(null);\n        return 62004; // Magic ID for Emscripten EGLContext\n      } else {\n        EGL.setErrorCode(0x3009 /* EGL_BAD_MATCH */); // By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.\n        return 0; /* EGL_NO_CONTEXT */\n      }\n    };\n\n  var _eglCreateWindowSurface = (display, config, win, attrib_list) => {\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0;\n      }\n      // TODO: Examine attrib_list! Parameters that can be present there are:\n      // - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)\n      // - EGL_VG_COLORSPACE (can't be set)\n      // - EGL_VG_ALPHA_FORMAT (can't be set)\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 62006; /* Magic ID for Emscripten 'default surface' */\n    };\n\n  \n  var _eglDestroyContext = (display, context) => {\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (context != 62004 /* Magic ID for Emscripten EGLContext */) {\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\n        return 0;\n      }\n  \n      GL.deleteContext(EGL.context);\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      if (EGL.currentContext == context) {\n        EGL.currentContext = 0;\n      }\n      return 1 /* EGL_TRUE */;\n    };\n\n  var _eglDestroySurface = (display, surface) => {\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (surface != 62006 /* Magic ID for the only EGLSurface supported by Emscripten */) {\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\n        return 1;\n      }\n      if (EGL.currentReadSurface == surface) {\n        EGL.currentReadSurface = 0;\n      }\n      if (EGL.currentDrawSurface == surface) {\n        EGL.currentDrawSurface = 0;\n      }\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1; /* Magic ID for Emscripten 'default surface' */\n    };\n\n  var _eglGetConfigAttrib = (display, config, attribute, value) => {\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (config != 62002 /* Magic ID for the only EGLConfig supported by Emscripten */) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0;\n      }\n      if (!value) {\n        EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n        return 0;\n      }\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      switch (attribute) {\n      case 0x3020: // EGL_BUFFER_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 32 : 24;\n        return 1;\n      case 0x3021: // EGL_ALPHA_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 8 : 0;\n        return 1;\n      case 0x3022: // EGL_BLUE_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3023: // EGL_GREEN_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3024: // EGL_RED_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3025: // EGL_DEPTH_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.depth ? 24 : 0;\n        return 1;\n      case 0x3026: // EGL_STENCIL_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.stencil ? 8 : 0;\n        return 1;\n      case 0x3027: // EGL_CONFIG_CAVEAT\n        // We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3028: // EGL_CONFIG_ID\n        HEAP32[((value)>>2)] = 62002;\n        return 1;\n      case 0x3029: // EGL_LEVEL\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302A: // EGL_MAX_PBUFFER_HEIGHT\n        HEAP32[((value)>>2)] = 4096;\n        return 1;\n      case 0x302B: // EGL_MAX_PBUFFER_PIXELS\n        HEAP32[((value)>>2)] = 16777216;\n        return 1;\n      case 0x302C: // EGL_MAX_PBUFFER_WIDTH\n        HEAP32[((value)>>2)] = 4096;\n        return 1;\n      case 0x302D: // EGL_NATIVE_RENDERABLE\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302E: // EGL_NATIVE_VISUAL_ID\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302F: // EGL_NATIVE_VISUAL_TYPE\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3031: // EGL_SAMPLES\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 4 : 0;\n        return 1;\n      case 0x3032: // EGL_SAMPLE_BUFFERS\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 1 : 0;\n        return 1;\n      case 0x3033: // EGL_SURFACE_TYPE\n        HEAP32[((value)>>2)] = 0x4;\n        return 1;\n      case 0x3034: // EGL_TRANSPARENT_TYPE\n        // If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3035: // EGL_TRANSPARENT_BLUE_VALUE\n      case 0x3036: // EGL_TRANSPARENT_GREEN_VALUE\n      case 0x3037: // EGL_TRANSPARENT_RED_VALUE\n        // \"If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined.\"\n        HEAP32[((value)>>2)] = -1;\n        return 1;\n      case 0x3039: // EGL_BIND_TO_TEXTURE_RGB\n      case 0x303A: // EGL_BIND_TO_TEXTURE_RGBA\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303B: // EGL_MIN_SWAP_INTERVAL\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303C: // EGL_MAX_SWAP_INTERVAL\n        HEAP32[((value)>>2)] = 1;\n        return 1;\n      case 0x303D: // EGL_LUMINANCE_SIZE\n      case 0x303E: // EGL_ALPHA_MASK_SIZE\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303F: // EGL_COLOR_BUFFER_TYPE\n        // EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.\n        HEAP32[((value)>>2)] = 0x308E;\n        return 1;\n      case 0x3040: // EGL_RENDERABLE_TYPE\n        // A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.\n        HEAP32[((value)>>2)] = 0x4;\n        return 1;\n      case 0x3042: // EGL_CONFORMANT\n        // \"EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API.\"\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      default:\n        EGL.setErrorCode(0x3004 /* EGL_BAD_ATTRIBUTE */);\n        return 0;\n      }\n    };\n\n  var _eglGetDisplay = (nativeDisplayType) => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      // Note: As a 'conformant' implementation of EGL, we would prefer to init here only if the user\n      //       calls this function with EGL_DEFAULT_DISPLAY. Other display IDs would be preferred to be unsupported\n      //       and EGL_NO_DISPLAY returned. Uncomment the following code lines to do this.\n      // Instead, an alternative route has been preferred, namely that the Emscripten EGL implementation\n      // \"emulates\" X11, and eglGetDisplay is expected to accept/receive a pointer to an X11 Display object.\n      // Therefore, be lax and allow anything to be passed in, and return the magic handle to our default EGLDisplay object.\n  \n  //    if (nativeDisplayType == 0 /* EGL_DEFAULT_DISPLAY */) {\n          return 62000; // Magic ID for Emscripten 'default display'\n  //    }\n  //    else\n  //      return 0; // EGL_NO_DISPLAY\n    };\n\n  var _eglGetError = () => {\n      return EGL.errorCode;\n    };\n\n  var _eglInitialize = (display, majorVersion, minorVersion) => {\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (majorVersion) {\n        HEAP32[((majorVersion)>>2)] = 1; // Advertise EGL Major version: '1'\n      }\n      if (minorVersion) {\n        HEAP32[((minorVersion)>>2)] = 4; // Advertise EGL Minor version: '4'\n      }\n      EGL.defaultDisplayInitialized = true;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  \n  var _eglMakeCurrent = (display, draw, read, context) => {\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0 /* EGL_FALSE */;\n      }\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\n      if (context != 0 && context != 62004 /* Magic ID for Emscripten EGLContext */) {\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\n        return 0;\n      }\n      if ((read != 0 && read != 62006) || (draw != 0 && draw != 62006 /* Magic ID for Emscripten 'default surface' */)) {\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\n        return 0;\n      }\n  \n      GL.makeContextCurrent(context ? EGL.context : null);\n  \n      EGL.currentContext = context;\n      EGL.currentDrawSurface = draw;\n      EGL.currentReadSurface = read;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1 /* EGL_TRUE */;\n    };\n\n  \n  var _eglQueryString = (display, name) => {\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      if (EGL.stringCache[name]) return EGL.stringCache[name];\n      var ret;\n      switch (name) {\n        case 0x3053 /* EGL_VENDOR */: ret = stringToNewUTF8(\"Emscripten\"); break;\n        case 0x3054 /* EGL_VERSION */: ret = stringToNewUTF8(\"1.4 Emscripten EGL\"); break;\n        case 0x3055 /* EGL_EXTENSIONS */:  ret = stringToNewUTF8(\"\"); break; // Currently not supporting any EGL extensions.\n        case 0x308D /* EGL_CLIENT_APIS */: ret = stringToNewUTF8(\"OpenGL_ES\"); break;\n        default:\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n          return 0;\n      }\n      EGL.stringCache[name] = ret;\n      return ret;\n    };\n\n  var _eglSwapBuffers = (dpy, surface) => {\n  \n      if (!EGL.defaultDisplayInitialized) {\n        EGL.setErrorCode(0x3001 /* EGL_NOT_INITIALIZED */);\n      } else if (!Module.ctx) {\n        EGL.setErrorCode(0x3002 /* EGL_BAD_ACCESS */);\n      } else if (Module.ctx.isContextLost()) {\n        EGL.setErrorCode(0x300E /* EGL_CONTEXT_LOST */);\n      } else {\n        // According to documentation this does an implicit flush.\n        // Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871\n        // the flush was removed since this _may_ result in slowing code down.\n        //_glFlush();\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1 /* EGL_TRUE */;\n      }\n      return 0 /* EGL_FALSE */;\n    };\n\n  \n  var _eglSwapInterval = (display, interval) => {\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (interval == 0) _emscripten_set_main_loop_timing(0, 0);\n      else _emscripten_set_main_loop_timing(1, interval);\n  \n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  var _eglTerminate = (display) => {\n      if (display != 62000 /* Magic ID for Emscripten 'default display' */) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      EGL.currentContext = 0;\n      EGL.currentReadSurface = 0;\n      EGL.currentDrawSurface = 0;\n      EGL.defaultDisplayInitialized = false;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  \n  /** @suppress {duplicate } */\n  var _eglWaitClient = () => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n  var _eglWaitGL = _eglWaitClient;\n\n  var _eglWaitNative = (nativeEngineId) => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  var readEmAsmArgsArray = [];\n  var readEmAsmArgs = (sigPtr, buf) => {\n      readEmAsmArgsArray.length = 0;\n      var ch;\n      // Most arguments are i32s, so shift the buffer pointer so it is a plain\n      // index into HEAP32.\n      while (ch = HEAPU8[sigPtr++]) {\n        // Floats are always passed as doubles, so all types except for 'i'\n        // are 8 bytes and require alignment.\n        buf += (ch != 105) && buf % 8 ? 4 : 0;\n        readEmAsmArgsArray.push(\n          ch == 105 ?\n            HEAP32[((buf)>>2)] :\n            HEAPF64[((buf)>>3)]\n        );\n        buf += ch == 105 ? 4 : 8;\n      }\n      return readEmAsmArgsArray;\n    };\n  var runEmAsmFunction = (code, sigPtr, argbuf) => {\n      var args = readEmAsmArgs(sigPtr, argbuf);\n      return ASM_CONSTS[code].apply(null, args);\n    };\n  var _emscripten_asm_const_int = (code, sigPtr, argbuf) => {\n      return runEmAsmFunction(code, sigPtr, argbuf);\n    };\n\n  var runMainThreadEmAsm = (code, sigPtr, argbuf, sync) => {\n      var args = readEmAsmArgs(sigPtr, argbuf);\n      return ASM_CONSTS[code].apply(null, args);\n    };\n  var _emscripten_asm_const_int_sync_on_main_thread = (code, sigPtr, argbuf) => {\n      return runMainThreadEmAsm(code, sigPtr, argbuf, 1);\n    };\n\n  var _emscripten_date_now = () => Date.now();\n\n  var withStackSave = (f) => {\n      var stack = stackSave();\n      var ret = f();\n      stackRestore(stack);\n      return ret;\n    };\n  var JSEvents = {\n  inEventHandler:0,\n  removeAllEventListeners() {\n        for (var i = JSEvents.eventHandlers.length-1; i >= 0; --i) {\n          JSEvents._removeHandler(i);\n        }\n        JSEvents.eventHandlers = [];\n        JSEvents.deferredCalls = [];\n      },\n  registerRemoveEventListeners() {\n        if (!JSEvents.removeEventListenersRegistered) {\n          __ATEXIT__.push(JSEvents.removeAllEventListeners);\n          JSEvents.removeEventListenersRegistered = true;\n        }\n      },\n  deferredCalls:[],\n  deferCall(targetFunction, precedence, argsList) {\n        function arraysHaveEqualContent(arrA, arrB) {\n          if (arrA.length != arrB.length) return false;\n  \n          for (var i in arrA) {\n            if (arrA[i] != arrB[i]) return false;\n          }\n          return true;\n        }\n        // Test if the given call was already queued, and if so, don't add it again.\n        for (var i in JSEvents.deferredCalls) {\n          var call = JSEvents.deferredCalls[i];\n          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\n            return;\n          }\n        }\n        JSEvents.deferredCalls.push({\n          targetFunction,\n          precedence,\n          argsList\n        });\n  \n        JSEvents.deferredCalls.sort((x,y) => x.precedence < y.precedence);\n      },\n  removeDeferredCalls(targetFunction) {\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n          if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\n            JSEvents.deferredCalls.splice(i, 1);\n            --i;\n          }\n        }\n      },\n  canPerformEventHandlerRequests() {\n        if (navigator.userActivation) {\n          // Verify against transient activation status from UserActivation API\n          // whether it is possible to perform a request here without needing to defer. See\n          // https://developer.mozilla.org/en-US/docs/Web/Security/User_activation#transient_activation\n          // and https://caniuse.com/mdn-api_useractivation\n          // At the time of writing, Firefox does not support this API: https://bugzilla.mozilla.org/show_bug.cgi?id=1791079\n          return navigator.userActivation.isActive;\n        }\n  \n        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\n      },\n  runDeferredCalls() {\n        if (!JSEvents.canPerformEventHandlerRequests()) {\n          return;\n        }\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n          var call = JSEvents.deferredCalls[i];\n          JSEvents.deferredCalls.splice(i, 1);\n          --i;\n          call.targetFunction.apply(null, call.argsList);\n        }\n      },\n  eventHandlers:[],\n  removeAllHandlersOnTarget:(target, eventTypeString) => {\n        for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n          if (JSEvents.eventHandlers[i].target == target &&\n            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\n             JSEvents._removeHandler(i--);\n           }\n        }\n      },\n  _removeHandler(i) {\n        var h = JSEvents.eventHandlers[i];\n        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\n        JSEvents.eventHandlers.splice(i, 1);\n      },\n  registerOrRemoveHandler(eventHandler) {\n        if (!eventHandler.target) {\n          return -4;\n        }\n        var jsEventHandler = function jsEventHandler(event) {\n          // Increment nesting count for the event handler.\n          ++JSEvents.inEventHandler;\n          JSEvents.currentEventHandler = eventHandler;\n          // Process any old deferred calls the user has placed.\n          JSEvents.runDeferredCalls();\n          // Process the actual event, calls back to user C code handler.\n          eventHandler.handlerFunc(event);\n          // Process any new deferred calls that were placed right now from this event handler.\n          JSEvents.runDeferredCalls();\n          // Out of event handler - restore nesting count.\n          --JSEvents.inEventHandler;\n        };\n  \n        if (eventHandler.callbackfunc) {\n          eventHandler.eventListenerFunc = jsEventHandler;\n          eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\n          JSEvents.eventHandlers.push(eventHandler);\n          JSEvents.registerRemoveEventListeners();\n        } else {\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n            if (JSEvents.eventHandlers[i].target == eventHandler.target\n             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\n               JSEvents._removeHandler(i--);\n             }\n          }\n        }\n        return 0;\n      },\n  getNodeNameForTarget(target) {\n        if (!target) return '';\n        if (target == window) return '#window';\n        if (target == screen) return '#screen';\n        return (target && target.nodeName) ? target.nodeName : '';\n      },\n  fullscreenEnabled() {\n        return document.fullscreenEnabled\n        // Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.\n        // TODO: If Safari at some point ships with unprefixed version, update the version check above.\n        || document.webkitFullscreenEnabled\n         ;\n      },\n  };\n  \n  var setLetterbox = (element, topBottom, leftRight) => {\n        // Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.\n        element.style.paddingLeft = element.style.paddingRight = leftRight + 'px';\n        element.style.paddingTop = element.style.paddingBottom = topBottom + 'px';\n    };\n  \n  var hideEverythingExceptGivenElement = (onlyVisibleElement) => {\n      var child = onlyVisibleElement;\n      var parent = child.parentNode;\n      var hiddenElements = [];\n      while (child != document.body) {\n        var children = parent.children;\n        for (var i = 0; i < children.length; ++i) {\n          if (children[i] != child) {\n            hiddenElements.push({ node: children[i], displayState: children[i].style.display });\n            children[i].style.display = 'none';\n          }\n        }\n        child = parent;\n        parent = parent.parentNode;\n      }\n      return hiddenElements;\n    };\n  \n  var restoreOldWindowedStyle = null;\n  \n  \n  \n  var maybeCStringToJsString = (cString) => {\n      // \"cString > 2\" checks if the input is a number, and isn't of the special\n      // values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).\n      // In other words, if cString > 2 then it's a pointer to a valid place in\n      // memory, and points to a C string.\n      return cString > 2 ? UTF8ToString(cString) : cString;\n    };\n  \n  var specialHTMLTargets = [0, document, window];\n  var findEventTarget = (target) => {\n      target = maybeCStringToJsString(target);\n      var domElement = specialHTMLTargets[target] || document.querySelector(target);\n      return domElement;\n    };\n  var findCanvasEventTarget = (target) => findEventTarget(target);\n  var _emscripten_get_canvas_element_size = (target, width, height) => {\n      var canvas = findCanvasEventTarget(target);\n      if (!canvas) return -4;\n      HEAP32[((width)>>2)] = canvas.width;\n      HEAP32[((height)>>2)] = canvas.height;\n    };\n  \n  \n  \n  var stringToUTF8OnStack = (str) => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = stackAlloc(size);\n      stringToUTF8(str, ret, size);\n      return ret;\n    };\n  var getCanvasElementSize = (target) => withStackSave(() => {\n      var w = stackAlloc(8);\n      var h = w + 4;\n  \n      var targetInt = stringToUTF8OnStack(target.id);\n      var ret = _emscripten_get_canvas_element_size(targetInt, w, h);\n      var size = [HEAP32[((w)>>2)], HEAP32[((h)>>2)]];\n      return size;\n    });\n  \n  \n  var _emscripten_set_canvas_element_size = (target, width, height) => {\n      var canvas = findCanvasEventTarget(target);\n      if (!canvas) return -4;\n      canvas.width = width;\n      canvas.height = height;\n      return 0;\n    };\n  \n  \n  var setCanvasElementSize = (target, width, height) => {\n      if (!target.controlTransferredOffscreen) {\n        target.width = width;\n        target.height = height;\n      } else {\n        // This function is being called from high-level JavaScript code instead of asm.js/Wasm,\n        // and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.\n        withStackSave(() => {\n          var targetInt = stringToUTF8OnStack(target.id);\n          _emscripten_set_canvas_element_size(targetInt, width, height);\n        });\n      }\n    };\n  var registerRestoreOldStyle = (canvas) => {\n      var canvasSize = getCanvasElementSize(canvas);\n      var oldWidth = canvasSize[0];\n      var oldHeight = canvasSize[1];\n      var oldCssWidth = canvas.style.width;\n      var oldCssHeight = canvas.style.height;\n      var oldBackgroundColor = canvas.style.backgroundColor; // Chrome reads color from here.\n      var oldDocumentBackgroundColor = document.body.style.backgroundColor; // IE11 reads color from here.\n      // Firefox always has black background color.\n      var oldPaddingLeft = canvas.style.paddingLeft; // Chrome, FF, Safari\n      var oldPaddingRight = canvas.style.paddingRight;\n      var oldPaddingTop = canvas.style.paddingTop;\n      var oldPaddingBottom = canvas.style.paddingBottom;\n      var oldMarginLeft = canvas.style.marginLeft; // IE11\n      var oldMarginRight = canvas.style.marginRight;\n      var oldMarginTop = canvas.style.marginTop;\n      var oldMarginBottom = canvas.style.marginBottom;\n      var oldDocumentBodyMargin = document.body.style.margin;\n      var oldDocumentOverflow = document.documentElement.style.overflow; // Chrome, Firefox\n      var oldDocumentScroll = document.body.scroll; // IE\n      var oldImageRendering = canvas.style.imageRendering;\n  \n      function restoreOldStyle() {\n        var fullscreenElement = document.fullscreenElement\n          || document.webkitFullscreenElement\n          ;\n        if (!fullscreenElement) {\n          document.removeEventListener('fullscreenchange', restoreOldStyle);\n  \n          // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n          // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n          document.removeEventListener('webkitfullscreenchange', restoreOldStyle);\n  \n          setCanvasElementSize(canvas, oldWidth, oldHeight);\n  \n          canvas.style.width = oldCssWidth;\n          canvas.style.height = oldCssHeight;\n          canvas.style.backgroundColor = oldBackgroundColor; // Chrome\n          // IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color\n          // before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user\n          // had explicitly set so subsequent fullscreen transitions would not set background color properly.\n          if (!oldDocumentBackgroundColor) document.body.style.backgroundColor = 'white';\n          document.body.style.backgroundColor = oldDocumentBackgroundColor; // IE11\n          canvas.style.paddingLeft = oldPaddingLeft; // Chrome, FF, Safari\n          canvas.style.paddingRight = oldPaddingRight;\n          canvas.style.paddingTop = oldPaddingTop;\n          canvas.style.paddingBottom = oldPaddingBottom;\n          canvas.style.marginLeft = oldMarginLeft; // IE11\n          canvas.style.marginRight = oldMarginRight;\n          canvas.style.marginTop = oldMarginTop;\n          canvas.style.marginBottom = oldMarginBottom;\n          document.body.style.margin = oldDocumentBodyMargin;\n          document.documentElement.style.overflow = oldDocumentOverflow; // Chrome, Firefox\n          document.body.scroll = oldDocumentScroll; // IE\n          canvas.style.imageRendering = oldImageRendering;\n          if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, oldWidth, oldHeight);\n  \n          if (currentFullscreenStrategy.canvasResizedCallback) {\n            ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\n          }\n        }\n      }\n      document.addEventListener('fullscreenchange', restoreOldStyle);\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n      document.addEventListener('webkitfullscreenchange', restoreOldStyle);\n      return restoreOldStyle;\n    };\n  \n  var restoreHiddenElements = (hiddenElements) => {\n      for (var i = 0; i < hiddenElements.length; ++i) {\n        hiddenElements[i].node.style.display = hiddenElements[i].displayState;\n      }\n    };\n  \n  var currentFullscreenStrategy = {\n  };\n  \n  \n  \n  \n  \n  \n  /** @suppress {checkTypes} */\n  var jstoi_q = (str) => parseInt(str);\n  var softFullscreenResizeWebGLRenderTarget = () => {\n      var dpr = devicePixelRatio;\n      var inHiDPIFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode == 2;\n      var inAspectRatioFixedFullscreenMode = currentFullscreenStrategy.scaleMode == 2;\n      var inPixelPerfectFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode != 0;\n      var inCenteredWithoutScalingFullscreenMode = currentFullscreenStrategy.scaleMode == 3;\n      var screenWidth = inHiDPIFullscreenMode ? Math.round(innerWidth*dpr) : innerWidth;\n      var screenHeight = inHiDPIFullscreenMode ? Math.round(innerHeight*dpr) : innerHeight;\n      var w = screenWidth;\n      var h = screenHeight;\n      var canvas = currentFullscreenStrategy.target;\n      var canvasSize = getCanvasElementSize(canvas);\n      var x = canvasSize[0];\n      var y = canvasSize[1];\n      var topMargin;\n  \n      if (inAspectRatioFixedFullscreenMode) {\n        if (w*y < x*h) h = (w * y / x) | 0;\n        else if (w*y > x*h) w = (h * x / y) | 0;\n        topMargin = ((screenHeight - h) / 2) | 0;\n      }\n  \n      if (inPixelPerfectFullscreenMode) {\n        setCanvasElementSize(canvas, w, h);\n        if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, w, h);\n      }\n  \n      // Back to CSS pixels.\n      if (inHiDPIFullscreenMode) {\n        topMargin /= dpr;\n        w /= dpr;\n        h /= dpr;\n        // Round to nearest 4 digits of precision.\n        w = Math.round(w*1e4)/1e4;\n        h = Math.round(h*1e4)/1e4;\n        topMargin = Math.round(topMargin*1e4)/1e4;\n      }\n  \n      if (inCenteredWithoutScalingFullscreenMode) {\n        var t = (innerHeight - jstoi_q(canvas.style.height)) / 2;\n        var b = (innerWidth - jstoi_q(canvas.style.width)) / 2;\n        setLetterbox(canvas, t, b);\n      } else {\n        canvas.style.width = w + 'px';\n        canvas.style.height = h + 'px';\n        var b = (innerWidth - w) / 2;\n        setLetterbox(canvas, topMargin, b);\n      }\n  \n      if (!inCenteredWithoutScalingFullscreenMode && currentFullscreenStrategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\n      }\n    };\n  \n  \n  \n  \n  \n  \n  \n  var getBoundingClientRect = (e) => specialHTMLTargets.indexOf(e) < 0 ? e.getBoundingClientRect() : {'left':0,'top':0};\n  var JSEvents_resizeCanvasForFullscreen = (target, strategy) => {\n      var restoreOldStyle = registerRestoreOldStyle(target);\n      var cssWidth = strategy.softFullscreen ? innerWidth : screen.width;\n      var cssHeight = strategy.softFullscreen ? innerHeight : screen.height;\n      var rect = getBoundingClientRect(target);\n      var windowedCssWidth = rect.width;\n      var windowedCssHeight = rect.height;\n      var canvasSize = getCanvasElementSize(target);\n      var windowedRttWidth = canvasSize[0];\n      var windowedRttHeight = canvasSize[1];\n  \n      if (strategy.scaleMode == 3) {\n        setLetterbox(target, (cssHeight - windowedCssHeight) / 2, (cssWidth - windowedCssWidth) / 2);\n        cssWidth = windowedCssWidth;\n        cssHeight = windowedCssHeight;\n      } else if (strategy.scaleMode == 2) {\n        if (cssWidth*windowedRttHeight < windowedRttWidth*cssHeight) {\n          var desiredCssHeight = windowedRttHeight * cssWidth / windowedRttWidth;\n          setLetterbox(target, (cssHeight - desiredCssHeight) / 2, 0);\n          cssHeight = desiredCssHeight;\n        } else {\n          var desiredCssWidth = windowedRttWidth * cssHeight / windowedRttHeight;\n          setLetterbox(target, 0, (cssWidth - desiredCssWidth) / 2);\n          cssWidth = desiredCssWidth;\n        }\n      }\n  \n      // If we are adding padding, must choose a background color or otherwise Chrome will give the\n      // padding a default white color. Do it only if user has not customized their own background color.\n      if (!target.style.backgroundColor) target.style.backgroundColor = 'black';\n      // IE11 does the same, but requires the color to be set in the document body.\n      if (!document.body.style.backgroundColor) document.body.style.backgroundColor = 'black'; // IE11\n      // Firefox always shows black letterboxes independent of style color.\n  \n      target.style.width = cssWidth + 'px';\n      target.style.height = cssHeight + 'px';\n  \n      if (strategy.filteringMode == 1) {\n        target.style.imageRendering = 'optimizeSpeed';\n        target.style.imageRendering = '-moz-crisp-edges';\n        target.style.imageRendering = '-o-crisp-edges';\n        target.style.imageRendering = '-webkit-optimize-contrast';\n        target.style.imageRendering = 'optimize-contrast';\n        target.style.imageRendering = 'crisp-edges';\n        target.style.imageRendering = 'pixelated';\n      }\n  \n      var dpiScale = (strategy.canvasResolutionScaleMode == 2) ? devicePixelRatio : 1;\n      if (strategy.canvasResolutionScaleMode != 0) {\n        var newWidth = (cssWidth * dpiScale)|0;\n        var newHeight = (cssHeight * dpiScale)|0;\n        setCanvasElementSize(target, newWidth, newHeight);\n        if (target.GLctxObject) target.GLctxObject.GLctx.viewport(0, 0, newWidth, newHeight);\n      }\n      return restoreOldStyle;\n    };\n  \n  var _emscripten_enter_soft_fullscreen = (target, fullscreenStrategy) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      var strategy = {\n          scaleMode: HEAP32[((fullscreenStrategy)>>2)],\n          canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\n          filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\n          canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\n          canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)],\n          target,\n          softFullscreen: true\n      };\n  \n      var restoreOldStyle = JSEvents_resizeCanvasForFullscreen(target, strategy);\n  \n      document.documentElement.style.overflow = 'hidden';  // Firefox, Chrome\n      document.body.scroll = \"no\"; // IE11\n      document.body.style.margin = '0px'; // Override default document margin area on all browsers.\n  \n      var hiddenElements = hideEverythingExceptGivenElement(target);\n  \n      function restoreWindowedState() {\n        restoreOldStyle();\n        restoreHiddenElements(hiddenElements);\n        removeEventListener('resize', softFullscreenResizeWebGLRenderTarget);\n        if (strategy.canvasResizedCallback) {\n          ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\n        }\n        currentFullscreenStrategy = 0;\n      }\n      restoreOldWindowedStyle = restoreWindowedState;\n      currentFullscreenStrategy = strategy;\n      addEventListener('resize', softFullscreenResizeWebGLRenderTarget);\n  \n      // Inform the caller that the canvas size has changed.\n      if (strategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\n      }\n  \n      return 0;\n    };\n\n  \n  \n  \n  var JSEvents_requestFullscreen = (target, strategy) => {\n      // EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.\n      if (strategy.scaleMode != 0 || strategy.canvasResolutionScaleMode != 0) {\n        JSEvents_resizeCanvasForFullscreen(target, strategy);\n      }\n  \n      if (target.requestFullscreen) {\n        target.requestFullscreen();\n      } else if (target.webkitRequestFullscreen) {\n        target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      } else {\n        return JSEvents.fullscreenEnabled() ? -3 : -1;\n      }\n  \n      currentFullscreenStrategy = strategy;\n  \n      if (strategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\n      }\n  \n      return 0;\n    };\n  \n  var _emscripten_exit_fullscreen = () => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      // Make sure no queued up calls will fire after this.\n      JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);\n  \n      var d = specialHTMLTargets[1];\n      if (d.exitFullscreen) {\n        d.fullscreenElement && d.exitFullscreen();\n      } else if (d.webkitExitFullscreen) {\n        d.webkitFullscreenElement && d.webkitExitFullscreen();\n      } else {\n        return -1;\n      }\n  \n      return 0;\n    };\n\n  \n  var requestPointerLock = (target) => {\n      if (target.requestPointerLock) {\n        target.requestPointerLock();\n      } else {\n        // document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,\n        // or if the whole browser just doesn't support the feature.\n        if (document.body.requestPointerLock\n          ) {\n          return -3;\n        }\n        return -1;\n      }\n      return 0;\n    };\n  var _emscripten_exit_pointerlock = () => {\n      // Make sure no queued up calls will fire after this.\n      JSEvents.removeDeferredCalls(requestPointerLock);\n  \n      if (document.exitPointerLock) {\n        document.exitPointerLock();\n      } else {\n        return -1;\n      }\n      return 0;\n    };\n\n  var _emscripten_exit_soft_fullscreen = () => {\n      if (restoreOldWindowedStyle) restoreOldWindowedStyle();\n      restoreOldWindowedStyle = null;\n  \n      return 0;\n    };\n\n  var _emscripten_get_device_pixel_ratio = () => {\n      return devicePixelRatio;\n    };\n\n  \n  \n  var _emscripten_get_element_css_size = (target, width, height) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      var rect = getBoundingClientRect(target);\n      HEAPF64[((width)>>3)] = rect.width;\n      HEAPF64[((height)>>3)] = rect.height;\n  \n      return 0;\n    };\n\n  \n  var fillGamepadEventData = (eventStruct, e) => {\n      HEAPF64[((eventStruct)>>3)] = e.timestamp;\n      for (var i = 0; i < e.axes.length; ++i) {\n        HEAPF64[(((eventStruct+i*8)+(16))>>3)] = e.axes[i];\n      }\n      for (var i = 0; i < e.buttons.length; ++i) {\n        if (typeof e.buttons[i] == 'object') {\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i].value;\n        } else {\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i];\n        }\n      }\n      for (var i = 0; i < e.buttons.length; ++i) {\n        if (typeof e.buttons[i] == 'object') {\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i].pressed;\n        } else {\n          // Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:\n          /** @suppress {checkTypes} */\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i] == 1;\n        }\n      }\n      HEAP32[(((eventStruct)+(1296))>>2)] = e.connected;\n      HEAP32[(((eventStruct)+(1300))>>2)] = e.index;\n      HEAP32[(((eventStruct)+(8))>>2)] = e.axes.length;\n      HEAP32[(((eventStruct)+(12))>>2)] = e.buttons.length;\n      stringToUTF8(e.id, eventStruct + 1304, 64);\n      stringToUTF8(e.mapping, eventStruct + 1368, 64);\n    };\n  var _emscripten_get_gamepad_status = (index, gamepadState) => {\n  \n      // INVALID_PARAM is returned on a Gamepad index that never was there.\n      if (index < 0 || index >= JSEvents.lastGamepadState.length) return -5;\n  \n      // NO_DATA is returned on a Gamepad index that was removed.\n      // For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.\n      // This is because gamepads must keep their original position in the array.\n      // For example, removing the first of two gamepads produces [null/undefined/false, gamepad].\n      if (!JSEvents.lastGamepadState[index]) return -7;\n  \n      fillGamepadEventData(gamepadState, JSEvents.lastGamepadState[index]);\n      return 0;\n    };\n\n\n  var _emscripten_get_num_gamepads = () => {\n      // N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.\n      // Otherwise the following line will throw an exception.\n      return JSEvents.lastGamepadState.length;\n    };\n\n  var _emscripten_get_screen_size = (width, height) => {\n      HEAP32[((width)>>2)] = screen.width;\n      HEAP32[((height)>>2)] = screen.height;\n    };\n\n  /** @suppress {duplicate } */\n  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }\n  var _emscripten_glActiveTexture = _glActiveTexture;\n\n  /** @suppress {duplicate } */\n  var _glAttachShader = (program, shader) => {\n      GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\n    };\n  var _emscripten_glAttachShader = _glAttachShader;\n\n  /** @suppress {duplicate } */\n  var _glBeginQuery = (target, id) => {\n      GLctx.beginQuery(target, GL.queries[id]);\n    };\n  var _emscripten_glBeginQuery = _glBeginQuery;\n\n  /** @suppress {duplicate } */\n  var _glBeginQueryEXT = (target, id) => {\n      GLctx.disjointTimerQueryExt['beginQueryEXT'](target, GL.queries[id]);\n    };\n  var _emscripten_glBeginQueryEXT = _glBeginQueryEXT;\n\n  /** @suppress {duplicate } */\n  function _glBeginTransformFeedback(x0) { GLctx.beginTransformFeedback(x0) }\n  var _emscripten_glBeginTransformFeedback = _glBeginTransformFeedback;\n\n  \n  /** @suppress {duplicate } */\n  var _glBindAttribLocation = (program, index, name) => {\n      GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\n    };\n  var _emscripten_glBindAttribLocation = _glBindAttribLocation;\n\n  /** @suppress {duplicate } */\n  var _glBindBuffer = (target, buffer) => {\n      if (target == 0x8892 /*GL_ARRAY_BUFFER*/) {\n        GLctx.currentArrayBufferBinding = buffer;\n      } else if (target == 0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/) {\n        GLctx.currentElementArrayBufferBinding = buffer;\n      }\n  \n      if (target == 0x88EB /*GL_PIXEL_PACK_BUFFER*/) {\n        // In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2 API function call when a buffer is bound to\n        // GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that binding point is non-null to know what is\n        // the proper API function to call.\n        GLctx.currentPixelPackBufferBinding = buffer;\n      } else if (target == 0x88EC /*GL_PIXEL_UNPACK_BUFFER*/) {\n        // In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to\n        // use a different WebGL 2 API function call when a buffer is bound to\n        // GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that\n        // binding point is non-null to know what is the proper API function to\n        // call.\n        GLctx.currentPixelUnpackBufferBinding = buffer;\n      }\n      GLctx.bindBuffer(target, GL.buffers[buffer]);\n    };\n  var _emscripten_glBindBuffer = _glBindBuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindBufferBase = (target, index, buffer) => {\n      GLctx.bindBufferBase(target, index, GL.buffers[buffer]);\n    };\n  var _emscripten_glBindBufferBase = _glBindBufferBase;\n\n  /** @suppress {duplicate } */\n  var _glBindBufferRange = (target, index, buffer, offset, ptrsize) => {\n      GLctx.bindBufferRange(target, index, GL.buffers[buffer], offset, ptrsize);\n    };\n  var _emscripten_glBindBufferRange = _glBindBufferRange;\n\n  /** @suppress {duplicate } */\n  var _glBindFramebuffer = (target, framebuffer) => {\n  \n      GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\n  \n    };\n  var _emscripten_glBindFramebuffer = _glBindFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindRenderbuffer = (target, renderbuffer) => {\n      GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\n    };\n  var _emscripten_glBindRenderbuffer = _glBindRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindSampler = (unit, sampler) => {\n      GLctx.bindSampler(unit, GL.samplers[sampler]);\n    };\n  var _emscripten_glBindSampler = _glBindSampler;\n\n  /** @suppress {duplicate } */\n  var _glBindTexture = (target, texture) => {\n      GLctx.bindTexture(target, GL.textures[texture]);\n    };\n  var _emscripten_glBindTexture = _glBindTexture;\n\n  /** @suppress {duplicate } */\n  var _glBindTransformFeedback = (target, id) => {\n      GLctx.bindTransformFeedback(target, GL.transformFeedbacks[id]);\n    };\n  var _emscripten_glBindTransformFeedback = _glBindTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glBindVertexArray = (vao) => {\n      GLctx.bindVertexArray(GL.vaos[vao]);\n      var ibo = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\n      GLctx.currentElementArrayBufferBinding = ibo ? (ibo.name | 0) : 0;\n    };\n  var _emscripten_glBindVertexArray = _glBindVertexArray;\n\n  \n  /** @suppress {duplicate } */\n  var _glBindVertexArrayOES = _glBindVertexArray;\n  var _emscripten_glBindVertexArrayOES = _glBindVertexArrayOES;\n\n  /** @suppress {duplicate } */\n  function _glBlendColor(x0, x1, x2, x3) { GLctx.blendColor(x0, x1, x2, x3) }\n  var _emscripten_glBlendColor = _glBlendColor;\n\n  /** @suppress {duplicate } */\n  function _glBlendEquation(x0) { GLctx.blendEquation(x0) }\n  var _emscripten_glBlendEquation = _glBlendEquation;\n\n  /** @suppress {duplicate } */\n  function _glBlendEquationSeparate(x0, x1) { GLctx.blendEquationSeparate(x0, x1) }\n  var _emscripten_glBlendEquationSeparate = _glBlendEquationSeparate;\n\n  /** @suppress {duplicate } */\n  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }\n  var _emscripten_glBlendFunc = _glBlendFunc;\n\n  /** @suppress {duplicate } */\n  function _glBlendFuncSeparate(x0, x1, x2, x3) { GLctx.blendFuncSeparate(x0, x1, x2, x3) }\n  var _emscripten_glBlendFuncSeparate = _glBlendFuncSeparate;\n\n  /** @suppress {duplicate } */\n  function _glBlitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) { GLctx.blitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) }\n  var _emscripten_glBlitFramebuffer = _glBlitFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glBufferData = (target, size, data, usage) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        // If size is zero, WebGL would interpret uploading the whole input arraybuffer (starting from given offset), which would\n        // not make sense in WebAssembly, so avoid uploading if size is zero. However we must still call bufferData to establish a\n        // backing storage of zero bytes.\n        if (data && size) {\n          GLctx.bufferData(target, HEAPU8, usage, data, size);\n        } else {\n          GLctx.bufferData(target, size, usage);\n        }\n      } else {\n        // N.b. here first form specifies a heap subarray, second form an integer size, so the ?: code here is polymorphic. It is advised to avoid\n        // randomly mixing both uses in calling code, to avoid any potential JS engine JIT issues.\n        GLctx.bufferData(target, data ? HEAPU8.subarray(data, data+size) : size, usage);\n      }\n    };\n  var _emscripten_glBufferData = _glBufferData;\n\n  /** @suppress {duplicate } */\n  var _glBufferSubData = (target, offset, size, data) => {\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        size && GLctx.bufferSubData(target, offset, HEAPU8, data, size);\n        return;\n      }\n      GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));\n    };\n  var _emscripten_glBufferSubData = _glBufferSubData;\n\n  /** @suppress {duplicate } */\n  function _glCheckFramebufferStatus(x0) { return GLctx.checkFramebufferStatus(x0) }\n  var _emscripten_glCheckFramebufferStatus = _glCheckFramebufferStatus;\n\n  /** @suppress {duplicate } */\n  function _glClear(x0) { GLctx.clear(x0) }\n  var _emscripten_glClear = _glClear;\n\n  /** @suppress {duplicate } */\n  function _glClearBufferfi(x0, x1, x2, x3) { GLctx.clearBufferfi(x0, x1, x2, x3) }\n  var _emscripten_glClearBufferfi = _glClearBufferfi;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferfv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferfv(buffer, drawbuffer, HEAPF32, value>>2);\n    };\n  var _emscripten_glClearBufferfv = _glClearBufferfv;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferiv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferiv(buffer, drawbuffer, HEAP32, value>>2);\n    };\n  var _emscripten_glClearBufferiv = _glClearBufferiv;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferuiv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferuiv(buffer, drawbuffer, HEAPU32, value>>2);\n    };\n  var _emscripten_glClearBufferuiv = _glClearBufferuiv;\n\n  /** @suppress {duplicate } */\n  function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }\n  var _emscripten_glClearColor = _glClearColor;\n\n  /** @suppress {duplicate } */\n  function _glClearDepthf(x0) { GLctx.clearDepth(x0) }\n  var _emscripten_glClearDepthf = _glClearDepthf;\n\n  /** @suppress {duplicate } */\n  function _glClearStencil(x0) { GLctx.clearStencil(x0) }\n  var _emscripten_glClearStencil = _glClearStencil;\n\n  var convertI32PairToI53 = (lo, hi) => {\n      return (lo >>> 0) + hi * 4294967296;\n    };\n  /** @suppress {duplicate } */\n  var _glClientWaitSync = (sync, flags, timeout_low, timeout_high) => {\n      // WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.\n      // In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.\n      // Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)\n      // See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\n      return GLctx.clientWaitSync(GL.syncs[sync], flags, timeout);\n    };\n  var _emscripten_glClientWaitSync = _glClientWaitSync;\n\n  /** @suppress {duplicate } */\n  var _glColorMask = (red, green, blue, alpha) => {\n      GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\n    };\n  var _emscripten_glColorMask = _glColorMask;\n\n  /** @suppress {duplicate } */\n  var _glCompileShader = (shader) => {\n      GLctx.compileShader(GL.shaders[shader]);\n    };\n  var _emscripten_glCompileShader = _glCompileShader;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexImage2D = (target, level, internalFormat, width, height, border, imageSize, data) => {\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data);\n        } else {\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, HEAPU8, data, imageSize);\n        }\n        return;\n      }\n      GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\n    };\n  var _emscripten_glCompressedTexImage2D = _glCompressedTexImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexImage3D = (target, level, internalFormat, width, height, depth, border, imageSize, data) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data);\n      } else {\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, HEAPU8, data, imageSize);\n      }\n    };\n  var _emscripten_glCompressedTexImage3D = _glCompressedTexImage3D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexSubImage2D = (target, level, xoffset, yoffset, width, height, format, imageSize, data) => {\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\n        } else {\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, HEAPU8, data, imageSize);\n        }\n        return;\n      }\n      GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\n    };\n  var _emscripten_glCompressedTexSubImage2D = _glCompressedTexSubImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexSubImage3D = (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\n      } else {\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, HEAPU8, data, imageSize);\n      }\n    };\n  var _emscripten_glCompressedTexSubImage3D = _glCompressedTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  function _glCopyBufferSubData(x0, x1, x2, x3, x4) { GLctx.copyBufferSubData(x0, x1, x2, x3, x4) }\n  var _emscripten_glCopyBufferSubData = _glCopyBufferSubData;\n\n  /** @suppress {duplicate } */\n  function _glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\n  var _emscripten_glCopyTexImage2D = _glCopyTexImage2D;\n\n  /** @suppress {duplicate } */\n  function _glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\n  var _emscripten_glCopyTexSubImage2D = _glCopyTexSubImage2D;\n\n  /** @suppress {duplicate } */\n  function _glCopyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) { GLctx.copyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) }\n  var _emscripten_glCopyTexSubImage3D = _glCopyTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  var _glCreateProgram = () => {\n      var id = GL.getNewId(GL.programs);\n      var program = GLctx.createProgram();\n      // Store additional information needed for each shader program:\n      program.name = id;\n      // Lazy cache results of glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)\n      program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\n      program.uniformIdCounter = 1;\n      GL.programs[id] = program;\n      return id;\n    };\n  var _emscripten_glCreateProgram = _glCreateProgram;\n\n  /** @suppress {duplicate } */\n  var _glCreateShader = (shaderType) => {\n      var id = GL.getNewId(GL.shaders);\n      GL.shaders[id] = GLctx.createShader(shaderType);\n  \n      return id;\n    };\n  var _emscripten_glCreateShader = _glCreateShader;\n\n  /** @suppress {duplicate } */\n  function _glCullFace(x0) { GLctx.cullFace(x0) }\n  var _emscripten_glCullFace = _glCullFace;\n\n  /** @suppress {duplicate } */\n  var _glDeleteBuffers = (n, buffers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((buffers)+(i*4))>>2)];\n        var buffer = GL.buffers[id];\n  \n        // From spec: \"glDeleteBuffers silently ignores 0's and names that do not\n        // correspond to existing buffer objects.\"\n        if (!buffer) continue;\n  \n        GLctx.deleteBuffer(buffer);\n        buffer.name = 0;\n        GL.buffers[id] = null;\n  \n        if (id == GLctx.currentArrayBufferBinding) GLctx.currentArrayBufferBinding = 0;\n        if (id == GLctx.currentElementArrayBufferBinding) GLctx.currentElementArrayBufferBinding = 0;\n        if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\n        if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\n      }\n    };\n  var _emscripten_glDeleteBuffers = _glDeleteBuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteFramebuffers = (n, framebuffers) => {\n      for (var i = 0; i < n; ++i) {\n        var id = HEAP32[(((framebuffers)+(i*4))>>2)];\n        var framebuffer = GL.framebuffers[id];\n        if (!framebuffer) continue; // GL spec: \"glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects\".\n        GLctx.deleteFramebuffer(framebuffer);\n        framebuffer.name = 0;\n        GL.framebuffers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteFramebuffers = _glDeleteFramebuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteProgram = (id) => {\n      if (!id) return;\n      var program = GL.programs[id];\n      if (!program) { // glDeleteProgram actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteProgram(program);\n      program.name = 0;\n      GL.programs[id] = null;\n    };\n  var _emscripten_glDeleteProgram = _glDeleteProgram;\n\n  /** @suppress {duplicate } */\n  var _glDeleteQueries = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var query = GL.queries[id];\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.deleteQuery(query);\n        GL.queries[id] = null;\n      }\n    };\n  var _emscripten_glDeleteQueries = _glDeleteQueries;\n\n  /** @suppress {duplicate } */\n  var _glDeleteQueriesEXT = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var query = GL.queries[id];\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);\n        GL.queries[id] = null;\n      }\n    };\n  var _emscripten_glDeleteQueriesEXT = _glDeleteQueriesEXT;\n\n  /** @suppress {duplicate } */\n  var _glDeleteRenderbuffers = (n, renderbuffers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];\n        var renderbuffer = GL.renderbuffers[id];\n        if (!renderbuffer) continue; // GL spec: \"glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects\".\n        GLctx.deleteRenderbuffer(renderbuffer);\n        renderbuffer.name = 0;\n        GL.renderbuffers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteRenderbuffers = _glDeleteRenderbuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteSamplers = (n, samplers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((samplers)+(i*4))>>2)];\n        var sampler = GL.samplers[id];\n        if (!sampler) continue;\n        GLctx.deleteSampler(sampler);\n        sampler.name = 0;\n        GL.samplers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteSamplers = _glDeleteSamplers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteShader = (id) => {\n      if (!id) return;\n      var shader = GL.shaders[id];\n      if (!shader) { // glDeleteShader actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteShader(shader);\n      GL.shaders[id] = null;\n    };\n  var _emscripten_glDeleteShader = _glDeleteShader;\n\n  /** @suppress {duplicate } */\n  var _glDeleteSync = (id) => {\n      if (!id) return;\n      var sync = GL.syncs[id];\n      if (!sync) { // glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteSync(sync);\n      sync.name = 0;\n      GL.syncs[id] = null;\n    };\n  var _emscripten_glDeleteSync = _glDeleteSync;\n\n  /** @suppress {duplicate } */\n  var _glDeleteTextures = (n, textures) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((textures)+(i*4))>>2)];\n        var texture = GL.textures[id];\n        if (!texture) continue; // GL spec: \"glDeleteTextures silently ignores 0s and names that do not correspond to existing textures\".\n        GLctx.deleteTexture(texture);\n        texture.name = 0;\n        GL.textures[id] = null;\n      }\n    };\n  var _emscripten_glDeleteTextures = _glDeleteTextures;\n\n  /** @suppress {duplicate } */\n  var _glDeleteTransformFeedbacks = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var transformFeedback = GL.transformFeedbacks[id];\n        if (!transformFeedback) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.deleteTransformFeedback(transformFeedback);\n        transformFeedback.name = 0;\n        GL.transformFeedbacks[id] = null;\n      }\n    };\n  var _emscripten_glDeleteTransformFeedbacks = _glDeleteTransformFeedbacks;\n\n  /** @suppress {duplicate } */\n  var _glDeleteVertexArrays = (n, vaos) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\n        GLctx.deleteVertexArray(GL.vaos[id]);\n        GL.vaos[id] = null;\n      }\n    };\n  var _emscripten_glDeleteVertexArrays = _glDeleteVertexArrays;\n\n  \n  /** @suppress {duplicate } */\n  var _glDeleteVertexArraysOES = _glDeleteVertexArrays;\n  var _emscripten_glDeleteVertexArraysOES = _glDeleteVertexArraysOES;\n\n  /** @suppress {duplicate } */\n  function _glDepthFunc(x0) { GLctx.depthFunc(x0) }\n  var _emscripten_glDepthFunc = _glDepthFunc;\n\n  /** @suppress {duplicate } */\n  var _glDepthMask = (flag) => {\n      GLctx.depthMask(!!flag);\n    };\n  var _emscripten_glDepthMask = _glDepthMask;\n\n  /** @suppress {duplicate } */\n  function _glDepthRangef(x0, x1) { GLctx.depthRange(x0, x1) }\n  var _emscripten_glDepthRangef = _glDepthRangef;\n\n  /** @suppress {duplicate } */\n  var _glDetachShader = (program, shader) => {\n      GLctx.detachShader(GL.programs[program], GL.shaders[shader]);\n    };\n  var _emscripten_glDetachShader = _glDetachShader;\n\n  /** @suppress {duplicate } */\n  function _glDisable(x0) { GLctx.disable(x0) }\n  var _emscripten_glDisable = _glDisable;\n\n  /** @suppress {duplicate } */\n  var _glDisableVertexAttribArray = (index) => {\n      var cb = GL.currentContext.clientBuffers[index];\n      cb.enabled = false;\n      GLctx.disableVertexAttribArray(index);\n    };\n  var _emscripten_glDisableVertexAttribArray = _glDisableVertexAttribArray;\n\n  /** @suppress {duplicate } */\n  var _glDrawArrays = (mode, first, count) => {\n      // bind any client-side buffers\n      GL.preDrawHandleClientVertexAttribBindings(first + count);\n  \n      GLctx.drawArrays(mode, first, count);\n  \n      GL.postDrawHandleClientVertexAttribBindings();\n    };\n  var _emscripten_glDrawArrays = _glDrawArrays;\n\n  /** @suppress {duplicate } */\n  var _glDrawArraysInstanced = (mode, first, count, primcount) => {\n      GLctx.drawArraysInstanced(mode, first, count, primcount);\n    };\n  var _emscripten_glDrawArraysInstanced = _glDrawArraysInstanced;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedANGLE = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedANGLE = _glDrawArraysInstancedANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedARB = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedARB = _glDrawArraysInstancedARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedEXT = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedEXT = _glDrawArraysInstancedEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedNV = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedNV = _glDrawArraysInstancedNV;\n\n  var tempFixedLengthArray = [];\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffers = (n, bufs) => {\n  \n      var bufArray = tempFixedLengthArray[n];\n      for (var i = 0; i < n; i++) {\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\n      }\n  \n      GLctx.drawBuffers(bufArray);\n    };\n  var _emscripten_glDrawBuffers = _glDrawBuffers;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffersEXT = _glDrawBuffers;\n  var _emscripten_glDrawBuffersEXT = _glDrawBuffersEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffersWEBGL = _glDrawBuffers;\n  var _emscripten_glDrawBuffersWEBGL = _glDrawBuffersWEBGL;\n\n  /** @suppress {duplicate } */\n  var _glDrawElements = (mode, count, type, indices) => {\n      var buf;\n      if (!GLctx.currentElementArrayBufferBinding) {\n        var size = GL.calcBufLength(1, type, 0, count);\n        buf = GL.getTempIndexBuffer(size);\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, buf);\n        GLctx.bufferSubData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/,\n                                 0,\n                                 HEAPU8.subarray(indices, indices + size));\n        // the index is now 0\n        indices = 0;\n      }\n  \n      // bind any client-side buffers\n      GL.preDrawHandleClientVertexAttribBindings(count);\n  \n      GLctx.drawElements(mode, count, type, indices);\n  \n      GL.postDrawHandleClientVertexAttribBindings(count);\n  \n      if (!GLctx.currentElementArrayBufferBinding) {\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\n      }\n    };\n  var _emscripten_glDrawElements = _glDrawElements;\n\n  /** @suppress {duplicate } */\n  var _glDrawElementsInstanced = (mode, count, type, indices, primcount) => {\n      GLctx.drawElementsInstanced(mode, count, type, indices, primcount);\n    };\n  var _emscripten_glDrawElementsInstanced = _glDrawElementsInstanced;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedANGLE = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedANGLE = _glDrawElementsInstancedANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedARB = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedARB = _glDrawElementsInstancedARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedEXT = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedEXT = _glDrawElementsInstancedEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedNV = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedNV = _glDrawElementsInstancedNV;\n\n  /** @suppress {duplicate } */\n  var _glDrawRangeElements = (mode, start, end, count, type, indices) => {\n      // TODO: This should be a trivial pass-though function registered at the bottom of this page as\n      // glFuncs[6][1] += ' drawRangeElements';\n      // but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,\n      // we work around by ignoring the range.\n      _glDrawElements(mode, count, type, indices);\n    };\n  var _emscripten_glDrawRangeElements = _glDrawRangeElements;\n\n  /** @suppress {duplicate } */\n  function _glEnable(x0) { GLctx.enable(x0) }\n  var _emscripten_glEnable = _glEnable;\n\n  /** @suppress {duplicate } */\n  var _glEnableVertexAttribArray = (index) => {\n      var cb = GL.currentContext.clientBuffers[index];\n      cb.enabled = true;\n      GLctx.enableVertexAttribArray(index);\n    };\n  var _emscripten_glEnableVertexAttribArray = _glEnableVertexAttribArray;\n\n  /** @suppress {duplicate } */\n  function _glEndQuery(x0) { GLctx.endQuery(x0) }\n  var _emscripten_glEndQuery = _glEndQuery;\n\n  /** @suppress {duplicate } */\n  var _glEndQueryEXT = (target) => {\n      GLctx.disjointTimerQueryExt['endQueryEXT'](target);\n    };\n  var _emscripten_glEndQueryEXT = _glEndQueryEXT;\n\n  /** @suppress {duplicate } */\n  function _glEndTransformFeedback() { GLctx.endTransformFeedback() }\n  var _emscripten_glEndTransformFeedback = _glEndTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glFenceSync = (condition, flags) => {\n      var sync = GLctx.fenceSync(condition, flags);\n      if (sync) {\n        var id = GL.getNewId(GL.syncs);\n        sync.name = id;\n        GL.syncs[id] = sync;\n        return id;\n      }\n      return 0; // Failed to create a sync object\n    };\n  var _emscripten_glFenceSync = _glFenceSync;\n\n  /** @suppress {duplicate } */\n  function _glFinish() { GLctx.finish() }\n  var _emscripten_glFinish = _glFinish;\n\n  /** @suppress {duplicate } */\n  function _glFlush() { GLctx.flush() }\n  var _emscripten_glFlush = _glFlush;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferRenderbuffer = (target, attachment, renderbuffertarget, renderbuffer) => {\n      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,\n                                         GL.renderbuffers[renderbuffer]);\n    };\n  var _emscripten_glFramebufferRenderbuffer = _glFramebufferRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferTexture2D = (target, attachment, textarget, texture, level) => {\n      GLctx.framebufferTexture2D(target, attachment, textarget,\n                                      GL.textures[texture], level);\n    };\n  var _emscripten_glFramebufferTexture2D = _glFramebufferTexture2D;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferTextureLayer = (target, attachment, texture, level, layer) => {\n      GLctx.framebufferTextureLayer(target, attachment, GL.textures[texture], level, layer);\n    };\n  var _emscripten_glFramebufferTextureLayer = _glFramebufferTextureLayer;\n\n  /** @suppress {duplicate } */\n  function _glFrontFace(x0) { GLctx.frontFace(x0) }\n  var _emscripten_glFrontFace = _glFrontFace;\n\n  var __glGenObject = (n, buffers, createFunction, objectTable\n      ) => {\n      for (var i = 0; i < n; i++) {\n        var buffer = GLctx[createFunction]();\n        var id = buffer && GL.getNewId(objectTable);\n        if (buffer) {\n          buffer.name = id;\n          objectTable[id] = buffer;\n        } else {\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n        }\n        HEAP32[(((buffers)+(i*4))>>2)] = id;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGenBuffers = (n, buffers) => {\n      __glGenObject(n, buffers, 'createBuffer', GL.buffers\n        );\n    };\n  var _emscripten_glGenBuffers = _glGenBuffers;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenFramebuffers = (n, ids) => {\n      __glGenObject(n, ids, 'createFramebuffer', GL.framebuffers\n        );\n    };\n  var _emscripten_glGenFramebuffers = _glGenFramebuffers;\n\n  /** @suppress {duplicate } */\n  var _glGenQueries = (n, ids) => {\n      __glGenObject(n, ids, 'createQuery', GL.queries\n        );\n    };\n  var _emscripten_glGenQueries = _glGenQueries;\n\n  /** @suppress {duplicate } */\n  var _glGenQueriesEXT = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var query = GLctx.disjointTimerQueryExt['createQueryEXT']();\n        if (!query) {\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n          while (i < n) HEAP32[(((ids)+(i++*4))>>2)] = 0;\n          return;\n        }\n        var id = GL.getNewId(GL.queries);\n        query.name = id;\n        GL.queries[id] = query;\n        HEAP32[(((ids)+(i*4))>>2)] = id;\n      }\n    };\n  var _emscripten_glGenQueriesEXT = _glGenQueriesEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenRenderbuffers = (n, renderbuffers) => {\n      __glGenObject(n, renderbuffers, 'createRenderbuffer', GL.renderbuffers\n        );\n    };\n  var _emscripten_glGenRenderbuffers = _glGenRenderbuffers;\n\n  /** @suppress {duplicate } */\n  var _glGenSamplers = (n, samplers) => {\n      __glGenObject(n, samplers, 'createSampler', GL.samplers\n        );\n    };\n  var _emscripten_glGenSamplers = _glGenSamplers;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenTextures = (n, textures) => {\n      __glGenObject(n, textures, 'createTexture', GL.textures\n        );\n    };\n  var _emscripten_glGenTextures = _glGenTextures;\n\n  /** @suppress {duplicate } */\n  var _glGenTransformFeedbacks = (n, ids) => {\n      __glGenObject(n, ids, 'createTransformFeedback', GL.transformFeedbacks\n        );\n    };\n  var _emscripten_glGenTransformFeedbacks = _glGenTransformFeedbacks;\n\n  \n  /** @suppress {duplicate } */\n  function _glGenVertexArrays(n, arrays) {\n      __glGenObject(n, arrays, 'createVertexArray', GL.vaos\n        );\n    }\n  var _emscripten_glGenVertexArrays = _glGenVertexArrays;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenVertexArraysOES = _glGenVertexArrays;\n  var _emscripten_glGenVertexArraysOES = _glGenVertexArraysOES;\n\n  /** @suppress {duplicate } */\n  function _glGenerateMipmap(x0) { GLctx.generateMipmap(x0) }\n  var _emscripten_glGenerateMipmap = _glGenerateMipmap;\n\n  \n  var __glGetActiveAttribOrUniform = (funcName, program, index, bufSize, length, size, type, name) => {\n      program = GL.programs[program];\n      var info = GLctx[funcName](program, index);\n      if (info) { // If an error occurs, nothing will be written to length, size and type and name.\n        var numBytesWrittenExclNull = name && stringToUTF8(info.name, name, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n        if (size) HEAP32[((size)>>2)] = info.size;\n        if (type) HEAP32[((type)>>2)] = info.type;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetActiveAttrib = (program, index, bufSize, length, size, type, name) => {\n      __glGetActiveAttribOrUniform('getActiveAttrib', program, index, bufSize, length, size, type, name);\n    };\n  var _emscripten_glGetActiveAttrib = _glGetActiveAttrib;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetActiveUniform = (program, index, bufSize, length, size, type, name) => {\n      __glGetActiveAttribOrUniform('getActiveUniform', program, index, bufSize, length, size, type, name);\n    };\n  var _emscripten_glGetActiveUniform = _glGetActiveUniform;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformBlockName = (program, uniformBlockIndex, bufSize, length, uniformBlockName) => {\n      program = GL.programs[program];\n  \n      var result = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\n      if (!result) return; // If an error occurs, nothing will be written to uniformBlockName or length.\n      if (uniformBlockName && bufSize > 0) {\n        var numBytesWrittenExclNull = stringToUTF8(result, uniformBlockName, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n      } else {\n        if (length) HEAP32[((length)>>2)] = 0;\n      }\n    };\n  var _emscripten_glGetActiveUniformBlockName = _glGetActiveUniformBlockName;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformBlockiv = (program, uniformBlockIndex, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n  \n      if (pname == 0x8A41 /* GL_UNIFORM_BLOCK_NAME_LENGTH */) {\n        var name = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\n        HEAP32[((params)>>2)] = name.length+1;\n        return;\n      }\n  \n      var result = GLctx.getActiveUniformBlockParameter(program, uniformBlockIndex, pname);\n      if (result === null) return; // If an error occurs, nothing should be written to params.\n      if (pname == 0x8A43 /*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/) {\n        for (var i = 0; i < result.length; i++) {\n          HEAP32[(((params)+(i*4))>>2)] = result[i];\n        }\n      } else {\n        HEAP32[((params)>>2)] = result;\n      }\n    };\n  var _emscripten_glGetActiveUniformBlockiv = _glGetActiveUniformBlockiv;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformsiv = (program, uniformCount, uniformIndices, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (uniformCount > 0 && uniformIndices == 0) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      var ids = [];\n      for (var i = 0; i < uniformCount; i++) {\n        ids.push(HEAP32[(((uniformIndices)+(i*4))>>2)]);\n      }\n  \n      var result = GLctx.getActiveUniforms(program, ids, pname);\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to params.\n  \n      var len = result.length;\n      for (var i = 0; i < len; i++) {\n        HEAP32[(((params)+(i*4))>>2)] = result[i];\n      }\n    };\n  var _emscripten_glGetActiveUniformsiv = _glGetActiveUniformsiv;\n\n  /** @suppress {duplicate } */\n  var _glGetAttachedShaders = (program, maxCount, count, shaders) => {\n      var result = GLctx.getAttachedShaders(GL.programs[program]);\n      var len = result.length;\n      if (len > maxCount) {\n        len = maxCount;\n      }\n      HEAP32[((count)>>2)] = len;\n      for (var i = 0; i < len; ++i) {\n        var id = GL.shaders.indexOf(result[i]);\n        HEAP32[(((shaders)+(i*4))>>2)] = id;\n      }\n    };\n  var _emscripten_glGetAttachedShaders = _glGetAttachedShaders;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetAttribLocation = (program, name) => {\n      return GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\n    };\n  var _emscripten_glGetAttribLocation = _glGetAttribLocation;\n\n  var writeI53ToI64 = (ptr, num) => {\n      HEAPU32[((ptr)>>2)] = num;\n      var lower = HEAPU32[((ptr)>>2)];\n      HEAPU32[(((ptr)+(4))>>2)] = (num - lower)/4294967296;\n    };\n  \n  var emscriptenWebGLGet = (name_, p, type) => {\n      // Guard against user passing a null pointer.\n      // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.\n      // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but\n      // better to report an error instead of doing anything random.\n      if (!p) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = undefined;\n      switch (name_) { // Handle a few trivial GLES values\n        case 0x8DFA: // GL_SHADER_COMPILER\n          ret = 1;\n          break;\n        case 0x8DF8: // GL_SHADER_BINARY_FORMATS\n          if (type != 0 && type != 1) {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n          }\n          return; // Do not write anything to the out pointer, since no binary formats are supported.\n        case 0x87FE: // GL_NUM_PROGRAM_BINARY_FORMATS\n        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS\n          ret = 0;\n          break;\n        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS\n          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),\n          // so implement it ourselves to allow C++ GLES2 code get the length.\n          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);\n          ret = formats ? formats.length : 0;\n          break;\n  \n        case 0x821D: // GL_NUM_EXTENSIONS\n          if (GL.currentContext.version < 2) {\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\n            return;\n          }\n          // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\n          var exts = GLctx.getSupportedExtensions() || [];\n          ret = 2 * exts.length; // each extension is duplicated, first in unprefixed WebGL form, and then a second time with \"GL_\" prefix.\n          break;\n        case 0x821B: // GL_MAJOR_VERSION\n        case 0x821C: // GL_MINOR_VERSION\n          if (GL.currentContext.version < 2) {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          }\n          ret = name_ == 0x821B ? 3 : 0; // return version 3.0\n          break;\n      }\n  \n      if (ret === undefined) {\n        var result = GLctx.getParameter(name_);\n        switch (typeof result) {\n          case \"number\":\n            ret = result;\n            break;\n          case \"boolean\":\n            ret = result ? 1 : 0;\n            break;\n          case \"string\":\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          case \"object\":\n            if (result === null) {\n              // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise\n              // can mean an invalid name_, which we need to report as an error\n              switch (name_) {\n                case 0x8894: // ARRAY_BUFFER_BINDING\n                case 0x8B8D: // CURRENT_PROGRAM\n                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING\n                case 0x8CA6: // FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING\n                case 0x8CA7: // RENDERBUFFER_BINDING\n                case 0x8069: // TEXTURE_BINDING_2D\n                case 0x85B5: // WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES\n                case 0x8F36: // COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER\n                case 0x8F37: // COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER\n                case 0x88ED: // PIXEL_PACK_BUFFER_BINDING\n                case 0x88EF: // PIXEL_UNPACK_BUFFER_BINDING\n                case 0x8CAA: // READ_FRAMEBUFFER_BINDING\n                case 0x8919: // SAMPLER_BINDING\n                case 0x8C1D: // TEXTURE_BINDING_2D_ARRAY\n                case 0x806A: // TEXTURE_BINDING_3D\n                case 0x8E25: // TRANSFORM_FEEDBACK_BINDING\n                case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\n                case 0x8A28: // UNIFORM_BUFFER_BINDING\n                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP\n                  ret = 0;\n                  break;\n                }\n                default: {\n                  GL.recordError(0x500); // GL_INVALID_ENUM\n                  return;\n                }\n              }\n            } else if (result instanceof Float32Array ||\n                       result instanceof Uint32Array ||\n                       result instanceof Int32Array ||\n                       result instanceof Array) {\n              for (var i = 0; i < result.length; ++i) {\n                switch (type) {\n                  case 0: HEAP32[(((p)+(i*4))>>2)] = result[i]; break;\n                  case 2: HEAPF32[(((p)+(i*4))>>2)] = result[i]; break;\n                  case 4: HEAP8[(((p)+(i))>>0)] = result[i] ? 1 : 0; break;\n                }\n              }\n              return;\n            } else {\n              try {\n                ret = result.name | 0;\n              } catch(e) {\n                GL.recordError(0x500); // GL_INVALID_ENUM\n                err('GL_INVALID_ENUM in glGet' + type + 'v: Unknown object returned from WebGL getParameter(' + name_ + ')! (error: ' + e + ')');\n                return;\n              }\n            }\n            break;\n          default:\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            err('GL_INVALID_ENUM in glGet' + type + 'v: Native code calling glGet' + type + 'v(' + name_ + ') and it returns ' + result + ' of type ' + typeof(result) + '!');\n            return;\n        }\n      }\n  \n      switch (type) {\n        case 1: writeI53ToI64(p, ret); break;\n        case 0: HEAP32[((p)>>2)] = ret; break;\n        case 2:   HEAPF32[((p)>>2)] = ret; break;\n        case 4: HEAP8[((p)>>0)] = ret ? 1 : 0; break;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetBooleanv = (name_, p) => {\n      emscriptenWebGLGet(name_, p, 4);\n    };\n  var _emscripten_glGetBooleanv = _glGetBooleanv;\n\n  /** @suppress {duplicate } */\n  var _glGetBufferParameteri64v = (target, value, data) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\n        // if data == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      writeI53ToI64(data, GLctx.getBufferParameter(target, value));\n    };\n  var _emscripten_glGetBufferParameteri64v = _glGetBufferParameteri64v;\n\n  /** @suppress {duplicate } */\n  var _glGetBufferParameteriv = (target, value, data) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\n        // if data == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((data)>>2)] = GLctx.getBufferParameter(target, value);\n    };\n  var _emscripten_glGetBufferParameteriv = _glGetBufferParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetError = () => {\n      var error = GLctx.getError() || GL.lastError;\n      GL.lastError = 0/*GL_NO_ERROR*/;\n      return error;\n    };\n  var _emscripten_glGetError = _glGetError;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetFloatv = (name_, p) => {\n      emscriptenWebGLGet(name_, p, 2);\n    };\n  var _emscripten_glGetFloatv = _glGetFloatv;\n\n  /** @suppress {duplicate } */\n  var _glGetFragDataLocation = (program, name) => {\n      return GLctx.getFragDataLocation(GL.programs[program], UTF8ToString(name));\n    };\n  var _emscripten_glGetFragDataLocation = _glGetFragDataLocation;\n\n  /** @suppress {duplicate } */\n  var _glGetFramebufferAttachmentParameteriv = (target, attachment, pname, params) => {\n      var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\n      if (result instanceof WebGLRenderbuffer ||\n          result instanceof WebGLTexture) {\n        result = result.name | 0;\n      }\n      HEAP32[((params)>>2)] = result;\n    };\n  var _emscripten_glGetFramebufferAttachmentParameteriv = _glGetFramebufferAttachmentParameteriv;\n\n  var emscriptenWebGLGetIndexed = (target, index, data, type) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\n        // if data == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var result = GLctx.getIndexedParameter(target, index);\n      var ret;\n      switch (typeof result) {\n        case 'boolean':\n          ret = result ? 1 : 0;\n          break;\n        case 'number':\n          ret = result;\n          break;\n        case 'object':\n          if (result === null) {\n            switch (target) {\n              case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\n              case 0x8A28: // UNIFORM_BUFFER_BINDING\n                ret = 0;\n                break;\n              default: {\n                GL.recordError(0x500); // GL_INVALID_ENUM\n                return;\n              }\n            }\n          } else if (result instanceof WebGLBuffer) {\n            ret = result.name | 0;\n          } else {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          }\n          break;\n        default:\n          GL.recordError(0x500); // GL_INVALID_ENUM\n          return;\n      }\n  \n      switch (type) {\n        case 1: writeI53ToI64(data, ret); break;\n        case 0: HEAP32[((data)>>2)] = ret; break;\n        case 2: HEAPF32[((data)>>2)] = ret; break;\n        case 4: HEAP8[((data)>>0)] = ret ? 1 : 0; break;\n        default: throw 'internal emscriptenWebGLGetIndexed() error, bad type: ' + type;\n      }\n    };\n  /** @suppress {duplicate } */\n  var _glGetInteger64i_v = (target, index, data) =>\n      emscriptenWebGLGetIndexed(target, index, data, 1);\n  var _emscripten_glGetInteger64i_v = _glGetInteger64i_v;\n\n  /** @suppress {duplicate } */\n  var _glGetInteger64v = (name_, p) => {\n      emscriptenWebGLGet(name_, p, 1);\n    };\n  var _emscripten_glGetInteger64v = _glGetInteger64v;\n\n  /** @suppress {duplicate } */\n  var _glGetIntegeri_v = (target, index, data) =>\n      emscriptenWebGLGetIndexed(target, index, data, 0);\n  var _emscripten_glGetIntegeri_v = _glGetIntegeri_v;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetIntegerv = (name_, p) => {\n      emscriptenWebGLGet(name_, p, 0);\n    };\n  var _emscripten_glGetIntegerv = _glGetIntegerv;\n\n  /** @suppress {duplicate } */\n  var _glGetInternalformativ = (target, internalformat, pname, bufSize, params) => {\n      if (bufSize < 0) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (!params) {\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\n        // if values == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = GLctx.getInternalformatParameter(target, internalformat, pname);\n      if (ret === null) return;\n      for (var i = 0; i < ret.length && i < bufSize; ++i) {\n        HEAP32[(((params)+(i*4))>>2)] = ret[i];\n      }\n    };\n  var _emscripten_glGetInternalformativ = _glGetInternalformativ;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramBinary = (program, bufSize, length, binaryFormat, binary) => {\n      GL.recordError(0x502/*GL_INVALID_OPERATION*/);\n    };\n  var _emscripten_glGetProgramBinary = _glGetProgramBinary;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramInfoLog = (program, maxLength, length, infoLog) => {\n      var log = GLctx.getProgramInfoLog(GL.programs[program]);\n      if (log === null) log = '(unknown error)';\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetProgramInfoLog = _glGetProgramInfoLog;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramiv = (program, pname, p) => {\n      if (!p) {\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n  \n      if (program >= GL.counter) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n  \n      program = GL.programs[program];\n  \n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        var log = GLctx.getProgramInfoLog(program);\n        if (log === null) log = '(unknown error)';\n        HEAP32[((p)>>2)] = log.length + 1;\n      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\n        if (!program.maxUniformLength) {\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\n            program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxUniformLength;\n      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\n        if (!program.maxAttributeLength) {\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/); ++i) {\n            program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxAttributeLength;\n      } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\n        if (!program.maxUniformBlockNameLength) {\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/); ++i) {\n            program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxUniformBlockNameLength;\n      } else {\n        HEAP32[((p)>>2)] = GLctx.getProgramParameter(program, pname);\n      }\n    };\n  var _emscripten_glGetProgramiv = _glGetProgramiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjecti64vEXT = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param;\n      if (GL.currentContext.version < 2)\n      {\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\n      }\n      else {\n        param = GLctx.getQueryParameter(query, pname);\n      }\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      writeI53ToI64(params, ret);\n    };\n  var _emscripten_glGetQueryObjecti64vEXT = _glGetQueryObjecti64vEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryObjectivEXT = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      HEAP32[((params)>>2)] = ret;\n    };\n  var _emscripten_glGetQueryObjectivEXT = _glGetQueryObjectivEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjectui64vEXT = _glGetQueryObjecti64vEXT;\n  var _emscripten_glGetQueryObjectui64vEXT = _glGetQueryObjectui64vEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryObjectuiv = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param = GLctx.getQueryParameter(query, pname);\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      HEAP32[((params)>>2)] = ret;\n    };\n  var _emscripten_glGetQueryObjectuiv = _glGetQueryObjectuiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjectuivEXT = _glGetQueryObjectivEXT;\n  var _emscripten_glGetQueryObjectuivEXT = _glGetQueryObjectuivEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryiv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getQuery(target, pname);\n    };\n  var _emscripten_glGetQueryiv = _glGetQueryiv;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryivEXT = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.disjointTimerQueryExt['getQueryEXT'](target, pname);\n    };\n  var _emscripten_glGetQueryivEXT = _glGetQueryivEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetRenderbufferParameteriv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getRenderbufferParameter(target, pname);\n    };\n  var _emscripten_glGetRenderbufferParameteriv = _glGetRenderbufferParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetSamplerParameterfv = (sampler, pname, params) => {\n      if (!params) {\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAPF32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\n    };\n  var _emscripten_glGetSamplerParameterfv = _glGetSamplerParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glGetSamplerParameteriv = (sampler, pname, params) => {\n      if (!params) {\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\n    };\n  var _emscripten_glGetSamplerParameteriv = _glGetSamplerParameteriv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetShaderInfoLog = (shader, maxLength, length, infoLog) => {\n      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\n      if (log === null) log = '(unknown error)';\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetShaderInfoLog = _glGetShaderInfoLog;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderPrecisionFormat = (shaderType, precisionType, range, precision) => {\n      var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\n      HEAP32[((range)>>2)] = result.rangeMin;\n      HEAP32[(((range)+(4))>>2)] = result.rangeMax;\n      HEAP32[((precision)>>2)] = result.precision;\n    };\n  var _emscripten_glGetShaderPrecisionFormat = _glGetShaderPrecisionFormat;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderSource = (shader, bufSize, length, source) => {\n      var result = GLctx.getShaderSource(GL.shaders[shader]);\n      if (!result) return; // If an error occurs, nothing will be written to length or source.\n      var numBytesWrittenExclNull = (bufSize > 0 && source) ? stringToUTF8(result, source, bufSize) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetShaderSource = _glGetShaderSource;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderiv = (shader, pname, p) => {\n      if (!p) {\n        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\n        if (log === null) log = '(unknown error)';\n        // The GLES2 specification says that if the shader has an empty info log,\n        // a value of 0 is returned. Otherwise the log has a null char appended.\n        // (An empty string is falsey, so we can just check that instead of\n        // looking at log.length.)\n        var logLength = log ? log.length + 1 : 0;\n        HEAP32[((p)>>2)] = logLength;\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\n        var source = GLctx.getShaderSource(GL.shaders[shader]);\n        // source may be a null, or the empty string, both of which are falsey\n        // values that we report a 0 length for.\n        var sourceLength = source ? source.length + 1 : 0;\n        HEAP32[((p)>>2)] = sourceLength;\n      } else {\n        HEAP32[((p)>>2)] = GLctx.getShaderParameter(GL.shaders[shader], pname);\n      }\n    };\n  var _emscripten_glGetShaderiv = _glGetShaderiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetString = (name_) => {\n      var ret = GL.stringCache[name_];\n      if (!ret) {\n        switch (name_) {\n          case 0x1F03 /* GL_EXTENSIONS */:\n            var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\n            exts = exts.concat(exts.map((e) => \"GL_\" + e));\n            ret = stringToNewUTF8(exts.join(' '));\n            break;\n          case 0x1F00 /* GL_VENDOR */:\n          case 0x1F01 /* GL_RENDERER */:\n          case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\n          case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\n            var s = GLctx.getParameter(name_);\n            if (!s) {\n              GL.recordError(0x500/*GL_INVALID_ENUM*/);\n            }\n            ret = s && stringToNewUTF8(s);\n            break;\n  \n          case 0x1F02 /* GL_VERSION */:\n            var glVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\n            // return GLES version string corresponding to the version of the WebGL context\n            if (GL.currentContext.version >= 2) glVersion = 'OpenGL ES 3.0 (' + glVersion + ')';\n            else\n            {\n              glVersion = 'OpenGL ES 2.0 (' + glVersion + ')';\n            }\n            ret = stringToNewUTF8(glVersion);\n            break;\n          case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\n            var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\n            // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\n            var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\n            var ver_num = glslVersion.match(ver_re);\n            if (ver_num !== null) {\n              if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\n              glslVersion = 'OpenGL ES GLSL ES ' + ver_num[1] + ' (' + glslVersion + ')';\n            }\n            ret = stringToNewUTF8(glslVersion);\n            break;\n          default:\n            GL.recordError(0x500/*GL_INVALID_ENUM*/);\n            // fall through\n        }\n        GL.stringCache[name_] = ret;\n      }\n      return ret;\n    };\n  var _emscripten_glGetString = _glGetString;\n\n  /** @suppress {duplicate } */\n  var _glGetStringi = (name, index) => {\n      if (GL.currentContext.version < 2) {\n        GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\n        return 0;\n      }\n      var stringiCache = GL.stringiCache[name];\n      if (stringiCache) {\n        if (index < 0 || index >= stringiCache.length) {\n          GL.recordError(0x501/*GL_INVALID_VALUE*/);\n          return 0;\n        }\n        return stringiCache[index];\n      }\n      switch (name) {\n        case 0x1F03 /* GL_EXTENSIONS */:\n          var exts = GLctx.getSupportedExtensions() || []; // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\n          exts = exts.concat(exts.map(function(e) { return \"GL_\" + e; }));\n          exts = exts.map(function(e) { return stringToNewUTF8(e); });\n  \n          stringiCache = GL.stringiCache[name] = exts;\n          if (index < 0 || index >= stringiCache.length) {\n            GL.recordError(0x501/*GL_INVALID_VALUE*/);\n            return 0;\n          }\n          return stringiCache[index];\n        default:\n          GL.recordError(0x500/*GL_INVALID_ENUM*/);\n          return 0;\n      }\n    };\n  var _emscripten_glGetStringi = _glGetStringi;\n\n  /** @suppress {duplicate } */\n  var _glGetSynciv = (sync, pname, bufSize, length, values) => {\n      if (bufSize < 0) {\n        // GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,\n        // so raise GL_INVALID_VALUE here as well.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (!values) {\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\n        // if values == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = GLctx.getSyncParameter(GL.syncs[sync], pname);\n      if (ret !== null) {\n        HEAP32[((values)>>2)] = ret;\n        if (length) HEAP32[((length)>>2)] = 1; // Report a single value outputted.\n      }\n    };\n  var _emscripten_glGetSynciv = _glGetSynciv;\n\n  /** @suppress {duplicate } */\n  var _glGetTexParameterfv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAPF32[((params)>>2)] = GLctx.getTexParameter(target, pname);\n    };\n  var _emscripten_glGetTexParameterfv = _glGetTexParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glGetTexParameteriv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getTexParameter(target, pname);\n    };\n  var _emscripten_glGetTexParameteriv = _glGetTexParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetTransformFeedbackVarying = (program, index, bufSize, length, size, type, name) => {\n      program = GL.programs[program];\n      var info = GLctx.getTransformFeedbackVarying(program, index);\n      if (!info) return; // If an error occurred, the return parameters length, size, type and name will be unmodified.\n  \n      if (name && bufSize > 0) {\n        var numBytesWrittenExclNull = stringToUTF8(info.name, name, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n      } else {\n        if (length) HEAP32[((length)>>2)] = 0;\n      }\n  \n      if (size) HEAP32[((size)>>2)] = info.size;\n      if (type) HEAP32[((type)>>2)] = info.type;\n    };\n  var _emscripten_glGetTransformFeedbackVarying = _glGetTransformFeedbackVarying;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformBlockIndex = (program, uniformBlockName) => {\n      return GLctx.getUniformBlockIndex(GL.programs[program], UTF8ToString(uniformBlockName));\n    };\n  var _emscripten_glGetUniformBlockIndex = _glGetUniformBlockIndex;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformIndices = (program, uniformCount, uniformNames, uniformIndices) => {\n      if (!uniformIndices) {\n        // GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense\n        // if uniformIndices == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (uniformCount > 0 && (uniformNames == 0 || uniformIndices == 0)) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      var names = [];\n      for (var i = 0; i < uniformCount; i++)\n        names.push(UTF8ToString(HEAP32[(((uniformNames)+(i*4))>>2)]));\n  \n      var result = GLctx.getUniformIndices(program, names);\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to uniformIndices.\n  \n      var len = result.length;\n      for (var i = 0; i < len; i++) {\n        HEAP32[(((uniformIndices)+(i*4))>>2)] = result[i];\n      }\n    };\n  var _emscripten_glGetUniformIndices = _glGetUniformIndices;\n\n  \n  /** @noinline */\n  var webglGetLeftBracePos = (name) => {\n      return name.slice(-1) == ']' && name.lastIndexOf('[');\n    };\n  \n  var webglPrepareUniformLocationsBeforeFirstUse = (program) => {\n      var uniformLocsById = program.uniformLocsById, // Maps GLuint -> WebGLUniformLocation\n        uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, // Maps name -> [uniform array length, GLuint]\n        i, j;\n  \n      // On the first time invocation of glGetUniformLocation on this shader program:\n      // initialize cache data structures and discover which uniforms are arrays.\n      if (!uniformLocsById) {\n        // maps GLint integer locations to WebGLUniformLocations\n        program.uniformLocsById = uniformLocsById = {};\n        // maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations\n        program.uniformArrayNamesById = {};\n  \n        for (i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\n          var u = GLctx.getActiveUniform(program, i);\n          var nm = u.name;\n          var sz = u.size;\n          var lb = webglGetLeftBracePos(nm);\n          var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\n  \n          // Assign a new location.\n          var id = program.uniformIdCounter;\n          program.uniformIdCounter += sz;\n          // Eagerly get the location of the uniformArray[0] base element.\n          // The remaining indices >0 will be left for lazy evaluation to\n          // improve performance. Those may never be needed to fetch, if the\n          // application fills arrays always in full starting from the first\n          // element of the array.\n          uniformSizeAndIdsByName[arrayName] = [sz, id];\n  \n          // Store placeholder integers in place that highlight that these\n          // >0 index locations are array indices pending population.\n          for (j = 0; j < sz; ++j) {\n            uniformLocsById[id] = j;\n            program.uniformArrayNamesById[id++] = arrayName;\n          }\n        }\n      }\n    };\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glGetUniformLocation = (program, name) => {\n  \n      name = UTF8ToString(name);\n  \n      if (program = GL.programs[program]) {\n        webglPrepareUniformLocationsBeforeFirstUse(program);\n        var uniformLocsById = program.uniformLocsById; // Maps GLuint -> WebGLUniformLocation\n        var arrayIndex = 0;\n        var uniformBaseName = name;\n  \n        // Invariant: when populating integer IDs for uniform locations, we must maintain the precondition that\n        // arrays reside in contiguous addresses, i.e. for a 'vec4 colors[10];', colors[4] must be at location colors[0]+4.\n        // However, user might call glGetUniformLocation(program, \"colors\") for an array, so we cannot discover based on the user\n        // input arguments whether the uniform we are dealing with is an array. The only way to discover which uniforms are arrays\n        // is to enumerate over all the active uniforms in the program.\n        var leftBrace = webglGetLeftBracePos(name);\n  \n        // If user passed an array accessor \"[index]\", parse the array index off the accessor.\n        if (leftBrace > 0) {\n          arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0; // \"index]\", coerce parseInt(']') with >>>0 to treat \"foo[]\" as \"foo[0]\" and foo[-1] as unsigned out-of-bounds.\n          uniformBaseName = name.slice(0, leftBrace);\n        }\n  \n        // Have we cached the location of this uniform before?\n        var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName]; // A pair [array length, GLint of the uniform location]\n  \n        // If an uniform with this name exists, and if its index is within the array limits (if it's even an array),\n        // query the WebGLlocation, or return an existing cached location.\n        if (sizeAndId && arrayIndex < sizeAndId[0]) {\n          arrayIndex += sizeAndId[1]; // Add the base location of the uniform to the array index offset.\n          if ((uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name))) {\n            return arrayIndex;\n          }\n        }\n      }\n      else {\n        // N.b. we are currently unable to distinguish between GL program IDs that never existed vs GL program IDs that have been deleted,\n        // so report GL_INVALID_VALUE in both cases.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n      }\n      return -1;\n    };\n  var _emscripten_glGetUniformLocation = _glGetUniformLocation;\n\n  var webglGetUniformLocation = (location) => {\n      var p = GLctx.currentProgram;\n  \n      if (p) {\n        var webglLoc = p.uniformLocsById[location];\n        // p.uniformLocsById[location] stores either an integer, or a WebGLUniformLocation.\n  \n        // If an integer, we have not yet bound the location, so do it now. The integer value specifies the array index\n        // we should bind to.\n        if (typeof webglLoc == 'number') {\n          p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? '[' + webglLoc + ']' : ''));\n        }\n        // Else an already cached WebGLUniformLocation, return it.\n        return webglLoc;\n      } else {\n        GL.recordError(0x502/*GL_INVALID_OPERATION*/);\n      }\n    };\n  \n  \n  /** @suppress{checkTypes} */\n  var emscriptenWebGLGetUniform = (program, location, params, type) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      webglPrepareUniformLocationsBeforeFirstUse(program);\n      var data = GLctx.getUniform(program, webglGetUniformLocation(location));\n      if (typeof data == 'number' || typeof data == 'boolean') {\n        switch (type) {\n          case 0: HEAP32[((params)>>2)] = data; break;\n          case 2: HEAPF32[((params)>>2)] = data; break;\n        }\n      } else {\n        for (var i = 0; i < data.length; i++) {\n          switch (type) {\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\n          }\n        }\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetUniformfv = (program, location, params) => {\n      emscriptenWebGLGetUniform(program, location, params, 2);\n    };\n  var _emscripten_glGetUniformfv = _glGetUniformfv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetUniformiv = (program, location, params) => {\n      emscriptenWebGLGetUniform(program, location, params, 0);\n    };\n  var _emscripten_glGetUniformiv = _glGetUniformiv;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformuiv = (program, location, params) =>\n      emscriptenWebGLGetUniform(program, location, params, 0);\n  var _emscripten_glGetUniformuiv = _glGetUniformuiv;\n\n  /** @suppress{checkTypes} */\n  var emscriptenWebGLGetVertexAttrib = (index, pname, params, type) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (GL.currentContext.clientBuffers[index].enabled) {\n        err(\"glGetVertexAttrib*v on client-side array: not supported, bad data returned\");\n      }\n      var data = GLctx.getVertexAttrib(index, pname);\n      if (pname == 0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/) {\n        HEAP32[((params)>>2)] = data && data[\"name\"];\n      } else if (typeof data == 'number' || typeof data == 'boolean') {\n        switch (type) {\n          case 0: HEAP32[((params)>>2)] = data; break;\n          case 2: HEAPF32[((params)>>2)] = data; break;\n          case 5: HEAP32[((params)>>2)] = Math.fround(data); break;\n        }\n      } else {\n        for (var i = 0; i < data.length; i++) {\n          switch (type) {\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 5: HEAP32[(((params)+(i*4))>>2)] = Math.fround(data[i]); break;\n          }\n        }\n      }\n    };\n  /** @suppress {duplicate } */\n  var _glGetVertexAttribIiv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\n    };\n  var _emscripten_glGetVertexAttribIiv = _glGetVertexAttribIiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribIuiv = _glGetVertexAttribIiv;\n  var _emscripten_glGetVertexAttribIuiv = _glGetVertexAttribIuiv;\n\n  /** @suppress {duplicate } */\n  var _glGetVertexAttribPointerv = (index, pname, pointer) => {\n      if (!pointer) {\n        // GLES2 specification does not specify how to behave if pointer is a null pointer. Since calling this function does not make sense\n        // if pointer == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (GL.currentContext.clientBuffers[index].enabled) {\n        err(\"glGetVertexAttribPointer on client-side array: not supported, bad data returned\");\n      }\n      HEAP32[((pointer)>>2)] = GLctx.getVertexAttribOffset(index, pname);\n    };\n  var _emscripten_glGetVertexAttribPointerv = _glGetVertexAttribPointerv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribfv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2);\n    };\n  var _emscripten_glGetVertexAttribfv = _glGetVertexAttribfv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribiv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttrib*f(),\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5);\n    };\n  var _emscripten_glGetVertexAttribiv = _glGetVertexAttribiv;\n\n  /** @suppress {duplicate } */\n  function _glHint(x0, x1) { GLctx.hint(x0, x1) }\n  var _emscripten_glHint = _glHint;\n\n  /** @suppress {duplicate } */\n  var _glInvalidateFramebuffer = (target, numAttachments, attachments) => {\n      var list = tempFixedLengthArray[numAttachments];\n      for (var i = 0; i < numAttachments; i++) {\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\n      }\n  \n      GLctx.invalidateFramebuffer(target, list);\n    };\n  var _emscripten_glInvalidateFramebuffer = _glInvalidateFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glInvalidateSubFramebuffer = (target, numAttachments, attachments, x, y, width, height) => {\n      var list = tempFixedLengthArray[numAttachments];\n      for (var i = 0; i < numAttachments; i++) {\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\n      }\n  \n      GLctx.invalidateSubFramebuffer(target, list, x, y, width, height);\n    };\n  var _emscripten_glInvalidateSubFramebuffer = _glInvalidateSubFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsBuffer = (buffer) => {\n      var b = GL.buffers[buffer];\n      if (!b) return 0;\n      return GLctx.isBuffer(b);\n    };\n  var _emscripten_glIsBuffer = _glIsBuffer;\n\n  /** @suppress {duplicate } */\n  function _glIsEnabled(x0) { return GLctx.isEnabled(x0) }\n  var _emscripten_glIsEnabled = _glIsEnabled;\n\n  /** @suppress {duplicate } */\n  var _glIsFramebuffer = (framebuffer) => {\n      var fb = GL.framebuffers[framebuffer];\n      if (!fb) return 0;\n      return GLctx.isFramebuffer(fb);\n    };\n  var _emscripten_glIsFramebuffer = _glIsFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsProgram = (program) => {\n      program = GL.programs[program];\n      if (!program) return 0;\n      return GLctx.isProgram(program);\n    };\n  var _emscripten_glIsProgram = _glIsProgram;\n\n  /** @suppress {duplicate } */\n  var _glIsQuery = (id) => {\n      var query = GL.queries[id];\n      if (!query) return 0;\n      return GLctx.isQuery(query);\n    };\n  var _emscripten_glIsQuery = _glIsQuery;\n\n  /** @suppress {duplicate } */\n  var _glIsQueryEXT = (id) => {\n      var query = GL.queries[id];\n      if (!query) return 0;\n      return GLctx.disjointTimerQueryExt['isQueryEXT'](query);\n    };\n  var _emscripten_glIsQueryEXT = _glIsQueryEXT;\n\n  /** @suppress {duplicate } */\n  var _glIsRenderbuffer = (renderbuffer) => {\n      var rb = GL.renderbuffers[renderbuffer];\n      if (!rb) return 0;\n      return GLctx.isRenderbuffer(rb);\n    };\n  var _emscripten_glIsRenderbuffer = _glIsRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsSampler = (id) => {\n      var sampler = GL.samplers[id];\n      if (!sampler) return 0;\n      return GLctx.isSampler(sampler);\n    };\n  var _emscripten_glIsSampler = _glIsSampler;\n\n  /** @suppress {duplicate } */\n  var _glIsShader = (shader) => {\n      var s = GL.shaders[shader];\n      if (!s) return 0;\n      return GLctx.isShader(s);\n    };\n  var _emscripten_glIsShader = _glIsShader;\n\n  /** @suppress {duplicate } */\n  var _glIsSync = (sync) => GLctx.isSync(GL.syncs[sync]);\n  var _emscripten_glIsSync = _glIsSync;\n\n  /** @suppress {duplicate } */\n  var _glIsTexture = (id) => {\n      var texture = GL.textures[id];\n      if (!texture) return 0;\n      return GLctx.isTexture(texture);\n    };\n  var _emscripten_glIsTexture = _glIsTexture;\n\n  /** @suppress {duplicate } */\n  var _glIsTransformFeedback = (id) => GLctx.isTransformFeedback(GL.transformFeedbacks[id]);\n  var _emscripten_glIsTransformFeedback = _glIsTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glIsVertexArray = (array) => {\n  \n      var vao = GL.vaos[array];\n      if (!vao) return 0;\n      return GLctx.isVertexArray(vao);\n    };\n  var _emscripten_glIsVertexArray = _glIsVertexArray;\n\n  \n  /** @suppress {duplicate } */\n  var _glIsVertexArrayOES = _glIsVertexArray;\n  var _emscripten_glIsVertexArrayOES = _glIsVertexArrayOES;\n\n  /** @suppress {duplicate } */\n  function _glLineWidth(x0) { GLctx.lineWidth(x0) }\n  var _emscripten_glLineWidth = _glLineWidth;\n\n  /** @suppress {duplicate } */\n  var _glLinkProgram = (program) => {\n      program = GL.programs[program];\n      GLctx.linkProgram(program);\n      // Invalidate earlier computed uniform->ID mappings, those have now become stale\n      program.uniformLocsById = 0; // Mark as null-like so that glGetUniformLocation() knows to populate this again.\n      program.uniformSizeAndIdsByName = {};\n  \n    };\n  var _emscripten_glLinkProgram = _glLinkProgram;\n\n  /** @suppress {duplicate } */\n  function _glPauseTransformFeedback() { GLctx.pauseTransformFeedback() }\n  var _emscripten_glPauseTransformFeedback = _glPauseTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glPixelStorei = (pname, param) => {\n      if (pname == 0xCF5 /* GL_UNPACK_ALIGNMENT */) {\n        GL.unpackAlignment = param;\n      }\n      GLctx.pixelStorei(pname, param);\n    };\n  var _emscripten_glPixelStorei = _glPixelStorei;\n\n  /** @suppress {duplicate } */\n  function _glPolygonOffset(x0, x1) { GLctx.polygonOffset(x0, x1) }\n  var _emscripten_glPolygonOffset = _glPolygonOffset;\n\n  /** @suppress {duplicate } */\n  var _glProgramBinary = (program, binaryFormat, binary, length) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glProgramBinary = _glProgramBinary;\n\n  /** @suppress {duplicate } */\n  var _glProgramParameteri = (program, pname, value) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glProgramParameteri = _glProgramParameteri;\n\n  /** @suppress {duplicate } */\n  var _glQueryCounterEXT = (id, target) => {\n      GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id], target);\n    };\n  var _emscripten_glQueryCounterEXT = _glQueryCounterEXT;\n\n  /** @suppress {duplicate } */\n  function _glReadBuffer(x0) { GLctx.readBuffer(x0) }\n  var _emscripten_glReadBuffer = _glReadBuffer;\n\n  var computeUnpackAlignedImageSize = (width, height, sizePerPixel, alignment) => {\n      function roundedToNextMultipleOf(x, y) {\n        return (x + y - 1) & -y;\n      }\n      var plainRowSize = width * sizePerPixel;\n      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);\n      return height * alignedRowSize;\n    };\n  \n  var colorChannelsInGlTextureFormat = (format) => {\n      // Micro-optimizations for size: map format to size by subtracting smallest enum value (0x1902) from all values first.\n      // Also omit the most common size value (1) from the list, which is assumed by formats not on the list.\n      var colorChannels = {\n        // 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,\n        // 0x1906 /* GL_ALPHA */ - 0x1902: 1,\n        5: 3,\n        6: 4,\n        // 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,\n        8: 2,\n        29502: 3,\n        29504: 4,\n        // 0x1903 /* GL_RED */ - 0x1902: 1,\n        26917: 2,\n        26918: 2,\n        // 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,\n        29846: 3,\n        29847: 4\n      };\n      return colorChannels[format - 0x1902]||1;\n    };\n  \n  var heapObjectForWebGLType = (type) => {\n      // Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare\n      // smaller values for the heap, for shorter generated code size.\n      // Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.\n      // (since most types are HEAPU16)\n      type -= 0x1400;\n      if (type == 0) return HEAP8;\n  \n      if (type == 1) return HEAPU8;\n  \n      if (type == 2) return HEAP16;\n  \n      if (type == 4) return HEAP32;\n  \n      if (type == 6) return HEAPF32;\n  \n      if (type == 5\n        || type == 28922\n        || type == 28520\n        || type == 30779\n        || type == 30782\n        )\n        return HEAPU32;\n  \n      return HEAPU16;\n    };\n  \n  var heapAccessShiftForWebGLHeap = (heap) => {\n      return 31 - Math.clz32(heap.BYTES_PER_ELEMENT);\n    };\n  \n  var emscriptenWebGLGetTexPixelData = (type, format, width, height, pixels, internalFormat) => {\n      var heap = heapObjectForWebGLType(type);\n      var shift = heapAccessShiftForWebGLHeap(heap);\n      var byteSize = 1<<shift;\n      var sizePerPixel = colorChannelsInGlTextureFormat(format) * byteSize;\n      var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel, GL.unpackAlignment);\n      return heap.subarray(pixels >> shift, pixels + bytes >> shift);\n    };\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glReadPixels = (x, y, width, height, format, type, pixels) => {\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        if (GLctx.currentPixelPackBufferBinding) {\n          GLctx.readPixels(x, y, width, height, format, type, pixels);\n        } else {\n          var heap = heapObjectForWebGLType(type);\n          GLctx.readPixels(x, y, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n        }\n        return;\n      }\n      var pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);\n      if (!pixelData) {\n        GL.recordError(0x500/*GL_INVALID_ENUM*/);\n        return;\n      }\n      GLctx.readPixels(x, y, width, height, format, type, pixelData);\n    };\n  var _emscripten_glReadPixels = _glReadPixels;\n\n  /** @suppress {duplicate } */\n  var _glReleaseShaderCompiler = () => {\n      // NOP (as allowed by GLES 2.0 spec)\n    };\n  var _emscripten_glReleaseShaderCompiler = _glReleaseShaderCompiler;\n\n  /** @suppress {duplicate } */\n  function _glRenderbufferStorage(x0, x1, x2, x3) { GLctx.renderbufferStorage(x0, x1, x2, x3) }\n  var _emscripten_glRenderbufferStorage = _glRenderbufferStorage;\n\n  /** @suppress {duplicate } */\n  function _glRenderbufferStorageMultisample(x0, x1, x2, x3, x4) { GLctx.renderbufferStorageMultisample(x0, x1, x2, x3, x4) }\n  var _emscripten_glRenderbufferStorageMultisample = _glRenderbufferStorageMultisample;\n\n  /** @suppress {duplicate } */\n  function _glResumeTransformFeedback() { GLctx.resumeTransformFeedback() }\n  var _emscripten_glResumeTransformFeedback = _glResumeTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glSampleCoverage = (value, invert) => {\n      GLctx.sampleCoverage(value, !!invert);\n    };\n  var _emscripten_glSampleCoverage = _glSampleCoverage;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameterf = (sampler, pname, param) => {\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameterf = _glSamplerParameterf;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameterfv = (sampler, pname, params) => {\n      var param = HEAPF32[((params)>>2)];\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameterfv = _glSamplerParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameteri = (sampler, pname, param) => {\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameteri = _glSamplerParameteri;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameteriv = (sampler, pname, params) => {\n      var param = HEAP32[((params)>>2)];\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameteriv = _glSamplerParameteriv;\n\n  /** @suppress {duplicate } */\n  function _glScissor(x0, x1, x2, x3) { GLctx.scissor(x0, x1, x2, x3) }\n  var _emscripten_glScissor = _glScissor;\n\n  /** @suppress {duplicate } */\n  var _glShaderBinary = (count, shaders, binaryformat, binary, length) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glShaderBinary = _glShaderBinary;\n\n  /** @suppress {duplicate } */\n  var _glShaderSource = (shader, count, string, length) => {\n      var source = GL.getSource(shader, count, string, length);\n  \n      GLctx.shaderSource(GL.shaders[shader], source);\n    };\n  var _emscripten_glShaderSource = _glShaderSource;\n\n  /** @suppress {duplicate } */\n  function _glStencilFunc(x0, x1, x2) { GLctx.stencilFunc(x0, x1, x2) }\n  var _emscripten_glStencilFunc = _glStencilFunc;\n\n  /** @suppress {duplicate } */\n  function _glStencilFuncSeparate(x0, x1, x2, x3) { GLctx.stencilFuncSeparate(x0, x1, x2, x3) }\n  var _emscripten_glStencilFuncSeparate = _glStencilFuncSeparate;\n\n  /** @suppress {duplicate } */\n  function _glStencilMask(x0) { GLctx.stencilMask(x0) }\n  var _emscripten_glStencilMask = _glStencilMask;\n\n  /** @suppress {duplicate } */\n  function _glStencilMaskSeparate(x0, x1) { GLctx.stencilMaskSeparate(x0, x1) }\n  var _emscripten_glStencilMaskSeparate = _glStencilMaskSeparate;\n\n  /** @suppress {duplicate } */\n  function _glStencilOp(x0, x1, x2) { GLctx.stencilOp(x0, x1, x2) }\n  var _emscripten_glStencilOp = _glStencilOp;\n\n  /** @suppress {duplicate } */\n  function _glStencilOpSeparate(x0, x1, x2, x3) { GLctx.stencilOpSeparate(x0, x1, x2, x3) }\n  var _emscripten_glStencilOpSeparate = _glStencilOpSeparate;\n\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glTexImage2D = (target, level, internalFormat, width, height, border, format, type, pixels) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding) {\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\n        } else if (pixels) {\n          var heap = heapObjectForWebGLType(type);\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n        } else {\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, null);\n        }\n        return;\n      }\n      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null);\n    };\n  var _emscripten_glTexImage2D = _glTexImage2D;\n\n  \n  /** @suppress {duplicate } */\n  var _glTexImage3D = (target, level, internalFormat, width, height, depth, border, format, type, pixels) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels);\n      } else if (pixels) {\n        var heap = heapObjectForWebGLType(type);\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n      } else {\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, null);\n      }\n    };\n  var _emscripten_glTexImage3D = _glTexImage3D;\n\n  /** @suppress {duplicate } */\n  function _glTexParameterf(x0, x1, x2) { GLctx.texParameterf(x0, x1, x2) }\n  var _emscripten_glTexParameterf = _glTexParameterf;\n\n  /** @suppress {duplicate } */\n  var _glTexParameterfv = (target, pname, params) => {\n      var param = HEAPF32[((params)>>2)];\n      GLctx.texParameterf(target, pname, param);\n    };\n  var _emscripten_glTexParameterfv = _glTexParameterfv;\n\n  /** @suppress {duplicate } */\n  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }\n  var _emscripten_glTexParameteri = _glTexParameteri;\n\n  /** @suppress {duplicate } */\n  var _glTexParameteriv = (target, pname, params) => {\n      var param = HEAP32[((params)>>2)];\n      GLctx.texParameteri(target, pname, param);\n    };\n  var _emscripten_glTexParameteriv = _glTexParameteriv;\n\n  /** @suppress {duplicate } */\n  function _glTexStorage2D(x0, x1, x2, x3, x4) { GLctx.texStorage2D(x0, x1, x2, x3, x4) }\n  var _emscripten_glTexStorage2D = _glTexStorage2D;\n\n  /** @suppress {duplicate } */\n  function _glTexStorage3D(x0, x1, x2, x3, x4, x5) { GLctx.texStorage3D(x0, x1, x2, x3, x4, x5) }\n  var _emscripten_glTexStorage3D = _glTexStorage3D;\n\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glTexSubImage2D = (target, level, xoffset, yoffset, width, height, format, type, pixels) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding) {\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\n        } else if (pixels) {\n          var heap = heapObjectForWebGLType(type);\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n        } else {\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, null);\n        }\n        return;\n      }\n      var pixelData = null;\n      if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0);\n      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\n    };\n  var _emscripten_glTexSubImage2D = _glTexSubImage2D;\n\n  \n  /** @suppress {duplicate } */\n  var _glTexSubImage3D = (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);\n      } else if (pixels) {\n        var heap = heapObjectForWebGLType(type);\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n      } else {\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, null);\n      }\n    };\n  var _emscripten_glTexSubImage3D = _glTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  var _glTransformFeedbackVaryings = (program, count, varyings, bufferMode) => {\n      program = GL.programs[program];\n      var vars = [];\n      for (var i = 0; i < count; i++)\n        vars.push(UTF8ToString(HEAP32[(((varyings)+(i*4))>>2)]));\n  \n      GLctx.transformFeedbackVaryings(program, vars, bufferMode);\n    };\n  var _emscripten_glTransformFeedbackVaryings = _glTransformFeedbackVaryings;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1f = (location, v0) => {\n      GLctx.uniform1f(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1f = _glUniform1f;\n\n  \n  var miniTempWebGLFloatBuffers = [];\n  \n  /** @suppress {duplicate } */\n  var _glUniform1fv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, value>>2, count);\n        return;\n      }\n  \n      if (count <= 288) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[count-1];\n        for (var i = 0; i < count; ++i) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*4)>>2);\n      }\n      GLctx.uniform1fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform1fv = _glUniform1fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1i = (location, v0) => {\n      GLctx.uniform1i(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1i = _glUniform1i;\n\n  \n  var miniTempWebGLIntBuffers = [];\n  \n  /** @suppress {duplicate } */\n  var _glUniform1iv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, value>>2, count);\n        return;\n      }\n  \n      if (count <= 288) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[count-1];\n        for (var i = 0; i < count; ++i) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*4)>>2);\n      }\n      GLctx.uniform1iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform1iv = _glUniform1iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform1ui = (location, v0) => {\n      GLctx.uniform1ui(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1ui = _glUniform1ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform1uiv = (location, count, value) => {\n      count && GLctx.uniform1uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count);\n    };\n  var _emscripten_glUniform1uiv = _glUniform1uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2f = (location, v0, v1) => {\n      GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2f = _glUniform2f;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform2fv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*2);\n        return;\n      }\n  \n      if (count <= 144) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[2*count-1];\n        for (var i = 0; i < 2*count; i += 2) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*8)>>2);\n      }\n      GLctx.uniform2fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform2fv = _glUniform2fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2i = (location, v0, v1) => {\n      GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2i = _glUniform2i;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform2iv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, value>>2, count*2);\n        return;\n      }\n  \n      if (count <= 144) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[2*count-1];\n        for (var i = 0; i < 2*count; i += 2) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*8)>>2);\n      }\n      GLctx.uniform2iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform2iv = _glUniform2iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform2ui = (location, v0, v1) => {\n      GLctx.uniform2ui(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2ui = _glUniform2ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform2uiv = (location, count, value) => {\n      count && GLctx.uniform2uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*2);\n    };\n  var _emscripten_glUniform2uiv = _glUniform2uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3f = (location, v0, v1, v2) => {\n      GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3f = _glUniform3f;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform3fv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*3);\n        return;\n      }\n  \n      if (count <= 96) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[3*count-1];\n        for (var i = 0; i < 3*count; i += 3) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*12)>>2);\n      }\n      GLctx.uniform3fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform3fv = _glUniform3fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3i = (location, v0, v1, v2) => {\n      GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3i = _glUniform3i;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform3iv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, value>>2, count*3);\n        return;\n      }\n  \n      if (count <= 96) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[3*count-1];\n        for (var i = 0; i < 3*count; i += 3) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*12)>>2);\n      }\n      GLctx.uniform3iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform3iv = _glUniform3iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform3ui = (location, v0, v1, v2) => {\n      GLctx.uniform3ui(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3ui = _glUniform3ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform3uiv = (location, count, value) => {\n      count && GLctx.uniform3uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*3);\n    };\n  var _emscripten_glUniform3uiv = _glUniform3uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4f = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4f = _glUniform4f;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform4fv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*4);\n        return;\n      }\n  \n      if (count <= 72) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[4*count-1];\n        // hoist the heap out of the loop for size and for pthreads+growth.\n        var heap = HEAPF32;\n        value >>= 2;\n        for (var i = 0; i < 4 * count; i += 4) {\n          var dst = value + i;\n          view[i] = heap[dst];\n          view[i + 1] = heap[dst + 1];\n          view[i + 2] = heap[dst + 2];\n          view[i + 3] = heap[dst + 3];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\n      }\n      GLctx.uniform4fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform4fv = _glUniform4fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4i = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4i = _glUniform4i;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform4iv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, value>>2, count*4);\n        return;\n      }\n  \n      if (count <= 72) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[4*count-1];\n        for (var i = 0; i < 4*count; i += 4) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\n          view[i+3] = HEAP32[(((value)+(4*i+12))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*16)>>2);\n      }\n      GLctx.uniform4iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform4iv = _glUniform4iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform4ui = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4ui(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4ui = _glUniform4ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform4uiv = (location, count, value) => {\n      count && GLctx.uniform4uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*4);\n    };\n  var _emscripten_glUniform4uiv = _glUniform4uiv;\n\n  /** @suppress {duplicate } */\n  var _glUniformBlockBinding = (program, uniformBlockIndex, uniformBlockBinding) => {\n      program = GL.programs[program];\n  \n      GLctx.uniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding);\n    };\n  var _emscripten_glUniformBlockBinding = _glUniformBlockBinding;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix2fv = (location, count, transpose, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*4);\n        return;\n      }\n  \n      if (count <= 72) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[4*count-1];\n        for (var i = 0; i < 4*count; i += 4) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\n      }\n      GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, view);\n    };\n  var _emscripten_glUniformMatrix2fv = _glUniformMatrix2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix2x3fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\n    };\n  var _emscripten_glUniformMatrix2x3fv = _glUniformMatrix2x3fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix2x4fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\n    };\n  var _emscripten_glUniformMatrix2x4fv = _glUniformMatrix2x4fv;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix3fv = (location, count, transpose, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*9);\n        return;\n      }\n  \n      if (count <= 32) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[9*count-1];\n        for (var i = 0; i < 9*count; i += 9) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\n          view[i+4] = HEAPF32[(((value)+(4*i+16))>>2)];\n          view[i+5] = HEAPF32[(((value)+(4*i+20))>>2)];\n          view[i+6] = HEAPF32[(((value)+(4*i+24))>>2)];\n          view[i+7] = HEAPF32[(((value)+(4*i+28))>>2)];\n          view[i+8] = HEAPF32[(((value)+(4*i+32))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*36)>>2);\n      }\n      GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, view);\n    };\n  var _emscripten_glUniformMatrix3fv = _glUniformMatrix3fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix3x2fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\n    };\n  var _emscripten_glUniformMatrix3x2fv = _glUniformMatrix3x2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix3x4fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\n    };\n  var _emscripten_glUniformMatrix3x4fv = _glUniformMatrix3x4fv;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix4fv = (location, count, transpose, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*16);\n        return;\n      }\n  \n      if (count <= 18) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[16*count-1];\n        // hoist the heap out of the loop for size and for pthreads+growth.\n        var heap = HEAPF32;\n        value >>= 2;\n        for (var i = 0; i < 16 * count; i += 16) {\n          var dst = value + i;\n          view[i] = heap[dst];\n          view[i + 1] = heap[dst + 1];\n          view[i + 2] = heap[dst + 2];\n          view[i + 3] = heap[dst + 3];\n          view[i + 4] = heap[dst + 4];\n          view[i + 5] = heap[dst + 5];\n          view[i + 6] = heap[dst + 6];\n          view[i + 7] = heap[dst + 7];\n          view[i + 8] = heap[dst + 8];\n          view[i + 9] = heap[dst + 9];\n          view[i + 10] = heap[dst + 10];\n          view[i + 11] = heap[dst + 11];\n          view[i + 12] = heap[dst + 12];\n          view[i + 13] = heap[dst + 13];\n          view[i + 14] = heap[dst + 14];\n          view[i + 15] = heap[dst + 15];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*64)>>2);\n      }\n      GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, view);\n    };\n  var _emscripten_glUniformMatrix4fv = _glUniformMatrix4fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix4x2fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\n    };\n  var _emscripten_glUniformMatrix4x2fv = _glUniformMatrix4x2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix4x3fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\n    };\n  var _emscripten_glUniformMatrix4x3fv = _glUniformMatrix4x3fv;\n\n  /** @suppress {duplicate } */\n  var _glUseProgram = (program) => {\n      program = GL.programs[program];\n      GLctx.useProgram(program);\n      // Record the currently active program so that we can access the uniform\n      // mapping table of that program.\n      GLctx.currentProgram = program;\n    };\n  var _emscripten_glUseProgram = _glUseProgram;\n\n  /** @suppress {duplicate } */\n  var _glValidateProgram = (program) => {\n      GLctx.validateProgram(GL.programs[program]);\n    };\n  var _emscripten_glValidateProgram = _glValidateProgram;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib1f(x0, x1) { GLctx.vertexAttrib1f(x0, x1) }\n  var _emscripten_glVertexAttrib1f = _glVertexAttrib1f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib1fv = (index, v) => {\n  \n      GLctx.vertexAttrib1f(index, HEAPF32[v>>2]);\n    };\n  var _emscripten_glVertexAttrib1fv = _glVertexAttrib1fv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib2f(x0, x1, x2) { GLctx.vertexAttrib2f(x0, x1, x2) }\n  var _emscripten_glVertexAttrib2f = _glVertexAttrib2f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib2fv = (index, v) => {\n  \n      GLctx.vertexAttrib2f(index, HEAPF32[v>>2], HEAPF32[v+4>>2]);\n    };\n  var _emscripten_glVertexAttrib2fv = _glVertexAttrib2fv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib3f(x0, x1, x2, x3) { GLctx.vertexAttrib3f(x0, x1, x2, x3) }\n  var _emscripten_glVertexAttrib3f = _glVertexAttrib3f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib3fv = (index, v) => {\n  \n      GLctx.vertexAttrib3f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2]);\n    };\n  var _emscripten_glVertexAttrib3fv = _glVertexAttrib3fv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib4f(x0, x1, x2, x3, x4) { GLctx.vertexAttrib4f(x0, x1, x2, x3, x4) }\n  var _emscripten_glVertexAttrib4f = _glVertexAttrib4f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib4fv = (index, v) => {\n  \n      GLctx.vertexAttrib4f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2], HEAPF32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttrib4fv = _glVertexAttrib4fv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisor = (index, divisor) => {\n      GLctx.vertexAttribDivisor(index, divisor);\n    };\n  var _emscripten_glVertexAttribDivisor = _glVertexAttribDivisor;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorANGLE = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorANGLE = _glVertexAttribDivisorANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorARB = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorARB = _glVertexAttribDivisorARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorEXT = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorEXT = _glVertexAttribDivisorEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorNV = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorNV = _glVertexAttribDivisorNV;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttribI4i(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4i(x0, x1, x2, x3, x4) }\n  var _emscripten_glVertexAttribI4i = _glVertexAttribI4i;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4iv = (index, v) => {\n      GLctx.vertexAttribI4i(index, HEAP32[v>>2], HEAP32[v+4>>2], HEAP32[v+8>>2], HEAP32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttribI4iv = _glVertexAttribI4iv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttribI4ui(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4ui(x0, x1, x2, x3, x4) }\n  var _emscripten_glVertexAttribI4ui = _glVertexAttribI4ui;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4uiv = (index, v) => {\n      GLctx.vertexAttribI4ui(index, HEAPU32[v>>2], HEAPU32[v+4>>2], HEAPU32[v+8>>2], HEAPU32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttribI4uiv = _glVertexAttribI4uiv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribIPointer = (index, size, type, stride, ptr) => {\n      GLctx.vertexAttribIPointer(index, size, type, stride, ptr);\n    };\n  var _emscripten_glVertexAttribIPointer = _glVertexAttribIPointer;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribPointer = (index, size, type, normalized, stride, ptr) => {\n      var cb = GL.currentContext.clientBuffers[index];\n      if (!GLctx.currentArrayBufferBinding) {\n        cb.size = size;\n        cb.type = type;\n        cb.normalized = normalized;\n        cb.stride = stride;\n        cb.ptr = ptr;\n        cb.clientside = true;\n        cb.vertexAttribPointerAdaptor = function(index, size, type, normalized, stride, ptr) {\n          this.vertexAttribPointer(index, size, type, normalized, stride, ptr);\n        };\n        return;\n      }\n      cb.clientside = false;\n      GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\n    };\n  var _emscripten_glVertexAttribPointer = _glVertexAttribPointer;\n\n  /** @suppress {duplicate } */\n  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }\n  var _emscripten_glViewport = _glViewport;\n\n  /** @suppress {duplicate } */\n  var _glWaitSync = (sync, flags, timeout_low, timeout_high) => {\n      // See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\n      GLctx.waitSync(GL.syncs[sync], flags, timeout);\n    };\n  var _emscripten_glWaitSync = _glWaitSync;\n\n  var _emscripten_has_asyncify = () => 1;\n\n  var _emscripten_memcpy_big = (dest, src, num) => HEAPU8.copyWithin(dest, src, src + num);\n\n  \n  \n  \n  \n  \n  \n  \n  var doRequestFullscreen = (target, strategy) => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      if (!target.requestFullscreen\n        && !target.webkitRequestFullscreen\n        ) {\n        return -3;\n      }\n  \n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\n  \n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\n      if (!canPerformRequests) {\n        if (strategy.deferUntilInEventHandler) {\n          JSEvents.deferCall(JSEvents_requestFullscreen, 1 /* priority over pointer lock */, [target, strategy]);\n          return 1;\n        }\n        return -2;\n      }\n  \n      return JSEvents_requestFullscreen(target, strategy);\n    };\n  \n  \n  var _emscripten_request_fullscreen_strategy = (target, deferUntilInEventHandler, fullscreenStrategy) => {\n      var strategy = {\n        scaleMode: HEAP32[((fullscreenStrategy)>>2)],\n        canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\n        filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\n        deferUntilInEventHandler,\n        canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\n        canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)]\n      };\n  \n      return doRequestFullscreen(target, strategy);\n    };\n\n  \n  \n  var _emscripten_request_pointerlock = (target, deferUntilInEventHandler) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n      if (!target.requestPointerLock\n        ) {\n        return -1;\n      }\n  \n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\n  \n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\n      if (!canPerformRequests) {\n        if (deferUntilInEventHandler) {\n          JSEvents.deferCall(requestPointerLock, 2 /* priority below fullscreen */, [target]);\n          return 1;\n        }\n        return -2;\n      }\n  \n      return requestPointerLock(target);\n    };\n\n  var getHeapMax = () =>\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\n      // for any code that deals with heap sizes, which would require special\n      // casing all heap size related code to treat 0 specially.\n      2147483648;\n  \n  var growMemory = (size) => {\n      var b = wasmMemory.buffer;\n      var pages = (size - b.byteLength + 65535) / 65536;\n      try {\n        // round size grow request up to wasm page size (fixed 64KB per spec)\n        wasmMemory.grow(pages); // .grow() takes a delta compared to the previous size\n        updateMemoryViews();\n        return 1 /*success*/;\n      } catch(e) {\n      }\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\n      // anyhow)\n    };\n  var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      requestedSize >>>= 0;\n      // With multithreaded builds, races can happen (another thread might increase the size\n      // in between), so return a failure, and let the caller retry.\n  \n      // Memory resize rules:\n      // 1.  Always increase heap size to at least the requested size, rounded up\n      //     to next page multiple.\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\n      //     geometrically: increase the heap size according to\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\n      //     linearly: increase the heap size by at least\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\n      // 4.  If we were unable to allocate as much memory, it may be due to\n      //     over-eager decision to excessively reserve due to (3) above.\n      //     Hence if an allocation fails, cut down on the amount of excess\n      //     growth, in an attempt to succeed to perform a smaller allocation.\n  \n      // A limit is set for how much we can grow. We should not exceed that\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n  \n      var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n  \n      // Loop through potential heap size increases. If we attempt a too eager\n      // reservation that fails, cut down on the attempted size and reserve a\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\n  \n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  \n        var replacement = growMemory(newSize);\n        if (replacement) {\n  \n          return true;\n        }\n      }\n      return false;\n    };\n\n  var _emscripten_sample_gamepad_data = () => {\n      return (JSEvents.lastGamepadState = (navigator.getGamepads ? navigator.getGamepads() : (navigator.webkitGetGamepads ? navigator.webkitGetGamepads() : null)))\n        ? 0 : -1;\n    };\n\n  \n  \n  var registerBeforeUnloadEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) => {\n      var beforeUnloadEventHandlerFunc = (e = event) => {\n        // Note: This is always called on the main browser thread, since it needs synchronously return a value!\n        var confirmationMessage = ((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, 0, userData);\n  \n        if (confirmationMessage) {\n          confirmationMessage = UTF8ToString(confirmationMessage);\n        }\n        if (confirmationMessage) {\n          e.preventDefault();\n          e.returnValue = confirmationMessage;\n          return confirmationMessage;\n        }\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: beforeUnloadEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_beforeunload_callback_on_thread = (userData, callbackfunc, targetThread) => {\n      if (typeof onbeforeunload == 'undefined') return -1;\n      // beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,\n      // and there is no time to start proxying it anywhere.\n      if (targetThread !== 1) return -5;\n      return registerBeforeUnloadEventCallback(2, userData, true, callbackfunc, 28, \"beforeunload\");\n    };\n\n  \n  \n  \n  var registerFocusEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.focusEvent) JSEvents.focusEvent = _malloc(256);\n  \n      var focusEventHandlerFunc = (e = event) => {\n        var nodeName = JSEvents.getNodeNameForTarget(e.target);\n        var id = e.target.id ? e.target.id : '';\n  \n        var focusEvent = JSEvents.focusEvent;\n        stringToUTF8(nodeName, focusEvent + 0, 128);\n        stringToUTF8(id, focusEvent + 128, 128);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, focusEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: focusEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_blur_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      return registerFocusEventCallback(target, userData, useCapture, callbackfunc, 12, \"blur\", targetThread);\n    };\n\n\n  \n  var _emscripten_set_element_css_size = (target, width, height) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      target.style.width = width + \"px\";\n      target.style.height = height + \"px\";\n  \n      return 0;\n    };\n\n  var _emscripten_set_focus_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      return registerFocusEventCallback(target, userData, useCapture, callbackfunc, 13, \"focus\", targetThread);\n    };\n\n  \n  \n  \n  var fillFullscreenChangeEventData = (eventStruct) => {\n      var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\n      var isFullscreen = !!fullscreenElement;\n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP32[((eventStruct)>>2)] = isFullscreen;\n      HEAP32[(((eventStruct)+(4))>>2)] = JSEvents.fullscreenEnabled();\n      // If transitioning to fullscreen, report info about the element that is now fullscreen.\n      // If transitioning to windowed mode, report info about the element that just was fullscreen.\n      var reportedElement = isFullscreen ? fullscreenElement : JSEvents.previousFullscreenElement;\n      var nodeName = JSEvents.getNodeNameForTarget(reportedElement);\n      var id = (reportedElement && reportedElement.id) ? reportedElement.id : '';\n      stringToUTF8(nodeName, eventStruct + 8, 128);\n      stringToUTF8(id, eventStruct + 136, 128);\n      HEAP32[(((eventStruct)+(264))>>2)] = reportedElement ? reportedElement.clientWidth : 0;\n      HEAP32[(((eventStruct)+(268))>>2)] = reportedElement ? reportedElement.clientHeight : 0;\n      HEAP32[(((eventStruct)+(272))>>2)] = screen.width;\n      HEAP32[(((eventStruct)+(276))>>2)] = screen.height;\n      if (isFullscreen) {\n        JSEvents.previousFullscreenElement = fullscreenElement;\n      }\n    };\n  \n  \n  var registerFullscreenChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.fullscreenChangeEvent) JSEvents.fullscreenChangeEvent = _malloc(280);\n  \n      var fullscreenChangeEventhandlerFunc = (e = event) => {\n        var fullscreenChangeEvent = JSEvents.fullscreenChangeEvent;\n  \n        fillFullscreenChangeEventData(fullscreenChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, fullscreenChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: fullscreenChangeEventhandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  \n  var _emscripten_set_fullscreenchange_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"webkitfullscreenchange\", targetThread);\n  \n      return registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"fullscreenchange\", targetThread);\n    };\n\n  \n  \n  \n  var registerGamepadEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.gamepadEvent) JSEvents.gamepadEvent = _malloc(1432);\n  \n      var gamepadEventHandlerFunc = (e = event) => {\n        var gamepadEvent = JSEvents.gamepadEvent;\n        fillGamepadEventData(gamepadEvent, e[\"gamepad\"]);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, gamepadEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        allowsDeferredCalls: true,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: gamepadEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_gamepadconnected_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\n      return registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 26, \"gamepadconnected\", targetThread);\n    };\n\n  var _emscripten_set_gamepaddisconnected_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      if (!navigator.getGamepads && !navigator.webkitGetGamepads) return -1;\n      return registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 27, \"gamepaddisconnected\", targetThread);\n    };\n\n  \n  \n  \n  var registerKeyEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.keyEvent) JSEvents.keyEvent = _malloc(176);\n  \n      var keyEventHandlerFunc = (e) => {\n  \n        var keyEventData = JSEvents.keyEvent;\n        HEAPF64[((keyEventData)>>3)] = e.timeStamp;\n  \n        var idx = keyEventData >> 2;\n  \n        HEAP32[idx + 2] = e.location;\n        HEAP32[idx + 3] = e.ctrlKey;\n        HEAP32[idx + 4] = e.shiftKey;\n        HEAP32[idx + 5] = e.altKey;\n        HEAP32[idx + 6] = e.metaKey;\n        HEAP32[idx + 7] = e.repeat;\n        HEAP32[idx + 8] = e.charCode;\n        HEAP32[idx + 9] = e.keyCode;\n        HEAP32[idx + 10] = e.which;\n        stringToUTF8(e.key || '', keyEventData + 44, 32);\n        stringToUTF8(e.code || '', keyEventData + 76, 32);\n        stringToUTF8(e.char || '', keyEventData + 108, 32);\n        stringToUTF8(e.locale || '', keyEventData + 140, 32);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, keyEventData, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        allowsDeferredCalls: true,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: keyEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_keydown_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 2, \"keydown\", targetThread);\n\n  var _emscripten_set_keypress_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 1, \"keypress\", targetThread);\n\n  var _emscripten_set_keyup_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 3, \"keyup\", targetThread);\n\n  \n  var _emscripten_set_main_loop = (func, fps, simulateInfiniteLoop) => {\n      var browserIterationFunc = (() => dynCall_v.call(null, func));\n      setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop);\n    };\n\n  \n  \n  \n  var fillMouseEventData = (eventStruct, e, target) => {\n      HEAPF64[((eventStruct)>>3)] = e.timeStamp;\n      var idx = eventStruct >> 2;\n      HEAP32[idx + 2] = e.screenX;\n      HEAP32[idx + 3] = e.screenY;\n      HEAP32[idx + 4] = e.clientX;\n      HEAP32[idx + 5] = e.clientY;\n      HEAP32[idx + 6] = e.ctrlKey;\n      HEAP32[idx + 7] = e.shiftKey;\n      HEAP32[idx + 8] = e.altKey;\n      HEAP32[idx + 9] = e.metaKey;\n      HEAP16[idx*2 + 20] = e.button;\n      HEAP16[idx*2 + 21] = e.buttons;\n  \n      HEAP32[idx + 11] = e[\"movementX\"]\n        ;\n  \n      HEAP32[idx + 12] = e[\"movementY\"]\n        ;\n  \n      var rect = getBoundingClientRect(target);\n      HEAP32[idx + 13] = e.clientX - rect.left;\n      HEAP32[idx + 14] = e.clientY - rect.top;\n  \n    };\n  \n  \n  var registerMouseEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.mouseEvent) JSEvents.mouseEvent = _malloc(72);\n      target = findEventTarget(target);\n  \n      var mouseEventHandlerFunc = (e = event) => {\n        // TODO: Make this access thread safe, or this could update live while app is reading it.\n        fillMouseEventData(JSEvents.mouseEvent, e, target);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, JSEvents.mouseEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: eventTypeString != 'mousemove' && eventTypeString != 'mouseenter' && eventTypeString != 'mouseleave', // Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: mouseEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_mousedown_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 5, \"mousedown\", targetThread);\n\n  var _emscripten_set_mouseenter_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 33, \"mouseenter\", targetThread);\n\n  var _emscripten_set_mouseleave_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 34, \"mouseleave\", targetThread);\n\n  var _emscripten_set_mousemove_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 8, \"mousemove\", targetThread);\n\n  var _emscripten_set_mouseup_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 6, \"mouseup\", targetThread);\n\n  \n  \n  \n  var fillPointerlockChangeEventData = (eventStruct) => {\n      var pointerLockElement = document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement || document.msPointerLockElement;\n      var isPointerlocked = !!pointerLockElement;\n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP32[((eventStruct)>>2)] = isPointerlocked;\n      var nodeName = JSEvents.getNodeNameForTarget(pointerLockElement);\n      var id = (pointerLockElement && pointerLockElement.id) ? pointerLockElement.id : '';\n      stringToUTF8(nodeName, eventStruct + 4, 128);\n      stringToUTF8(id, eventStruct + 132, 128);\n    };\n  \n  \n  var registerPointerlockChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.pointerlockChangeEvent) JSEvents.pointerlockChangeEvent = _malloc(260);\n  \n      var pointerlockChangeEventHandlerFunc = (e = event) => {\n        var pointerlockChangeEvent = JSEvents.pointerlockChangeEvent;\n        fillPointerlockChangeEventData(pointerlockChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, pointerlockChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: pointerlockChangeEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  \n  /** @suppress {missingProperties} */\n  var _emscripten_set_pointerlockchange_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      // TODO: Currently not supported in pthreads or in --proxy-to-worker mode. (In pthreads mode, document object is not defined)\n      if (!document || !document.body || (!document.body.requestPointerLock && !document.body.mozRequestPointerLock && !document.body.webkitRequestPointerLock && !document.body.msRequestPointerLock)) {\n        return -1;\n      }\n  \n      target = findEventTarget(target);\n      if (!target) return -4;\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mozpointerlockchange\", targetThread);\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"webkitpointerlockchange\", targetThread);\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mspointerlockchange\", targetThread);\n      return registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"pointerlockchange\", targetThread);\n    };\n\n  \n  \n  var registerUiEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.uiEvent) JSEvents.uiEvent = _malloc(36);\n  \n      target = findEventTarget(target);\n  \n      var uiEventHandlerFunc = (e = event) => {\n        if (e.target != target) {\n          // Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that\n          // was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log\n          // message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,\n          // causing a new scroll, etc..\n          return;\n        }\n        var b = document.body; // Take document.body to a variable, Closure compiler does not outline access to it on its own.\n        if (!b) {\n          // During a page unload 'body' can be null, with \"Cannot read property 'clientWidth' of null\" being thrown\n          return;\n        }\n        var uiEvent = JSEvents.uiEvent;\n        HEAP32[((uiEvent)>>2)] = e.detail;\n        HEAP32[(((uiEvent)+(4))>>2)] = b.clientWidth;\n        HEAP32[(((uiEvent)+(8))>>2)] = b.clientHeight;\n        HEAP32[(((uiEvent)+(12))>>2)] = innerWidth;\n        HEAP32[(((uiEvent)+(16))>>2)] = innerHeight;\n        HEAP32[(((uiEvent)+(20))>>2)] = outerWidth;\n        HEAP32[(((uiEvent)+(24))>>2)] = outerHeight;\n        HEAP32[(((uiEvent)+(28))>>2)] = pageXOffset;\n        HEAP32[(((uiEvent)+(32))>>2)] = pageYOffset;\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, uiEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: uiEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_resize_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerUiEventCallback(target, userData, useCapture, callbackfunc, 10, \"resize\", targetThread);\n\n  \n  \n  \n  var registerTouchEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.touchEvent) JSEvents.touchEvent = _malloc(1696);\n  \n      target = findEventTarget(target);\n  \n      var touchEventHandlerFunc = (e) => {\n        var t, touches = {}, et = e.touches;\n        // To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches,\n        // only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in\n        // each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.\n  \n        for (var i = 0; i < et.length; ++i) {\n          t = et[i];\n          // Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any\n          // changed/target states we may have set from previous frame.\n          t.isChanged = t.onTarget = 0;\n          touches[t.identifier] = t;\n        }\n        // Mark which touches are part of the changedTouches list.\n        for (var i = 0; i < e.changedTouches.length; ++i) {\n          t = e.changedTouches[i];\n          t.isChanged = 1;\n          touches[t.identifier] = t;\n        }\n        // Mark which touches are part of the targetTouches list.\n        for (var i = 0; i < e.targetTouches.length; ++i) {\n          touches[e.targetTouches[i].identifier].onTarget = 1;\n        }\n  \n        var touchEvent = JSEvents.touchEvent;\n        HEAPF64[((touchEvent)>>3)] = e.timeStamp;\n        var idx = touchEvent>>2; // Pre-shift the ptr to index to HEAP32 to save code size\n        HEAP32[idx + 3] = e.ctrlKey;\n        HEAP32[idx + 4] = e.shiftKey;\n        HEAP32[idx + 5] = e.altKey;\n        HEAP32[idx + 6] = e.metaKey;\n        idx += 7; // Advance to the start of the touch array.\n        var targetRect = getBoundingClientRect(target);\n        var numTouches = 0;\n        for (var i in touches) {\n          t = touches[i];\n          HEAP32[idx + 0] = t.identifier;\n          HEAP32[idx + 1] = t.screenX;\n          HEAP32[idx + 2] = t.screenY;\n          HEAP32[idx + 3] = t.clientX;\n          HEAP32[idx + 4] = t.clientY;\n          HEAP32[idx + 5] = t.pageX;\n          HEAP32[idx + 6] = t.pageY;\n          HEAP32[idx + 7] = t.isChanged;\n          HEAP32[idx + 8] = t.onTarget;\n          HEAP32[idx + 9] = t.clientX - targetRect.left;\n          HEAP32[idx + 10] = t.clientY - targetRect.top;\n  \n          idx += 13;\n  \n          if (++numTouches > 31) {\n            break;\n          }\n        }\n        HEAP32[(((touchEvent)+(8))>>2)] = numTouches;\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, touchEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: eventTypeString == 'touchstart' || eventTypeString == 'touchend',\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: touchEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_touchcancel_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 25, \"touchcancel\", targetThread);\n\n  var _emscripten_set_touchend_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 23, \"touchend\", targetThread);\n\n  var _emscripten_set_touchmove_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 24, \"touchmove\", targetThread);\n\n  var _emscripten_set_touchstart_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 22, \"touchstart\", targetThread);\n\n  \n  var fillVisibilityChangeEventData = (eventStruct) => {\n      var visibilityStates = [ \"hidden\", \"visible\", \"prerender\", \"unloaded\" ];\n      var visibilityState = visibilityStates.indexOf(document.visibilityState);\n  \n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP32[((eventStruct)>>2)] = document.hidden;\n      HEAP32[(((eventStruct)+(4))>>2)] = visibilityState;\n    };\n  \n  \n  var registerVisibilityChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.visibilityChangeEvent) JSEvents.visibilityChangeEvent = _malloc(8);\n  \n      var visibilityChangeEventHandlerFunc = (e = event) => {\n        var visibilityChangeEvent = JSEvents.visibilityChangeEvent;\n  \n        fillVisibilityChangeEventData(visibilityChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, visibilityChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: visibilityChangeEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_visibilitychange_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      return registerVisibilityChangeEventCallback(specialHTMLTargets[1], userData, useCapture, callbackfunc, 21, \"visibilitychange\", targetThread);\n    };\n\n  \n  \n  \n  \n  var registerWheelEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.wheelEvent) JSEvents.wheelEvent = _malloc(104);\n  \n      // The DOM Level 3 events spec event 'wheel'\n      var wheelHandlerFunc = (e = event) => {\n        var wheelEvent = JSEvents.wheelEvent;\n        fillMouseEventData(wheelEvent, e, target);\n        HEAPF64[(((wheelEvent)+(72))>>3)] = e[\"deltaX\"];\n        HEAPF64[(((wheelEvent)+(80))>>3)] = e[\"deltaY\"];\n        HEAPF64[(((wheelEvent)+(88))>>3)] = e[\"deltaZ\"];\n        HEAP32[(((wheelEvent)+(96))>>2)] = e[\"deltaMode\"];\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, wheelEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: true,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: wheelHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_wheel_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n      if (typeof target.onwheel != 'undefined') {\n        return registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, \"wheel\", targetThread);\n      } else {\n        return -1;\n      }\n    };\n\n  \n  var _emscripten_set_window_title = (title) => {\n      setWindowTitle(UTF8ToString(title));\n    };\n\n  var _emscripten_sleep = (ms) => {\n      // emscripten_sleep() does not return a value, but we still need a |return|\n      // here for stack switching support (ASYNCIFY=2). In that mode this function\n      // returns a Promise instead of nothing, and that Promise is what tells the\n      // wasm VM to pause the stack.\n      return Asyncify.handleSleep((wakeUp) => safeSetTimeout(wakeUp, ms));\n    };\n  _emscripten_sleep.isAsync = true;\n\n  var ENV = {\n  };\n  \n  var getExecutableName = () => {\n      return thisProgram || './this.program';\n    };\n  var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        // Default values.\n        // Browser language detection #8751\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\n        var env = {\n          'USER': 'web_user',\n          'LOGNAME': 'web_user',\n          'PATH': '/',\n          'PWD': '/',\n          'HOME': '/home/web_user',\n          'LANG': lang,\n          '_': getExecutableName()\n        };\n        // Apply the user-provided values, if any.\n        for (var x in ENV) {\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\n          // explicitly set to be so. We allow user code to do that to\n          // force variables with default values to remain unset.\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n  \n  var stringToAscii = (str, buffer) => {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[((buffer++)>>0)] = str.charCodeAt(i);\n      }\n      // Null-terminate the string\n      HEAP8[((buffer)>>0)] = 0;\n    };\n  \n  var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      getEnvStrings().forEach((string, i) => {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(((__environ)+(i*4))>>2)] = ptr;\n        stringToAscii(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    };\n\n  \n  var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[((penviron_count)>>2)] = strings.length;\n      var bufSize = 0;\n      strings.forEach((string) => bufSize += string.length + 1);\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\n      return 0;\n    };\n\n\n  function _fd_close(fd) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      FS.close(stream);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  function _fd_fdstat_get(fd, pbuf) {\n  try {\n  \n      var rightsBase = 0;\n      var rightsInheriting = 0;\n      var flags = 0;\n      {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        // All character devices are terminals (other things a Linux system would\n        // assume is a character device, like the mouse, we have special APIs for).\n        var type = stream.tty ? 2 :\n                   FS.isDir(stream.mode) ? 3 :\n                   FS.isLink(stream.mode) ? 7 :\n                   4;\n      }\n      HEAP8[((pbuf)>>0)] = type;\n      HEAP16[(((pbuf)+(2))>>1)] = flags;\n      (tempI64 = [rightsBase>>>0,(tempDouble=rightsBase,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(8))>>2)] = tempI64[0],HEAP32[(((pbuf)+(12))>>2)] = tempI64[1]);\n      (tempI64 = [rightsInheriting>>>0,(tempDouble=rightsInheriting,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(16))>>2)] = tempI64[0],HEAP32[(((pbuf)+(20))>>2)] = tempI64[1]);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  /** @param {number=} offset */\n  var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break; // nothing more to read\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n  \n  function _fd_read(fd, iov, iovcnt, pnum) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = doReadv(stream, iov, iovcnt);\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  \n  function _fd_seek(fd,offset_low, offset_high,whence,newOffset) {\n    var offset = convertI32PairToI53Checked(offset_low, offset_high);;\n  \n    \n  try {\n  \n      if (isNaN(offset)) return 61;\n      var stream = SYSCALLS.getStreamFromFD(fd);\n      FS.llseek(stream, offset, whence);\n      (tempI64 = [stream.position>>>0,(tempDouble=stream.position,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((newOffset)>>2)] = tempI64[0],HEAP32[(((newOffset)+(4))>>2)] = tempI64[1]);\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  ;\n  }\n\n  /** @param {number=} offset */\n  var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n  \n  function _fd_write(fd, iov, iovcnt, pnum) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = doWritev(stream, iov, iovcnt);\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n\n  \n  var arraySum = (array, index) => {\n      var sum = 0;\n      for (var i = 0; i <= index; sum += array[i++]) {\n        // no-op\n      }\n      return sum;\n    };\n  \n  \n  var MONTH_DAYS_LEAP = [31,29,31,30,31,30,31,31,30,31,30,31];\n  \n  var MONTH_DAYS_REGULAR = [31,28,31,30,31,30,31,31,30,31,30,31];\n  var addDays = (date, days) => {\n      var newDate = new Date(date.getTime());\n      while (days > 0) {\n        var leap = isLeapYear(newDate.getFullYear());\n        var currentMonth = newDate.getMonth();\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\n  \n        if (days > daysInCurrentMonth-newDate.getDate()) {\n          // we spill over to next month\n          days -= (daysInCurrentMonth-newDate.getDate()+1);\n          newDate.setDate(1);\n          if (currentMonth < 11) {\n            newDate.setMonth(currentMonth+1)\n          } else {\n            newDate.setMonth(0);\n            newDate.setFullYear(newDate.getFullYear()+1);\n          }\n        } else {\n          // we stay in current month\n          newDate.setDate(newDate.getDate()+days);\n          return newDate;\n        }\n      }\n  \n      return newDate;\n    };\n  \n  \n  \n  \n  var writeArrayToMemory = (array, buffer) => {\n      HEAP8.set(array, buffer);\n    };\n  \n  var _strftime = (s, maxsize, format, tm) => {\n      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html\n  \n      var tm_zone = HEAPU32[(((tm)+(40))>>2)];\n  \n      var date = {\n        tm_sec: HEAP32[((tm)>>2)],\n        tm_min: HEAP32[(((tm)+(4))>>2)],\n        tm_hour: HEAP32[(((tm)+(8))>>2)],\n        tm_mday: HEAP32[(((tm)+(12))>>2)],\n        tm_mon: HEAP32[(((tm)+(16))>>2)],\n        tm_year: HEAP32[(((tm)+(20))>>2)],\n        tm_wday: HEAP32[(((tm)+(24))>>2)],\n        tm_yday: HEAP32[(((tm)+(28))>>2)],\n        tm_isdst: HEAP32[(((tm)+(32))>>2)],\n        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''\n      };\n  \n      var pattern = UTF8ToString(format);\n  \n      // expand format\n      var EXPANSION_RULES_1 = {\n        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013\n        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y\n        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d\n        '%h': '%b',                       // Equivalent to %b\n        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation\n        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation\n        '%T': '%H:%M:%S',                 // Replaced by the time\n        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation\n        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation\n        // Modified Conversion Specifiers\n        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.\n        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.\n        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.\n        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.\n        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.\n        '%EY': '%Y',                      // Replaced by the full alternative year representation.\n        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.\n        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.\n        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.\n        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.\n        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.\n        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.\n        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.\n        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).\n        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.\n        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.\n        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.\n        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.\n        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.\n      };\n      for (var rule in EXPANSION_RULES_1) {\n        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\n      }\n  \n      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  \n      function leadingSomething(value, digits, character) {\n        var str = typeof value == 'number' ? value.toString() : (value || '');\n        while (str.length < digits) {\n          str = character[0]+str;\n        }\n        return str;\n      }\n  \n      function leadingNulls(value, digits) {\n        return leadingSomething(value, digits, '0');\n      }\n  \n      function compareByDay(date1, date2) {\n        function sgn(value) {\n          return value < 0 ? -1 : (value > 0 ? 1 : 0);\n        }\n  \n        var compare;\n        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {\n          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {\n            compare = sgn(date1.getDate()-date2.getDate());\n          }\n        }\n        return compare;\n      }\n  \n      function getFirstWeekStartDate(janFourth) {\n          switch (janFourth.getDay()) {\n            case 0: // Sunday\n              return new Date(janFourth.getFullYear()-1, 11, 29);\n            case 1: // Monday\n              return janFourth;\n            case 2: // Tuesday\n              return new Date(janFourth.getFullYear(), 0, 3);\n            case 3: // Wednesday\n              return new Date(janFourth.getFullYear(), 0, 2);\n            case 4: // Thursday\n              return new Date(janFourth.getFullYear(), 0, 1);\n            case 5: // Friday\n              return new Date(janFourth.getFullYear()-1, 11, 31);\n            case 6: // Saturday\n              return new Date(janFourth.getFullYear()-1, 11, 30);\n          }\n      }\n  \n      function getWeekBasedYear(date) {\n          var thisDate = addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);\n  \n          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);\n  \n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n  \n          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n            // this date is after the start of the first week of this year\n            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n              return thisDate.getFullYear()+1;\n            }\n            return thisDate.getFullYear();\n          }\n          return thisDate.getFullYear()-1;\n      }\n  \n      var EXPANSION_RULES_2 = {\n        '%a': (date) => WEEKDAYS[date.tm_wday].substring(0,3) ,\n        '%A': (date) => WEEKDAYS[date.tm_wday],\n        '%b': (date) => MONTHS[date.tm_mon].substring(0,3),\n        '%B': (date) => MONTHS[date.tm_mon],\n        '%C': (date) => {\n          var year = date.tm_year+1900;\n          return leadingNulls((year/100)|0,2);\n        },\n        '%d': (date) => leadingNulls(date.tm_mday, 2),\n        '%e': (date) => leadingSomething(date.tm_mday, 2, ' '),\n        '%g': (date) => {\n          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.\n          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes\n          // January 4th, which is also the week that includes the first Thursday of the year, and\n          // is also the first week that contains at least four days in the year.\n          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of\n          // the last week of the preceding year; thus, for Saturday 2nd January 1999,\n          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,\n          // or 31st is a Monday, it and any following days are part of week 1 of the following year.\n          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.\n  \n          return getWeekBasedYear(date).toString().substring(2);\n        },\n        '%G': (date) => getWeekBasedYear(date),\n        '%H': (date) => leadingNulls(date.tm_hour, 2),\n        '%I': (date) => {\n          var twelveHour = date.tm_hour;\n          if (twelveHour == 0) twelveHour = 12;\n          else if (twelveHour > 12) twelveHour -= 12;\n          return leadingNulls(twelveHour, 2);\n        },\n        '%j': (date) => {\n          // Day of the year (001-366)\n          return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year+1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon-1), 3);\n        },\n        '%m': (date) => leadingNulls(date.tm_mon+1, 2),\n        '%M': (date) => leadingNulls(date.tm_min, 2),\n        '%n': () => '\\n',\n        '%p': (date) => {\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\n            return 'AM';\n          }\n          return 'PM';\n        },\n        '%S': (date) => leadingNulls(date.tm_sec, 2),\n        '%t': () => '\\t',\n        '%u': (date) => date.tm_wday || 7,\n        '%U': (date) => {\n          var days = date.tm_yday + 7 - date.tm_wday;\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        '%V': (date) => {\n          // Replaced by the week number of the year (Monday as the first day of the week)\n          // as a decimal number [01,53]. If the week containing 1 January has four\n          // or more days in the new year, then it is considered week 1.\n          // Otherwise, it is the last week of the previous year, and the next week is week 1.\n          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]\n          var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7 ) / 7);\n          // If 1 Jan is just 1-3 days past Monday, the previous week\n          // is also in this year.\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n            val++;\n          }\n          if (!val) {\n            val = 52;\n            // If 31 December of prev year a Thursday, or Friday of a\n            // leap year, then the prev year has 53 weeks.\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n            if (dec31 == 4 || (dec31 == 5 && isLeapYear(date.tm_year%400-1))) {\n              val++;\n            }\n          } else if (val == 53) {\n            // If 1 January is not a Thursday, and not a Wednesday of a\n            // leap year, then this year has only 52 weeks.\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year)))\n              val = 1;\n          }\n          return leadingNulls(val, 2);\n        },\n        '%w': (date) => date.tm_wday,\n        '%W': (date) => {\n          var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        '%y': (date) => {\n          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]\n          return (date.tm_year+1900).toString().substring(2);\n        },\n        // Replaced by the year as a decimal number (for example, 1997). [ tm_year]\n        '%Y': (date) => date.tm_year+1900,\n        '%z': (date) => {\n          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).\n          // For example, \"-0430\" means 4 hours 30 minutes behind UTC (west of Greenwich).\n          var off = date.tm_gmtoff;\n          var ahead = off >= 0;\n          off = Math.abs(off) / 60;\n          // convert from minutes into hhmm format (which means 60 minutes = 100 units)\n          off = (off / 60)*100 + (off % 60);\n          return (ahead ? '+' : '-') + String(\"0000\" + off).slice(-4);\n        },\n        '%Z': (date) => date.tm_zone,\n        '%%': () => '%'\n      };\n  \n      // Replace %% with a pair of NULLs (which cannot occur in a C string), then\n      // re-inject them after processing.\n      pattern = pattern.replace(/%%/g, '\\0\\0')\n      for (var rule in EXPANSION_RULES_2) {\n        if (pattern.includes(rule)) {\n          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\n        }\n      }\n      pattern = pattern.replace(/\\0\\0/g, '%')\n  \n      var bytes = intArrayFromString(pattern, false);\n      if (bytes.length > maxsize) {\n        return 0;\n      }\n  \n      writeArrayToMemory(bytes, s);\n      return bytes.length-1;\n    };\n\n  var _strftime_l = (s, maxsize, format, tm, loc) => {\n      return _strftime(s, maxsize, format, tm); // no locale support yet\n    };\n\n\n\n\n\n  var runAndAbortIfError = (func) => {\n      try {\n        return func();\n      } catch (e) {\n        abort(e);\n      }\n    };\n  \n  \n  var sigToWasmTypes = (sig) => {\n      var typeNames = {\n        'i': 'i32',\n        'j': 'i64',\n        'f': 'f32',\n        'd': 'f64',\n        'p': 'i32',\n      };\n      var type = {\n        parameters: [],\n        results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\n      };\n      for (var i = 1; i < sig.length; ++i) {\n        type.parameters.push(typeNames[sig[i]]);\n      }\n      return type;\n    };\n  \n  var runtimeKeepalivePush = () => {\n      runtimeKeepaliveCounter += 1;\n    };\n  \n  var runtimeKeepalivePop = () => {\n      runtimeKeepaliveCounter -= 1;\n    };\n  \n  \n  var Asyncify = {\n  instrumentWasmImports(imports) {\n        var importPatterns = [/^invoke_.*$/,/^fd_sync$/,/^__wasi_fd_sync$/,/^__asyncjs__.*$/,/^emscripten_promise_await$/,/^emscripten_idb_load$/,/^emscripten_idb_store$/,/^emscripten_idb_delete$/,/^emscripten_idb_exists$/,/^emscripten_idb_load_blob$/,/^emscripten_idb_store_blob$/,/^emscripten_sleep$/,/^emscripten_wget_data$/,/^emscripten_scan_registers$/,/^emscripten_lazy_load_code$/,/^_load_secondary_module$/,/^emscripten_fiber_swap$/];\n  \n        for (var x in imports) {\n          (function(x) {\n            var original = imports[x];\n            var sig = original.sig;\n            if (typeof original == 'function') {\n              var isAsyncifyImport = original.isAsync ||\n                                     importPatterns.some(pattern => !!x.match(pattern));\n            }\n          })(x);\n        }\n      },\n  instrumentWasmExports(exports) {\n        var ret = {};\n        for (var x in exports) {\n          (function(x) {\n            var original = exports[x];\n            if (typeof original == 'function') {\n              ret[x] = function() {\n                Asyncify.exportCallStack.push(x);\n                try {\n                  return original.apply(null, arguments);\n                } finally {\n                  if (!ABORT) {\n                    var y = Asyncify.exportCallStack.pop();\n                    assert(y === x);\n                    Asyncify.maybeStopUnwind();\n                  }\n                }\n              };\n            } else {\n              ret[x] = original;\n            }\n          })(x);\n        }\n        return ret;\n      },\n  State:{\n  Normal:0,\n  Unwinding:1,\n  Rewinding:2,\n  Disabled:3,\n  },\n  state:0,\n  StackSize:4096,\n  currData:null,\n  handleSleepReturnValue:0,\n  exportCallStack:[],\n  callStackNameToId:{\n  },\n  callStackIdToName:{\n  },\n  callStackId:0,\n  asyncPromiseHandlers:null,\n  sleepCallbacks:[],\n  getCallStackId(funcName) {\n        var id = Asyncify.callStackNameToId[funcName];\n        if (id === undefined) {\n          id = Asyncify.callStackId++;\n          Asyncify.callStackNameToId[funcName] = id;\n          Asyncify.callStackIdToName[id] = funcName;\n        }\n        return id;\n      },\n  maybeStopUnwind() {\n        if (Asyncify.currData &&\n            Asyncify.state === Asyncify.State.Unwinding &&\n            Asyncify.exportCallStack.length === 0) {\n          // We just finished unwinding.\n          // Be sure to set the state before calling any other functions to avoid\n          // possible infinite recursion here (For example in debug pthread builds\n          // the dbg() function itself can call back into WebAssembly to get the\n          // current pthread_self() pointer).\n          Asyncify.state = Asyncify.State.Normal;\n          \n          // Keep the runtime alive so that a re-wind can be done later.\n          runAndAbortIfError(_asyncify_stop_unwind);\n          if (typeof Fibers != 'undefined') {\n            Fibers.trampoline();\n          }\n        }\n      },\n  whenDone() {\n        return new Promise((resolve, reject) => {\n          Asyncify.asyncPromiseHandlers = { resolve, reject };\n        });\n      },\n  allocateData() {\n        // An asyncify data structure has three fields:\n        //  0  current stack pos\n        //  4  max stack pos\n        //  8  id of function at bottom of the call stack (callStackIdToName[id] == name of js function)\n        //\n        // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\n        // We also embed a stack in the same memory region here, right next to the structure.\n        // This struct is also defined as asyncify_data_t in emscripten/fiber.h\n        var ptr = _malloc(12 + Asyncify.StackSize);\n        Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\n        Asyncify.setDataRewindFunc(ptr);\n        return ptr;\n      },\n  setDataHeader(ptr, stack, stackSize) {\n        HEAPU32[((ptr)>>2)] = stack;\n        HEAPU32[(((ptr)+(4))>>2)] = stack + stackSize;\n      },\n  setDataRewindFunc(ptr) {\n        var bottomOfCallStack = Asyncify.exportCallStack[0];\n        var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\n        HEAP32[(((ptr)+(8))>>2)] = rewindId;\n      },\n  getDataRewindFunc(ptr) {\n        var id = HEAP32[(((ptr)+(8))>>2)];\n        var name = Asyncify.callStackIdToName[id];\n        var func = wasmExports[name];\n        return func;\n      },\n  doRewind(ptr) {\n        var start = Asyncify.getDataRewindFunc(ptr);\n        // Once we have rewound and the stack we no longer need to artificially\n        // keep the runtime alive.\n        \n        return start();\n      },\n  handleSleep(startAsync) {\n        if (ABORT) return;\n        if (Asyncify.state === Asyncify.State.Normal) {\n          // Prepare to sleep. Call startAsync, and see what happens:\n          // if the code decided to call our callback synchronously,\n          // then no async operation was in fact begun, and we don't\n          // need to do anything.\n          var reachedCallback = false;\n          var reachedAfterCallback = false;\n          startAsync((handleSleepReturnValue = 0) => {\n            if (ABORT) return;\n            Asyncify.handleSleepReturnValue = handleSleepReturnValue;\n            reachedCallback = true;\n            if (!reachedAfterCallback) {\n              // We are happening synchronously, so no need for async.\n              return;\n            }\n            Asyncify.state = Asyncify.State.Rewinding;\n            runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\n              Browser.mainLoop.resume();\n            }\n            var asyncWasmReturnValue, isError = false;\n            try {\n              asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\n            } catch (err) {\n              asyncWasmReturnValue = err;\n              isError = true;\n            }\n            // Track whether the return value was handled by any promise handlers.\n            var handled = false;\n            if (!Asyncify.currData) {\n              // All asynchronous execution has finished.\n              // `asyncWasmReturnValue` now contains the final\n              // return value of the exported async WASM function.\n              //\n              // Note: `asyncWasmReturnValue` is distinct from\n              // `Asyncify.handleSleepReturnValue`.\n              // `Asyncify.handleSleepReturnValue` contains the return\n              // value of the last C function to have executed\n              // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\n              // contains the return value of the exported WASM function\n              // that may have called C functions that\n              // call `Asyncify.handleSleep()`.\n              var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\n              if (asyncPromiseHandlers) {\n                Asyncify.asyncPromiseHandlers = null;\n                (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\n                handled = true;\n              }\n            }\n            if (isError && !handled) {\n              // If there was an error and it was not handled by now, we have no choice but to\n              // rethrow that error into the global scope where it can be caught only by\n              // `onerror` or `onunhandledpromiserejection`.\n              throw asyncWasmReturnValue;\n            }\n          });\n          reachedAfterCallback = true;\n          if (!reachedCallback) {\n            // A true async operation was begun; start a sleep.\n            Asyncify.state = Asyncify.State.Unwinding;\n            // TODO: reuse, don't alloc/free every sleep\n            Asyncify.currData = Asyncify.allocateData();\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\n              Browser.mainLoop.pause();\n            }\n            runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\n          }\n        } else if (Asyncify.state === Asyncify.State.Rewinding) {\n          // Stop a resume.\n          Asyncify.state = Asyncify.State.Normal;\n          runAndAbortIfError(_asyncify_stop_rewind);\n          _free(Asyncify.currData);\n          Asyncify.currData = null;\n          // Call all sleep callbacks now that the sleep-resume is all done.\n          Asyncify.sleepCallbacks.forEach((func) => callUserCallback(func));\n        } else {\n          abort(`invalid state: ${Asyncify.state}`);\n        }\n        return Asyncify.handleSleepReturnValue;\n      },\n  handleAsync(startAsync) {\n        return Asyncify.handleSleep((wakeUp) => {\n          // TODO: add error handling as a second param when handleSleep implements it.\n          startAsync().then(wakeUp);\n        });\n      },\n  };\n\n\n\n  var FSNode = /** @constructor */ function(parent, name, mode, rdev) {\n    if (!parent) {\n      parent = this;  // root node sets parent to itself\n    }\n    this.parent = parent;\n    this.mount = parent.mount;\n    this.mounted = null;\n    this.id = FS.nextInode++;\n    this.name = name;\n    this.mode = mode;\n    this.node_ops = {};\n    this.stream_ops = {};\n    this.rdev = rdev;\n  };\n  var readMode = 292/*292*/ | 73/*73*/;\n  var writeMode = 146/*146*/;\n  Object.defineProperties(FSNode.prototype, {\n   read: {\n    get: /** @this{FSNode} */function() {\n     return (this.mode & readMode) === readMode;\n    },\n    set: /** @this{FSNode} */function(val) {\n     val ? this.mode |= readMode : this.mode &= ~readMode;\n    }\n   },\n   write: {\n    get: /** @this{FSNode} */function() {\n     return (this.mode & writeMode) === writeMode;\n    },\n    set: /** @this{FSNode} */function(val) {\n     val ? this.mode |= writeMode : this.mode &= ~writeMode;\n    }\n   },\n   isFolder: {\n    get: /** @this{FSNode} */function() {\n     return FS.isDir(this.mode);\n    }\n   },\n   isDevice: {\n    get: /** @this{FSNode} */function() {\n     return FS.isChrdev(this.mode);\n    }\n   }\n  });\n  FS.FSNode = FSNode;\n  FS.createPreloadedFile = FS_createPreloadedFile;\n  FS.staticInit();Module[\"FS_createPath\"] = FS.createPath;Module[\"FS_createDataFile\"] = FS.createDataFile;Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;Module[\"FS_unlink\"] = FS.unlink;Module[\"FS_createLazyFile\"] = FS.createLazyFile;Module[\"FS_createDevice\"] = FS.createDevice;;\n\n      // exports\n      Module[\"requestFullscreen\"] = (lockPointer, resizeCanvas) => Browser.requestFullscreen(lockPointer, resizeCanvas);\n      Module[\"requestAnimationFrame\"] = (func) => Browser.requestAnimationFrame(func);\n      Module[\"setCanvasSize\"] = (width, height, noUpdates) => Browser.setCanvasSize(width, height, noUpdates);\n      Module[\"pauseMainLoop\"] = () => Browser.mainLoop.pause();\n      Module[\"resumeMainLoop\"] = () => Browser.mainLoop.resume();\n      Module[\"getUserMedia\"] = () => Browser.getUserMedia();\n      Module[\"createContext\"] = (canvas, useWebGL, setInModule, webGLContextAttributes) => Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes);\n      var preloadedImages = {};\n      var preloadedAudios = {};;\nvar GLctx;;\nfor (var i = 0; i < 32; ++i) tempFixedLengthArray.push(new Array(i));;\nvar miniTempWebGLFloatBuffersStorage = new Float32Array(288);\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\n  miniTempWebGLFloatBuffers[i] = miniTempWebGLFloatBuffersStorage.subarray(0, i+1);\n  }\n  ;\nvar miniTempWebGLIntBuffersStorage = new Int32Array(288);\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\n  miniTempWebGLIntBuffers[i] = miniTempWebGLIntBuffersStorage.subarray(0, i+1);\n  }\n  ;\nvar wasmImports = {\n  __cxa_throw: ___cxa_throw,\n  __syscall_chmod: ___syscall_chmod,\n  __syscall_fchmod: ___syscall_fchmod,\n  __syscall_fcntl64: ___syscall_fcntl64,\n  __syscall_fstat64: ___syscall_fstat64,\n  __syscall_ftruncate64: ___syscall_ftruncate64,\n  __syscall_getcwd: ___syscall_getcwd,\n  __syscall_getdents64: ___syscall_getdents64,\n  __syscall_ioctl: ___syscall_ioctl,\n  __syscall_lstat64: ___syscall_lstat64,\n  __syscall_mkdirat: ___syscall_mkdirat,\n  __syscall_newfstatat: ___syscall_newfstatat,\n  __syscall_openat: ___syscall_openat,\n  __syscall_rmdir: ___syscall_rmdir,\n  __syscall_stat64: ___syscall_stat64,\n  __syscall_unlinkat: ___syscall_unlinkat,\n  _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n  _localtime_js: __localtime_js,\n  _mktime_js: __mktime_js,\n  _tzset_js: __tzset_js,\n  abort: _abort,\n  eglBindAPI: _eglBindAPI,\n  eglChooseConfig: _eglChooseConfig,\n  eglCreateContext: _eglCreateContext,\n  eglCreateWindowSurface: _eglCreateWindowSurface,\n  eglDestroyContext: _eglDestroyContext,\n  eglDestroySurface: _eglDestroySurface,\n  eglGetConfigAttrib: _eglGetConfigAttrib,\n  eglGetDisplay: _eglGetDisplay,\n  eglGetError: _eglGetError,\n  eglInitialize: _eglInitialize,\n  eglMakeCurrent: _eglMakeCurrent,\n  eglQueryString: _eglQueryString,\n  eglSwapBuffers: _eglSwapBuffers,\n  eglSwapInterval: _eglSwapInterval,\n  eglTerminate: _eglTerminate,\n  eglWaitGL: _eglWaitGL,\n  eglWaitNative: _eglWaitNative,\n  emscripten_asm_const_int: _emscripten_asm_const_int,\n  emscripten_asm_const_int_sync_on_main_thread: _emscripten_asm_const_int_sync_on_main_thread,\n  emscripten_date_now: _emscripten_date_now,\n  emscripten_enter_soft_fullscreen: _emscripten_enter_soft_fullscreen,\n  emscripten_exit_fullscreen: _emscripten_exit_fullscreen,\n  emscripten_exit_pointerlock: _emscripten_exit_pointerlock,\n  emscripten_exit_soft_fullscreen: _emscripten_exit_soft_fullscreen,\n  emscripten_get_device_pixel_ratio: _emscripten_get_device_pixel_ratio,\n  emscripten_get_element_css_size: _emscripten_get_element_css_size,\n  emscripten_get_gamepad_status: _emscripten_get_gamepad_status,\n  emscripten_get_now: _emscripten_get_now,\n  emscripten_get_num_gamepads: _emscripten_get_num_gamepads,\n  emscripten_get_screen_size: _emscripten_get_screen_size,\n  emscripten_glActiveTexture: _emscripten_glActiveTexture,\n  emscripten_glAttachShader: _emscripten_glAttachShader,\n  emscripten_glBeginQuery: _emscripten_glBeginQuery,\n  emscripten_glBeginQueryEXT: _emscripten_glBeginQueryEXT,\n  emscripten_glBeginTransformFeedback: _emscripten_glBeginTransformFeedback,\n  emscripten_glBindAttribLocation: _emscripten_glBindAttribLocation,\n  emscripten_glBindBuffer: _emscripten_glBindBuffer,\n  emscripten_glBindBufferBase: _emscripten_glBindBufferBase,\n  emscripten_glBindBufferRange: _emscripten_glBindBufferRange,\n  emscripten_glBindFramebuffer: _emscripten_glBindFramebuffer,\n  emscripten_glBindRenderbuffer: _emscripten_glBindRenderbuffer,\n  emscripten_glBindSampler: _emscripten_glBindSampler,\n  emscripten_glBindTexture: _emscripten_glBindTexture,\n  emscripten_glBindTransformFeedback: _emscripten_glBindTransformFeedback,\n  emscripten_glBindVertexArray: _emscripten_glBindVertexArray,\n  emscripten_glBindVertexArrayOES: _emscripten_glBindVertexArrayOES,\n  emscripten_glBlendColor: _emscripten_glBlendColor,\n  emscripten_glBlendEquation: _emscripten_glBlendEquation,\n  emscripten_glBlendEquationSeparate: _emscripten_glBlendEquationSeparate,\n  emscripten_glBlendFunc: _emscripten_glBlendFunc,\n  emscripten_glBlendFuncSeparate: _emscripten_glBlendFuncSeparate,\n  emscripten_glBlitFramebuffer: _emscripten_glBlitFramebuffer,\n  emscripten_glBufferData: _emscripten_glBufferData,\n  emscripten_glBufferSubData: _emscripten_glBufferSubData,\n  emscripten_glCheckFramebufferStatus: _emscripten_glCheckFramebufferStatus,\n  emscripten_glClear: _emscripten_glClear,\n  emscripten_glClearBufferfi: _emscripten_glClearBufferfi,\n  emscripten_glClearBufferfv: _emscripten_glClearBufferfv,\n  emscripten_glClearBufferiv: _emscripten_glClearBufferiv,\n  emscripten_glClearBufferuiv: _emscripten_glClearBufferuiv,\n  emscripten_glClearColor: _emscripten_glClearColor,\n  emscripten_glClearDepthf: _emscripten_glClearDepthf,\n  emscripten_glClearStencil: _emscripten_glClearStencil,\n  emscripten_glClientWaitSync: _emscripten_glClientWaitSync,\n  emscripten_glColorMask: _emscripten_glColorMask,\n  emscripten_glCompileShader: _emscripten_glCompileShader,\n  emscripten_glCompressedTexImage2D: _emscripten_glCompressedTexImage2D,\n  emscripten_glCompressedTexImage3D: _emscripten_glCompressedTexImage3D,\n  emscripten_glCompressedTexSubImage2D: _emscripten_glCompressedTexSubImage2D,\n  emscripten_glCompressedTexSubImage3D: _emscripten_glCompressedTexSubImage3D,\n  emscripten_glCopyBufferSubData: _emscripten_glCopyBufferSubData,\n  emscripten_glCopyTexImage2D: _emscripten_glCopyTexImage2D,\n  emscripten_glCopyTexSubImage2D: _emscripten_glCopyTexSubImage2D,\n  emscripten_glCopyTexSubImage3D: _emscripten_glCopyTexSubImage3D,\n  emscripten_glCreateProgram: _emscripten_glCreateProgram,\n  emscripten_glCreateShader: _emscripten_glCreateShader,\n  emscripten_glCullFace: _emscripten_glCullFace,\n  emscripten_glDeleteBuffers: _emscripten_glDeleteBuffers,\n  emscripten_glDeleteFramebuffers: _emscripten_glDeleteFramebuffers,\n  emscripten_glDeleteProgram: _emscripten_glDeleteProgram,\n  emscripten_glDeleteQueries: _emscripten_glDeleteQueries,\n  emscripten_glDeleteQueriesEXT: _emscripten_glDeleteQueriesEXT,\n  emscripten_glDeleteRenderbuffers: _emscripten_glDeleteRenderbuffers,\n  emscripten_glDeleteSamplers: _emscripten_glDeleteSamplers,\n  emscripten_glDeleteShader: _emscripten_glDeleteShader,\n  emscripten_glDeleteSync: _emscripten_glDeleteSync,\n  emscripten_glDeleteTextures: _emscripten_glDeleteTextures,\n  emscripten_glDeleteTransformFeedbacks: _emscripten_glDeleteTransformFeedbacks,\n  emscripten_glDeleteVertexArrays: _emscripten_glDeleteVertexArrays,\n  emscripten_glDeleteVertexArraysOES: _emscripten_glDeleteVertexArraysOES,\n  emscripten_glDepthFunc: _emscripten_glDepthFunc,\n  emscripten_glDepthMask: _emscripten_glDepthMask,\n  emscripten_glDepthRangef: _emscripten_glDepthRangef,\n  emscripten_glDetachShader: _emscripten_glDetachShader,\n  emscripten_glDisable: _emscripten_glDisable,\n  emscripten_glDisableVertexAttribArray: _emscripten_glDisableVertexAttribArray,\n  emscripten_glDrawArrays: _emscripten_glDrawArrays,\n  emscripten_glDrawArraysInstanced: _emscripten_glDrawArraysInstanced,\n  emscripten_glDrawArraysInstancedANGLE: _emscripten_glDrawArraysInstancedANGLE,\n  emscripten_glDrawArraysInstancedARB: _emscripten_glDrawArraysInstancedARB,\n  emscripten_glDrawArraysInstancedEXT: _emscripten_glDrawArraysInstancedEXT,\n  emscripten_glDrawArraysInstancedNV: _emscripten_glDrawArraysInstancedNV,\n  emscripten_glDrawBuffers: _emscripten_glDrawBuffers,\n  emscripten_glDrawBuffersEXT: _emscripten_glDrawBuffersEXT,\n  emscripten_glDrawBuffersWEBGL: _emscripten_glDrawBuffersWEBGL,\n  emscripten_glDrawElements: _emscripten_glDrawElements,\n  emscripten_glDrawElementsInstanced: _emscripten_glDrawElementsInstanced,\n  emscripten_glDrawElementsInstancedANGLE: _emscripten_glDrawElementsInstancedANGLE,\n  emscripten_glDrawElementsInstancedARB: _emscripten_glDrawElementsInstancedARB,\n  emscripten_glDrawElementsInstancedEXT: _emscripten_glDrawElementsInstancedEXT,\n  emscripten_glDrawElementsInstancedNV: _emscripten_glDrawElementsInstancedNV,\n  emscripten_glDrawRangeElements: _emscripten_glDrawRangeElements,\n  emscripten_glEnable: _emscripten_glEnable,\n  emscripten_glEnableVertexAttribArray: _emscripten_glEnableVertexAttribArray,\n  emscripten_glEndQuery: _emscripten_glEndQuery,\n  emscripten_glEndQueryEXT: _emscripten_glEndQueryEXT,\n  emscripten_glEndTransformFeedback: _emscripten_glEndTransformFeedback,\n  emscripten_glFenceSync: _emscripten_glFenceSync,\n  emscripten_glFinish: _emscripten_glFinish,\n  emscripten_glFlush: _emscripten_glFlush,\n  emscripten_glFramebufferRenderbuffer: _emscripten_glFramebufferRenderbuffer,\n  emscripten_glFramebufferTexture2D: _emscripten_glFramebufferTexture2D,\n  emscripten_glFramebufferTextureLayer: _emscripten_glFramebufferTextureLayer,\n  emscripten_glFrontFace: _emscripten_glFrontFace,\n  emscripten_glGenBuffers: _emscripten_glGenBuffers,\n  emscripten_glGenFramebuffers: _emscripten_glGenFramebuffers,\n  emscripten_glGenQueries: _emscripten_glGenQueries,\n  emscripten_glGenQueriesEXT: _emscripten_glGenQueriesEXT,\n  emscripten_glGenRenderbuffers: _emscripten_glGenRenderbuffers,\n  emscripten_glGenSamplers: _emscripten_glGenSamplers,\n  emscripten_glGenTextures: _emscripten_glGenTextures,\n  emscripten_glGenTransformFeedbacks: _emscripten_glGenTransformFeedbacks,\n  emscripten_glGenVertexArrays: _emscripten_glGenVertexArrays,\n  emscripten_glGenVertexArraysOES: _emscripten_glGenVertexArraysOES,\n  emscripten_glGenerateMipmap: _emscripten_glGenerateMipmap,\n  emscripten_glGetActiveAttrib: _emscripten_glGetActiveAttrib,\n  emscripten_glGetActiveUniform: _emscripten_glGetActiveUniform,\n  emscripten_glGetActiveUniformBlockName: _emscripten_glGetActiveUniformBlockName,\n  emscripten_glGetActiveUniformBlockiv: _emscripten_glGetActiveUniformBlockiv,\n  emscripten_glGetActiveUniformsiv: _emscripten_glGetActiveUniformsiv,\n  emscripten_glGetAttachedShaders: _emscripten_glGetAttachedShaders,\n  emscripten_glGetAttribLocation: _emscripten_glGetAttribLocation,\n  emscripten_glGetBooleanv: _emscripten_glGetBooleanv,\n  emscripten_glGetBufferParameteri64v: _emscripten_glGetBufferParameteri64v,\n  emscripten_glGetBufferParameteriv: _emscripten_glGetBufferParameteriv,\n  emscripten_glGetError: _emscripten_glGetError,\n  emscripten_glGetFloatv: _emscripten_glGetFloatv,\n  emscripten_glGetFragDataLocation: _emscripten_glGetFragDataLocation,\n  emscripten_glGetFramebufferAttachmentParameteriv: _emscripten_glGetFramebufferAttachmentParameteriv,\n  emscripten_glGetInteger64i_v: _emscripten_glGetInteger64i_v,\n  emscripten_glGetInteger64v: _emscripten_glGetInteger64v,\n  emscripten_glGetIntegeri_v: _emscripten_glGetIntegeri_v,\n  emscripten_glGetIntegerv: _emscripten_glGetIntegerv,\n  emscripten_glGetInternalformativ: _emscripten_glGetInternalformativ,\n  emscripten_glGetProgramBinary: _emscripten_glGetProgramBinary,\n  emscripten_glGetProgramInfoLog: _emscripten_glGetProgramInfoLog,\n  emscripten_glGetProgramiv: _emscripten_glGetProgramiv,\n  emscripten_glGetQueryObjecti64vEXT: _emscripten_glGetQueryObjecti64vEXT,\n  emscripten_glGetQueryObjectivEXT: _emscripten_glGetQueryObjectivEXT,\n  emscripten_glGetQueryObjectui64vEXT: _emscripten_glGetQueryObjectui64vEXT,\n  emscripten_glGetQueryObjectuiv: _emscripten_glGetQueryObjectuiv,\n  emscripten_glGetQueryObjectuivEXT: _emscripten_glGetQueryObjectuivEXT,\n  emscripten_glGetQueryiv: _emscripten_glGetQueryiv,\n  emscripten_glGetQueryivEXT: _emscripten_glGetQueryivEXT,\n  emscripten_glGetRenderbufferParameteriv: _emscripten_glGetRenderbufferParameteriv,\n  emscripten_glGetSamplerParameterfv: _emscripten_glGetSamplerParameterfv,\n  emscripten_glGetSamplerParameteriv: _emscripten_glGetSamplerParameteriv,\n  emscripten_glGetShaderInfoLog: _emscripten_glGetShaderInfoLog,\n  emscripten_glGetShaderPrecisionFormat: _emscripten_glGetShaderPrecisionFormat,\n  emscripten_glGetShaderSource: _emscripten_glGetShaderSource,\n  emscripten_glGetShaderiv: _emscripten_glGetShaderiv,\n  emscripten_glGetString: _emscripten_glGetString,\n  emscripten_glGetStringi: _emscripten_glGetStringi,\n  emscripten_glGetSynciv: _emscripten_glGetSynciv,\n  emscripten_glGetTexParameterfv: _emscripten_glGetTexParameterfv,\n  emscripten_glGetTexParameteriv: _emscripten_glGetTexParameteriv,\n  emscripten_glGetTransformFeedbackVarying: _emscripten_glGetTransformFeedbackVarying,\n  emscripten_glGetUniformBlockIndex: _emscripten_glGetUniformBlockIndex,\n  emscripten_glGetUniformIndices: _emscripten_glGetUniformIndices,\n  emscripten_glGetUniformLocation: _emscripten_glGetUniformLocation,\n  emscripten_glGetUniformfv: _emscripten_glGetUniformfv,\n  emscripten_glGetUniformiv: _emscripten_glGetUniformiv,\n  emscripten_glGetUniformuiv: _emscripten_glGetUniformuiv,\n  emscripten_glGetVertexAttribIiv: _emscripten_glGetVertexAttribIiv,\n  emscripten_glGetVertexAttribIuiv: _emscripten_glGetVertexAttribIuiv,\n  emscripten_glGetVertexAttribPointerv: _emscripten_glGetVertexAttribPointerv,\n  emscripten_glGetVertexAttribfv: _emscripten_glGetVertexAttribfv,\n  emscripten_glGetVertexAttribiv: _emscripten_glGetVertexAttribiv,\n  emscripten_glHint: _emscripten_glHint,\n  emscripten_glInvalidateFramebuffer: _emscripten_glInvalidateFramebuffer,\n  emscripten_glInvalidateSubFramebuffer: _emscripten_glInvalidateSubFramebuffer,\n  emscripten_glIsBuffer: _emscripten_glIsBuffer,\n  emscripten_glIsEnabled: _emscripten_glIsEnabled,\n  emscripten_glIsFramebuffer: _emscripten_glIsFramebuffer,\n  emscripten_glIsProgram: _emscripten_glIsProgram,\n  emscripten_glIsQuery: _emscripten_glIsQuery,\n  emscripten_glIsQueryEXT: _emscripten_glIsQueryEXT,\n  emscripten_glIsRenderbuffer: _emscripten_glIsRenderbuffer,\n  emscripten_glIsSampler: _emscripten_glIsSampler,\n  emscripten_glIsShader: _emscripten_glIsShader,\n  emscripten_glIsSync: _emscripten_glIsSync,\n  emscripten_glIsTexture: _emscripten_glIsTexture,\n  emscripten_glIsTransformFeedback: _emscripten_glIsTransformFeedback,\n  emscripten_glIsVertexArray: _emscripten_glIsVertexArray,\n  emscripten_glIsVertexArrayOES: _emscripten_glIsVertexArrayOES,\n  emscripten_glLineWidth: _emscripten_glLineWidth,\n  emscripten_glLinkProgram: _emscripten_glLinkProgram,\n  emscripten_glPauseTransformFeedback: _emscripten_glPauseTransformFeedback,\n  emscripten_glPixelStorei: _emscripten_glPixelStorei,\n  emscripten_glPolygonOffset: _emscripten_glPolygonOffset,\n  emscripten_glProgramBinary: _emscripten_glProgramBinary,\n  emscripten_glProgramParameteri: _emscripten_glProgramParameteri,\n  emscripten_glQueryCounterEXT: _emscripten_glQueryCounterEXT,\n  emscripten_glReadBuffer: _emscripten_glReadBuffer,\n  emscripten_glReadPixels: _emscripten_glReadPixels,\n  emscripten_glReleaseShaderCompiler: _emscripten_glReleaseShaderCompiler,\n  emscripten_glRenderbufferStorage: _emscripten_glRenderbufferStorage,\n  emscripten_glRenderbufferStorageMultisample: _emscripten_glRenderbufferStorageMultisample,\n  emscripten_glResumeTransformFeedback: _emscripten_glResumeTransformFeedback,\n  emscripten_glSampleCoverage: _emscripten_glSampleCoverage,\n  emscripten_glSamplerParameterf: _emscripten_glSamplerParameterf,\n  emscripten_glSamplerParameterfv: _emscripten_glSamplerParameterfv,\n  emscripten_glSamplerParameteri: _emscripten_glSamplerParameteri,\n  emscripten_glSamplerParameteriv: _emscripten_glSamplerParameteriv,\n  emscripten_glScissor: _emscripten_glScissor,\n  emscripten_glShaderBinary: _emscripten_glShaderBinary,\n  emscripten_glShaderSource: _emscripten_glShaderSource,\n  emscripten_glStencilFunc: _emscripten_glStencilFunc,\n  emscripten_glStencilFuncSeparate: _emscripten_glStencilFuncSeparate,\n  emscripten_glStencilMask: _emscripten_glStencilMask,\n  emscripten_glStencilMaskSeparate: _emscripten_glStencilMaskSeparate,\n  emscripten_glStencilOp: _emscripten_glStencilOp,\n  emscripten_glStencilOpSeparate: _emscripten_glStencilOpSeparate,\n  emscripten_glTexImage2D: _emscripten_glTexImage2D,\n  emscripten_glTexImage3D: _emscripten_glTexImage3D,\n  emscripten_glTexParameterf: _emscripten_glTexParameterf,\n  emscripten_glTexParameterfv: _emscripten_glTexParameterfv,\n  emscripten_glTexParameteri: _emscripten_glTexParameteri,\n  emscripten_glTexParameteriv: _emscripten_glTexParameteriv,\n  emscripten_glTexStorage2D: _emscripten_glTexStorage2D,\n  emscripten_glTexStorage3D: _emscripten_glTexStorage3D,\n  emscripten_glTexSubImage2D: _emscripten_glTexSubImage2D,\n  emscripten_glTexSubImage3D: _emscripten_glTexSubImage3D,\n  emscripten_glTransformFeedbackVaryings: _emscripten_glTransformFeedbackVaryings,\n  emscripten_glUniform1f: _emscripten_glUniform1f,\n  emscripten_glUniform1fv: _emscripten_glUniform1fv,\n  emscripten_glUniform1i: _emscripten_glUniform1i,\n  emscripten_glUniform1iv: _emscripten_glUniform1iv,\n  emscripten_glUniform1ui: _emscripten_glUniform1ui,\n  emscripten_glUniform1uiv: _emscripten_glUniform1uiv,\n  emscripten_glUniform2f: _emscripten_glUniform2f,\n  emscripten_glUniform2fv: _emscripten_glUniform2fv,\n  emscripten_glUniform2i: _emscripten_glUniform2i,\n  emscripten_glUniform2iv: _emscripten_glUniform2iv,\n  emscripten_glUniform2ui: _emscripten_glUniform2ui,\n  emscripten_glUniform2uiv: _emscripten_glUniform2uiv,\n  emscripten_glUniform3f: _emscripten_glUniform3f,\n  emscripten_glUniform3fv: _emscripten_glUniform3fv,\n  emscripten_glUniform3i: _emscripten_glUniform3i,\n  emscripten_glUniform3iv: _emscripten_glUniform3iv,\n  emscripten_glUniform3ui: _emscripten_glUniform3ui,\n  emscripten_glUniform3uiv: _emscripten_glUniform3uiv,\n  emscripten_glUniform4f: _emscripten_glUniform4f,\n  emscripten_glUniform4fv: _emscripten_glUniform4fv,\n  emscripten_glUniform4i: _emscripten_glUniform4i,\n  emscripten_glUniform4iv: _emscripten_glUniform4iv,\n  emscripten_glUniform4ui: _emscripten_glUniform4ui,\n  emscripten_glUniform4uiv: _emscripten_glUniform4uiv,\n  emscripten_glUniformBlockBinding: _emscripten_glUniformBlockBinding,\n  emscripten_glUniformMatrix2fv: _emscripten_glUniformMatrix2fv,\n  emscripten_glUniformMatrix2x3fv: _emscripten_glUniformMatrix2x3fv,\n  emscripten_glUniformMatrix2x4fv: _emscripten_glUniformMatrix2x4fv,\n  emscripten_glUniformMatrix3fv: _emscripten_glUniformMatrix3fv,\n  emscripten_glUniformMatrix3x2fv: _emscripten_glUniformMatrix3x2fv,\n  emscripten_glUniformMatrix3x4fv: _emscripten_glUniformMatrix3x4fv,\n  emscripten_glUniformMatrix4fv: _emscripten_glUniformMatrix4fv,\n  emscripten_glUniformMatrix4x2fv: _emscripten_glUniformMatrix4x2fv,\n  emscripten_glUniformMatrix4x3fv: _emscripten_glUniformMatrix4x3fv,\n  emscripten_glUseProgram: _emscripten_glUseProgram,\n  emscripten_glValidateProgram: _emscripten_glValidateProgram,\n  emscripten_glVertexAttrib1f: _emscripten_glVertexAttrib1f,\n  emscripten_glVertexAttrib1fv: _emscripten_glVertexAttrib1fv,\n  emscripten_glVertexAttrib2f: _emscripten_glVertexAttrib2f,\n  emscripten_glVertexAttrib2fv: _emscripten_glVertexAttrib2fv,\n  emscripten_glVertexAttrib3f: _emscripten_glVertexAttrib3f,\n  emscripten_glVertexAttrib3fv: _emscripten_glVertexAttrib3fv,\n  emscripten_glVertexAttrib4f: _emscripten_glVertexAttrib4f,\n  emscripten_glVertexAttrib4fv: _emscripten_glVertexAttrib4fv,\n  emscripten_glVertexAttribDivisor: _emscripten_glVertexAttribDivisor,\n  emscripten_glVertexAttribDivisorANGLE: _emscripten_glVertexAttribDivisorANGLE,\n  emscripten_glVertexAttribDivisorARB: _emscripten_glVertexAttribDivisorARB,\n  emscripten_glVertexAttribDivisorEXT: _emscripten_glVertexAttribDivisorEXT,\n  emscripten_glVertexAttribDivisorNV: _emscripten_glVertexAttribDivisorNV,\n  emscripten_glVertexAttribI4i: _emscripten_glVertexAttribI4i,\n  emscripten_glVertexAttribI4iv: _emscripten_glVertexAttribI4iv,\n  emscripten_glVertexAttribI4ui: _emscripten_glVertexAttribI4ui,\n  emscripten_glVertexAttribI4uiv: _emscripten_glVertexAttribI4uiv,\n  emscripten_glVertexAttribIPointer: _emscripten_glVertexAttribIPointer,\n  emscripten_glVertexAttribPointer: _emscripten_glVertexAttribPointer,\n  emscripten_glViewport: _emscripten_glViewport,\n  emscripten_glWaitSync: _emscripten_glWaitSync,\n  emscripten_has_asyncify: _emscripten_has_asyncify,\n  emscripten_memcpy_big: _emscripten_memcpy_big,\n  emscripten_request_fullscreen_strategy: _emscripten_request_fullscreen_strategy,\n  emscripten_request_pointerlock: _emscripten_request_pointerlock,\n  emscripten_resize_heap: _emscripten_resize_heap,\n  emscripten_sample_gamepad_data: _emscripten_sample_gamepad_data,\n  emscripten_set_beforeunload_callback_on_thread: _emscripten_set_beforeunload_callback_on_thread,\n  emscripten_set_blur_callback_on_thread: _emscripten_set_blur_callback_on_thread,\n  emscripten_set_canvas_element_size: _emscripten_set_canvas_element_size,\n  emscripten_set_element_css_size: _emscripten_set_element_css_size,\n  emscripten_set_focus_callback_on_thread: _emscripten_set_focus_callback_on_thread,\n  emscripten_set_fullscreenchange_callback_on_thread: _emscripten_set_fullscreenchange_callback_on_thread,\n  emscripten_set_gamepadconnected_callback_on_thread: _emscripten_set_gamepadconnected_callback_on_thread,\n  emscripten_set_gamepaddisconnected_callback_on_thread: _emscripten_set_gamepaddisconnected_callback_on_thread,\n  emscripten_set_keydown_callback_on_thread: _emscripten_set_keydown_callback_on_thread,\n  emscripten_set_keypress_callback_on_thread: _emscripten_set_keypress_callback_on_thread,\n  emscripten_set_keyup_callback_on_thread: _emscripten_set_keyup_callback_on_thread,\n  emscripten_set_main_loop: _emscripten_set_main_loop,\n  emscripten_set_mousedown_callback_on_thread: _emscripten_set_mousedown_callback_on_thread,\n  emscripten_set_mouseenter_callback_on_thread: _emscripten_set_mouseenter_callback_on_thread,\n  emscripten_set_mouseleave_callback_on_thread: _emscripten_set_mouseleave_callback_on_thread,\n  emscripten_set_mousemove_callback_on_thread: _emscripten_set_mousemove_callback_on_thread,\n  emscripten_set_mouseup_callback_on_thread: _emscripten_set_mouseup_callback_on_thread,\n  emscripten_set_pointerlockchange_callback_on_thread: _emscripten_set_pointerlockchange_callback_on_thread,\n  emscripten_set_resize_callback_on_thread: _emscripten_set_resize_callback_on_thread,\n  emscripten_set_touchcancel_callback_on_thread: _emscripten_set_touchcancel_callback_on_thread,\n  emscripten_set_touchend_callback_on_thread: _emscripten_set_touchend_callback_on_thread,\n  emscripten_set_touchmove_callback_on_thread: _emscripten_set_touchmove_callback_on_thread,\n  emscripten_set_touchstart_callback_on_thread: _emscripten_set_touchstart_callback_on_thread,\n  emscripten_set_visibilitychange_callback_on_thread: _emscripten_set_visibilitychange_callback_on_thread,\n  emscripten_set_wheel_callback_on_thread: _emscripten_set_wheel_callback_on_thread,\n  emscripten_set_window_title: _emscripten_set_window_title,\n  emscripten_sleep: _emscripten_sleep,\n  environ_get: _environ_get,\n  environ_sizes_get: _environ_sizes_get,\n  exit: _exit,\n  fd_close: _fd_close,\n  fd_fdstat_get: _fd_fdstat_get,\n  fd_read: _fd_read,\n  fd_seek: _fd_seek,\n  fd_write: _fd_write,\n  glGetFloatv: _glGetFloatv,\n  strftime: _strftime,\n  strftime_l: _strftime_l\n};\nvar wasmExports = createWasm();\nvar ___wasm_call_ctors = () => (___wasm_call_ctors = wasmExports['__wasm_call_ctors'])();\nvar _malloc = (a0) => (_malloc = wasmExports['malloc'])(a0);\nvar _free = (a0) => (_free = wasmExports['free'])(a0);\nvar ___errno_location = () => (___errno_location = wasmExports['__errno_location'])();\nvar _I_WebSetFullscreen = Module['_I_WebSetFullscreen'] = (a0) => (_I_WebSetFullscreen = Module['_I_WebSetFullscreen'] = wasmExports['I_WebSetFullscreen'])(a0);\nvar _I_WebOpenGameMenu = Module['_I_WebOpenGameMenu'] = (a0) => (_I_WebOpenGameMenu = Module['_I_WebOpenGameMenu'] = wasmExports['I_WebOpenGameMenu'])(a0);\nvar _I_WebSyncScreenSize = Module['_I_WebSyncScreenSize'] = () => (_I_WebSyncScreenSize = Module['_I_WebSyncScreenSize'] = wasmExports['I_WebSyncScreenSize'])();\nvar _I_WebMain = Module['_I_WebMain'] = (a0, a1) => (_I_WebMain = Module['_I_WebMain'] = wasmExports['I_WebMain'])(a0, a1);\nvar _main = Module['_main'] = (a0, a1) => (_main = Module['_main'] = wasmExports['__main_argc_argv'])(a0, a1);\nvar setTempRet0 = (a0) => (setTempRet0 = wasmExports['setTempRet0'])(a0);\nvar stackSave = () => (stackSave = wasmExports['stackSave'])();\nvar stackRestore = (a0) => (stackRestore = wasmExports['stackRestore'])(a0);\nvar stackAlloc = (a0) => (stackAlloc = wasmExports['stackAlloc'])(a0);\nvar ___cxa_is_pointer_type = (a0) => (___cxa_is_pointer_type = wasmExports['__cxa_is_pointer_type'])(a0);\nvar dynCall_vi = Module['dynCall_vi'] = (a0, a1) => (dynCall_vi = Module['dynCall_vi'] = wasmExports['dynCall_vi'])(a0, a1);\nvar dynCall_viii = Module['dynCall_viii'] = (a0, a1, a2, a3) => (dynCall_viii = Module['dynCall_viii'] = wasmExports['dynCall_viii'])(a0, a1, a2, a3);\nvar dynCall_ii = Module['dynCall_ii'] = (a0, a1) => (dynCall_ii = Module['dynCall_ii'] = wasmExports['dynCall_ii'])(a0, a1);\nvar dynCall_iii = Module['dynCall_iii'] = (a0, a1, a2) => (dynCall_iii = Module['dynCall_iii'] = wasmExports['dynCall_iii'])(a0, a1, a2);\nvar dynCall_vii = Module['dynCall_vii'] = (a0, a1, a2) => (dynCall_vii = Module['dynCall_vii'] = wasmExports['dynCall_vii'])(a0, a1, a2);\nvar dynCall_viiii = Module['dynCall_viiii'] = (a0, a1, a2, a3, a4) => (dynCall_viiii = Module['dynCall_viiii'] = wasmExports['dynCall_viiii'])(a0, a1, a2, a3, a4);\nvar dynCall_v = Module['dynCall_v'] = (a0) => (dynCall_v = Module['dynCall_v'] = wasmExports['dynCall_v'])(a0);\nvar dynCall_viifff = Module['dynCall_viifff'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viifff = Module['dynCall_viifff'] = wasmExports['dynCall_viifff'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_viifffii = Module['dynCall_viifffii'] = (a0, a1, a2, a3, a4, a5, a6, a7) => (dynCall_viifffii = Module['dynCall_viifffii'] = wasmExports['dynCall_viifffii'])(a0, a1, a2, a3, a4, a5, a6, a7);\nvar dynCall_viiiifiiiii = Module['dynCall_viiiifiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) => (dynCall_viiiifiiiii = Module['dynCall_viiiifiiiii'] = wasmExports['dynCall_viiiifiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\nvar dynCall_viiiiiii = Module['dynCall_viiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7) => (dynCall_viiiiiii = Module['dynCall_viiiiiii'] = wasmExports['dynCall_viiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7);\nvar dynCall_iiii = Module['dynCall_iiii'] = (a0, a1, a2, a3) => (dynCall_iiii = Module['dynCall_iiii'] = wasmExports['dynCall_iiii'])(a0, a1, a2, a3);\nvar dynCall_iiiii = Module['dynCall_iiiii'] = (a0, a1, a2, a3, a4) => (dynCall_iiiii = Module['dynCall_iiiii'] = wasmExports['dynCall_iiiii'])(a0, a1, a2, a3, a4);\nvar dynCall_iiji = Module['dynCall_iiji'] = (a0, a1, a2, a3, a4) => (dynCall_iiji = Module['dynCall_iiji'] = wasmExports['dynCall_iiji'])(a0, a1, a2, a3, a4);\nvar dynCall_iiiiii = Module['dynCall_iiiiii'] = (a0, a1, a2, a3, a4, a5) => (dynCall_iiiiii = Module['dynCall_iiiiii'] = wasmExports['dynCall_iiiiii'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_iiiiiiiii = Module['dynCall_iiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_iiiiiiiii = Module['dynCall_iiiiiiiii'] = wasmExports['dynCall_iiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\nvar dynCall_i = Module['dynCall_i'] = (a0) => (dynCall_i = Module['dynCall_i'] = wasmExports['dynCall_i'])(a0);\nvar dynCall_diii = Module['dynCall_diii'] = (a0, a1, a2, a3) => (dynCall_diii = Module['dynCall_diii'] = wasmExports['dynCall_diii'])(a0, a1, a2, a3);\nvar dynCall_viiid = Module['dynCall_viiid'] = (a0, a1, a2, a3, a4) => (dynCall_viiid = Module['dynCall_viiid'] = wasmExports['dynCall_viiid'])(a0, a1, a2, a3, a4);\nvar dynCall_viiiddd = Module['dynCall_viiiddd'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viiiddd = Module['dynCall_viiiddd'] = wasmExports['dynCall_viiiddd'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_vid = Module['dynCall_vid'] = (a0, a1, a2) => (dynCall_vid = Module['dynCall_vid'] = wasmExports['dynCall_vid'])(a0, a1, a2);\nvar dynCall_viiffi = Module['dynCall_viiffi'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viiffi = Module['dynCall_viiffi'] = wasmExports['dynCall_viiffi'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_viiiiii = Module['dynCall_viiiiii'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viiiiii = Module['dynCall_viiiiii'] = wasmExports['dynCall_viiiiii'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_viiiii = Module['dynCall_viiiii'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viiiii = Module['dynCall_viiiii'] = wasmExports['dynCall_viiiii'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_vijji = Module['dynCall_vijji'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_vijji = Module['dynCall_vijji'] = wasmExports['dynCall_vijji'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_iijii = Module['dynCall_iijii'] = (a0, a1, a2, a3, a4, a5) => (dynCall_iijii = Module['dynCall_iijii'] = wasmExports['dynCall_iijii'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_vff = Module['dynCall_vff'] = (a0, a1, a2) => (dynCall_vff = Module['dynCall_vff'] = wasmExports['dynCall_vff'])(a0, a1, a2);\nvar dynCall_vf = Module['dynCall_vf'] = (a0, a1) => (dynCall_vf = Module['dynCall_vf'] = wasmExports['dynCall_vf'])(a0, a1);\nvar dynCall_viffff = Module['dynCall_viffff'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viffff = Module['dynCall_viffff'] = wasmExports['dynCall_viffff'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_vffff = Module['dynCall_vffff'] = (a0, a1, a2, a3, a4) => (dynCall_vffff = Module['dynCall_vffff'] = wasmExports['dynCall_vffff'])(a0, a1, a2, a3, a4);\nvar dynCall_vfff = Module['dynCall_vfff'] = (a0, a1, a2, a3) => (dynCall_vfff = Module['dynCall_vfff'] = wasmExports['dynCall_vfff'])(a0, a1, a2, a3);\nvar dynCall_vif = Module['dynCall_vif'] = (a0, a1, a2) => (dynCall_vif = Module['dynCall_vif'] = wasmExports['dynCall_vif'])(a0, a1, a2);\nvar dynCall_viif = Module['dynCall_viif'] = (a0, a1, a2, a3) => (dynCall_viif = Module['dynCall_viif'] = wasmExports['dynCall_viif'])(a0, a1, a2, a3);\nvar dynCall_viiiiiiiii = Module['dynCall_viiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) => (dynCall_viiiiiiiii = Module['dynCall_viiiiiiiii'] = wasmExports['dynCall_viiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\nvar dynCall_jiji = Module['dynCall_jiji'] = (a0, a1, a2, a3, a4) => (dynCall_jiji = Module['dynCall_jiji'] = wasmExports['dynCall_jiji'])(a0, a1, a2, a3, a4);\nvar dynCall_ji = Module['dynCall_ji'] = (a0, a1) => (dynCall_ji = Module['dynCall_ji'] = wasmExports['dynCall_ji'])(a0, a1);\nvar dynCall_viiiiiiii = Module['dynCall_viiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_viiiiiiii = Module['dynCall_viiiiiiii'] = wasmExports['dynCall_viiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\nvar dynCall_vfi = Module['dynCall_vfi'] = (a0, a1, a2) => (dynCall_vfi = Module['dynCall_vfi'] = wasmExports['dynCall_vfi'])(a0, a1, a2);\nvar dynCall_viff = Module['dynCall_viff'] = (a0, a1, a2, a3) => (dynCall_viff = Module['dynCall_viff'] = wasmExports['dynCall_viff'])(a0, a1, a2, a3);\nvar dynCall_vifff = Module['dynCall_vifff'] = (a0, a1, a2, a3, a4) => (dynCall_vifff = Module['dynCall_vifff'] = wasmExports['dynCall_vifff'])(a0, a1, a2, a3, a4);\nvar dynCall_viiiiiiiiii = Module['dynCall_viiiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) => (dynCall_viiiiiiiiii = Module['dynCall_viiiiiiiiii'] = wasmExports['dynCall_viiiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\nvar dynCall_viiiiiiiiiii = Module['dynCall_viiiiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) => (dynCall_viiiiiiiiiii = Module['dynCall_viiiiiiiiiii'] = wasmExports['dynCall_viiiiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\nvar dynCall_viifi = Module['dynCall_viifi'] = (a0, a1, a2, a3, a4) => (dynCall_viifi = Module['dynCall_viifi'] = wasmExports['dynCall_viifi'])(a0, a1, a2, a3, a4);\nvar dynCall_iidiiii = Module['dynCall_iidiiii'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_iidiiii = Module['dynCall_iidiiii'] = wasmExports['dynCall_iidiiii'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_viijii = Module['dynCall_viijii'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viijii = Module['dynCall_viijii'] = wasmExports['dynCall_viijii'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_iiiiiii = Module['dynCall_iiiiiii'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_iiiiiii = Module['dynCall_iiiiiii'] = wasmExports['dynCall_iiiiiii'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_iiiiij = Module['dynCall_iiiiij'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_iiiiij = Module['dynCall_iiiiij'] = wasmExports['dynCall_iiiiij'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_iiiiid = Module['dynCall_iiiiid'] = (a0, a1, a2, a3, a4, a5) => (dynCall_iiiiid = Module['dynCall_iiiiid'] = wasmExports['dynCall_iiiiid'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_iiiiijj = Module['dynCall_iiiiijj'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_iiiiijj = Module['dynCall_iiiiijj'] = wasmExports['dynCall_iiiiijj'])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\nvar dynCall_iiiiiiii = Module['dynCall_iiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7) => (dynCall_iiiiiiii = Module['dynCall_iiiiiiii'] = wasmExports['dynCall_iiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7);\nvar dynCall_iiiiiijj = Module['dynCall_iiiiiijj'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) => (dynCall_iiiiiijj = Module['dynCall_iiiiiijj'] = wasmExports['dynCall_iiiiiijj'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\nvar _asyncify_start_unwind = (a0) => (_asyncify_start_unwind = wasmExports['asyncify_start_unwind'])(a0);\nvar _asyncify_stop_unwind = () => (_asyncify_stop_unwind = wasmExports['asyncify_stop_unwind'])();\nvar _asyncify_start_rewind = (a0) => (_asyncify_start_rewind = wasmExports['asyncify_start_rewind'])(a0);\nvar _asyncify_stop_rewind = () => (_asyncify_stop_rewind = wasmExports['asyncify_stop_rewind'])();\n\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\n// include: base64Utils.js\n// Converts a string of base64 into a byte array.\n// Throws error on invalid input.\nfunction intArrayFromBase64(s) {\n\n  try {\n    var decoded = atob(s);\n    var bytes = new Uint8Array(decoded.length);\n    for (var i = 0 ; i < decoded.length ; ++i) {\n      bytes[i] = decoded.charCodeAt(i);\n    }\n    return bytes;\n  } catch (_) {\n    throw new Error('Converting base64 string to bytes failed.');\n  }\n}\n\n// If filename is a base64 data URI, parses and returns data (Buffer on node,\n// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.\nfunction tryParseAsDataURI(filename) {\n  if (!isDataURI(filename)) {\n    return;\n  }\n\n  return intArrayFromBase64(filename.slice(dataURIPrefix.length));\n}\n// end include: base64Utils.js\nModule['addRunDependency'] = addRunDependency;\nModule['removeRunDependency'] = removeRunDependency;\nModule['FS_createPath'] = FS.createPath;\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createLazyFile'] = FS.createLazyFile;\nModule['FS_createDevice'] = FS.createDevice;\nModule['FS_unlink'] = FS.unlink;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\nModule['LZ4'] = LZ4;\n\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction callMain(args = []) {\n\n  var entryFunction = _main;\n\n  args.unshift(thisProgram);\n\n  var argc = args.length;\n  var argv = stackAlloc((argc + 1) * 4);\n  var argv_ptr = argv;\n  args.forEach((arg) => {\n    HEAPU32[((argv_ptr)>>2)] = stringToUTF8OnStack(arg);\n    argv_ptr += 4;\n  });\n  HEAPU32[((argv_ptr)>>2)] = 0;\n\n  try {\n\n    var ret = entryFunction(argc, argv);\n\n    // if we're not running an evented main loop, it's time to exit\n    exitJS(ret, /* implicit = */ true);\n    return ret;\n  }\n  catch (e) {\n    return handleException(e);\n  }\n}\n\nfunction run(args = arguments_) {\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    preMain();\n\n    readyPromiseResolve(Module);\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    if (shouldRunNow) callMain(args);\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\n// shouldRunNow refers to calling main(), not run().\nvar shouldRunNow = true;\n\nif (Module['noInitialRun']) shouldRunNow = false;\n\nrun();\n\n\n// end include: postamble.js\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nexport default createEdgeModule;","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal__bCOJk\",\"modal_content\":\"modal_content__O8DzT\",\"animatetop\":\"animatetop__1b7Bz\",\"close\":\"close__jJbSs\",\"modal_header\":\"modal_header__7dLiC\",\"modal_body\":\"modal_body__8R0ze\",\"modal_footer\":\"modal_footer__P6GcC\"};","import { FunctionComponent, h } from 'preact';\nimport style from './style.css';\n\nconst LicenseModal: FunctionComponent<{ onClose: () => void }> = ({ onClose }) => (\n    <div id=\"myModal\" class={style.modal}>\n        <div class={style.modal_content}>\n            <div class={style.modal_header}>\n                <span class={style.close} onClick={() => onClose()}>&times;</span>\n                <h2>EDGE-Classic Licenses</h2>\n            </div>\n            <div class={style.modal_body}>\n                <div style={{ overflowY: \"scroll\", overflowX: \"hidden\", height: \"512px\" }}>\n                    <div style={{ fontFamily: \"monospace\", whiteSpace: \"pre\", fontSize: 11 }}>{license}</div>\n                </div>\n            </div>\n            <div class={style.modal_footer}>\n            </div>\n        </div>\n    </div>\n\n);\n\nconst license = `===========================================================================================\nBSD 2-Clause License\n===========================================================================================\n\nminiz library (gzip support) - Copyright (c) 2015 Wojciech Adam Koszek\n\n===========================================================================================\nBSD 3-Clause License\n===========================================================================================\n\nBlasphemer (various assets) - Copyright (c) 2021 Contributors to the Blasphemer project\n\nFMMIDI library - Copyright (c) 2003-2006 yuno\n\nFreedoom (various assets) - Copyright (c) 2001-2019 Contributors to the Freedoom project\n\nYMFM library - Copyright (c) 2021 Aaron Giles\n\nYMFMIDI library - Copyright (c) 2021-2022 Devin Acker\n\nMod4Play library - Copyright (c) 2022 Olav Sørensen\n\nminivorbis library - Copyright (c) 2020 Eduardo Bart\n                     Copyright (c) 2002-2020 Xiph.org Foundation\n\n===========================================================================================\nCC 1.0 Universal License\n===========================================================================================\n\nminimp3 library - lieff\n\n\"ProtoSquare!\" soundfont - Yingchun Soul\n\n===========================================================================================\nCC-BY-3.0 Unported License\n===========================================================================================\n\nGerman Shepherd Dog Sprites - Copyright (c) 2017 Nash Muhandes\n\n===========================================================================================\nCC-BY-NC-4.0 International License\n===========================================================================================\n\nREKKR (various assets) - Copyright (c) 2021 Mockingbird Softworks\n\n===========================================================================================\nCC-BY-SA-4.0 International License\n===========================================================================================\n\n\"Bonkers for Bits\" soundfont - Copyright (c) Marcel J. Therrien\n\n\"DMXOPL\" and \"DMXPOL3\" instrument banks - Copyright (c) ConSiGno\n\n===========================================================================================\nGPL2 License\n===========================================================================================\n\n\"Adplug\" instrument bank - Copyright (C) 1999, 2000, 2001 Simon Peter, et al.\n\nAJBSP - Copyright (c) 2000-2023 Andrew Apted, et al\n        Copyright (c) 1994-1998 Colin Reed\n        Copyright (c) 1997-1998 Lee Killough\n\nCOAL -  Copyright (c) 2009-2023 Andrew Apted, et al\n        Copyright (c) 1996-1997 Id Software, Inc.\n\nDDF library - Copyright (c) 1999-2023 The EDGE Team\n\nDEHACKED library (formerly DEH_EDGE) - Copyright (c) 2004-2023 The EDGE Team\n\nEC_VOXELIB library - Copyright (c) 2022-2023 The EDGE Team\n\nEDGE-Classic - Copyright (c) 1999-2023 The EDGE Team\n\nEPI library - Copyright (c) 2002-2023 The EDGE Team\n\nFluidlite library - Copyright (c) 2016 Robin Lobel\n\nGame Music Emu - Copyright (c) 2003-2009 Shay Green\n\nSuperFastHash - Copyright (c) 2004-2010 Paul Hsieh\n\nXMIDI library - Copyright (c) 2015-2022 Vitaly Novichkov\n                Copyright (c) 2015-2016 WildMIDI Developers\n                Copyright (c) 2014 Bret Curtis\n                Copyright (c) 2001 Ryan Nunn\n\n===========================================================================================\nMIT License\n===========================================================================================\n\n\"16-Bit Game Station\" soundfont - Copyright (c) 2022 Yingchun Soul\n\nBW_Midi_Sequencer library - Copyright (c) 2015-2022 Vitaly Novichkov\n\ngl4es library - Copyright (c) 2016-2018 Sebastien Chevalier\n\t\t\t\tCopyright (c) 2013-2016 Ryan Hileman\n\nglad library - Copyright (c) 2013-2022 David Herberth\n\nminiz library - Copyright (c) 2013-2014 RAD Game Tools and Valve Software\n\t\t\t\tCopyright (c) 2010-2014 Rich Geldreich and Tenacious Software LLC\n\nPNPOLY algorithm - Copyright (c) 1970-2003 Wm. Randolph Franklin\n\n\"WadSmoosh\" instrument bank - Copyright (c) 2016-2020 JP LeBreton\n\n\"C++ implementation of a fast Gaussian blur algorithm by Ivan Kutskir - Integer Version\"\n    - Copyright (C) 2017 Basile Fraboni\n    - Copyright (C) 2014 Ivan Kutskir\n\n\n===========================================================================================\nPublic Domain\n===========================================================================================\n\nFraction.hpp - Bisqwit\n\n\"GMGSx\" soundfont (renamed to default.sf2) - Kenneth Rundt\n\ndr_wav and dr_flac libraries - David Reid\n\nstb_image, stb_image_write, stb_rect_pack and stb_truetype libraries - Sean Barrett\n\n\"Unicode Processing with C++0x\" Conversion Classes - Andrew Choi\n\n===========================================================================================\nWidePix License\n===========================================================================================\n\nWidePix (various assets) - Copyright (c) 2020-2021 Nash Muhandes\n\n===========================================================================================\nWTF License\n===========================================================================================\n\ncrsid library - Copyright (c) 2022 Hermit (Mihaly Horvath)\n\n===========================================================================================\nzlib License\n===========================================================================================\n\nSDL2 library - Copyright (c) 1997-2020 Sam Lantinga\n`\n\nexport default LicenseModal;\n","import { Signal, signal } from '@preact/signals';\nimport { h } from 'preact';\nimport style from './style.css';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport createEdgeModule from '../../edge-classic';\nimport LicenseModal from '../licenses';\n\nconst defaultIWad = \"freedoom2.wad\"\nconst deathmatchIWad = \"freedm.wad\";\n\ntype PlayerConfig = {\n\tindexDBName: string;\n}\n\ntype WadState = {\n\terror?: string;\n\twadName?: string;\n\tisIWAD?: boolean;\n}\n\nconst config: PlayerConfig = {\n\tindexDBName: '/edge-classic'\n}\n\nclass WadHandler {\n\n\tconstructor(config: PlayerConfig) {\n\t\tthis.config = config;\n\t}\n\n\tprivate error(message: string) {\n\t\talert(message);\n\t\tconsole.error(message);\n\t\tconsole.trace();\n\t}\n\n\tsetWad(wadName: string, isIWAD?: boolean) {\n\t\tthis.wadState.value = { wadName: wadName, isIWAD: isIWAD };\n\t}\n\n\tasync uploadWad(file: File) {\n\n\t\tlet database: IDBDatabase | undefined;\n\n\t\ttry {\n\t\t\tdatabase = await this.openDatabase();\n\t\t\tif (!database) {\n\t\t\t\tthis.error(\"Unable to open database\")\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.error(e);\n\t\t\tdatabase?.close();\n\t\t\treturn;\n\t\t}\n\n\t\tconst upload = new Promise<{ wadName: string, iwad: boolean }>((resolve, reject) => {\n\n\t\t\tvar reader = new FileReader();\n\t\t\treader.readAsArrayBuffer(file);\n\n\t\t\treader.onload = (e) => {\n\n\t\t\t\tconst bits = e.target.result;\n\t\t\t\tconst contents = new Uint8Array(bits as ArrayBuffer);\n\n\t\t\t\tconst iwad = contents[0] === 73;\n\n\t\t\t\tconst trans = database.transaction(['FILE_DATA'], 'readwrite');\n\t\t\t\tconst path = `${this.config.indexDBName}/${file.name}`;\n\t\t\t\tconst addReq = trans.objectStore('FILE_DATA').put({ timestamp: new Date(), mode: 33206, contents: contents }, path);\n\n\t\t\t\taddReq.onerror = (e) => {\n\t\t\t\t\treject(\"Error storing wad data\");\n\t\t\t\t}\n\n\t\t\t\ttrans.oncomplete = (e) => {\n\t\t\t\t\tresolve({ wadName: file.name, iwad: iwad });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treader.onerror = (e) => {\n\t\t\t\treject(\"Error reading wad\");\n\t\t\t}\n\n\t\t});\n\n\t\ttry {\n\t\t\tconst wad = await upload;\n\t\t\tdatabase?.close();\n\t\t\tdatabase = undefined;\n\t\t\tthis.setWad(wad.wadName, wad.iwad);\n\t\t} catch (e) {\n\t\t\tthis.error(e);\n\t\t} finally {\n\t\t\tdatabase?.close();\n\t\t}\n\n\t}\n\n\tprivate async openDatabase() {\n\n\t\treturn new Promise<IDBDatabase | undefined>((resolve, reject) => {\n\n\t\t\t// build pre-render guard\n\t\t\tif (typeof window !== 'undefined') {\n\t\t\t\tconst dbrequest = window.indexedDB.open(this.config.indexDBName);\n\n\t\t\t\tdbrequest.onerror = (e) => {\n\t\t\t\t\treject(`unable to load database ${this.config.indexDBName}`);\n\t\t\t\t}\n\n\t\t\t\tdbrequest.onupgradeneeded = (e) => {\n\n\t\t\t\t\tconsole.log(\"upgrade needed\");\n\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\n\t\t\t\t\tif (!db.objectStoreNames.contains(\"FILE_DATA\")) {\n\t\t\t\t\t\tconsole.log(\"Creating FILE_DATA object store\");\n\t\t\t\t\t\tconst store = db.createObjectStore(\"FILE_DATA\", {});\n\t\t\t\t\t\tstore.createIndex(\"timestamp\", \"timestamp\", { unique: false });\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tdbrequest.onsuccess = (e) => {\n\t\t\t\t\tconsole.log(\"db open\");\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\n\t\t\t\t\tresolve(db);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\twadState: Signal<WadState> = signal({});\n\n\tconfig: PlayerConfig;\n\n\tstatic get singleton(): WadHandler {\n\t\tif (!WadHandler.instance) {\n\t\t\tWadHandler.instance = new WadHandler(config);\n\t\t}\n\t\treturn WadHandler.instance;\n\t}\n\n\tprivate static instance?: WadHandler;\n}\n\ntype Project = {\n\tname: string;\n\timage: string;\n\tlink: string;\n}\n\nconst projects: Project[] = [\n\n\t{ name: \"Operation: Arctic Wolf Revisited\", image: \"./assets/images/articwolf.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/arctic-wolf-revisited\" },\n\t{ name: \"Astral Pathfinder\", image: \"./assets/images/astralpathfinder.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/astral-pathfinder1\" },\n\t{ name: \"Aliens: Stranded\", image: \"./assets/images/aliensstranded.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/aliens-stranded\" }\n]\n\nconst WadChooser = () => {\n\n\tconst [showLicense, setShowLicense] = useState(false);\n\n\tconst pelements = projects.map(p => {\n\t\treturn <a href={p.link} target=\"_blank\" style=\"display:flex;flex:1;flex-direction:column;height:100%;align-items:flex-end\">\n\t\t\t<div style={{ display: \"flex\", flex: 0 }}>\n\t\t\t\t<div style={{ paddingTop: 12, paddingBottom: 4, fontSize: 14, whiteSpace: \"pre\", fontWeight: \"normal\" }}>{p.name}</div>\n\t\t\t</div>\n\t\t\t<div style={{ display: \"flex\", position: \"relative\", flexGrow: 1, width: \"100%\" }} >\n\t\t\t\t<img style=\"width:100%;height:100%;object-fit:cover;position:absolute\" src={p.image} />\n\t\t\t</div>\n\t\t</a>\n\t});\n\n\treturn <div style={{ display: \"flex\", width: \"100%\", maxWidth: \"1440px\", padding: 24, paddingLeft: 42 }}>\n\t\t{showLicense && <LicenseModal onClose={() => setShowLicense(false)} />}\n\t\t<div style={{ display: \"flex\", flexGrow: 1 }}>\n\t\t\t<div style={{ display: \"flex\", width: \"80%\" }}>\n\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"start\" }}>\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\n\t\t\t\t\t\t<div style={{ fontSize: 18, fontWeight: \"normal\", paddingBottom: 24, width: 800 }}>Play EDGE-Classic in your browser by selecting an option below:\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\n\t\t\t\t\t\t\tWadHandler.singleton.setWad(defaultIWad, true)\n\t\t\t\t\t\t}}>Play Freedoom</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\n\t\t\t\t\t\t\tWadHandler.singleton.setWad(deathmatchIWad, true)\n\t\t\t\t\t\t}}>Play Bot Death Match</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\n\t\t\t\t\t\t\tdocument.getElementById('getWadFile').click()\n\t\t\t\t\t\t}}>Choose Wad, EPK, or Zip</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{ paddingTop: 128 }} />\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\n\t\t\t\t\t\t\tsetShowLicense(true);\n\t\t\t\t\t\t}}>Show Licenses</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<input id=\"getWadFile\" style=\"display:none\" type=\"file\" onChange={(e) => {\n\t\t\t\t\tconst files = (e.target as any).files as File[];\n\t\t\t\t\tif (files.length !== 1) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\talert(\"Please select a single wad, epk, or zip file\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst file = files[0];\n\t\t\t\t\tconst check = file.name.toLowerCase();\n\t\t\t\t\tif (!check.endsWith(\".wad\") && !check.endsWith(\".zip\") && !check.endsWith(\".epk\")) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\talert(\"Please select a wad, epk, or zip file\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst wadHandler = WadHandler.singleton;\n\t\t\t\t\twadHandler.uploadWad(file);\n\n\t\t\t\t}} />\n\t\t\t</div>\n\t\t</div>\n\t\t<div style={{ display: \"flex\", flexGrow: 1, width: \"50%\", flexDirection: \"column\" }}>\n\t\t\t<div style={{ display: \"flex\", flex: \"0 0 24px\", position: \"relative\" }}>\n\t\t\t\t<div style={{ position: \"absolute\", fontSize: 18, fontWeight: 400, whiteSpace: \"pre\" }}>Suggested Projects</div>\n\t\t\t</div>\n\t\t\t<div style={{ display: \"flex\", flexShrink: 0, flexGrow: 1, flexDirection: \"column\" }}>\n\t\t\t\t{pelements}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\n}\n\nconst EdgeClassic = () => {\n\n\tconst canvasRef = useRef<HTMLCanvasElement>(null);\n\tconst canvasContainerRef = useRef<HTMLDivElement>(null);\n\tconst [state, setState] = useState<{ loading: boolean }>({ loading: true });\n\tconst wadState = WadHandler.singleton.wadState.value;\n\n\n\tconst pointerLockChange = () => {\n\t\tconst canvas = canvasRef?.current;\n\t\tconst lock = canvas === document.pointerLockElement;\n\n\t\t// disabled for embedded classic site\n\t\t//Module._I_WebSetFullscreen(lock ? 1 : 0);\n\n\t\t/*\n\t\t// It feels good to open the menu when releasing pointer lock\n\t\t// though, it makes the interaction tricky to close the menu\n\t\tif (!lock) {\n\t\t\tModule._I_WebOpenGameMenu(1);\n\t\t} \n\t\t*/\n\t}\n\n\tuseEffect(() => {\n\n\t\tconst canvas = canvasRef?.current;\n\t\tconst canvasContainer = canvasContainerRef?.current;\n\n\t\tconst wadName = wadState.wadName!;\n\n\t\tif (!canvasContainer) {\n\t\t\tthrow \"Unable to get canvas container\";\n\t\t}\n\n\t\tif (!canvas) {\n\t\t\tthrow \"Unable to get canvas\";\n\t\t}\n\n\t\tconst syncCanvasSize = () => {\n\t\t\tconst w = Math.floor(canvasContainer.offsetWidth);\n\t\t\tconst h = Math.floor(canvasContainer.offsetHeight);\n\t\t\tconsole.log(\"Setting canvas size\", w, h);\n\t\t\tcanvas.style.width = `${w}px`;\n\t\t\tcanvas.style.height = `${h}px`;\n\t\t\tcanvas.width = w;\n\t\t\tcanvas.height = h;\n\t\t}\n\n\t\t// initial update\t\t\n\t\tsyncCanvasSize();\n\n\t\tconst canvasSync = () => {\n\t\t\tsyncCanvasSize();\n\t\t\tModule._I_WebSyncScreenSize();\n\t\t};\n\n\t\tdocument.addEventListener(\"pointerlockchange\", pointerLockChange, false);\n\n\t\tlet doSyncTimeout;\n\t\twindow.addEventListener(\"resize\", (ev) => {\n\n\t\t\tclearTimeout(doSyncTimeout);\n\t\t\tdoSyncTimeout = setTimeout(canvasSync, 250);\n\n\t\t});\n\n\t\tcanvas.addEventListener(\"webglcontextlost\", function (e) { alert('FIXME: WebGL context lost, please reload the page'); e.preventDefault(); }, false);\n\n\n\t\tlet iwad = defaultIWad;\n\t\tif (wadState.wadName === deathmatchIWad) {\n\t\t\tiwad = deathmatchIWad;\n\t\t}\n\n\t\tif (wadState.wadName !== iwad && wadState.isIWAD) {\n\t\t\tiwad = `edge-classic/${wadName}`;\n\t\t}\n\n\t\tconst args = [\"-home\", \"edge-classic\", \"-windowed\", \"-width\", canvas.offsetWidth.toString(), \"-height\", canvas.offsetHeight.toString(), \"-iwad\", iwad];\n\n\t\tif (iwad === deathmatchIWad) {\n\t\t\targs.push(...[\"-deathmatch\", \"1\", \"-nomonsters\", \"-skill\", \"2\", \"-bots\", \"1\", \"-warp\", \"map03\"])\n\t\t}\n\n\t\tif (!wadState.isIWAD) {\n\t\t\targs.push(\"-file\")\n\t\t\targs.push(`edge-classic/${wadName}`);\n\t\t}\n\n\t\tcreateEdgeModule({\n\t\t\tedgePostInit: () => {\n\t\t\t\tconsole.log(\"Post-Init!\");\n\t\t\t\t// jump \n\t\t\t\tif (!args.find(a => a.startsWith(\"-warp\"))) {\n\t\t\t\t\tModule._I_WebOpenGameMenu(1);\n\t\t\t\t}\n\n\t\t\t\tsetState({ ...state, loading: false });\n\t\t\t},\n\t\t\tonFullscreen: () => {\n\t\t\t\t/*\n\t\t\t\tconsole.log(\"On fullscreen\");\n\t\t\t\tconst elements = document.querySelectorAll(\".playercontrols\");\n\t\t\t\telements?.forEach(e => {\n\t\t\t\t\t(e as any).style.display = \"flex\";\n\t\t\t\t});\n\t\t\t\t*/\n\t\t\t},\n\t\t\tpreEdgeSyncFS: () => {\n\t\t\t},\n\t\t\tpostEdgeSyncFS: () => {\n\t\t\t},\n\t\t\targuments: args,\n\t\t\tpreInit: () => {\n\t\t\t\tconsole.log(\"Pre-Init\");\n\t\t\t},\n\t\t\tpreRun: [],\n\t\t\tpostRun: [],\n\t\t\tprint: (function () {\n\t\t\t\treturn function (text) {\n\t\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\n\t\t\t\t\tconsole.log(text);\n\t\t\t\t};\n\t\t\t})(),\n\t\t\tprintErr: function (text) {\n\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\n\t\t\t\tconsole.error(text);\n\t\t\t},\n\t\t\tcanvas: canvas,\n\t\t\tsetStatus: function (text) { console.log(\"status\", text) },\n\t\t\tmonitorRunDependencies: function (left) { console.log(left) },\n\t\t}).then(module => {\n\t\t\tglobalThis.Module = module;\n\t\t\tmodule.canvas = canvas;\n\t\t});\n\n\n\t\treturn () => {\n\n\t\t};\n\n\t}, []);\n\n\n\treturn <div id=\"canvas-container\" ref={canvasContainerRef} style={{ display: \"flex\", width: \"100%\", height: \"100%\", position: \"relative\" }}>\n\t\t<canvas id=\"canvas\" ref={canvasRef} style={{ visibility: state.loading ? \"hidden\" : \"visible\" }}\n\t\t\tonClick={async (ev) => {\n\t\t\t\tconst lock = canvasRef.current === document.pointerLockElement;\n\t\t\t\tif (!lock) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait canvasRef.current?.requestPointerLock();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}} />\n\n\t\t{!!state.loading && <div style={{ position: \"absolute\", display: \"flex\", width: \"100%\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\n\t\t\t<div class={style.loading}>\n\t\t\t\t<span style=\"--i:1\">L</span>\n\t\t\t\t<span style=\"--i:2\">O</span>\n\t\t\t\t<span style=\"--i:3\">A</span>\n\t\t\t\t<span style=\"--i:4\">D</span>\n\t\t\t\t<span style=\"--i:5\">I</span>\n\t\t\t\t<span style=\"--i:6\">N</span>\n\t\t\t\t<span style=\"--i:7\">G</span>\n\t\t\t\t<span style=\"--i:8\">.</span>\n\t\t\t\t<span style=\"--i:9\">.</span>\n\t\t\t\t<span style=\"--i:10\">.</span>\n\t\t\t</div>\n\t\t</div>}\n\n\t</div>\n}\n// floating player controls, not currently used\n// {!state.loading && <PlayerControls />} \n\nconst PlayerControls = () => {\n\tconst [fullscreen, setFullscreen] = useState(false);\n\treturn <div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\", padding: \"24px\", zIndex: 1, position: \"absolute\" }}>\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\" }} />\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", flexShrink: 1, paddingRight: \"48px\" }}>\n\t\t\t<button style={{ opacity: 1 }} className=\"playercontrols\" onClick={() => { Module._I_WebSetFullscreen(fullscreen ? 0 : 1, setFullscreen(!fullscreen)) }}>{fullscreen ? \"Minimize\" : \"Maximize\"}</button>\n\t\t</div>\n\t</div>\n}\n\nconst Player = () => {\n\n\tconst wadHandler = WadHandler.singleton;\n\tconst wadState = wadHandler.wadState.value;\n\n\treturn (\n\t\t<div style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\n\t\t\t{!wadState.wadName && <WadChooser />}\n\t\t\t{!!wadState.wadName && <EdgeClassic />}\n\t\t</div>\n\t);\n};\n\nexport default Player;\n","import './style/index.css';\nimport App from './components/app';\n\nexport default App;\n","import { h } from 'preact';\n\nimport Player from './player';\n\nconst App = () => (\n\t<div id=\"app\">\n\t\t<main>\n\t\t\t<Player/>\n\t\t</main>\n\t</div>\n);\n\nexport default App;\n"],"sourceRoot":""}