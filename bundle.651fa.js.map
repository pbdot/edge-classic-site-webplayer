{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/preact-cli/src/lib/entry.js","webpack:///../node_modules/preact/src/util.js","webpack:///../node_modules/preact/src/create-element.js","webpack:///../node_modules/preact/src/component.js","webpack:///../node_modules/preact/src/diff/children.js","webpack:///../node_modules/preact/src/diff/props.js","webpack:///../node_modules/preact/src/diff/index.js","webpack:///../node_modules/preact/src/render.js","webpack:///../node_modules/preact/src/options.js","webpack:///../node_modules/preact/src/constants.js","webpack:///../node_modules/preact/src/diff/catch-error.js","webpack:///../node_modules/preact/hooks/src/index.js","webpack:///../node_modules/@preact/signals-core/src/index.ts","webpack:///../node_modules/@preact/signals/src/index.ts","webpack:///./components/player/index.tsx","webpack:///./components/player/style.css","webpack:///./edge-classic.js","webpack:///./components/licenses/style.css","webpack:///./components/licenses/index.tsx","webpack:///./index.ts","webpack:///./components/app.tsx"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","h","Preact","render","hydrate","interopDefault","default","normalizeURL","url","length","navigator","serviceWorker","register","__webpack_public_path__","require","root","document","getElementById","body","firstElementChild","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","innerHTML","CLI_DATA","currentURL","location","pathname","init","u","v","parentNode","removeChild","y","f","arguments","children","defaultProps","type","props","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","_","k","this","context","b","indexOf","g","base","push","w","__r","debounceRendering","e","sort","shift","__P","L","__n","ownerSVGElement","M","x","a","Array","isArray","A","C","$","nextSibling","S","O","appendChild","insertBefore","I","setProperty","test","T","style","cssText","replace","toLowerCase","slice","addEventListener","z","j","removeEventListener","removeAttribute","setAttribute","event","P","H","contextType","__E","q","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","diffed","some","localName","nodeType","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","checked","current","unmount","componentWillUnmount","B","firstChild","D","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","resolve","setTimeout","__H","__V","__N","filter","every","F","clearTimeout","cancelAnimationFrame","requestAnimationFrame","Error","U","useSignal","__$f","__$u","peek","getCookie","cname","ca","window","cookie","split","charAt","substring","subscribe","valueOf","toString","set","displayName","defineProperties","configurable","__np","_scriptDir","createEdgeModule","currentScript","src","undefined","assert","condition","text","abort","updateMemoryViews","wasmMemory","buffer","Module","HEAP8","Int8Array","HEAP16","Int16Array","HEAPU8","Uint8Array","HEAPU16","Uint16Array","HEAP32","Int32Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","addRunDependency","_Module$monitorRunDep","_Module","runDependencies","removeRunDependency","_Module$monitorRunDep2","_Module2","runDependencyWatcher","clearInterval","dependenciesFulfilled","callback","what","_Module$onAbort","_Module3","err","ABORT","EXITSTATUS","WebAssembly","RuntimeError","readyPromiseReject","getBinarySync","file","wasmBinaryFile","wasmBinary","readBinary","instantiateArrayBuffer","binaryFile","imports","receiver","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","fetch","credentials","response","catch","getBinaryPromise","binary","instantiate","instance","reason","concat","ExitStatus","status","message","setValue","ptr","endsWith","intArrayFromString","stringy","dontAddNull","len","lengthBytesUTF8","u8array","numBytesWritten","stringToUTF8Array","_glGenVertexArrays","arrays","__glGenObject","GL","vaos","run","doRun","calledRun","FS","initialized","ignorePermissions","TTY","callRuntimeCallbacks","__ATINIT__","__ATMAIN__","readyPromiseResolve","shouldRunNow","args","entryFunction","_main","unshift","thisProgram","argc","argv","stackAlloc","argv_ptr","arg","stringToUTF8OnStack","ret","exitJS","handleException","callMain","cb","__ATPOSTRUN__","postRun","arguments_","__ATPRERUN__","preRun","_this","moduleArg","reject","expectedDataFileDownloads","metadata","fetchRemotePackage","packageName","packageSize","xhr","XMLHttpRequest","open","responseType","onprogress","size","total","loaded","addedTotal","dataFileDownloads","num","download","Math","ceil","onerror","onload","statusText","responseURL","send","runWithFS","check","msg","stack","processPackageData","arrayBuffer","ArrayBuffer","byteArray","compressedData","_typeof","loadPackage","preloadFallback","error","console","REMOTE_PACKAGE_NAME","REMOTE_PACKAGE_SIZE","indexedDB","PACKAGE_UUID","mozIndexedDB","webkitIndexedDB","msIndexedDB","self","IDB_RO","IDB_RW","DB_NAME","DB_VERSION","METADATA_STORE_NAME","PACKAGE_STORE_NAME","CHUNK_SIZE","preloadResults","errback","openRequest","onupgradeneeded","db","target","result","objectStoreNames","contains","deleteObjectStore","createObjectStore","onsuccess","openDatabase","getRequest","transaction","objectStore","checkCachedPackage","PACKAGE_PATH","PACKAGE_NAME","useCached","fromCache","packages","chunksDone","totalSize","chunkCount","chunks","chunkId","byteLength","tempTyped","byteOffset","fetchCachedPackage","packageData","packageMeta","chunkSliceStart","nextChunkSliceStart","finishedChunks","putPackageRequest","put","putMetadataRequest","uuid","cacheRemotePackage","lastIndexOf","process","encodeURIComponent","REMOTE_PACKAGE_BASE","read_","readAsync","moduleOverrides","_extends","quit_","toThrow","scriptDirectory","href","substr","responseText","out","log","path","tempDouble","tempI64","__ATEXIT__","dataURIPrefix","isDataURI","filename","startsWith","_emscripten_get_now","ASM_CONSTS","edgePostInit","$0","$1","UTF8ToString","homeIndex","homeDir","analyzePath","exists","mkdirTree","mount","IDBFS","syncfs","_WebMain","onFullscreen","edgePreSyncFS","edgePostSyncFS","str","reply","prompt","allocate","ALLOC_NORMAL","AudioContext","webkitAudioContext","mediaDevices","getUserMedia","webkitGetUserMedia","SDL2","capture","audio","audioContext","autoResumeAudioContext","sampleRate","$2","$3","have_microphone","stream","silenceTimer","mediaStreamNode","createMediaStreamSource","scriptProcessorNode","createScriptProcessor","onaudioprocess","audioProcessingEvent","outputBuffer","getChannelData","fill","currentCaptureBuffer","inputBuffer","dynCall","connect","destination","no_microphone","silenceBuffer","createBuffer","video","currentOutputBuffer","numChannels","numberOfChannels","channelData","tracks","getAudioTracks","removeTrack","disconnect","close","pixels","ctxCanvas","ctx","imageCtx","image","createImageData","dst","CanvasPixelArray","val","data32Data","data32","data8","subarray","putImageData","$4","hot_x","hot_y","canvas","width","height","getContext","toDataURL","urlBuf","_malloc","stringToUTF8","innerWidth","innerHeight","alert","elements","element","func","listenOnce","resume","callbacks","sig","rtn","apply","dynCallLegacy","noExitRuntime","PATH","isAbs","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","normalize","isAbsolute","trailingSlash","join","dirname","dir","basename","lastSlash","paths","join2","randomFill","view","crypto","getRandomValues","initRandomFill","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","min","samePartsLength","outputParts","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","decode","u0","u1","u2","String","fromCharCode","ch","FS_stdin_getChar_buffer","charCodeAt","heap","outIdx","maxBytesToWrite","startIdx","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","tty","node","rdev","ErrnoError","seekable","fsync","read","offset","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","readline","FS_stdin_getChar","ioctl_tcgets","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","ioctl_tcsets","ioctl_tiocgwinsz","default_tty1_ops","mmapAlloc","MEMFS","ops_table","createNode","parent","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","resizeFileStorage","newSize","attr","id","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","_i2","_Object$keys","keys","newname","oldpath","position","canOwn","whence","prot","flags","allocated","preloadPlugins","FS_getMode","canRead","canWrite","dbs","_indexedDB","DB_STORE_NAME","populate","getLocalSet","local","getRemoteSet","remote","reconcile","quit","values","getDB","req","fileStore","indexNames","createIndex","unique","preventDefault","isRealDir","toAbsolute","mountpoint","map","stat","pop","index","openKeyCursor","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","removeRemoteEntry","delete","done","errored","e2","getTime","remove","oncomplete","reverse","LZ4","DIR_MODE","FILE_MODE","codec","MiniLZ4","sIdx","eIdx","token","literals_length","match_length","pos","maxInputSize","minMatch","hashShift","mfLimit","skipStrength","mlBits","mlMask","runMask","hasher","hashTable","empty","compressBound","isize","compress","dpos","dlen","anchor","findMatchAttempts","srcLength","sequenceLowBits","sequenceHighBits","hash","imul","ln","compressBlock","compressPackage","verify","temp","compressedChunks","successes","chunk","bound","compressed","compressedSize","back","uncompress","pack","preloadPlugin","files","createPath","Browser","handled","fullname","plugin","finish","readFile","written","currChunk","desired","chunkIndex","floor","compressedStart","found","originalSize","startInChunk","endInChunk","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","opts","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","hashName","parentid","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","FSNode","destroyNode","isSocket","flagsToPermissionString","flag","perms","nodePermissions","includes","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd","getStreamChecked","getStream","createStream","FSStream","shared","isRead","isWrite","isAppend","closeStream","_stream$stream_ops$op","_stream$stream_ops","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","completed","pseudo","mountRoot","next","mkdir","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","dontFollow","lstat","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","FS_modeStringToFlags","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","mmapFlags","munmap","ioctl","cmd","encoding","buf","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","code","staticInit","findObject","dontResolveLastLink","parentExists","parentPath","parentObject","part","createFile","properties","createDataFile","_output$buffer","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","writeChunks","chunkOffset","chunkSize","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","chunkNum","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","fn","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","abs","doMsync","addr","varargs","getp","getStr","setErrNo","___errno_location","outPtr","convertI32PairToI53Checked","lo","hi","NaN","isLeapYear","year","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","ydayFromDate","date","getFullYear","getMonth","getDate","stringToNewUTF8","_emscripten_set_main_loop_timing","mainLoop","timingMode","timingValue","running","scheduler","timeUntilNextTick","tickStartTime","runner","method","setImmediate","setImmediates","emscriptenMainLoopMessageId","stopPropagation","postMessage","performance","setMainLoop","browserIterationFunc","fps","simulateInfiniteLoop","noSetTiming","checkIsRunning","thisMainLoopId","currentlyRunningMainloop","_SDL$audio","_SDL$audio$queueNewAu","queue","blocker","remainingBlockers","remaining","counted","updateStatus","currentFrameNumber","newRenderingFrameStarted","runIter","SDL","queueNewAudioData","runtimeKeepaliveCounter","keepRuntimeAlive","_Module$onExit","_Module4","_exit","callUserCallback","maybeExit","safeSetTimeout","timeout","pause","expected","expectedBlockers","_Module$postMainLoop","_Module5","isFullscreen","pointerLock","moduleContextCreatedCallbacks","workers","pointerLockChange","initted","imagePlugin","noImageDecoding","Blob","getMimetype","URL","createObjectURL","img","Image","complete","drawImage","preloadedImages","revokeObjectURL","audioPlugin","noAudioDecoding","preloadedAudios","Audio","BASE","leftchar","leftbits","curr","PAD","encode64","requestPointerLock","exitPointerLock","ev","createContext","useWebGL","setInModule","webGLContextAttributes","contextHandle","contextAttributes","antialias","alpha","majorVersion","WebGL2RenderingContext","attribute","GLctx","makeContextCurrent","destroyContext","fullscreenHandlersInstalled","lockPointer","resizeCanvas","requestFullscreen","fullscreenChange","_Module$onFullScreen","_Module6","_Module$onFullscreen","_Module7","canvasContainer","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","setWindowedCanvasSize","Element","nextRAF","fakeRequestAnimationFrame","delay","_requestAnimationFrame","_x","RAF","safeRequestAnimationFrame","_window","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","deltaY","deltaMode","mouseX","mouseY","mouseMovementX","mouseMovementY","touches","lastTouches","calculateMouseCoords","pageX","pageY","rect","getBoundingClientRect","scrollX","pageXOffset","scrollY","pageYOffset","adjustedX","left","adjustedY","top","setMouseCoords","_Browser$calculateMou","calculateMouseEvent","touch","coords","identifier","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","screen","wNative","hNative","widthNative","heightNative","round","factor","removeProperty","EGL","errorCode","defaultDisplayInitialized","currentContext","currentReadSurface","currentDrawSurface","depth","stencil","stringCache","setErrorCode","chooseConfig","display","attribList","config","config_size","numConfigs","param","lowLatency","counter","buffers","programs","framebuffers","renderbuffers","textures","shaders","contexts","offscreenCanvases","queries","samplers","transformFeedbacks","syncs","byteSizeByTypeRoot","byteSizeByType","stringiCache","unpackAlignment","recordError","lastError","getNewId","table","MAX_TEMP_BUFFER_SIZE","numTempVertexBuffersPerSize","log2ceilLookup","clz32","generateTempBuffers","quads","largestIndex","tempVertexBufferCounters1","tempVertexBufferCounters2","tempVertexBuffers1","tempVertexBuffers2","tempIndexBuffers","ringbufferLength","ringbuffer1","ringbuffer2","tempQuadIndexBuffer","bindBuffer","numIndexes","quadIndexes","bufferData","getTempVertexBuffer","sizeBytes","ringbuffer","nextFreeBufferIndex","vbo","prevVBO","getParameter","getTempIndexBuffer","ibo","prevIBO","vb","getSource","shader","string","source","calcBufLength","stride","usedTempBuffers","preDrawHandleClientVertexAttribBindings","resetBufferBinding","maxVertexAttribs","clientBuffers","clientside","enabled","bufferSubData","vertexAttribPointerAdaptor","normalized","postDrawHandleClientVertexAttribBindings","currentArrayBufferBinding","getContextSafariWebGL2Fixed","ver","attrs","gl","WebGLRenderingContext","handle","registerContext","_allSupportedExtensions","getSupportedExtensions","supportedExtensionsForGetProcAddress","ext","version","GLctxObject","enableExtensionsByDefault","initExtensions","_GL$currentContext","deleteContext","JSEvents","removeAllHandlersOnTarget","initExtensionsDone","getExtension","divisor","first","primcount","indices","webgl_enable_ANGLE_instanced_arrays","vao","webgl_enable_OES_vertex_array_object","bufs","webgl_enable_WEBGL_draw_buffers","dibvbi","mdibvbi","webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance","disjointTimerQueryExt","multiDrawWebgl","webgl_enable_WEBGL_multi_draw","getExtensions","exts","_eglWaitGL","readEmAsmArgsArray","readEmAsmArgs","sigPtr","wide","withStackSave","stackSave","stackRestore","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","removeDeferredCalls","canPerformEventHandlerRequests","userActivation","isActive","currentEventHandler","allowsDeferredCalls","runDeferredCalls","eventTypeString","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","jsEventHandler","handlerFunc","callbackfunc","getNodeNameForTarget","nodeName","fullscreenEnabled","webkitFullscreenEnabled","setLetterbox","topBottom","leftRight","paddingLeft","paddingRight","paddingTop","paddingBottom","restoreOldWindowedStyle","specialHTMLTargets","findEventTarget","cString","findCanvasEventTarget","getCanvasElementSize","_emscripten_get_canvas_element_size","_emscripten_set_canvas_element_size","setCanvasElementSize","controlTransferredOffscreen","targetInt","currentFullscreenStrategy","jstoi_q","parseInt","softFullscreenResizeWebGLRenderTarget","topMargin","dpr","devicePixelRatio","inHiDPIFullscreenMode","canvasResolutionScaleMode","inAspectRatioFixedFullscreenMode","scaleMode","inPixelPerfectFullscreenMode","inCenteredWithoutScalingFullscreenMode","screenWidth","screenHeight","canvasSize","viewport","canvasResizedCallback","dynCall_iiii","canvasResizedCallbackUserData","JSEvents_resizeCanvasForFullscreen","strategy","restoreOldStyle","fullscreenElement","webkitFullscreenElement","oldWidth","oldHeight","oldCssWidth","oldCssHeight","backgroundColor","oldBackgroundColor","oldDocumentBackgroundColor","oldPaddingLeft","oldPaddingRight","oldPaddingTop","oldPaddingBottom","marginLeft","oldMarginLeft","marginRight","oldMarginRight","marginTop","oldMarginTop","marginBottom","oldMarginBottom","margin","oldDocumentBodyMargin","documentElement","overflow","oldDocumentOverflow","scroll","oldDocumentScroll","imageRendering","oldImageRendering","registerRestoreOldStyle","cssWidth","softFullscreen","cssHeight","windowedCssWidth","windowedCssHeight","windowedRttWidth","windowedRttHeight","desiredCssHeight","desiredCssWidth","filteringMode","dpiScale","newWidth","newHeight","JSEvents_requestFullscreen","webkitRequestFullscreen","ALLOW_KEYBOARD_INPUT","fillGamepadEventData","eventStruct","axes","buttons","pressed","connected","mapping","_emscripten_glActiveTexture","x0","activeTexture","_emscripten_glAttachShader","program","attachShader","_emscripten_glBeginQuery","beginQuery","_emscripten_glBeginQueryEXT","_emscripten_glBeginTransformFeedback","beginTransformFeedback","_emscripten_glBindAttribLocation","bindAttribLocation","_emscripten_glBindBuffer","currentElementArrayBufferBinding","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","_emscripten_glBindBufferBase","bindBufferBase","_emscripten_glBindBufferRange","ptrsize","bindBufferRange","_emscripten_glBindFramebuffer","framebuffer","bindFramebuffer","_emscripten_glBindRenderbuffer","renderbuffer","bindRenderbuffer","_emscripten_glBindSampler","unit","sampler","bindSampler","_emscripten_glBindTexture","texture","bindTexture","_emscripten_glBindTransformFeedback","bindTransformFeedback","_glBindVertexArray","bindVertexArray","_emscripten_glBindVertexArray","_glBindVertexArrayOES","_emscripten_glBindVertexArrayOES","_emscripten_glBlendColor","x1","x2","x3","blendColor","_emscripten_glBlendEquation","blendEquation","_emscripten_glBlendEquationSeparate","blendEquationSeparate","_emscripten_glBlendFunc","blendFunc","_emscripten_glBlendFuncSeparate","blendFuncSeparate","_emscripten_glBlitFramebuffer","x4","x5","x6","x7","x8","x9","blitFramebuffer","_emscripten_glBufferData","usage","_emscripten_glBufferSubData","_emscripten_glCheckFramebufferStatus","checkFramebufferStatus","_emscripten_glClear","clear","_emscripten_glClearBufferfi","clearBufferfi","_emscripten_glClearBufferfv","drawbuffer","clearBufferfv","_emscripten_glClearBufferiv","clearBufferiv","_emscripten_glClearBufferuiv","clearBufferuiv","_emscripten_glClearColor","clearColor","_emscripten_glClearDepthf","clearDepth","_emscripten_glClearStencil","clearStencil","convertI32PairToI53","_emscripten_glClientWaitSync","sync","timeout_low","timeout_high","clientWaitSync","_emscripten_glColorMask","red","green","blue","colorMask","_emscripten_glCompileShader","compileShader","_emscripten_glCompressedTexImage2D","level","internalFormat","border","imageSize","compressedTexImage2D","_emscripten_glCompressedTexImage3D","compressedTexImage3D","_emscripten_glCompressedTexSubImage2D","xoffset","yoffset","format","compressedTexSubImage2D","_emscripten_glCompressedTexSubImage3D","zoffset","compressedTexSubImage3D","_emscripten_glCopyBufferSubData","copyBufferSubData","_emscripten_glCopyTexImage2D","copyTexImage2D","_emscripten_glCopyTexSubImage2D","copyTexSubImage2D","_emscripten_glCopyTexSubImage3D","copyTexSubImage3D","_emscripten_glCreateProgram","createProgram","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","uniformIdCounter","_emscripten_glCreateShader","shaderType","createShader","_emscripten_glCullFace","cullFace","_emscripten_glDeleteBuffers","deleteBuffer","_emscripten_glDeleteFramebuffers","deleteFramebuffer","_emscripten_glDeleteProgram","deleteProgram","_emscripten_glDeleteQueries","ids","query","deleteQuery","_emscripten_glDeleteQueriesEXT","_emscripten_glDeleteRenderbuffers","deleteRenderbuffer","_emscripten_glDeleteSamplers","deleteSampler","_emscripten_glDeleteShader","deleteShader","_emscripten_glDeleteSync","deleteSync","_emscripten_glDeleteTextures","deleteTexture","_emscripten_glDeleteTransformFeedbacks","transformFeedback","deleteTransformFeedback","_glDeleteVertexArrays","deleteVertexArray","_emscripten_glDeleteVertexArrays","_glDeleteVertexArraysOES","_emscripten_glDeleteVertexArraysOES","_emscripten_glDepthFunc","depthFunc","_emscripten_glDepthMask","depthMask","_emscripten_glDepthRangef","depthRange","_emscripten_glDetachShader","detachShader","_emscripten_glDisable","disable","_emscripten_glDisableVertexAttribArray","disableVertexAttribArray","_emscripten_glDrawArrays","drawArrays","_glDrawArraysInstanced","drawArraysInstanced","_emscripten_glDrawArraysInstanced","_glDrawArraysInstancedANGLE","_emscripten_glDrawArraysInstancedANGLE","_glDrawArraysInstancedARB","_emscripten_glDrawArraysInstancedARB","_glDrawArraysInstancedEXT","_emscripten_glDrawArraysInstancedEXT","_glDrawArraysInstancedNV","_emscripten_glDrawArraysInstancedNV","tempFixedLengthArray","_glDrawBuffers","bufArray","drawBuffers","_emscripten_glDrawBuffers","_glDrawBuffersEXT","_emscripten_glDrawBuffersEXT","_glDrawBuffersWEBGL","_emscripten_glDrawBuffersWEBGL","_glDrawElements","drawElements","_emscripten_glDrawElements","_glDrawElementsInstanced","drawElementsInstanced","_emscripten_glDrawElementsInstanced","_glDrawElementsInstancedANGLE","_emscripten_glDrawElementsInstancedANGLE","_glDrawElementsInstancedARB","_emscripten_glDrawElementsInstancedARB","_glDrawElementsInstancedEXT","_emscripten_glDrawElementsInstancedEXT","_glDrawElementsInstancedNV","_emscripten_glDrawElementsInstancedNV","_emscripten_glDrawRangeElements","_emscripten_glEnable","enable","_emscripten_glEnableVertexAttribArray","enableVertexAttribArray","_emscripten_glEndQuery","endQuery","_emscripten_glEndQueryEXT","_emscripten_glEndTransformFeedback","endTransformFeedback","_emscripten_glFenceSync","fenceSync","_emscripten_glFinish","_emscripten_glFlush","flush","_emscripten_glFramebufferRenderbuffer","attachment","renderbuffertarget","framebufferRenderbuffer","_emscripten_glFramebufferTexture2D","textarget","framebufferTexture2D","_emscripten_glFramebufferTextureLayer","layer","framebufferTextureLayer","_emscripten_glFrontFace","frontFace","createFunction","objectTable","_emscripten_glGenBuffers","_emscripten_glGenFramebuffers","_emscripten_glGenQueries","_emscripten_glGenQueriesEXT","_emscripten_glGenRenderbuffers","_emscripten_glGenSamplers","_emscripten_glGenTextures","_emscripten_glGenTransformFeedbacks","_emscripten_glGenVertexArrays","_glGenVertexArraysOES","_emscripten_glGenVertexArraysOES","_emscripten_glGenerateMipmap","generateMipmap","__glGetActiveAttribOrUniform","funcName","bufSize","info","numBytesWrittenExclNull","_emscripten_glGetActiveAttrib","_emscripten_glGetActiveUniform","_emscripten_glGetActiveUniformBlockName","uniformBlockIndex","uniformBlockName","getActiveUniformBlockName","_emscripten_glGetActiveUniformBlockiv","pname","params","getActiveUniformBlockParameter","_emscripten_glGetActiveUniformsiv","uniformCount","uniformIndices","getActiveUniforms","_emscripten_glGetAttachedShaders","maxCount","getAttachedShaders","_emscripten_glGetAttribLocation","getAttribLocation","writeI53ToI64","emscriptenWebGLGet","name_","formats","_emscripten_glGetBooleanv","_emscripten_glGetBufferParameteri64v","getBufferParameter","_emscripten_glGetBufferParameteriv","_emscripten_glGetError","getError","_glGetFloatv","_emscripten_glGetFloatv","_emscripten_glGetFragDataLocation","getFragDataLocation","_emscripten_glGetFramebufferAttachmentParameteriv","getFramebufferAttachmentParameter","WebGLRenderbuffer","WebGLTexture","emscriptenWebGLGetIndexed","getIndexedParameter","WebGLBuffer","_emscripten_glGetInteger64i_v","_emscripten_glGetInteger64v","_emscripten_glGetIntegeri_v","_emscripten_glGetIntegerv","_emscripten_glGetInternalformativ","internalformat","getInternalformatParameter","_emscripten_glGetProgramBinary","_emscripten_glGetProgramInfoLog","maxLength","infoLog","getProgramInfoLog","_emscripten_glGetProgramiv","getProgramParameter","getActiveUniform","getActiveAttrib","_glGetQueryObjecti64vEXT","getQueryParameter","_emscripten_glGetQueryObjecti64vEXT","_glGetQueryObjectivEXT","_emscripten_glGetQueryObjectivEXT","_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectuiv","_glGetQueryObjectuivEXT","_emscripten_glGetQueryObjectuivEXT","_emscripten_glGetQueryiv","getQuery","_emscripten_glGetQueryivEXT","_emscripten_glGetRenderbufferParameteriv","getRenderbufferParameter","_emscripten_glGetSamplerParameterfv","getSamplerParameter","_emscripten_glGetSamplerParameteriv","_emscripten_glGetShaderInfoLog","getShaderInfoLog","_emscripten_glGetShaderPrecisionFormat","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","_emscripten_glGetShaderSource","getShaderSource","_emscripten_glGetShaderiv","getShaderParameter","_emscripten_glGetString","glVersion","glslVersion","ver_num","match","_emscripten_glGetStringi","_emscripten_glGetSynciv","getSyncParameter","_emscripten_glGetTexParameterfv","getTexParameter","_emscripten_glGetTexParameteriv","_emscripten_glGetTransformFeedbackVarying","getTransformFeedbackVarying","_emscripten_glGetUniformBlockIndex","getUniformBlockIndex","_emscripten_glGetUniformIndices","uniformNames","names","getUniformIndices","webglGetLeftBracePos","webglPrepareUniformLocationsBeforeFirstUse","uniformLocsById","uniformSizeAndIdsByName","uniformArrayNamesById","nm","sz","lb","arrayName","_emscripten_glGetUniformLocation","arrayIndex","uniformBaseName","leftBrace","sizeAndId","getUniformLocation","webglGetUniformLocation","currentProgram","webglLoc","emscriptenWebGLGetUniform","getUniform","_emscripten_glGetUniformfv","_emscripten_glGetUniformiv","_emscripten_glGetUniformuiv","emscriptenWebGLGetVertexAttrib","getVertexAttrib","fround","_glGetVertexAttribIiv","_emscripten_glGetVertexAttribIiv","_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribPointerv","pointer","getVertexAttribOffset","_emscripten_glGetVertexAttribfv","_emscripten_glGetVertexAttribiv","_emscripten_glHint","hint","_emscripten_glInvalidateFramebuffer","numAttachments","attachments","list","invalidateFramebuffer","_emscripten_glInvalidateSubFramebuffer","invalidateSubFramebuffer","_emscripten_glIsBuffer","isBuffer","_emscripten_glIsEnabled","isEnabled","_emscripten_glIsFramebuffer","fb","isFramebuffer","_emscripten_glIsProgram","isProgram","_emscripten_glIsQuery","isQuery","_emscripten_glIsQueryEXT","_emscripten_glIsRenderbuffer","rb","isRenderbuffer","_emscripten_glIsSampler","isSampler","_emscripten_glIsShader","isShader","_emscripten_glIsSync","isSync","_emscripten_glIsTexture","isTexture","_emscripten_glIsTransformFeedback","isTransformFeedback","_glIsVertexArray","array","isVertexArray","_emscripten_glIsVertexArray","_glIsVertexArrayOES","_emscripten_glIsVertexArrayOES","_emscripten_glLineWidth","lineWidth","_emscripten_glLinkProgram","linkProgram","_emscripten_glPauseTransformFeedback","pauseTransformFeedback","_emscripten_glPixelStorei","pixelStorei","_emscripten_glPolygonOffset","polygonOffset","_emscripten_glProgramBinary","_emscripten_glProgramParameteri","_emscripten_glQueryCounterEXT","_emscripten_glReadBuffer","readBuffer","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","BYTES_PER_ELEMENT","emscriptenWebGLGetTexPixelData","byteSize","sizePerPixel","colorChannelsInGlTextureFormat","bytes","alignment","alignedRowSize","roundedToNextMultipleOf","computeUnpackAlignedImageSize","_emscripten_glReadPixels","readPixels","pixelData","_emscripten_glReleaseShaderCompiler","_emscripten_glRenderbufferStorage","renderbufferStorage","_emscripten_glRenderbufferStorageMultisample","renderbufferStorageMultisample","_emscripten_glResumeTransformFeedback","resumeTransformFeedback","_emscripten_glSampleCoverage","invert","sampleCoverage","_emscripten_glSamplerParameterf","samplerParameterf","_emscripten_glSamplerParameterfv","_emscripten_glSamplerParameteri","samplerParameteri","_emscripten_glSamplerParameteriv","_emscripten_glScissor","scissor","_emscripten_glShaderBinary","_emscripten_glShaderSource","shaderSource","_emscripten_glStencilFunc","stencilFunc","_emscripten_glStencilFuncSeparate","stencilFuncSeparate","_emscripten_glStencilMask","stencilMask","_emscripten_glStencilMaskSeparate","stencilMaskSeparate","_emscripten_glStencilOp","stencilOp","_emscripten_glStencilOpSeparate","stencilOpSeparate","_emscripten_glTexImage2D","texImage2D","_emscripten_glTexImage3D","texImage3D","_emscripten_glTexParameterf","texParameterf","_emscripten_glTexParameterfv","_emscripten_glTexParameteri","texParameteri","_emscripten_glTexParameteriv","_emscripten_glTexStorage2D","texStorage2D","_emscripten_glTexStorage3D","texStorage3D","_emscripten_glTexSubImage2D","texSubImage2D","_emscripten_glTexSubImage3D","texSubImage3D","_emscripten_glTransformFeedbackVaryings","varyings","bufferMode","vars","transformFeedbackVaryings","_emscripten_glUniform1f","v0","uniform1f","miniTempWebGLFloatBuffers","_emscripten_glUniform1fv","uniform1fv","_emscripten_glUniform1i","uniform1i","miniTempWebGLIntBuffers","_emscripten_glUniform1iv","uniform1iv","_emscripten_glUniform1ui","uniform1ui","_emscripten_glUniform1uiv","uniform1uiv","_emscripten_glUniform2f","v1","uniform2f","_emscripten_glUniform2fv","uniform2fv","_emscripten_glUniform2i","uniform2i","_emscripten_glUniform2iv","uniform2iv","_emscripten_glUniform2ui","uniform2ui","_emscripten_glUniform2uiv","uniform2uiv","_emscripten_glUniform3f","v2","uniform3f","_emscripten_glUniform3fv","uniform3fv","_emscripten_glUniform3i","uniform3i","_emscripten_glUniform3iv","uniform3iv","_emscripten_glUniform3ui","uniform3ui","_emscripten_glUniform3uiv","uniform3uiv","_emscripten_glUniform4f","v3","uniform4f","_emscripten_glUniform4fv","uniform4fv","_emscripten_glUniform4i","uniform4i","_emscripten_glUniform4iv","uniform4iv","_emscripten_glUniform4ui","uniform4ui","_emscripten_glUniform4uiv","uniform4uiv","_emscripten_glUniformBlockBinding","uniformBlockBinding","_emscripten_glUniformMatrix2fv","transpose","uniformMatrix2fv","_emscripten_glUniformMatrix2x3fv","uniformMatrix2x3fv","_emscripten_glUniformMatrix2x4fv","uniformMatrix2x4fv","_emscripten_glUniformMatrix3fv","uniformMatrix3fv","_emscripten_glUniformMatrix3x2fv","uniformMatrix3x2fv","_emscripten_glUniformMatrix3x4fv","uniformMatrix3x4fv","_emscripten_glUniformMatrix4fv","uniformMatrix4fv","_emscripten_glUniformMatrix4x2fv","uniformMatrix4x2fv","_emscripten_glUniformMatrix4x3fv","uniformMatrix4x3fv","_emscripten_glUseProgram","useProgram","_emscripten_glValidateProgram","validateProgram","_emscripten_glVertexAttrib1f","vertexAttrib1f","_emscripten_glVertexAttrib1fv","_emscripten_glVertexAttrib2f","vertexAttrib2f","_emscripten_glVertexAttrib2fv","_emscripten_glVertexAttrib3f","vertexAttrib3f","_emscripten_glVertexAttrib3fv","_emscripten_glVertexAttrib4f","vertexAttrib4f","_emscripten_glVertexAttrib4fv","_glVertexAttribDivisor","vertexAttribDivisor","_emscripten_glVertexAttribDivisor","_emscripten_glVertexAttribDivisorANGLE","_emscripten_glVertexAttribDivisorARB","_emscripten_glVertexAttribDivisorEXT","_emscripten_glVertexAttribDivisorNV","_emscripten_glVertexAttribI4i","vertexAttribI4i","_emscripten_glVertexAttribI4iv","_emscripten_glVertexAttribI4ui","vertexAttribI4ui","_emscripten_glVertexAttribI4uiv","_emscripten_glVertexAttribIPointer","vertexAttribIPointer","_emscripten_glVertexAttribPointer","vertexAttribPointer","_emscripten_glViewport","_emscripten_glWaitSync","waitSync","growMemory","pages","grow","disableGamepadApiIfItThrows","getGamepads","registerFocusEventCallback","userData","eventTypeId","focusEvent","registerFullscreenChangeEventCallback","fullscreenChangeEvent","mozFullScreenElement","msFullscreenElement","reportedElement","previousFullscreenElement","clientWidth","clientHeight","fillFullscreenChangeEventData","registerGamepadEventCallback","gamepadEvent","registerKeyEventCallback","keyEvent","keyEventData","timeStamp","ctrlKey","shiftKey","altKey","metaKey","repeat","charCode","keyCode","which","char","locale","fillMouseEventData","screenX","screenY","clientX","clientY","button","registerMouseEventCallback","mouseEvent","registerPointerlockChangeEventCallback","pointerlockChangeEvent","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","msPointerLockElement","fillPointerlockChangeEventData","registerTouchEventCallback","touchEvent","et","isChanged","onTarget","changedTouches","targetTouches","targetRect","numTouches","registerVisibilityChangeEventCallback","visibilityChangeEvent","visibilityState","hidden","_emscripten_sleep","ms","Asyncify","handleSleep","wakeUp","isAsync","ENV","getEnvStrings","strings","env","languages","doReadv","iov","iovcnt","doWritev","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","runAndAbortIfError","instrumentWasmImports","importPattern","_i3","_Object$entries","_Object$entries$_i","_slicedToArray","original","instrumentWasmExports","_loop","_Object$entries2$_i","_Object$entries2","_i4","exportCallStack","maybeStopUnwind","State","Normal","Unwinding","Rewinding","Disabled","StackSize","currData","handleSleepReturnValue","callStackNameToId","callStackIdToName","callStackId","asyncPromiseHandlers","sleepCallbacks","getCallStackId","_asyncify_stop_unwind","Fibers","trampoline","whenDone","allocateData","setDataHeader","setDataRewindFunc","stackSize","rewindId","getDataRewindFunc","wasmExports","doRewind","startAsync","reachedCallback","reachedAfterCallback","_asyncify_start_rewind","asyncWasmReturnValue","isError","_asyncify_start_unwind","_asyncify_stop_rewind","_free","handleAsync","readMode","writeMode","createPreloadedFile","dontCreateFile","preFinish","processData","fileData","FS_createDataFile","FS_handledByPreloadPlugin","noRunDep","dep","asyncLoad","miniTempWebGLFloatBuffersStorage","miniTempWebGLIntBuffersStorage","wasmImports","__syscall_chdir","__syscall_dup3","newfd","old","existing","__syscall_faccessat","amode","__syscall_fcntl64","__syscall_fstat64","__syscall_getcwd","cwdLengthInBytes","__syscall_getdents64","dirp","struct_size","off","child","__syscall_ioctl","op","termios","argp","winsize","__syscall_lstat64","__syscall_mkdirat","__syscall_newfstatat","nofollow","__syscall_openat","__syscall_readlinkat","bufsize","endChar","__syscall_renameat","olddirfd","newdirfd","__syscall_rmdir","__syscall_stat64","__syscall_unlinkat","_emscripten_get_now_is_monotonic","_emscripten_throw_longjmp","Infinity","_gmtime_js","time_low","time_high","tmPtr","time","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","yday","_localtime_js","getSeconds","getMinutes","getHours","getDay","getTimezoneOffset","summerOffset","winterOffset","_mktime_js","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","timeMs","isNaN","setTempRet0","_tzset_js","timezone","daylight","tzname","extractZone","toTimeString","currentYear","winter","summer","stdTimezoneOffset","winterName","summerName","winterNamePtr","summerNamePtr","eglBindAPI","api","eglChooseConfig","attrib_list","configs","eglCreateContext","hmm","contextAttribs","glesContextVersion","minorVersion","eglCreateWindowSurface","eglDestroyContext","eglDestroySurface","surface","eglGetConfigAttrib","eglGetDisplay","nativeDisplayType","eglGetError","eglInitialize","eglMakeCurrent","draw","eglQueryString","eglSwapBuffers","isContextLost","eglSwapInterval","interval","eglTerminate","eglWaitGL","eglWaitNative","emscripten_asm_const_int","argbuf","runEmAsmFunction","emscripten_asm_const_int_sync_on_main_thread","runMainThreadEmAsm","emscripten_date_now","emscripten_enter_soft_fullscreen","fullscreenStrategy","hiddenElements","onlyVisibleElement","displayState","hideEverythingExceptGivenElement","restoreHiddenElements","emscripten_exit_fullscreen","webkitExitFullscreen","emscripten_exit_pointerlock","emscripten_exit_soft_fullscreen","_restoreOldWindowedSt","emscripten_get_device_pixel_ratio","emscripten_get_element_css_size","emscripten_get_gamepad_status","gamepadState","lastGamepadState","emscripten_get_now","emscripten_get_num_gamepads","emscripten_get_screen_size","emscripten_glActiveTexture","emscripten_glAttachShader","emscripten_glBeginQuery","emscripten_glBeginQueryEXT","emscripten_glBeginTransformFeedback","emscripten_glBindAttribLocation","emscripten_glBindBuffer","emscripten_glBindBufferBase","emscripten_glBindBufferRange","emscripten_glBindFramebuffer","emscripten_glBindRenderbuffer","emscripten_glBindSampler","emscripten_glBindTexture","emscripten_glBindTransformFeedback","emscripten_glBindVertexArray","emscripten_glBindVertexArrayOES","emscripten_glBlendColor","emscripten_glBlendEquation","emscripten_glBlendEquationSeparate","emscripten_glBlendFunc","emscripten_glBlendFuncSeparate","emscripten_glBlitFramebuffer","emscripten_glBufferData","emscripten_glBufferSubData","emscripten_glCheckFramebufferStatus","emscripten_glClear","emscripten_glClearBufferfi","emscripten_glClearBufferfv","emscripten_glClearBufferiv","emscripten_glClearBufferuiv","emscripten_glClearColor","emscripten_glClearDepthf","emscripten_glClearStencil","emscripten_glClientWaitSync","emscripten_glColorMask","emscripten_glCompileShader","emscripten_glCompressedTexImage2D","emscripten_glCompressedTexImage3D","emscripten_glCompressedTexSubImage2D","emscripten_glCompressedTexSubImage3D","emscripten_glCopyBufferSubData","emscripten_glCopyTexImage2D","emscripten_glCopyTexSubImage2D","emscripten_glCopyTexSubImage3D","emscripten_glCreateProgram","emscripten_glCreateShader","emscripten_glCullFace","emscripten_glDeleteBuffers","emscripten_glDeleteFramebuffers","emscripten_glDeleteProgram","emscripten_glDeleteQueries","emscripten_glDeleteQueriesEXT","emscripten_glDeleteRenderbuffers","emscripten_glDeleteSamplers","emscripten_glDeleteShader","emscripten_glDeleteSync","emscripten_glDeleteTextures","emscripten_glDeleteTransformFeedbacks","emscripten_glDeleteVertexArrays","emscripten_glDeleteVertexArraysOES","emscripten_glDepthFunc","emscripten_glDepthMask","emscripten_glDepthRangef","emscripten_glDetachShader","emscripten_glDisable","emscripten_glDisableVertexAttribArray","emscripten_glDrawArrays","emscripten_glDrawArraysInstanced","emscripten_glDrawArraysInstancedANGLE","emscripten_glDrawArraysInstancedARB","emscripten_glDrawArraysInstancedEXT","emscripten_glDrawArraysInstancedNV","emscripten_glDrawBuffers","emscripten_glDrawBuffersEXT","emscripten_glDrawBuffersWEBGL","emscripten_glDrawElements","emscripten_glDrawElementsInstanced","emscripten_glDrawElementsInstancedANGLE","emscripten_glDrawElementsInstancedARB","emscripten_glDrawElementsInstancedEXT","emscripten_glDrawElementsInstancedNV","emscripten_glDrawRangeElements","emscripten_glEnable","emscripten_glEnableVertexAttribArray","emscripten_glEndQuery","emscripten_glEndQueryEXT","emscripten_glEndTransformFeedback","emscripten_glFenceSync","emscripten_glFinish","emscripten_glFlush","emscripten_glFramebufferRenderbuffer","emscripten_glFramebufferTexture2D","emscripten_glFramebufferTextureLayer","emscripten_glFrontFace","emscripten_glGenBuffers","emscripten_glGenFramebuffers","emscripten_glGenQueries","emscripten_glGenQueriesEXT","emscripten_glGenRenderbuffers","emscripten_glGenSamplers","emscripten_glGenTextures","emscripten_glGenTransformFeedbacks","emscripten_glGenVertexArrays","emscripten_glGenVertexArraysOES","emscripten_glGenerateMipmap","emscripten_glGetActiveAttrib","emscripten_glGetActiveUniform","emscripten_glGetActiveUniformBlockName","emscripten_glGetActiveUniformBlockiv","emscripten_glGetActiveUniformsiv","emscripten_glGetAttachedShaders","emscripten_glGetAttribLocation","emscripten_glGetBooleanv","emscripten_glGetBufferParameteri64v","emscripten_glGetBufferParameteriv","emscripten_glGetError","emscripten_glGetFloatv","emscripten_glGetFragDataLocation","emscripten_glGetFramebufferAttachmentParameteriv","emscripten_glGetInteger64i_v","emscripten_glGetInteger64v","emscripten_glGetIntegeri_v","emscripten_glGetIntegerv","emscripten_glGetInternalformativ","emscripten_glGetProgramBinary","emscripten_glGetProgramInfoLog","emscripten_glGetProgramiv","emscripten_glGetQueryObjecti64vEXT","emscripten_glGetQueryObjectivEXT","emscripten_glGetQueryObjectui64vEXT","emscripten_glGetQueryObjectuiv","emscripten_glGetQueryObjectuivEXT","emscripten_glGetQueryiv","emscripten_glGetQueryivEXT","emscripten_glGetRenderbufferParameteriv","emscripten_glGetSamplerParameterfv","emscripten_glGetSamplerParameteriv","emscripten_glGetShaderInfoLog","emscripten_glGetShaderPrecisionFormat","emscripten_glGetShaderSource","emscripten_glGetShaderiv","emscripten_glGetString","emscripten_glGetStringi","emscripten_glGetSynciv","emscripten_glGetTexParameterfv","emscripten_glGetTexParameteriv","emscripten_glGetTransformFeedbackVarying","emscripten_glGetUniformBlockIndex","emscripten_glGetUniformIndices","emscripten_glGetUniformLocation","emscripten_glGetUniformfv","emscripten_glGetUniformiv","emscripten_glGetUniformuiv","emscripten_glGetVertexAttribIiv","emscripten_glGetVertexAttribIuiv","emscripten_glGetVertexAttribPointerv","emscripten_glGetVertexAttribfv","emscripten_glGetVertexAttribiv","emscripten_glHint","emscripten_glInvalidateFramebuffer","emscripten_glInvalidateSubFramebuffer","emscripten_glIsBuffer","emscripten_glIsEnabled","emscripten_glIsFramebuffer","emscripten_glIsProgram","emscripten_glIsQuery","emscripten_glIsQueryEXT","emscripten_glIsRenderbuffer","emscripten_glIsSampler","emscripten_glIsShader","emscripten_glIsSync","emscripten_glIsTexture","emscripten_glIsTransformFeedback","emscripten_glIsVertexArray","emscripten_glIsVertexArrayOES","emscripten_glLineWidth","emscripten_glLinkProgram","emscripten_glPauseTransformFeedback","emscripten_glPixelStorei","emscripten_glPolygonOffset","emscripten_glProgramBinary","emscripten_glProgramParameteri","emscripten_glQueryCounterEXT","emscripten_glReadBuffer","emscripten_glReadPixels","emscripten_glReleaseShaderCompiler","emscripten_glRenderbufferStorage","emscripten_glRenderbufferStorageMultisample","emscripten_glResumeTransformFeedback","emscripten_glSampleCoverage","emscripten_glSamplerParameterf","emscripten_glSamplerParameterfv","emscripten_glSamplerParameteri","emscripten_glSamplerParameteriv","emscripten_glScissor","emscripten_glShaderBinary","emscripten_glShaderSource","emscripten_glStencilFunc","emscripten_glStencilFuncSeparate","emscripten_glStencilMask","emscripten_glStencilMaskSeparate","emscripten_glStencilOp","emscripten_glStencilOpSeparate","emscripten_glTexImage2D","emscripten_glTexImage3D","emscripten_glTexParameterf","emscripten_glTexParameterfv","emscripten_glTexParameteri","emscripten_glTexParameteriv","emscripten_glTexStorage2D","emscripten_glTexStorage3D","emscripten_glTexSubImage2D","emscripten_glTexSubImage3D","emscripten_glTransformFeedbackVaryings","emscripten_glUniform1f","emscripten_glUniform1fv","emscripten_glUniform1i","emscripten_glUniform1iv","emscripten_glUniform1ui","emscripten_glUniform1uiv","emscripten_glUniform2f","emscripten_glUniform2fv","emscripten_glUniform2i","emscripten_glUniform2iv","emscripten_glUniform2ui","emscripten_glUniform2uiv","emscripten_glUniform3f","emscripten_glUniform3fv","emscripten_glUniform3i","emscripten_glUniform3iv","emscripten_glUniform3ui","emscripten_glUniform3uiv","emscripten_glUniform4f","emscripten_glUniform4fv","emscripten_glUniform4i","emscripten_glUniform4iv","emscripten_glUniform4ui","emscripten_glUniform4uiv","emscripten_glUniformBlockBinding","emscripten_glUniformMatrix2fv","emscripten_glUniformMatrix2x3fv","emscripten_glUniformMatrix2x4fv","emscripten_glUniformMatrix3fv","emscripten_glUniformMatrix3x2fv","emscripten_glUniformMatrix3x4fv","emscripten_glUniformMatrix4fv","emscripten_glUniformMatrix4x2fv","emscripten_glUniformMatrix4x3fv","emscripten_glUseProgram","emscripten_glValidateProgram","emscripten_glVertexAttrib1f","emscripten_glVertexAttrib1fv","emscripten_glVertexAttrib2f","emscripten_glVertexAttrib2fv","emscripten_glVertexAttrib3f","emscripten_glVertexAttrib3fv","emscripten_glVertexAttrib4f","emscripten_glVertexAttrib4fv","emscripten_glVertexAttribDivisor","emscripten_glVertexAttribDivisorANGLE","emscripten_glVertexAttribDivisorARB","emscripten_glVertexAttribDivisorEXT","emscripten_glVertexAttribDivisorNV","emscripten_glVertexAttribI4i","emscripten_glVertexAttribI4iv","emscripten_glVertexAttribI4ui","emscripten_glVertexAttribI4uiv","emscripten_glVertexAttribIPointer","emscripten_glVertexAttribPointer","emscripten_glViewport","emscripten_glWaitSync","emscripten_has_asyncify","emscripten_memcpy_js","dest","copyWithin","emscripten_request_fullscreen_strategy","deferUntilInEventHandler","doRequestFullscreen","emscripten_request_pointerlock","emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","multiple","cutDown","overGrownHeapSize","emscripten_sample_gamepad_data","emscripten_set_beforeunload_callback_on_thread","targetThread","onbeforeunload","confirmationMessage","returnValue","registerBeforeUnloadEventCallback","emscripten_set_blur_callback_on_thread","emscripten_set_canvas_element_size","emscripten_set_element_css_size","emscripten_set_focus_callback_on_thread","emscripten_set_fullscreenchange_callback_on_thread","emscripten_set_gamepadconnected_callback_on_thread","emscripten_set_gamepaddisconnected_callback_on_thread","emscripten_set_keydown_callback_on_thread","emscripten_set_keypress_callback_on_thread","emscripten_set_keyup_callback_on_thread","emscripten_set_main_loop","dynCall_v","emscripten_set_mousedown_callback_on_thread","emscripten_set_mouseenter_callback_on_thread","emscripten_set_mouseleave_callback_on_thread","emscripten_set_mousemove_callback_on_thread","emscripten_set_mouseup_callback_on_thread","emscripten_set_pointerlockchange_callback_on_thread","mozRequestPointerLock","webkitRequestPointerLock","msRequestPointerLock","emscripten_set_resize_callback_on_thread","uiEvent","outerWidth","outerHeight","registerUiEventCallback","emscripten_set_touchcancel_callback_on_thread","emscripten_set_touchend_callback_on_thread","emscripten_set_touchmove_callback_on_thread","emscripten_set_touchstart_callback_on_thread","emscripten_set_visibilitychange_callback_on_thread","emscripten_set_wheel_callback_on_thread","onwheel","wheelEvent","registerWheelEventCallback","emscripten_set_window_title","title","emscripten_sleep","environ_get","__environ","environ_buf","stringToAscii","environ_sizes_get","penviron_count","penviron_buf_size","exit","fd_close","fd_read","pnum","fd_seek","offset_low","offset_high","newOffset","fd_write","glGetFloatv","invoke_vii","a1","a2","sp","dynCall_vii","_setThrew","strftime","maxsize","tm","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getWeekBasedYear","thisDate","days","newDate","leap","currentMonth","daysInCurrentMonth","setDate","setMonth","setFullYear","addDays","tm_year","tm_yday","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_wday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","EXPANSION_RULES_2","twelveHour","sum","arraySum","jan1","dec31","ahead","system","command","receiveInstance","instantiateStreaming","createWasm","a0","a3","a4","a5","a6","a7","a8","a9","a10","a11","runCaller","ready","license","LicenseModal","_ref","onClose","class","onClick","overflowY","overflowX","fontFamily","whiteSpace","fontSize","defaultIWad","deathmatchIWad","indexDBName","WadHandler","_defineProperty","signal","_openDatabase","_uploadWads","trace","wads","wadState","_asyncToGenerator","database","_database","upload","reader","FileReader","readAsArrayBuffer","iwad","trans","wadName","isIWAD","_database2","wad","_database3","_ret","setWads","_this2","dbrequest","projects","WadChooser","_getCookie$trim","_getCookie","_useState2","useState","showLicense","setShowLicense","pelements","flex","fontWeight","flexGrow","maxWidth","padding","flexDirection","justifyContent","alignItems","singleton","click","placeholder","spellcheck","onChange","_ev$target","_ev$target$value","_ev$target2","badFile","find","uploadWads","flexShrink","EdgeClassic","canvasRef","useRef","canvasContainerRef","_useState4","loading","useEffect","syncCanvasSize","offsetWidth","offsetHeight","doSyncTimeout","canvasSync","_WebSyncScreenSize","iwadPath","customCommandLine","_toConsumableArray","_WebOpenGameMenu","_objectSpread","preEdgeSyncFS","postEdgeSyncFS","preInit","print","printErr","setStatus","monitorRunDependencies","globalThis","visibility","_ref2","_canvasRef$current","_x2","Player","App"],"mappings":"aAIE,SAASA,EAAoBC,GAG5B,GAAGC,EAAiBD,GACnB,OAAOC,EAAiBD,GAAUE,QAGnC,IAAIC,EAASF,EAAiBD,GAAY,CACzCI,EAAGJ,EACHK,GAAG,EACHH,QAAS,CAAC,GAUX,OANAI,EAAQN,GAAUO,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOE,GAAI,EAGJF,EAAOD,OACf,CAxBA,IAAID,EAAmB,CAAC,EA4BxBF,EAAoBS,EAAIF,EAGxBP,EAAoBU,EAAIR,EAGxBF,EAAoBW,EAAI,SAASR,EAASS,EAAMC,GAC3Cb,EAAoBc,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,GAEhE,EAGAb,EAAoBmB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,GACvD,EAOAtB,EAAoBuB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQtB,EAAoBsB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA3B,EAAoBmB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOtB,EAAoBW,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,EAAM,EAAEC,KAAK,KAAMD,IAC9I,OAAOF,CACR,EAGA1B,EAAoB8B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,OAAG,EAClD,WAA8B,OAAOA,CAAQ,EAE9C,OADAJ,EAAoBW,EAAEE,EAAQ,IAAKA,GAC5BA,CACR,EAGAb,EAAoBc,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,EAAW,EAGpHhC,EAAoBmC,EAAI,KAIjBnC,EAAoBA,EAAoBoC,EAAI,O,uCClFrD,uBAGQC,EAAuBC,IAApBC,EAAoBD,IAAZE,EAAYF,IAEzBG,EAAiB,SAAAhC,GAAC,OAAKA,GAAKA,EAAEiC,QAAUjC,EAAEiC,QAAUjC,CAAC,EAErDkC,EAAe,SAAAC,GAAG,MAA6B,MAAxBA,EAAIA,EAAIC,OAAS,GAAaD,EAAMA,EAAM,GAAG,EA0B1E,GATiC,kBAAmBE,WACnDA,UAAUC,cAAcC,SACvBL,EAAaM,KAC0B,SAMtB,mBAFTR,EAAeS,EAAQ,SAEF,CAC9B,IAAIC,EACHC,SAASC,eAAe,gBAAkBD,SAASE,KAAKC,kBA4BrDnD,EA1BO,WACV,IAAIoD,EAAMf,EAAeS,EAAQ,SAC7BO,EAAgB,CAAC,EACfC,EAAoBN,SAASO,cAClC,gCAEGD,IACHD,EACCG,KAAKC,MAAMC,UAAUJ,EAAkBK,YAAYN,eACnDA,GAMF,IAAMO,EAAW,CAAEP,iBACbQ,EAAaR,EAAcb,IAAMD,EAAac,EAAcb,KAAO,IAIxEJ,GACAyB,IAAetB,EAAauB,SAASC,UACR3B,EAAUD,GAC/BF,EAAEmB,EAAK,CAAEQ,aAAaZ,SAASE,KAAMH,EAC/C,CAIAiB,EACD,C,oCCzDgB,SAAA/B,EAAOP,EAAKxB,GAE3B,IAAK,IAAI+D,KAAK/D,EAAOwB,EAAIuC,GAAK/D,EAAM+D,GACpC,OAA6BvC,CAC7B,CAQM,SAASwC,EAAWxC,GAC1B,IAAIxB,EAAawB,EAAKyC,WAClBjE,GAAYA,EAAWkE,YAAY1C,EACvC,CCXM,SAAS2C,EAAcnE,EAAM+D,EAAOhE,GAC1C,IACCkB,EACAJ,EACAL,EAHG4D,EAAkB,CAAC,EAIvB,IAAK5D,KAAKuD,EACA,OAALvD,EAAYS,EAAM8C,EAAMvD,GACd,OAALA,EAAYK,EAAMkD,EAAMvD,GAC5B4D,EAAgB5D,GAAKuD,EAAMvD,GAUjC,GAPI6D,UAAU9B,OAAS,IACtB6B,EAAgBE,SACfD,UAAU9B,OAAS,EAAIf,EAAMtB,KAAKmE,UAAW,GAAKtE,GAKjC,mBAARC,GAA2C,MAArBA,EAAKuE,aACrC,IAAK/D,KAAKR,EAAKuE,kBAAA,IACVH,EAAgB5D,KACnB4D,EAAgB5D,GAAKR,EAAKuE,aAAa/D,IAK1C,OAAOqB,EAAY7B,EAAMoE,EAAiBnD,EAAKJ,EAAK,KACpD,UAcegB,EAAYL,EAAMzB,EAAOkB,EAAKJ,EAAKL,GAGlD,IAAM4D,EAAQ,CACbI,KAAAhD,EACAiD,MAAA1E,EACAuB,IAAAL,EACAyD,IAAA7D,EACA8D,IAAW,KACXC,GAAS,KACTC,IAAQ,EACRC,IAAM,KAKNC,SAAA,EACAC,IAAY,KACZC,IAAY,KACZC,iBAAA,EACAC,IAAuB,MAAZ3E,IAAqBuD,EAAUvD,GAM3C,OAFgB,MAAZA,GAAqC,MAAjBR,EAAQoF,OAAepF,EAAQoF,MAAMhB,GAEtDA,CACP,CAMM,SAASiB,EAAS7D,GACxB,OAAOA,EAAM8C,QACb,CC7Ee,SAAAgB,EAAU9D,EAAOxB,GAChCuF,KAAKd,MAAQjD,EACb+D,KAAKC,QAAUxF,CACf,CA0Ee,SAAAyF,EAAcjE,EAAOxB,GACpC,GAAkB,MAAdA,EAEH,OAAOwB,EAAAoD,GACJa,EAAcjE,EAAeoD,GAAApD,EAAAoD,GAAwBD,IAAAe,QAAQlE,GAAS,GACtE,KAIJ,IADA,IAAIuC,EACG/D,EAAawB,EAAAmD,IAAgBpC,OAAQvC,IAG3C,GAAe,OAFf+D,EAAUvC,EAAAmD,IAAgB3E,KAEa,MAAhB+D,EAAOe,IAI7B,OAAOf,EAAPe,IASF,MAA4B,mBAAdtD,EAAMgD,KAAqBiB,EAAcjE,GAAS,IAChE,CAsCD,SAASmE,EAAwBnE,GAAjC,IAGWxB,EACJ+D,EAHN,GAA+B,OAA1BvC,EAAQA,EAAToD,KAAuD,MAApBpD,EAAAwD,IAA0B,CAEhE,IADAxD,EAAKsD,IAAQtD,EAAKwD,IAAYY,KAAO,KAC5B5F,EAAI,EAAGA,EAAIwB,EAAKmD,IAAWpC,OAAQvC,IAE3C,GAAa,OADT+D,EAAQvC,EAAKmD,IAAW3E,KACO,MAAd+D,EAAAe,IAAoB,CACxCtD,EAAAsD,IAAatD,EAAAwD,IAAiBY,KAAO7B,EAArCe,IACA,KACA,CAGF,OAAOa,EAAwBnE,EAC/B,CACD,CA4BM,SAASrB,EAAcqB,KAE1BA,EACAuD,MAAAvD,EAAAuD,KAAA,IACD9D,EAAc4E,KAAKrE,KAClBsE,EAAAC,OACFlF,IAAiBb,EAAQgG,sBAEzBnF,EAAeb,EAAQgG,oBACNxF,GAAOsF,EAEzB,CASD,SAASA,IAAT,IACKtE,EAMExB,EApGkB+D,EAMnBhE,EACEc,EANHL,EACHyF,EACA7F,EA+FD,IAHAa,EAAciF,KAAK9B,GAGX5C,EAAIP,EAAckF,SACrB3E,EAAUuD,MACT/E,EAAoBiB,EAAcsB,OA9FnCxC,OAAA,EACEc,OAAA,EALNoF,GADGzF,GADoBuD,EAqGNvC,GApGlB2D,KAAAL,KAEC1E,EAAY2D,EAFbqC,OAKKrG,EAAc,IACZc,EAAWkB,EAAO,CAAC,EAAGvB,IAC5B2E,IAAqB3E,EAAA2E,IAAkB,EAEvCkB,EACCjG,EACAI,EACAK,EACAkD,EAJGuC,SAAA,IAKHlG,EAAUmG,gBACU,MAApB/F,EAAKyE,IAAsB,CAACgB,GAAU,KACtClG,EACU,MAAVkG,EAAiBR,EAAcjF,GAASyF,EACxCzF,EAAAyE,KAEDuB,EAAWzG,EAAaS,GAEpBA,EAAAsE,KAAcmB,GACjBN,EAAwBnF,IA8EpBS,EAAcsB,OAASvC,GAI1BiB,EAAciF,KAAK9B,IAItB0B,EAAAC,IAAyB,CACzB,CC/MM,SAASU,EACfjF,EACAxB,EACA+D,EACAhE,EACAkB,EACAJ,EACAL,EACA4D,EACA6B,EACAS,GAVM,IAYF3E,EAAGiC,EAAGG,EAAU9D,EAAYiF,EAAQK,EAAexF,EAInD2F,EAAe/F,GAAkBA,EAAJ4E,KAAiC7C,EAE9D2E,EAAoBX,EAAYvD,OAGpC,IADAwB,EAAcY,IAAa,GACtB5C,EAAI,EAAGA,EAAI/B,EAAauC,OAAQR,IAoDpC,GAAkB,OA5CjB1B,EAAa0D,EAAAY,IAAyB5C,GAJxB,OAHf1B,EAAaL,EAAa+B,KAIJ,kBAAd1B,GACc,mBAAdA,EAEoC,KAMtB,iBAAdA,GACc,iBAAdA,GAEc,iBAAdA,EAEoCwB,EAC1C,KACAxB,EACA,KACA,KACAA,GAESsG,MAAMC,QAAQvG,GACmBwB,EAC1CwD,EACA,CAAEf,SAAUjE,GACZ,KACA,KACA,MAESA,EAAAwE,IAAoB,EAKahD,EAC1CxB,EAAWmE,KACXnE,EAAWoE,MACXpE,EAAWiB,IACXjB,EAAWqE,IAAMrE,EAAWqE,IAAM,KAClCrE,EALqD8E,KAQX9E,GAK5C,CAaA,GATAA,EAAUuE,GAAWb,EACrB1D,EAAAwE,IAAoBd,EAAcc,IAAU,EAS9B,QAHdV,EAAW2B,EAAY/D,KAIrBoC,GACA9D,EAAWiB,KAAO6C,EAAS7C,KAC3BjB,EAAWmE,OAASL,EAASK,KAE9BsB,EAAY/D,QAAA,OAIZ,IAAKiC,EAAI,EAAGA,EAAIyC,EAAmBzC,IAAK,CAIvC,IAHAG,EAAW2B,EAAY9B,KAKtB3D,EAAWiB,KAAO6C,EAAS7C,KAC3BjB,EAAWmE,OAASL,EAASK,KAC5B,CACDsB,EAAY9B,QAAA,EACZ,KACA,CACDG,EAAW,IACX,CAMFkC,EACC7E,EACAnB,EALD8D,EAAWA,GAAY/D,EAOtBa,EACAJ,EACAL,EACA4D,EACA6B,EACAS,GAGDpB,EAASjF,EAAHyE,KAEDd,EAAI3D,EAAWqE,MAAQP,EAASO,KAAOV,IACtC7D,IAAMA,EAAO,IACdgE,EAASO,KAAKvE,EAAK0F,KAAK1B,EAASO,IAAK,KAAMrE,GAChDF,EAAK0F,KAAK7B,EAAG3D,EAAU2E,KAAeM,EAAQjF,IAGjC,MAAViF,GACkB,MAAjBK,IACHA,EAAgBL,GAIU,mBAAnBjF,EAAWmE,MAClBnE,EAAUsE,MAAeR,EAF1BQ,IAICtE,EAAA0E,IAAsBkB,EAASY,EAC9BxG,EACA4F,EACAzE,GAGDyE,EAASa,EACRtF,EACAnB,EACA8D,EACA2B,EACAR,EACAW,GAIgC,mBAAvBlC,EAAeS,OAQzBT,EAAcgB,IAAYkB,IAG3BA,GACA9B,EAAAW,KAAiBmB,GACjBA,EAAOhC,YAAczC,IAIrByE,EAASR,EAActB,GAtGvB,CA6GF,IAHAJ,EAAce,IAAQa,EAGjB5D,EAAI0E,EAAmB1E,KACL,MAAlB+D,EAAY/D,KAEgB,mBAAvBgC,EAAeS,MACC,MAAvBsB,EAAY/D,GAAZ+C,KACAgB,EAAY/D,GAAZ+C,KAAuBf,EAAvBgB,MAKAhB,EAAcgB,IAAYgC,EAAWhH,GAAgBiH,aAGtDC,EAAQnB,EAAY/D,GAAI+D,EAAY/D,KAKtC,GAAI5B,EACH,IAAK4B,EAAI,EAAGA,EAAI5B,EAAKoC,OAAQR,IAC5BmF,EAAS/G,EAAK4B,GAAI5B,IAAO4B,GAAI5B,IAAO4B,GAGtC,CAED,SAAS8E,EAAgBrF,EAAYxB,EAAQ+D,GAI5C,IAJD,IAKMhE,EAHDkB,EAAIO,EAAHmD,IACD9D,EAAM,EACHI,GAAKJ,EAAMI,EAAEsB,OAAQ1B,KACvBd,EAAQkB,EAAEJ,MAMbd,EAAA6E,GAAgBpD,EAGfxB,EADwB,mBAAdD,EAAMyE,KACPqC,EAAgB9G,EAAOC,EAAQ+D,GAE/B+C,EAAW/C,EAAWhE,EAAOA,EAAOkB,EAAGlB,EAA7B+E,IAAyC9E,IAK/D,OAAOA,CACP,CAqBD,SAAS8G,EACRtF,EACAxB,EACA+D,EACAhE,EACAkB,EACAJ,GAND,IAQKL,EAuBG4D,EAAiB6B,EAtBxB,QAAI,IAAAjG,EAAA+E,IAIHvE,EAAUR,EAAH+E,IAMP/E,EAAA+E,SAAA,OAEA,GAAY,MAAZhB,GACA9C,GAAUJ,GACW,MAArBI,EAAOgD,WAEPzC,EAAO,GAAc,MAAVX,GAAkBA,EAAOoD,aAAezC,EAClDA,EAAU2F,YAAYlG,GACtBT,EAAU,SACJ,CAEN,IACK4D,EAASvD,EAAQoF,EAAI,GACxB7B,EAASA,EAAO4C,cAAgBf,EAAIlG,EAAYwC,OACjD0D,GAAK,EAEL,GAAI7B,GAAUnD,EACb,MAAMO,EAGRA,EAAU4F,aAAanG,EAAQJ,GAC/BL,EAAUK,CACV,CAYF,YAAO,IANHL,EACMA,EAEAS,EAAO+F,WAIjB,CAKD,SAASD,EAAWvF,GAApB,IAMWxB,EACJ+D,EAEChE,EARP,GAAkB,MAAdyB,EAAMgD,MAAsC,iBAAfhD,EAAMgD,KACtC,OAAOhD,EAAPsD,IAGD,GAAItD,EAAJmD,IACC,IAAS3E,EAAIwB,EAAAmD,IAAgBpC,OAAS,EAAGvC,GAAK,EAAGA,IAEhD,IADI+D,EAAQvC,EAAKmD,IAAW3E,MAEvBD,EAAUgH,EAAWhD,IAExB,OAAOhE,EAMX,OACA,KC/TD,SAASsH,EAAS7F,EAAOxB,EAAK+D,GACd,MAAX/D,EAAI,GACPwB,EAAM8F,YAAYtH,EAAc,MAAT+D,EAAgB,GAAKA,GAE5CvC,EAAMxB,GADa,MAAT+D,EACG,GACa,iBAATA,GAAqB2C,EAAmBa,KAAKvH,GACjD+D,EAEAA,EAAQ,IAEtB,UAUeyD,EAAYhG,EAAKxB,EAAM+D,EAAOhE,EAAUkB,GAAA,IACnDJ,EAEJW,EAAG,GAAa,UAATxB,EACN,GAAoB,iBAAT+D,EACVvC,EAAIiG,MAAMC,QAAU3D,MACd,CAKN,GAJuB,iBAAZhE,IACVyB,EAAIiG,MAAMC,QAAU3H,EAAW,IAG5BA,EACH,IAAKC,KAAQD,EACNgE,GAAS/D,KAAQ+D,GACtBsD,EAAS7F,EAAIiG,MAAOzH,EAAM,IAK7B,GAAI+D,EACH,IAAK/D,KAAQ+D,EACPhE,GAAYgE,EAAM/D,KAAUD,EAASC,IACzCqH,EAAS7F,EAAIiG,MAAOzH,EAAM+D,EAAM/D,GAInC,SAGmB,MAAZA,EAAK,IAA0B,MAAZA,EAAK,GAChCa,EAAab,KAAUA,EAAOA,EAAK2H,QAAQ,WAAY,KAGxB3H,EAA3BA,EAAK4H,gBAAiBpG,EAAYxB,EAAK4H,cAAcC,MAAM,GACnD7H,EAAK6H,MAAM,GAElBrG,EAADxB,IAAiBwB,EAAGxB,EAAc,CAAjB,GACrBwB,EAAGxB,EAAYA,EAAOa,GAAckD,EAEhCA,EACEhE,GAEJyB,EAAIsG,iBAAiB9H,EADLa,EAAakH,EAAoBC,EACbnH,GAIrCW,EAAIyG,oBAAoBjI,EADRa,EAAakH,EAAoBC,EACVnH,QAAA,GAErB,4BAATb,EAAoC,CAC9C,GAAIiB,EAIHjB,EAAOA,EAAK2H,QAAQ,cAAe,KAAKA,QAAQ,SAAU,aAEjD,UAAT3H,GACS,WAATA,GACS,SAATA,GACS,SAATA,GACS,SAATA,GAGS,aAATA,GACS,aAATA,GACAA,KAAQwB,EAER,IACCA,EAAIxB,GAAiB,MAAT+D,EAAgB,GAAKA,EAEjC,MAAMvC,CAEP,CADE,MAAOA,GACT,CASoB,mBAAVuC,IAES,MAATA,IAAA,IAAkBA,IAAyC,GAAtB/D,EAAK0F,QAAQ,KAG5DlE,EAAI0G,gBAAgBlI,GAFpBwB,EAAI2G,aAAanI,EAAM+D,GAIxB,CACD,CAOD,SAASiE,EAAWxG,GACnB,OAAO+D,KAAPvF,EAAuBwB,EAAEgD,MAAA,GAAcxE,EAAQoI,MAAQpI,EAAQoI,MAAM5G,GAAKA,EAC1E,CAED,SAASuG,EAAkBvG,GAC1B,OAAO+D,KAAAvF,EAAgBwB,EAAEgD,MAAA,GAAaxE,EAAQoI,MAAQpI,EAAQoI,MAAM5G,GAAKA,EACzE,CCpIe,SAAA6E,EACf7E,EACAuC,EACAhE,EACAkB,EACAJ,EACAL,EACA4D,EACA6B,EACA7F,GATe,IAWX0B,EAoBE4E,EAAG1C,EAAOG,EAAUtC,EAAUxB,EAAUoF,EACxCE,EAKAxF,EACA2F,EAsGOe,EA2BPwB,EACHvB,EASSC,EA6BNuB,EAlMLjB,EAAUtD,EAASS,KAIpB,QAAI,IAAAT,EAASmB,YAA2B,OAAO,KAGpB,MAAvBnF,EAAAkF,MACH7E,EAAcL,EAAdkF,IACAgB,EAASlC,EAAQe,IAAQ/E,EAAzB+E,IAEAf,EAAQkB,IAAc,KACtBzE,EAAoB,CAACyF,KAGjBnE,EAAM9B,EAAH6E,MAAmB/C,EAAIiC,GAE/B,IACCvC,EAAO,GAAsB,mBAAX6F,EAAuB,CA6DxC,GA3DI1B,EAAW5B,EAASU,MAKpBtE,GADJ2B,EAAMuF,EAAQkB,cACQtH,EAAca,EAADkD,KAC/Bc,EAAmBhE,EACpB3B,EACCA,EAASsE,MAAMzD,MACfc,EAFO8C,GAGR3D,EAGClB,EAAJiF,IAECS,GADAiB,EAAI3C,EAAAiB,IAAsBjF,EAAtBiF,KACuBJ,GAAyB8B,EAAzB8B,KAGvB,cAAenB,GAAWA,EAAQ1F,UAAUM,OAE/C8B,EAAAiB,IAAsB0B,EAAI,IAAIW,EAAQ1B,EAAUG,IAGhD/B,EAAQiB,IAAc0B,EAAI,IAAIpB,EAAUK,EAAUG,GAClDY,EAAExB,YAAcmC,EAChBX,EAAEzE,OAASwG,GAERtI,GAAUA,EAASuI,IAAIhC,GAE3BA,EAAEjC,MAAQkB,EACLe,EAAEiC,QAAOjC,EAAEiC,MAAQ,CAAV,GACdjC,EAAElB,QAAUM,EACZY,EAACJ,IAAkBrF,EACnB+C,EAAQ0C,EAAC3B,KAAA,EACT2B,EAAAzB,IAAqB,GACrByB,EAACkC,IAAmB,IAID,MAAhBlC,EAACmC,MACJnC,EAACmC,IAAcnC,EAAEiC,OAGsB,MAApCtB,EAAQyB,2BACPpC,EAACmC,KAAenC,EAAEiC,QACrBjC,EAACmC,IAAc9G,EAAO,CAAD,EAAK2E,EAC1BmC,MAED9G,EACC2E,EACAmC,IAAAxB,EAAQyB,yBAAyBnD,EAAUe,EAFtCmC,OAMP1E,EAAWuC,EAAEjC,MACb5C,EAAW6E,EAAEiC,MACbjC,EAAAvB,IAAWpB,EAGPC,EAEkC,MAApCqD,EAAQyB,0BACgB,MAAxBpC,EAAEqC,oBAEFrC,EAAEqC,qBAGwB,MAAvBrC,EAAEsC,mBACLtC,EAACzB,IAAkBY,KAAKa,EAAEsC,uBAErB,CASN,GAPqC,MAApC3B,EAAQyB,0BACRnD,IAAaxB,GACkB,MAA/BuC,EAAEuC,2BAEFvC,EAAEuC,0BAA0BtD,EAAUG,IAIpCY,EACD5B,KAA2B,MAA3B4B,EAAEwC,wBAAA,IACFxC,EAAEwC,sBACDvD,EACAe,EACAmC,IAAA/C,IAEF/B,EAAAoB,MAAuBpF,EARxBoF,IASE,CAoBD,IAlBIpB,EAAQoB,MAAepF,EAA3BoF,MAKCuB,EAAEjC,MAAQkB,EACVe,EAAEiC,MAAQjC,EACVmC,IAAAnC,EAAA3B,KAAA,GAID2B,EAAC5B,KAAA,EACDf,EAAQe,IAAQ/E,EAChB+E,IAAAf,EAAAY,IAAqB5E,EAArB4E,IACAZ,EAAQY,IAAWwE,SAAQ,SAAA3H,GACtBA,IAAOA,EAAKoD,GAAWb,EAC3B,IAEQ8C,EAAI,EAAGA,EAAIH,EAACkC,IAAiBrG,OAAQsE,IAC7CH,EAAAzB,IAAmBY,KAAKa,EAACkC,IAAiB/B,IAE3CH,EAAAkC,IAAoB,GAEhBlC,EAAAzB,IAAmB1C,QACtB6B,EAAYyB,KAAKa,GAGlB,MAAMlF,CACN,CAE4B,MAAzBkF,EAAE0C,qBACL1C,EAAE0C,oBAAoBzD,EAAUe,EAAcmC,IAAA/C,GAGnB,MAAxBY,EAAE2C,oBACL3C,EAACzB,IAAkBY,MAAK,WACvBa,EAAE2C,mBAAmBlF,EAAUtC,EAAUxB,EACzC,GAEF,CAQD,GANAqG,EAAElB,QAAUM,EACZY,EAAEjC,MAAQkB,EACVe,EAACN,IAAc5E,EAEX6G,EAAarI,EAAjB+F,IACCe,EAAQ,EACL,cAAeO,GAAWA,EAAQ1F,UAAUM,OAAQ,CAQvD,IAPAyE,EAAEiC,MAAQjC,EACVmC,IAAAnC,EAAA3B,KAAA,EAEIsD,GAAYA,EAAWtE,GAE3BjC,EAAM4E,EAAEzE,OAAOyE,EAAEjC,MAAOiC,EAAEiC,MAAOjC,EAAElB,SAE1BuB,EAAI,EAAGA,EAAIL,EAAAkC,IAAkBrG,OAAQwE,IAC7CL,EAACzB,IAAkBY,KAAKa,EAAAkC,IAAkB7B,IAE3CL,EAACkC,IAAmB,EACpB,MACA,GACClC,EAAA3B,KAAA,EACIsD,GAAYA,EAAWtE,GAE3BjC,EAAM4E,EAAEzE,OAAOyE,EAAEjC,MAAOiC,EAAEiC,MAAOjC,EAAElB,SAGnCkB,EAAEiC,MAAQjC,EACVmC,UAAQnC,EAAA3B,OAAc+B,EAAQ,IAIhCJ,EAAEiC,MAAQjC,EAAVmC,IAEyB,MAArBnC,EAAE4C,kBACLrI,EAAgBc,EAAOA,EAAO,CAAC,EAAGd,GAAgByF,EAAE4C,oBAGhDtF,GAAsC,MAA7B0C,EAAE6C,0BACflJ,EAAWqG,EAAE6C,wBAAwBpF,EAAUtC,IAK5CyG,EADI,MAAPxG,GAAeA,EAAI0C,OAASa,GAAuB,MAAXvD,EAAIR,IACLQ,EAAI2C,MAAMH,SAAWxC,EAE7D2E,EACCjF,EACAmF,MAAMC,QAAQ0B,GAAgBA,EAAe,CAACA,GAC9CvE,EACAhE,EACAkB,EACAJ,EACAL,EACA4D,EACA6B,EACA7F,GAGDsG,EAAEd,KAAO7B,EAGTe,IAAAf,EAAAkB,IAAsB,KAElByB,EAAAzB,IAAmB1C,QACtB6B,EAAYyB,KAAKa,GAGdjB,IACHiB,EAAC8B,IAAiB9B,EAAA9B,GAAyB,MAG5C8B,EAAC5B,KAAA,CACD,MACqB,MAArBtE,GACAuD,EAAAoB,MAAuBpF,EAFjBoF,KAINpB,EAAAY,IAAqB5E,EAArB4E,IACAZ,EAAQe,IAAQ/E,EAChB+E,KACAf,EAAQe,IAAQ0E,EACfzJ,EACA+E,IAAAf,EACAhE,EACAkB,EACAJ,EACAL,EACA4D,EACAhE,IAIG0B,EAAM9B,EAAQyJ,SAAS3H,EAAIiC,EAYhC,CAXC,MAAOvC,GACRuC,EAAAoB,IAAqB,MAEjB/E,GAAoC,MAArBI,KAClBuD,EAAAe,IAAgBmB,EAChBlC,EAAQkB,MAAgB7E,EACxBI,EAAkBA,EAAkBkF,QAAQO,IAAW,MAIxDjG,EAAA8E,IAAoBtD,EAAGuC,EAAUhE,EACjC,CACD,CAOM,SAASyG,EAAWhF,EAAauC,GACnC/D,EAAiBgF,KAAAhF,EAAAgF,IAAgBjB,EAAMvC,GAE3CA,EAAYkI,MAAK,SAAA3F,GAChB,IAECvC,EAAcuC,EAAdkB,IACAlB,EAACkB,IAAoB,GACrBzD,EAAYkI,MAAK,SAAAlI,GAEhBA,EAAGtB,KAAK6D,EACR,GAGD,CAFC,MAAOvC,GACRxB,EAAA8E,IAAoBtD,EAAGuC,EAAvBoB,IACA,CACD,GACD,CAgBD,SAASqE,EACRxJ,EACA+D,EACAhE,EACAkB,EACAJ,EACAL,EACA4D,EACA6B,GARD,IAoBSnE,EAsDH4E,EACA3E,EAjEDoC,EAAWpE,EAAS0E,MACpB5C,EAAWkC,EAASU,MACpBpE,EAAW0D,EAASS,KACpBa,EAAI,EAKR,GAFiB,QAAbhF,IAAoBQ,GAAA,GAEC,MAArBL,EACH,KAAO6E,EAAI7E,EAAkB+B,OAAQ8C,IAMpC,IALMvD,EAAQtB,EAAkB6E,KAO/B,iBAAkBvD,KAAYzB,IAC7BA,EAAWyB,EAAM6H,YAActJ,EAA8B,IAAnByB,EAAM8H,UAChD,CACD5J,EAAM8B,EACNtB,EAAkB6E,GAAK,KACvB,KACA,CAIH,GAAW,MAAPrF,EAAa,CAChB,GAAiB,OAAbK,EAEH,OAAOyC,SAAS+G,eAAehI,GAI/B7B,EADGa,EACGiC,SAASgH,gBACd,6BAEAzJ,GAGKyC,SAASiH,cAEd1J,EACAwB,EAASmI,IAAMnI,GAKjBrB,EAAoB,KAEpByF,GAAA,CACA,CAED,GAAiB,OAAb5F,EAEC8D,IAAatC,GAAcoE,GAAejG,EAAIiK,OAASpI,IAC1D7B,EAAIiK,KAAOpI,OAEN,CAWN,GATArB,EAAoBA,GAAqBgB,EAAMtB,KAAKF,EAAIkK,YAIpDxD,GAFJvC,EAAWpE,EAAS0E,OAASrE,GAEN+J,wBACnBpI,EAAUF,EAASsI,yBAIlBlE,EAAa,CAGjB,GAAyB,MAArBzF,EAEH,IADA2D,EAAW,CAAX,EACKkB,EAAI,EAAGA,EAAIrF,EAAIoK,WAAW7H,OAAQ8C,IACtClB,EAASnE,EAAIoK,WAAW/E,GAAG/E,MAAQN,EAAIoK,WAAW/E,GAAGrE,OAInDe,GAAW2E,KAGZ3E,IACE2E,GAAW3E,EAAOsI,QAAW3D,EAAlB2D,QACbtI,EAAAsI,SAAmBrK,EAAIyD,aAExBzD,EAAIyD,UAAa1B,GAAWA,EAAZsI,QAA+B,IAGjD,CAKD,GDtac,SAAU7I,EAAKxB,EAAU+D,EAAUhE,EAAOkB,GACzD,IAAIJ,EAEJ,IAAKA,KAAKkD,EACC,aAANlD,GAA0B,QAANA,GAAiBA,KAAKb,GAC7CwH,EAAYhG,EAAKX,EAAG,KAAMkD,EAASlD,GAAId,GAIzC,IAAKc,KAAKb,EAENiB,GAAiC,mBAAfjB,EAASa,IACvB,aAANA,GACM,QAANA,GACM,UAANA,GACM,YAANA,GACAkD,EAASlD,KAAOb,EAASa,IAEzB2G,EAAYhG,EAAKX,EAAGb,EAASa,GAAIkD,EAASlD,GAAId,EAGhD,CC8YCuI,CAAUtI,EAAK6B,EAAUsC,EAAUtD,EAAOoF,GAGtClE,EACHgC,EAAQY,IAAa,QAmBrB,GAjBAU,EAAItB,EAASU,MAAMH,SACnBmC,EACCzG,EACA2G,MAAMC,QAAQvB,GAAKA,EAAI,CAACA,GACxBtB,EACAhE,EACAkB,EACAJ,GAAsB,kBAAbR,EACTG,EACA4D,EACA5D,EACGA,EAAkB,GAClBT,EAAA4E,KAAsBc,EAAc1F,EAAU,GACjDkG,GAIwB,MAArBzF,EACH,IAAK6E,EAAI7E,EAAkB+B,OAAQ8C,KACN,MAAxB7E,EAAkB6E,IAAYrB,EAAWxD,EAAkB6E,IAM7DY,IAEH,UAAWpE,QAAA,KACVwD,EAAIxD,EAASb,SAKbqE,IAAMrF,EAAIgB,OACI,aAAbX,IAA4BgF,GAIf,WAAbhF,GAAyBgF,IAAMlB,EAASnD,QAE1CwG,EAAYxH,EAAK,QAASqF,EAAGlB,EAASnD,OAAA,GAGtC,YAAaa,QAAA,KACZwD,EAAIxD,EAASyI,UACdjF,IAAMrF,EAAIsK,SAEV9C,EAAYxH,EAAK,UAAWqF,EAAGlB,EAASmG,SAAA,GAG1C,CAED,OAAOtK,CACP,CAQe,SAAAkH,EAAS1F,EAAKuC,EAAOhE,GACpC,IACmB,mBAAPyB,EAAmBA,EAAIuC,GAC7BvC,EAAI+I,QAAUxG,CAGnB,CAFC,MAAOvC,GACRxB,EAAA8E,IAAoBtD,EAAGzB,EACvB,CACD,CAUM,SAASkH,EAAQzF,EAAOuC,EAAahE,GAArC,IACFkB,EAuBMJ,EAdV,GARIb,EAAQwK,SAASxK,EAAQwK,QAAQhJ,IAEhCP,EAAIO,EAAMkD,OACTzD,EAAEsJ,SAAWtJ,EAAEsJ,UAAY/I,EAAdsD,KACjBoC,EAASjG,EAAG,KAAM8C,IAIU,OAAzB9C,EAAIO,EAAHwD,KAA8B,CACnC,GAAI/D,EAAEwJ,qBACL,IACCxJ,EAAEwJ,sBAGF,CAFC,MAAOjJ,GACRxB,EAAO8E,IAAatD,EAAGuC,EACvB,CAGF9C,EAAE2E,KAAO3E,EAAAmF,IAAe,KACxB5E,EAAKwD,SAAA,CACL,CAED,GAAK/D,EAAIO,EAAHmD,IACL,IAAS9D,EAAI,EAAGA,EAAII,EAAEsB,OAAQ1B,IACzBI,EAAEJ,IACLoG,EACChG,EAAEJ,GACFkD,EACAhE,GAAoC,mBAAfyB,EAAMgD,MAM1BzE,GAA4B,MAAdyB,EAAKsD,KACvBd,EAAWxC,EAADsD,KAKXtD,EAAAoD,GAAgBpD,EAAKsD,IAAQtD,EAAAuD,SAAA,CAC7B,CAGD,SAAS0D,EAASjH,EAAOxB,EAAO+D,GAC/B,OAAY,KAAAmB,YAAY1D,EAAOuC,EAC/B,CCpiBM,SAAS2G,EAAO3G,EAAOhE,EAAWkB,GAAlC,IAMFJ,EAOAL,EAUA4D,EAtBApE,EAAe4E,IAAA5E,EAAA4E,GAAcb,EAAOhE,GAYpCS,GAPAK,EAAqC,mBAAhBI,GAQtB,KACCA,GAAeA,EAAA0D,KAA0B5E,EAAA4E,IAQzCP,EAAc,GAClBiC,EACCtG,EARDgE,IACGlD,GAAeI,GACjBlB,GAFO4E,IAGMR,EAAckB,EAAU,KAAM,CAACtB,IAS5CvD,GAAYJ,EACZA,OAAA,IACAL,EAAUwG,iBACT1F,GAAeI,EACb,CAACA,GACDT,EACA,KACAT,EAAU4K,WACVnJ,EAAMtB,KAAKH,EAAUmK,YACrB,KACH9F,GACCvD,GAAeI,EACbA,EACAT,EACAA,EACAsE,IAAA/E,EAAU4K,WACb9J,GAID2F,EAAWpC,EAAaL,EACxB,CAQe,SAAA6G,EAAQpJ,EAAOxB,GAC9B0K,EAAOlJ,EAAOxB,EAAW4K,EACzB,C,8KNhDYpJ,EOfPxB,ENRF+D,ECyKA9C,EAWAJ,EAEEL,EA0BA4D,EMnNOhE,EAAY,CAAlB,EACM0B,EAAY,GACZ4E,EAAqB,oERwBrBlF,EAAQM,EAAU+F,MOfzB7H,EAAU,CACf8E,IEHM,SAAqBtD,EAAOxB,EAAO+D,EAAUhE,GAInD,IAFA,IAAIkB,EAAWJ,EAAML,EAEbR,EAAQA,EAAhB4E,IACC,IAAK3D,EAAYjB,EAAHgF,OAAyB/D,EAAD2D,GACrC,IAcC,IAbA/D,EAAOI,EAAUiE,cAE4B,MAAjCrE,EAAKgK,2BAChB5J,EAAU6J,SAASjK,EAAKgK,yBAAyBrJ,IACjDhB,EAAUS,EAAH8D,KAG2B,MAA/B9D,EAAU8J,oBACb9J,EAAU8J,kBAAkBvJ,EAAOzB,GAAa,CAAhD,GACAS,EAAUS,EACV8D,KAGGvE,EACH,OAAQS,EAASuH,IAAiBvH,CAInC,CAFC,MAAOjB,GACRwB,EAAQxB,CACR,CAIH,MAAMwB,CACN,GRpCGuC,EAAU,ECuBduB,EAAU3D,UAAUmJ,SAAW,SAAStJ,EAAQxB,GAE/C,IAAI+D,EAEHA,EADsB,MAAnBwB,KAAAsD,KAA2BtD,KAAAsD,MAAoBtD,KAAKoD,MACnDpD,KACJsD,IACItD,KAAkBsD,IAAA9G,EAAO,CAAC,EAAGwD,KAAKoD,OAGlB,mBAAVnH,IAGVA,EAASA,EAAOO,EAAO,CAAC,EAAGgC,GAAIwB,KAAKd,QAGjCjD,GACHO,EAAOgC,EAAGvC,GAIG,MAAVA,GAEA+D,KAAaJ,MACZnF,GACHuF,KAAAqD,IAAqB/C,KAAK7F,GAE3BG,EAAcoF,MAEf,EAQDD,EAAU3D,UAAUqJ,YAAc,SAASxJ,GACtC+D,KAAAJ,MAIHI,KAAAT,KAAA,EACItD,GAAU+D,KAAAN,IAAsBY,KAAKrE,GACzCrB,EAAcoF,MAEf,EAYDD,EAAU3D,UAAUM,OAASoD,EAyFzBpE,EAAgB,GAadT,EACa,mBAAXyK,QACJA,QAAQtJ,UAAUuJ,KAAK3J,KAAK0J,QAAQE,WACpCC,WAuBEhH,EAAY,SAAC5C,EAAGxB,GAAA,OAAMwB,EAAA2D,IAAAN,IAAkB7E,EAA5BmF,IAAAN,GAAA,EAuBlBiB,EAAOC,IAAkB,C,oCQ/GzB,SAAS1F,EAAaY,EAAO8C,GACxBvC,KAAJyD,KACCzD,KAAAyD,IAAcpE,EAAkBI,EAAOT,IAAeuD,GAEvDvD,GAAc,EAOd,IAAMT,EACLc,EAAAwK,MACCxK,EAAgBwK,IAAW,CAC3BzG,GAAO,GACPK,IAAiB,KAMnB,OAHIhE,GAASlB,EAAA6E,GAAYrC,QACxBxC,EAAA6E,GAAYiB,KAAK,CAAEyF,IAAelL,KAE5BL,EAAK6E,GAAO3D,EACnB,CAKe,SAAAc,EAASP,GAExB,OADAhB,GAAc,EAUR,SAAoBgB,EAASuC,EAAchE,GAEjD,IAAMS,EAAYH,EAAaY,IAAgB,GAE/C,GADAT,EAAUS,EAAWO,GAChBhB,EAALwE,MACCxE,EAASoE,GAAU,CACjB7E,EAAiDA,EAAKgE,GAA/C2G,OAAA,EAA0B3G,GAElC,SAAAvC,GACC,IAAMP,EAAeT,EAAA+K,IAClB/K,EAAA+K,IAAqB,GACrB/K,EAAAoE,GAAiB,GACd/D,EAAYL,EAAUS,EAASA,EAAcO,GAE/CP,IAAiBJ,IACpBL,EAAA+K,IAAuB,CAAC1K,EAAWL,EAAAoE,GAAiB,IACpDpE,EAAAwE,IAAqB8F,SAAS,CAAC,GAEhC,GAGFtK,EAAAwE,IAAuBnE,GAElBA,EAAiBkD,GAAkB,KAgC9BK,EAAT,SAAyB5C,EAAGP,EAAGJ,GAC9B,IAAKL,EAADwE,IAAAqG,IAA+B,OAAO,EAE1C,IAAMtH,EAAavD,EAAAwE,IAAAqG,IAAAzG,GAAmC4G,QACrD,SAAAhK,GAAA,OAAKA,EADawD,GAAA,IAMnB,GAHsBjB,EAAW0H,OAAM,SAAAjK,GAAC,OAAKA,EAAL+J,GAAA,IAIvC,OAAOnL,GAAUA,EAAQF,KAAKqF,KAAM/D,EAAGP,EAAGJ,GAM3C,IAAId,GAAA,EAUJ,OATAgE,EAAWoF,SAAQ,SAAA3H,GAClB,GAAIA,EAAJ+J,IAAyB,CACxB,IAAMtK,EAAeO,EAAQoD,GAAQ,GACrCpD,EAAAoD,GAAkBpD,EAAlB+J,IACA/J,EAAQ+J,SAAA,EACJtK,IAAiBO,EAAAoD,GAAgB,KAAI7E,GAAA,EACzC,CACD,OAEMA,GAAgBS,EAAAwE,IAAqBP,QAAUjD,MACnDpB,GACCA,EAAQF,KAAKqF,KAAM/D,EAAGP,EAAGJ,GAG7B,EA9DDA,EAAiBkD,GAAA,EACjB,IAAI3D,EAAUS,EAAiBqI,sBACzBjD,EAAUpF,EAAiBuI,oBAKjCvI,EAAiBuI,oBAAsB,SAAS5H,EAAGP,EAAGJ,GACrD,GAAI0E,KAAaT,IAAA,CAChB,IAAIf,EAAM3D,EAEVA,OAAA,EACAgE,EAAgB5C,EAAGP,EAAGJ,GACtBT,EAAU2D,CACV,CAEGkC,GAASA,EAAQ/F,KAAKqF,KAAM/D,EAAGP,EAAGJ,EACtC,EA+CDA,EAAiBqI,sBAAwB9E,CACzC,CAGF,OAAO5D,EAAA+K,KAAwB/K,EAAxBoE,EACP,CAtGO9C,CAAW4I,EAAgBlJ,EAClC,CA2Ge,SAAAK,EAAUkC,EAAUhE,GAEnC,IAAMS,EAAQH,EAAaY,IAAgB,IACtCO,KAADqH,KAAyBd,EAAYvH,EAAD6K,IAActL,KACrDS,EAAKoE,GAAUb,EACfvD,EAAMT,EAAeA,EAErBc,EAAAwK,IAAApG,IAAyCY,KAAKrF,GAE/C,CAiBM,SAAS6E,EAAO7D,GAEtB,OADAhB,GAAc,EACPkL,GAAQ,iBAAO,CAAEnB,QAAS/I,EAAlB,GAAmC,GAClD,CA2Be,SAAAkK,EAAQlK,EAASX,GAEhC,IAAMkD,EAAQ1D,EAAaY,IAAgB,GAC3C,OAAI8G,EAAYhE,EAAasH,IAAAxK,IAC5BkD,EAAAuH,IAAsB9J,IACtBuC,EAAMhE,EAAec,EACrBkD,EAAAkB,IAAiBzD,EACVuC,EAAPuH,KAGMvH,EAAPa,EACA,CAqFD,SAASa,IAER,IADA,IAAIxE,EACIA,EAAYmD,GAAkB+B,SACrC,GAAKlF,EAADmF,KAA0BnF,EAAAoK,IAC9B,IACCpK,EAASoK,IAAyBpG,IAAAkE,QAAQ7D,GAC1CrE,EAAAoK,IAAApG,IAAkCkE,QAAQrD,GAC1C7E,EAAAoK,IAAApG,IAAoC,EAIpC,CAHC,MAAOpE,GACRI,EAAAoK,IAAoCpG,IAAA,GACpCzD,KAAAsD,IAAoBjE,EAAGI,EAAvBkE,IACA,CAEF,CAcD,SAAS6C,EAAexG,GACvB,IAOIP,EAPEJ,EAAO,WACZ8K,aAAa5H,GACT4B,IAASiG,qBAAqB3K,GAClCmK,WAAW5J,EACX,EACKuC,EAAUqH,WAAWvK,EApaR,KAuaf8E,KACH1E,EAAM4K,sBAAsBhL,GAE7B,CAmBD,SAASyE,EAAc9D,GAGtB,IAAMP,EAAOJ,EACTkD,EAAUvC,EAAAwD,IACQ,mBAAXjB,IACVvC,EAAIwD,SAAA,EACJjB,KAGDlD,EAAmBI,CACnB,CAMD,SAAS6E,EAAatE,GAGrB,IAAMP,EAAOJ,EACbW,EAAAwD,IAAgBxD,EAAAoD,KAChB/D,EAAmBI,CACnB,CAMD,SAAS8G,EAAYvG,EAASP,GAC7B,OACEO,GACDA,EAAQe,SAAWtB,EAAQsB,QAC3BtB,EAAQyI,MAAK,SAACzI,EAAKJ,GAAN,OAAgBI,IAAQO,EAAQX,EAAhC,GAEd,CAED,SAAS6J,EAAelJ,EAAKP,GAC5B,MAAmB,mBAALA,EAAkBA,EAAEO,GAAOP,CACzC,CC7fD,SAAAlB,IACC,MAAU,IAAA+L,MAAM,iBAChB,CAsCD,SAAA7K,IACC,GAAIa,GAAa,EAChBA,SADD,CAQA,IAHA,IAAA/B,EACIkB,GAAA,OAEG,IAAAJ,IAA6B,CACnC,IAAUkB,EAAuBlB,GAKjC,IAJAA,QAAA,EAEAW,UAEO,IAAAO,GAAsB,CAC5B,IAAMvB,EAA2BuB,EAAOvB,EAIxC,GAHAuB,EAAOvB,OAAA,EACPuB,EAAOqC,IAAU,IAlDH,EAoDRrC,EAAOqC,IAAsB/D,EAAiB0B,GACnD,IACCA,EAAO3B,GAMP,CALC,MAAO2B,GACHd,IACJlB,EAAQgC,EACRd,GAAA,EAED,CAEFc,EAASvB,CACT,CACD,CAID,GAHAgB,GAAiB,EACjBM,KAEIb,EACH,MACAlB,CAlCA,CAmCD,CA0BD,SAAAiE,EAAuBjE,GACtB,QAAI,IAAAS,GAAJ,CAIA,IAAIS,EAAOlB,EAAOyB,EAClB,QAAI,IAAAP,GAAsBA,EAAKA,IAAYT,GAmC1C,OAtBAS,EAAO,CACNlB,EAAU,EACVkH,EAASlH,EACT8B,EAAarB,GAAYsB,EACzBN,OAAA,EACAP,EAAST,GACTyF,OAAA,EACAQ,OAAA,EACA5F,EAAeI,QAGZ,IAAAT,GAAYsB,IACftB,GAAYsB,EAASN,EAAcP,GAEpCT,GAAYsB,EAAWb,EACvBlB,EAAOyB,EAAQP,EAjIA,GAqIXT,GAAY4D,GACfrE,EAAOkH,EAAWhG,GAEZA,EACG,IAAmB,IAAnBA,EAAKlB,EAiCf,OA/BAkB,EAAKlB,EAAW,OAeZ,IAAAkB,EAAKO,IACRP,EAAKO,EAAYK,EAAcZ,EAAKY,OAEhC,IAAAZ,EAAKY,IACRZ,EAAKY,EAAYL,EAAcP,EAAKO,GAGrCP,EAAKY,EAAcrB,GAAYsB,EAC/Bb,EAAKO,OAAA,EAELhB,GAAYsB,EAAUN,EAAcP,EACpCT,GAAYsB,EAAWb,GAMxBA,CAzEA,CA2ED,CA2CD,SAAAgF,EAA8BlG,GAC7BwF,KAAKvB,EAASjE,EACdwF,KAAKxF,EAAW,EAChBwF,KAAK/D,OAAA,EACL+D,KAAKtE,OAAA,CACL,CA+FD,SAAA8C,EAAmBhE,GAClB,OAAW,IAAAkG,EAAOlG,EAClB,CAED,SAASM,EAAiBN,GAIzB,IACC,IAAQkB,EAAGlB,EAAO+B,OAAA,IAClBb,EACAA,EAAOA,EAAKO,EAKZ,GACCP,EAAKgG,EAAQlH,IAAakB,EAAKlB,IAC9BkB,EAAKgG,EAAQlF,KACdd,EAAKgG,EAAQlH,IAAakB,EAAKlB,EAE/B,OAAO,EAKT,OAAO,CACP,CAED,SAASK,EAAeL,GAavB,IACC,IAAQkB,EAAGlB,EAAO+B,OAAA,IAClBb,EACAA,EAAOA,EAAKO,EACX,CACD,IAAkBO,EAAGd,EAAKgG,EAAQzF,EAOlC,QANI,IAAAO,IACHd,EAAKJ,EAAgBkB,GAEtBd,EAAKgG,EAAQzF,EAAQP,EACrBA,EAAKlB,GAAY,OAEb,IAAAkB,EAAKO,EAA2B,CACnCzB,EAAO+B,EAAWb,EAClB,KACA,CACD,CACD,CAED,SAAAyF,EAAwB3G,GASvB,IARA,IAAQkB,EAAGlB,EAAO+B,EACdC,OAAA,OAOG,IAAAd,GAAoB,CAC1B,IAAUT,EAAGS,EAAKY,GAUK,IAAnBZ,EAAKlB,GACRkB,EAAKgG,EAAQ8E,EAAa9K,QAEtB,IAAAT,IACHA,EAAKgB,EAAcP,EAAKO,QAErB,IAAAP,EAAKO,IACRP,EAAKO,EAAYK,EAAcrB,IAahCuB,EAAOd,EAGRA,EAAKgG,EAAQzF,EAAQP,EAAKJ,OACtB,IAAAI,EAAKJ,IACRI,EAAKJ,OAAA,GAGNI,EAAOT,CACP,CAEDT,EAAO+B,EAAWC,CAClB,CAcD,SAAA/B,EAAkCD,GACjCkG,EAAO/F,KAAKqF,UAAM,GAElBA,KAAKkB,EAAW1G,EAChBwF,KAAKzD,OAAA,EACLyD,KAAKI,EAAiBvB,GAAgB,EACtCmB,KAAKnB,EApcW,CAqchB,CA4ID,SAAS0B,EAAY/F,GACpB,OAAO,IAAAC,EAAaD,EACpB,CAED,SAAAoE,EAAuBpE,GACtB,IAAagC,EAAGhC,EAAOgE,EAGvB,GAFAhE,EAAOgE,OAAA,EAEgB,mBAAnBhC,EAA+B,CA3jBnCD,KA+jBC,IAAMjB,EAAcL,GACpBA,QAAA,EACA,IACCuB,GASA,CARC,MAAOd,GAIR,MAHAlB,EAAOqE,IAAU,EACjBrE,EAAOqE,GAlmBO,EAmmBdiB,EAActF,GACRkB,CACN,CAPD,QAQCT,GAAcK,EACdI,GACA,CACD,CACD,CAED,SAASoE,EAActF,GACtB,IACC,IAAQkB,EAAGlB,EAAO+B,OAAA,IAClBb,EACAA,EAAOA,EAAKO,EAEZP,EAAKgG,EAAQ8E,EAAa9K,GAE3BlB,EAAO0G,OAAA,EACP1G,EAAO+B,OAAA,EAEPqC,EAAcpE,EACd,CAED,SAAA4F,EAAiC5F,GAChC,GAAIS,KAAgB+E,KACnB,MAAU,IAAAuG,MAAM,uBAEjBpF,EAAenB,MACf/E,GAAcT,EAEdwF,KAAKnB,IAAU,EAjoBC,EAkoBZmB,KAAKnB,GACRiB,EAAcE,MAEftE,GACA,CAiBD,SAAAwE,EAA8B1F,GAC7BwF,KAAKkB,EAAW1G,EAChBwF,KAAKxB,OAAA,EACLwB,KAAKzD,OAAA,EACLyD,KAAK/E,OAAA,EACL+E,KAAKnB,EA1pBW,EA2pBhB,CA4CD,SAAAvC,EAAgB9B,GACf,IAAYkB,EAAG,IAAIwE,EAAO1F,GAC1B,IACCkB,EAAOb,GAIP,CAHC,MAAOL,GAER,MADAkB,EAAOZ,IAEPN,CAAA,CAGD,OAAOkB,EAAOZ,EAASkB,KAAKN,EAC5B,CCjsBD,SAASa,EAA6BN,EAAazB,GAElDc,KAAQW,GAAYzB,EAAOwB,KAAK,KAAMV,KAAQW,IAAc,WAAxC,EACpB,CAKD,SAAAxB,EAA2BwB,GAEtBwC,IAAcA,KAElBA,GAAexC,GAAWA,EAAQyF,GAClC,CAwBD,SAAA5G,EAAAmB,GAAA,IAAAX,EAAA,KAAkEI,EAAAO,EAAxByI,KAKtB7F,EAwQJ,SAAa5C,GAC5B,OAAczB,GAAC,kBAAYgE,EAAIvC,EAAhB,GAAwB,GACvC,CA1QsBwK,CAAU/K,GAChCmD,EAAcpD,MAAQC,EAEtB,IAAOT,EAAGT,GAAQ,WAGjB,IADA,IAAKyB,EAAGX,EAAKsE,IACL3D,EAAIA,EAAEoD,OACTpD,EAAEwD,IAAK,CACVxD,EAAEwD,IAAIiH,MArDY,EAsDlB,KACA,CAQF,OAJApL,EAAKqL,KAAU9L,EAAY,WACzBS,EAAK+E,KAAcqE,KAAOzJ,EAAE2L,MAC7B,EAEMlG,GAAS,WACf,IAAAzE,EAAW4C,EAAcpD,MACZA,MACb,OAAa,IAANQ,EAAU,GAAI,IAAAA,EAAa,GAAKA,GAAK,EAC5C,GACD,GAAE,IAEH,OAAQhB,EAACQ,KACT,CAgHD,SAASa,EACRL,EACAX,EACAd,EACAkB,GAEA,IAAmBmD,EAClBvD,KAAAW,QAAA,IAIAA,EAAI+E,gBAEC/F,EAAeuD,EAAOhE,GAC5B,MAAO,CACNS,EAAS,SAACgB,EAAmBX,GAC5BL,EAAaQ,MAAQQ,EACrBP,EAAQJ,CACR,EACDR,EAAUqG,GAAO,WAChB,IAAW3G,EAAGS,EAAaQ,MAAMA,MAE7BC,EAAMJ,KAAUd,IACpBkB,EAAMJ,GAAQd,EACVqE,EAEH5C,EAAIX,GAAQd,EACFA,EACVyB,EAAI2G,aAAatH,EAAMd,GAEvByB,EAAI0G,gBAAgBrH,GAErB,IAEF,C,qjJCzND,SAASuL,EAAUC,GAClB,IACIC,EADAhM,EAAO+L,EAAQ,IAMnB,GAHsB,oBAAXE,SACVD,EAAKxJ,SAAS0J,OAAOC,MAAM,OAEvBH,EACJ,MAAO,GAER,IAAK,IAAIvM,EAAI,EAAGA,EAAIuM,EAAG/J,OAAQxC,IAAK,CAEnC,IADA,IAAIK,EAAIkM,EAAGvM,GACW,KAAfK,EAAEsM,OAAO,IACftM,EAAIA,EAAEuM,UAAU,GAEjB,GAAuB,GAAnBvM,EAAEsF,QAAQpF,GACb,OAAOF,EAAEuM,UAAUrM,EAAKiC,OAAQnC,EAAEmC,OAEpC,CACA,MAAO,EACR,C,WHzCItB,EAGAJ,EAGAkD,EAiBAhE,E,aAdAS,GAAc,EAGd4D,GAAoB,GAEpBhE,GAAQ,GAER6F,GAAgBzE,KAApBqD,IACI6B,GAAkBlF,KAAtBuE,IACI/B,GAAexC,KAAQiI,OACvBzJ,GAAYwB,KAAhBwD,IACI7E,GAAmBqB,KAAQgJ,QAK/BhJ,KAAOqD,IAAS,SAAArD,GACfX,EAAmB,KACfoF,IAAeA,GAAczE,EACjC,EAEDA,KAAAuE,IAAkB,SAAAvE,GACbkF,IAAiBA,GAAgBlF,GAGrCP,EAAe,EAEf,IAAMlB,GAHNc,EAAmBW,EAAnBwD,KAGWqG,IACPtL,IACCgE,IAAsBlD,GACzBd,EAAAkF,IAAwB,GACxBpE,EAAAoE,IAAoC,GACpClF,EAAA6E,GAAYuE,SAAQ,SAAA3H,GACfA,EAAJ+J,MACC/J,EAAAoD,GAAkBpD,EAAlB+J,KAED/J,EAAA8J,IAAyBlL,GACzBoB,EAAA+J,IAAsB/J,EAASzB,OAAA,CAC/B,MAEDA,EAAKkF,IAAiBkE,QAAQ7D,GAC9BvF,EAAAkF,IAAsBkE,QAAQrD,GAC9B/F,EAAAkF,IAAwB,KAG1BlB,EAAoBlD,CACpB,EAEDW,KAAQiI,OAAS,SAAAxI,GACZ+C,IAAcA,GAAa/C,GAE/B,IAAMT,EAAIS,EAAV+D,IACIxE,GAAKA,EAAJ6K,MACA7K,EAAC6K,IAAyBpG,IAAA1C,SA4YR,IA5Y2B6B,GAAkByB,KAAKrF,IA4Y7CT,IAAYyB,KAAQqK,yBAC/C9L,EAAUyB,KAAQqK,wBACN7D,GAAgBvC,IA7Y5BjF,EAAC6K,IAAezG,GAAAuE,SAAQ,SAAA3H,GACnBA,EAASzB,IACZyB,EAAA6J,IAAiB7J,EAASzB,GAEvByB,EAAA8J,MAA2BlL,KAC9BoB,EAAQoD,GAAUpD,EAClB8J,KACD9J,EAASzB,OAAA,EACTyB,EAAA8J,IAAyBlL,EACzB,KAEF2D,EAAoBlD,EAAmB,IACvC,EAEDW,KAAOwD,IAAW,SAAC/D,EAAOJ,GACzBA,EAAY6I,MAAK,SAAAzI,GAChB,IACCA,EAASgE,IAAkBkE,QAAQ7D,GACnCrE,EAAAgE,IAA6BhE,EAASgE,IAAkBuG,QAAO,SAAAhK,GAC9D,OAAAA,EAAAoD,IAAYkB,EAAatE,EADuC,GASjE,CANC,MAAOuC,GACRlD,EAAY6I,MAAK,SAAAlI,GACZA,EAAJyD,MAAwBzD,EAACyD,IAAoB,GAC7C,IACDpE,EAAc,GACdW,KAAOsD,IAAaf,EAAG9C,EACvBkE,IAAA,CACD,IAEGnF,IAAWA,GAAUiB,EAAOJ,EAChC,EAEDW,KAAQgJ,QAAU,SAAAvJ,GACbd,IAAkBA,GAAiBc,GAEvC,IAEKJ,EAFCkD,EAAI9C,EAAH+D,IACHjB,GAAKA,EAATsH,MAECtH,EAACsH,IAAAzG,GAAeuE,SAAQ,SAAA3H,GACvB,IACC8D,EAAc9D,EAGd,CAFC,MAAOA,GACRX,EAAaW,CACb,CACD,IACDuC,EAAAsH,SAAA,EACIxK,GAAYW,KAAOsD,IAAajE,EAAYkD,EAChDoB,KACD,EAwTD,IE3YInB,GF2YA2B,GAA0C,mBAAzBkG,sBC7UjBrL,QAAA,EAGaK,QAAA,EACbiB,GAAa,EACCN,GAAG,EAIjB4C,GAAgB,EAkIpB6B,EAAOtE,UAAUI,EAAW,WAC3B,OAAO,CACP,EAEDkE,EAAOtE,UAAUsF,EAAa,SAAUlH,GACnCwF,KAAKtE,IAAalB,QAAA,IAAQA,EAAKkG,IAClClG,EAAK0G,EAAclB,KAAKtE,OACpB,IAAAsE,KAAKtE,IACRsE,KAAKtE,EAASgF,EAAclG,GAE7BwF,KAAKtE,EAAWlB,EAEjB,EAEDkG,EAAOtE,UAAUoK,EAAe,SAAUhM,GAEzC,QAAI,IAAAwF,KAAKtE,EAAwB,CAChC,IAAMA,EAAOlB,EAAKkG,EACRlE,EAAGhC,EAAK0G,OACd,IAAAxF,IACHA,EAAKwF,EAAc1E,EACnBhC,EAAKkG,OAAA,QAEF,IAAAlE,IACHA,EAAKkE,EAAchF,EACnBlB,EAAK0G,OAAA,GAEF1G,IAASwF,KAAKtE,IACjBsE,KAAKtE,EAAWc,EAEjB,CACD,EAEDkE,EAAOtE,UAAUiL,UAAY,SAAU7M,GACtC,IAAYkB,EAAGsE,KACf,OAAO1D,GAAO,WACb,IAAWE,EAAGd,EAAOD,MACfR,EApQS,GAoQF+E,KAAKnB,EAClBmB,KAAKnB,IAAU,GACf,IACCrE,EAAGgC,EAGH,CAJD,QAGCwD,KAAKnB,GAAU5D,CACf,CACD,GACD,EAEDyF,EAAOtE,UAAUkL,QAAU,WAC1B,OAAOtH,KAAKvE,KACZ,EAEDiF,EAAOtE,UAAUmL,SAAW,WAC3B,OAAY,KAAA9L,MAAQ,EACpB,EAEDiF,EAAOtE,UAAUwK,KAAO,WACvB,OAAO5G,KAAKvB,CACZ,EAEDvD,OAAOC,eAAeuF,EAAOtE,UAAW,QAAS,CAChDf,IADgD,WAE/C,IAAUb,EAAGiE,EAAcuB,MAI3B,YAHI,IAAAxF,IACHA,EAAKA,EAAWwF,KAAKxF,GAEfwF,KAAKvB,CACZ,EACD+I,IAAI,SAAAhL,GACH,GAAIA,IAAUwD,KAAKvB,EAAQ,CACtBxC,GAAiB,KACpBzB,IAGDwF,KAAKvB,EAASjC,EACdwD,KAAKxF,IACLqE,KA/QFtC,KAkRE,IACC,IACC,IAAQtB,EAAG+E,KAAKtE,OAAA,IAChBT,EACAA,EAAOA,EAAKiG,EAEZjG,EAAKS,EAAQuI,GAId,CAVD,QASCvI,GACA,CACD,CACD,KA2IFjB,EAAS2B,UAAY,IAArBsE,GAEmBlE,EAAW,WAG7B,GAFAwD,KAAKnB,IAAU,EA5cA,EA8cXmB,KAAKnB,EACR,OAAO,EAMR,GAhdgB,KAgdX,GAAAmB,KAAKnB,GACT,OAAO,EAIR,GAFAmB,KAAKnB,IAAU,EAEXmB,KAAKI,IAAmBvB,GAC3B,OAAO,EAOR,GALAmB,KAAKI,EAAiBvB,GAItBmB,KAAKnB,GAjeU,EAkeXmB,KAAKxF,EAAW,IAAMM,EAAiBkF,MAE1C,OADAA,KAAKnB,IAAU,GACR,EAGR,IAAMrE,EAAcS,GACpB,IACCJ,EAAemF,MACf/E,GAAc+E,KACd,IAAMtE,EAAQsE,KAAKkB,KAveH,GAyeflB,KAAKnB,GACLmB,KAAKvB,IAAW/C,GACE,IAAlBsE,KAAKxF,KAELwF,KAAKvB,EAAS/C,EACdsE,KAAKnB,IAAU,GACfmB,KAAKxF,IAMN,CAJC,MAAOA,GACRwF,KAAKvB,EAASjE,EACdwF,KAAKnB,GAnfW,GAofhBmB,KAAKxF,GACL,CAID,OAHAS,GAAcT,EACd2G,EAAenB,MACfA,KAAKnB,IAAU,GACR,CACP,EAEDpE,EAAS2B,UAAUsF,EAAa,SAAUlH,GACzC,QAAI,IAAAwF,KAAKtE,EAAwB,CAChCsE,KAAKnB,GAAU,GAIf,IACC,IAAInD,EAAOsE,KAAKzD,OAAA,IAChBb,EACAA,EAAOA,EAAKO,EAEZP,EAAKgG,EAAQA,EAAWhG,EAEzB,CACDgF,EAAOtE,UAAUsF,EAAW/G,KAAKqF,KAAMxF,EACvC,EAEDC,EAAS2B,UAAUoK,EAAe,SAAUhM,GAE3C,QAAI,IAAAwF,KAAKtE,IACRgF,EAAOtE,UAAUoK,EAAa7L,KAAKqF,KAAMxF,QAIrC,IAAAwF,KAAKtE,GAAwB,CAChCsE,KAAKnB,IAAU,GAEf,IACC,IAAInD,EAAOsE,KAAKzD,OAAA,IAChBb,EACAA,EAAOA,EAAKO,EAEZP,EAAKgG,EAAQ8E,EAAa9K,EAE3B,CAEF,EAEDjB,EAAS2B,UAAU6H,EAAU,WAC5B,KAtiBgB,EAsiBVjE,KAAKnB,GAAoB,CAC9BmB,KAAKnB,GAAU,EAEf,IACC,IAAQrE,EAAGwF,KAAKtE,OAAA,IAChBlB,EACAA,EAAOA,EAAK0G,EAEZ1G,EAAKkB,EAAQuI,GAEd,CACD,EAEDxJ,EAAS2B,UAAUwK,KAAO,WAIzB,GAHK5G,KAAKxD,KACThC,IAljBgB,GAojBbwF,KAAKnB,EACR,MAAW,KAAAJ,EAEZ,OAAOuB,KAAKvB,CACZ,EAEDvD,OAAOC,eAAeV,EAAS2B,UAAW,QAAS,CAClDf,IADkD,WA9jBnC,EAgkBV2E,KAAKnB,GACRrE,IAED,IAAUkB,EAAG+C,EAAcuB,MAK3B,GAJAA,KAAKxD,SACD,IAAAd,IACHA,EAAKlB,EAAWwF,KAAKxF,GAlkBN,GAokBZwF,KAAKnB,EACR,MAAMmB,KAAKvB,EAEZ,OAAOuB,KAAKvB,CACZ,IAsFFyB,EAAO9D,UAAUvB,EAAY,WAC5B,IAAML,EAASwF,KAAK0B,IACpB,IAjqBgB,EAkqBT1B,KAAKnB,QAAA,IAAsBmB,KAAKkB,IACrClB,KAAKxB,EAAWwB,KAAKkB,IAItB,CAND,QAKC1G,GACA,CACD,EAED0F,EAAO9D,UAAUsF,EAAS,WA7qBV,EA8qBX1B,KAAKnB,GACRrE,IAEDwF,KAAKnB,GAjrBU,EAkrBfmB,KAAKnB,IAAU,EACfD,EAAcoB,MACdnF,EAAemF,MAppBfzD,KAupBA,IAAiBb,EAAGT,GAEpB,OADAA,GAAc+E,KACPI,EAAUpE,KAAKgE,KAAMtE,EAC5B,EAEDwE,EAAO9D,UAAU6H,EAAU,WA3rBV,EA4rBVjE,KAAKnB,IACVmB,KAAKnB,GA7rBU,EA8rBfmB,KAAK/E,EAAqBK,GAC1BA,GAAgB0E,KAEjB,EAEDE,EAAO9D,UAAUtB,EAAW,WAC3BkF,KAAKnB,GAlsBW,EAHD,EAusBTmB,KAAKnB,GACViB,EAAcE,KAEf,EC/mBDlF,EAAK2M,YAAc,MAEnBvM,OAAOwM,iBAAiBzM,EAAOmB,UAAW,CACzCuD,YAAa,CAAEgI,cAAA,EAAoBlM,WAAA,GACnCwD,KAAM,CAAE0I,cAAA,EAAoBlM,MAAOX,GACnCoE,MAAO,CACNyI,cAAA,EACAtM,IAFM,WAGL,MAAO,CAAEqJ,KAAM1E,KACf,GAKFV,IAAK,CAAEqI,cAAA,EAAoBlM,MAAO,KAInCc,EAAA,OAAwB,SAACN,EAAKX,GAC7B,GAA0B,iBAAfA,EAAM2D,KAAmB,CACnC,IAAAzE,EAESkB,EAAGJ,EAAM4D,MAClB,IAAK,IAALL,KAAAnD,EACC,GAAU,aAANmD,EAAJ,CAEA,IAAS6B,EAAGhF,EAAMmD,GACd6B,aAAiBzF,IACfT,IAAac,EAAMsM,KAAOpN,EAAc,CAA3B,GAClBA,EAAYqE,GAAK6B,EACjBhF,EAAMmD,GAAK6B,EAAMkG,OANI,CASvB,CAED3K,EAAIX,EACJ,IAGDiB,EAAA,OAA0B,SAACN,EAAKX,GAC/Bb,IAEA,IAAAD,EAEakB,EAAGJ,EAAMmE,IAClB/D,IACHA,EAAUgL,OAAgB,OAGtB,KADJlM,EAAUkB,EAAUiL,QAEnBjL,EAAUiL,KAAWnM,EAxGxB,WACC,IAAAc,EAKA,OAJA6F,GAAO,WACN7F,EAAU0E,IACV,IACD1E,EAAQT,EAmGuC,WAC5Ca,EAAUgL,MA7Ha,EA8HvBhL,EAAU6J,SAAS,CAAnB,EACA,EArGHjK,CACA,CAPD,KA+GoBI,EACnBjB,EAAkBD,GAClByB,EAAIX,EACJ,IAGDiB,EAAI,OAA2B,SAACN,EAAKX,EAAOd,EAAOkB,GAClDjB,SACA,EACAwB,EAAIX,EAAOd,EAAOkB,EAClB,IAGDa,EAAA,UAA0B,SAACN,EAAKX,GAI/B,IAAId,EAIJ,GAPAC,SACA,EAM0B,iBAAVa,EAAC2D,OAAsBzE,EAAMc,EAAMiE,KAAiB,CACnE,IAAI7D,EAAQJ,EAAMsM,KACd/I,EAAgBvD,EAAM4D,MAC1B,GAAIxD,EAAO,CACV,IAAAT,EAAeT,EAAIgM,EACnB,GAAIvL,EACH,IAAK,IAALyF,KAAAzF,EAA2B,CAC1B,IAAIuD,EAAUvD,EAASyF,QACnB,IAAAlC,GAA2BkC,KAAAhF,IAC9B8C,EAAQ1D,IAERG,EAASyF,QAAA,EAEV,MAGDlG,EAAIgM,EADJvL,EAAW,CAAC,EAGb,IAAK,IAAIkG,KAAQzF,EAAO,CACvB,IAAW+C,EAAGxD,EAASkG,GACb5E,EAAGb,EAAMyF,QACf,IAAA1C,GACHA,EAAUnC,EAAkB9B,EAAK2G,EAAM5E,EAAQsC,GAC/C5D,EAASkG,GAAQ1C,GAEjBA,EAAQxD,EAAQsB,EAAQsC,EAEzB,CACD,CACD,CACD5C,EAAIX,EACJ,IAuCDiB,EAAA,WAA2B,SAACN,EAAKX,GAChC,GAA0B,iBAAVA,EAAC2D,KAAmB,CACnC,IAAOzE,EAAGc,EAAMiE,IAEhB,GAAI/E,EAAK,CACR,IAAckB,EAAGlB,EAAIgM,EACrB,GAAI9K,EAEH,IAAK,IAALmD,KADArE,EAAIgM,OAAA,EACJ9K,EAA2B,CAC1B,IAAIT,EAAUS,EAASmD,GACnB5D,GAASA,EAAQH,GACrB,CAEF,CACD,KAAM,CACN,IAAI4F,EAAYpF,EAAMmE,IACtB,GAAIiB,EAAW,CACd,IAAalC,EAAGkC,EAAUiG,KACtBnI,IACHkC,EAAUiG,UAAA,EACVnI,EAAQ1D,IAET,CACD,CACDmB,EAAIX,EACJ,IAGDiB,EAAI,OAAoB,SAACN,EAAKX,EAAWd,EAAOkB,GAC3CA,EAAO,IACTJ,EAAiCoL,MA3Pb,GA4PtBzK,EAAIX,EAAWd,EAAOkB,EACtB,IAMDO,KAAUG,UAAUuH,sBAAwB,SAE3C1H,EACAX,GAGA,IAAad,EAAGwF,KAAK2G,KA0BrB,KAzBmBnM,QAAA,IAAWA,EAAQ+B,GAzQjB,EAkSAyD,KAAK0G,MAA+B,OAAO,EAIhE,GAAyB,EAArB1G,KAAK0G,KAAsD,OAAO,EAGtE,IAAK,IAALhL,KAAAJ,EAAqB,OAAO,EAG5B,IAAK,IAALuD,KAAA5C,EACC,GAAU,aAAN4C,GAAoB5C,EAAM4C,KAAOmB,KAAKd,MAAML,GAAI,OAAO,EAE5D,IAAK,IAAA5D,KAAS+E,KAAKd,MAAO,KAAMjE,KAAKgB,GAAQ,OAAO,EAGpD,OAAO,CACP,EE1Uc,ICCT4L,GDDS,GAAW,iBCAtBC,IACED,GAAiC,oBAAbtK,UAA4BA,SAASwK,cAAgBxK,SAASwK,cAAcC,SAAMC,EAG5G,WA0lBA,SAASC,EAAOC,EAAWC,GACpBD,GAIHE,EAAMD,EAEV,CAsBA,SAASE,IACP,IAAIpI,EAAIqI,EAAWC,OACnBC,EAAc,MAAIC,EAAQ,IAAIC,UAAUzI,GACxCuI,EAAe,OAAIG,EAAS,IAAIC,WAAW3I,GAC3CuI,EAAe,OAAIK,EAAS,IAAIC,WAAW7I,GAC3CuI,EAAgB,QAAIO,EAAU,IAAIC,YAAY/I,GAC9CuI,EAAe,OAAIS,EAAS,IAAIC,WAAWjJ,GAC3CuI,EAAgB,QAAIW,EAAU,IAAIC,YAAYnJ,GAC9CuI,EAAgB,QAAIa,EAAU,IAAIC,aAAarJ,GAC/CuI,EAAgB,QAAIe,EAAU,IAAIC,aAAavJ,EACjD,CAiGA,SAASwJ,IAAsB,IAADC,EAAAC,EAC5BC,IAEgC,QAAhCF,GAAAC,EAAAnB,GAA+B,8BAAC,IAAAkB,GAAhCA,EAAAhP,KAAAiP,EAAmCC,EAErC,CAEA,SAASC,IAAyB,IAADC,EAAAC,EAK/B,GAJAH,IAEgC,QAAhCE,GAAAC,EAAAvB,GAA+B,8BAAC,IAAAsB,GAAhCA,EAAApP,KAAAqP,EAAmCH,GAEZ,GAAnBA,IAC2B,OAAzBI,KACFC,cAAcD,IACdA,GAAuB,MAErBE,IAAuB,CACzB,IAAIC,EAAWD,GACfA,GAAwB,KACxBC,GACF,CAEJ,CAGA,SAAS/B,EAAMgC,GAAO,IAADC,EAAAC,EACF,QAAjBD,GAAAC,EAAA9B,GAAgB,eAAC,IAAA6B,GAAjBA,EAAA3P,KAAA4P,EAAoBF,GAKpBG,EAHAH,EAAO,WAAaA,EAAO,KAK3BI,GAAQ,EACRC,EAAa,EAEbL,GAAQ,2CAgBR,IAAI3J,EAAI,IAAIiK,YAAYC,aAAaP,GAMrC,MAJAQ,EAAmBnK,GAIbA,CACR,CA4BA,SAASoK,EAAcC,GACrB,GAAIA,GAAQC,GAAkBC,EAC5B,OAAO,IAAIlC,WAAWkC,GAExB,GAAIC,EACF,OAAOA,EAAWH,GAEpB,KAAM,iDACR,CAyBA,SAASI,EAAuBC,EAAYC,EAASC,GACnD,OAxBF,SAA0BF,GAMxB,OAAKH,IACGM,IAAsBC,GACR,mBAATC,MAYN/F,QAAQE,UAAUD,MAAK,kBAAMmF,EAAcM,EAAW,IAVlDK,MAAML,EAAY,CAAEM,YAAa,gBAAiB/F,MAAK,SAACgG,GAC7D,IAAKA,EAAa,GAChB,KAAM,uCAAyCP,EAAa,IAE9D,OAAOO,EAAsB,aAC/B,IAAGC,OAAM,kBAAMd,EAAcM,EAAW,GAM9C,CAGSS,CAAiBT,GAAYzF,MAAK,SAACmG,GACxC,OAAOnB,YAAYoB,YAAYD,EAAQT,EACzC,IAAG1F,MAAK,SAACqG,GACP,OAAOA,CACT,IAAGrG,KAAK2F,GAAU,SAACW,GACjBzB,EAAI,0CAAD0B,OAA2CD,IAE9C5D,EAAM4D,EACR,GACF,CAmIE,SAASE,EAAWC,GAChBpM,KAAKjF,KAAO,aACZiF,KAAKqM,QAAO,gCAAAH,OAAmCE,EAAM,KACrDpM,KAAKoM,OAASA,CAChB,CA8EF,SAASE,EAASC,EAAK9Q,GAAqB,IAAdwD,EAAIH,UAAA9B,OAAA,QAAAiL,IAAAnJ,UAAA,GAAAA,UAAA,GAAG,KAEnC,OADIG,EAAKuN,SAAS,OAAMvN,EAAO,KACvBA,GACN,IAAK,KACL,IAAK,KAAMyJ,EAAQ6D,GAAM,GAAM9Q,EAAO,MACtC,IAAK,MAAOmN,EAAS2D,GAAM,GAAM9Q,EAAO,MACxC,IAAK,MAAOyN,EAASqD,GAAM,GAAM9Q,EAAO,MACxC,IAAK,MAAO4M,EAAM,uCAClB,IAAK,QAASiB,EAAUiD,GAAM,GAAM9Q,EAAO,MAC3C,IAAK,SAAU+N,EAAU+C,GAAM,GAAM9Q,EAAO,MAC5C,IAAK,IAAK2N,EAAUmD,GAAM,GAAM9Q,EAAO,MACvC,QAAS4M,EAAM,8BAAD6D,OAA+BjN,IAEjD,CA0QA,SAASwN,EAAmBC,EAASC,EAAa3P,GAChD,IAAI4P,EAAM5P,EAAS,EAAIA,EAAS6P,GAAgBH,GAAS,EACrDI,EAAU,IAAI1L,MAAMwL,GACpBG,EAAkBC,GAAkBN,EAASI,EAAS,EAAGA,EAAQ9P,QAErE,OADI2P,IAAaG,EAAQ9P,OAAS+P,GAC3BD,CACT,CA0tNA,SAASG,EAAmBhR,EAAGiR,GAC3BC,GAAclR,EAAGiR,EAAQ,oBAAqBE,GAAGC,KAEnD,CAg/IJ,SAASC,IAaP,SAASC,IAGHC,KACJA,IAAY,EACZ/E,EAAkB,WAAI,EAElBgC,IA35XHhC,EAAiB,UAAMgF,GAAGlP,KAAKmP,aAClCD,GAAGlP,OACLkP,GAAGE,mBAAoB,EAEvBC,GAAIrP,OACFsP,GAAqBC,GAKrBD,GAAqBE,GAu5XnBC,EAAoBvF,GAChBA,EAA6B,sBAAGA,EAA6B,uBAE7DwF,IAzDR,WAA8B,IAAZC,EAAIpP,UAAA9B,OAAA,QAAAiL,IAAAnJ,UAAA,GAAAA,UAAA,GAAG,GAEnBqP,EAAgBC,GAEpBF,EAAKG,QAAQC,GAEb,IAAIC,EAAOL,EAAKlR,OACZwR,EAAOC,GAAwB,GAAZF,EAAO,IAC1BG,EAAWF,EACfN,EAAKtK,SAAQ,SAAC+K,GACZvF,EAAUsF,GAAW,GAAME,GAAoBD,GAC/CD,GAAY,CACd,IACAtF,EAAUsF,GAAW,GAAM,EAE3B,IAEE,IAAIG,EAAMV,EAAcI,EAAMC,GAI9B,OADAM,GAAOD,GAAsB,GACtBA,CACT,CACA,MAAOnO,GACL,OAAOqO,GAAgBrO,EACzB,CACF,CA+BsBsO,CAASd,GAv5X/B,WAEE,GAAIzF,EAAgB,QAElB,IADgC,mBAArBA,EAAgB,UAAiBA,EAAgB,QAAI,CAACA,EAAgB,UAC1EA,EAAgB,QAAEzL,QAuBPiS,EAtBHxG,EAAgB,QAAE7H,QAuBnCsO,EAAcb,QAAQY,GADxB,IAAsBA,EAlBpBpB,GAAqBqB,EACvB,CA+4XIC,IACF,CAhC+B,IAApBjB,EAAIpP,UAAA9B,OAAA,QAAAiL,IAAAnJ,UAAA,GAAAA,UAAA,GAAGsQ,EAEdvF,EAAkB,IAv5XxB,WACE,GAAIpB,EAAe,OAEjB,IAD+B,mBAApBA,EAAe,SAAiBA,EAAe,OAAI,CAACA,EAAe,SACvEA,EAAe,OAAEzL,QAoCPiS,EAnCHxG,EAAe,OAAE7H,QAoCjCyO,EAAahB,QAAQY,GADvB,IAAqBA,EAhCnBpB,GAAqBwB,EACvB,CAm5XEC,GAGIzF,EAAkB,IAyBlBpB,EAAkB,WACpBA,EAAkB,UAAE,cACpB5C,YAAW,WACTA,YAAW,WACT4C,EAAkB,UAAE,GACtB,GAAG,GACH8E,GACF,GAAG,IAGHA,KAEJ,CAllZ0B,IAmBtBS,EAAqBnD,EASnBpC,EA5BmB8G,EAAA,KAAhBC,EAAS1Q,UAAA9B,OAAA,QAAAiL,IAAAnJ,UAAA,GAAAA,UAAA,GAAG,CAAC,GAgBlB2J,EAAS+G,GAIC,MAAI,IAAI9J,SAAQ,SAACE,EAAS6J,GACtCzB,EAAsBpI,EACtBiF,EAAqB4E,CACvB,KAKMhH,OAA2B,IAAXA,EAAyBA,EAAS,CAAC,GAE3CiH,4BACVjH,EAAOiH,0BAA4B,GAGrCjH,EAAOiH,4BAGDjH,EAA+B,wBAAKA,EAAY,KAClC,SAASkH,GAkBzB,SAASC,EAAmBC,EAAaC,EAAa1F,GAEpD,IAAI2F,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAOJ,GAAa,GAC7BE,EAAIG,aAAe,cACnBH,EAAII,WAAa,SAAStN,GACxB,IAAI9F,EAAM8S,EACNO,EAAON,EAEX,GADIjN,EAAMwN,QAAOD,EAAOvN,EAAMwN,OAC1BxN,EAAMyN,OAAQ,CACXP,EAAIQ,WAQP9H,EAAO+H,kBAAkBzT,GAAKuT,OAASzN,EAAMyN,QAP7CP,EAAIQ,YAAa,EACZ9H,EAAO+H,oBAAmB/H,EAAO+H,kBAAoB,CAAC,GAC3D/H,EAAO+H,kBAAkBzT,GAAO,CAC9BuT,OAAQzN,EAAMyN,OACdD,MAAOD,IAKX,IAAIC,EAAQ,EACRC,EAAS,EACTG,EAAM,EACV,IAAK,IAAIC,KAAYjI,EAAO+H,kBAAmB,CAC/C,IAAI9L,EAAO+D,EAAO+H,kBAAkBE,GAClCL,GAAS3L,EAAK2L,MACdC,GAAU5L,EAAK4L,OACfG,GACF,CACAJ,EAAQM,KAAKC,KAAKP,EAAQ5H,EAAOiH,0BAA0Be,GACvDhI,EAAkB,WAAGA,EAAkB,UAAE,wBAADyD,OAAyBoE,EAAM,KAAApE,OAAImE,EAAK,KACtF,MAAY5H,EAAO+H,mBACb/H,EAAkB,WAAGA,EAAkB,UAAE,sBAEjD,EACAsH,EAAIc,QAAU,WACZ,MAAM,IAAItK,MAAM,qBAAuBsJ,EACzC,EACAE,EAAIe,OAAS,WACX,KAAkB,KAAdf,EAAI3D,QAA+B,KAAd2D,EAAI3D,QAA+B,KAAd2D,EAAI3D,QAAgC,GAAd2D,EAAI3D,QAAe2D,EAAIpE,UAIzF,MAAM,IAAIpF,MAAMwJ,EAAIgB,WAAa,MAAQhB,EAAIiB,aAF7C5G,EADkB2F,EAAIpE,SAK1B,EACAoE,EAAIkB,KAAK,KACX,CAMF,SAASC,IAEP,SAAShJ,EAAOiJ,EAAOC,GACrB,IAAKD,EAAO,MAAMC,GAAM,IAAI7K,OAAQ8K,KACtC,CAgPA,SAASC,EAAmBC,GAC1BrJ,EAAOqJ,EAAa,6BACpBrJ,EAAOqJ,EAAY5R,YAAY5E,OAASyW,YAAYzW,KAAM,mCAC1D,IAAI0W,EAAY,IAAI1I,WAAWwI,GAE3BG,EAAiB,CAAC,KAAO,KAAK,aAAe,SAAS,cAAgB,EAAE,GAAG,GAAG,aAAenw5iBA,EAAqB,KAAID,EACzBvJ,EAAgC,WAAzByJ,EAAOlJ,EAAY,KAAgB,oDAC1CA,EAAY,IAAEmJ,YAAY,CAAE,SAAYjC,EAAU,eAAkB+B,IAAkB,GACtFjJ,EAA4B,oBAAE,0DACpC,CAKE,SAASoJ,EAAgBC,GACvBC,QAAQD,MAAMA,GACdC,QAAQD,MAAM,4CACdlC,EAAmBoC,EAAqBC,EAAqBX,EAC/D,CAnQR7I,EAAsB,cAAE,IAAK,aAAa,GAAM,GAChDA,EAAsB,cAAE,aAAc,cAAc,GAAM,GAC1DA,EAAsB,cAAE,wBAAyB,YAAY,GAAM,GACnEA,EAAsB,cAAE,iCAAkC,QAAQ,GAAM,GACxEA,EAAsB,cAAE,wBAAyB,WAAW,GAAM,GAClEA,EAAsB,cAAE,gCAAiC,OAAO,GAAM,GACtEA,EAAsB,cAAE,aAAc,QAAQ,GAAM,GACpDA,EAAsB,cAAE,kBAAmB,YAAY,GAAM,GAC7DA,EAAsB,cAAE,2BAA4B,aAAa,GAAM,GACvEA,EAAsB,cAAE,kBAAmB,WAAW,GAAM,GAC5DA,EAAsB,cAAE,aAAc,QAAQ,GAAM,GACpDA,EAAsB,cAAE,kBAAmB,YAAY,GAAM,GAC7DA,EAAsB,cAAE,kBAAmB,WAAW,GAAM,GAC5DA,EAAsB,cAAE,kBAAmB,YAAY,GAAM,GAC7DA,EAAsB,cAAE,aAAc,SAAS,GAAM,GACrDA,EAAsB,cAAE,mBAAoB,YAAY,GAAM,GAC9DA,EAAsB,cAAE,mBAAoB,WAAW,GAAM,GAC7DA,EAAsB,cAAE,mBAAoB,YAAY,GAAM,GAC9DA,EAAsB,cAAE,aAAc,SAAS,GAAM,GACrDA,EAAsB,cAAE,mBAAoB,YAAY,GAAM,GAC9DA,EAAsB,cAAE,mBAAoB,WAAW,GAAM,GAC7DA,EAAsB,cAAE,mBAAoB,YAAY,GAAM,GAC9DA,EAAsB,cAAE,aAAc,aAAa,GAAM,GACzDA,EAAsB,cAAE,uBAAwB,YAAY,GAAM,GAClEA,EAAsB,cAAE,gCAAiC,iBAAiB,GAAM,GAChFA,EAAsB,cAAE,uBAAwB,WAAW,GAAM,GACjEA,EAAsB,cAAE,aAAc,aAAa,GAAM,GACzDA,EAAsB,cAAE,uBAAwB,YAAY,GAAM,GAClEA,EAAsB,cAAE,gCAAiC,iBAAiB,GAAM,GAChFA,EAAsB,cAAE,uBAAwB,WAAW,GAAM,GACjEA,EAAsB,cAAE,aAAc,QAAQ,GAAM,GACpDA,EAAsB,cAAE,kBAAmB,YAAY,GAAM,GAC7DA,EAAsB,cAAE,kBAAmB,WAAW,GAAM,GAC5DA,EAAsB,cAAE,kBAAmB,WAAW,GAAM,GAC5DA,EAAsB,cAAE,aAAc,WAAW,GAAM,GACvDA,EAAsB,cAAE,qBAAsB,YAAY,GAAM,GAChEA,EAAsB,cAAE,qBAAsB,WAAW,GAAM,GAC/DA,EAAsB,cAAE,6BAA8B,OAAO,GAAM,GACnEA,EAAsB,cAAE,qBAAsB,WAAW,GAAM,GAC/DA,EAAsB,cAAE,aAAc,WAAW,GAAM,GACvDA,EAAsB,cAAE,qBAAsB,YAAY,GAAM,GAChEA,EAAsB,cAAE,8BAA+B,SAAS,GAAM,GACtEA,EAAsB,cAAE,8BAA+B,QAAQ,GAAM,GACrEA,EAAsB,cAAE,8BAA+B,SAAS,GAAM,GACtEA,EAAsB,cAAE,qBAAsB,WAAW,GAAM,GAC/DA,EAAsB,cAAE,6BAA8B,OAAO,GAAM,GACnEA,EAAsB,cAAE,qBAAsB,WAAW,GAAM,GAC/DA,EAAsB,cAAE,aAAc,YAAY,GAAM,GACxDA,EAAsB,cAAE,sBAAuB,YAAY,GAAM,GACjEA,EAAsB,cAAE,sBAAuB,WAAW,GAAM,GAChEA,EAAsB,cAAE,sBAAuB,YAAY,GAAM,GACjEA,EAAsB,cAAE,aAAc,SAAS,GAAM,GACrDA,EAAsB,cAAE,mBAAoB,YAAY,GAAM,GAC9DA,EAAsB,cAAE,mBAAoB,WAAW,GAAM,GAC7DA,EAAsB,cAAE,mBAAoB,WAAW,GAAM,GAC7DA,EAAsB,cAAE,aAAc,UAAU,GAAM,GACtDA,EAAsB,cAAE,aAAc,OAAO,GAAM,GACnDA,EAAsB,cAAE,iBAAkB,YAAY,GAAM,GAC5DA,EAAsB,cAAE,iBAAkB,WAAW,GAAM,GAC3DA,EAAsB,cAAE,iBAAkB,YAAY,GAAM,GAC5DA,EAAsB,cAAE,IAAK,aAAa,GAAM,GAChDA,EAAsB,cAAE,aAAc,aAAa,GAAM,GACzDA,EAAsB,cAAE,aAAc,YAAY,GAAM,GACxDA,EAAsB,cAAE,sBAAuB,cAAc,GAAM,GACnEA,EAAsB,cAAE,sBAAuB,cAAc,GAAM,GACnEA,EAAsB,cAAE,sBAAuB,YAAY,GAAM,GACjEA,EAAsB,cAAE,aAAc,UAAU,GAAM,GACtDA,EAAsB,cAAE,aAAc,WAAW,GAAM,GACvDA,EAAsB,cAAE,qBAAsB,OAAO,GAAM,GAC3DA,EAAsB,cAAE,yBAA0B,QAAQ,GAAM,GAChEA,EAAsB,cAAE,aAAc,UAAU,GAAM,GACtDA,EAAsB,cAAE,aAAc,WAAW,GAAM,GACvDA,EAAsB,cAAE,qBAAsB,WAAW,GAAM,GAC/DA,EAAsB,cAAE,aAAc,YAAY,GAAM,GACxDA,EAAsB,cAAE,aAAc,OAAO,GAAM,GACnDA,EAAsB,cAAE,IAAK,aAAa,GAAM,GAExC,IACIyJ,EADAC,EAAexC,EAAuB,aAE1C,GAAsB,YAAL,oBAAN3I,OAAM,YAAA2K,EAAN3K,SACTkL,EAAYlL,OAAOkL,WAAalL,OAAOoL,cAAgBpL,OAAOqL,iBAAmBrL,OAAOsL,gBACnF,IAAwB,oBAAbjU,SAIhB,KAAM,kFAFN6T,EAAYK,KAAKL,SAGnB,CACA,IAAIM,EAAS,WACTC,EAAS,YACTC,EAAU,mBACVC,EAAa,EACbC,EAAsB,WACtBC,EAAqB,WAiCrBC,EAAa,SA8HnBrK,EAAyB,iBAAE,2DAEtBA,EAAOsK,iBAAgBtK,EAAOsK,eAAiB,CAAC,GAhKnD,SAAsB3I,EAAU4I,GAC9B,IACE,IAAIC,EAAcf,EAAUjC,KAAKyC,EAASC,EAC5C,CAAE,MAAOjS,GACP,OAAOsS,EAAQtS,EACjB,CACAuS,EAAYC,gBAAkB,SAASrQ,GACrC,IAAIsQ,EAAiCtQ,EAAMuQ,OAAOC,OAE9CF,EAAGG,iBAAiBC,SAASV,IAC/BM,EAAGK,kBAAkBX,GAERM,EAAGM,kBAAkBZ,GAEhCM,EAAGG,iBAAiBC,SAASX,IAC/BO,EAAGK,kBAAkBZ,GAERO,EAAGM,kBAAkBb,EACtC,EACAK,EAAYS,UAAY,SAAS7Q,GAE/BuH,EADqCvH,EAAMuQ,OAAOC,OAEpD,EACAJ,EAAYpC,QAAU,SAASiB,GAC7BkB,EAAQlB,EACV,CACF,CA8IA6B,EACE,SAASR,IApFX,SAA4BA,EAAItD,EAAazF,EAAU4I,GACrD,IAEIY,EAFcT,EAAGU,YAAY,CAACjB,GAAsBJ,GAC7BsB,YAAYlB,GACbvX,IAAI,YAAD6Q,OAAa2D,IAC1C+D,EAAWF,UAAY,SAAS7Q,GAC9B,IAAIwQ,EAASxQ,EAAMuQ,OAAOC,OAC1B,OAAKA,EAGIjJ,EAAS+H,IAAiBkB,EAAa,KAAGA,GAF1CjJ,GAAS,EAAO,KAI3B,EACAwJ,EAAW/C,QAAU,SAASiB,GAC5BkB,EAAQlB,EACV,CACF,CAsEIiC,CAAmBZ,EAAIa,EAAeC,GACpC,SAASC,EAAWvE,GAClBlH,EAAOsK,eAAekB,GAAgB,CAACE,UAAWD,GAC9CA,EAvEZ,SAA4Bf,EAAItD,EAAaF,EAAUvF,EAAU4I,GAS/D,IARA,IACIoB,EADcjB,EAAGU,YAAY,CAAChB,GAAqBL,GAC5BsB,YAAYjB,GAEnCwB,EAAa,EACbC,EAAY,EACZC,EAAa5E,EAAqB,WAClC6E,EAAS,IAAIpT,MAAMmT,GAEdE,EAAU,EAAGA,EAAUF,EAAYE,IAAW,CACrD,IAAIb,EAAaQ,EAAS/Y,IAAI,WAAD6Q,OAAY2D,EAAW,KAAA3D,OAAIuI,IACxDb,EAAWF,UAAY,SAAS7Q,GAE9B,GAAkB,GAAd0R,EACFnK,EAASvH,EAAMuQ,OAAOC,aAKtB,GAHAgB,IACAC,GAAazR,EAAMuQ,OAAOC,OAAOqB,WACjCF,EAAOlU,KAAKuC,EAAMuQ,OAAOC,QACrBgB,GAAcE,EAChB,GAAkB,GAAdF,EACFjK,EAASvH,EAAMuQ,OAAOC,YACjB,CACL,IAAIsB,EAAY,IAAI5L,WAAWuL,GAC3BM,EAAa,EACjB,IAAK,IAAIH,KAAWD,EAAQ,CAC1B,IAAIhM,EAASgM,EAAOC,GACpBE,EAAUnN,IAAI,IAAIuB,WAAWP,GAASoM,GACtCA,GAAcpM,EAAOkM,WACrBlM,OAASP,CACX,CACAuM,OAASvM,EACTmC,EAASuK,EAAUnM,QACnBmM,OAAY1M,CACd,CAGN,EACA2L,EAAW/C,QAAU,SAASiB,GAC5BkB,EAAQlB,EACV,CACF,CACF,CA8BU+C,CAAmB1B,EAAIa,EAAeC,EAActE,EAAU2B,EAAoBO,GAElFjC,EAAmBoC,EAAqBC,GACtC,SAAS6C,IA/IrB,SACE3B,EACAtD,EACAiF,EACAC,EACA3K,EACA4I,GAQA,IANA,IACIoB,EADsBjB,EAAGU,YAAY,CAAChB,GAAqBJ,GAC5BqB,YAAYjB,GAC3CmC,EAAkB,EAClBC,EAAsB,EACtBV,EAAa5D,KAAKC,KAAKkE,EAAYJ,WAAa5B,GAChDoC,EAAiB,EACZT,EAAU,EAAGA,EAAUF,EAAYE,IAAW,CAErD,IAAIU,EAAoBf,EAASgB,IAC/BN,EAAYxS,MAAM0S,EAFpBC,GAAuBnC,GAEmC,WAAD5G,OAC5C2D,EAAW,KAAA3D,OAAIuI,IAE5BO,EAAkBC,EAClBE,EAAkBzB,UAAY,WAE5B,KADAwB,GACsBX,EAAY,CAChC,IAKIc,EALuBlC,EAAGU,YAC5B,CAACjB,GACDH,GAEkCqB,YAAYlB,GACdwC,IAChC,CACE,KAAQL,EAAYO,KACpB,WAAcf,GACd,YAADrI,OACW2D,IAEdwF,EAAmB3B,UAAY,WAC7BtJ,EAAS0K,EACX,EACAO,EAAmBxE,QAAU,SAASiB,GACpCkB,EAAQlB,EACV,CACF,CACF,EACAqD,EAAkBtE,QAAU,SAASiB,GACnCkB,EAAQlB,EACV,CACF,CACF,CAgGcyD,CAAmBpC,EAAIa,EAAeC,EAAca,EAAa,CAACQ,KAAKnD,GAAeb,GACpF,SAASQ,GACPC,QAAQD,MAAMA,GACdR,EAAmBwD,EACrB,GACJ,GAGN,GACAjD,EACJ,GACAA,GAEEpJ,EAAkB,WAAGA,EAAkB,UAAE,iBAEjD,CAxWE,IAAIuL,EAAe,GACG,YAAL,oBAANhN,OAAM,YAAA2K,EAAN3K,SACTgN,EAAehN,OAA2B,mBAAEA,OAAO3I,SAASC,SAASiJ,WAAWH,UAAU,EAAGJ,OAAO3I,SAASC,SAASiJ,WAAWiO,YAAY,MAAQ,KACzH,oBAAZC,SAA+C,oBAAbpX,WAElD2V,EAAe0B,mBAAmBrX,SAASC,SAASiJ,WAAWH,UAAU,EAAG/I,SAASC,SAASiJ,WAAWiO,YAAY,MAAQ,MAE/H,IAAIvB,EAAe,iDACf0B,EAAsB,oBACiB,mBAAhClN,EAA0B,mBAAqBA,EAAmB,aAC3EA,EAAmB,WAAIA,EAA0B,kBACjD+B,EAAI,qIAEN,IAAIwH,EAAsBvJ,EAAmB,WAAIA,EAAmB,WAAEkN,EAAqB,IAAMA,EACnG1D,EAAsBtC,EAA8B,oBA2VhDlH,EAAkB,UACpByI,KAEKzI,EAAe,SAAGA,EAAe,OAAI,IAC1CA,EAAe,OAAEnI,KAAK4Q,GAGxB,CACAU,CAAY,CAAC,MAAS,CAAC,CAAC,SAAY,YAAa,MAAS,EAAG,IAAO,GAAI,CAAC,SAAY,0CAA2C,MAAS,EAAG,IAAO,MAAO,CAAC,SAAY,4CAA6C,MAAS,KAAM,IAAO,MAAO,CAAC,SAAY,4CAA6C,MAAS,KAAM,IAAO,MAAO,CAAC,SAAY,kDAAmD,MAAS,KAAM,IAAO,MAAO,CAAC,SAAY,kDAAmD,MAAS,KAAM,IAAO,MAAO,CAAC,SAAY,mDAAoD,MAAS,KAAM,IAAO,OAAQ,CAAC,SAAY,mDAAoD,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,mDAAoD,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,mDAAoD,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,mDAAoD,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,mDAAoD,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,kDAAmD,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,kDAAmD,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,kDAAmD,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,kDAAmD,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,kDAAmD,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,kDAAmD,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,kDAAmD,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,kDAAmD,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,0CAA2C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,4CAA6C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,2CAA4C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,0CAA2C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,0CAA2C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,0CAA2C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,2CAA4C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,6CAA8C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,2CAA4C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,0CAA2C,MAAS,MAAO,IAAO,OAAQ,CAAC,SAAY,iDAAkD,MAAS,MAAO,IAAO,QAAS,CAAC,SAAY,6CAA8C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,4CAA6C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,4CAA6C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,2CAA4C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,2CAA4C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,2CAA4C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,2CAA4C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,4CAA6C,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,wCAAyC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,wCAAyC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,wCAAyC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,sCAAuC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,oCAAqC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,qCAAsC,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,wCAAyC,MAAS,OAAQ,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,iDAAkD,M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AO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,QAAU,CAAC,SAAY,0DAA2D,MAAS,OAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,4CAA6C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,4CAA6C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,oCAAqC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,sCAAuC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,qCAAsC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY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S,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,gDAAiD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,+CAAgD,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,uCAAwC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,8CAA+C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,wCAAyC,MAAS,QAAS,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,4CAA6C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,4CAA6C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,4CAA6C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,0CAA2C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,qCAAsC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oCAAqC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,oDAAqD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uDAAwD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uDAAwD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,yCAA0C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,2CAA4C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+CAAgD,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,uCAAwC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,sCAAuC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAW,CAAC,SAAY,iCAAkC,MAAS,QAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8BAA+B,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,mCAAoC,MAAS,SAAU,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","file":"bundle.651fa.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Pq/i\");\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function(p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","function cycleDetected(): never {\n\tthrow new Error(\"Cycle detected\");\n}\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\nfunction batch<T>(callback: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn callback();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\tpeek(): T;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\tconst signal = this;\n\treturn effect(function (this: Effect) {\n\t\tconst value = signal.value;\n\t\tconst flag = this._flags & TRACKING;\n\t\tthis._flags &= ~TRACKING;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tthis._flags |= flag;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.peek = function () {\n\treturn this._value;\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget() {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tcycleDetected();\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\nfunction signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_compute: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(compute: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, compute: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._compute = compute;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._compute();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when the it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nComputed.prototype.peek = function () {\n\tif (!this._refresh()) {\n\t\tcycleDetected();\n\t}\n\tif (this._flags & HAS_ERROR) {\n\t\tthrow this._value;\n\t}\n\treturn this._value;\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget() {\n\t\tif (this._flags & RUNNING) {\n\t\t\tcycleDetected();\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\ninterface ReadonlySignal<T = any> extends Signal<T> {\n\treadonly value: T;\n}\n\nfunction computed<T>(compute: () => T): ReadonlySignal<T> {\n\treturn new Computed(compute);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._compute = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ndeclare class Effect {\n\t_compute?: () => unknown;\n\t_cleanup?: unknown;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(compute: () => void);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, compute: () => void) {\n\tthis._compute = compute;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (!(this._flags & DISPOSED) && this._compute !== undefined) {\n\t\t\tthis._cleanup = this._compute();\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tcycleDetected();\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nfunction effect(compute: () => unknown): () => void {\n\tconst effect = new Effect(compute);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { signal, computed, effect, batch, Signal, ReadonlySignal };\n","import { options, Component } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport { signal, computed, batch, effect, Signal, type ReadonlySignal };\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction Text(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst s = useMemo(() => {\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Replace this component's vdom updater with a direct text one:\n\t\tthis._updater!._callback = () => {\n\t\t\t(this.base as Text).data = s.peek();\n\t\t};\n\n\t\treturn computed(() => {\n\t\t\tlet data = currentSignal.value;\n\t\t\tlet s = data.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\t}, []);\n\n\treturn s.value;\n}\nText.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: Text },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(() => {\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// let reason;\n\t// if (!hasSignals && !hasComputeds.has(this)) {\n\t// \treason = \"no signals or computeds\";\n\t// } else if (hasPendingUpdate.has(this)) {\n\t// \treason = \"has pending update\";\n\t// } else if (hasHookState.has(this)) {\n\t// \treason = \"has hook state\";\n\t// }\n\t// if (reason) {\n\t// \tif (!this) reason += \" (`this` bug)\";\n\t// \tconsole.log(\"not optimizing\", this?.constructor?.name, \": \", reason, {\n\t// \t\tdetails: {\n\t// \t\t\thasSignals,\n\t// \t\t\thasComputeds: hasComputeds.has(this),\n\t// \t\t\thasPendingUpdate: hasPendingUpdate.has(this),\n\t// \t\t\thasHookState: hasHookState.has(this),\n\t// \t\t\tdeps: Array.from(updater._deps),\n\t// \t\t\tupdater,\n\t// \t\t},\n\t// \t});\n\t// }\n\n\t// if this component used no signals or computeds, update:\n\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t// if there is a pending re-render triggered from Signals,\n\t// or if there is hook or class state, update:\n\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T) {\n\treturn useMemo(() => signal<T>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(() => callback.current());\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n","import { Signal, signal } from '@preact/signals';\r\nimport { h } from 'preact';\r\nimport style from './style.css';\r\nimport { useEffect, useRef, useState } from 'preact/hooks';\r\nimport createEdgeModule from '../../edge-classic';\r\nimport LicenseModal from '../licenses';\r\n\r\nconst defaultIWad = \"freedoom2.wad\"\r\nconst deathmatchIWad = \"freedm.wad\";\r\n\r\ntype PlayerConfig = {\r\n\tindexDBName: string;\r\n}\r\n\r\ntype WadState = {\r\n\terror?: string;\r\n\twadName?: string;\r\n\tisIWAD?: boolean;\r\n}\r\n\r\nconst config: PlayerConfig = {\r\n\tindexDBName: '/edge-classic'\r\n}\r\n\r\nfunction getCookie(cname: string): string {\r\n\tlet name = cname + \"=\";\r\n\tlet ca;\r\n\t// prerender guard\r\n\tif (typeof window !== 'undefined') {\r\n\t\tca = document.cookie.split(';');\r\n\t}\r\n\tif (!ca) {\r\n\t\treturn \"\";\r\n\t}\r\n\tfor (let i = 0; i < ca.length; i++) {\r\n\t\tlet c = ca[i];\r\n\t\twhile (c.charAt(0) == ' ') {\r\n\t\t\tc = c.substring(1);\r\n\t\t}\r\n\t\tif (c.indexOf(name) == 0) {\r\n\t\t\treturn c.substring(name.length, c.length);\r\n\t\t}\r\n\t}\r\n\treturn \"\";\r\n}\r\n\r\nclass WadHandler {\r\n\r\n\tconstructor(config: PlayerConfig) {\r\n\t\tthis.config = config;\r\n\t}\r\n\r\n\tprivate error(message: string) {\r\n\t\talert(message);\r\n\t\tconsole.error(message);\r\n\t\tconsole.trace();\r\n\t}\r\n\r\n\tsetWads(wads: WadState[] | undefined) {\r\n\t\tthis.wadState.value = wads;\r\n\t}\r\n\r\n\tasync uploadWads(files: File[]) {\r\n\r\n\t\tconst wads: WadState[] = [];\r\n\r\n\t\tfor (let i = 0; i < files.length; i++) {\r\n\r\n\t\t\tconst file = files[i];\r\n\r\n\t\t\tlet database: IDBDatabase | undefined;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tdatabase = await this.openDatabase();\r\n\t\t\t\tif (!database) {\r\n\t\t\t\t\tthis.error(\"Unable to open database\")\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.error(e);\r\n\t\t\t\tdatabase?.close();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst upload = new Promise<WadState>((resolve, reject) => {\r\n\r\n\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\treader.readAsArrayBuffer(file);\r\n\r\n\t\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\t\tconst bits = e.target.result;\r\n\t\t\t\t\tconst contents = new Uint8Array(bits as ArrayBuffer);\r\n\r\n\t\t\t\t\tconst iwad = contents[0] === 73;\r\n\r\n\t\t\t\t\tconst trans = database.transaction(['FILE_DATA'], 'readwrite');\r\n\t\t\t\t\tconst path = `${this.config.indexDBName}/${file.name}`;\r\n\t\t\t\t\tconst addReq = trans.objectStore('FILE_DATA').put({ timestamp: new Date(), mode: 33206, contents: contents }, path);\r\n\r\n\t\t\t\t\taddReq.onerror = (e) => {\r\n\t\t\t\t\t\treject(\"Error storing wad data\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttrans.oncomplete = (e) => {\r\n\t\t\t\t\t\tresolve({ wadName: file.name, isIWAD: iwad });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treader.onerror = (e) => {\r\n\t\t\t\t\treject(\"Error reading wad\");\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst wad = await upload;\r\n\t\t\t\tdatabase?.close();\r\n\t\t\t\tdatabase = undefined;\r\n\t\t\t\twads.push(wad)\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.error(e);\r\n\t\t\t} finally {\r\n\t\t\t\tdatabase?.close();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setWads(wads.length ? wads : undefined);\r\n\r\n\t}\r\n\r\n\tprivate async openDatabase() {\r\n\r\n\t\treturn new Promise<IDBDatabase | undefined>((resolve, reject) => {\r\n\r\n\t\t\t// build pre-render guard\r\n\t\t\tif (typeof window !== 'undefined') {\r\n\t\t\t\tconst dbrequest = window.indexedDB.open(this.config.indexDBName);\r\n\r\n\t\t\t\tdbrequest.onerror = (e) => {\r\n\t\t\t\t\treject(`unable to load database ${this.config.indexDBName}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdbrequest.onupgradeneeded = (e) => {\r\n\r\n\t\t\t\t\tconsole.log(\"upgrade needed\");\r\n\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tif (!db.objectStoreNames.contains(\"FILE_DATA\")) {\r\n\t\t\t\t\t\tconsole.log(\"Creating FILE_DATA object store\");\r\n\t\t\t\t\t\tconst store = db.createObjectStore(\"FILE_DATA\", {});\r\n\t\t\t\t\t\tstore.createIndex(\"timestamp\", \"timestamp\", { unique: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tdbrequest.onsuccess = (e) => {\r\n\t\t\t\t\tconsole.log(\"db open\");\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tresolve(db);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\twadState: Signal<WadState[] | undefined> = signal(undefined);\r\n\r\n\tconfig: PlayerConfig;\r\n\r\n\tstatic get singleton(): WadHandler {\r\n\t\tif (!WadHandler.instance) {\r\n\t\t\tWadHandler.instance = new WadHandler(config);\r\n\t\t}\r\n\t\treturn WadHandler.instance;\r\n\t}\r\n\r\n\tprivate static instance?: WadHandler;\r\n}\r\n\r\ntype Project = {\r\n\tname: string;\r\n\timage: string;\r\n\tlink: string;\r\n}\r\n\r\nconst projects: Project[] = [\r\n\r\n\t{ name: \"Operation: Arctic Wolf Revisited\", image: \"./assets/images/articwolf.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/arctic-wolf-revisited\" },\r\n\t{ name: \"Astral Pathfinder\", image: \"./assets/images/astralpathfinder.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/astral-pathfinder1\" },\r\n\t{ name: \"Aliens: Stranded\", image: \"./assets/images/aliensstranded.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/aliens-stranded\" }\r\n]\r\n\r\nconst WadChooser = () => {\r\n\r\n\tconst [showLicense, setShowLicense] = useState(false);\r\n\r\n\tconst pelements = projects.map(p => {\r\n\t\treturn <a href={p.link} target=\"_blank\" style=\"display:flex;flex:1;flex-direction:column;height:100%;align-items:flex-end\">\r\n\t\t\t<div style={{ display: \"flex\", flex: 0 }}>\r\n\t\t\t\t<div style={{ paddingTop: 12, paddingBottom: 4, fontSize: 14, whiteSpace: \"pre\", fontWeight: \"normal\" }}>{p.name}</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", position: \"relative\", flexGrow: 1, width: \"100%\" }} >\r\n\t\t\t\t<img style=\"width:100%;height:100%;object-fit:cover;position:absolute\" src={p.image} />\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t});\r\n\r\n\treturn <div style={{ display: \"flex\", width: \"100%\", maxWidth: \"1440px\", padding: 24, paddingLeft: 42 }}>\r\n\t\t{showLicense && <LicenseModal onClose={() => setShowLicense(false)} />}\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1 }}>\r\n\t\t\t<div style={{ display: \"flex\", width: \"80%\" }}>\r\n\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"start\" }}>\r\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t\t<div style={{ fontSize: 18, fontWeight: \"normal\", paddingBottom: 24, width: 800 }}>Play EDGE-Classic in your browser by selecting an option below:\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWads([{ wadName: defaultIWad, isIWAD: true }])\r\n\t\t\t\t\t\t}}>Play Freedoom</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWads([{ wadName: deathmatchIWad, isIWAD: true }])\r\n\t\t\t\t\t\t}}>Play Bot Death Match</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tdocument.getElementById('getWadFile').click()\r\n\t\t\t\t\t\t}}>Play Wad, EPK, or Zip files</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\r\n\t\t\t\t\t<textarea style=\"font-size:12px;width:292px;height:48px\" placeholder=\"Enter custom command line\" spellcheck={false} onChange={(ev: any) => {\r\n\r\n\t\t\t\t\t\tconst value = (ev?.target?.value?.length ? ev?.target?.value : undefined)?.trim().replace(\"\\n\", \" \");\r\n\t\t\t\t\t\tif (value?.length) {\r\n\t\t\t\t\t\t\tdocument.cookie = `customCommandLineCookie=${value}; SameSite=None; Secure`;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdocument.cookie = `customCommandLineCookie=; SameSite=None; Secure`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}}>{getCookie(\"customCommandLineCookie\")?.trim() ?? \"\"}</textarea>\r\n\r\n\r\n\t\t\t\t\t<div style={{ paddingTop: 128 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tsetShowLicense(true);\r\n\t\t\t\t\t\t}}>Show Licenses</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<input id=\"getWadFile\" style=\"display:none\" type=\"file\" multiple onChange={(e) => {\r\n\t\t\t\t\tconst files = Array.from((e.target as any).files as File[]);\r\n\t\t\t\t\tif (files.length === 0) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst badFile = files.find(f => {\r\n\t\t\t\t\t\tconst check = f.name.toLowerCase();\r\n\t\t\t\t\t\tif (!check.endsWith(\".wad\") && !check.endsWith(\".zip\") && !check.endsWith(\".epk\") && !check.endsWith(\".7z\")) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tif (badFile) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(`Please select wad, epk, or zip files, ${badFile.name} is invalid`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst wadHandler = WadHandler.singleton;\r\n\t\t\t\t\twadHandler.uploadWads(files);\r\n\r\n\t\t\t\t}} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1, width: \"50%\", flexDirection: \"column\" }}>\r\n\t\t\t<div style={{ display: \"flex\", flex: \"0 0 24px\", position: \"relative\" }}>\r\n\t\t\t\t<div style={{ position: \"absolute\", fontSize: 18, fontWeight: 400, whiteSpace: \"pre\" }}>Suggested Projects</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", flexShrink: 0, flexGrow: 1, flexDirection: \"column\" }}>\r\n\t\t\t\t{pelements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n}\r\n\r\nconst EdgeClassic = () => {\r\n\r\n\tconst canvasRef = useRef<HTMLCanvasElement>(null);\r\n\tconst canvasContainerRef = useRef<HTMLDivElement>(null);\r\n\tconst [state, setState] = useState<{ loading: boolean }>({ loading: true });\r\n\tconst wadState = WadHandler.singleton.wadState.value;\r\n\r\n\r\n\tconst pointerLockChange = () => {\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst lock = canvas === document.pointerLockElement;\r\n\r\n\t\t// disabled for embedded classic site\r\n\t\t//Module._WebSetFullscreen(lock ? 1 : 0);\r\n\r\n\t\t/*\r\n\t\t// It feels good to open the menu when releasing pointer lock\r\n\t\t// though, it makes the interaction tricky to close the menu\r\n\t\tif (!lock) {\r\n\t\t\tModule._WebOpenGameMenu(1);\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst canvasContainer = canvasContainerRef?.current;\r\n\r\n\t\tlet iwad = wadState?.find(w => w.isIWAD);\r\n\r\n\t\tif (!iwad) {\r\n\t\t\tiwad = { wadName: defaultIWad, isIWAD: true };\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(\"WadState\", wadState);\r\n\r\n\t\t/*\r\n\t\tlet iwad = defaultIWad;\r\n\t\tif (wadState.wadName === deathmatchIWad) {\r\n\t\t\tiwad = deathmatchIWad;\r\n\t\t}\r\n\r\n\t\tif (wadState.wadName !== iwad && wadState.isIWAD) {\r\n\t\t\tiwad = `edge-classic/${wadName}`;\r\n\t\t}\r\n\t\t*/\r\n\r\n\t\tif (!iwad) {\r\n\t\t\tthrow \"Unable to get iwad\";\r\n\t\t}\r\n\r\n\r\n\t\tif (!canvasContainer) {\r\n\t\t\tthrow \"Unable to get canvas container\";\r\n\t\t}\r\n\r\n\t\tif (!canvas) {\r\n\t\t\tthrow \"Unable to get canvas\";\r\n\t\t}\r\n\r\n\t\tconst syncCanvasSize = () => {\r\n\t\t\tconst w = Math.floor(canvasContainer.offsetWidth);\r\n\t\t\tconst h = Math.floor(canvasContainer.offsetHeight);\r\n\t\t\tconsole.log(\"Setting canvas size\", w, h);\r\n\t\t\tcanvas.style.width = `${w}px`;\r\n\t\t\tcanvas.style.height = `${h}px`;\r\n\t\t\tcanvas.width = w;\r\n\t\t\tcanvas.height = h;\r\n\t\t}\r\n\r\n\t\t// initial update\r\n\t\tsyncCanvasSize();\r\n\r\n\t\tconst canvasSync = () => {\r\n\t\t\tsyncCanvasSize();\r\n\t\t\tModule._WebSyncScreenSize();\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"pointerlockchange\", pointerLockChange, false);\r\n\r\n\t\tlet doSyncTimeout;\r\n\t\twindow.addEventListener(\"resize\", (ev) => {\r\n\r\n\t\t\tclearTimeout(doSyncTimeout);\r\n\t\t\tdoSyncTimeout = setTimeout(canvasSync, 250);\r\n\r\n\t\t});\r\n\r\n\t\tcanvas.addEventListener(\"webglcontextlost\", function (e) { alert('FIXME: WebGL context lost, please reload the page'); e.preventDefault(); }, false);\r\n\r\n\t\tlet iwadPath = iwad.wadName!;\r\n\t\tif (iwadPath !== defaultIWad && iwadPath !== deathmatchIWad) {\r\n\t\t\tiwadPath = `edge-classic/${iwadPath}`;\r\n\t\t}\r\n\r\n\t\tconst args = [\"-home\", \"/edge-classic\", \"-windowed\", \"-width\", canvas.offsetWidth.toString(), \"-height\", canvas.offsetHeight.toString(), \"-iwad\", iwadPath];\r\n\r\n\t\twadState.forEach(w => {\r\n\t\t\tif (w.isIWAD) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\targs.push(\"-file\")\r\n\t\t\targs.push(`edge-classic/${w.wadName}`);\r\n\t\t})\r\n\r\n\t\tlet customCommandLine = getCookie(\"customCommandLineCookie\");\r\n\t\tif (!customCommandLine?.length) {\r\n\t\t\tif (iwad.wadName === deathmatchIWad) {\r\n\t\t\t\targs.push(...[\"-deathmatch\", \"1\", \"-nomonsters\", \"-skill\", \"2\", \"-bots\", \"1\", \"-warp\", \"map03\"])\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\targs.push(...customCommandLine.split(\" \"));\r\n\t\t}\r\n\r\n\r\n\r\n\t\tcreateEdgeModule({\r\n\t\t\tedgePostInit: () => {\r\n\t\t\t\tconsole.log(\"Post-Init!\");\r\n\t\t\t\t// jump\r\n\t\t\t\tif (!args.find(a => a.startsWith(\"-warp\"))) {\r\n\t\t\t\t\tModule._WebOpenGameMenu(1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetState({ ...state, loading: false });\r\n\t\t\t},\r\n\t\t\tonFullscreen: () => {\r\n\t\t\t\t/*\r\n\t\t\t\tconsole.log(\"On fullscreen\");\r\n\t\t\t\tconst elements = document.querySelectorAll(\".playercontrols\");\r\n\t\t\t\telements?.forEach(e => {\r\n\t\t\t\t\t(e as any).style.display = \"flex\";\r\n\t\t\t\t});\r\n\t\t\t\t*/\r\n\t\t\t},\r\n\t\t\tpreEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\tpostEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\targuments: args,\r\n\t\t\tpreInit: () => {\r\n\t\t\t\tconsole.log(\"Pre-Init\");\r\n\t\t\t},\r\n\t\t\tpreRun: [],\r\n\t\t\tpostRun: [],\r\n\t\t\tprint: (function () {\r\n\t\t\t\treturn function (text) {\r\n\t\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\t\tconsole.log(text);\r\n\t\t\t\t};\r\n\t\t\t})(),\r\n\t\t\tprintErr: function (text) {\r\n\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\tconsole.error(text);\r\n\t\t\t},\r\n\t\t\tcanvas: canvas,\r\n\t\t\tsetStatus: function (text) { console.log(\"status\", text) },\r\n\t\t\tmonitorRunDependencies: function (left) { console.log(left) },\r\n\t\t}).then(module => {\r\n\t\t\tglobalThis.Module = module;\r\n\t\t\tmodule.canvas = canvas;\r\n\t\t});\r\n\r\n\r\n\t\treturn () => {\r\n\r\n\t\t};\r\n\r\n\t}, []);\r\n\r\n\r\n\treturn <div id=\"canvas-container\" ref={canvasContainerRef} style={{ display: \"flex\", width: \"100%\", height: \"100%\", position: \"relative\" }}>\r\n\t\t<canvas id=\"canvas\" ref={canvasRef} style={{ visibility: state.loading ? \"hidden\" : \"visible\" }}\r\n\t\t\tonClick={async (ev) => {\r\n\t\t\t\tconst lock = canvasRef.current === document.pointerLockElement;\r\n\t\t\t\tif (!lock) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait canvasRef.current?.requestPointerLock();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}} />\r\n\r\n\t\t{!!state.loading && <div style={{ position: \"absolute\", display: \"flex\", width: \"100%\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n\t\t\t<div class={style.loading}>\r\n\t\t\t\t<span style=\"--i:1\">L</span>\r\n\t\t\t\t<span style=\"--i:2\">O</span>\r\n\t\t\t\t<span style=\"--i:3\">A</span>\r\n\t\t\t\t<span style=\"--i:4\">D</span>\r\n\t\t\t\t<span style=\"--i:5\">I</span>\r\n\t\t\t\t<span style=\"--i:6\">N</span>\r\n\t\t\t\t<span style=\"--i:7\">G</span>\r\n\t\t\t\t<span style=\"--i:8\">.</span>\r\n\t\t\t\t<span style=\"--i:9\">.</span>\r\n\t\t\t\t<span style=\"--i:10\">.</span>\r\n\t\t\t</div>\r\n\t\t</div>}\r\n\r\n\t</div>\r\n}\r\n// floating player controls, not currently used\r\n// {!state.loading && <PlayerControls />}\r\n\r\nconst PlayerControls = () => {\r\n\tconst [fullscreen, setFullscreen] = useState(false);\r\n\treturn <div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\", padding: \"24px\", zIndex: 1, position: \"absolute\" }}>\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\" }} />\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", flexShrink: 1, paddingRight: \"48px\" }}>\r\n\t\t\t<button style={{ opacity: 1 }} className=\"playercontrols\" onClick={() => { Module._WebSetFullscreen(fullscreen ? 0 : 1, setFullscreen(!fullscreen)) }}>{fullscreen ? \"Minimize\" : \"Maximize\"}</button>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst Player = () => {\r\n\r\n\tconst wadHandler = WadHandler.singleton;\r\n\tconst wadState = wadHandler.wadState.value;\r\n\r\n\treturn (\r\n\t\t<div style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\r\n\t\t\t{!wadState?.length && <WadChooser />}\r\n\t\t\t{!!wadState?.length && <EdgeClassic />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Player;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"loading__O14bA\"};","\r\nvar createEdgeModule = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  \r\n  return (\r\nfunction(moduleArg = {}) {\r\n\r\n// include: shell.js\r\n// The Module object: Our interface to the outside world. We import\r\n// and export values on it. There are various ways Module can be used:\r\n// 1. Not defined. We create it here\r\n// 2. A function parameter, function(Module) { ..generated code.. }\r\n// 3. pre-run appended it, var Module = {}; ..generated code..\r\n// 4. External script tag defines var Module.\r\n// We need to check if Module already exists (e.g. case 3 above).\r\n// Substitution will be replaced with actual code on later stage of the build,\r\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\r\n// Note that if you want to run closure, and also to use Module\r\n// after the generated code, you will need to define   var Module = {};\r\n// before the code. Then that object will be used in the code, and you\r\n// can continue to use Module afterwards as well.\r\nvar Module = moduleArg;\r\n\r\n// Set up the promise that indicates the Module is initialized\r\nvar readyPromiseResolve, readyPromiseReject;\r\nModule['ready'] = new Promise((resolve, reject) => {\r\n  readyPromiseResolve = resolve;\r\n  readyPromiseReject = reject;\r\n});\r\n\r\n// --pre-jses are emitted after the Module integration code, so that they can\r\n// refer to Module (if they choose; they can also define Module)\r\n\r\n  var Module = typeof Module !== 'undefined' ? Module : {};\r\n\r\n  if (!Module.expectedDataFileDownloads) {\r\n    Module.expectedDataFileDownloads = 0;\r\n  }\r\n\r\n  Module.expectedDataFileDownloads++;\r\n  (function() {\r\n    // Do not attempt to redownload the virtual filesystem data when in a pthread or a Wasm Worker context.\r\n    if (Module['ENVIRONMENT_IS_PTHREAD'] || Module['$ww']) return;\r\n    var loadPackage = function(metadata) {\r\n\r\n      var PACKAGE_PATH = '';\r\n      if (typeof window === 'object') {\r\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');\r\n      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {\r\n        // web worker\r\n        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');\r\n      }\r\n      var PACKAGE_NAME = 'C:/Dev/EDGE-classic/web/site/edge-classic.data';\r\n      var REMOTE_PACKAGE_BASE = 'edge-classic.data';\r\n      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {\r\n        Module['locateFile'] = Module['locateFilePackage'];\r\n        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');\r\n      }\r\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\r\nvar REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\r\n\r\n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\r\n        \r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', packageName, true);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.onprogress = function(event) {\r\n          var url = packageName;\r\n          var size = packageSize;\r\n          if (event.total) size = event.total;\r\n          if (event.loaded) {\r\n            if (!xhr.addedTotal) {\r\n              xhr.addedTotal = true;\r\n              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};\r\n              Module.dataFileDownloads[url] = {\r\n                loaded: event.loaded,\r\n                total: size\r\n              };\r\n            } else {\r\n              Module.dataFileDownloads[url].loaded = event.loaded;\r\n            }\r\n            var total = 0;\r\n            var loaded = 0;\r\n            var num = 0;\r\n            for (var download in Module.dataFileDownloads) {\r\n            var data = Module.dataFileDownloads[download];\r\n              total += data.total;\r\n              loaded += data.loaded;\r\n              num++;\r\n            }\r\n            total = Math.ceil(total * Module.expectedDataFileDownloads/num);\r\n            if (Module['setStatus']) Module['setStatus'](`Downloading data... (${loaded}/${total})`);\r\n          } else if (!Module.dataFileDownloads) {\r\n            if (Module['setStatus']) Module['setStatus']('Downloading data...');\r\n          }\r\n        };\r\n        xhr.onerror = function(event) {\r\n          throw new Error(\"NetworkError for: \" + packageName);\r\n        }\r\n        xhr.onload = function(event) {\r\n          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n            var packageData = xhr.response;\r\n            callback(packageData);\r\n          } else {\r\n            throw new Error(xhr.statusText + \" : \" + xhr.responseURL);\r\n          }\r\n        };\r\n        xhr.send(null);\r\n      };\r\n\r\n      function handleError(error) {\r\n        console.error('package error:', error);\r\n      };\r\n\r\n    function runWithFS() {\r\n\r\n      function assert(check, msg) {\r\n        if (!check) throw msg + new Error().stack;\r\n      }\r\nModule['FS_createPath'](\"/\", \"edge_base\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"blasphemer\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer/graphics\", \"tome\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/blasphemer/scripts\", \"lua\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"chex\", true, true);\r\nModule['FS_createPath'](\"/edge_base/chex\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/chex/graphics\", \"chex_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/chex\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom1\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom1\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"doom2\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/doom2\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"freedoom1\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1/graphics\", \"freedoom_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"freedoom2\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2/graphics\", \"freedoom_font\", true, true);\r\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"hacx\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/hacx\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"harmony\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony/scripts\", \"lua\", true, true);\r\nModule['FS_createPath'](\"/edge_base/harmony\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"heretic\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"skull\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"tome\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"wings\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic/scripts\", \"lua\", true, true);\r\nModule['FS_createPath'](\"/edge_base/heretic\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"plutonia\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/plutonia\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"rekkr\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/rekkr\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"strife\", true, true);\r\nModule['FS_createPath'](\"/edge_base\", \"tnt\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_base/tnt\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/\", \"edge_defs\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"colormaps\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"graphics\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"crosshairs\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"edge1_font\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/graphics\", \"overlays\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"movies\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"scripts\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/scripts\", \"lua\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/scripts/lua\", \"core\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"sounds\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"sprites\", true, true);\r\nModule['FS_createPath'](\"/edge_defs/sprites\", \"mbf_dog\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"textures\", true, true);\r\nModule['FS_createPath'](\"/edge_defs\", \"ttf\", true, true);\r\nModule['FS_createPath'](\"/\", \"soundfont\", true, true);\r\n\r\n        var PACKAGE_UUID = metadata['package_uuid'];\r\n        var indexedDB;\r\n        if (typeof window === 'object') {\r\n          indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        } else if (typeof location !== 'undefined') {\r\n          // worker\r\n          indexedDB = self.indexedDB;\r\n        } else {\r\n          throw 'using IndexedDB to cache data can only be done on a web page or in a web worker';\r\n        }\r\n        var IDB_RO = \"readonly\";\r\n        var IDB_RW = \"readwrite\";\r\n        var DB_NAME = \"EM_PRELOAD_CACHE\";\r\n        var DB_VERSION = 1;\r\n        var METADATA_STORE_NAME = 'METADATA';\r\n        var PACKAGE_STORE_NAME = 'PACKAGES';\r\n        function openDatabase(callback, errback) {\r\n          try {\r\n            var openRequest = indexedDB.open(DB_NAME, DB_VERSION);\r\n          } catch (e) {\r\n            return errback(e);\r\n          }\r\n          openRequest.onupgradeneeded = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n\r\n            if (db.objectStoreNames.contains(PACKAGE_STORE_NAME)) {\r\n              db.deleteObjectStore(PACKAGE_STORE_NAME);\r\n            }\r\n            var packages = db.createObjectStore(PACKAGE_STORE_NAME);\r\n\r\n            if (db.objectStoreNames.contains(METADATA_STORE_NAME)) {\r\n              db.deleteObjectStore(METADATA_STORE_NAME);\r\n            }\r\n            var metadata = db.createObjectStore(METADATA_STORE_NAME);\r\n          };\r\n          openRequest.onsuccess = function(event) {\r\n            var db = /** @type {IDBDatabase} */ (event.target.result);\r\n            callback(db);\r\n          };\r\n          openRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        };\r\n\r\n        // This is needed as chromium has a limit on per-entry files in IndexedDB\r\n        // https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177\r\n        // https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60\r\n        // We set the chunk size to 64MB to stay well-below the limit\r\n        var CHUNK_SIZE = 64 * 1024 * 1024;\r\n\r\n        function cacheRemotePackage(\r\n          db,\r\n          packageName,\r\n          packageData,\r\n          packageMeta,\r\n          callback,\r\n          errback\r\n        ) {\r\n          var transactionPackages = db.transaction([PACKAGE_STORE_NAME], IDB_RW);\r\n          var packages = transactionPackages.objectStore(PACKAGE_STORE_NAME);\r\n          var chunkSliceStart = 0;\r\n          var nextChunkSliceStart = 0;\r\n          var chunkCount = Math.ceil(packageData.byteLength / CHUNK_SIZE);\r\n          var finishedChunks = 0;\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            nextChunkSliceStart += CHUNK_SIZE;\r\n            var putPackageRequest = packages.put(\r\n              packageData.slice(chunkSliceStart, nextChunkSliceStart),\r\n              `package/${packageName}/${chunkId}`\r\n            );\r\n            chunkSliceStart = nextChunkSliceStart;\r\n            putPackageRequest.onsuccess = function(event) {\r\n              finishedChunks++;\r\n              if (finishedChunks == chunkCount) {\r\n                var transaction_metadata = db.transaction(\r\n                  [METADATA_STORE_NAME],\r\n                  IDB_RW\r\n                );\r\n                var metadata = transaction_metadata.objectStore(METADATA_STORE_NAME);\r\n                var putMetadataRequest = metadata.put(\r\n                  {\r\n                    'uuid': packageMeta.uuid,\r\n                    'chunkCount': chunkCount\r\n                  },\r\n                  `metadata/${packageName}`\r\n                );\r\n                putMetadataRequest.onsuccess = function(event) {\r\n                  callback(packageData);\r\n                };\r\n                putMetadataRequest.onerror = function(error) {\r\n                  errback(error);\r\n                };\r\n              }\r\n            };\r\n            putPackageRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n        /* Check if there's a cached package, and if so whether it's the latest available */\r\n        function checkCachedPackage(db, packageName, callback, errback) {\r\n          var transaction = db.transaction([METADATA_STORE_NAME], IDB_RO);\r\n          var metadata = transaction.objectStore(METADATA_STORE_NAME);\r\n          var getRequest = metadata.get(`metadata/${packageName}`);\r\n          getRequest.onsuccess = function(event) {\r\n            var result = event.target.result;\r\n            if (!result) {\r\n              return callback(false, null);\r\n            } else {\r\n              return callback(PACKAGE_UUID === result['uuid'], result);\r\n            }\r\n          };\r\n          getRequest.onerror = function(error) {\r\n            errback(error);\r\n          };\r\n        }\r\n\r\n        function fetchCachedPackage(db, packageName, metadata, callback, errback) {\r\n          var transaction = db.transaction([PACKAGE_STORE_NAME], IDB_RO);\r\n          var packages = transaction.objectStore(PACKAGE_STORE_NAME);\r\n\r\n          var chunksDone = 0;\r\n          var totalSize = 0;\r\n          var chunkCount = metadata['chunkCount'];\r\n          var chunks = new Array(chunkCount);\r\n\r\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\r\n            var getRequest = packages.get(`package/${packageName}/${chunkId}`);\r\n            getRequest.onsuccess = function(event) {\r\n              // If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now\r\n              if (chunkCount == 1) {\r\n                callback(event.target.result);\r\n              } else {\r\n                chunksDone++;\r\n                totalSize += event.target.result.byteLength;\r\n                chunks.push(event.target.result);\r\n                if (chunksDone == chunkCount) {\r\n                  if (chunksDone == 1) {\r\n                    callback(event.target.result);\r\n                  } else {\r\n                    var tempTyped = new Uint8Array(totalSize);\r\n                    var byteOffset = 0;\r\n                    for (var chunkId in chunks) {\r\n                      var buffer = chunks[chunkId];\r\n                      tempTyped.set(new Uint8Array(buffer), byteOffset);\r\n                      byteOffset += buffer.byteLength;\r\n                      buffer = undefined;\r\n                    }\r\n                    chunks = undefined;\r\n                    callback(tempTyped.buffer);\r\n                    tempTyped = undefined;\r\n                  }\r\n                }\r\n              }\r\n            };\r\n            getRequest.onerror = function(error) {\r\n              errback(error);\r\n            };\r\n          }\r\n        }\r\n\r\n      function processPackageData(arrayBuffer) {\r\n        assert(arrayBuffer, 'Loading data file failed.');\r\n        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');\r\n        var byteArray = new Uint8Array(arrayBuffer);\r\n        var curr;\r\n        var compressedData = {\"data\":null,\"cachedOffset\":55402926,\"cachedIndexes\":[-1,-1],\"cachedChunks\":[null,null],\"offsets\":[0,1547,2815,4214,5880,7928,9976,12005,13715,15652,17448,19214,20925,21899,22610,23371,24335,25282,26256,27160,28116,28996,29986,30906,31819,32706,33555,34472,35413,36122,37036,37880,38882,39961,41038,41920,42726,44069,45343,46610,48077,48640,49173,49781,50405,50996,51569,52690,53688,54665,55726,56238,57121,57945,58764,59817,60856,61792,62992,63704,64252,64807,65519,66117,66792,67527,68767,69233,69993,70629,71301,72047,72675,73502,74523,75511,76682,77572,78128,78727,79239,79805,80403,81125,81788,82684,83397,84195,84840,85760,86899,87734,88640,89501,90512,91521,92242,93296,93968,94924,95786,96486,97474,98409,99320,99781,100269,101067,101885,102788,103224,103892,104874,105498,106188,106743,107314,108011,108914,109840,110711,111327,112012,112722,113982,115431,115476,115520,115668,115897,116173,116546,117008,117583,118246,119130,120152,121242,122593,124002,125382,126829,128271,129618,131034,132432,133894,135487,137117,138759,140341,141967,143463,145037,146539,148011,149543,150973,152370,153894,155457,157196,158901,160581,162218,163848,165495,167167,168719,170125,171548,173018,174388,175580,176679,177802,178862,179970,181046,182098,183154,184170,185276,187324,188741,190152,191514,192843,194124,195422,196742,198021,199372,200668,202005,203241,204478,205810,206943,207934,208941,209924,210868,211730,212527,213411,214509,215633,216803,218148,219624,221335,222918,224465,226078,227611,229029,230438,231510,232708,234043,235413,236945,238361,239634,240643,241627,242741,243923,245135,246363,247619,248871,250088,251362,252661,254031,255308,256652,257969,259338,261365,262889,264231,265314,266140,267500,268700,269801,270716,271649,272546,273436,274305,275429,276926,278469,279842,281247,282752,284059,285417,286863,288396,289798,291248,292645,294128,295571,296775,297979,299137,300448,301948,303600,305307,306982,308435,309868,311332,312899,314413,315827,317304,318714,320024,321365,322514,323566,324361,325292,326466,327758,329093,330501,331871,333248,334658,335996,337830,338737,338785,338834,338921,338980,339076,339124,339298,339573,339954,340408,341015,341647,342261,342932,343691,344472,345758,347212,348731,350168,351653,353357,354924,356486,358144,359755,361444,363100,364804,366606,368275,369877,371499,373190,374850,376296,377803,379244,380527,381412,382261,383005,383635,384222,384793,385367,385943,386463,386809,387151,387370,387477,387559,387604,387649,387697,388622,390036,390083,390128,390174,390222,390271,390318,390363,390409,390457,390506,390618,390964,392157,393528,394905,396331,397748,399116,400287,401356,402416,403209,403809,404714,405561,406320,407144,408015,408989,409958,410814,411614,412367,413119,414095,414938,415749,416540,417332,418072,418818,419512,420123,420491,420623,420668,420713,420758,420806,420855,420900,420945,420990,421038,421087,421132,421549,423457,423503,423551,423600,423647,423692,423737,424531,425607,426676,427768,428842,429875,430939,432027,433010,434114,435255,436471,437917,439564,441259,443028,444640,446095,447535,448932,450262,451340,452556,453924,455177,456438,457686,459060,460589,462195,463637,465193,466878,468428,469862,471430,472994,474509,475613,476593,477529,478667,479922,480931,481614,481656,481705,481750,481795,481840,481882,483834,484203,484248,484333,484523,484771,485123,485549,486092,486724,487497,488544,489674,490937,492430,493817,495280,496889,498453,500076,501600,503264,504981,506740,508525,510296,512043,513746,515408,517062,518664,520178,521759,523290,524779,526288,528063,529853,531573,533260,534932,536577,538234,539842,541291,542663,544178,545681,546996,548113,549233,550340,551421,552485,553544,554569,555588,556518,558170,560218,561886,562874,563864,564702,565598,566604,567583,568473,569431,570298,571223,572040,572927,573984,575274,576635,577899,579193,580577,581974,583386,584771,586223,587651,588996,590178,591186,592210,593128,594268,595407,596573,597611,598787,599755,600827,602092,603333,604574,605864,607071,608193,609394,610542,611697,613004,614286,615627,616913,618184,619478,620769,622051,623327,624632,625956,627375,628832,630140,631388,632657,634012,635347,636712,638103,639542,641002,642422,643832,645158,646459,647817,649201,650574,651950,653349,654747,656053,657288,658449,659652,660855,662118,663397,664554,665672,666900,667953,669041,669978,671453,672880,674148,675403,676697,678063,679416,680795,682242,683701,685113,686542,687883,689153,690516,691903,693285,694648,696025,697373,698747,699996,701199,702402,703584,704850,706110,707281,708404,709656,710764,711804,712818,713944,715834,716757,717776,718649,719533,720507,721485,722399,723315,724255,725172,725990,726883,727883,729163,730458,731724,732971,734374,735753,737210,738625,740122,741551,742957,744186,745191,746213,747133,748218,749293,750504,751552,752714,753744,754727,756022,757264,758464,759762,760970,762084,763275,764443,765574,766827,768091,769410,770713,771959,773219,774526,775818,777114,778418,779688,781125,782589,784637,785067,785141,786343,787623,788714,789589,790788,791960,792248,792320,794111,795568,796652,797642,798664,799681,800907,802161,803517,804721,805949,807329,808598,810016,811432,812824,814122,815402,816885,818550,820079,821522,822965,824363,825808,827287,828721,830225,831745,833248,834645,836054,837572,839060,840607,842267,843962,845603,847120,848639,850182,851749,853331,854795,856280,857707,859201,860615,861967,863155,864359,865581,866767,868055,869379,870566,871720,872885,874531,876239,877381,878488,879398,880435,881548,882760,883900,884998,885986,887018,887982,888953,890079,891294,892540,893754,894794,895919,897167,898625,899868,901261,902456,903624,905124,906657,908270,909924,911580,913218,914796,916328,917919,919556,921248,922999,924662,926301,927787,929229,930559,931955,933345,934714,936214,937831,939423,940947,942459,943882,945310,946720,948132,949509,950839,952202,953794,955600,956315,957040,957928,958853,959844,960908,961930,963112,964288,965473,966692,967941,969128,970488,971888,973225,974697,976154,977609,979149,980628,982122,983691,985404,987062,988632,990274,991944,993691,995432,997205,999059,1000811,1002410,1004033,1005685,1007315,1009017,1010757,1012475,1014229,1015948,1017617,1019270,1020862,1022638,1024440,1026188,1027932,1029609,1031341,1033064,1034608,1035859,1037022,1037924,1038643,1039907,1041007,1042656,1044252,1045833,1047433,1048896,1048941,1048986,1049034,1049083,1049128,1049228,1050149,1051267,1052365,1053448,1054474,1055519,1056692,1057739,1058747,1059852,1060967,1062225,1063684,1065384,1067059,1068853,1070417,1071840,1073353,1074711,1075986,1077014,1078281,1079637,1080887,1082125,1083387,1084797,1086342,1087905,1089347,1090974,1092655,1094141,1095643,1097194,1098802,1100234,1101272,1102262,1103245,1104413,1105622,1106605,1107099,1107144,1107189,1107238,1107283,1107328,1107697,1109647,1109695,1109744,1109789,1109834,1109879,1109927,1109976,1110021,1110066,1110111,1110195,1110485,1111380,1112830,1114119,1115582,1116987,1118388,1119644,1120685,1121795,1122646,1123284,1124054,1124942,1125714,1126545,1127376,1128323,1129289,1130186,1131013,1131755,1132481,1133427,1134356,1135160,1135953,1136765,1137594,1138342,1139017,1139564,1140029,1140210,1140258,1140307,1140352,1140397,1140442,1140490,1140539,1140584,1140622,1140667,1140715,1140764,1142664,1143771,1144709,1145576,1146688,1147772,1148777,1149763,1150782,1151820,1152781,1153657,1154674,1155703,1156809,1157759,1158943,1160307,1161686,1163130,1164650,1166133,1167734,1169221,1170521,1171842,1173162,1174568,1175903,1177171,1178567,1179751,1180909,1181898,1182978,1184219,1185661,1187143,1188596,1189955,1191170,1192323,1193522,1194647,1196039,1197213,1198201,1199289,1200496,1201524,1202439,1203312,1204280,1205314,1206342,1207384,1208391,1209402,1211041,1211959,1212001,1212050,1212095,1212140,1212185,1212422,1213027,1213903,1214847,1216025,1217544,1219246,1220961,1222759,1224488,1226209,1227937,1229692,1231448,1233284,1235135,1236912,1238638,1240074,1241431,1242777,1244190,1245965,1247801,1249638,1251539,1253442,1255382,1257310,1259187,1261033,1262937,1264812,1266615,1268384,1270133,1271795,1273615,1275511,1277132,1278562,1279949,1281165,1281808,1281963,1282011,1282060,1282105,1282146,1282191,1282239,1282736,1283471,1284677,1285903,1287132,1287846,1288578,1289708,1290834,1292890,1294314,1295785,1297235,1298753,1300274,1301801,1303335,1304836,1306337,1307881,1309530,1311350,1313224,1315194,1317180,1319182,1321183,1323190,1325231,1327226,1329174,1331043,1332799,1334597,1336487,1338426,1340317,1342336,1344362,1346233,1348063,1349917,1351694,1353386,1355126,1356871,1358707,1360569,1362491,1364441,1366452,1368464,1370473,1372440,1374243,1375839,1377345,1378853,1380342,1381854,1383380,1384884,1386364,1387834,1389267,1390726,1392162,1394184,1395658,1396966,1398228,1399500,1400805,1402089,1403441,1404752,1406016,1407289,1408614,1409774,1411111,1412510,1413916,1415301,1416701,1418158,1419578,1421040,1422560,1424083,1425563,1427116,1428655,1430206,1431881,1433486,1435104,1436675,1438272,1439818,1441372,1442869,1444437,1446138,1447830,1449439,1451142,1452636,1453994,1455388,1456796,1458027,1459238,1460507,1461815,1463051,1464193,1465364,1466610,1467782,1469023,1470214,1471463,1472743,1473997,1475857,1477353,1478394,1479544,1480670,1481761,1482740,1483787,1484873,1485928,1487084,1488210,1489339,1490537,1491830,1493189,1494663,1496165,1497739,1499327,1500859,1502491,1504063,1505477,1506883,1508478,1510074,1511602,1513149,1514575,1515998,1517375,1518683,1519988,1521358,1522576,1523982,1525412,1526916,1528429,1529928,1531436,1532775,1533996,1535181,1536177,1537242,1538266,1539420,1540588,1541763,1542733,1543614,1544649,1545642,1546537,1547477,1548501,1550021,1551913,1553459,1555038,1556593,1558210,1559821,1561474,1563131,1564663,1566256,1567879,1569564,1571083,1572531,1574115,1575698,1577268,1578968,1580662,1582230,1583842,1585447,1586901,1588371,1589803,1591415,1592992,1594446,1595935,1597502,1599053,1600596,1602117,1603676,1605274,1606877,1608539,1610197,1611894,1613442,1614958,1616641,1618279,1619813,1621250,1622444,1623924,1625469,1626985,1628437,1629948,1631549,1633203,1634908,1636625,1638170,1639700,1641402,1643449,1644447,1645422,1646355,1647451,1648558,1649685,1650778,1651838,1652880,1653945,1655111,1656287,1657416,1658530,1659618,1660792,1661912,1663094,1664291,1665506,1666766,1668078,1669394,1670633,1671752,1672899,1673960,1675008,1675994,1676986,1678047,1679116,1680032,1680993,1681906,1682867,1683798,1684836,1685902,1686895,1687951,1688974,1689940,1690942,1691879,1692897,1693893,1694867,1695926,1697024,1698184,1699302,1700368,1701428,1702374,1703288,1704154,1706153,1707615,1708952,1710213,1711496,1712798,1714071,1715436,1716736,1717995,1719283,1720608,1721730,1722960,1724267,1725594,1726896,1728210,1729545,1730875,1732305,1733830,1735489,1737108,1738640,1739970,1741288,1742768,1744342,1745971,1747700,1749359,1750880,1752241,1753566,1754975,1756447,1757956,1759446,1760943,1762390,1763746,1765122,1766525,1767748,1768961,1770227,1771519,1772758,1773915,1775092,1776341,1777498,1778738,1779936,1781204,1782494,1783724,1785592,1787367,1788935,1790531,1792129,1793736,1795323,1796838,1798465,1800070,1801622,1803200,1804859,1806629,1808398,1810190,1811979,1813596,1815233,1816831,1818596,1820402,1822270,1824055,1825843,1827739,1829598,1831398,1833294,1835058,1836868,1838577,1840335,1842067,1843819,1845494,1847189,1848822,1850615,1852526,1854241,1856016,1857299,1858649,1860005,1861265,1862729,1864234,1865716,1867216,1868741,1870279,1871770,1873313,1874841,1876295,1877730,1879264,1881052,1882666,1883461,1884249,1885105,1886036,1886857,1887548,1888428,1889341,1890141,1890982,1891757,1892668,1893679,1894869,1896137,1897352,1898700,1899933,1901313,1902847,1904411,1905928,1907538,1909176,1910804,1912392,1914016,1915599,1917229,1918847,1920381,1921846,1923291,1924825,1926367,1927929,1929421,1930862,1932351,1933761,1935091,1936391,1937549,1938733,1939931,1941147,1942183,1943205,1944225,1945305,1946300,1947321,1948302,1949269,1950321,1951077,1952060,1954104,1955781,1957621,1959503,1961353,1963160,1964988,1966813,1968648,1970403,1972086,1973644,1975137,1976539,1978592,1980283,1982136,1984019,1985909,1987767,1989636,1991560,1993465,1995191,1996909,1998488,2000027,2001489,2003439,2005295,2007134,2009020,2010910,2012839,2014659,2016448,2018096,2019604,2021052,2022606,2024226,2025848,2027721,2029432,2031273,2033242,2034875,2036868,2038844,2040505,2042513,2044396,2045765,2047166,2048799,2050269,2051801,2053800,2055295,2056623,2058304,2059850,2061338,2063098,2064926,2066304,2067767,2069405,2070935,2072448,2074501,2076208,2077864,2079536,2081269,2083058,2084799,2086528,2088314,2090091,2091926,2093739,2095629,2097398,2099145,2100949,2102734,2104545,2106367,2108187,2109963,2111847,2113643,2115411,2117195,2118967,2120705,2122475,2124154,2125927,2127733,2129470,2131225,2133015,2134845,2136612,2138375,2140118,2141823,2143555,2145262,2146994,2148726,2150447,2152146,2153762,2155607,2157469,2159366,2161199,2163027,2164848,2166730,2168604,2170447,2172230,2173912,2175483,2177456,2179482,2181412,2183323,2185243,2187207,2189108,2191016,2192934,2194854,2196728,2198585,2200513,2202390,2204246,2206023,2207769,2209540,2211340,2213179,2214944,2216796,2218572,2220456,2222280,2224093,2225860,2227631,2229336,2230952,2232518,2234088,2235771,2237555,2239352,2241082,2242840,2244508,2246197,2247948,2249639,2251390,2253189,2254984,2256780,2258496,2260379,2262271,2264191,2266101,2267918,2269735,2271610,2273526,2275431,2277355,2279265,2281164,2283130,2285178,2287125,2289079,2291102,2293105,2295098,2297109,2299089,2301041,2302970,2304890,2306876,2308877,2310834,2312762,2314680,2316661,2318621,2320589,2322529,2324568,2326584,2328594,2330484,2332414,2334312,2336236,2338126,2339852,2341660,2343426,2345275,2347186,2349127,2351096,2353060,2355040,2357008,2358967,2360873,2362851,2364842,2366724,2368557,2370396,2372272,2374126,2375960,2377762,2379538,2381366,2383224,2385012,2386747,2388391,2389950,2391389,2392890,2393582,2395630,2397678,2399726,2401774,2403822,2405870,2407918,2409975,2412023,2414071,2416119,2418167,2420215,2422263,2424311,2426359,2428407,2430455,2432503,2434551,2436599,2438647,2440695,2442743,2444791,2446839,2448887,2450935,2452983,2455031,2457079,2459127,2461175,2463223,2465271,2467319,2469367,2471415,2473463,2475511,2477559,2479607,2481655,2483703,2485751,2487799,2489847,2491895,2493943,2495991,2498039,2500087,2502135,2504183,2506231,2508279,2510327,2512375,2514423,2516471,2518519,2520567,2522615,2524663,2526711,2528759,2530807,2532855,2534903,2536951,2538999,2541047,2543095,2545143,2547191,2549239,2551287,2553335,2555383,2557431,2559479,2561527,2563575,2565623,2567671,2569719,2571767,2573815,2575863,2577911,2579959,2582007,2584055,2586103,2588151,2590208,2592256,2594304,2596352,2598400,2600448,2602496,2604544,2606592,2608640,2610688,2612736,2614784,2616841,2618896,2620944,2622992,2625048,2627096,2629144,2631192,2633240,2635297,2637345,2639393,2641441,2643489,2645537,2647585,2649633,2651681,2653729,2655777,2657825,2659873,2661921,2663969,2666017,2668065,2670122,2672170,2674218,2676266,2678314,2680362,2682410,2684458,2686506,2688554,2690602,2692650,2694698,2696746,2698794,2700842,2702890,2704938,2706986,2709034,2711082,2713130,2715178,2717226,2719274,2721322,2723370,2725418,2727466,2729514,2731562,2733610,2735658,2737706,2739754,2741811,2743859,2745907,2747955,2750003,2752051,2754099,2756147,2758195,2760243,2762291,2764339,2766387,2768435,2770483,2772531,2774579,2776627,2778675,2780723,2782771,2784819,2786867,2788915,2790963,2793011,2795059,2797107,2799155,2801203,2803251,2805299,2807347,2809395,2811443,2813491,2815539,2817587,2819635,2821683,2823731,2825779,2827827,2829875,2831923,2833971,2836019,2838067,2840115,2842163,2844211,2846259,2848307,2850355,2852403,2854451,2856499,2858547,2860595,2862643,2864691,2866739,2868787,2870835,2872883,2874931,2876979,2879027,2881075,2883123,2885171,2887219,2889267,2891315,2893363,2895411,2897459,2899507,2901555,2903603,2905651,2907699,2909747,2911795,2913843,2915891,2917913,2919361,2920750,2922162,2923699,2925240,2926744,2928163,2929643,2930889,2932103,2933506,2935015,2936296,2937489,2938879,2940340,2941871,2943311,2944769,2946161,2947580,2948940,2950456,2951932,2953394,2954891,2956383,2957885,2959336,2960901,2962419,2963958,2965487,2966968,2968578,2970075,2971625,2973144,2974604,2976117,2977693,2979256,2980624,2982092,2983455,2985110,2986749,2988388,2990038,2991609,2993163,2994824,2996506,2998045,2999601,3001243,3002742,3004790,3005989,3007037,3008246,3009335,3010375,3011382,3012455,3013565,3014634,3015791,3016932,3018143,3019348,3020695,3022053,3023559,3025083,3026676,3028219,3029742,3031358,3032857,3034261,3035776,3037385,3038915,3040447,3041970,3043351,3044811,3046142,3047479,3048811,3050128,3051413,3052860,3054282,3055834,3057363,3058847,3060309,3061594,3062834,3063927,3064938,3065967,3066999,3068161,3069316,3070459,3071364,3072326,3073357,3074296,3075179,3076188,3077239,3079051,3080505,3081581,3082696,3083793,3084888,3085876,3086934,3088022,3089108,3090221,3091392,3092718,3093957,3095225,3096836,3098355,3099784,3101360,3102841,3104304,3105918,3107517,3108974,3110519,3112097,3113720,3115141,3116641,3118109,3119748,3121365,3123117,3124937,3126832,3128606,3130241,3132045,3133793,3135447,3137009,3138631,3139931,3141270,3142518,3143430,3144535,3145625,3146800,3147963,3149105,3150098,3150984,3152020,3152986,3153893,3154859,3155898,3157470,3159355,3160847,3162367,3163886,3165441,3166972,3168432,3169943,3171474,3172973,3174519,3176093,3177791,3179528,3181316,3183074,3184769,3186298,3187941,3189626,3191366,3193252,3194962,3196667,3198525,3200279,3202001,3203937,3205548,3207263,3209041,3210753,3212447,3214206,3215759,3217331,3218991,3220665,3222534,3224272,3226038,3227280,3228641,3230016,3231236,3232617,3234046,3235532,3236983,3238429,3239878,3241349,3242840,3244321,3245718,3247114,3248535,3250156,3252194,3253860,3255552,3257218,3258970,3260739,3262485,3264221,3266015,3267817,3269637,3271452,3273359,3275102,3276828,3278617,3280400,3282243,3284074,3285886,3287716,3289562,3291358,3293123,3294891,3296648,3298412,3300165,3301847,3303650,3305409,3307147,3308894,3310707,3312517,3314259,3316026,3317785,3319490,3321209,3322915,3324652,3326392,3328112,3329795,3331459,3333322,3335200,3337060,3338917,3340726,3342546,3344450,3346307,3348111,3349849,3351503,3353075,3353739,3355787,3357835,3359883,3361931,3363979,3366027,3368075,3370123,3372171,3374219,3376267,3378315,3380363,3382411,3384459,3386507,3388555,3390603,3392651,3394699,3396747,3398795,3400843,3402891,3404939,3406987,3409035,3411083,3413131,3415179,3417227,3419275,3421323,3423371,3425419,3427467,3429515,3431563,3433611,3435659,3437707,3439755,3441803,3443860,3445908,3447956,3450004,3452052,3454100,3456148,3458196,3460244,3462292,3464340,3466388,3468445,3470493,3472541,3474589,3476637,3478685,3480733,3482781,3484829,3486877,3488934,3490269,3491598,3492924,3494387,3495796,3497329,3498857,3500263,3501710,3503183,3504669,3506115,3507538,3508943,3510298,3511468,3512170,3513163,3514373,3515853,3517480,3519229,3521064,3522906,3524783,3526658,3528443,3530181,3531598,3533373,3535125,3536963,3538826,3540667,3542484,3544298,3546069,3547825,3549310,3550576,3551547,3552669,3554019,3555268,3556464,3557870,3559066,3560197,3561418,3562740,3564208,3565654,3567131,3568608,3570004,3571376,3572780,3574706,3576367,3577808,3579309,3580809,3582346,3583788,3585313,3586799,3588236,3589726,3591313,3592947,3594366,3595910,3597595,3599274,3600960,3602756,3604520,3606175,3607915,3609498,3611070,3612631,3614153,3615748,3617368,3618953,3620576,3622191,3623788,3625376,3626926,3628506,3630109,3631785,3633369,3635022,3636591,3638129,3639722,3641388,3643008,3644600,3646000,3647166,3648609,3650118,3651573,3652936,3654385,3655905,3657483,3659088,3660598,3661987,3663460,3665257,3667048,3668462,3669841,3671214,3672655,3673999,3675400,3676894,3678259,3679654,3681095,3682607,3683844,3685168,3686716,3688244,3689753,3691389,3693024,3694639,3696257,3697789,3699259,3700712,3702241,3703774,3705335,3706764,3708243,3709775,3711355,3712822,3714302,3715829,3717357,3718914,3720484,3722094,3723715,3725225,3726742,3728305,3729811,3731206,3732503,3733425,3734592,3735954,3737317,3738585,3739959,3741397,3742858,3744395,3745899,3747257,3748588,3750117,3752144,3753726,3755390,3757059,3758798,3760557,3762270,3764047,3765704,3767392,3769130,3770960,3772636,3774080,3775718,3777376,3779007,3780725,3782536,3784214,3785850,3787531,3789085,3790635,3792141,3793805,3795488,3796999,3798549,3800112,3801749,3803408,3805035,3806678,3808384,3810050,3811792,3813535,3815327,3816975,3818571,3820245,3821909,3823469,3824992,3826259,3827763,3829495,3831214,3832794,3834409,3836113,3837880,3839697,3841533,3843180,3844790,3846469,3848526,3849216,3849810,3850460,3851123,3851766,3852449,3853268,3854253,3855289,3856335,3857192,3858356,3859826,3861366,3862979,3864552,3865672,3867248,3868778,3870474,3872237,3873900,3875444,3877179,3878813,3880518,3882232,3883857,3885387,3887198,3888883,3890615,3892357,3894074,3895708,3897379,3899077,3900795,3902587,3904337,3905848,3907262,3908658,3909893,3911079,3912455,3913831,3915084,3916302,3917601,3918940,3920395,3921944,3923492,3925017,3926567,3928192,3929261,3931057,3933105,3935153,3937201,3939249,3941297,3943345,3945393,3947441,3949489,3951537,3953585,3955633,3957681,3959729,3961777,3963825,3965873,3967921,3969969,3972017,3974065,3976113,3978161,3980209,3982257,3984305,3986353,3988401,3990449,3992497,3994545,3996593,3998641,4000689,4002737,4004785,4006833,4008881,4010929,4012977,4015025,4017073,4019121,4021169,4023217,4025265,4027313,4029361,4031409,4033457,4035505,4037553,4039601,4041649,4043697,4045745,4047793,4049841,4051889,4053937,4055985,4058042,4060090,4062138,4064186,4066234,4068282,4070330,4072378,4074426,4076474,4078522,4080570,4082618,4084666,4086714,4088762,4090810,4092858,4094906,4096954,4099002,4101050,4103098,4105146,4107194,4109242,4111290,4113338,4115386,4117434,4119482,4121530,4123578,4125626,4127674,4129722,4131770,4133827,4135875,4137923,4139971,4142019,4144067,4146115,4148163,4150211,4152259,4154307,4156355,4158403,4160451,4162499,4164547,4166595,4168643,4170691,4172739,4174787,4176835,4178883,4180931,4182979,4185027,4187075,4189123,4191171,4193219,4195267,4197315,4199363,4201411,4203459,4205507,4207555,4209603,4211651,4213699,4215747,4217795,4219843,4221891,4223939,4225987,4228035,4230083,4232131,4234179,4236227,4238275,4240323,4242371,4244419,4246467,4248515,4250563,4252611,4254659,4256707,4258755,4260803,4262851,4264899,4266947,4268995,4271043,4273091,4275139,4277187,4279235,4281283,4283331,4285379,4287427,4289475,4291523,4293571,4295619,4297667,4299715,4301763,4303811,4305867,4307915,4309963,4311979,4313998,4316045,4318101,4320156,4322204,4324254,4326302,4328350,4330398,4332446,4334494,4336542,4338590,4340638,4342686,4344734,4346782,4348830,4350878,4352926,4354974,4357022,4359070,4361118,4363173,4365221,4367269,4369317,4371365,4373413,4375461,4377509,4379557,4381605,4383653,4385701,4387749,4389797,4391854,4393902,4395950,4397998,4400046,4402094,4404151,4406206,4408247,4410256,4412303,4414353,4416410,4418458,4420506,4422560,4424608,4426656,4428704,4430752,4432800,4434848,4436896,4438944,4440992,4443040,4445088,4447136,4449184,4451232,4453280,4455328,4457376,4459424,4461477,4463525,4465573,4467621,4469669,4471717,4473765,4475813,4477861,4479909,4481957,4484005,4486053,4488110,4490158,4492206,4494254,4496302,4498350,4500398,4502446,4504502,4506543,4508551,4510589,4512638,4514694,4516742,4518790,4520838,4522886,4524934,4526982,4529030,4531078,4533126,4535174,4537222,4539270,4541318,4543366,4545414,4547462,4549510,4551558,4553606,4555654,4557702,4559750,4561798,4563846,4565894,4567942,4569990,4572038,4574086,4576134,4578182,4580230,4582278,4584326,4586374,4588422,4590470,4592518,4594566,4596614,4598662,4600710,4602758,4604806,4606854,4608902,4610950,4612998,4615046,4617094,4619142,4621190,4623238,4625286,4627334,4629382,4631430,4633478,4635526,4637574,4639622,4641670,4643718,4645766,4647814,4649862,4651910,4653958,4656006,4658054,4660102,4662150,4664198,4666246,4668294,4670342,4672390,4674438,4676486,4678534,4680582,4682630,4684678,4686726,4688774,4690822,4692870,4694918,4696966,4699014,4701062,4703110,4705158,4707206,4709254,4711302,4713350,4715398,4717446,4719494,4721542,4723590,4725638,4727686,4729734,4731782,4733830,4735878,4737926,4739974,4742022,4744070,4746118,4748166,4750214,4752262,4754310,4756358,4758406,4760454,4762502,4764550,4766598,4768646,4770694,4772742,4774790,4776838,4778886,4780934,4782982,4785030,4787087,4789134,4791144,4793167,4795218,4797266,4799323,4801371,4803422,4805470,4807518,4809566,4811614,4813662,4815710,4817758,4819806,4821854,4823902,4825950,4827998,4830046,4832094,4834142,4836190,4838238,4840095,4841331,4842725,4844038,4845154,4846146,4847173,4848340,4849450,4850517,4851762,4852863,4854020,4855119,4856248,4857433,4858430,4859532,4860692,4861902,4863078,4864276,4865524,4866429,4867243,4868151,4869127,4870049,4870928,4871711,4872677,4873513,4874370,4875177,4875512,4875849,4876194,4877392,4878614,4880086,4881549,4883016,4884465,4885225,4886328,4887359,4888252,4889128,4889955,4891393,4892607,4894015,4895323,4896468,4897580,4898527,4899703,4900809,4901953,4903058,4904215,4905490,4906537,4907631,4908745,4909891,4910991,4912166,4913268,4914374,4915523,4916830,4917761,4918669,4919611,4920592,4921497,4922325,4923168,4924087,4924947,4925941,4926784,4927120,4927458,4927799,4929029,4930266,4931747,4933186,4934620,4935957,4936932,4938041,4938888,4939785,4940661,4941549,4943535,4944020,4944068,4944117,4944178,4944252,4944378,4944531,4944734,4944903,4945089,4945344,4945587,4945969,4946784,4947789,4948775,4949799,4951102,4952669,4954270,4955873,4957525,4959194,4960949,4962722,4964442,4965978,4967540,4969142,4970808,4972463,4974172,4975960,4977711,4979296,4980969,4982548,4984177,4985813,4987254,4988156,4989132,4990027,4990760,4991168,4991402,4991562,4991689,4991799,4991959,4992111,4992205,4992280,4992325,4992370,4992415,4992463,4992867,4993673,4995240,4996200,4996343,4996551,4996801,4997014,4997272,4997693,4998104,4998488,4998876,4999176,4999460,4999942,5000730,5001675,5002543,5003599,5004699,5006191,5007893,5009615,5011429,5013177,5015029,5016870,5018696,5020343,5022026,5023737,5025507,5027365,5029205,5031102,5032954,5034688,5036541,5038445,5040319,5042148,5043974,5044944,5045923,5046826,5047667,5048315,5048699,5049025,5049385,5049747,5050148,5050515,5050853,5051027,5051187,5051394,5051647,5051797,5052787,5054651,5055909,5057293,5058525,5059735,5061136,5062536,5063867,5065271,5066600,5068011,5069485,5070983,5072390,5073830,5075263,5076765,5078268,5079652,5081192,5082610,5083960,5085337,5086742,5088122,5089283,5090427,5091749,5093123,5094437,5095795,5097170,5098462,5099723,5101144,5102515,5103805,5105124,5106557,5108094,5109489,5110997,5112398,5113761,5115121,5116513,5117937,5119420,5120784,5122131,5123540,5124760,5126089,5127507,5128787,5129951,5131142,5132530,5133429,5134444,5135199,5137207,5137744,5137793,5137838,5137883,5138688,5139634,5140732,5141852,5143227,5144810,5146090,5147734,5149572,5151362,5153002,5154703,5156396,5157168,5158404,5159954,5161704,5163500,5165306,5167090,5168903,5170715,5172431,5174020,5175698,5177380,5179294,5181114,5182999,5184830,5186642,5188409,5190314,5192174,5194038,5195923,5197667,5199280,5200864,5202419,5204182,5205544,5206807,5208135,5209364,5210606,5211682,5212692,5213532,5213907,5213952,5213996,5214045,5214681,5215441,5216393,5217186,5217925,5218975,5220322,5221645,5222873,5223856,5224517,5225495,5226287,5227331,5228170,5228899,5229580,5230307,5230998,5231714,5232439,5233366,5234239,5235143,5236073,5236950,5237907,5238776,5239598,5240193,5241134,5242129,5243029,5243928,5244882,5245373,5246103,5246880,5247622,5248341,5249084,5249985,5250792,5251758,5252397,5253102,5253934,5254763,5255564,5256416,5257249,5258171,5259067,5259917,5260746,5261575,5262414,5263266,5264314,5265092,5265959,5267738,5269210,5270725,5272164,5273846,5275444,5276967,5278580,5280114,5281640,5283147,5284816,5286444,5287979,5289552,5291125,5292462,5293966,5295602,5297214,5298769,5300272,5301757,5303257,5304985,5306686,5308176,5309677,5311037,5312166,5313359,5314668,5316049,5317197,5318297,5319493,5320630,5321724,5322958,5324202,5325512,5326653,5327484,5328316,5329001,5330849,5332331,5333762,5335231,5336637,5337927,5339273,5340519,5341717,5343054,5344400,5345659,5346807,5347732,5348648,5349298,5350099,5351974,5353462,5354979,5356430,5357888,5359247,5360557,5361780,5362967,5364289,5365615,5366876,5367881,5368684,5369428,5370063,5371762,5373284,5374783,5376185,5377658,5379035,5380287,5381696,5382868,5384152,5385538,5386851,5388063,5389175,5390100,5391002,5391677,5392532,5394413,5395869,5397357,5398763,5400217,5401732,5403220,5404655,5405877,5406889,5407711,5408477,5409324,5410203,5411079,5412542,5414148,5415664,5417077,5418524,5419865,5421105,5422495,5423668,5424936,5426293,5427606,5428817,5429860,5430799,5431636,5432293,5433648,5435453,5436946,5438361,5439582,5440746,5442171,5443637,5445017,5446009,5446965,5448255,5449989,5451529,5453105,5454520,5455785,5456883,5458372,5459824,5461090,5462142,5463387,5464708,5466003,5467059,5467997,5469811,5471529,5473358,5475180,5476899,5478590,5479906,5481702,5483626,5485476,5487163,5489035,5490948,5492426,5493588,5494894,5496254,5497644,5498964,5500930,5502417,5503707,5505022,5506395,5507811,5509220,5510809,5511733,5512622,5513654,5515498,5516647,5517465,5518355,5519937,5521494,5522755,5524377,5526057,5527568,5529254,5531001,5532866,5534105,5535583,5537319,5538851,5540450,5542291,5544107,5545914,5547110,5548664,5550410,5551953,5553656,5555548,5557413,5559057,5560300,5561887,5563610,5565203,5566983,5568866,5570759,5572228,5573525,5575161,5576903,5578475,5580152,5582048,5583948,5585474,5586832,5588424,5590151,5591667,5593320,5595175,5597087,5598516,5599834,5601467,5603144,5604651,5606355,5608148,5609990,5611226,5612711,5614427,5615974,5617559,5619307,5621044,5622681,5623908,5625484,5627187,5628693,5630360,5632154,5634058,5635366,5636717,5638411,5640008,5641547,5643321,5645165,5646792,5648424,5649954,5651601,5653154,5654680,5656339,5657932,5659509,5661031,5662639,5664105,5665704,5667331,5668816,5670416,5671843,5673321,5674816,5676118,5677754,5679250,5680476,5681587,5682674,5684006,5685336,5686458,5687711,5689329,5690874,5692219,5693554,5694882,5696272,5697763,5698982,5700347,5701496,5702815,5704651,5704950,5704998,5705047,5705092,5705130,5705196,5705534,5706145,5706886,5707722,5708637,5709651,5710602,5711654,5712580,5713679,5714830,5716052,5717395,5718597,5719854,5721223,5722386,5723572,5724753,5725733,5726959,5728044,5729205,5730396,5731422,5732356,5733313,5734151,5734797,5735501,5736204,5736639,5736684,5736728,5736773,5736821,5736870,5737731,5738908,5739641,5740398,5741473,5742675,5744032,5745054,5746022,5747070,5748046,5748855,5749523,5750298,5751283,5752252,5753307,5754497,5755640,5756802,5758043,5759308,5760476,5761826,5763193,5764509,5765873,5767194,5768534,5769778,5770719,5771577,5772217,5772736,5773241,5773961,5774856,5775679,5776473,5777337,5778321,5779372,5780230,5781190,5782250,5783280,5784271,5785411,5786161,5787253,5788581,5789300,5790631,5791642,5792370,5793548,5794950,5795620,5796414,5797532,5799379,5800540,5801806,5803191,5804584,5806073,5807536,5809146,5810864,5812654,5814466,5816271,5818090,5819802,5821564,5823216,5824877,5826649,5828295,5829950,5831559,5833201,5834830,5836286,5837914,5839613,5841240,5842801,5844367,5845944,5847525,5848971,5850215,5851284,5852592,5854225,5855753,5857355,5858889,5860385,5861732,5863121,5864571,5866432,5867404,5868107,5869144,5870266,5871388,5872641,5873998,5875359,5876626,5878114,5879582,5880895,5881742,5882608,5883672,5884992,5886421,5887683,5888896,5890151,5891307,5892509,5893655,5894866,5896189,5897422,5898697,5900098,5901410,5902640,5903980,5905372,5906686,5907992,5909216,5910479,5911677,5912717,5913696,5914784,5915943,5917211,5918391,5919868,5920420,5921521,5922479,5923629,5924551,5925857,5927791,5928657,5929640,5930489,5932361,5933189,5934078,5934824,5935896,5936988,5938024,5938972,5940010,5941220,5942538,5944043,5945691,5947318,5948971,5950489,5951813,5953239,5954743,5956394,5958017,5959674,5961291,5962924,5964518,5966100,5967563,5969081,5970638,5972455,5974282,5976138,5977968,5979722,5981518,5983025,5984429,5985760,5987140,5988461,5989730,5990806,5991438,5992316,5993481,5994652,5995747,5996837,5998001,5998885,5999622,6000696,6001694,6002414,6003355,6004558,6005878,6007138,6007810,6008419,6009041,6009726,6010384,6011060,6011700,6012579,6013426,6014512,6015531,6016448,6017540,6018351,6019175,6019998,6020799,6021616,6022676,6023590,6024483,6025365,6026320,6027128,6027963,6028946,6029745,6030766,6031714,6032628,6033655,6034392,6035015,6035668,6036394,6037101,6037798,6038762,6039644,6040431,6041370,6042229,6043065,6043944,6044766,6045693,6046477,6048145,6049956,6051704,6053514,6055568,6057466,6059294,6061024,6062764,6064478,6066216,6067966,6069879,6071773,6073830,6074154,6074203,6074251,6074296,6074342,6074390,6074439,6074486,6074531,6074576,6074624,6074673,6074906,6075670,6076768,6078190,6079608,6081141,6082702,6084123,6085640,6087194,6088823,6090498,6092215,6093968,6095715,6097373,6099099,6100750,6102384,6104017,6105667,6107256,6108852,6110245,6111570,6112842,6113955,6115073,6115898,6116356,6116686,6116884,6117017,6117065,6117114,6117159,6117204,6117249,6117297,6117346,6117391,6117436,6117481,6117523,6117572,6119075,6121123,6123171,6125219,6127267,6129315,6131363,6133411,6135459,6137507,6139555,6141603,6143651,6145699,6147747,6149795,6151843,6153891,6155939,6157987,6160035,6162083,6164131,6166179,6168227,6170275,6172323,6174371,6176416,6177779,6178992,6180201,6181443,6182695,6183812,6185011,6186130,6187351,6188595,6189820,6191076,6192270,6193643,6194903,6196390,6198084,6199637,6201167,6202518,6203886,6205427,6207013,6208464,6209824,6211438,6213070,6214622,6216118,6217564,6219156,6220573,6221915,6223290,6224755,6226202,6227661,6228920,6230136,6231466,6232720,6233987,6235147,6236201,6237037,6238101,6239162,6240270,6241221,6242023,6242721,6243507,6244325,6244948,6245556,6246188,6246775,6248737,6250349,6251465,6252507,6253673,6254691,6255888,6257212,6258505,6259656,6260865,6262067,6263337,6264649,6265912,6267517,6269044,6270820,6272610,6274339,6276095,6277858,6279456,6280899,6282467,6283932,6285341,6286932,6288521,6289993,6291471,6293105,6294679,6296341,6297831,6299514,6301052,6302451,6303733,6305113,6306323,6307419,6308538,6309541,6310565,6311589,6312468,6313466,6314485,6315498,6316538,6317482,6318345,6318974,6319521,6319989,6320412,6320775,6322272,6323549,6324242,6324946,6325567,6326236,6326916,6327599,6328269,6328927,6329571,6330198,6330913,6331605,6332876,6334450,6335960,6337538,6339132,6340791,6342390,6343941,6345438,6346861,6347904,6348716,6350041,6351489,6352948,6354500,6356013,6357477,6358994,6360410,6361720,6362788,6363759,6364959,6366373,6367884,6369344,6370787,6372287,6373650,6374878,6375795,6376477,6377167,6377830,6378498,6379123,6379829,6380514,6381180,6381876,6382537,6383194,6383889,6385162,6386795,6387489,6388151,6388798,6389490,6390166,6390841,6391502,6392177,6392895,6393590,6394267,6394898,6395770,6397252,6398885,6400493,6402142,6403831,6405515,6407081,6408562,6409975,6411357,6412697,6414063,6415267,6416602,6417922,6419244,6420528,6421815,6423092,6424267,6425951,6427649,6429275,6430884,6432552,6434138,6435662,6437030,6438117,6439103,6439889,6440632,6441292,6441922,6442616,6443283,6443980,6444658,6445322,6446003,6446697,6447366,6447983,6448890,6450923,6451650,6452056,6452611,6453201,6453814,6454566,6455476,6456367,6457326,6458409,6459451,6460595,6461969,6463495,6465028,6466607,6468178,6469733,6471222,6472675,6474099,6475578,6477034,6478448,6479935,6481379,6482842,6484286,6485667,6486885,6488282,6489726,6491167,6492760,6494377,6495932,6497383,6498722,6499815,6501006,6502289,6503519,6504784,6506012,6507155,6508279,6509295,6510241,6511257,6512311,6513297,6514291,6515180,6516021,6516665,6517228,6517647,6518991,6520147,6520462,6520960,6521532,6522196,6522914,6523698,6524581,6525477,6526468,6527500,6528633,6529881,6531234,6532768,6534393,6536078,6537806,6539452,6541069,6542561,6543993,6545362,6546657,6547973,6549373,6550771,6552215,6553627,6555104,6556636,6558053,6559497,6560906,6562379,6563834,6565376,6567081,6568716,6570237,6571586,6572882,6574092,6575319,6576551,6577760,6579006,6580201,6581272,6582350,6583379,6584333,6585179,6585979,6586699,6587343,6587811,6588829,6590456,6590811,6591293,6591894,6592535,6593218,6594043,6594924,6595849,6596901,6597965,6598993,6600382,6601917,6603410,6604887,6606463,6607967,6609448,6610761,6612057,6613385,6614780,6616115,6617532,6618902,6620310,6621674,6622952,6624336,6625719,6627076,6628387,6629738,6631065,6632383,6633768,6635296,6636853,6638477,6639905,6641392,6642818,6644208,6645413,6646610,6647851,6649061,6650179,6651241,6652277,6653264,6654234,6655122,6655879,6656518,6657055,6657550,6659303,6661015,6662793,6664559,6666298,6668346,6670394,6672442,6674490,6676538,6678586,6680634,6682682,6684730,6686778,6688826,6690874,6692922,6694970,6697018,6699066,6701114,6703162,6705210,6707258,6709306,6711354,6713402,6715450,6717507,6719555,6721553,6723522,6725570,6727618,6729666,6731629,6733588,6735636,6737596,6739644,6741655,6743630,6745590,6747615,6749520,6751474,6753391,6755366,6757338,6759300,6761267,6763208,6765256,6767212,6769027,6770040,6770791,6771628,6772504,6773439,6774467,6775623,6776670,6777766,6778597,6779537,6780468,6781407,6782257,6783202,6783971,6784860,6785808,6786613,6787419,6788337,6789138,6790182,6791272,6792162,6792854,6793473,6794932,6796117,6797396,6798701,6799503,6800135,6800761,6801323,6801880,6802465,6803407,6804302,6805240,6806275,6807261,6807878,6808792,6809585,6810435,6811391,6812461,6813382,6814414,6815249,6815808,6816363,6817233,6817754,6818505,6819469,6820436,6820892,6821750,6822340,6823032,6823753,6824365,6825459,6826325,6827357,6828504,6829256,6829887,6830446,6831005,6831549,6832229,6832970,6833633,6834534,6835197,6835968,6836649,6837540,6838796,6839545,6840401,6841366,6842313,6843329,6844075,6845091,6845819,6846843,6847863,6848589,6849399,6850377,6851298,6851658,6852187,6853102,6853823,6854640,6855133,6855716,6856689,6857304,6857973,6858570,6859183,6859903,6860843,6861822,6862669,6863291,6863982,6864729,6865453,6867417,6869088,6870721,6872142,6873574,6874963,6876426,6877968,6879889,6881678,6883445,6885070,6886509,6887956,6889333,6890789,6892332,6894350,6896080,6897694,6899403,6901078,6902676,6904298,6906013,6907763,6909574,6911326,6913049,6914779,6916276,6917507,6918725,6919940,6921558,6923178,6924801,6926606,6928365,6930107,6931839,6933512,6935306,6937022,6938714,6940407,6942099,6943857,6945605,6947362,6949062,6950827,6952613,6954367,6956062,6957853,6959566,6961174,6962757,6964309,6965660,6966954,6968231,6969646,6971180,6972689,6974343,6975975,6977563,6979255,6980807,6982350,6984000,6985613,6987232,6989147,6990848,6992281,6993776,6995283,6996830,6998269,6999795,7001303,7002729,7004191,7005783,7007417,7008848,7010378,7012055,7013758,7015424,7017196,7018973,7020606,7022334,7023943,7025526,7027077,7028589,7030188,7031801,7033380,7034991,7036606,7038224,7039817,7041362,7042926,7044537,7046180,7047765,7049405,7050973,7052549,7054115,7055758,7057390,7058958,7060372,7061528,7062942,7064449,7065922,7067292,7068778,7070295,7071884,7073491,7075031,7076421,7077896,7079660,7081495,7082744,7083971,7085213,7086449,7087676,7088964,7090210,7091482,7092737,7094016,7095312,7096878,7098174,7099466,7100754,7102078,7103412,7104728,7106034,7107264,7108506,7109789,7111073,7112302,7113552,7114789,7116035,7117307,7118547,7119757,7120978,7122163,7123397,7124624,7125829,7127069,7128304,7129544,7130797,7132033,7133283,7134547,7135836,7137123,7138578,7139954,7141240,7142521,7143816,7145126,7146428,7147727,7148954,7150230,7151497,7152748,7154103,7156151,7157917,7159681,7161474,7163220,7165004,7166827,7168608,7170365,7172125,7173918,7175638,7177371,7179075,7180789,7182428,7184083,7185768,7187369,7188971,7190621,7192291,7193928,7195540,7197228,7198936,7200647,7202440,7204177,7205950,7207695,7209492,7211234,7212956,7214707,7216314,7217996,7219705,7221347,7223000,7224608,7226294,7228023,7229682,7231374,7233073,7234859,7236574,7238343,7240079,7241844,7243602,7245367,7247102,7248840,7250632,7252397,7254166,7255034,7256513,7258330,7260378,7262426,7264474,7266522,7268570,7270618,7272666,7274714,7276762,7278810,7280858,7282906,7284954,7287002,7289050,7291098,7293146,7295194,7297242,7299290,7301338,7303386,7305434,7307482,7309530,7311578,7313626,7315683,7317731,7319779,7321827,7323875,7325923,7327971,7330019,7332067,7334115,7336163,7338211,7340259,7342307,7344355,7346403,7348451,7350499,7352547,7354595,7356643,7358691,7360739,7362787,7364835,7366883,7368931,7370979,7373027,7375075,7377123,7379171,7381219,7383267,7385315,7387363,7389411,7391459,7393507,7395555,7397603,7399651,7401699,7403747,7405795,7407843,7409891,7411939,7413987,7416035,7418083,7420131,7422179,7424227,7426275,7428323,7430371,7432419,7434467,7436524,7438572,7440620,7442668,7444716,7446764,7448812,7450860,7452908,7454956,7457004,7459052,7461100,7463148,7465196,7467244,7469292,7471340,7473388,7475436,7477484,7479532,7481580,7483628,7485676,7487724,7489772,7491820,7493868,7495916,7497964,7500012,7502060,7504108,7506156,7508204,7510252,7512300,7514348,7516396,7518444,7520492,7522540,7524588,7526636,7528684,7530732,7532780,7534828,7536876,7538924,7540972,7543020,7545068,7547116,7549164,7551212,7553260,7555308,7557356,7559404,7561452,7563500,7565548,7567596,7569644,7571692,7573740,7575788,7577836,7579884,7581932,7583980,7586028,7588076,7590124,7592172,7594220,7596268,7598316,7600364,7602412,7604460,7606508,7608556,7610604,7612652,7614700,7616748,7618796,7620844,7622892,7624940,7626988,7629036,7631084,7633132,7635180,7637228,7639276,7641324,7643372,7645420,7647468,7649516,7651564,7653612,7655660,7657708,7659756,7661804,7663852,7665900,7667948,7669996,7672044,7674092,7676140,7678188,7680236,7682284,7684332,7686380,7688428,7690476,7692524,7694572,7696620,7698668,7700716,7702764,7704812,7706860,7708908,7710956,7713004,7715052,7717100,7719148,7721196,7723244,7725292,7727340,7729388,7731436,7733484,7735532,7737580,7739628,7741676,7743724,7745772,7747820,7749868,7751916,7753964,7756012,7758060,7760108,7762156,7764204,7766252,7768300,7770348,7772396,7774444,7776492,7778540,7780588,7782636,7784684,7786732,7788780,7790828,7792876,7794924,7796972,7799020,7801068,7803116,7805164,7807212,7809260,7811308,7813356,7815404,7817452,7819500,7821548,7823596,7825644,7827692,7829740,7831788,7833836,7835884,7837932,7839980,7842028,7844076,7846124,7848172,7850220,7852268,7854316,7856364,7858412,7860460,7862508,7864556,7866604,7868652,7870700,7872748,7874796,7876844,7878892,7880940,7882988,7885036,7887084,7889132,7891180,7893228,7895276,7897324,7899372,7901420,7903468,7905516,7907564,7909612,7911660,7913708,7915756,7917804,7919852,7921900,7923948,7925996,7928044,7930092,7932140,7934188,7936236,7938284,7940332,7942380,7944428,7946476,7948524,7950572,7952620,7954668,7956716,7958764,7960812,7962860,7964908,7966956,7969004,7971052,7973100,7975148,7977196,7979244,7981292,7983340,7985388,7987436,7989484,7991532,7993580,7995628,7997676,7999724,8001772,8003820,8005868,8007916,8009964,8012012,8014060,8016108,8018156,8020204,8022252,8024300,8026348,8028396,8030444,8032492,8034540,8036588,8038636,8040684,8042732,8044780,8046828,8048876,8050924,8052972,8055020,8057068,8059116,8061164,8063212,8065260,8067308,8069356,8071404,8073452,8075500,8077548,8079596,8081644,8083692,8085740,8087788,8089836,8091884,8093932,8095980,8098028,8100076,8102124,8104172,8106220,8108268,8110316,8112364,8114412,8116460,8118508,8120556,8122604,8124652,8126700,8128748,8130796,8132844,8134892,8136940,8138988,8141036,8143084,8145132,8147180,8149228,8151276,8153324,8155372,8157420,8159468,8161516,8163564,8165612,8167660,8169708,8171756,8173804,8175852,8177900,8179948,8181996,8184044,8186092,8188140,8190188,8192236,8193418,8194041,8194641,8195269,8195881,8196542,8197135,8197711,8198331,8198959,8199597,8200252,8201651,8202144,8202680,8203319,8203878,8204352,8204736,8205143,8206050,8207674,8209357,8210542,8211580,8212944,8214154,8215211,8216793,8217974,8219074,8220793,8222274,8223177,8224147,8225432,8225772,8226208,8226697,8227180,8227699,8228127,8228624,8228966,8229344,8229603,8229876,8230193,8231061,8232874,8234562,8236317,8237966,8239671,8241088,8242205,8243272,8244355,8245560,8246724,8247761,8248889,8249733,8250942,8251964,8252594,8253798,8254971,8256012,8257080,8258279,8259115,8260213,8261283,8262245,8263396,8264224,8265397,8266207,8267153,8268133,8269061,8270343,8271048,8272268,8273226,8274333,8275391,8276493,8277859,8278668,8279784,8280893,8281713,8282892,8283704,8284998,8285310,8285621,8285933,8287093,8288157,8289144,8290090,8290981,8292600,8293510,8295353,8296285,8297584,8299143,8300927,8302417,8303933,8305522,8307129,8308721,8310359,8311976,8313656,8315285,8316895,8318547,8320225,8321869,8323510,8325157,8326754,8328373,8330024,8331763,8333482,8335190,8336956,8338704,8340485,8342164,8343856,8345609,8347399,8349201,8351024,8352919,8354803,8356689,8358565,8360459,8362342,8364106,8365907,8367725,8369528,8371358,8373142,8374945,8376757,8378546,8380229,8381781,8383366,8385005,8386601,8388141,8389570,8391104,8392708,8394341,8396002,8397825,8399718,8401174,8402603,8404100,8405660,8407112,8408605,8410132,8411593,8413055,8414601,8416225,8417703,8419162,8420815,8422477,8424119,8425859,8427656,8429329,8431047,8432718,8434275,8435851,8437345,8438927,8440547,8442120,8443698,8445327,8446949,8448541,8450074,8451626,8453254,8454876,8456506,8458131,8459720,8461257,8462806,8464420,8466064,8467682,8469188,8470361,8471708,8473207,8474687,8476069,8477479,8478959,8480552,8482169,8483752,8485189,8486586,8488170,8490200,8490716,8491305,8491913,8492505,8493209,8493958,8494677,8495571,8496576,8497561,8498651,8499619,8500846,8502102,8503411,8504708,8506000,8507370,8508776,8510162,8511649,8513045,8514455,8515836,8517337,8518887,8520309,8521735,8523171,8524390,8525385,8526394,8527273,8528549,8529858,8531089,8532312,8533366,8534375,8535320,8536330,8537338,8538169,8539135,8540143,8541030,8541693,8542519,8543433,8544256,8544678,8545402,8546110,8546802,8547476,8548051,8548679,8550515,8551509,8552251,8553054,8553925,8554879,8555962,8557043,8558168,8559284,8560425,8561504,8562398,8563233,8563947,8565078,8566414,8567778,8569223,8570690,8572197,8573670,8575189,8576473,8578048,8579601,8581206,8582703,8584258,8585896,8587604,8589309,8590942,8592431,8593971,8595527,8597114,8598606,8600094,8601509,8602777,8604080,8605250,8606264,8607244,8608275,8609328,8610452,8611538,8612693,8613900,8615138,8616190,8617151,8617924,8618702,8619494,8620298,8621205,8622444,8624056,8626104,8628152,8630200,8632248,8634296,8636344,8638392,8640440,8642488,8644536,8646584,8648632,8650680,8652728,8654785,8656833,8658881,8660929,8662977,8665025,8667073,8669121,8671169,8673217,8675265,8677313,8679361,8681409,8683457,8685505,8687553,8689601,8691649,8693697,8695753,8697801,8699849,8701897,8703945,8705993,8708041,8710089,8712137,8714185,8716233,8718290,8720338,8722386,8724434,8726482,8728530,8730578,8732626,8734674,8736722,8738770,8740818,8742866,8744914,8746962,8749010,8751058,8753106,8755154,8757202,8759250,8761298,8763346,8765394,8767451,8769499,8771526,8773574,8775622,8777670,8779718,8781766,8783814,8785862,8787910,8789958,8792006,8794054,8796102,8798150,8800198,8802246,8804294,8806342,8808390,8810438,8812486,8814534,8816582,8818630,8820687,8822735,8824783,8826831,8828879,8830927,8832975,8835023,8837080,8839128,8841176,8843224,8845272,8847320,8849368,8851184,8852508,8853777,8854951,8855767,8856254,8856668,8857887,8858740,8859819,8860922,8862000,8862811,8863593,8865087,8866682,8868017,8869438,8870784,8872149,8873531,8874620,8875797,8876980,8878069,8879520,8880845,8882176,8883491,8884678,8885895,8887083,8888251,8889437,8890822,8892266,8893682,8895021,8896316,8897553,8898796,8900212,8901699,8903343,8904945,8906515,8908076,8909661,8911213,8912748,8914318,8915803,8917302,8918774,8920205,8921587,8922943,8924334,8926377,8928425,8930473,8932521,8934569,8936617,8938665,8940722,8942770,8944818,8946866,8948914,8950962,8953010,8955058,8957106,8959154,8961202,8963250,8965298,8967346,8969394,8971442,8973490,8975538,8977586,8979634,8981682,8983730,8985778,8987826,8989874,8991922,8993970,8996018,8998066,9000114,9002162,9004210,9006258,9008306,9010354,9012402,9014450,9016498,9018546,9020594,9022642,9024690,9026738,9028786,9030834,9032882,9034930,9036978,9039026,9041074,9043122,9045170,9047218,9049266,9051314,9053362,9055410,9057458,9059506,9061554,9063602,9065650,9067698,9069746,9071794,9073842,9075890,9077938,9079986,9082034,9084082,9086130,9088178,9090226,9092274,9094322,9096370,9098418,9100466,9102514,9104562,9106610,9108356,9109707,9111125,9112542,9113922,9115303,9116706,9118194,9119656,9121283,9122985,9124527,9125981,9127438,9128786,9130212,9131859,9133592,9135352,9137038,9138676,9140203,9141655,9143154,9144787,9146436,9148099,9149724,9151346,9152909,9154402,9155955,9157774,9159820,9161868,9163914,9165943,9167970,9169985,9172033,9174058,9176093,9178141,9180134,9182182,9184211,9186230,9188278,9190318,9192367,9194415,9196462,9198500,9200493,9202366,9204414,9206455,9208503,9210172,9211539,9213167,9214773,9216374,9217994,9219026,9219239,9219479,9219686,9219906,9220121,9220846,9221066,9221315,9221536,9221757,9221994,9222547,9224369,9225790,9227039,9228332,9229552,9230749,9231884,9233067,9234252,9235446,9236706,9237926,9239067,9240217,9241835,9243883,9244942,9245615,9247475,9249242,9250026,9251122,9253179,9254768,9255421,9256982,9259030,9259988,9260707,9261077,9261532,9262344,9264156,9265371,9267379,9269434,9271490,9273538,9274003,9275827,9277875,9279923,9281971,9284019,9286067,9288115,9288579,9290363,9292411,9294459,9296507,9298555,9300603,9302651,9304699,9305162,9306944,9308992,9311040,9313088,9315136,9317184,9319232,9319691,9321577,9323625,9325673,9327721,9329776,9331824,9333880,9335928,9337976,9340024,9342072,9342816,9344378,9344954,9345099,9346429,9348477,9350525,9352573,9354621,9356669,9358717,9360765,9362813,9364861,9366904,9368952,9371000,9373048,9375096,9377152,9379200,9381248,9383296,9385344,9387392,9389428,9391476,9393524,9395572,9397620,9399668,9401577,9403625,9405673,9407721,9409769,9411817,9413860,9415915,9417963,9420011,9422033,9424081,9426129,9428177,9430225,9432273,9434321,9436347,9438395,9440443,9442491,9444525,9446573,9448621,9450669,9452717,9454735,9456783,9458831,9460858,9462906,9464954,9466993,9469041,9471089,9473128,9475163,9477211,9479259,9481291,9483339,9485376,9487424,9489472,9491431,9493487,9495535,9497560,9499608,9501645,9503693,9505750,9507798,9509846,9511894,9513942,9515990,9518038,9520086,9522134,9524182,9525199,9526973,9529030,9531081,9533129,9533598,9535377,9537347,9539395,9541419,9543467,9545515,9547563,9549611,9551659,9553707,9555755,9557793,9559841,9561889,9563937,9565985,9568033,9570081,9572129,9574166,9576221,9578269,9580317,9582365,9584413,9586442,9588490,9590538,9592538,9594558,9596606,9598645,9600693,9602732,9604726,9606774,9608804,9610852,9612885,9614942,9616873,9618921,9620969,9623017,9625053,9627101,9629091,9631102,9633150,9635198,9637233,9639281,9641305,9643291,9645339,9647370,9649427,9651461,9653509,9655437,9657485,9659522,9661570,9663607,9665664,9667666,9669714,9671762,9673810,9675858,9677906,9679954,9682002,9684059,9686093,9688141,9690178,9692235,9694269,9696326,9698374,9700415,9702457,9704505,9706553,9708601,9710645,9712701,9714749,9716797,9718845,9720893,9722941,9724980,9727036,9729073,9731121,9733169,9735217,9737265,9739306,9741342,9743372,9745425,9747424,9749461,9751509,9753545,9755593,9757528,9759585,9761616,9763664,9765712,9767760,9769781,9771777,9773825,9775858,9777906,9779934,9781982,9783869,9785917,9787957,9790005,9792038,9794086,9795999,9798047,9800091,9802139,9804184,9806232,9808161,9810209,9812257,9814305,9816353,9818401,9820427,9822415,9824463,9826488,9828536,9830551,9832596,9834559,9835016,9835158,9835307,9837090,9839121,9839898,9840039,9841863,9843893,9844358,9846388,9848302,9850292,9852345,9854392,9856431,9857599,9857739,9859521,9861567,9862030,9863905,9865951,9866716,9866866,9868648,9870571,9871040,9871181,9871326,9871783,9871923,9873707,9875374,9875507,9875649,9875797,9876243,9876344,9877101,9878046,9879040,9879952,9880791,9881762,9882731,9883357,9884423,9885190,9886064,9886987,9887931,9889020,9890080,9891020,9891915,9892966,9893716,9894712,9895638,9896834,9897786,9898886,9899864,9900677,9901712,9902776,9904018,9905181,9906043,9906759,9907230,9907632,9908414,9909637,9910549,9911477,9912077,9912518,9912852,9913188,9913609,9913972,9914338,9914906,9915466,9916490,9917799,9918906,9919597,9920769,9922114,9923626,9925181,9926506,9927858,9928934,9930137,9931650,9933045,9934318,9935537,9936651,9938074,9939461,9940916,9942470,9943906,9944868,9946112,9947324,9948625,9950028,9951460,9953006,9954431,9955528,9956715,9957890,9959354,9960749,9962276,9963833,9964926,9966107,9967211,9968491,9969936,9971363,9972882,9974377,9975434,9976535,9977670,9978996,9980453,9981950,9983443,9984759,9985879,9986987,9988221,9989698,9991095,9992092,9992783,9993395,9994004,9994776,9995422,9996063,9996708,9997462,9998276,9999249,10000147,10000761,10001765,10002580,10003382,10004109,10004998,10005863,10006658,10007349,10007806,10008532,10009199,10010059,10010826,10011628,10012325,10013092,10013725,10014525,10015041,10015743,10016307,10016798,10017468,10018086,10018885,10019537,10020344,10020962,10021558,10022150,10022731,10023385,10023890,10024464,10024902,10025460,10025931,10026388,10027109,10027622,10028401,10029206,10029626,10030187,10031663,10032746,10034107,10035621,10037147,10038466,10039624,10040932,10042107,10043351,10044357,10045743,10046975,10048218,10049734,10050810,10051981,10053165,10053983,10055578,10056438,10057693,10058985,10059849,10060675,10061733,10063211,10064222,10065016,10065976,10066998,10067946,10069105,10069911,10071029,10072016,10073140,10073871,10074818,10075659,10076535,10077344,10078475,10079456,10080278,10081281,10082351,10083270,10084275,10085219,10085960,10086651,10087767,10088592,10089480,10090570,10091285,10092238,10093387,10093869,10094461,10094957,10095442,10096193,10096893,10097622,10098343,10099235,10099892,10100519,10101123,10101743,10102813,10103858,10105019,10106105,10106583,10107222,10108009,10108719,10109445,10110202,10110872,10111734,10112316,10112661,10113193,10113728,10114542,10115238,10116081,10116971,10118097,10118683,10119558,10120374,10121189,10122088,10122998,10123819,10124732,10125608,10126474,10127327,10128174,10129160,10129676,10130508,10131364,10132277,10132957,10133735,10134700,10135487,10136412,10137471,10138293,10139121,10139891,10140716,10141612,10142435,10143265,10144103,10144822,10145600,10146457,10147323,10148182,10148975,10149813,10150319,10151188,10151880,10152545,10153141,10153859,10154369,10154715,10156043,10156814,10157575,10159029,10160807,10162662,10164368,10166321,10168171,10170219,10172267,10174315,10176186,10177559,10179121,10180898,10182951,10184999,10186867,10188644,10190692,10192622,10194424,10196427,10198475,10200523,10202539,10204428,10206274,10208270,10210162,10212001,10214013,10215884,10217834,10219239,10220404,10221149,10221761,10222199,10223846,10225863,10227871,10229492,10230922,10232115,10233315,10234469,10236423,10238386,10239696,10240966,10242079,10242983,10244833,10246183,10247604,10248947,10249486,10249621,10249925,10251686,10253734,10255782,10257830,10259878,10261926,10263974,10266022,10268070,10270118,10272166,10274219,10276274,10278312,10280235,10281727,10283667,10285715,10287763,10289811,10291859,10293907,10295963,10298011,10299060,10299085,10300783,10302795,10304843,10306891,10308924,10310372,10312268,10314130,10316178,10318198,10320076,10322124,10324172,10326229,10328277,10330306,10332161,10334209,10336257,10338128,10340176,10342218,10344245,10346293,10348335,10350391,10352440,10354479,10356350,10357811,10359467,10361317,10363365,10365413,10367461,10369509,10371557,10373605,10375653,10377701,10379579,10381433,10382429,10383537,10384723,10385841,10387348,10388427,10389975,10391447,10392732,10394189,10395552,10396686,10397947,10399051,10400047,10401100,10402293,10403324,10404807,10406662,10408605,10410488,10412358,10414265,10415474,10417155,10418864,10420419,10422094,10423206,10424204,10425292,10426408,10427430,10429076,10430173,10431129,10432230,10433391,10434939,10436044,10437127,10438184,10439670,10440805,10442067,10443864,10445845,10447875,10449928,10451979,10454027,10456004,10458059,10460048,10462096,10464124,10466098,10468146,10470122,10472170,10474203,10476184,10478220,10480190,10482247,10484278,10486252,10488300,10490344,10492316,10494349,10496406,10498378,10500426,10502483,10504457,10506505,10508562,10510542,10512584,10514641,10516642,10518673,10520714,10522721,10524757,10526728,10528776,10530805,10532775,10534823,10536806,10538854,10540902,10542959,10545016,10546982,10549030,10551078,10553126,10555174,10557228,10559284,10561332,10563380,10565276,10567324,10569372,10571420,10573468,10575516,10577564,10579612,10581660,10583708,10585730,10587749,10589797,10591845,10593893,10595941,10597989,10600037,10602085,10604098,10606146,10608194,10610242,10612290,10614338,10616386,10618434,10620332,10622380,10624428,10626476,10628524,10630572,10632620,10634640,10636673,10638721,10640769,10642817,10644865,10646913,10648961,10650851,10652899,10654947,10656995,10659043,10661091,10663139,10665187,10667082,10669130,10671178,10673226,10675274,10677322,10679370,10681418,10683466,10685514,10687439,10689003,10690653,10691890,10693599,10695123,10696759,10698586,10700362,10702126,10703913,10705366,10706879,10708466,10710085,10711792,10713609,10715287,10716961,10718443,10720487,10722476,10723502,10725084,10726500,10727817,10728932,10730041,10731654,10733270,10734994,10736619,10738396,10740011,10741863,10743782,10745833,10747881,10749445,10750497,10751706,10752949,10754059,10755268,10756427,10757442,10758578,10760318,10761755,10763287,10764631,10766061,10767444,10768848,10770397,10771904,10773607,10775247,10776925,10778489,10779956,10781550,10783137,10784947,10786853,10788611,10790394,10792256,10794104,10795950,10797653,10799430,10801233,10803056,10804427,10806121,10807974,10809760,10810734,10812044,10813864,10815663,10816853,10818379,10820078,10821731,10823024,10824468,10826360,10827933,10829735,10831443,10832910,10833648,10834434,10835778,10837080,10838297,10839543,10840915,10842735,10844483,10845946,10847402,10848756,10850267,10851599,10853294,10854949,10856975,10858986,10860691,10862348,10864158,10865942,10867767,10869577,10871374,10873214,10874924,10876735,10878418,10880139,10881979,10883802,10885449,10886849,10888383,10889765,10891262,10892733,10893901,10895129,10896634,10898239,10899834,10901616,10903018,10904668,10906239,10907468,10909059,10910781,10912266,10913763,10915253,10916633,10917246,10917925,10918639,10919351,10920039,10920721,10921374,10921940,10922458,10923026,10923547,10925024,10926852,10928528,10930225,10931915,10933601,10935535,10937254,10938996,10940757,10941855,10942933,10944732,10946380,10947904,10949385,10950875,10951606,10952103,10952378,10952799,10953197,10953625,10953938,10954567,10956443,10958138,10959822,10961514,10963375,10965154,10966950,10968387,10969941,10971531,10973003,10974493,10976007,10976380,10976950,10977452,10977942,10978358,10978732,10979252,10979779,10980196,10981554,10983335,10985010,10986676,10988352,10990155,10991944,10993736,10995465,10996595,10998318,10999952,11001426,11002897,11004391,11005874,11006593,11007222,11007861,11008454,11008945,11009531,11010098,11010641,11011191,11011704,11012277,11012665,11013001,11014227,11016134,11017832,11019498,11021178,11022863,11024549,11026451,11028260,11029967,11031672,11033444,11034437,11035924,11037624,11039293,11040786,11042261,11043744,11044768,11045338,11045906,11046533,11047080,11047669,11048268,11048875,11049421,11050007,11050540,11051081,11052703,11054507,11056195,11057871,11059539,11061220,11063013,11064821,11066528,11068250,11069934,11070937,11072137,11073889,11075530,11077043,11078540,11080025,11081236,11081827,11082358,11082932,11083448,11083851,11084480,11085055,11085659,11086156,11086535,11087058,11088488,11090237,11091935,11093626,11095281,11096939,11098831,11100543,11102293,11103953,11105294,11106285,11108110,11109748,11111258,11112745,11113796,11114146,11114664,11115031,11115453,11115968,11116477,11116962,11117793,11119597,11121231,11122923,11124586,11126422,11128130,11129807,11131138,11132622,11134201,11135660,11137140,11138597,11140084,11141567,11142839,11143469,11144091,11144582,11145134,11145840,11146283,11146935,11147552,11148123,11148722,11149439,11150137,11150789,11151532,11152197,11152796,11153401,11154057,11154674,11155134,11156278,11158277,11159944,11161623,11163333,11165006,11166656,11168357,11170080,11171790,11173477,11175420,11177182,11178942,11180644,11182342,11184173,11185990,11187771,11188545,11189280,11190352,11192158,11193945,11195636,11197423,11198974,11200447,11201922,11203387,11204840,11205560,11205961,11206430,11206971,11207522,11208140,11208734,11209352,11209826,11210301,11210900,11211362,11211924,11212482,11213605,11215569,11217257,11218941,11220627,11222319,11224005,11225681,11227653,11229377,11231160,11232932,11234712,11235969,11236639,11238099,11240102,11241742,11243448,11244957,11246435,11247926,11249393,11250780,11251400,11252016,11252690,11253272,11253905,11254458,11254975,11255520,11256211,11256772,11257188,11257698,11258104,11258669,11259146,11261163,11262917,11264597,11266286,11267988,11269686,11271394,11273192,11275078,11276787,11278512,11280297,11282077,11283442,11284185,11285893,11287732,11289491,11291005,11292496,11293990,11295469,11296772,11297303,11297878,11298484,11299087,11299684,11300260,11300756,11301002,11301213,11301390,11301649,11301839,11302118,11303924,11305851,11307569,11309265,11310979,11312700,11314425,11316155,11318183,11319964,11321712,11323493,11325292,11327027,11328044,11329681,11331289,11332844,11334299,11335211,11335911,11336543,11337225,11337870,11339663,11341349,11343142,11344769,11346144,11347689,11349146,11350623,11351669,11352242,11352814,11353387,11353918,11354392,11354843,11355291,11355797,11357143,11358898,11360554,11362223,11363885,11365742,11367443,11369144,11369861,11371638,11373304,11374757,11376234,11377695,11378872,11379441,11380025,11380646,11381192,11381771,11382368,11382907,11383337,11383949,11384485,11385069,11387061,11388712,11390388,11392071,11393754,11395485,11397303,11398978,11400752,11402402,11403121,11404850,11406635,11408154,11409627,11411076,11412187,11412764,11413343,11413647,11414137,11414659,11415112,11415434,11415742,11416200,11416820,11418712,11420388,11422086,11423760,11425402,11427158,11428941,11430684,11432332,11433691,11434645,11436499,11438143,11439603,11441054,11442486,11443233,11443523,11443908,11444233,11444656,11445113,11445512,11445839,11446162,11446592,11446955,11447442,11449346,11450980,11452623,11454280,11455945,11457644,11459471,11461198,11462807,11464221,11465572,11467280,11468793,11470281,11471741,11472200,11472654,11473158,11473749,11474351,11474998,11475614,11476244,11476738,11478319,11480007,11481683,11483340,11485031,11486866,11488571,11490248,11491920,11492877,11494682,11496271,11497743,11499227,11500699,11501989,11502520,11503037,11503600,11504173,11504777,11505366,11506013,11506435,11506916,11507465,11507873,11508380,11509050,11510981,11512643,11514317,11516003,11517665,11519344,11521038,11522971,11524638,11526290,11528044,11529578,11530340,11532063,11533788,11535516,11536936,11538419,11539919,11541388,11542873,11544370,11545869,11547356,11548838,11549598,11550272,11551012,11551620,11552241,11552790,11553415,11554132,11554605,11555193,11555702,11556311,11557015,11557641,11558257,11558901,11559522,11560073,11560467,11561160,11561859,11562492,11562983,11563467,11564026,11564542,11564800,11565116,11566172,11568187,11570182,11571914,11573641,11575359,11577032,11578738,11580413,11582109,11583793,11585456,11587131,11588836,11590560,11592608,11594431,11596098,11597847,11599513,11601167,11602871,11604574,11606246,11607946,11609284,11610022,11610837,11612561,11614457,11616283,11616462,11617391,11618123,11618752,11620443,11622128,11623757,11625247,11626758,11628263,11629769,11631273,11632773,11634266,11635741,11637231,11638709,11639520,11640246,11641051,11641615,11642315,11643053,11643729,11644451,11645192,11645756,11646411,11647073,11647794,11648378,11649020,11649654,11650438,11651102,11651763,11652303,11652809,11653281,11653763,11654027,11654342,11654742,11655251,11655707,11656224,11656560,11656763,11656994,11658538,11660594,11662542,11664261,11665965,11667655,11669345,11671016,11672701,11674393,11676098,11677750,11679435,11681109,11682780,11684466,11686173,11688126,11690174,11691926,11693672,11695395,11697099,11698829,11700503,11702178,11703798,11705463,11707184,11708904,11710082,11710919,11712183,11714016,11715864,11717553,11719350,11721128,11722672,11724165,11725643,11727128,11728481,11729001,11729545,11730067,11730580,11731050,11731620,11732021,11732508,11732946,11733409,11733599,11734201,11734751,11736131,11737990,11739653,11741328,11743003,11744687,11746387,11748340,11749967,11751700,11753415,11755107,11756143,11757548,11759257,11760969,11762491,11763951,11765435,11766899,11768264,11768929,11769612,11770273,11770969,11771485,11772170,11772660,11773306,11773813,11774133,11774617,11774958,11775539,11775823,11776325,11777692,11779643,11781317,11783001,11784682,11786377,11788064,11789757,11791605,11793447,11795191,11796899,11798618,11800422,11801489,11802283,11804005,11805717,11807487,11808943,11810411,11811891,11813371,11814854,11816069,11816597,11817128,11817640,11818215,11818948,11819572,11820248,11820848,11821565,11822192,11822724,11823177,11823832,11824543,11825132,11825492,11826165,11828180,11829973,11831658,11833319,11835004,11836713,11838399,11840063,11841783,11843762,11845456,11847194,11848957,11850720,11852444,11853932,11854961,11856794,11858576,11860316,11861827,11863321,11864816,11866309,11867821,11869285,11870775,11872272,11873768,11875281,11876794,11878294,11879612,11880139,11880849,11881496,11882059,11882682,11883297,11883843,11884461,11885134,11885714,11886287,11886943,11887543,11888123,11888617,11889277,11889890,11890374,11890913,11891577,11892080,11892589,11893197,11893815,11894371,11894979,11895476,11896003,11896588,11897176,11897803,11898386,11898954,11899462,11899954,11900481,11900929,11901555,11902020,11902570,11904603,11906638,11908687,11910529,11912246,11913975,11915676,11917398,11919102,11920798,11922497,11924204,11925929,11927644,11929354,11931057,11932765,11934471,11936181,11937885,11939627,11941675,11943697,11945391,11947147,11948855,11950613,11952311,11954030,11955725,11957457,11959156,11960905,11962665,11964434,11965527,11966397,11967307,11968138,11969507,11971123,11972776,11974355,11975970,11977504,11979027,11980152,11981171,11982244,11984013,11985785,11987551,11989060,11990525,11992006,11993503,11994987,11995843,11996521,11997201,11997779,11998224,11998614,11998986,11999420,11999798,12000213,12000711,12001215,12001592,12003191,12005060,12006756,12008439,12010119,12011798,12013477,12015347,12017135,12018831,12020568,12022273,12023650,12024874,12026660,12028343,12029822,12031294,12032610,12033233,12033669,12034110,12034608,12034878,12035213,12035692,12036068,12037636,12039340,12041011,12042682,12044430,12046236,12047938,12049621,12050820,12052577,12054088,12055556,12057030,12058496,12059945,12060556,12061116,12061699,12062291,12062878,12063449,12064001,12064592,12065201,12065516,12065966,12066441,12066858,12067464,12069408,12071080,12072745,12074412,12076082,12077748,12079423,12081313,12083000,12084680,12086390,12088062,12088689,12089167,12090566,12091892,12093432,12095060,12096544,12098023,12098905,12099098,12099423,12099853,12100148,12100397,12100780,12101045,12102167,12103876,12105506,12107152,12108962,12110603,12112231,12113334,12114778,12116323,12117760,12119217,12120232,12120770,12121273,12121659,12122196,12122659,12123074,12124674,12126351,12128011,12129764,12131493,12132986,12134329,12135951,12137433,12138920,12140389,12141843,12143332,12144810,12146005,12146688,12147289,12147881,12148507,12149064,12149482,12150013,12150614,12151021,12151486,12151896,12152488,12152992,12153457,12153917,12154343,12154725,12155064,12155473,12157336,12159244,12160904,12162572,12164262,12165965,12167659,12169351,12171010,12172663,12174524,12176373,12178088,12179877,12181553,12183264,12184922,12186352,12187178,12188442,12190076,12191530,12193115,12194805,12196388,12197860,12199357,12200833,12202021,12202473,12202828,12203337,12203789,12204279,12204548,12204918,12205465,12205924,12206385,12206716,12207092,12207522,12208961,12210779,12212431,12214090,12215746,12217397,12219065,12220869,12222651,12224324,12226027,12227688,12228671,12229363,12230839,12232525,12234130,12235523,12236995,12238463,12239943,12241448,12242944,12244424,12245902,12247050,12247693,12248287,12248936,12249522,12250103,12250757,12251436,12252101,12252791,12253306,12253849,12254598,12255231,12255857,12256487,12257207,12257680,12258252,12258832,12259498,12260017,12260432,12261033,12261602,12263435,12265448,12267166,12268846,12270526,12272207,12273921,12275613,12277319,12278994,12280664,12282369,12284286,12286257,12287944,12289595,12291304,12292979,12294675,12296374,12298161,12299474,12300325,12301772,12303544,12305060,12306676,12308318,12309990,12312035,12314091,12316141,12318197,12320245,12321807,12323404,12324923,12326250,12327652,12329146,12330595,12331662,12332557,12333406,12335183,12337201,12339161,12341063,12342986,12344464,12345667,12347142,12348339,12349809,12351163,12351996,12353347,12354659,12355476,12356404,12357511,12358695,12359640,12360727,12361759,12362820,12363911,12364886,12365813,12366964,12368063,12369180,12370197,12370994,12371962,12372899,12373857,12374773,12375621,12376556,12377511,12378388,12379442,12380429,12381448,12382431,12383511,12384521,12385446,12386334,12387179,12388137,12389089,12390053,12391028,12391952,12392926,12393890,12394679,12395741,12396735,12397738,12398777,12399589,12400657,12401705,12402721,12403823,12404798,12405772,12406905,12408032,12409130,12410294,12411382,12412549,12413644,12414785,12415849,12417018,12418108,12419245,12420263,12421324,12422140,12422986,12424090,12425274,12426310,12427295,12428437,12429607,12430693,12431768,12432885,12434024,12434946,12435999,12437095,12438353,12439459,12441338,12443386,12444439,12445534,12446593,12447515,12448479,12449528,12450663,12451683,12452706,12453580,12454706,12455892,12456788,12457886,12458878,12459834,12460893,12461655,12462555,12463291,12464080,12464960,12466104,12467433,12468854,12470436,12471731,12473369,12475360,12477408,12479464,12481311,12482779,12484807,12486863,12488911,12490959,12492934,12494780,12496833,12498454,12500416,12502473,12504521,12506569,12508617,12510665,12512713,12514761,12516815,12518852,12520886,12522903,12524938,12526982,12528982,12530933,12532738,12534406,12536408,12538456,12540504,12542552,12544600,12546648,12548696,12550744,12552792,12554849,12556897,12558945,12560927,12562864,12564700,12566461,12567744,12569636,12571558,12573449,12575202,12577143,12579194,12581248,12583305,12585353,12587401,12589449,12591497,12593545,12595593,12597641,12599689,12601737,12603785,12605833,12607774,12609205,12610346,12612394,12614442,12616490,12618538,12620586,12622634,12624682,12626730,12628778,12630826,12632874,12634922,12636970,12639018,12641066,12643114,12645162,12647219,12649275,12651305,12652849,12654897,12656945,12658993,12661034,12662869,12664422,12665771,12666942,12667929,12668600,12669139,12671191,12673239,12675287,12677335,12679383,12681438,12683494,12685542,12687590,12689642,12691427,12692850,12693710,12695758,12697806,12699832,12701751,12703604,12705277,12706743,12707867,12708755,12709255,12709489,12709989,12711963,12714011,12716068,12718116,12720163,12722211,12724267,12726315,12728372,12730420,12732477,12734530,12736576,12738538,12740350,12741943,12743425,12744820,12746871,12748928,12750976,12753024,12755079,12757127,12759175,12761223,12763271,12765319,12767372,12769420,12771456,12773339,12775024,12776453,12777430,12778719,12780577,12782470,12784490,12786538,12788589,12790637,12792552,12794206,12795435,12796549,12798597,12800641,12802689,12804527,12806579,12808627,12810683,12812395,12812783,12812889,12813056,12813089,12814099,12816147,12818195,12820243,12822291,12824339,12826394,12828442,12830483,12832391,12834439,12836163,12838111,12840159,12842207,12844255,12846303,12848351,12850399,12852447,12854495,12856543,12858444,12860016,12861998,12863958,12865583,12867176,12868982,12870498,12871332,12872407,12874131,12876119,12878154,12880211,12882259,12884314,12886366,12888327,12890049,12891105,12891151,12893091,12895139,12897187,12899235,12901283,12903331,12905379,12907436,12909484,12911521,12913559,12915511,12917354,12919286,12921126,12922762,12924810,12926858,12928906,12930963,12933011,12935059,12937107,12939155,12941059,12943107,12945155,12947212,12949260,12951308,12953356,12955404,12957452,12959047,12961096,12963084,12965057,12966283,12968066,12970123,12972175,12974137,12975791,12977781,12979829,12981877,12983925,12985973,12988030,12990078,12992126,12994174,12996216,12997814,12999113,13000980,13002953,13004982,13007030,13009078,13011115,13013150,13015177,13017231,13019278,13021323,13023374,13025399,13027389,13029368,13031334,13033350,13035405,13037458,13039502,13041553,13043559,13045594,13047634,13049691,13051748,13053790,13055831,13057840,13059702,13061434,13062958,13064307,13065567,13066789,13067972,13069122,13070117,13071181,13072295,13073252,13074245,13075051,13075968,13076875,13077606,13078227,13078693,13079089,13079294,13079472,13079553,13079603,13080381,13082422,13084459,13086509,13088566,13090562,13092344,13094083,13095542,13096494,13097875,13099923,13101971,13104019,13106067,13107959,13110007,13112055,13114103,13116072,13118120,13120168,13122216,13124232,13126287,13128335,13130383,13132431,13134474,13136528,13138576,13140624,13142656,13144698,13146752,13148766,13150682,13152554,13154319,13156094,13157849,13159457,13161508,13163556,13165589,13167637,13169693,13171741,13173793,13175554,13177610,13179666,13181723,13183780,13185837,13187893,13189946,13191951,13193920,13195977,13198026,13199900,13201362,13203417,13205465,13207391,13208844,13210886,13212934,13214982,13217030,13219078,13221126,13223182,13225230,13227276,13229247,13231025,13232729,13234211,13235583,13236807,13237946,13239878,13241926,13243974,13246022,13248077,13250055,13251893,13253404,13254038,13254547,13255743,13257345,13259134,13261067,13263004,13264950,13266903,13268896,13270733,13272412,13273864,13275117,13275990,13276456,13277236,13279120,13281153,13283087,13284358,13285249,13287297,13289345,13291393,13293441,13295489,13297537,13299585,13301633,13303619,13305621,13307669,13309646,13311351,13312671,13313536,13315591,13317616,13319257,13320602,13322619,13324667,13326715,13328768,13330824,13332877,13334934,13336974,13338969,13340938,13342463,13344458,13346506,13347922,13348516,13350476,13352524,13354572,13356620,13358668,13360716,13362764,13364751,13366517,13368565,13370613,13372661,13374709,13376757,13378805,13380853,13382352,13383459,13385095,13387059,13389098,13391155,13393211,13395119,13396289,13398217,13400021,13402075,13404123,13406171,13408219,13410249,13412227,13413841,13415080,13415970,13416648,13417071,13417406,13417576,13418341,13420389,13422437,13424485,13426533,13428581,13430629,13432677,13434725,13436773,13438821,13440869,13442917,13444965,13447013,13449061,13451109,13453157,13455018,13456368,13458424,13460475,13462520,13464575,13466623,13468676,13470600,13472532,13474552,13476035,13478012,13479233,13479893,13481319,13483027,13485018,13487074,13489122,13491170,13493218,13495266,13497314,13499362,13501410,13503458,13505477,13507315,13508921,13510400,13511755,13512923,13513973,13514985,13515898,13516603,13517428,13518392,13519191,13520155,13521883,13523931,13525979,13528027,13530075,13532123,13534171,13536219,13538267,13540315,13542363,13544411,13546468,13548516,13550268,13551461,13552167,13552875,13554793,13556841,13558889,13560937,13562931,13564521,13566569,13568617,13570673,13572725,13574773,13576821,13578869,13580846,13582252,13583759,13585398,13586652,13588028,13590076,13591919,13592980,13593654,13595463,13597416,13599422,13601470,13603526,13605579,13607633,13609672,13611596,13613211,13614962,13616817,13618744,13620737,13622792,13624849,13626897,13628945,13631000,13633056,13635104,13637146,13639130,13640887,13642311,13643036,13643848,13645608,13647663,13649711,13651759,13653807,13655855,13657903,13659951,13661999,13664046,13666035,13667736,13669147,13670142,13671067,13671254,13671896,13673944,13675983,13677940,13679844,13681639,13683343,13685156,13687204,13689221,13690953,13692518,13693885,13695599,13697393,13699444,13701492,13703412,13705419,13706491,13708539,13710225,13712037,13713997,13716050,13717705,13719593,13720928,13722354,13723484,13725216,13727180,13729210,13731213,13733199,13735234,13737224,13739133,13741181,13743234,13745282,13746889,13747823,13749285,13751263,13753319,13755367,13757415,13759273,13761082,13762299,13763096,13764284,13766340,13768388,13770436,13772484,13773920,13774280,13776197,13778251,13780296,13782344,13784392,13786440,13788488,13790444,13792492,13794547,13796045,13798097,13800138,13801915,13803971,13806026,13807710,13809734,13811790,13813222,13814548,13816519,13817946,13818752,13820804,13822852,13824900,13826944,13828155,13828277,13828429,13829877,13831930,13833978,13836026,13838074,13840131,13842185,13844234,13845936,13847874,13849649,13851108,13851886,13852043,13853249,13855248,13857302,13859260,13861308,13863365,13865422,13867478,13869509,13871563,13873400,13875408,13877079,13879025,13880425,13882302,13883549,13885170,13886817,13888484,13889760,13891052,13892878,13894916,13896897,13898945,13900993,13903041,13905089,13907137,13909185,13911233,13913281,13915329,13917377,13919427,13921467,13923450,13925402,13927168,13929188,13930861,13932833,13934884,13936746,13938246,13940187,13941988,13944036,13946084,13948141,13950189,13952237,13954285,13956333,13958381,13960437,13962465,13964417,13966173,13967735,13969124,13970263,13971100,13972615,13974663,13976711,13978759,13980807,13982855,13984162,13985120,13987177,13989225,13991197,13993164,13995214,13997172,13999198,14001191,14003233,14005289,14007346,14009400,14011452,14013436,14015105,14016585,14018609,14020657,14022714,14024671,14026592,14028621,14030676,14032724,14034772,14036820,14038877,14040928,14042968,14044900,14046650,14048002,14048583,14050028,14052076,14054124,14056172,14058220,14060268,14062211,14064268,14066316,14068364,14070412,14072177,14073604,14075660,14077708,14079756,14081813,14083861,14085909,14087957,14090005,14091807,14093062,14095110,14097158,14099206,14101254,14103302,14105296,14107255,14109303,14110354,14110779,14111295,14112667,14114600,14116648,14118696,14120744,14122792,14124840,14126897,14128945,14130993,14133041,14135097,14137100,14139017,14140788,14142569,14144299,14145867,14147285,14148542,14149775,14150996,14152059,14152873,14153416,14153940,14154461,14154952,14155413,14155830,14156213,14156658,14157122,14157560,14158087,14158623,14158842,14159207,14160051,14161215,14162417,14163649,14164765,14165857,14166815,14167657,14168397,14168910,14169178,14169324,14170066,14171999,14174055,14175720,14177435,14179352,14181330,14183378,14185430,14187444,14189463,14191511,14193559,14195614,14197602,14199462,14201009,14202917,14204966,14206551,14208042,14210039,14211829,14213860,14215916,14217952,14219935,14221853,14223901,14225949,14227984,14229859,14231901,14233957,14235991,14237904,14239903,14241881,14243572,14244986,14246547,14248600,14250651,14252686,14254739,14256787,14258735,14260411,14262291,14264296,14266351,14268379,14270431,14272441,14274492,14276416,14278365,14280243,14282024,14283870,14285837,14287777,14289669,14291653,14293509,14295558,14297500,14299548,14301605,14303653,14305705,14307686,14309264,14310602,14312433,14313552,14314497,14315917,14317965,14320013,14322053,14324043,14325968,14327803,14329598,14331505,14333267,14335256,14337135,14339049,14340999,14342952,14344911,14346956,14348825,14350662,14352597,14354086,14355572,14357554,14359570,14361574,14363439,14365298,14367154,14369005,14370776,14372497,14374026,14375954,14377616,14379080,14380565,14381862,14382732,14384043,14386052,14387998,14389842,14391683,14393414,14395013,14396766,14398408,14399740,14401178,14402455,14403947,14405218,14406450,14407624,14408685,14410039,14411161,14412239,14413480,14414945,14416108,14417576,14419189,14421010,14422795,14424557,14426523,14428511,14430562,14432550,14434558,14436371,14438082,14439644,14441045,14441817,14443409,14445203,14447236,14449293,14451341,14453394,14454400,14454501,14455996,14458044,14460092,14462072,14463544,14465583,14466709,14468757,14470805,14472208,14473925,14475973,14478021,14480069,14482126,14483670,14485718,14487638,14489097,14490577,14492625,14494682,14496730,14498786,14500841,14502890,14504824,14506877,14508925,14510973,14513021,14515069,14517117,14519165,14521213,14523261,14525309,14527357,14529404,14531429,14533477,14535534,14537582,14539630,14541678,14543625,14545577,14547605,14549659,14551715,14553766,14555818,14557873,14559928,14561976,14564024,14566072,14568126,14569702,14571218,14573271,14575324,14577380,14579428,14581481,14583535,14585583,14587460,14589422,14591183,14592739,14594356,14595814,14597582,14599366,14600937,14602374,14603688,14604788,14605604,14605827,14607805,14609596,14611524,14613566,14615614,14617659,14619549,14620976,14622301,14624349,14626397,14628153,14630208,14632256,14634304,14636311,14637778,14639785,14641842,14643723,14645342,14646800,14648639,14650473,14650895,14651348,14652007,14652424,14653150,14653944,14654373,14655026,14655659,14656543,14657373,14657636,14658103,14658594,14658982,14659451,14660094,14660869,14661896,14662822,14663544,14664450,14664798,14665080,14665701,14666363,14666630,14667302,14668373,14669204,14669374,14669641,14669873,14670654,14671261,14671443,14671716,14672322,14673188,14674307,14675689,14676674,14677297,14677906,14678353,14678789,14679263,14679783,14680113,14680786,14681068,14681438,14681868,14682087,14682263,14682793,14683285,14683514,14684113,14684492,14684805,14685093,14685393,14685649,14685925,14686246,14686569,14686814,14687217,14687529,14687857,14688099,14688505,14688781,14689202,14689394,14689626,14689760,14690051,14690250,14690493,14690870,14691363,14692215,14692487,14692743,14693070,14693716,14694430,14694974,14695238,14695413,14695781,14696096,14696332,14696659,14697145,14697595,14698186,14698750,14698941,14699387,14699903,14700170,14700396,14700602,14701031,14701264,14701818,14702170,14702573,14703294,14703603,14703921,14704244,14704552,14704870,14705849,14706548,14707570,14708269,14709554,14710880,14711864,14712502,14713110,14713552,14714070,14714553,14715143,14715486,14715981,14716628,14717179,14717746,14718278,14718929,14719388,14719829,14720306,14720969,14721472,14722169,14722860,14723471,14724427,14725472,14726539,14727244,14727909,14728635,14729002,14729360,14729812,14729954,14730240,14730682,14731979,14733659,14735111,14736206,14737577,14739116,14740525,14742127,14742790,14743769,14744725,14745621,14746632,14747624,14748283,14749305,14750123,14751048,14751699,14752458,14752584,14752817,14753057,14753290,14753861,14754364,14754786,14755409,14755980,14756167,14756348,14756530,14757016,14757115,14757291,14757431,14757619,14757849,14758361,14758661,14758971,14759647,14759947,14760258,14761043,14761541,14762309,14763790,14764421,14764822,14765445,14765878,14766453,14766872,14767383,14767686,14768218,14768445,14768772,14768999,14769292,14769725,14769953,14770281,14770509,14770800,14771190,14771328,14771798,14771936,14772329,14772713,14773108,14773595,14774754,14775961,14776242,14776554,14776934,14777224,14777703,14778234,14778837,14779318,14779644,14780065,14780404,14780581,14781119,14781474,14781822,14782355,14783005,14783610,14784749,14786094,14786427,14786746,14787334,14788025,14788829,14789513,14790263,14791316,14792392,14793029,14793484,14793749,14794157,14794624,14794907,14795353,14795729,14796919,14797585,14797908,14798214,14798611,14798913,14799198,14799514,14800076,14800416,14800737,14801079,14801369,14801669,14802146,14802496,14802986,14803391,14804013,14804597,14805103,14805761,14806325,14806773,14807409,14808013,14808694,14809418,14810125,14810929,14811532,14812212,14812908,14813584,14814338,14814450,14814644,14815056,14815774,14816488,14817786,14819249,14820551,14820930,14821505,14822099,14822566,14822996,14823550,14824214,14824953,14825289,14825858,14826608,14827251,14827685,14828656,14829570,14830148,14830358,14831013,14831735,14832363,14832616,14833365,14834164,14834911,14835785,14836034,14836749,14837493,14838320,14839188,14839753,14840232,14840929,14841494,14841949,14842816,14843277,14844122,14844650,14845271,14845803,14846309,14846670,14846919,14847718,14848295,14848966,14850081,14850782,14851037,14851607,14852380,14852664,14853022,14853605,14853892,14854328,14854419,14854518,14854635,14854922,14855016,14855125,14855244,14855589,14856099,14856797,14857510,14858415,14859186,14859718,14860329,14861113,14861899,14862478,14863041,14863564,14864186,14864923,14865695,14865960,14866244,14866589,14866793,14867125,14867344,14867689,14867918,14868171,14868397,14868655,14868762,14868870,14869073,14869186,14869293,14869407,14869520,14869627,14869846,14869947,14870444,14870603,14870850,14871388,14872240,14873075,14873846,14874440,14874811,14875193,14875593,14875879,14876264,14876490,14876822,14877491,14877863,14879141,14880352,14881770,14882954,14884276,14885432,14886965,14888647,14890190,14891603,14892729,14893907,14894730,14895728,14896955,14898470,14900049,14901610,14902880,14904334,14905941,14906409,14906625,14907014,14907152,14907253,14907362,14907456,14907950,14908263,14908734,14909127,14909773,14910087,14910264,14910519,14910865,14911161,14911379,14911867,14912088,14912328,14912494,14912729,14913133,14913319,14913624,14913884,14914367,14914921,14915446,14915876,14916181,14916433,14916793,14917143,14917358,14917557,14917774,14917903,14918192,14918426,14918695,14918892,14919000,14919223,14919491,14919711,14919863,14920267,14920716,14920907,14921151,14921387,14921720,14922009,14922225,14922344,14922727,14922898,14923095,14923204,14923430,14923539,14923696,14923869,14924930,14926089,14926789,14927112,14927577,14928019,14928435,14929127,14929617,14930129,14930416,14930919,14931172,14931684,14932548,14933652,14934317,14934845,14935434,14935858,14936573,14937474,14938362,14939251,14940140,14940416,14941196,14941497,14941950,14942349,14942753,14943149,14943559,14943983,14944020,14944056,14944093,14944254,14944456,14944668,14944954,14945093,14945286,14945494,14945676,14945845,14946198,14946503,14946827,14947171,14947417,14947592,14947673,14948015,14948717,14949237,14949414,14949734,14949908,14950027,14950152,14950499,14951635,14952792,14952998,14953417,14953846,14954270,14954474,14954672,14956323,14957962,14959600,14961240,14962860,14963354,14963703,14964371,14965443,14966264,14967241,14968330,14968959,14970755,14972021,14973289,14974614,14975863,14977266,14978528,14979756,14980920,14982071,14983218,14984370,14985480,14986763,14988148,14989441,14990747,14992051,14993293,14994551,14995798,14997141,14998408,14999859,15001357,15002724,15004280,15005873,15007341,15008684,15009846,15010912,15011785,15013160,15014257,15015198,15016284,15017322,15018534,15020378,15022091,15023840,15025597,15027258,15028982,15030691,15032402,15034108,15035849,15037549,15039269,15041019,15042772,15044541,15046252,15047964,15049475,15051165,15052806,15054495,15056207,15057909,15059635,15061322,15063045,15064695,15066353,15068002,15069670,15071265,15072832,15074486,15076294,15077944,15079601,15081295,15082914,15084537,15086238,15087983,15089701,15091450,15093307,15095158,15096937,15098751,15100555,15102286,15104026,15105743,15107512,15109332,15111192,15112981,15114621,15116350,15118146,15119890,15121609,15123409,15125168,15126898,15128584,15130323,15131922,15133512,15135350,15136972,15138613,15140203,15141787,15143450,15145089,15146736,15148459,15150144,15151839,15153512,15155252,15156953,15158693,15160382,15162016,15163744,15165494,15167181,15168887,15170559,15172200,15173863,15175544,15177169,15178832,15180433,15182045,15183591,15185127,15186641,15188122,15190022,15191640,15193185,15194723,15196075,15197552,15199078,15200574,15202043,15203232,15204524,15206038,15207454,15208795,15210137,15211568,15212924,15214244,15215719,15217293,15218790,15220348,15221830,15223222,15224670,15226154,15227539,15228921,15230499,15232035,15233504,15235070,15236712,15238266,15239915,15241347,15242841,15244172,15245735,15247176,15248610,15250160,15251497,15252963,15254309,15255644,15256882,15258052,15258262,15258500,15258718,15258945,15259167,15259966,15261425,15263087,15264497,15265586,15266974,15268176,15269091,15270350,15271718,15272663,15274239,15275874,15277022,15278327,15279967,15281114,15282905,15283962,15285563,15287284,15288900,15290246,15291908,15293554,15294776,15296450,15297787,15299410,15300908,15302115,15303813,15304900,15306409,15308002,15309519,15311203,15312634,15314114,15315558,15317044,15318816,15319976,15321343,15322960,15324653,15325868,15327449,15328954,15330444,15332019,15333677,15335078,15336405,15337956,15339488,15340941,15342671,15344136,15345839,15347194,15348574,15350106,15351576,15353242,15354652,15355854,15357575,15359148,15360577,15362264,15363484,15365095,15366136,15367654,15369095,15370720,15372162,15373661,15375254,15376695,15378208,15379777,15381043,15382559,15383840,15385300,15386722,15388164,15389411,15390997,15392345,15393430,15394935,15396161,15397382,15398937,15400475,15402042,15403681,15405367,15406836,15408107,15409723,15411269,15412535,15414008,15415475,15417270,15418678,15420370,15421574,15423204,15424835,15426254,15427994,15429821,15431253,15432991,15434535,15436264,15437883,15439468,15440912,15442504,15443930,15445590,15446963,15448474,15450118,15451821,15453057,15454747,15456369,15458108,15459627,15461092,15462683,15464206,15465756,15467359,15469048,15470836,15472404,15474036,15475235,15476905,15478734,15480135,15481822,15483877,15485924,15487910,15489952,15492005,15494044,15496058,15498112,15500137,15502168,15504195,15506231,15508258,15510295,15512329,15514376,15516424,15518469,15520496,15522485,15524408,15526409,15528423,15530471,15532512,15534568,15536616,15538653,15540693,15542733,15544758,15546776,15548811,15550854,15552886,15554937,15556980,15559027,15561061,15563066,15565096,15566985,15568990,15571026,15573077,15575128,15577156,15579204,15581248,15583280,15585277,15587297,15589301,15591292,15593285,15595300,15597306,15599318,15601362,15603387,15605427,15607440,15609427,15611432,15613419,15615401,15617419,15619415,15621435,15623477,15625505,15627554,15629569,15631569,15633541,15635528,15637504,15639515,15641501,15643558,15645609,15647635,15649677,15651658,15653654,15655653,15657667,15659680,15661726,15663754,15665805,15667856,15669899,15671942,15673969,15676008,15678056,15680100,15682136,15684177,15686229,15688210,15690121,15692122,15694087,15696075,15698034,15700026,15702013,15704000,15705981,15707976,15709933,15711910,15713886,15715881,15717848,15719767,15721759,15723743,15725710,15727677,15729673,15731645,15733630,15735625,15737599,15739550,15741550,15743541,15745540,15747507,15749448,15751454,15753423,15755421,15757375,15759325,15761316,15763330,15765327,15767328,15769337,15771292,15773302,15775277,15777273,15779181,15781147,15783105,15785108,15787095,15789092,15791060,15792997,15794989,15796977,15798964,15800929,15802928,15804942,15806927,15808923,15810922,15812925,15814948,15816940,15818919,15820923,15822909,15824835,15826620,15828415,15830215,15832015,15833754,15835669,15837541,15839273,15841064,15842960,15844849,15846740,15848510,15850132,15851996,15853960,15855858,15857764,15859498,15861307,15863212,15865083,15866899,15868601,15870232,15871851,15873594,15875148,15876924,15878890,15880712,15882576,15884225,15886280,15888328,15890355,15892342,15894310,15896217,15898016,15899903,15901809,15903637,15905566,15907210,15908980,15910636,15912513,15914403,15916317,15918056,15919911,15921798,15923482,15925275,15926997,15928870,15930722,15932600,15934410,15936242,15938001,15939752,15941482,15943220,15945154,15947013,15948802,15950704,15952466,15954361,15956162,15957834,15959510,15961226,15963099,15964990,15966720,15968615,15970458,15972244,15974075,15975665,15977515,15979183,15981039,15982887,15984787,15986521,15988450,15990183,15991937,15993608,15995310,15997050,15998991,16000899,16002893,16004778,16006646,16008507,16010405,16012223,16013930,16015868,16017758,16019737,16021674,16023640,16025635,16027490,16029229,16031112,16032941,16034690,16036326,16038235,16040047,16041894,16043816,16045623,16047507,16049435,16051225,16053098,16054872,16056776,16058566,16060493,16062263,16064205,16066095,16067858,16069724,16071509,16073373,16075155,16076923,16078826,16080608,16082302,16084148,16085924,16087738,16089461,16091398,16093310,16095167,16097128,16099042,16100968,16102888,16104822,16106764,16108679,16110565,16112478,16114442,16116394,16118312,16120208,16122200,16124104,16126002,16128008,16129824,16131261,16132680,16134069,16135523,16136977,16138452,16139999,16141473,16143027,16144464,16145935,16147580,16149360,16151043,16152568,16154414,16156298,16158273,16160166,16162141,16163978,16165812,16167584,16169464,16171286,16173213,16175190,16177175,16178989,16180970,16182639,16184615,16186394,16188121,16190085,16191887,16193862,16195810,16197718,16199645,16201372,16203199,16205059,16206823,16208753,16210703,16212685,16214365,16216375,16218048,16219959,16221604,16223405,16225183,16227075,16229054,16231022,16232830,16234822,16236598,16238515,16240229,16242043,16243914,16245582,16247554,16249488,16251310,16253296,16254967,16256969,16258787,16260531,16262498,16264385,16266361,16268315,16270254,16272181,16273956,16275814,16277681,16279521,16281514,16283495,16285426,16287389,16289299,16291241,16293216,16295125,16297051,16298963,16300819,16302469,16304155,16306178,16308199,16310149,16312111,16314121,16316121,16318121,16320140,16322151,16324165,16326162,16328149,16330152,16332091,16334079,16336062,16338055,16340051,16342052,16344042,16346004,16347986,16349973,16351944,16353963,16355939,16357911,16359922,16361958,16363972,16365959,16367968,16369982,16372001,16374021,16376030,16378032,16380049,16382043,16384045,16386056,16388069,16390088,16392132,16394136,16396150,16398166,16400156,16402192,16404219,16406247,16408216,16410227,16412242,16414254,16416235,16418240,16420236,16422232,16424227,16426234,16428224,16430233,16432246,16434292,16436333,16438328,16440294,16442109,16443824,16445698,16447327,16449007,16450725,16452422,16454138,16455776,16457388,16459135,16460857,16462562,16464170,16466005,16467677,16469310,16471098,16472802,16474321,16476053,16477753,16479492,16481161,16482912,16484664,16486422,16488097,16489894,16491690,16493499,16495174,16496940,16498671,16500426,16502154,16503930,16505697,16507639,16509534,16511530,16513528,16515517,16517466,16519383,16521326,16523236,16525252,16527233,16529202,16531212,16533198,16535174,16537181,16539149,16541152,16543118,16545087,16547058,16549047,16551057,16553044,16555029,16556991,16558976,16560952,16562887,16564878,16566896,16568893,16570884,16572840,16574820,16576792,16578768,16580743,16582700,16584675,16586569,16588490,16590319,16592288,16594116,16595967,16597852,16599672,16601507,16603411,16605260,16607174,16609044,16610911,16612827,16614732,16616610,16618531,16620452,16622446,16624430,16626437,16628341,16630295,16632197,16634112,16635993,16637980,16639920,16641861,16643753,16645683,16647642,16649575,16651548,16653506,16655390,16657319,16659114,16661026,16662957,16665005,16667028,16669053,16671069,16673082,16675085,16677105,16679110,16681158,16683162,16685207,16687250,16689299,16691317,16693326,16695324,16697339,16699331,16701358,16703388,16705439,16707495,16709517,16711555,16713579,16715578,16717613,16719625,16721661,16723712,16725760,16727793,16729829,16731882,16733910,16735889,16737750,16739796,16741787,16743824,16745877,16747909,16749935,16751938,16753913,16755915,16757917,16759885,16761869,16763889,16765925,16767934,16769965,16771974,16773971,16775950,16777970,16779969,16781924,16783905,16785921,16787960,16789984,16792001,16794035,16796009,16798007,16800028,16802012,16803965,16805950,16807972,16810012,16812037,16814076,16816113,16818127,16820176,16822180,16824197,16826178,16828168,16830159,16832187,16834221,16836274,16838326,16840368,16842396,16844436,16846485,16848525,16850578,16852612,16854659,16856715,16858713,16860663,16862634,16864647,16866636,16868589,16870551,16872529,16874553,16876555,16878517,16880489,16882437,16884393,16886386,16888353,16890331,16892307,16894305,16896278,16898260,16900191,16902092,16903989,16905953,16907885,16909880,16911885,16913876,16915875,16917843,16919856,16921649,16923655,16925595,16927520,16929499,16931449,16933248,16935233,16937255,16939292,16941314,16943357,16945370,16947323,16949170,16951176,16953178,16955133,16957025,16958927,16960836,16962812,16964785,16966686,16968591,16970561,16972519,16974477,16976320,16978218,16980184,16982180,16984150,16985982,16987909,16989824,16991776,16993682,16995519,16997425,16999361,17001289,17003253,17005123,17007000,17008903,17010893,17012820,17014686,17016628,17018596,17020515,17022321,17024256,17026223,17028082,17029953,17031773,17033418,17035371,17037280,17039174,17041098,17043008,17044859,17046738,17048677,17050510,17052410,17054306,17056156,17058038,17059885,17061696,17063577,17065537,17067502,17069419,17071327,17073202,17075056,17076905,17078793,17080629,17082494,17084514,17086522,17088527,17090551,17092559,17094495,17096302,17098260,17100263,17102192,17104220,17106230,17108247,17110029,17112002,17114023,17116033,17118049,17120020,17121975,17123975,17126007,17127988,17130008,17131821,17133808,17135804,17137833,17139767,17141546,17143556,17145560,17147573,17149546,17151323,17153339,17155348,17157384,17159384,17161374,17163230,17165170,17167173,17169176,17171171,17173186,17175214,17177239,17179241,17181233,17183257,17185214,17187232,17189232,17191215,17193189,17195212,17197243,17199259,17201287,17203297,17205303,17207018,17209030,17211017,17213005,17214994,17216988,17218955,17220911,17222891,17224861,17226823,17228806,17230745,17232747,17234716,17236649,17238632,17240601,17242602,17244547,17246393,17248349,17250274,17252264,17254099,17256036,17258043,17260052,17262038,17264058,17266007,17267932,17269841,17271787,17273549,17275483,17277436,17279413,17281397,17283365,17285371,17287384,17289355,17291321,17293309,17295247,17297210,17299136,17301112,17303102,17305079,17307070,17309090,17311068,17313047,17314966,17316938,17318918,17320835,17322746,17324733,17326668,17328640,17330560,17332598,17334557,17336558,17338544,17340541,17342558,17344523,17346509,17348464,17350435,17352384,17354390,17356389,17358364,17360312,17362231,17364169,17366175,17368102,17370063,17371999,17373954,17375919,17377856,17379850,17381761,17383704,17385665,17387502,17389381,17391331,17393297,17395191,17397087,17399014,17400924,17402891,17404845,17406754,17408758,17410733,17412680,17414675,17416648,17418584,17420613,17422426,17424414,17426377,17428378,17430405,17432396,17434411,17436462,17438517,17440382,17442396,17444358,17446403,17448426,17450455,17452506,17454539,17456567,17458514,17460521,17462515,17464529,17466561,17468585,17470610,17472604,17474644,17476627,17478663,17480666,17482699,17484745,17486773,17488828,17490858,17492905,17494868,17496886,17498873,17500897,17502936,17504960,17507008,17509058,17511106,17513086,17515094,17517061,17519095,17521136,17523164,17525205,17527247,17529283,17531219,17533171,17535130,17537046,17538938,17540943,17542908,17544891,17546891,17548886,17550920,17552935,17554931,17556922,17558795,17560757,17562731,17564763,17566799,17568752,17570751,17572767,17574716,17576735,17578751,17580669,17582636,17584559,17586230,17588042,17589515,17591079,17592514,17594095,17595606,17596845,17598299,17599751,17601081,17602326,17603759,17605090,17606471,17607670,17609170,17610271,17611710,17612991,17613856,17615476,17616807,17618102,17619295,17620510,17622088,17622897,17624149,17625555,17626670,17628283,17629342,17630688,17631952,17633158,17634745,17635873,17637331,17638860,17640146,17641738,17643105,17644613,17646143,17647629,17649273,17650529,17652015,17653558,17654819,17656365,17657665,17659017,17660348,17661530,17663082,17664321,17665772,17666982,17667848,17669479,17670869,17672107,17673303,17674546,17676160,17676983,17678231,17679687,17680891,17682482,17683551,17684844,17686041,17687503,17688851,17690210,17691678,17693183,17694413,17696069,17697497,17698976,17700543,17701848,17703432,17704741,17706258,17707783,17708994,17710593,17711794,17713172,17714385,17715873,17717214,17718526,17719943,17721099,17722051,17723713,17725118,17726284,17727520,17728747,17730349,17731150,17732392,17733860,17735011,17736598,17737674,17739030,17740259,17741721,17743088,17744495,17745950,17747412,17748679,17750247,17751770,17753211,17754805,17756220,17757622,17759057,17760515,17761919,17763031,17764683,17765885,17767322,17768498,17770101,17771247,17772556,17773934,17775020,17776153,17777622,17779027,17780122,17781447,17782944,17784007,17785046,17786324,17787633,17788870,17790229,17791463,17792841,17794005,17795548,17796683,17798108,17799614,17800912,17802542,17803932,17805447,17806981,17808410,17810035,17811283,17812766,17814261,17815643,17817025,17818460,17819734,17821087,17822227,17823840,17825043,17826535,17827784,17828649,17830264,17831631,17832936,17834102,17835397,17837059,17837911,17839121,17840546,17841816,17843371,17844436,17845749,17846970,17848293,17849805,17851087,17852590,17854110,17855324,17856935,17858316,17859830,17861393,17862735,17864374,17865659,17867171,17868695,17869933,17871573,17872746,17874154,17875417,17876814,17878180,17879432,17880848,17881946,17882881,17884527,17885899,17887121,17888323,17889633,17891156,17892073,17893327,17894782,17895947,17897563,17898648,17900012,17901216,17902709,17904063,17905465,17906931,17908450,17909658,17911237,17912729,17914256,17915883,17917261,17918772,17920169,17921750,17923263,17924372,17925995,17927180,17928514,17929745,17931131,17932462,17933681,17935113,17936295,17937166,17938772,17940174,17941387,17942584,17943899,17945397,17946306,17947554,17948978,17950078,17951644,17952720,17954039,17955281,17956800,17958047,17959269,17960760,17962295,17963631,17965258,17966752,17968295,17969852,17971285,17972855,17974244,17975817,17977322,17978464,17980060,17981392,17982719,17984028,17985244,17986748,17987940,17989378,17990620,17991461,17993078,17994445,17995755,17996957,17998172,17999756,18000584,18001809,18003233,18004413,18005859,18006964,18008259,18009647,18010967,18012602,18013733,18015261,18016832,18018271,18019848,18021289,18022800,18024282,18025803,18027486,18028767,18030234,18031751,18033100,18034376,18035966,18037248,18038611,18039746,18041371,18042527,18044018,18045357,18046195,18047799,18049086,18050427,18051586,18052841,18054410,18055434,18056550,18057906,18059254,18060552,18061980,18063191,18064503,18065712,18067348,18068565,18070059,18071541,18072821,18074479,18075887,18077471,18079006,18080485,18082205,18083481,18084992,18086523,18087858,18089163,18090713,18092045,18093418,18094571,18096197,18097341,18098869,18100186,18101060,18102626,18103905,18105245,18106390,18107731,18109040,18110322,18111320,18112647,18114116,18115409,18117013,18118108,18119566,18120840,18122500,18123734,18125167,18126708,18128127,18129495,18131134,18132798,18134356,18135976,18137352,18139055,18140267,18141478,18142756,18144144,18145532,18147337,18148793,18150213,18151406,18152770,18154312,18155762,18157328,18159064,18160427,18161726,18163016,18164554,18165960,18167466,18169247,18170695,18172122,18173403,18174790,18176258,18177609,18179045,18180828,18182331,18183849,18185154,18186434,18187881,18189091,18190461,18191982,18193566,18194642,18195895,18197130,18198795,18200237,18201542,18202981,18204544,18205840,18207418,18209097,18210859,18212599,18214498,18216044,18217969,18219828,18221631,18223348,18225239,18227042,18228886,18230783,18231951,18233215,18234918,18236609,18238384,18240061,18241730,18243327,18244932,18245651,18247176,18249142,18251036,18252739,18254271,18255284,18256781,18258398,18260206,18261677,18263486,18265034,18267020,18268554,18270453,18272109,18273963,18275869,18277765,18279620,18281251,18282836,18284744,18286499,18288420,18289820,18291764,18293466,18295108,18297030,18298923,18300624,18302500,18304315,18306175,18308067,18309896,18311563,18313255,18314846,18316395,18317980,18319583,18321125,18322806,18324315,18325961,18327536,18329075,18330588,18332026,18333637,18335122,18336531,18338101,18339920,18341786,18343658,18345482,18347393,18349231,18350950,18352749,18354708,18356622,18358359,18360230,18362081,18363936,18365807,18367803,18369770,18371736,18373626,18375609,18377550,18379500,18381404,18383412,18385350,18387313,18389243,18391061,18392895,18394796,18396711,18398768,18400816,18402856,18404830,18406762,18408603,18410208,18412155,18414094,18416023,18417997,18419926,18421926,18423850,18425791,18427728,18429638,18431606,18433496,18435343,18437323,18439236,18441122,18443086,18445011,18446908,18448658,18450527,18452449,18454366,18456190,18458021,18459819,18461564,18463299,18464961,18466766,18468122,18469911,18471671,18473279,18475172,18476609,18478374,18480025,18481563,18483390,18484909,18486191,18487404,18488526,18489835,18491278,18492995,18494629,18495950,18497081,18498746,18500420,18501741,18502870,18504920,18506769,18508563,18510294,18512103,18513854,18515570,18517419,18519187,18520875,18522539,18524243,18525938,18527479,18529268,18531016,18532532,18534135,18535618,18537165,18538731,18540017,18541350,18543043,18544568,18545574,18546736,18548325,18549814,18551453,18553405,18555415,18557382,18559370,18561347,18563246,18565061,18566602,18568344,18570217,18572219,18574056,18575924,18577859,18579789,18581659,18583284,18585123,18586783,18588637,18590462,18592293,18594074,18595821,18597589,18599142,18600760,18602371,18603899,18605650,18607439,18609227,18611095,18612509,18614273,18615699,18617445,18618580,18620405,18622281,18624065,18625751,18627175,18628523,18630328,18631920,18633523,18635078,18636628,18638362,18639979,18641456,18643107,18644715,18646304,18647956,18649226,18650794,18652360,18653917,18655568,18656821,18658481,18659963,18661614,18663244,18664490,18666033,18667563,18669055,18670292,18671441,18672922,18674097,18675571,18676784,18678409,18679496,18680900,18682353,18683603,18685150,18686424,18687700,18689291,18690735,18692254,18694003,18695563,18696883,18698758,18700607,18702490,18704307,18705842,18707739,18709660,18711068,18712778,18714089,18715896,18717465,18719475,18721511,18723260,18724879,18726652,18728341,18730195,18732022,18733682,18735485,18737300,18738986,18740770,18742520,18743950,18745490,18747001,18748190,18750145,18752015,18753619,18755225,18757051,18758588,18760398,18762276,18763927,18765430,18767159,18768847,18770615,18772292,18774029,18776057,18777522,18779040,18780928,18782555,18784397,18786103,18787827,18788993,18789491,18790026,18790507,18791180,18791863,18792493,18792918,18793611,18795201,18797190,18799160,18801121,18803054,18805024,18806989,18808946,18810872,18812624,18814265,18815896,18817555,18819321,18820912,18822661,18824196,18825744,18827365,18828988,18830684,18832149,18833645,18835084,18836485,18837973,18839333,18840896,18842439,18843757,18844919,18846266,18847696,18849207,18850670,18852090,18853420,18855042,18856481,18858089,18859511,18860959,18862325,18863740,18865187,18866621,18867980,18869383,18871205,18872963,18874767,18876640,18878526,18880421,18882235,18883965,18885815,18887488,18889174,18890947,18892750,18894594,18896338,18898085,18899774,18901099,18901904,18902709,18903552,18904808,18906513,18908255,18909883,18911523,18913224,18914815,18916321,18917969,18919715,18921383,18923024,18924735,18926391,18928205,18929992,18931858,18933540,18935323,18936870,18938421,18940217,18941911,18943584,18945039,18946964,18948469,18950316,18952130,18953994,18955587,18957423,18959250,18961159,18962234,18963292,18964277,18965353,18966420,18967508,18968531,18969614,18971203,18972765,18974351,18975855,18977444,18978987,18980527,18982062,18983726,18985181,18986688,18988363,18989988,18991397,18992424,18993435,18994489,18995719,18997143,18998585,19000360,19002098,19003597,19004728,19006079,19007586,19008835,19009939,19011498,19013128,19014457,19016044,19017666,19019189,19020762,19022378,19023966,19025252,19026358,19027143,19028218,19028808,19029779,19030501,19031267,19032792,19034227,19035258,19035767,19036700,19037222,19038008,19038554,19039083,19040011,19040690,19041540,19042038,19042888,19043523,19044228,19044917,19045477,19046375,19047120,19048043,19048595,19049338,19050071,19050799,19051606,19052106,19052912,19053531,19054351,19054638,19054947,19055343,19055606,19056232,19056473,19057125,19057389,19057907,19058145,19058340,19058828,19059007,19059517,19059556,19060060,19060229,19060549,19060889,19061100,19062401,19063817,19065297,19066458,19067675,19068875,19070305,19071270,19072231,19073236,19074226,19075172,19076139,19077116,19078113,19079606,19081008,19082385,19083797,19085292,19086811,19088186,19089547,19091059,19092555,19094039,19095514,19097103,19098702,19100235,19101776,19103278,19104864,19106264,19107692,19109092,19110508,19111944,19113355,19114797,19116245,19117740,19119128,19120534,19121922,19123116,19124053,19124997,19125931,19127044,19127965,19128911,19129836,19130876,19131812,19132707,19133679,19134591,19136003,19137406,19138844,19140243,19141465,19142381,19143323,19144244,19145504,19147128,19148739,19150351,19151948,19153409,19154977,19156548,19158141,19159805,19161150,19162497,19163810,19165069,19166347,19167651,19168991,19170455,19172000,19173507,19174945,19176344,19177475,19178860,19180104,19181633,19183257,19184959,19186563,19188051,19189634,19191468,19193214,19194994,19196478,19197821,19199051,19200530,19201968,19203482,19204667,19205836,19207327,19208756,19210368,19211799,19213290,19214727,19216180,19217910,19219563,19221123,19222811,19224271,19225913,19227456,19229079,19230847,19232409,19234059,19235639,19237253,19238724,19240312,19241882,19243424,19245059,19246726,19248265,19249921,19251405,19252992,19254580,19256205,19257818,19259451,19261110,19262738,19264384,19265855,19267504,19269111,19270685,19272445,19273985,19275575,19277123,19278775,19280604,19282158,19283711,19285241,19287080,19288693,19290306,19291883,19293524,19295307,19296927,19298633,19300237,19301655,19302621,19303569,19304553,19305775,19307280,19308821,19310344,19311855,19313271,19314571,19315874,19317237,19318516,19319702,19320924,19322134,19323583,19324767,19325655,19326653,19327900,19329122,19330308,19331406,19332461,19333734,19334726,19335662,19336559,19338244,19339968,19341600,19343384,19345037,19346473,19347889,19349278,19350607,19352046,19353464,19354867,19356216,19357895,19359398,19360904,19362451,19363979,19365479,19366988,19368543,19370200,19371629,19373021,19374394,19375797,19377166,19378555,19379925,19381322,19383007,19384536,19386088,19387627,19389186,19390723,19392239,19393786,19395378,19397102,19398696,19400303,19401960,19403571,19405164,19406759,19408426,19410205,19411678,19413096,19414517,19415947,19417437,19418877,19420278,19421714,19423595,19425354,19427060,19428753,19430493,19432231,19433936,19435612,19437524,19439275,19440993,19442686,19444366,19446087,19447760,19449433,19451107,19452533,19453545,19454754,19455779,19456888,19457952,19459154,19460338,19461463,19462522,19463441,19464303,19464965,19465668,19466353,19467894,19469572,19471287,19472971,19474687,19476388,19478129,19479842,19481560,19483417,19485152,19486824,19488439,19490163,19491842,19493584,19495299,19497177,19498931,19500706,19502487,19504207,19506011,19507761,19509552,19511274,19513142,19514867,19516559,19518171,19519857,19521522,19523243,19524915,19526646,19528074,19529583,19530963,19532525,19533570,19534578,19535612,19536618,19538430,19540246,19542054,19543882,19545534,19547400,19549189,19551020,19552835,19554300,19555478,19556692,19558185,19559735,19560758,19561797,19563053,19564807,19566425,19568047,19569631,19571168,19572830,19574442,19576028,19577716,19579303,19580744,19582155,19583626,19585019,19586496,19587927,19589346,19590811,19592574,19593968,19595679,19597056,19598533,19599990,19601454,19602854,19604589,19606229,19607840,19609440,19610971,19612574,19614177,19615760,19617459,19618988,19620475,19621918,19623296,19624802,19626235,19627700,19629180,19630901,19632723,19634554,19636387,19638071,19639915,19641709,19643546,19645379,19647020,19648669,19650291,19652049,19653583,19655228,19656842,19658505,19660141,19661625,19663065,19664542,19665927,19667421,19668904,19670359,19671877,19673739,19675545,19677398,19679284,19680985,19682833,19684632,19686509,19688194,19689824,19691472,19693073,19694640,19696325,19697958,19699548,19701192,19702846,19704299,19705734,19707213,19708599,19710096,19711523,19712957,19714495,19716355,19718175,19720021,19721802,19723653,19725451,19727308,19729180,19730508,19731469,19733229,19733895,19734564,19735745,19736439,19737381,19738246,19738958,19740337,19741499,19742125,19742836,19743916,19745215,19746126,19747385,19748769,19750042,19750632,19751823,19753166,19754247,19755624,19756831,19758563,19759605,19760699,19761662,19763210,19764792,19766368,19768117,19769768,19771515,19773048,19774774,19776284,19777805,19779006,19779791,19781068,19782621,19784142,19785159,19786163,19787177,19788199,19789555,19790646,19791675,19792776,19794090,19795920,19797950,19799969,19801989,19804011,19806022,19808045,19810016,19812028,19814057,19816083,19818095,19820101,19822114,19824118,19826128,19828100,19830119,19832145,19834167,19836167,19838180,19840181,19842198,19844164,19846177,19848212,19850248,19852244,19854248,19856269,19858262,19860269,19862234,19864277,19866221,19868123,19870026,19871904,19873798,19875722,19877565,19879444,19881334,19883232,19885109,19887000,19888818,19890685,19892518,19894405,19896326,19898037,19899690,19901355,19903026,19904689,19906346,19908007,19909612,19911403,19913056,19914736,19916401,19918023,19919692,19921332,19922952,19924584,19926186,19927639,19929059,19930482,19931902,19933339,19934738,19936132,19937686,19939212,19940709,19942184,19943727,19945058,19946636,19948130,19949772,19951188,19952683,19954154,19955818,19957238,19958720,19960281,19961911,19963350,19964631,19966118,19967592,19969569,19971284,19972775,19974440,19976033,19977610,19979143,19980722,19982438,19983982,19985556,19987176,19988827,19990577,19992209,19993805,19995330,19996996,19998541,20000096,20001662,20003216,20004764,20006348,20007867,20009255,20010898,20012361,20014081,20015639,20017290,20018824,20020537,20022173,20023805,20025558,20027311,20028782,20030444,20032370,20034241,20035946,20037676,20039553,20041491,20043413,20045365,20047337,20049284,20051216,20053133,20055050,20056870,20058707,20060576,20062526,20064419,20066265,20068133,20069963,20071770,20073555,20075331,20077089,20079098,20081070,20083033,20084994,20086912,20088835,20090734,20092630,20094596,20096568,20098464,20100364,20102220,20104026,20105847,20107669,20109452,20111433,20113412,20115405,20117375,20119336,20121275,20123206,20125123,20127069,20129027,20130816,20132571,20134316,20136047,20137801,20139556,20141297,20143195,20145041,20146815,20148620,20150441,20152223,20154018,20155797,20157613,20159370,20160837,20162290,20163711,20165150,20166558,20167988,20169378,20170937,20172895,20174839,20176774,20178748,20180697,20182620,20184523,20186422,20188329,20190224,20192123,20194093,20196038,20197964,20199875,20201785,20203667,20205620,20207495,20209419,20211174,20212678,20214211,20215827,20217416,20219021,20220592,20222089,20223876,20225672,20227479,20229268,20230998,20232778,20234516,20236237,20237958,20239595,20240927,20242219,20243521,20244925,20246207,20247546,20248902,20250438,20252084,20253735,20255376,20257041,20258745,20260408,20262041,20263630,20265395,20266882,20268345,20269874,20271443,20273002,20274489,20275948,20277447,20279139,20280754,20282354,20283964,20285620,20287164,20288820,20290179,20291527,20292861,20294163,20295405,20296617,20297834,20299133,20301032,20302928,20304794,20306682,20308583,20310463,20312327,20314209,20316170,20318059,20319934,20321772,20323654,20325543,20327431,20329302,20331152,20332938,20334338,20335747,20337106,20338520,20340023,20341504,20342959,20344531,20346242,20347925,20349617,20351357,20353000,20354618,20356195,20357728,20358916,20360434,20361992,20363585,20365217,20366982,20368673,20370372,20372087,20373668,20375110,20376596,20378096,20379530,20380856,20382286,20383709,20385397,20386850,20388375,20389883,20391336,20392881,20394383,20395905,20397354,20399035,20400519,20402054,20403539,20404454,20405928,20407463,20408962,20410691,20412667,20414594,20416561,20418010,20419416,20420843,20422239,20423433,20424857,20426264,20427677,20429211,20430345,20431507,20432610,20433564,20434673,20435788,20436910,20438191,20439693,20441108,20442626,20444652,20446528,20448430,20450323,20452228,20454126,20456037,20457920,20459557,20461215,20462654,20464133,20465614,20466793,20467738,20468583,20469403,20470304,20471135,20472026,20472832,20473694,20474663,20475618,20476439,20477329,20478297,20479298,20480265,20481454,20482793,20484068,20485330,20486637,20487073,20487591,20488226,20488858,20489082,20489534,20489700,20490711,20492094,20492782,20493769,20494502,20495861,20496925,20497867,20499167,20499574,20499809,20500247,20500632,20501258,20502589,20504103,20505594,20507472,20509293,20511049,20512867,20514694,20516510,20518288,20520036,20521856,20523469,20525108,20526755,20528287,20529918,20531539,20533170,20534721,20536351,20537661,20538994,20540337,20541669,20543378,20545039,20546722,20548417,20550082,20551749,20553432,20555072,20556713,20558408,20560086,20561758,20563123,20564975,20566805,20568641,20570393,20572193,20574026,20575887,20577655,20579483,20580980,20582406,20583886,20585337,20587094,20588984,20590817,20592681,20594523,20596384,20598228,20600103,20601982,20603814,20605397,20607222,20608172,20609201,20610334,20611523,20613044,20615043,20617042,20618996,20620946,20622902,20624851,20626737,20628622,20630522,20632478,20634415,20636350,20638287,20640208,20642114,20644067,20646083,20647752,20649443,20651191,20653014,20654825,20656589,20658247,20659861,20661877,20663933,20665981,20668014,20670070,20672108,20674156,20676207,20678264,20680313,20682367,20684404,20686445,20688494,20690538,20692579,20694633,20696634,20698509,20700424,20702255,20704099,20705933,20707781,20709623,20711544,20713439,20715350,20717214,20719069,20720917,20722775,20724623,20726489,20728455,20730302,20731844,20732629,20733476,20734229,20734871,20735528,20736209,20736976,20737846,20738513,20738918,20739671,20740512,20741375,20741883,20742387,20743168,20744015,20744919,20745456,20745840,20746647,20747500,20748369,20748898,20749526,20750711,20751795,20752879,20753261,20754111,20755267,20756294,20757243,20757631,20758698,20759853,20760932,20761645,20762090,20763253,20764382,20765580,20766079,20767565,20768926,20770533,20771897,20773713,20774915,20775946,20777090,20778258,20779370,20780521,20781556,20782649,20783748,20784929,20786034,20787237,20788419,20789490,20790539,20791650,20793036,20794315,20795453,20796530,20797735,20798780,20799791,20800920,20801943,20803010,20803994,20804901,20805921,20806974,20807834,20808656,20809479,20810452,20811575,20812002,20812591,20813105,20813639,20814194,20814696,20815223,20815748,20816238,20816766,20817271,20817756,20818243,20818767,20819338,20819857,20821445,20822910,20824398,20825902,20827434,20828932,20830449,20831963,20833428,20834489,20835479,20836534,20838100,20839627,20840989,20842379,20843689,20845098,20846596,20848351,20849973,20851640,20853291,20854894,20856526,20858199,20859843,20861559,20863351,20865045,20866744,20868485,20870204,20871894,20873580,20875278,20876841,20877887,20879057,20880294,20881665,20882981,20884294,20885569,20886610,20888072,20889500,20890913,20892341,20893894,20895428,20896945,20898495,20900305,20901449,20902478,20903636,20904824,20905917,20907091,20908153,20909257,20910338,20911485,20912570,20913806,20914971,20916057,20917130,20918219,20919634,20920852,20921966,20923065,20924242,20925272,20926330,20927472,20928523,20929517,20930522,20931434,20932485,20933528,20934355,20935157,20935999,20937097,20938106,20938540,20939098,20939616,20940150,20940714,20941213,20941745,20942259,20942770,20943271,20943782,20944284,20944809,20945331,20945911,20946522,20948377,20950206,20951998,20953781,20955592,20957378,20959122,20960856,20962232,20963638,20965041,20966444,20968304,20970142,20971990,20973850,20975721,20977565,20979392,20981292,20983142,20984567,20986133,20987705,20989187,20990694,20992397,20993846,20995518,20997114,20998896,21000678,21002523,21004272,21005615,21006770,21007940,21009064,21010559,21011784,21013634,21015378,21017173,21018978,21020780,21022610,21024356,21026086,21027832,21029055,21030350,21031774,21032894,21034419,21035418,21037060,21038842,21040687,21042529,21044267,21046060,21047887,21049674,21051512,21053253,21055012,21056833,21058478,21060108,21061866,21063612,21065378,21067056,21068672,21070327,21071710,21073347,21074962,21076570,21078169,21079742,21081335,21082898,21084520,21086211,21087806,21089588,21091318,21092689,21094255,21096040,21097770,21099287,21100760,21101753,21102915,21104056,21105186,21106356,21107439,21108529,21109631,21110779,21111886,21113063,21114225,21115347,21116449,21117509,21118602,21119625,21120815,21121981,21123164,21123556,21124524,21125766,21126862,21127825,21128843,21130036,21131185,21132340,21132787,21133717,21134967,21136109,21137073,21138069,21139183,21140384,21141503,21142150,21142994,21144182,21145306,21146295,21147314,21148373,21149609,21150766,21151557,21152294,21153423,21154576,21155656,21156621,21157594,21158841,21159927,21160863,21161512,21162607,21163848,21164964,21166372,21167380,21168488,21169605,21170749,21171802,21172843,21173984,21174988,21176010,21176955,21177903,21178953,21180007,21180815,21181592,21182452,21183721,21184574,21185731,21186854,21187864,21188272,21189494,21190691,21191846,21192768,21193889,21195025,21196195,21197373,21198639,21199748,21200899,21202139,21203242,21204548,21205705,21206859,21208078,21209230,21210503,21211601,21212770,21213977,21215154,21216500,21217593,21218570,21219644,21220941,21222162,21223217,21224219,21225312,21226573,21227819,21228898,21229845,21230960,21232267,21233415,21234470,21235467,21236594,21238095,21238524,21239052,21239718,21241138,21242757,21244556,21246405,21248275,21250077,21251590,21252677,21253184,21253704,21254216,21254760,21255276,21256578,21258123,21259533,21261191,21262727,21264149,21265809,21267348,21268776,21270433,21271980,21273407,21275168,21276984,21278877,21280583,21282322,21284209,21285915,21287808,21289575,21291328,21293247,21295014,21296735,21298526,21300428,21302164,21303972,21305825,21307515,21309412,21311085,21312924,21314714,21316512,21318256,21320044,21321868,21323646,21325477,21327317,21329067,21330967,21332697,21334445,21336345,21338055,21339900,21341683,21343441,21345325,21347193,21348927,21350642,21352581,21354279,21356110,21357995,21359689,21361575,21363322,21365159,21366910,21368764,21370514,21372305,21374165,21375933,21377680,21379553,21381285,21383131,21384908,21386663,21388552,21390247,21392079,21393858,21395758,21397490,21399340,21401077,21402809,21404800,21406468,21408270,21410160,21411890,21413624,21414704,21415972,21417072,21418379,21419659,21420826,21422081,21423191,21423780,21424570,21425405,21426336,21426927,21427250,21428081,21428936,21429796,21430328,21430771,21431546,21432458,21433236,21433637,21434262,21435047,21435906,21436635,21437972,21439067,21440140,21441282,21442423,21443560,21444722,21445779,21446923,21447998,21449180,21450298,21451516,21452661,21453763,21454817,21455917,21457410,21458947,21460507,21461840,21462965,21464066,21465269,21466316,21467363,21468470,21469497,21470498,21471485,21472406,21473441,21474496,21475323,21476153,21476983,21477883,21479411,21480797,21482466,21483290,21483763,21484319,21484840,21485382,21485942,21486436,21486996,21487528,21488026,21488530,21489008,21489511,21490031,21490554,21491131,21491919,21493558,21495221,21496829,21498509,21500212,21501847,21503486,21505185,21506854,21508551,21510343,21511967,21513581,21515187,21516876,21518491,21519097,21520032,21521344,21522750,21524092,21525494,21526828,21528230,21529567,21530917,21532016,21533093,21534313,21535368,21536655,21537786,21539003,21540067,21541403,21542790,21544230,21545642,21547150,21548556,21549959,21551380,21552816,21554405,21555928,21557398,21558733,21560208,21561615,21563019,21564354,21565759,21566896,21568091,21569258,21570386,21571675,21572895,21574169,21575335,21576606,21577745,21578992,21580261,21581590,21582734,21583985,21585076,21586367,21587739,21589285,21590785,21592304,21593969,21595449,21597014,21598445,21599871,21601287,21602730,21603912,21605119,21606209,21607525,21609020,21610376,21611209,21612561,21613584,21614425,21615631,21617306,21619337,21621369,21623385,21625387,21627385,21629395,21631351,21633358,21635389,21637411,21639418,21641432,21643450,21645438,21647440,21649427,21651215,21652619,21653973,21655561,21656982,21658103,21659221,21660342,21661463,21662593,21663714,21665130,21666681,21668140,21669759,21671324,21673085,21674800,21676546,21678315,21680088,21681661,21683134,21684700,21686304,21687885,21689455,21691016,21692496,21692607,21692871,21694886,21696911,21698809,21700700,21702596,21704487,21706306,21708188,21710090,21711957,21713895,21715815,21717728,21719691,21721588,21723498,21725410,21727359,21729231,21730987,21732976,21734918,21736806,21738699,21740657,21742558,21744308,21746102,21747923,21749733,21751629,21753523,21755423,21757237,21759146,21761034,21762916,21764789,21766729,21768595,21770455,21772284,21774161,21776064,21777872,21779422,21781094,21782758,21784416,21786127,21787759,21789430,21791090,21792721,21794455,21796073,21797768,21799424,21801154,21802809,21804464,21806123,21807915,21808275,21808891,21809378,21810091,21810773,21811397,21812018,21812679,21813395,21814117,21814794,21815621,21816489,21817188,21818043,21818554,21819023,21820588,21821871,21823257,21825028,21826628,21828285,21829837,21831335,21832467,21833805,21835447,21837026,21838502,21840099,21841736,21843332,21844904,21846338,21847839,21849457,21851062,21852707,21854308,21855778,21857371,21858930,21860457,21862192,21863713,21865406,21866987,21868481,21870331,21872180,21873973,21875737,21877567,21879431,21881269,21883109,21884965,21886698,21887984,21889267,21890618,21891984,21893311,21894612,21895927,21897373,21898887,21900363,21901832,21903301,21904787,21906234,21907684,21909108,21910719,21912184,21913628,21915063,21916528,21918037,21919520,21920954,21922429,21924052,21925521,21926961,21928431,21929926,21931396,21932853,21934283,21935874,21937347,21938772,21940197,21941642,21943130,21944578,21945993,21947393,21949011,21950392,21951807,21953218,21954721,21956183,21957589,21959007,21960618,21962037,21963432,21964785,21966254,21967737,21969167,21970570,21971981,21973592,21974965,21976331,21977751,21979215,21980694,21982109,21983498,21985088,21986548,21987938,21989393,21990888,21992350,21993820,21995257,21996679,21998309,21999766,22001182,22002653,22004136,22005621,22007067,22008521,22010001,22011484,22012849,22014191,22015566,22016936,22018320,22019628,22020890,22022457,22023783,22025108,22026494,22027898,22029256,22030597,22031920,22033194,22034735,22036057,22037353,22038714,22040066,22041389,22042693,22043953,22045541,22046991,22048430,22049887,22051382,22052879,22054351,22055797,22057194,22058831,22060241,22061637,22063130,22064624,22066116,22067561,22068955,22070579,22072000,22073351,22074736,22076198,22077673,22079093,22080536,22081927,22083536,22084952,22086324,22087756,22089229,22090688,22092102,22093484,22094993,22096516,22097899,22099286,22100724,22102218,22103673,22105093,22106508,22108119,22109576,22110985,22112421,22113876,22115352,22116788,22118197,22119592,22121421,22123184,22125011,22126734,22128598,22130182,22131932,22133732,22135573,22137405,22139176,22140811,22142541,22144330,22146083,22147817,22149614,22151467,22153291,22155172,22156995,22158886,22160725,22162633,22164479,22166360,22168192,22170016,22171774,22173590,22175413,22177202,22178970,22180782,22182741,22184469,22186195,22187877,22189598,22191293,22192978,22194664,22196481,22198256,22199996,22201686,22203404,22205134,22206866,22208539,22210255,22212174,22214053,22215871,22217690,22219503,22221299,22223146,22224938,22226740,22228621,22230346,22232139,22233877,22235611,22237334,22239094,22240866,22242714,22244509,22246348,22248171,22249987,22251812,22253567,22255336,22257130,22258942,22260732,22262485,22264244,22265864,22267475,22269227,22270962,22272574,22274399,22276183,22277901,22279681,22281330,22282978,22284615,22286312,22288115,22289998,22291654,22293258,22294882,22296541,22298236,22299917,22301587,22303251,22305009,22306697,22308321,22309971,22311681,22313375,22315065,22316743,22318552,22320368,22322121,22323898,22325692,22327526,22329316,22331158,22332936,22334777,22336568,22338252,22340000,22341797,22343592,22345361,22347128,22348980,22350645,22352351,22354079,22355817,22357570,22359281,22360981,22362716,22364486,22366180,22367878,22369590,22371284,22372960,22374657,22376406,22378207,22379907,22381610,22383312,22384939,22386592,22388244,22389979,22391697,22393416,22394819,22396341,22397847,22399352,22400866,22402384,22403889,22405456,22407506,22409472,22411400,22413405,22415410,22417345,22419338,22421269,22423179,22425144,22427128,22429128,22431097,22433041,22435045,22437033,22439047,22440628,22441085,22441117,22441157,22441197,22441516,22441556,22441588,22441628,22442348,22444200,22445979,22447831,22449687,22451507,22453338,22455123,22456940,22458714,22460187,22461682,22463083,22464548,22465954,22467415,22468871,22470453,22472305,22474112,22475871,22477629,22479416,22481188,22482943,22484709,22485866,22486668,22486708,22486746,22486786,22487087,22487125,22487165,22487203,22487243,22488345,22489464,22491205,22492882,22494557,22496233,22497914,22499595,22501276,22502991,22504358,22505661,22507067,22508558,22509292,22510591,22512138,22513467,22514541,22515966,22517760,22519343,22520881,22520921,22520960,22521000,22521038,22521351,22521391,22521430,22521470,22522359,22523608,22524791,22525930,22527150,22528914,22530520,22532167,22533874,22535537,22537227,22538900,22540538,22541616,22541656,22541696,22541735,22542286,22543250,22543349,22543735,22545328,22547202,22549228,22550863,22552507,22554139,22555782,22557428,22559109,22560834,22562568,22564257,22566024,22567734,22569500,22571226,22572925,22574612,22576289,22578026,22578834,22579983,22580022,22581676,22583478,22585183,22586896,22588658,22590400,22592165,22593873,22595691,22597546,22599374,22601261,22603157,22604965,22606861,22608646,22610452,22612430,22614213,22615839,22617520,22619187,22620951,22622741,22624559,22626254,22628129,22629959,22631888,22633692,22635643,22637418,22639399,22641174,22643140,22644964,22646430,22647796,22649063,22650263,22651709,22653285,22654811,22656214,22657555,22658907,22660162,22661434,22662672,22663993,22665348,22666823,22668326,22668944,22669809,22670666,22671742,22673250,22674844,22675723,22676361,22677057,22677914,22679479,22681123,22682808,22684046,22684946,22686221,22687933,22689170,22690246,22691057,22691976,22692901,22693546,22694277,22695297,22696613,22697901,22699116,22700368,22701758,22703106,22704490,22705778,22707444,22709222,22710979,22712752,22714498,22716252,22717939,22719715,22721429,22723205,22724963,22726735,22728475,22730259,22732048,22733831,22735560,22736478,22737423,22738336,22739289,22741193,22743151,22744747,22746726,22748374,22749539,22750770,22751937,22753438,22755418,22757419,22759446,22761461,22763322,22765261,22767154,22769038,22771045,22773088,22775134,22777165,22779131,22780908,22782657,22784538,22786338,22788167,22789960,22791715,22793494,22795152,22796824,22798435,22800042,22801905,22803273,22804550,22805873,22807562,22808742,22809985,22811265,22812621,22813886,22815059,22816327,22817588,22819393,22820563,22821797,22823054,22824473,22825736,22826475,22827396,22829106,22830682,22831453,22832277,22833910,22835585,22836426,22837151,22838488,22839790,22841180,22842570,22843918,22845757,22847640,22849495,22851374,22853231,22855136,22857091,22859041,22860983,22862761,22864466,22866115,22867742,22869398,22871150,22872917,22874733,22876482,22877944,22879327,22880772,22882254,22883803,22885250,22886653,22888110,22889722,22891213,22892669,22894151,22895793,22897310,22898760,22900290,22901889,22903869,22905851,22907790,22909705,22911717,22913695,22915652,22917657,22919637,22921406,22923185,22924927,22926743,22928403,22929935,22931512,22933104,22935063,22936954,22938735,22940642,22942533,22944338,22946149,22947952,22949890,22951797,22953669,22955543,22957482,22959275,22961101,22962856,22964691,22966478,22967914,22969426,22970788,22972093,22973337,22974573,22976248,22977406,22978608,22979838,22981069,22982726,22983815,22985038,22986557,22988408,22990198,22991955,22993721,22995626,22997416,22999200,23000975,23002830,23004632,23006466,23008282,23010079,23011233,23012117,23012922,23013656,23014763,23015915,23017094,23018249,23019521,23020705,23021947,23023106,23024340,23025685,23027065,23028424,23029683,23031470,23033306,23035172,23037005,23038888,23040717,23042583,23044438,23046323,23048229,23050150,23052071,23053956,23055905,23057828,23059760,23061713,23063561,23065321,23067130,23068888,23070550,23072332,23074020,23075651,23077190,23078752,23080590,23082337,23084124,23085988,23087805,23089582,23091444,23093181,23094661,23096064,23097542,23099107,23100584,23102292,23104021,23105574,23107129,23108849,23110456,23112190,23113875,23115628,23117369,23119145,23120987,23122949,23124997,23127046,23128916,23130953,23132928,23134918,23136874,23138914,23140863,23142806,23144694,23146395,23147535,23148904,23150196,23151413,23153178,23154978,23156728,23158483,23160163,23161696,23163301,23164888,23166572,23168372,23170173,23171950,23173756,23175558,23177403,23179184,23180953,23182721,23184394,23186105,23187753,23189382,23191141,23192958,23194734,23196281,23197335,23198473,23199459,23200884,23202024,23202586,23203145,23204154,23205669,23206348,23207804,23208493,23209833,23210391,23210992,23211494,23212231,23212954,23213683,23214357,23215165,23216125,23217288,23218494,23219529,23221009,23222366,23223697,23225119,23226677,23228094,23229430,23231003,23232560,23234078,23235555,23237015,23238512,23240106,23241629,23243044,23244561,23246127,23247506,23248839,23250304,23251852,23253385,23254766,23256251,23257684,23258191,23258439,23258632,23258849,23259755,23260247,23260704,23261144,23262502,23264551,23266581,23268633,23270674,23272714,23274770,23276821,23278834,23280865,23282801,23284716,23286671,23288552,23290461,23292388,23294291,23296125,23297531,23298913,23300355,23301779,23302996,23304177,23305327,23306381,23307779,23309192,23310624,23312084,23313676,23315548,23317356,23319165,23321044,23322908,23324721,23326500,23328373,23330228,23331987,23333732,23335450,23337177,23338909,23340655,23342341,23344037,23345465,23346722,23348047,23349470,23351008,23352301,23353627,23355036,23356811,23358580,23360343,23362135,23363721,23364957,23366215,23367452,23368875,23370718,23372524,23374294,23376139,23377631,23379104,23380530,23381987,23383760,23385788,23387810,23389849,23391887,23393901,23395905,23397873,23399868,23401451,23402948,23404457,23405962,23407762,23409434,23411104,23412787,23414677,23416655,23418633,23420616,23422629,23424340,23426046,23427783,23429518,23431568,23433620,23435673,23437729,23439547,23441114,23442604,23443129,23443654,23444190,23444731,23445952,23447360,23448777,23450120,23451198,23452632,23454032,23455575,23456780,23458254,23459830,23461471,23462911,23464538,23466181,23468032,23469698,23471585,23473301,23474555,23475830,23477117,23478499,23479473,23480434,23481476,23482421,23483651,23484526,23485586,23486424,23487362,23488495,23489192,23489880,23491826,23493813,23495802,23497737,23498961,23500904,23502896,23504883,23506660,23508561,23510470,23512342,23514260,23516276,23518289,23519901,23521900,23523889,23525770,23527673,23529563,23531204,23533202,23534855,23536859,23538863,23540297,23542002,23543609,23545049,23546529,23548112,23549675,23551124,23552874,23554773,23556659,23558503,23560390,23562265,23564149,23565996,23567879,23569663,23571149,23572576,23574132,23576080,23578063,23580024,23582030,23584019,23585848,23587637,23589446,23591274,23593122,23595008,23596918,23598742,23600287,23601728,23603191,23604588,23606057,23607542,23609088,23610569,23612074,23613598,23615340,23617034,23618630,23620151,23621736,23623285,23624790,23626496,23628235,23629838,23631602,23633315,23634998,23636645,23638449,23640169,23641810,23643486,23645031,23646732,23648378,23650029,23651548,23653249,23654911,23656459,23657936,23659522,23661010,23662712,23664194,23665792,23667440,23668864,23670368,23671839,23673399,23674858,23676387,23678035,23679691,23681087,23682402,23683613,23685194,23686882,23688619,23690146,23691671,23693366,23694908,23696639,23698419,23700129,23701663,23703232,23704824,23706436,23707975,23709510,23711101,23712594,23714045,23715691,23717223,23718741,23720049,23721425,23722604,23723764,23724925,23726196,23727455,23728853,23730296,23731652,23733046,23734639,23735930,23737179,23738610,23740428,23742242,23743933,23745394,23746602,23747604,23748594,23749476,23750505,23751616,23752820,23754113,23755477,23757103,23758661,23760287,23762066,23763842,23765140,23766511,23768053,23769529,23771059,23772530,23774004,23775414,23776980,23778682,23780390,23782097,23783808,23785521,23787266,23789057,23791015,23792697,23794478,23796243,23797712,23799060,23800382,23801708,23803090,23804603,23806195,23807777,23809403,23810965,23812347,23813757,23815114,23816865,23818110,23819565,23820914,23822286,23823698,23825107,23826756,23828257,23829760,23831198,23832646,23834056,23835532,23837054,23838487,23839990,23841867,23843482,23844949,23846386,23847757,23849123,23850485,23851832,23853233,23854791,23856496,23858227,23859948,23861510,23863019,23864539,23865920,23867577,23869117,23870493,23871932,23873284,23874716,23876136,23877768,23879425,23881068,23882634,23884065,23885634,23887041,23888492,23889976,23891427,23893007,23894561,23895831,23896102,23896791,23898380,23899696,23899958,23900621,23902196,23903497,23903759,23904404,23905968,23907293,23907554,23908169,23909744,23911080,23911355,23911948,23913496,23914849,23915121,23915680,23916942,23918170,23919470,23920725,23922136,23923423,23924764,23926023,23927461,23928742,23930017,23931320,23932715,23934048,23935326,23936677,23937989,23939366,23940858,23942095,23943325,23944573,23945831,23947073,23948327,23949562,23951066,23952255,23953462,23954706,23955963,23957127,23958318,23959565,23960777,23962269,23963569,23964780,23966055,23967328,23968592,23969830,23971076,23972502,23974337,23976056,23977824,23979501,23981150,23982833,23984749,23986757,23987983,23989310,23990623,23992015,23993338,23994762,23996040,23997364,23998743,24000055,24001443,24002754,24004125,24005520,24006923,24008288,24009983,24011652,24013274,24014858,24016528,24018110,24019684,24021206,24022489,24023884,24025239,24026633,24028162,24029653,24031169,24032679,24034328,24036181,24037900,24039502,24041129,24042734,24044304,24045891,24047362,24048675,24050038,24051403,24052791,24054305,24055810,24057356,24058829,24060430,24062244,24064028,24065661,24067260,24068850,24070463,24072076,24073577,24074927,24076262,24077630,24079033,24080531,24082039,24083580,24085006,24086599,24088361,24090200,24091850,24093438,24095019,24096649,24098251,24099764,24101165,24102463,24103867,24105268,24106756,24108289,24109834,24111238,24112817,24114528,24116266,24117510,24118743,24119810,24120747,24121737,24122909,24123952,24125119,24126240,24127504,24128762,24129867,24130754,24131766,24132764,24133917,24135581,24136827,24138085,24139174,24140106,24141063,24142218,24143275,24144408,24145545,24146819,24148091,24149233,24150149,24151142,24152196,24153312,24155137,24157086,24158991,24160940,24162902,24164886,24166804,24168768,24170648,24172501,24174285,24176080,24177974,24179865,24181827,24183758,24185696,24187159,24189117,24191074,24193020,24194997,24196988,24198967,24200892,24202856,24204502,24205632,24206788,24207954,24209282,24210427,24211557,24212701,24213882,24215718,24217480,24219257,24221033,24222807,24224589,24226397,24228155,24229879,24231659,24233402,24235197,24236965,24238595,24240405,24242415,24244360,24246224,24248096,24250009,24251958,24253307,24254184,24255202,24257144,24259101,24261104,24263075,24265012,24267006,24268985,24270955,24272967,24274929,24276903,24278879,24280829,24282815,24284764,24286764,24288728,24290415,24291973,24293565,24295113,24296692,24298243,24299814,24301390,24303138,24304919,24306512,24308197,24309773,24311515,24313193,24314903,24316585,24318266,24319873,24321344,24322933,24324369,24326153,24327769,24329514,24331131,24332923,24334580,24336311,24338038,24339862,24341643,24343407,24345256,24347056,24348844,24350458,24352135,24353739,24355556,24357241,24359051,24360679,24362442,24364018,24365637,24367226,24368793,24370493,24372101,24373879,24375561,24377334,24378999,24380821,24382576,24384389,24385945,24387595,24389280,24391010,24392791,24394600,24396429,24398167,24400015,24401808,24403648,24405432,24407221,24408911,24410652,24412350,24413986,24415529,24417175,24418886,24420561,24422381,24424124,24425994,24427705,24429463,24431115,24432952,24434654,24436442,24437778,24439684,24441566,24443119,24444990,24446947,24448817,24450577,24452142,24454043,24456054,24458059,24459724,24461533,24463002,24464367,24465512,24466740,24467929,24469066,24470806,24472431,24474007,24475536,24477008,24478546,24479997,24481522,24483136,24484397,24485456,24486254,24487259,24488558,24489614,24490610,24491648,24492700,24494184,24496017,24497824,24499707,24501460,24503381,24505150,24507048,24508853,24510682,24512351,24514015,24515743,24517358,24519129,24520872,24522554,24524442,24526280,24528065,24529936,24531738,24533593,24535393,24537269,24539058,24540910,24542596,24544259,24546050,24547658,24549453,24551183,24552880,24554744,24556493,24558381,24560234,24562114,24563966,24565831,24567716,24569546,24571502,24573448,24575372,24577371,24579251,24581230,24583191,24585242,24587167,24589105,24590869,24592571,24594365,24596137,24598015,24599833,24601648,24603388,24604764,24606225,24607819,24609163,24610427,24612136,24613692,24615386,24616634,24617775,24619146,24620524,24621591,24622575,24622914,24623254,24624692,24625956,24627275,24628557,24630009,24631357,24632644,24634000,24635301,24636740,24638099,24639384,24640778,24642039,24643462,24644831,24646124,24647504,24648845,24650280,24651921,24652898,24654463,24655848,24657757,24659686,24661677,24663724,24665749,24667755,24669751,24671676,24673665,24675288,24676846,24678364,24679858,24681583,24683163,24684918,24686652,24688343,24690083,24691861,24693451,24695213,24696741,24698364,24700032,24701698,24703317,24705129,24707051,24708936,24710712,24712307,24714068,24715948,24717863,24719784,24721607,24723246,24725040,24726892,24728820,24730630,24732387,24734026,24735951,24737866,24739762,24741612,24743198,24745050,24746966,24748894,24750835,24752727,24754361,24756124,24757997,24759874,24761738,24763471,24764608,24765582,24766595,24767587,24769082,24770578,24772204,24773769,24775417,24777051,24778753,24780383,24781979,24783638,24785415,24787081,24788811,24790549,24792151,24793851,24795464,24797106,24798771,24800496,24802416,24804134,24805880,24807605,24809262,24811045,24812740,24814339,24816107,24817739,24819549,24821174,24823071,24824993,24826687,24827901,24829854,24831751,24833621,24835519,24837465,24839384,24841257,24842937,24844695,24846334,24848008,24849841,24851785,24853666,24855544,24857472,24859363,24861392,24863298,24865246,24867197,24869111,24870911,24872679,24874455,24876277,24878197,24880147,24882022,24883898,24885816,24887694,24889579,24891436,24892999,24894358,24895760,24897268,24898885,24900524,24902126,24903759,24905676,24907413,24909195,24910944,24912722,24914438,24916221,24918000,24919758,24921534,24923297,24925023,24925561,24926108,24926644,24927813,24928884,24929877,24931257,24932490,24933746,24934874,24936618,24938265,24939896,24941479,24943250,24944781,24946431,24948153,24949619,24951201,24952790,24954237,24955517,24956897,24958500,24960196,24961903,24963553,24965299,24966998,24968606,24970207,24971966,24973469,24975092,24976549,24978073,24979753,24981333,24982991,24984564,24986228,24987798,24989412,24991020,24992570,24994218,24995734,24997355,24998821,25000434,25001972,25003481,25005133,25006601,25008163,25009805,25011358,25013009,25014581,25016076,25017901,25019710,25021547,25023435,25025289,25027138,25028998,25030817,25032714,25034531,25036354,25038214,25040130,25042021,25043876,25045734,25047602,25049583,25051580,25053534,25055428,25057330,25059218,25061161,25063087,25065007,25066928,25068845,25070748,25072601,25074466,25076361,25078241,25080090,25081842,25083467,25085095,25086894,25088518,25090134,25091759,25093386,25094984,25096617,25098227,25099818,25101563,25103212,25104854,25106519,25108168,25109809,25111444,25113088,25114846,25116487,25118139,25119775,25121420,25123047,25124682,25126333,25127988,25129929,25131795,25133673,25135505,25137384,25139252,25141096,25142969,25144874,25146711,25148567,25150396,25152220,25154059,25155908,25157752,25159606,25161565,25163436,25165275,25167136,25168989,25170851,25172691,25174555,25176447,25177908,25179318,25180760,25182137,25183415,25184888,25186326,25187913,25189282,25190612,25192149,25193623,25195068,25196477,25198441,25200329,25202150,25203954,25205764,25207622,25209454,25211363,25213302,25214923,25216708,25218417,25220082,25221781,25223440,25225230,25226836,25228547,25230204,25231916,25233642,25235404,25237135,25238906,25240592,25242270,25243883,25245756,25247593,25249443,25251252,25252808,25254695,25256547,25258408,25260236,25262129,25263738,25265507,25267252,25269020,25270842,25272575,25274211,25275990,25277679,25279399,25281206,25282805,25284594,25286338,25288098,25289827,25291631,25293266,25294980,25296650,25298273,25299979,25301679,25303270,25304732,25306242,25307745,25309324,25310946,25312499,25314077,25315737,25317274,25318759,25320409,25322082,25323627,25325202,25326799,25328333,25329901,25331434,25333016,25334881,25336664,25338448,25340183,25341948,25343727,25345298,25346722,25348380,25350130,25351932,25353723,25355427,25357209,25358772,25360260,25361963,25363663,25365460,25366922,25368290,25369793,25371547,25373367,25374839,25376301,25377910,25379350,25380900,25382448,25383891,25385570,25387079,25388544,25390078,25391593,25393081,25394671,25396118,25397592,25399144,25400620,25402224,25403693,25405195,25406691,25408352,25409893,25411344,25412881,25414244,25415720,25417150,25418683,25420583,25422439,25424279,25426059,25427875,25429685,25431446,25433171,25434880,25436462,25438260,25439954,25441716,25443505,25445112,25446887,25448667,25450290,25452263,25454292,25456311,25458327,25460348,25462348,25464354,25466057,25467805,25469553,25471171,25472921,25474667,25476442,25478046,25479798,25481557,25483333,25485013,25486828,25488474,25490332,25492020,25493669,25495343,25496988,25498701,25500411,25502244,25503880,25505567,25507228,25509024,25510709,25512442,25514105,25515815,25517547,25519322,25520830,25522257,25523925,25525677,25527346,25529075,25530827,25532402,25533875,25535454,25536969,25538467,25539878,25541396,25542900,25544456,25546116,25547904,25549585,25551351,25553124,25554787,25556467,25558210,25559839,25561448,25563149,25564772,25566478,25568081,25569697,25571332,25573055,25574696,25576336,25577929,25579635,25581275,25582920,25584567,25586206,25587923,25589549,25591200,25592821,25594510,25596130,25597770,25599394,25601112,25602745,25604384,25606031,25607703,25609382,25611020,25612636,25614237,25615998,25617641,25619348,25621063,25622853,25624481,25626113,25627745,25629490,25631106,25632727,25634432,25636120,25637918,25639516,25641117,25642759,25644464,25646138,25648024,25649769,25651435,25653074,25654864,25656641,25658278,25660009,25661828,25663630,25665326,25667255,25669111,25670985,25672935,25674938,25676887,25678825,25680783,25682781,25684488,25686351,25688295,25690276,25692278,25694281,25696287,25698099,25700053,25701869,25703677,25705598,25707605,25709634,25711639,25713639,25715614,25717529,25719471,25721386,25723254,25725163,25727080,25729029,25730977,25732931,25734733,25736610,25738511,25740403,25742260,25743982,25745579,25747206,25749162,25750936,25752746,25754297,25755920,25757547,25759172,25760730,25762433,25763558,25764489,25765586,25766681,25767832,25769001,25770181,25771426,25772672,25773940,25775099,25776425,25777595,25778888,25780037,25781378,25782667,25784349,25786111,25787909,25789556,25791292,25792997,25794752,25796469,25798144,25799852,25801543,25803293,25804937,25806610,25808275,25809946,25811608,25813309,25814941,25816577,25818240,25819990,25821683,25823333,25824971,25826697,25828364,25830039,25831690,25833468,25835195,25836899,25838648,25840342,25842049,25843769,25845507,25847196,25849061,25850792,25852467,25854208,25856091,25858094,25860071,25862123,25864170,25866208,25868256,25870274,25872302,25874342,25876393,25878432,25880479,25882533,25884585,25886613,25888657,25890696,25892521,25894372,25896242,25898158,25900080,25901975,25903838,25905731,25907576,25909202,25910884,25912429,25914200,25915955,25917594,25919120,25920834,25922532,25924177,25925859,25927580,25929166,25930844,25932629,25934373,25935982,25937773,25939329,25940870,25942464,25943903,25945668,25947535,25949311,25951038,25952702,25954350,25956203,25958042,25959910,25961740,25963541,25965316,25966987,25968803,25970662,25972440,25974094,25976094,25978077,25980086,25981991,25983896,25985826,25987415,25989085,25990828,25992556,25994278,25996042,25997842,25999580,26001234,26003004,26004695,26006375,26008060,26009743,26011379,26012904,26014419,26015917,26017457,26018972,26020494,26021985,26023552,26025064,26026580,26028125,26029626,26031170,26032696,26034216,26035700,26036943,26037988,26038839,26039885,26040955,26042455,26043896,26045244,26046576,26047965,26049352,26050733,26052149,26053776,26055415,26057163,26058806,26060429,26062067,26063683,26065355,26067046,26068827,26070546,26072213,26073947,26075725,26077481,26079216,26080916,26082700,26084315,26086025,26087675,26089032,26090391,26091977,26093643,26095331,26097245,26099138,26101046,26102930,26104810,26106715,26108602,26110521,26112482,26114389,26115926,26117519,26119014,26120488,26121941,26123441,26125342,26127290,26129201,26130969,26132567,26134051,26135628,26137305,26139205,26141148,26142800,26144465,26146097,26147754,26149381,26150991,26152685,26154426,26156138,26157401,26159007,26160742,26162435,26164158,26165889,26167274,26168611,26170183,26171442,26172844,26174386,26176100,26177864,26179614,26180852,26182292,26183775,26185072,26186478,26187865,26189207,26190600,26191948,26193277,26194875,26196250,26197603,26198914,26200264,26201574,26202908,26204194,26205666,26207006,26208511,26210094,26211657,26213326,26214984,26216278,26217420,26218959,26220170,26221553,26223081,26224705,26226286,26227702,26228874,26230327,26231835,26233268,26234588,26235915,26237156,26238317,26239742,26241208,26242868,26244180,26245868,26247618,26249371,26251074,26252792,26254250,26255797,26257399,26258783,26260404,26261976,26263693,26265384,26266812,26268036,26269687,26270979,26272463,26273933,26275601,26277211,26278624,26279910,26281331,26283003,26284304,26285766,26287334,26289023,26290783,26292518,26293885,26295594,26297131,26298563,26300096,26301571,26303089,26304533,26306046,26307492,26309381,26311143,26312875,26314614,26316159,26316256,26316597,26317748,26318418,26319000,26319641,26320185,26320755,26321384,26322031,26322610,26323859,26324692,26325796,26327214,26328625,26330052,26331452,26332870,26334510,26336074,26337761,26339326,26340896,26342439,26344124,26345934,26347420,26348450,26349567,26350774,26352021,26353341,26354571,26355853,26357156,26358599,26360177,26361779,26363344,26364848,26366479,26368163,26369645,26370969,26372432,26373699,26374240,26374265,26374295,26374320,26375098,26375680,26377072,26377677,26379308,26380898,26382588,26384194,26385846,26386968,26388645,26390164,26391721,26393255,26395074,26396990,26398924,26400841,26402798,26404696,26406429,26407885,26409396,26410877,26412001,26412945,26413989,26415262,26416625,26418054,26419532,26421008,26422506,26423938,26425613,26427363,26429013,26430596,26432169,26433690,26435257,26436859,26438366,26439939,26441793,26443846,26445894,26447925,26449901,26451754,26453774,26455781,26457655,26459421,26461362,26463254,26465225,26467220,26469254,26471254,26473290,26475287,26477304,26479288,26481325,26483378,26485306,26487032,26488970,26490986,26493001,26494994,26496831,26498493,26499991,26501219,26502424,26503621,26505302,26507300,26509130,26510860,26512661,26514556,26516428,26518180,26519957,26521709,26523665,26525699,26527726,26529719,26531748,26533803,26535778,26537816,26539571,26541109,26542650,26544198,26545710,26547238,26548796,26550312,26551761,26553146,26554482,26555844,26557152,26558438,26559753,26561088,26562825,26564827,26566833,26568827,26570809,26572804,26574756,26576688,26578683,26580671,26582439,26584160,26585809,26587487,26589159,26590848,26591692,26591982,26592718,26594022,26595326,26596575,26597543,26598568,26599464,26600529,26601870,26603541,26605197,26606809,26608546,26610260,26611883,26613403,26615026,26616578,26618182,26619737,26621318,26622767,26624269,26625467,26626724,26627804,26629046,26630312,26631590,26632827,26634239,26635631,26637217,26638779,26640358,26641800,26643203,26644627,26645704,26646680,26647969,26649560,26650926,26651542,26652838,26654128,26655544,26657068,26658570,26660059,26661445,26662611,26664068,26665633,26667448,26669381,26670973,26672305,26673584,26674789,26676309,26677843,26679500,26681103,26682754,26684324,26685937,26687426,26688991,26690493,26691866,26693165,26694683,26696224,26697731,26699111,26700474,26701850,26703229,26704604,26705613,26706095,26706736,26707205,26708283,26709708,26711290,26712818,26714310,26715749,26717278,26718817,26720327,26721706,26722968,26724110,26725354,26726684,26728109,26729622,26730870,26731918,26732838,26733729,26735263,26737018,26738908,26740685,26742393,26743963,26745158,26746220,26747518,26749069,26750653,26752216,26753790,26755373,26756942,26758507,26760312,26762055,26763885,26765611,26767476,26769238,26771143,26772893,26774503,26775906,26777332,26778697,26780110,26781534,26783104,26784799,26786620,26788609,26790514,26792437,26794373,26796362,26798267,26800190,26802150,26804076,26805776,26807337,26808325,26809063,26810031,26810904,26812067,26813665,26815302,26816962,26818647,26820112,26821735,26823029,26824305,26825580,26826468,26826991,26827898,26828697,26829481,26830077,26831181,26832599,26833635,26834174,26834819,26835334,26836678,26838476,26839916,26840998,26842113,26843135,26844427,26845804,26847095,26848178,26849168,26850101,26851439,26852880,26854361,26855802,26857235,26858698,26860331,26862010,26863784,26865435,26867288,26869185,26870914,26872473,26873718,26874750,26875999,26877159,26878354,26879348,26880427,26881290,26882478,26883474,26884720,26885926,26886866,26887355,26887988,26888609,26889275,26889797,26890407,26891020,26891665,26892191,26892821,26893421,26894077,26894629,26895289,26895895,26896527,26896955,26897518,26898082,26899518,26901406,26902868,26903904,26905053,26906086,26907233,26908267,26909443,26910559,26912120,26913890,26915496,26917234,26918923,26920616,26922278,26923983,26925362,26926557,26928064,26929733,26931430,26933130,26934966,26936820,26937725,26937996,26938375,26938635,26938960,26939161,26939519,26939739,26940060,26940112,26940388,26940413,26940623,26940764,26941061,26941378,26941727,26941970,26942965,26944467,26946004,26947681,26949021,26950132,26951202,26952319,26953463,26954646,26956090,26957568,26959074,26960516,26962291,26964143,26965976,26967667,26969338,26970691,26972346,26973969,26975532,26976913,26978685,26980645,26982677,26984709,26986704,26988641,26990617,26992567,26994518,26996509,26998469,27000461,27002024,27003287,27004552,27006346,27007894,27009306,27010679,27012245,27013701,27015189,27016693,27018160,27019635,27021091,27022575,27024128,27025614,27027129,27028372,27029518,27030811,27032094,27033471,27034623,27035932,27037124,27038248,27039315,27040580,27042154,27043683,27045166,27046686,27048217,27049742,27051253,27052778,27054275,27055303,27056095,27056692,27057302,27058059,27058715,27059457,27060106,27060738,27061312,27061924,27062667,27063363,27064052,27064760,27065405,27066162,27066845,27067608,27068393,27069141,27069790,27070411,27070965,27071626,27072273,27072628,27072956,27073424,27073889,27075655,27077696,27079583,27081316,27083050,27084774,27086457,27088132,27089792,27091508,27093210,27094903,27096611,27098314,27100009,27101847,27103895,27105610,27107381,27109149,27110812,27112454,27114183,27115916,27117645,27119379,27120832,27121815,27122819,27124565,27126402,27128210,27129881,27131704,27133417,27134898,27136372,27137859,27139339,27140796,27142274,27143767,27145258,27146478,27147073,27147639,27148242,27148890,27149496,27150026,27150627,27151245,27151814,27152413,27152995,27153597,27154164,27154673,27154966,27155371,27155935,27156387,27156657,27157155,27157769,27158095,27158518,27158937,27159463,27161455,27163372,27165037,27166702,27168370,27170039,27171715,27173372,27175063,27176760,27178429,27180120,27181812,27183860,27185459,27187182,27188956,27190629,27192323,27194008,27195699,27196778,27197496,27198254,27199928,27201822,27203535,27205186,27206893,27208703,27210296,27211819,27213288,27214817,27216302,27217790,27219287,27220800,27222299,27223786,27225294,27226794,27228287,27229763,27231290,27232777,27234285,27235797,27237295,27238770,27240272,27240906,27241208,27241762,27242317,27242989,27243508,27244083,27244778,27245366,27245687,27246206,27246638,27247057,27247535,27248000,27248337,27248711,27249300,27249939,27250498,27251148,27251851,27252378,27253048,27253614,27254188,27254831,27255249,27255786,27256104,27256615,27257086,27257412,27257735,27258157,27258645,27259091,27259475,27260035,27260442,27261019,27261520,27262064,27262547,27263135,27263579,27263946,27264443,27264812,27265425,27265853,27266214,27266599,27267131,27267465,27267917,27268443,27268657,27269000,27269731,27271718,27273747,27275785,27277783,27279794,27281766,27283459,27285150,27286843,27288556,27290259,27291955,27293672,27295403,27297066,27298752,27300438,27302109,27303783,27305451,27307164,27308860,27310551,27312256,27313963,27315667,27317352,27319038,27320729,27322431,27324120,27325799,27327528,27329576,27331624,27333633,27335273,27336958,27338695,27340450,27342115,27343817,27345487,27347133,27348802,27350411,27352116,27353888,27355642,27357317,27359060,27360825,27362492,27364180,27365895,27367582,27369079,27370100,27371165,27372209,27373459,27375135,27376733,27378450,27380085,27381828,27383273,27384570,27385227,27386970,27388798,27390646,27392483,27394332,27395836,27397371,27398847,27400354,27401882,27403381,27404859,27406337,27407852,27409334,27410823,27411620,27412205,27412541,27413020,27413481,27413909,27414447,27414830,27415372,27415983,27416572,27417067,27417612,27418240,27418780,27419068,27419388,27419509,27419733,27420244,27420893,27421421,27421956,27422331,27422900,27423193,27423713,27424239,27424356,27424741,27425506,27427552,27429553,27431382,27433094,27434800,27436504,27438211,27439894,27441590,27443266,27444956,27446639,27448379,27450067,27451753,27453538,27455586,27457390,27459074,27460809,27462536,27464281,27465951,27467645,27469399,27471203,27472827,27474459,27475476,27476627,27478031,27479437,27481221,27482960,27484504,27486084,27487603,27489108,27490599,27492076,27493570,27495053,27496546,27498009,27499499,27500526,27500899,27501256,27501557,27502075,27502690,27503016,27503290,27503537,27503987,27504219,27504616,27505015,27505494,27505668,27505784,27506070,27506341,27506702,27506956,27507368,27507778,27508175,27508606,27509202,27509723,27510216,27510534,27511060,27511563,27512821,27514832,27516863,27518663,27520372,27522035,27523727,27525408,27527097,27528799,27530459,27532174,27533881,27535589,27537297,27539006,27540879,27542927,27544774,27546592,27548358,27550122,27551875,27553502,27555384,27557177,27558921,27560746,27562593,27563839,27564674,27565656,27567164,27568572,27570258,27571903,27573690,27575355,27576836,27578338,27579825,27581329,27582808,27584281,27584637,27585089,27585400,27585858,27586222,27586522,27586843,27587335,27587764,27588132,27588449,27588944,27589228,27589429,27589742,27590184,27590855,27592831,27594715,27596412,27598119,27599799,27601464,27603161,27604833,27606553,27608433,27610322,27612063,27613739,27615449,27617159,27618969,27620817,27621894,27623166,27624466,27626138,27627753,27629351,27630862,27632341,27633831,27635312,27636780,27638302,27639803,27641279,27642827,27643459,27644097,27644685,27645277,27645799,27646384,27646977,27647574,27648142,27648678,27649211,27649854,27650514,27651090,27651647,27652180,27652735,27653233,27653847,27654372,27654757,27655196,27655726,27656266,27656635,27656921,27657549,27658075,27660029,27662051,27663960,27665686,27667354,27669028,27670697,27672377,27674084,27675768,27677482,27679174,27680848,27682526,27684223,27686271,27688242,27690019,27691756,27693416,27695155,27696938,27698748,27700513,27702297,27703892,27704750,27705569,27706468,27707728,27709022,27710235,27711674,27712880,27714566,27716219,27717809,27719340,27720837,27722307,27723811,27725315,27726806,27728303,27729796,27731280,27732762,27734280,27735776,27737280,27738776,27740263,27741816,27743301,27743726,27744130,27744556,27744842,27745093,27745563,27745999,27746327,27746675,27747123,27747606,27748108,27748478,27748863,27749251,27749612,27750100,27750571,27750953,27751280,27751459,27751622,27751995,27752237,27752551,27752665,27752754,27753061,27753465,27753787,27754102,27754371,27754768,27755047,27755342,27755775,27756100,27756406,27756744,27757112,27757475,27757977,27758211,27758508,27758897,27759252,27759625,27760016,27760384,27760786,27761190,27761827,27763817,27765741,27767701,27769674,27771624,27773295,27774950,27776634,27778303,27779988,27781668,27783331,27784999,27786721,27788434,27790110,27791782,27793444,27795124,27796791,27798464,27800130,27801813,27803463,27805139,27806820,27808523,27810198,27812246,27814294,27816123,27817749,27819376,27821012,27822652,27824253,27826090,27827712,27829441,27831137,27832841,27834475,27836093,27837727,27839408,27841070,27842787,27844243,27844974,27845845,27847066,27848683,27850337,27851932,27853392,27854968,27856843,27858663,27860475,27862222,27863834,27865269,27866760,27868214,27869699,27871183,27872680,27874162,27875662,27877148,27878647,27880122,27881624,27883117,27884592,27886056,27887560,27888217,27888711,27889277,27889912,27890512,27891140,27891530,27892024,27892320,27892670,27893073,27893419,27893772,27894188,27894769,27895205,27895624,27896046,27896574,27897118,27897760,27898412,27898985,27899443,27899900,27900384,27900908,27901491,27902127,27902688,27903352,27903961,27904203,27904355,27904810,27905403,27906107,27906605,27907217,27907814,27908448,27909111,27909738,27910294,27910933,27911518,27912015,27912638,27913244,27913806,27915121,27917117,27919097,27921062,27923000,27924692,27926380,27928065,27929733,27931400,27933094,27934788,27936469,27938175,27939875,27941575,27943293,27945015,27946692,27948397,27950093,27951788,27953502,27955181,27956868,27958596,27960436,27962484,27964532,27966283,27968003,27969683,27971457,27973234,27975017,27976788,27978545,27980351,27982151,27983894,27985667,27987422,27989187,27990860,27992634,27994430,27995672,27996638,27997631,27998570,27999597,28000637,28001753,28003078,28004220,28005322,28006374,28007303,28008481,28010255,28011969,28013765,28015601,28017210,28018853,28020524,28022015,28023511,28025007,28026533,28028020,28029530,28031031,28032518,28034014,28035517,28037020,28038524,28040014,28041498,28042981,28044443,28045914,28047387,28048887,28050323,28050944,28051601,28052247,28052854,28053420,28053955,28054504,28055156,28055760,28056299,28056925,28057453,28057972,28058584,28059129,28059593,28060020,28060451,28061013,28061462,28062167,28062653,28063223,28063826,28064285,28064710,28065215,28065732,28066264,28066856,28067147,28067685,28068244,28068727,28069346,28069914,28070255,28070634,28071168,28071795,28072305,28072814,28073361,28073758,28074120,28074586,28075106,28075402,28075786,28076228,28076409,28076721,28077058,28077551,28078007,28078509,28078959,28079174,28079705,28080224,28080586,28080812,28081162,28081669,28082105,28082440,28082678,28083174,28083756,28084385,28086441,28088489,28090539,28092593,28094641,28096697,28098537,28100248,28101982,28103715,28105463,28107197,28108885,28110631,28112350,28114072,28115774,28117481,28119222,28120948,28122704,28124440,28126179,28127895,28129620,28131344,28133085,28134813,28136525,28138269,28140009,28141743,28143476,28145228,28146950,28148701,28150408,28152121,28154081,28156129,28158177,28160225,28162221,28163945,28165749,28167587,28169445,28171320,28173179,28174957,28176791,28178509,28180248,28182079,28183879,28185673,28187486,28189296,28191045,28192833,28194688,28196489,28198320,28200175,28202002,28203833,28205684,28207537,28209374,28211236,28213085,28214797,28216608,28217772,28218621,28219507,28220296,28221007,28222259,28223631,28225140,28226222,28227575,28228984,28230459,28231436,28232314,28233136,28234367,28235619,28237206,28238340,28240109,28241936,28243735,28245409,28247109,28248762,28250371,28251924,28253576,28255107,28256682,28258171,28259655,28261188,28262696,28264244,28265786,28267294,28268814,28270326,28271821,28273320,28274846,28276377,28277885,28279436,28280904,28282395,28283905,28285410,28286923,28288470,28289961,28291454,28292942,28294458,28295953,28297436,28298912,28300421,28301938,28302783,28303408,28304079,28304666,28305209,28305789,28306134,28306733,28307498,28308120,28308780,28309340,28309971,28310673,28311192,28311753,28312380,28313069,28313727,28314407,28315092,28315663,28316317,28316997,28317667,28318254,28318979,28319592,28320174,28320861,28321362,28321662,28322100,28322677,28323248,28323913,28324423,28325045,28325758,28326413,28326906,28327434,28327986,28328391,28329017,28329544,28330150,28330368,28330667,28330868,28331307,28331841,28332207,28332332,28332579,28333114,28333411,28333962,28334508,28335007,28335694,28336310,28336854,28337495,28338048,28338618,28339300,28339843,28340407,28341035,28341550,28342003,28342479,28343151,28343577,28343997,28344509,28345263,28345872,28346422,28346984,28347501,28347943,28348466,28349058,28349484,28349966,28350392,28350786,28351376,28351959,28352529,28353061,28353674,28354350,28354937,28356367,28358408,28360406,28362407,28364401,28366360,28368326,28370353,28372244,28373930,28375624,28377274,28378952,28380657,28382360,28384059,28385748,28387444,28389175,28390876,28392582,28394254,28395968,28397663,28399365,28401066,28402751,28404424,28406138,28407850,28409558,28411252,28412953,28414643,28416338,28418048,28419743,28421453,28423138,28424864,28426544,28428260,28429957,28431668,28433365,28435050,28436754,28438457,28440108,28441766,28443745,28445793,28447841,28449889,28451841,28453553,28455246,28457026,28458765,28460484,28462225,28463976,28465605,28467271,28468971,28470676,28472419,28474187,28475943,28477720,28479520,28481295,28483018,28484729,28486505,28488249,28489971,28491712,28493442,28495174,28497001,28498719,28500537,28502211,28503945,28505094,28506092,28507051,28508053,28509185,28510198,28511242,28512267,28513291,28514100,28514840,28515485,28516159,28516879,28517628,28518436,28519464,28520447,28521284,28522128,28523031,28523963,28524745,28525476,28526372,28527103,28528066,28528788,28529547,28530062,28530453,28531074,28531895,28532556,28533616,28535275,28536048,28537634,28539396,28541053,28542762,28544553,28546403,28548234,28549945,28551647,28553286,28554844,28556460,28558079,28559577,28561085,28562607,28564117,28565619,28567091,28568619,28570116,28571613,28573149,28574671,28576165,28577654,28579133,28580652,28582155,28583650,28585135,28586647,28588153,28589649,28591160,28592650,28594150,28595664,28597168,28598696,28600212,28601727,28603264,28604804,28606293,28607784,28609257,28610769,28612296,28613776,28615309,28616831,28618320,28619819,28621338,28622842,28624335,28625836,28627348,28628899,28630386,28631906,28633049,28633747,28634389,28635151,28635798,28636572,28637204,28637952,28638443,28639070,28639838,28640597,28641304,28642018,28642681,28643163,28643670,28644337,28645036,28645736,28646475,28647121,28647856,28648513,28649168,28649585,28650066,28650774,28651460,28652095,28652543,28653236,28653977,28654635,28655365,28656069,28656583,28657259,28657822,28658560,28659214,28659852,28660496,28661124,28661652,28661984,28662528,28663204,28663614,28664328,28664943,28665563,28666259,28666821,28667469,28668025,28668548,28669333,28669965,28670653,28671260,28671870,28672541,28673140,28673752,28674405,28675033,28675555,28676056,28676550,28677079,28677674,28678305,28679079,28679660,28680360,28680912,28681574,28682221,28682879,28683533,28684295,28685000,28685753,28686408,28687104,28687885,28688619,28689337,28689964,28690728,28691376,28692077,28692742,28693420,28694141,28694789,28695471,28696113,28696720,28697337,28697585,28698164,28698791,28699383,28699926,28700575,28701150,28701682,28702258,28702987,28703432,28704023,28704333,28704949,28705524,28706127,28706820,28707324,28708053,28708743,28709452,28710146,28710793,28711392,28712012,28712676,28713106,28713741,28714278,28714782,28715369,28716105,28716705,28717364,28718051,28718618,28719084,28719483,28719936,28720524,28721185,28721830,28722476,28723146,28723790,28725107,28727090,28729076,28731049,28733001,28734982,28736978,28739005,28740975,28742990,28745005,28747022,28749076,28751062,28752785,28754518,28756232,28757946,28759646,28761327,28763012,28764728,28766409,28768102,28769773,28771449,28773158,28774877,28776588,28778301,28780001,28781702,28783387,28785066,28786763,28788459,28790145,28791821,28793510,28795254,28796976,28798670,28800346,28802034,28803747,28805450,28807170,28808913,28810649,28812380,28814096,28815844,28817575,28819273,28820976,28822664,28824354,28826037,28827732,28829414,28831101,28832828,28834487,28836196,28837913,28839634,28841316,28843000,28844687,28846435,28848164,28849904,28851634,28853350,28855077,28856824,28858872,28860920,28862968,28865016,28867064,28869112,28870798,28872367,28874074,28875838,28877580,28879317,28881083,28882779,28884520,28886343,28888037,28889710,28891440,28893116,28894877,28896603,28898263,28900037,28901777,28903465,28905095,28906811,28908553,28910275,28912024,28913826,28915528,28917225,28918947,28920673,28922390,28924117,28925743,28927457,28929259,28931022,28932778,28934494,28936118,28937787,28939557,28941296,28943094,28944797,28945863,28946874,28947904,28948842,28949862,28950910,28951872,28952856,28953832,28954741,28955752,28957322,28958701,28960296,28961993,28963526,28965068,28966584,28968220,28969952,28971460,28973203,28974692,28976161,28977695,28979095,28980321,28981547,28983054,28984139,28985558,28987201,28988765,28990076,28991478,28992976,28994206,28995492,28996850,28998249,28999754,29001339,29002800,29004283,29005945,29007539,29009217,29010736,29012053,29013542,29015134,29016695,29018286,29019655,29021193,29022704,29024242,29026101,29027321,29029143,29031027,29032859,29034794,29036668,29038535,29040423,29042230,29043995,29045858,29047663,29049543,29051037,29052553,29054023,29055514,29057004,29058491,29059983,29061471,29062966,29064460,29065685,29066177,29066663,29067173,29067702,29068150,29068612,29069113,29069543,29069996,29070239,29070755,29071253,29071751,29072186,29072680,29073285,29073526,29073929,29074322,29074668,29075113,29075464,29075736,29076121,29076439,29076735,29077249,29077377,29077682,29078064,29078544,29079719,29081674,29083675,29085524,29087208,29088900,29090599,29092312,29094021,29095717,29097393,29099104,29100796,29102483,29104158,29105822,29107496,29109153,29111135,29113189,29114910,29116677,29118392,29120143,29121948,29123607,29125418,29127173,29128957,29130695,29132389,29134045,29134854,29135581,29136445,29137963,29139468,29140893,29142011,29143537,29145178,29146918,29148521,29150011,29151511,29153004,29154493,29155932,29157442,29158935,29160429,29161922,29163419,29164013,29164561,29165064,29165548,29165931,29166560,29167151,29167733,29168254,29168883,29169382,29169811,29170278,29170642,29171014,29171373,29171847,29172203,29172574,29173023,29173417,29173779,29174340,29174793,29175127,29175642,29175978,29176259,29178260,29180292,29182182,29183863,29185569,29187277,29188992,29190736,29192459,29194146,29195832,29197540,29199227,29200939,29202634,29204512,29206560,29208203,29209918,29211761,29213620,29215407,29217196,29218945,29220754,29222557,29224317,29226117,29227681,29228280,29229125,29230695,29232235,29233951,29235289,29236875,29238574,29240272,29241837,29243445,29245036,29246539,29248025,29249508,29250986,29252474,29253973,29255462,29256945,29258413,29259892,29261364,29262860,29264318,29265771,29267246,29268735,29270221,29271705,29273191,29274663,29276121,29277584,29279063,29280559,29282036,29283499,29284992,29286478,29287962,29289439,29290934,29292424,29293921,29295402,29296871,29298361,29299205,29299851,29300492,29301087,29301727,29302464,29303089,29303638,29304174,29304804,29305373,29306044,29306645,29307267,29307852,29308464,29309074,29309692,29310276,29310802,29311449,29312142,29312732,29313320,29313880,29314541,29315143,29315725,29316335,29316933,29317421,29317842,29318387,29319083,29319704,29320221,29320752,29321255,29321766,29322303,29322847,29323353,29323875,29324515,29325097,29325508,29325902,29326128,29326422,29326892,29327242,29327703,29328105,29328527,29328960,29329473,29330184,29330714,29331044,29331268,29331469,29331860,29332003,29332259,29332613,29333071,29333553,29334068,29334537,29335035,29335680,29336188,29336783,29337343,29337943,29338549,29339108,29339631,29340121,29340533,29341147,29341618,29342180,29342738,29343263,29343498,29344050,29344498,29345050,29345472,29345772,29345992,29346363,29347018,29347638,29348236,29348777,29349211,29349634,29350268,29350826,29351295,29351822,29352462,29353087,29353631,29354187,29354618,29355197,29356164,29358165,29360170,29362143,29364135,29366114,29368052,29370015,29371975,29373998,29375824,29377532,29379250,29380972,29382677,29384384,29386095,29387801,29389492,29391190,29392863,29394573,29396240,29397946,29399660,29401369,29403054,29404738,29406422,29408120,29409820,29411445,29413126,29414783,29416455,29418132,29419816,29421508,29423200,29424874,29426548,29428210,29429898,29431588,29433277,29434955,29436644,29438285,29439980,29441662,29443356,29445047,29446724,29448396,29450069,29451735,29453417,29455465,29457513,29459561,29461609,29463551,29465289,29467013,29468723,29470456,29472142,29473790,29475520,29477299,29479064,29480822,29482573,29484249,29485965,29487671,29489254,29490986,29492623,29494312,29496063,29497772,29499491,29501224,29502981,29504722,29506394,29508023,29509704,29511386,29513049,29514861,29516535,29518215,29519284,29520219,29521133,29521970,29522767,29523689,29524633,29525506,29526516,29527312,29528469,29529647,29530555,29531735,29532708,29534191,29535263,29536450,29537690,29538938,29540237,29541436,29542824,29544020,29545488,29546934,29548467,29549498,29550648,29551988,29553106,29553943,29554771,29555598,29556333,29556710,29557257,29558350,29559377,29560483,29561533,29562774,29563598,29564230,29564786,29565690,29566870,29568319,29569855,29571685,29573546,29575406,29577285,29579226,29581172,29583073,29584993,29586681,29588253,29589729,29591213,29592714,29594207,29595697,29597198,29598650,29600142,29601625,29603115,29604615,29606095,29606506,29606859,29607160,29607740,29608251,29608618,29609094,29609705,29610223,29610525,29610761,29611005,29611248,29611571,29611899,29612356,29612855,29613310,29613783,29614136,29614410,29614816,29615244,29615576,29616017,29616323,29616705,29617062,29617384,29617734,29618094,29618529,29618900,29619190,29619829,29620456,29621062,29622888,29624872,29626889,29628793,29630481,29632165,29633827,29635525,29637213,29638926,29640636,29642318,29643991,29645693,29647407,29649117,29650804,29652497,29654209,29655955,29658003,29659972,29661639,29663326,29665045,29666817,29668624,29670440,29672163,29673905,29675670,29677468,29679190,29680959,29682582,29683263,29684119,29685515,29687144,29688587,29689244,29690073,29691131,29692729,29694599,29696398,29698043,29699634,29701126,29702614,29704121,29705604,29707117,29708641,29710123,29710720,29711313,29711949,29712564,29713047,29713558,29714099,29714533,29714957,29715409,29715873,29716266,29716513,29716838,29717162,29717668,29718100,29718347,29718809,29719336,29719594,29719909,29720479,29721052,29722738,29724726,29726545,29728251,29729951,29731672,29733381,29735077,29736752,29738432,29740122,29741824,29743531,29745489,29747382,29749142,29750992,29752753,29754540,29756225,29757972,29759732,29761564,29762840,29763632,29764514,29766137,29767740,29769331,29770699,29772282,29773965,29775444,29776923,29778260,29779757,29781245,29782717,29784225,29785684,29787168,29788639,29790113,29791610,29793113,29794601,29796091,29797585,29798657,29799182,29799690,29800263,29800873,29801376,29801983,29802408,29802920,29803563,29804061,29804515,29805117,29805703,29806158,29806484,29806945,29807384,29807777,29808226,29808691,29809208,29809570,29810108,29810353,29810591,29810889,29811513,29812182,29812827,29813428,29814073,29814593,29815129,29815703,29816011,29816529,29817021,29817509,29818152,29818730,29819144,29819663,29820187,29820924,29822926,29824921,29826914,29828795,29830484,29832157,29833893,29835584,29837266,29838956,29840635,29842296,29844037,29845750,29847405,29849085,29850798,29852519,29854228,29855938,29857669,29859398,29861108,29863086,29865134,29867034,29868737,29870478,29872193,29873924,29875637,29877304,29879018,29880678,29882350,29884133,29885940,29887621,29889381,29891168,29892811,29893762,29894588,29895504,29897090,29898737,29900130,29901690,29903201,29904753,29906371,29908245,29910026,29911686,29913204,29914599,29916109,29917630,29919133,29920602,29922081,29923566,29925058,29926524,29927989,29929471,29930960,29932455,29933919,29935395,29936681,29937155,29937694,29938284,29938865,29939306,29939718,29940299,29940902,29941486,29941796,29942259,29942711,29943157,29943529,29943911,29944360,29944790,29945301,29945806,29946243,29946724,29947280,29947713,29948069,29948325,29948528,29948746,29949252,29949682,29949964,29950157,29950241,29950456,29950872,29951144,29951327,29951731,29952283,29952620,29953117,29953498,29953835,29954101,29954496,29954794,29955336,29956163,29958100,29959996,29961964,29963964,29965661,29967342,29969035,29970714,29972405,29974078,29975796,29977508,29979183,29980841,29982518,29984189,29985893,29987594,29989247,29990920,29992607,29994279,29995961,29997626,29999399,30001447,30003495,30005321,30007031,30008735,30010500,30012233,30014009,30015760,30017425,30019137,30020845,30022583,30024188,30025849,30027605,30029299,30031067,30032617,30033338,30034253,30035022,30036503,30037906,30039241,30040615,30041983,30042970,30044422,30045834,30047622,30049318,30050999,30052619,30054257,30055731,30057301,30058804,30060310,30061822,30063340,30064804,30066270,30067767,30069249,30070746,30072250,30073761,30075236,30076754,30078250,30079748,30081171,30082640,30084154,30085654,30087191,30088007,30088551,30089204,30089614,30090022,30090573,30091031,30091615,30092215,30092761,30093294,30093697,30094241,30094787,30094871,30095389,30096012,30096519,30096975,30097382,30097719,30097943,30098201,30098402,30098844,30099412,30099968,30100497,30101076,30101589,30102082,30102491,30102865,30103282,30103819,30104330,30104934,30105404,30105907,30106364,30106715,30107006,30107391,30107556,30107705,30108089,30108634,30109208,30109823,30110176,30110518,30110935,30111423,30111780,30112138,30112433,30112577,30113011,30113410,30113829,30114249,30114662,30115137,30115495,30115890,30116363,30116802,30117283,30117828,30118276,30118763,30120819,30122839,30124888,30126893,30128918,30130961,30132637,30134282,30135952,30137657,30139338,30141048,30142768,30144451,30146152,30147825,30149513,30151191,30152891,30154599,30156312,30158012,30159689,30161353,30163030,30164724,30166444,30168146,30169832,30171530,30173219,30174870,30176567,30178269,30179964,30181683,30183379,30185181,30187229,30189277,30191325,30193144,30194739,30196466,30198225,30199954,30201745,30203478,30205182,30206877,30208561,30210342,30212017,30213804,30215487,30217162,30218883,30220620,30222459,30224164,30225855,30227569,30229276,30230984,30232709,30234585,30236364,30237646,30238506,30239287,30240049,30240674,30241497,30242454,30243317,30244023,30244922,30245937,30246837,30247640,30248282,30248784,30249448,30249730,30250501,30251741,30252807,30253585,30255168,30256852,30258576,30260340,30262108,30263908,30265516,30267175,30268696,30270173,30271652,30273125,30274619,30276095,30277581,30279055,30280527,30281441,30281965,30282459,30283018,30283294,30283740,30284206,30284565,30285044,30285604,30286042,30286504,30286889,30287225,30287544,30287846,30288383,30288801,30289354,30289966,30290488,30291021,30291476,30292118,30292612,30293140,30293664,30294159,30294719,30296674,30298686,30300608,30302303,30303985,30305685,30307339,30309037,30310731,30312446,30314181,30315869,30317563,30319237,30320947,30322900,30324874,30326590,30328330,30330052,30331849,30333656,30335457,30337200,30338968,30340735,30342336,30343218,30344066,30345006,30346090,30347027,30348418,30350056,30351718,30353332,30354896,30356508,30358025,30359541,30361047,30362541,30364013,30365508,30366986,30368484,30369973,30371440,30372914,30374405,30375892,30377388,30378874,30380360,30381707,30382307,30382984,30383523,30384113,30384736,30385368,30385959,30386570,30387223,30387695,30388317,30388918,30389452,30390056,30390573,30391078,30391651,30392181,30392739,30393266,30393799,30394436,30394858,30395350,30395940,30396381,30396833,30397243,30397831,30398346,30398898,30399113,30399598,30400033,30400547,30401032,30401492,30402097,30402484,30403099,30403693,30404279,30404867,30405370,30405701,30406243,30406646,30407274,30408003,30408447,30408942,30409501,30410118,30410702,30411401,30413454,30415487,30417518,30419527,30421479,30423188,30424890,30426618,30428324,30430029,30431752,30433450,30435128,30436806,30438499,30440206,30441906,30443622,30445340,30447037,30448723,30450432,30452127,30453792,30455439,30457153,30458852,30460560,30462277,30464325,30466373,30468317,30470030,30471821,30473484,30475213,30476908,30478678,30480381,30482225,30484036,30485806,30487544,30489261,30490948,30492722,30494514,30496319,30497689,30498422,30499198,30500011,30500674,30502042,30503792,30505216,30506506,30508239,30510040,30511585,30512934,30514186,30516036,30517876,30519667,30521423,30523108,30524736,30526105,30527674,30529153,30530642,30532120,30533599,30535075,30536567,30538034,30539511,30541006,30542503,30543963,30545455,30546947,30548449,30549962,30551470,30552963,30554462,30555947,30557442,30558756,30559243,30559352,30559611,30559822,30560306,30560838,30561310,30561790,30562251,30562739,30563339,30563952,30564152,30564605,30565010,30565396,30565750,30565996,30566569,30567155,30567676,30567993,30568393,30568549,30569039,30569290,30569528,30570088,30570478,30571098,30571659,30572189,30572609,30573147,30573687,30573963,30574209,30574780,30575149,30575674,30576268,30576824,30577360,30577821,30578025,30578151,30578574,30578916,30579328,30579856,30580317,30580949,30581531,30582081,30582692,30583242,30583769,30584275,30584683,30584980,30585425,30585889,30586129,30586270,30586706,30587077,30587588,30587882,30588296,30588799,30590555,30592603,30594595,30596625,30598674,30600646,30602323,30604024,30605725,30607401,30609045,30610738,30612406,30614049,30615716,30617413,30619103,30620771,30622458,30624155,30625848,30627541,30629250,30630970,30632641,30634321,30636011,30637714,30639398,30641092,30642821,30644529,30646223,30647919,30649572,30651271,30653207,30655255,30657303,30659288,30660930,30662709,30664474,30666166,30667913,30669555,30671297,30673048,30674745,30676498,30678240,30680039,30681818,30683651,30685342,30687077,30688802,30690445,30692203,30693934,30695585,30697168,30698898,30699989,30700911,30701731,30702509,30703327,30704064,30704810,30705637,30706550,30707495,30708610,30709660,30710716,30711515,30712358,30713198,30714283,30715405,30716377,30717462,30718523,30719528,30720554,30721579,30722532,30722923,30723136,30724142,30725425,30727053,30728854,30730691,30732522,30734366,30736088,30737616,30739134,30740669,30742185,30743670,30745162,30746654,30748166,30749663,30751139,30752659,30754180,30754752,30755071,30755304,30755570,30755930,30756431,30756784,30757212,30757711,30758157,30758602,30759155,30759491,30759842,30760264,30760641,30760997,30761285,30761688,30761964,30762328,30762761,30763160,30763573,30763939,30764262,30764456,30764754,30765011,30765284,30765768,30766243,30766511,30766754,30767072,30767724,30769741,30771702,30773732,30775418,30777104,30778809,30780494,30782168,30783854,30785535,30787231,30788899,30790593,30792283,30793956,30795628,30797315,30798991,30800866,30802914,30804827,30806565,30808367,30810099,30811732,30813514,30815229,30816962,30818695,30820465,30822172,30823845,30825516,30826936,30827779,30828653,30830128,30831799,30833310,30835171,30837056,30838882,30840407,30841960,30843449,30844955,30846455,30847956,30849451,30850953,30852464,30853955,30855454,30856951,30858443,30859945,30861456,30862983,30864473,30865960,30867453,30868955,30870457,30871956,30873437,30874940,30876447,30877933,30879408,30880923,30882446,30883938,30885419,30886952,30888456,30889917,30891398,30892441,30892864,30893414,30893972,30894303,30894888,30895510,30896070,30896716,30897283,30897955,30898471,30898942,30899417,30899988,30900488,30901000,30901499,30902081,30902700,30903325,30903979,30904537,30905047,30905599,30906037,30906523,30907060,30907699,30908291,30908619,30909094,30909561,30910038,30910623,30911088,30911571,30912061,30912557,30913184,30913750,30914193,30914852,30915170,30915647,30916003,30916358,30916793,30917196,30917582,30917870,30918310,30918791,30919034,30919600,30919885,30920476,30921052,30921638,30921935,30922504,30923089,30923708,30924296,30924870,30925412,30925865,30926403,30926892,30927371,30927886,30928365,30928859,30929276,30929605,30930141,30930616,30931088,30931454,30931898,30932318,30932812,30933402,30933743,30934224,30934879,30935324,30935698,30936056,30936414,30937030,30937442,30937839,30938006,30938270,30938573,30939055,30939521,30939872,30940333,30940657,30940881,30941248,30941648,30942029,30942372,30942686,30943129,30943426,30943777,30944291,30944584,30944932,30946841,30948843,30950883,30952880,30954850,30956882,30958889,30960903,30962955,30964997,30966725,30968470,30970209,30971943,30973645,30975335,30977028,30978733,30980421,30982106,30983786,30985486,30987178,30988900,30990593,30992320,30994032,30995750,30997453,30999155,31000845,31002540,31004250,31005986,31007704,31009394,31011076,31012725,31014401,31016081,31017781,31019475,31021125,31022789,31024459,31026130,31027826,31029542,31031257,31033001,31034762,31036488,31038233,31039912,31041577,31043282,31044991,31046685,31048344,31050026,31051689,31053737,31055785,31057833,31059881,31061929,31063840,31065576,31067296,31069078,31070802,31072471,31074119,31075825,31077426,31079102,31080853,31082582,31084259,31086064,31087801,31089489,31091240,31092975,31094684,31096401,31098051,31099684,31101268,31103029,31104808,31106414,31108074,31109777,31111380,31113057,31114729,31116461,31118284,31119971,31121696,31123468,31125073,31126686,31128279,31129090,31129944,31130692,31131498,31132376,31133057,31133871,31134650,31135657,31136678,31137753,31138847,31139868,31140410,31141182,31141999,31142916,31143939,31144660,31145457,31146314,31147199,31147957,31148660,31149409,31150083,31150974,31151899,31152782,31153722,31154903,31156165,31157365,31158474,31159583,31160746,31162320,31163696,31165542,31167385,31169186,31171072,31172914,31174756,31176604,31178476,31180168,31181767,31183344,31184905,31186441,31187961,31189462,31190977,31192510,31194018,31195515,31197008,31198520,31200026,31201549,31203013,31204512,31205762,31206319,31207044,31207743,31208253,31208885,31209434,31210072,31210597,31211097,31211549,31211982,31212681,31213424,31213904,31214718,31215378,31216019,31216680,31217215,31217963,31218661,31219156,31219874,31220522,31221101,31221616,31222210,31222815,31223548,31224222,31224693,31225239,31225848,31226083,31226390,31226742,31227290,31227921,31228529,31229131,31229736,31230282,31230805,31231286,31231903,31232369,31234322,31236357,31238407,31240451,31242253,31243955,31245698,31247426,31249158,31250883,31252619,31254356,31256084,31257807,31259575,31261305,31262999,31264708,31266429,31268113,31269803,31271530,31273261,31274986,31276712,31278685,31280733,31282781,31284575,31286388,31288255,31290136,31291967,31293836,31295660,31297529,31299416,31301240,31303079,31304854,31306636,31308456,31310191,31311968,31313753,31315597,31317398,31318493,31319523,31320357,31321299,31322512,31323826,31324997,31326183,31327238,31328382,31329272,31330324,31331314,31332842,31333996,31335542,31337194,31338894,31340553,31342134,31343714,31345259,31346751,31348225,31349725,31351209,31352671,31354131,31355627,31357147,31358676,31360163,31361628,31363111,31364607,31366094,31367580,31369048,31370507,31371990,31373458,31374924,31376417,31377884,31379325,31380823,31382294,31383069,31383589,31384240,31384760,31385243,31385727,31386232,31386710,31387262,31387688,31388115,31388541,31388925,31389305,31389438,31389926,31390252,31390838,31391281,31391764,31392095,31392570,31393008,31393538,31394090,31394572,31395080,31395589,31396139,31396619,31397037,31397483,31397964,31398216,31398562,31398932,31399329,31399870,31400288,31400525,31400976,31401477,31401983,31402450,31402889,31403337,31403572,31403917,31404450,31405038,31405409,31405791,31406158,31406515,31407015,31407543,31407877,31408258,31408760,31409189,31409718,31410152,31410789,31411455,31412105,31412781,31413285,31413708,31414025,31414338,31414721,31414975,31415446,31415768,31416131,31416347,31416791,31417194,31417732,31418055,31418601,31419103,31420628,31422542,31424444,31426419,31428394,31430357,31432396,31434145,31435856,31437543,31439216,31440900,31442598,31444266,31445928,31447597,31449260,31450957,31452653,31454336,31456011,31457666,31459349,31461026,31462688,31464392,31466132,31467825,31469543,31471189,31472853,31474531,31476214,31477897,31479557,31481237,31482915,31484561,31486192,31487857,31489491,31491175,31492865,31494913,31496961,31499009,31500977,31502734,31504510,31506304,31508062,31509856,31511538,31513218,31514890,31516645,31518333,31520010,31521679,31523391,31525158,31526930,31528678,31530298,31532008,31533673,31535265,31536940,31538618,31540250,31541854,31543527,31545200,31546022,31546823,31547554,31548394,31549206,31549961,31550968,31552258,31553468,31554829,31555914,31556777,31557778,31559026,31560258,31561304,31562259,31563169,31564142,31565284,31566612,31567584,31568737,31569630,31570078,31571117,31572853,31574607,31576342,31578104,31579969,31581765,31583402,31585027,31586635,31588290,31589799,31591303,31592809,31594340,31595858,31597379,31598897,31600427,31601927,31603438,31604956,31606460,31607965,31609478,31610982,31612500,31614031,31615529,31617047,31618546,31620050,31621572,31623092,31624596,31626100,31627635,31629129,31630631,31632177,31633716,31635239,31636781,31638296,31639818,31641330,31642844,31644356,31645858,31647351,31648853,31650345,31651836,31653307,31654795,31656291,31657777,31659279,31660760,31661283,31661830,31662304,31662770,31663281,31663781,31664345,31664778,31665292,31665960,31666647,31667300,31668000,31668700,31669387,31670093,31670770,31671406,31672036,31672803,31673543,31674169,31674829,31675421,31675887,31676277,31676901,31677488,31678041,31678726,31679387,31679981,31680672,31681340,31681985,31682544,31683179,31683727,31684367,31684967,31685443,31686077,31686670,31687230,31687793,31688302,31688849,31689433,31689908,31690519,31691136,31691774,31692304,31692898,31693458,31694064,31694621,31695166,31695754,31696286,31696932,31697427,31697887,31698397,31698901,31699402,31699997,31700574,31701168,31701749,31702393,31702950,31703574,31704103,31704637,31705253,31705921,31706522,31707002,31707563,31708124,31708635,31709132,31709722,31710252,31710868,31711417,31711880,31712323,31712940,31713537,31714080,31714780,31715321,31716045,31716797,31717497,31718102,31718763,31719449,31720187,31720914,31721524,31722089,31722763,31723475,31724102,31724759,31725249,31725742,31726358,31726995,31727534,31728196,31728842,31729371,31729973,31730589,31731189,31731812,31732390,31732952,31733425,31733848,31734270,31734824,31735409,31735958,31736494,31737079,31737623,31738141,31738640,31739123,31739706,31740255,31740840,31741310,31741766,31742188,31742749,31743240,31743743,31744307,31744618,31745045,31745609,31746164,31746682,31747225,31747609,31747980,31749085,31751115,31753168,31755205,31757252,31759287,31761335,31763366,31765422,31767470,31769526,31771545,31773599,31775614,31777328,31779056,31780733,31782436,31784141,31785869,31787569,31789240,31790956,31792652,31794353,31796064,31797768,31799465,31801167,31802866,31804595,31806335,31808045,31809770,31811503,31813227,31814961,31816700,31818454,31820206,31821962,31823715,31825454,31827158,31828852,31830568,31832273,31833952,31835640,31837309,31839002,31840731,31842434,31844115,31845822,31847525,31849221,31850920,31852649,31854390,31856137,31857895,31859646,31861393,31863124,31864842,31866550,31868284,31870008,31871745,31873478,31875235,31876982,31878730,31880466,31882233,31883978,31885729,31887447,31889205,31891205,31893253,31895301,31897349,31899397,31901445,31903493,31905541,31907272,31908986,31910655,31912407,31914142,31915804,31917512,31919276,31921010,31922755,31924530,31926306,31928158,31929954,31931791,31933598,31935399,31937215,31938983,31940781,31942555,31944370,31946008,31947623,31949324,31951027,31952706,31954317,31955896,31957686,31959395,31961110,31962825,31964483,31966232,31968003,31969852,31971655,31973497,31975311,31977161,31978853,31980560,31982144,31983802,31985565,31987400,31989217,31991006,31992858,31994708,31996541,31998321,31999696,32000557,32001477,32002434,32003346,32004303,32005112,32005942,32006933,32007771,32009048,32010414,32011800,32013022,32014289,32015574,32016852,32018191,32019509,32020802,32021983,32023319,32024089,32024814,32025629,32026583,32027542,32028543,32029649,32030278,32030741,32031904,32033545,32034997,32036928,32038765,32040461,32042352,32044241,32046125,32047936,32049759,32051579,32053411,32055308,32056930,32058543,32060066,32061579,32063081,32064599,32066153,32067652,32069171,32070661,32071272,32071760,32072113,32072466,32072927,32073534,32074020,32074493,32074818,32075245,32075679,32075946,32076300,32076527,32076869,32077197,32077400,32077598,32077857,32078226,32078606,32078916,32079279,32079710,32080692,32082741,32084790,32086563,32088251,32089980,32091688,32093363,32095056,32096768,32098454,32100145,32101811,32103525,32105213,32107261,32109213,32111048,32112880,32114585,32116392,32118186,32119991,32121797,32123526,32125295,32126117,32127256,32128958,32130520,32132047,32133625,32135179,32136631,32137805,32139320,32140820,32141426,32141886,32142354,32142862,32143430,32143885,32144397,32146306,32148015,32149686,32151544,32153314,32155095,32156389,32157103,32158387,32159961,32161463,32162966,32164466,32165879,32166195,32166684,32167106,32167555,32167961,32168058,32168297,32168847,32169249,32169508,32169770,32170375,32170914,32171869,32173797,32175473,32177149,32178833,32180488,32182160,32183828,32185776,32187546,32189204,32190915,32192590,32193955,32195157,32196939,32198678,32200295,32201733,32203236,32204709,32206223,32207728,32208508,32208969,32209374,32209749,32210150,32210629,32210920,32211199,32211650,32212110,32212596,32212927,32213470,32213947,32214392,32214981,32215391,32217053,32218932,32220605,32222288,32223946,32225612,32227268,32228945,32230640,32232613,32234330,32235991,32237707,32239461,32241073,32241730,32242765,32244496,32245358,32246624,32248263,32250147,32252202,32254259,32256299,32258356,32260212,32261825,32263427,32264892,32266103,32267708,32269170,32270438,32271354,32272293,32273401,32275428,32277425,32279412,32281300,32283155,32284009,32285366,32286672,32288064,32289396,32290851,32292237,32293682,32294691,32296009,32296589,32297536,32298643,32299844,32300945,32301825,32302675,32303563,32304506,32305317,32306362,32307440,32308623,32309702,32310554,32311654,32312716,32313750,32314818,32315875,32317012,32318128,32319212,32320131,32321057,32322215,32323349,32324383,32325517,32326369,32327078,32327724,32328561,32329844,32330964,32331918,32332718,32333820,32334632,32335566,32336537,32337103,32338387,32339552,32340576,32341504,32342555,32343345,32344235,32345244,32346177,32347065,32348220,32348786,32349920,32351968,32353459,32354521,32355580,32356549,32357519,32358510,32359597,32360639,32361655,32362524,32363554,32364754,32365642,32366693,32367747,32368682,32369668,32370654,32371514,32372263,32373007,32373880,32374908,32376142,32377559,32379036,32380506,32381924,32383882,32385937,32387992,32389969,32391410,32393364,32395406,32397454,32399502,32401559,32403323,32405371,32407094,32408936,32410991,32413039,32415087,32417135,32419183,32421231,32423279,32425336,32427367,32429403,32431424,32433444,32435478,32437499,32439469,32441314,32443040,32444903,32446951,32448999,32451047,32453095,32455143,32457191,32459239,32461287,32463335,32465383,32467431,32469470,32471444,32473299,32475120,32476639,32478137,32480104,32482043,32483835,32485686,32487720,32489774,32491822,32493870,32495918,32497974,32500022,32502070,32504118,32506166,32508214,32510262,32512310,32514358,32516390,32518036,32519002,32520966,32523014,32525062,32527110,32529158,32531206,32533254,32535302,32537350,32539398,32541446,32543494,32545542,32547590,32549638,32551686,32553734,32555782,32557830,32559880,32561666,32563469,32565517,32567565,32569622,32571555,32573211,32574620,32575890,32576938,32577769,32578303,32579857,32581905,32583953,32586001,32588049,32590097,32592154,32594202,32596258,32598311,32600249,32601789,32602750,32604493,32606541,32608579,32610548,32612442,32614185,32615736,32617003,32617905,32618564,32618876,32618999,32620718,32622766,32624814,32626866,32628916,32630964,32633012,32635060,32637108,32639156,32641204,32643252,32645300,32647335,32649191,32650845,32652368,32653558,32655558,32657606,32659654,32661702,32663750,32665798,32667846,32669899,32671947,32674004,32676052,32678103,32680129,32682085,32683842,32685396,32686497,32687446,32689274,32691125,32693128,32695176,32697224,32699280,32701286,32703013,32704439,32705175,32707197,32709249,32711297,32713341,32715150,32717198,32719246,32721109,32722042,32722076,32722296,32722336,32722662,32724710,32726758,32728806,32730862,32732910,32734963,32737015,32739054,32741009,32743030,32745078,32746686,32748734,32750782,32752830,32754878,32756926,32758974,32761025,32763073,32765121,32767107,32768728,32770622,32772652,32774133,32775846,32777631,32779369,32780369,32781092,32782704,32784635,32786688,32788739,32790787,32792843,32794896,32796929,32798775,32800157,32800424,32801680,32803737,32805785,32807833,32809886,32811942,32813990,32816046,32818102,32820148,32822201,32824229,32826067,32827940,32829887,32831447,32833487,32835544,32837600,32839657,32841705,32843753,32845810,32847858,32849825,32851825,32853882,32855930,32857978,32860026,32862074,32864131,32866179,32868154,32869888,32871878,32873852,32875633,32876797,32878851,32880907,32882911,32884745,32886497,32888545,32890593,32892641,32894689,32896746,32898794,32900842,32902890,32904946,32906707,32907988,32909702,32911633,32913624,32915637,32917682,32919734,32921754,32923781,32925817,32927871,32929910,32931962,32933966,32935998,32937996,32939980,32941973,32944021,32946072,32948128,32950177,32952225,32954244,32956289,32958338,32960375,32962409,32964455,32966472,32968381,32970176,32971770,32973155,32974434,32975613,32976747,32977945,32978927,32979967,32981080,32982066,32983051,32983944,32984801,32985688,32986439,32987075,32987639,32988074,32988268,32988439,32988544,32988603,32988697,32990753,32992776,32994824,32996872,32998920,33000822,33002560,33004164,33005331,33006290,33008338,33010386,33012434,33014482,33016380,33018428,33020476,33022524,33024500,33026548,33028596,33030644,33032641,33034694,33036751,33038808,33040861,33042915,33044949,33047006,33049061,33051111,33053138,33055195,33057216,33059209,33061094,33062929,33064663,33066420,33068019,33069970,33072025,33074073,33076093,33078145,33080197,33082251,33084033,33086038,33088094,33090151,33092208,33094264,33096321,33098369,33100412,33102348,33104396,33106422,33108341,33109822,33111798,33113853,33115908,33117393,33119260,33121308,33123356,33125404,33127452,33129500,33131548,33133605,33135653,33137659,33139549,33141271,33142783,33144155,33145440,33146598,33148210,33150258,33152306,33154363,33156418,33158455,33160335,33161991,33163009,33163319,33164379,33165896,33167626,33169513,33171477,33173368,33175301,33177305,33179228,33180967,33182504,33183856,33184903,33185485,33185920,33187599,33189641,33191679,33193070,33193877,33195843,33197891,33199939,33201987,33204035,33206083,33208131,33210179,33212200,33214175,33216212,33218246,33220016,33221485,33222444,33224097,33226143,33227932,33229362,33231120,33233168,33235216,33237266,33239321,33241377,33243433,33245487,33247538,33249473,33251294,33252990,33255038,33256453,33257582,33259011,33261065,33263113,33265161,33267209,33269257,33271314,33273356,33275197,33277110,33279167,33281215,33283263,33285311,33287359,33289407,33291267,33292305,33293785,33295699,33297724,33299780,33301828,33303873,33305165,33306857,33308681,33310734,33312782,33314830,33316887,33318935,33320936,33322752,33324040,33325005,33325741,33326240,33326572,33326819,33326978,33328981,33331029,33333077,33335125,33337173,33339221,33341269,33343317,33345365,33347413,33349461,33351509,33353557,33355605,33357653,33359701,33361749,33363797,33364978,33367035,33369092,33371149,33373205,33375260,33377315,33379206,33381230,33383199,33384944,33386764,33388293,33389024,33390168,33391832,33393746,33395796,33397844,33399892,33401940,33403988,33406036,33408084,33410132,33412180,33414237,33416154,33417831,33419352,33420737,33421980,33423078,33424119,33425103,33425845,33426655,33427633,33428622,33429293,33430778,33432820,33434868,33436916,33438964,33441012,33443060,33445108,33447156,33449204,33451252,33453300,33455348,33457396,33459409,33460756,33461577,33462233,33463695,33465743,33467791,33469839,33471886,33473432,33475485,33477542,33479599,33481647,33483704,33485752,33487807,33489855,33491451,33492902,33494372,33495860,33496872,33498920,33500886,33502257,33502654,33504347,33506219,33508200,33510242,33512299,33514351,33516404,33518446,33520472,33522060,33523807,33525608,33527577,33529521,33531575,33533630,33535678,33537726,33539774,33541822,33543879,33545927,33547947,33549740,33551301,33552333,33552994,33554446,33556470,33558518,33560566,33562614,33564662,33566710,33568758,33570815,33572863,33574868,33576658,33578179,33579354,33580256,33580660,33580942,33582748,33584803,33586826,33588773,33590625,33592332,33593988,33596045,33598092,33599918,33601465,33602789,33604577,33606293,33608273,33610321,33612251,33614299,33615379,33617345,33619110,33620951,33622745,33624793,33626495,33628419,33629910,33631328,33632463,33633903,33635940,33637927,33639942,33641829,33643787,33645745,33647666,33649714,33651771,33653816,33655646,33656752,33657814,33659730,33661779,33663827,33665875,33667910,33669549,33671025,33672033,33672706,33674755,33676812,33678868,33680916,33682769,33683328,33684642,33686690,33688725,33690782,33692830,33694887,33696935,33698989,33700956,33703004,33704600,33706513,33708561,33710289,33712345,33714393,33716003,33718010,33720064,33721725,33723001,33724636,33726442,33727019,33728931,33730979,33733035,33735091,33736768,33737034,33737155,33738106,33740073,33742128,33744185,33746240,33748288,33750345,33752400,33754284,33756000,33757928,33759517,33760637,33760864,33761458,33763403,33765451,33767430,33769486,33771534,33773554,33775602,33777636,33779684,33781521,33783578,33785216,33787233,33788648,33790568,33791908,33793358,33795003,33796725,33798143,33799477,33801032,33803089,33805009,33807057,33809105,33811153,33813201,33815249,33817297,33819345,33821393,33823450,33825498,33827555,33829609,33831606,33833460,33835427,33837376,33839105,33840965,33843021,33844986,33846469,33847969,33849790,33851847,33853895,33855943,33857991,33860048,33862096,33864152,33866200,33868248,33870296,33872267,33874114,33875730,33877152,33878357,33879322,33880412,33882460,33884508,33886556,33888604,33890652,33892498,33892951,33894999,33897047,33899045,33901015,33903039,33905037,33907021,33909053,33911055,33913103,33915151,33917208,33919262,33921288,33923099,33924464,33926433,33928476,33930524,33932540,33934446,33936460,33938507,33940564,33942612,33944660,33946708,33948763,33950812,33952829,33954657,33956128,33957104,33957864,33959912,33961960,33964008,33966056,33968104,33970119,33972125,33974173,33976221,33978269,33980325,33981540,33983566,33985623,33987671,33989719,33991767,33993823,33995871,33997919,33999928,34001572,34003135,34005183,34007231,34009279,34011327,34013375,34015244,34017292,34018790,34019395,34019714,34020750,34022520,34024572,34026628,34028676,34030724,34032772,34034820,34036868,34038916,34040964,34043012,34045067,34047004,34048825,34050606,34052376,34054013,34055489,34056798,34058021,34059261,34060419,34061271,34061897,34062444,34062975,34063472,34063876,34064360,34064797,34065242,34065655,34066109,34066643,34067130,34067557,34067777,34068414,34069628,34070821,34072087,34073267,34074316,34075330,34076225,34076979,34077550,34077935,34078129,34078361,34080118,34082159,34083993,34085732,34087618,34089508,34091564,34093620,34095624,34097672,34099729,34101777,34103815,34105872,34107755,34109313,34111122,34113123,34115002,34116367,34118262,34120118,34122116,34124170,34126199,34128251,34130040,34132088,34134142,34136190,34138033,34140068,34142104,34144144,34146129,34148010,34150019,34151942,34153353,34154851,34156776,34158832,34160804,34162860,34164908,34166903,34168709,34170444,34172397,34174445,34176483,34178507,34180555,34182591,34184635,34186455,34188422,34190220,34192063,34193939,34195950,34197786,34199823,34201617,34203636,34205572,34207626,34209674,34211722,34213772,34215807,34217474,34218879,34220517,34222147,34222896,34223989,34226019,34228074,34230129,34232138,34234065,34235961,34237741,34239591,34241336,34243288,34245187,34247045,34249049,34250979,34252884,34254923,34256963,34258603,34260657,34262211,34263690,34265485,34267491,34269499,34271426,34273240,34275146,34277000,34278767,34280529,34282126,34283832,34285767,34287076,34288603,34289961,34290944,34291876,34293865,34295839,34297744,34299554,34301405,34302998,34304740,34306420,34307812,34309225,34310508,34311877,34313244,34314550,34315663,34316676,34318001,34319202,34320287,34321575,34322882,34324238,34325542,34327052,34328906,34330716,34332381,34334342,34336317,34338365,34340375,34342402,34344265,34346050,34347654,34349157,34350164,34351310,34353132,34355075,34357123,34359177,34361225,34362775,34362993,34363804,34365852,34367900,34369956,34371340,34373388,34374644,34376495,34378543,34380239,34381655,34383710,34385758,34387806,34389854,34391389,34393446,34395454,34397091,34398282,34400330,34402378,34404426,34406474,34408522,34410570,34412615,34414636,34416684,34418732,34420780,34422828,34424876,34426924,34428972,34431020,34433068,34435116,34437164,34439163,34441218,34443275,34445332,34447389,34449437,34451475,34453450,34455469,34457518,34459575,34461623,34463659,34465707,34467763,34469811,34471859,34473907,34475964,34477786,34479004,34481052,34483100,34485148,34487205,34489262,34491308,34493364,34495293,34497215,34499075,34500621,34502243,34503727,34505400,34507231,34508864,34510320,34511720,34512872,34513834,34514313,34515634,34517507,34519329,34521375,34523423,34525471,34527445,34529098,34530124,34532172,34534220,34536100,34538053,34540101,34542149,34544197,34545883,34547608,34549656,34551704,34553387,34554857,34556627,34558500,34559913,34560663,34561271,34562520,34563940,34565399,34566835,34568048,34569234,34569919,34570747,34571589,34572060,34572374,34572712,34573286,34573690,34574467,34575557,34576205,34576681,34577225,34577695,34578402,34578936,34579383,34579926,34580235,34580723,34581174,34581891,34582520,34583525,34584338,34585454,34586063,34586794,34587852,34588446,34589168,34590214,34590903,34591184,34591821,34592304,34592831,34593324,34593748,34594312,34594922,34595297,34595839,34596468,34596939,34597254,34598430,34599281,34600470,34601486,34602448,34603204,34603733,34604425,34604945,34605509,34606064,34606773,34607058,34607467,34607763,34608264,34608959,34609289,34609696,34610351,34610733,34611283,34612178,34613475,34614167,34614500,34614920,34615188,34615532,34616112,34616756,34617292,34617795,34618244,34618885,34619427,34619757,34620266,34620618,34621706,34623029,34624192,34625179,34625465,34625989,34626447,34626877,34627326,34627756,34628123,34628615,34628873,34629230,34629630,34629882,34630115,34630389,34630953,34631675,34631940,34632261,34632968,34633251,34633797,34634796,34635421,34635650,34636093,34636332,34636858,34637137,34637385,34637641,34637949,34638846,34639319,34639841,34640275,34640906,34641284,34641776,34642201,34642491,34643219,34643606,34643931,34644596,34645175,34646313,34647207,34647665,34647955,34648225,34648512,34648799,34649095,34649679,34649937,34650200,34650433,34650847,34651596,34652204,34652967,34653787,34655145,34656465,34657280,34658170,34658709,34659247,34659640,34660120,34660775,34662125,34663557,34664077,34664748,34665524,34666152,34666709,34667297,34667935,34668796,34669358,34670037,34670753,34671417,34672103,34672872,34673553,34674569,34675636,34676801,34678152,34679169,34679780,34680418,34680975,34681967,34683163,34684244,34685360,34686425,34687493,34688657,34689046,34689389,34690536,34691600,34692654,34693464,34693941,34695255,34695692,34696157,34696504,34696652,34697056,34697250,34697458,34697594,34697834,34698085,34698556,34698691,34698824,34698957,34699227,34699727,34700377,34700729,34701389,34701924,34702382,34703250,34703833,34704321,34704585,34704908,34705495,34705774,34706086,34706408,34707144,34707543,34708127,34708449,34708893,34709190,34709458,34709764,34710451,34710635,34710943,34711178,34711363,34711701,34711891,34712355,34712640,34713009,34713186,34713408,34713620,34713827,34714322,34714664,34715192,34715624,34716322,34717388,34717758,34718191,34718717,34719137,34719777,34720396,34720726,34721291,34722310,34723065,34723929,34724622,34725093,34725471,34725823,34726229,34726646,34726919,34727310,34727618,34727835,34728099,34728277,34728404,34729045,34729783,34730710,34731499,34732000,34732699,34733123,34733531,34734025,34734265,34734784,34735497,34735662,34736030,34736441,34736686,34736851,34737161,34737631,34738051,34738589,34738687,34738924,34739284,34739439,34739684,34739944,34740103,34740395,34740860,34741025,34741310,34741851,34742230,34742368,34742993,34743268,34743673,34743944,34744650,34745598,34746868,34747906,34748328,34748909,34749471,34749925,34750527,34751232,34751627,34751921,34752559,34753666,34754419,34754735,34755721,34756721,34758056,34759106,34759564,34760082,34760551,34761212,34761852,34762318,34762941,34763230,34763489,34763718,34764072,34764436,34765373,34766184,34766807,34767401,34767761,34768278,34768703,34769113,34769540,34770483,34771281,34771874,34772568,34772951,34773475,34774156,34774795,34775245,34775977,34777017,34778124,34779023,34779803,34780614,34781736,34783633,34785487,34786477,34787468,34788459,34790178,34792064,34793950,34794939,34795925,34796911,34797975,34799561,34800620,34801875,34802966,34803798,34804674,34805147,34806337,34806725,34807161,34807968,34808547,34809340,34809909,34810452,34811210,34811926,34812590,34813056,34813557,34814355,34815007,34815989,34816432,34816555,34816714,34817164,34817730,34817888,34818045,34818164,34818675,34818870,34819267,34819807,34820389,34821566,34822300,34822725,34823066,34823692,34824224,34824557,34825140,34825569,34826025,34826395,34826737,34827444,34828320,34829177,34830960,34831456,34831958,34833015,34833486,34833901,34834263,34834682,34835324,34835534,34835907,34836332,34836901,34837126,34837716,34837935,34838305,34838649,34839097,34839546,34839831,34840061,34840562,34840874,34841221,34841502,34841783,34842077,34842356,34842923,34843159,34843559,34843740,34844212,34844606,34845015,34845134,34845584,34846156,34846693,34847218,34847378,34847666,34848120,34848594,34849008,34849230,34849657,34850344,34850626,34851319,34851691,34852164,34852871,34853207,34853751,34854650,34855216,34855622,34855698,34855757,34856591,34857452,34857871,34858661,34859498,34859958,34860466,34861096,34861756,34862405,34863056,34863520,34864004,34864581,34865087,34865344,34865884,34866359,34867040,34867751,34868584,34869286,34869813,34870344,34870840,34871262,34871726,34872158,34872625,34873441,34874527,34875341,34876138,34876680,34877222,34877718,34878209,34878919,34879365,34879973,34880438,34881128,34881537,34882387,34882671,34883120,34883794,34883989,34884334,34884540,34884724,34884933,34885327,34885437,34885917,34886480,34886651,34886855,34887162,34887321,34887670,34887794,34887910,34888450,34888972,34889504,34889839,34890314,34890742,34890952,34891217,34891397,34891962,34892296,34892474,34893269,34893583,34893994,34894325,34894703,34895076,34895663,34896442,34897147,34898079,34898895,34899555,34900232,34900434,34900954,34901864,34902307,34902816,34904244,34904703,34905271,34906286,34907411,34908655,34909393,34909705,34910292,34910595,34911298,34912985,34913988,34915213,34916557,34917988,34919402,34920839,34922351,34923900,34925370,34926892,34928466,34929912,34931422,34932937,34934451,34935984,34937516,34939049,34940518,34942079,34943554,34944996,34946332,34947600,34948786,34950086,34951501,34952807,34954012,34955185,34956284,34957409,34958908,34960399,34962095,34963969,34965692,34967468,34969164,34970855,34972563,34974316,34975996,34977750,34979472,34981174,34982901,34984662,34986429,34988178,34989901,34991448,34993135,34994781,34996414,34998120,34999840,35001553,35003272,35004974,35006650,35008311,35009967,35011642,35013269,35014824,35016463,35018058,35019968,35021559,35023245,35024910,35026552,35028186,35029936,35031670,35033425,35035214,35037048,35038859,35040605,35042426,35044205,35045907,35047641,35049395,35051145,35053025,35054860,35056577,35058223,35060020,35061781,35063475,35065243,35067076,35068819,35070516,35072209,35073896,35075469,35077326,35078879,35080554,35082164,35083746,35085379,35086985,35088684,35090355,35092050,35093713,35095433,35097148,35098820,35100559,35102326,35104036,35105668,35107442,35109153,35110865,35112578,35114228,35115855,35117581,35119229,35120880,35122501,35124126,35125729,35127274,35128742,35130258,35131980,35133705,35135317,35136826,35138286,35139645,35141204,35142714,35144199,35145509,35146718,35148103,35149596,35150935,35152308,35153668,35155104,35156382,35157775,35159328,35160893,35162442,35164025,35165449,35166841,35168371,35169745,35171121,35172596,35174146,35175609,35177129,35178674,35180207,35182039,35183456,35184891,35186277,35187658,35189256,35190639,35192137,35193582,35195103,35196466,35197806,35199120,35200435,35200944,35201158,35201428,35201653,35201871,35202373,35203284,35204607,35205881,35206890,35208362,35209914,35211215,35212698,35214411,35215680,35216657,35218093,35219253,35219992,35221300,35222743,35224220,35225829,35227472,35229022,35230649,35231987,35233392,35234882,35236266,35237746,35239228,35240942,35242334,35243882,35245469,35246823,35248378,35249995,35251110,35252544,35254140,35255604,35257218,35258678,35260311,35261905,35263027,35264786,35266209,35267790,35269310,35270586,35271958,35273509,35275173,35276801,35278188,35279546,35281204,35282506,35284164,35285635,35287252,35288557,35289800,35291428,35293028,35294560,35296090,35297471,35298809,35300366,35302055,35303276,35304978,35306402,35307821,35309354,35310934,35312375,35313514,35315083,35316776,35318399,35319927,35321270,35322705,35324207,35325854,35326961,35328346,35329630,35331257,35332369,35333653,35335052,35336629,35337988,35339310,35340579,35342192,35343747,35345420,35347005,35348519,35349791,35351085,35352759,35354220,35356026,35357229,35358946,35360307,35362149,35363664,35365270,35366456,35368186,35369906,35371529,35373311,35374980,35376735,35378206,35379672,35381593,35382973,35384505,35385943,35387635,35389409,35391012,35392732,35394301,35395953,35397225,35398974,35400630,35402336,35403894,35405415,35406809,35408434,35410012,35411565,35413269,35414335,35415827,35417511,35419170,35420784,35422510,35424343,35425903,35427238,35428796,35430366,35432272,35434329,35436354,35438349,35440390,35442446,35444467,35446508,35448545,35450569,35452614,35454641,35456679,35458708,35460750,35462802,35464848,35466886,35468921,35470929,35472941,35474895,35476909,35478929,35480960,35483010,35485067,35487104,35489154,35491201,35493227,35495244,35497253,35499298,35501341,35503363,35505407,35507452,35509483,35511506,35513506,35515509,35517498,35519510,35521549,35523589,35525634,35527662,35529687,35531734,35533764,35535752,35537714,35539710,35541727,35543703,35545714,35547742,35549771,35551790,35553847,35555875,35557871,35559845,35561850,35563845,35565822,35567840,35569858,35571869,35573889,35575936,35577961,35579949,35581938,35583945,35585944,35587923,35589933,35591945,35593996,35596044,35598091,35600132,35602121,35604133,35606157,35608182,35610190,35612228,35614272,35616314,35618343,35620376,35622418,35624442,35626490,35628526,35630581,35632615,35634664,35636664,35638665,35640655,35642647,35644597,35646589,35648561,35650573,35652569,35654470,35656450,35658434,35660402,35662380,35664375,35666356,35668344,35670330,35672315,35674277,35676238,35678215,35680213,35682191,35684170,35686138,35688130,35690099,35692110,35694072,35696040,35698000,35699989,35701984,35703964,35705923,35707902,35709894,35711891,35713874,35715875,35717841,35719848,35721841,35723838,35725807,35727711,35729679,35731675,35733667,35735625,35737633,35739615,35741607,35743552,35745540,35747501,35749491,35751476,35753467,35755477,35757461,35759450,35761459,35763474,35765477,35767476,35769461,35771432,35773388,35775317,35777089,35778889,35780671,35782560,35784455,35786410,35788196,35790010,35791902,35793674,35795322,35797155,35798788,35800594,35802559,35804499,35806375,35808166,35809987,35811903,35813778,35815648,35817472,35819143,35820835,35822510,35824311,35826180,35828063,35829950,35831774,35833689,35835661,35837718,35839774,35841827,35843790,35845779,35847566,35849440,35851274,35853171,35854987,35856806,35858458,35860230,35862043,35863906,35865793,35867656,35869438,35871260,35873086,35874731,35876556,35878343,35880229,35882022,35883926,35885706,35887514,35889332,35890978,35892783,35894495,35896385,35898218,35900102,35901921,35903792,35905549,35907387,35908977,35910746,35912519,35914397,35916172,35918086,35919927,35921831,35923555,35925326,35927026,35928802,35930554,35932426,35934292,35936111,35937924,35939720,35941585,35943101,35944986,35946615,35948557,35950484,35952421,35954372,35956198,35958106,35959941,35961849,35963601,35965442,35967317,35969290,35971224,35973162,35975180,35977106,35978867,35980784,35982532,35984433,35986076,35987832,35989686,35991505,35993455,35995265,35997093,35999065,36000897,36002663,36004560,36006431,36008275,36010108,36011959,36013808,36015695,36017471,36019374,36021191,36023006,36024763,36026589,36028436,36030270,36032086,36033711,36035545,36037392,36039110,36040958,36042869,36044745,36046640,36048577,36050509,36052446,36054367,36056312,36058291,36060174,36062067,36064014,36065912,36067876,36069830,36071705,36073627,36075647,36077527,36079447,36081031,36082421,36083749,36085168,36086590,36088082,36089605,36091019,36092626,36094122,36095604,36097206,36098831,36100558,36102166,36103772,36105684,36107669,36109651,36111475,36113463,36115138,36117095,36118877,36120582,36122548,36124393,36126374,36128298,36130228,36132108,36133891,36135701,36137577,36139364,36141289,36143253,36145230,36147037,36149023,36150687,36152676,36154434,36156185,36158129,36159959,36161945,36163843,36165683,36167638,36169231,36171150,36172881,36174461,36176421,36178265,36180232,36182149,36184083,36186014,36187731,36189644,36191454,36193080,36195045,36196728,36198665,36200579,36202504,36204442,36206190,36208047,36209925,36211706,36213691,36215664,36217644,36219508,36221507,36223192,36225213,36227039,36228852,36230815,36232716,36234667,36236537,36238435,36240401,36242354,36244305,36246209,36248133,36250036,36251824,36253457,36255325,36257331,36259317,36261289,36263280,36265292,36267305,36269322,36271312,36273310,36275327,36277321,36279321,36281297,36283262,36285240,36287209,36289212,36291232,36293267,36295267,36297235,36299214,36301201,36303194,36305203,36307190,36309180,36311211,36313246,36315260,36317238,36319255,36321278,36323314,36325335,36327329,36329342,36331354,36333359,36335355,36337375,36339381,36341412,36343427,36345426,36347437,36349423,36351452,36353483,36355509,36357527,36359522,36361524,36363523,36365504,36367508,36369521,36371540,36373528,36375529,36377521,36379518,36381529,36383564,36385610,36387609,36389625,36391552,36393305,36395084,36396823,36398514,36400172,36401867,36403634,36405343,36406983,36408586,36410376,36412084,36413695,36415478,36417272,36418859,36420533,36422361,36423937,36425533,36427244,36428893,36430596,36432295,36434139,36435844,36437515,36439279,36441116,36442885,36444574,36446271,36448089,36449785,36451539,36453317,36455045,36456912,36458862,36460787,36462807,36464785,36466738,36468650,36470618,36472552,36474487,36476476,36478450,36480430,36482407,36484396,36486390,36488402,36490385,36492367,36494338,36496291,36498328,36500288,36502285,36504290,36506256,36508218,36510203,36512167,36514137,36516127,36518155,36520170,36522145,36524116,36526107,36528093,36530042,36531989,36533964,36535902,36537841,36539697,36541623,36543530,36545347,36547220,36549113,36550899,36552792,36554643,36556570,36558411,36560277,36562196,36564064,36565926,36567837,36569756,36571730,36573723,36575699,36577659,36579536,36581495,36583356,36585300,36587206,36589178,36591115,36593012,36594983,36596930,36598873,36600818,36602807,36604702,36606667,36608483,36610359,36612218,36614273,36616328,36618364,36620382,36622396,36624406,36626437,36628454,36630475,36632515,36634554,36636595,36638630,36640658,36642669,36644665,36646525,36648504,36650523,36652566,36654617,36656670,36658685,36660728,36662748,36664756,36666775,36668801,36670842,36672873,36674913,36676969,36679005,36681043,36683091,36685109,36687085,36689059,36691067,36693093,36695116,36697155,36699199,36701197,36703231,36705214,36707199,36709187,36711176,36713164,36715197,36717232,36719249,36721255,36723268,36725274,36727266,36729260,36731255,36733220,36735210,36737228,36739276,36741284,36743310,36745320,36747343,36749318,36751326,36753324,36755293,36757272,36759287,36761328,36763339,36765382,36767432,36769464,36771458,36773500,36775504,36777507,36779489,36781512,36783541,36785595,36787640,36789692,36791728,36793742,36795773,36797821,36799866,36801914,36803966,36806004,36808019,36810004,36811983,36813995,36815965,36817940,36819920,36821912,36823904,36825914,36827892,36829835,36831813,36833762,36835740,36837701,36839694,36841659,36843637,36845623,36847577,36849563,36851468,36853418,36855394,36857372,36859348,36861303,36863295,36865305,36867279,36869284,36871273,36873222,36875172,36877161,36879104,36881076,36882905,36884746,36886789,36888841,36890858,36892911,36894936,36896975,36898729,36900518,36902514,36904483,36906386,36908282,36910196,36912173,36914144,36916074,36917973,36919924,36921923,36923870,36925801,36927640,36929528,36931512,36933507,36935413,36937267,36939190,36941154,36943107,36944977,36946855,36948772,36950712,36952667,36954578,36956412,36958304,36960278,36962234,36964139,36966015,36967970,36969922,36971831,36973655,36975601,36977542,36979430,36981277,36983134,36984985,36986890,36988812,36990700,36992602,36994474,36996339,36998240,37000126,37001957,37003877,37005774,37007597,37009496,37011287,37013067,37015037,37017004,37018928,37020862,37022799,37024635,37026478,37028334,37030155,37031963,37033951,37035936,37037942,37039971,37041980,37043990,37045971,37047738,37049716,37051649,37053658,37055684,37057695,37059647,37061533,37063533,37065510,37067528,37069482,37071456,37073387,37075439,37077466,37079444,37081332,37083294,37085296,37087311,37089312,37091290,37093273,37095288,37097299,37099277,37101251,37103214,37105226,37107232,37109249,37111236,37113168,37115143,37117118,37119076,37121091,37123044,37125056,37127103,37129130,37131107,37133112,37135022,37137046,37139049,37141037,37143003,37145020,37147055,37149095,37151112,37153128,37155134,37157047,37158934,37160935,37162926,37164878,37166901,37168853,37170799,37172774,37174759,37176687,37178717,37180614,37182581,37184576,37186545,37188470,37190472,37192444,37194414,37196254,37198206,37200140,37202097,37203999,37205881,37207885,37209888,37211915,37213908,37215907,37217824,37219732,37221678,37223604,37225508,37227404,37229373,37231339,37233302,37235293,37237306,37239311,37241274,37243248,37245184,37247140,37249088,37251027,37253042,37255040,37257013,37259029,37261027,37262992,37264974,37266918,37268878,37270837,37272736,37274681,37276655,37278605,37280581,37282573,37284615,37286531,37288534,37290524,37292502,37294543,37296480,37298472,37300418,37302381,37304362,37306368,37308337,37310299,37312205,37314174,37316135,37318119,37320042,37321999,37323958,37325923,37327878,37329823,37331774,37333722,37335654,37337547,37339411,37341339,37343318,37345242,37347144,37349123,37350979,37352920,37354888,37356770,37358729,37360692,37362659,37364618,37366624,37368561,37370535,37372527,37374452,37376423,37378366,37380361,37382388,37384357,37386380,37388423,37390428,37392397,37394391,37396367,37398375,37400410,37402449,37404480,37406530,37408542,37410498,37412512,37414481,37416502,37418542,37420566,37422618,37424613,37426625,37428634,37430650,37432653,37434685,37436733,37438756,37440807,37442839,37444894,37446851,37448867,37450848,37452878,37454915,37456960,37459011,37461060,37463088,37465048,37467059,37469036,37471066,37473089,37475134,37477168,37479216,37481238,37483203,37485127,37487109,37488916,37490896,37492871,37494867,37496853,37498860,37500894,37502901,37504885,37506853,37508677,37510685,37512681,37514636,37516681,37518664,37520608,37522632,37524628,37526589,37528630,37530617,37532521,37534463,37536245,37538043,37539817,37541190,37542711,37544286,37545610,37547214,37548516,37550023,37551467,37552591,37554124,37555295,37556722,37557997,37559409,37560674,37561876,37563257,37564349,37565350,37566890,37568354,37569465,37570719,37572132,37573306,37574313,37575586,37576918,37578038,37579645,37580764,37582157,37583285,37584892,37586031,37587348,37588763,37590253,37591497,37592993,37594538,37595963,37597560,37598984,37600489,37601832,37603322,37604829,37606017,37607671,37608779,37610218,37611325,37612940,37614120,37615554,37616857,37617789,37619119,37620577,37622015,37623091,37624417,37625847,37627026,37628036,37629353,37630729,37631989,37633433,37634568,37635919,37637056,37638715,37639921,37641391,37642872,37644187,37645774,37647190,37648718,37650204,37651718,37653296,37654516,37655981,37657496,37658848,37660185,37661685,37662956,37664281,37665436,37667066,37668271,37669708,37671013,37671913,37673434,37674806,37676148,37677294,37678559,37680201,37681132,37682216,37683557,37684871,37686166,37687526,37688725,37690094,37691223,37692855,37694108,37695613,37697112,37698394,37700009,37701357,37702881,37704420,37705839,37707388,37708643,37710140,37711629,37712779,37714287,37715637,37717030,37718381,37719515,37721094,37722246,37723674,37724980,37725853,37727474,37728793,37730062,37731266,37732510,37734129,37734944,37736181,37737581,37738722,37740226,37741281,37742640,37743871,37745345,37746579,37747862,37749268,37750740,37751962,37753607,37755117,37756550,37758134,37759443,37761017,37762337,37763845,37765378,37766599,37768242,37769383,37770790,37771971,37773495,37774772,37776149,37777540,37778580,37779751,37781220,37782695,37783812,37785073,37786514,37787826,37788782,37790061,37791468,37792643,37794202,37795295,37796682,37797740,37799404,37800620,37802081,37803551,37804907,37806378,37807782,37809336,37810792,37812331,37813886,37815153,37816591,37818065,37819514,37820776,37822352,37823605,37824976,37826151,37827743,37828885,37830367,37831643,37832504,37833998,37835345,37836738,37837832,37839141,37840773,37841643,37842745,37844105,37845373,37846687,37848086,37849313,37850652,37851828,37853443,37854689,37856185,37857700,37859023,37860555,37861948,37863531,37865094,37866595,37868199,37869477,37871008,37872567,37873853,37874975,37876547,37877806,37879116,37880245,37881819,37883014,37884407,37885719,37886649,37887999,37889430,37890810,37891881,37893182,37894748,37895649,37896733,37898104,37899343,37900565,37901925,37903128,37904497,37905655,37907301,37908430,37909879,37911423,37912858,37914377,37915852,37917406,37918950,37920486,37922110,37923401,37924897,37926464,37927771,37928809,37930555,37931760,37933141,37934278,37935861,37937075,37938382,37939749,37940789,37941897,37943411,37944889,37946025,37947295,37948728,37949928,37950894,37952196,37953499,37954636,37956186,37957271,37958676,37959924,37961639,37962749,37964022,37965558,37967086,37968436,37970124,37971576,37973074,37974652,37976059,37977743,37979029,37980563,37982069,37983251,37984903,37986129,37987508,37988769,37990197,37991584,37992877,37994329,37995424,37996413,37998039,37999368,38000539,38001781,38002984,38004614,38005424,38006710,38008196,38009378,38011009,38012089,38013450,38014661,38016202,38017543,38018892,38020306,38021799,38023016,38024724,38026235,38027755,38029353,38030775,38032401,38033762,38035330,38036841,38038004,38039663,38040933,38042342,38043630,38045028,38046443,38047744,38049220,38050367,38051303,38052973,38054287,38055494,38056730,38057917,38059566,38060402,38061665,38063127,38064538,38066073,38067230,38068556,38069928,38071207,38072853,38074109,38075626,38077190,38078440,38080107,38081689,38083294,38084876,38086352,38088036,38089327,38090578,38091831,38093152,38094534,38096241,38097795,38099254,38100507,38101754,38103343,38104838,38106238,38108061,38109536,38110869,38112091,38113595,38115046,38116469,38118258,38119729,38121161,38122510,38123783,38125296,38126694,38128085,38129831,38131328,38132930,38134362,38135597,38136999,38138336,38139543,38141043,38142758,38143946,38145117,38146423,38147745,38149463,38150845,38152148,38153591,38155180,38156454,38158166,38159842,38161677,38163615,38165450,38167360,38169272,38171052,38172801,38174646,38176512,38178264,38180116,38181567,38182729,38184435,38186160,38187914,38189612,38191318,38192981,38194500,38195583,38196496,38198481,38200388,38202181,38203902,38205257,38206450,38207890,38209319,38211035,38212892,38214830,38216569,38218037,38219687,38221509,38223122,38225011,38226889,38228783,38230601,38232105,38233893,38235453,38237383,38239313,38240984,38242871,38244701,38246518,38248377,38250112,38251806,38253665,38255507,38257403,38259282,38261055,38262701,38264464,38266021,38267583,38269344,38270854,38272461,38274047,38275627,38277244,38278687,38280249,38281767,38283246,38284828,38286240,38287665,38289502,38291434,38293305,38295042,38296916,38298765,38300668,38302496,38304354,38306223,38308070,38309880,38311807,38313628,38315483,38317433,38319392,38321346,38323195,38325118,38327039,38329017,38330892,38332792,38334750,38336731,38338603,38340540,38342400,38344250,38345933,38347988,38350036,38352063,38354009,38356025,38357942,38359834,38361799,38363707,38365622,38367594,38369522,38371495,38373460,38375376,38377365,38379276,38381205,38383173,38385060,38386962,38388918,38390816,38392675,38394635,38396541,38398483,38400365,38402235,38403873,38405582,38407373,38409187,38410930,38412682,38414428,38416123,38417601,38418949,38420871,38422401,38424126,38425881,38427499,38429318,38430896,38432464,38434238,38435648,38436867,38438024,38439202,38440619,38442185,38443874,38445381,38446583,38447964,38449667,38451180,38452385,38453955,38455884,38457706,38459449,38461216,38463020,38464654,38466520,38468391,38470093,38471746,38473417,38475149,38476679,38478437,38480088,38481680,38483344,38484804,38486347,38487885,38489346,38490592,38492160,38493872,38495041,38495964,38497432,38499102,38500708,38502275,38504313,38506279,38508247,38510237,38512203,38514075,38515806,38517255,38519065,38521072,38522958,38524836,38526703,38528492,38530336,38532264,38533886,38535648,38537489,38539334,38541090,38542978,38544670,38546500,38548085,38549648,38551341,38552924,38554594,38556304,38558152,38559921,38561624,38563135,38564884,38566234,38567631,38569340,38571175,38572994,38574708,38576112,38577576,38579241,38581014,38582560,38584007,38585658,38587285,38588927,38590594,38592146,38593718,38595386,38596981,38598342,38599916,38601345,38603045,38604666,38606105,38607711,38609255,38610887,38612543,38614038,38615280,38616878,38618395,38619646,38620966,38622327,38623538,38624863,38626215,38627768,38628977,38630205,38631640,38632975,38634286,38635688,38637065,38638358,38639954,38641527,38643089,38644846,38646188,38647533,38649327,38651188,38653042,38654987,38656532,38658454,38659905,38661352,38662892,38664147,38665854,38667895,38669897,38671943,38673455,38675332,38677046,38678729,38680612,38682141,38683971,38685781,38687583,38689061,38690884,38692491,38693997,38695492,38696869,38698403,38700304,38702122,38703640,38705485,38706800,38708654,38710273,38712171,38713624,38715164,38716984,38718675,38720515,38722271,38724232,38725956,38727469,38729147,38730849,38732480,38734217,38735952,38737694,38738114,38738718,38739154,38739671,38740492,38741108,38741691,38742256,38743094,38745125,38747090,38749072,38751002,38752945,38754901,38756873,38758826,38760731,38762385,38764021,38765641,38767364,38768957,38770565,38772346,38773872,38775598,38777186,38778865,38780337,38781824,38783306,38784861,38786221,38787674,38789093,38790713,38792147,38793420,38794589,38796073,38797444,38799029,38800484,38801847,38803359,38804832,38806277,38807861,38809268,38810649,38812070,38813476,38814910,38816291,38817703,38819313,38821054,38822824,38824670,38826569,38828429,38830303,38832069,38833792,38835591,38837242,38838987,38840761,38842610,38844407,38846132,38847828,38849546,38850361,38851174,38852018,38852808,38854528,38856254,38857838,38859471,38861205,38862804,38864430,38866111,38867776,38869516,38871189,38872936,38874600,38876316,38878089,38879884,38881763,38882995,38884784,38886339,38888149,38889373,38891173,38892759,38894647,38896491,38898345,38900146,38901982,38903841,38905571,38907391,38909245,38910784,38911830,38912888,38913898,38914991,38916053,38917119,38918116,38919398,38920958,38922515,38924054,38925614,38927182,38928731,38930298,38931837,38933485,38934932,38936535,38938117,38939759,38940881,38941961,38943031,38944080,38945515,38946939,38948646,38950464,38952013,38953315,38954450,38955957,38957408,38958509,38959873,38961422,38962903,38964380,38965988,38967583,38969139,38970743,38972349,38973748,38975134,38975930,38976871,38977696,38978309,38979293,38979988,38981271,38982679,38984147,38984663,38985192,38986014,38986577,38987464,38987974,38988841,38989540,38990347,38990929,38991439,38992365,38993005,38993909,38994438,38995276,38995916,38996599,38997388,38997907,38998803,38999515,39000453,39000919,39001522,39002215,39002876,39003539,39003829,39004469,39004671,39005203,39005476,39005698,39006188,39006393,39007061,39007240,39007774,39007975,39008331,39008539,39008577,39009172,39009332,39009984,39010233,39010914,39012359,39013783,39015091,39016304,39017528,39018710,39019989,39020971,39021983,39022974,39023944,39024931,39025924,39026930,39028145,39029515,39030914,39032314,39033795,39035297,39036702,39038109,39039486,39041068,39042537,39044032,39045545,39047125,39048755,39050236,39051770,39053317,39054820,39056204,39057630,39059045,39060446,39061850,39063298,39064713,39066094,39067491,39068913,39070252,39071675,39072622,39073556,39074524,39075440,39076539,39077493,39078435,39079381,39080431,39081330,39082303,39083185,39084368,39085762,39087206,39088570,39089972,39090954,39091871,39092808,39093750,39095375,39096987,39098627,39100179,39101690,39103214,39104729,39106334,39108033,39109446,39110793,39112126,39113486,39114705,39116016,39117330,39118657,39120290,39121834,39123370,39124645,39126118,39127628,39128912,39130284,39131828,39133363,39135020,39136596,39138210,39139841,39141582,39143291,39145059,39146640,39147861,39149214,39150578,39152005,39153475,39154680,39156085,39157518,39158890,39160486,39161929,39163548,39164980,39166592,39168200,39169799,39171405,39173010,39174553,39176156,39177736,39179380,39181121,39182763,39184339,39185986,39187431,39189029,39190582,39192178,39193812,39195410,39197034,39198602,39200243,39201693,39203308,39204904,39206511,39208179,39209847,39211468,39213124,39214657,39216255,39217840,39219438,39221012,39222728,39224284,39225839,39227377,39229206,39230781,39232370,39233896,39235527,39237357,39238934,39240517,39242094,39243881,39245518,39247185,39248855,39250549,39251494,39252452,39253410,39254360,39255898,39257373,39258943,39260391,39261957,39263229,39264466,39265838,39267243,39268389,39269553,39270827,39272081,39273467,39274504,39275418,39276456,39277845,39279056,39280183,39281281,39282540,39283594,39284501,39285506,39286565,39288551,39290034,39291949,39293503,39295100,39296518,39297970,39299274,39300660,39302075,39303494,39304856,39306404,39307930,39309459,39310974,39312523,39314056,39315592,39317121,39318635,39320295,39321705,39323117,39324494,39325870,39327257,39328630,39329989,39331485,39333109,39334607,39336152,39337732,39339289,39340833,39342362,39343904,39345659,39347235,39348840,39350498,39352145,39353730,39355341,39356996,39358642,39360319,39361795,39363214,39364611,39366044,39367513,39368937,39370312,39372069,39373837,39375568,39377271,39378990,39380733,39382444,39384167,39385895,39387769,39389511,39391200,39392856,39394593,39396288,39397981,39399637,39401436,39402496,39403392,39404678,39405730,39406834,39407882,39409132,39410279,39411345,39412371,39413342,39413982,39414631,39415356,39416204,39418023,39419682,39421427,39423091,39424833,39426506,39428225,39429905,39431755,39433534,39435262,39436910,39438564,39440264,39441980,39443713,39445447,39447372,39449114,39450877,39452597,39454408,39456118,39457876,39459618,39461494,39463249,39464971,39466638,39468285,39469971,39471617,39473322,39475022,39476582,39478107,39479522,39480983,39482483,39483499,39484477,39485467,39486874,39488713,39490504,39492380,39494203,39495926,39497732,39499544,39501403,39503064,39504294,39505470,39506707,39508447,39509632,39510651,39511700,39513332,39514977,39516605,39518176,39519845,39521349,39522995,39524571,39526191,39527828,39529298,39530709,39532130,39533477,39535034,39536472,39537911,39539324,39540883,39542518,39543991,39545619,39546967,39548434,39549877,39551382,39552855,39554525,39556171,39557766,39559350,39560993,39562620,39564235,39565912,39567510,39568975,39570414,39571833,39573261,39574725,39576142,39577569,39579135,39580953,39582746,39584629,39586464,39588224,39590023,39591849,39593725,39595387,39597001,39598635,39600254,39601812,39603460,39605101,39606710,39608471,39610017,39611488,39612925,39614426,39615855,39617325,39618795,39620276,39621904,39623732,39625577,39627431,39629127,39631005,39632803,39634661,39636486,39638188,39639832,39641435,39643066,39644582,39646208,39647813,39649412,39651065,39652585,39654057,39655510,39656865,39658412,39659882,39661318,39662713,39664521,39666326,39668144,39670015,39671672,39673543,39675355,39677203,39678976,39679865,39681401,39682582,39683268,39684328,39685074,39685768,39686950,39687601,39688471,39690151,39690799,39691487,39692151,39693516,39694781,39695794,39697061,39698410,39699418,39700321,39701623,39702770,39704026,39705353,39706778,39708491,39709951,39710977,39712076,39713826,39715403,39717094,39718743,39720459,39722029,39723561,39725305,39726979,39728075,39729358,39730740,39731991,39733548,39734819,39735845,39736856,39737863,39739254,39740366,39741440,39742527,39743663,39745180,39747200,39749236,39751238,39753227,39755252,39757253,39759254,39761238,39763293,39765329,39767377,39769383,39771400,39773405,39775415,39777375,39779374,39781400,39783437,39785437,39787436,39789451,39791435,39793450,39795410,39797440,39799463,39801495,39803499,39805486,39807493,39809491,39811462,39813469,39815524,39817408,39819340,39821222,39823134,39825036,39826910,39828771,39830629,39832510,39834427,39836332,39838185,39840044,39841878,39843706,39845602,39847490,39849144,39850823,39852485,39854162,39855827,39857479,39859111,39860773,39862520,39864162,39865822,39867481,39869123,39870783,39872414,39874008,39875748,39877182,39878629,39880066,39881503,39882936,39884355,39885751,39887123,39888741,39890113,39891310,39892964,39894357,39895790,39897318,39898949,39900462,39901845,39903397,39904934,39906556,39907941,39909577,39911056,39912723,39913999,39915412,39916742,39918541,39920349,39921904,39923490,39925165,39926751,39928339,39929821,39931520,39933187,39934728,39936298,39937971,39939706,39941429,39942980,39944572,39946246,39947773,39949300,39950851,39952420,39953963,39955507,39957055,39958580,39960115,39961624,39963197,39964879,39966396,39968076,39969749,39971389,39972982,39974689,39976558,39978091,39979596,39981500,39983428,39985165,39986858,39988621,39990575,39992524,39994452,39996435,39998359,40000313,40002227,40004136,40006018,40007849,40009691,40011588,40013590,40015454,40017329,40019183,40021014,40022814,40024581,40026356,40028194,40030196,40032151,40034124,40036067,40037978,40039884,40041807,40043722,40045737,40047605,40049511,40051384,40053218,40055020,40056834,40058623,40060454,40062477,40064474,40066460,40068439,40070375,40072311,40074259,40076195,40078206,40080003,40081794,40083541,40085266,40087004,40088777,40090502,40092274,40094241,40096045,40097841,40099647,40101456,40103267,40105056,40106837,40108736,40110191,40111665,40113120,40114530,40115918,40117334,40118784,40120231,40122081,40124037,40125980,40128004,40129945,40131889,40133785,40135692,40137571,40139491,40141355,40143262,40145253,40147191,40149140,40151041,40152960,40154880,40156799,40158727,40160690,40162225,40163729,40165309,40166928,40168487,40170117,40171657,40173148,40175106,40176898,40178698,40180463,40182219,40183928,40185681,40187392,40189247,40190554,40191890,40193196,40194489,40195887,40197191,40198565,40199912,40201687,40203370,40205051,40206685,40208349,40209989,40211618,40213253,40214901,40216444,40217928,40219415,40220967,40222550,40224033,40225511,40226970,40228609,40230300,40231796,40233451,40235064,40236703,40238223,40239819,40241211,40242523,40243858,40245087,40246364,40247526,40248773,40250391,40252288,40254152,40256020,40257913,40259812,40261720,40263576,40265450,40267416,40269329,40271207,40273077,40274951,40276851,40278737,40280609,40282543,40283974,40285383,40286764,40288116,40289558,40291058,40292515,40293973,40295706,40297335,40299053,40300779,40302487,40304101,40305683,40307238,40308847,40310462,40312017,40313575,40315186,40316867,40318599,40320307,40321967,40323720,40325183,40326633,40328099,40329567,40330966,40332361,40333776,40335197,40336848,40338300,40339804,40341356,40342359,40343922,40345411,40346871,40348528,40350035,40351540,40353041,40354536,40356022,40357499,40359027,40360548,40362499,40364465,40366398,40368193,40369601,40371003,40372442,40373438,40374862,40376268,40377675,40379216,40380458,40381593,40382721,40383857,40384757,40385858,40387028,40388177,40389671,40391077,40392549,40394340,40396257,40398143,40400057,40401945,40403836,40405728,40407629,40409375,40410974,40412512,40413949,40415469,40417009,40417844,40418813,40419556,40420461,40421324,40422156,40422919,40423692,40424677,40425530,40426447,40427197,40428162,40429113,40430105,40431053,40432410,40433674,40435026,40436310,40437386,40437711,40438238,40438713,40439235,40439443,40439986,40440417,40441759,40442858,40443630,40444462,40445460,40446822,40447540,40448855,40449807,40449994,40450225,40450664,40451017,40452175,40453474,40455037,40456602,40458477,40460223,40462025,40463856,40465660,40467459,40469227,40470994,40472801,40474437,40476098,40477692,40479298,40480872,40482513,40484125,40485699,40487207,40488531,40489847,40491168,40492705,40494378,40496047,40497697,40499339,40501028,40502717,40504385,40506062,40507726,40509394,40511049,40512201,40513732,40515545,40517416,40519211,40520994,40522825,40524677,40526500,40528247,40529943,40531387,40532840,40534297,40535863,40537727,40539562,40541439,40543319,40545181,40547061,40548898,40550757,40552598,40553772,40555509,40556914,40558083,40559278,40560301,40561334,40563379,40565404,40567401,40569324,40571271,40573228,40575146,40577043,40578919,40580867,40582818,40584791,40586700,40588609,40590509,40592424,40594421,40596262,40597923,40599684,40601466,40603294,40605068,40606797,40608411,40610205,40612253,40614302,40616351,40618394,40620446,40622478,40624509,40626561,40628616,40630667,40632719,40634767,40636823,40638867,40640913,40642952,40645008,40646900,40648819,40650690,40652516,40654338,40656190,40658016,40659892,40661840,40663743,40665626,40667472,40669336,40671153,40673032,40674869,40676759,40678649,40680507,40681534,40682228,40683113,40683831,40684522,40684998,40685816,40686672,40687518,40688107,40688498,40689310,40690225,40691062,40691497,40692055,40692859,40693727,40694525,40694915,40695613,40696414,40697273,40697902,40698303,40699440,40700579,40701741,40702292,40702863,40704041,40705055,40706288,40706939,40707384,40708629,40709672,40710783,40711288,40711945,40713127,40714209,40715272,40716243,40717469,40718916,40720309,40721977,40723680,40724705,40725824,40726962,40728090,40729260,40730409,40731494,40732627,40733772,40734926,40736055,40737256,40738390,40739487,40740511,40741592,40743222,40744311,40745403,40746559,40747720,40748826,40749902,40750968,40752000,40753006,40753878,40754894,40755943,40756932,40757796,40758573,40759450,40760912,40761371,40761903,40762399,40762922,40763448,40763993,40764550,40765103,40765555,40766020,40766529,40767017,40767525,40768060,40768598,40769122,40770277,40771768,40773232,40774710,40776248,40777746,40779231,40780739,40782180,40783559,40784508,40785508,40786714,40788425,40789827,40791245,40792586,40793846,40795305,40796965,40798637,40800291,40801968,40803601,40805200,40806846,40808506,40810162,40812032,40813730,40815448,40817170,40818856,40820570,40822292,40823975,40825734,40826895,40828065,40829241,40830525,40831861,40833148,40834489,40835621,40836958,40838374,40839783,40841235,40842752,40844229,40845809,40847323,40848900,40850533,40851515,40852663,40853793,40854915,40856078,40857182,40858257,40859383,40860539,40861677,40862849,40864023,40865163,40866266,40867264,40868347,40869997,40871083,40872172,40873318,40874410,40875489,40876548,40877615,40878635,40879632,40880515,40881515,40882567,40883501,40884349,40885119,40886042,40887505,40887942,40888462,40888941,40889471,40890006,40890524,40891113,40891630,40892093,40892571,40893061,40893561,40894085,40894609,40895145,40895672,40897019,40898815,40900601,40902400,40904178,40905990,40907749,40909607,40911037,40912457,40913832,40915202,40916743,40918568,40920418,40922294,40924155,40926028,40927881,40929735,40931589,40933200,40934693,40936291,40937828,40939294,40940915,40942577,40944285,40945819,40947587,40949363,40951177,40952959,40954568,40955865,40957025,40958114,40959468,40960896,40962500,40964229,40966031,40967845,40969611,40971466,40973252,40974996,40976729,40978269,40979387,40980634,40981861,40983129,40984697,40986093,40988014,40989652,40991652,40993393,40995185,40997021,40998804,41000652,41002435,41004189,41005927,41007712,41009371,41010994,41012788,41014518,41016302,41017874,41019528,41020993,41022628,41024257,41025865,41027451,41029027,41030591,41032150,41033764,41035521,41037008,41038754,41040560,41042124,41043481,41045202,41047002,41048618,41050392,41051454,41052545,41053661,41054817,41055924,41057060,41058092,41059218,41060290,41061433,41062561,41063729,41064870,41065959,41066999,41068110,41069444,41070358,41071620,41072752,41073677,41074205,41075369,41076598,41077795,41078766,41079593,41080791,41081897,41082915,41083358,41084558,41085753,41086896,41087891,41088639,41089768,41090924,41092011,41092426,41093594,41094747,41095908,41096800,41097627,41098725,41099947,41101072,41101487,41102595,41103805,41104963,41105878,41106831,41107995,41109230,41110423,41110806,41111839,41113079,41114209,41115089,41116674,41117812,41118934,41120129,41121216,41122295,41123374,41124445,41125479,41126528,41127429,41128453,41129486,41130378,41131261,41132037,41132908,41134044,41135204,41136393,41137538,41138057,41138927,41140152,41141290,41142263,41143483,41144605,41145786,41146999,41148138,41149389,41150522,41151760,41152961,41154195,41155359,41156461,41157724,41158899,41160203,41161309,41162441,41163619,41164813,41166079,41167258,41168317,41169307,41170378,41171670,41172862,41173852,41174874,41176002,41177343,41178451,41179458,41180448,41181610,41182937,41183998,41184976,41186030,41187340,41188332,41188775,41189315,41190450,41191927,41193687,41195529,41197414,41199269,41200903,41202321,41203007,41203499,41204026,41204531,41205117,41205751,41207399,41208869,41210365,41212001,41213459,41214966,41216587,41218051,41219572,41221179,41222631,41224162,41225896,41227767,41229505,41231238,41233255,41234926,41236728,41238615,41240322,41242179,41243989,41245821,41247530,41249382,41251130,41252893,41254786,41256534,41258267,41260169,41261916,41263719,41265519,41267274,41269246,41271036,41272866,41274556,41276455,41278190,41280049,41281821,41283562,41285455,41287117,41288938,41290825,41292607,41294363,41296181,41298007,41299713,41301559,41303440,41305156,41307061,41308790,41310557,41312448,41314189,41315937,41317741,41319546,41321342,41323161,41324985,41326661,41328568,41330260,41332103,41333889,41335651,41337548,41339331,41341156,41342951,41344748,41346496,41348303,41350191,41351899,41353636,41355519,41357223,41359105,41360875,41362628,41363983,41365209,41366436,41367665,41368939,41370096,41371290,41372431,41373458,41374019,41374801,41375681,41376453,41376856,41377586,41378384,41379273,41379888,41380305,41381089,41381947,41382860,41383315,41383849,41384616,41385469,41386381,41387033,41388477,41389484,41390660,41391802,41392936,41394102,41395184,41396256,41397362,41398507,41399630,41400823,41402011,41403092,41404173,41405188,41406306,41407947,41409401,41411164,41412227,41413334,41414499,41415642,41416689,41417765,41418803,41419835,41420809,41421682,41422679,41423722,41424692,41425546,41426319,41427211,41428507,41429965,41431353,41432916,41433354,41433880,41434379,41434911,41435481,41435965,41436525,41437087,41437565,41438050,41438522,41439041,41439563,41440084,41440639,41441168,41442562,41444192,41445852,41447452,41449133,41450820,41452434,41454096,41455781,41457497,41459285,41460939,41462590,41464187,41465830,41467486,41468932,41469244,41470565,41471959,41473390,41474729,41476158,41477488,41478889,41480219,41481521,41482572,41483775,41484867,41486057,41487153,41488404,41489510,41490634,41492080,41493431,41494890,41496287,41497804,41499155,41500573,41502012,41503553,41505109,41506626,41507998,41509421,41510851,41512214,41513634,41515014,41516298,41517413,41518680,41519791,41521051,41522264,41523605,41524745,41526041,41527184,41528375,41529615,41530890,41532134,41533260,41534520,41535649,41537061,41538526,41540049,41541528,41543209,41544696,41546256,41547782,41549182,41550587,41552055,41553385,41554440,41555680,41556823,41558272,41559684,41560850,41562015,41562821,41563873,41565116,41565787,41567836,41569884,41571888,41573895,41575919,41577906,41579911,41581873,41583895,41585915,41587952,41589958,41591969,41593982,41595994,41597961,41599983,41601429,41602769,41604336,41605990,41607111,41608233,41609356,41610479,41611600,41612728,41613846,41615483,41616980,41618422,41619997,41621785,41623470,41625222,41626983,41628855,41630432,41631946,41633431,41635047,41636639,41638218,41639765,41641370,41642147,41642217,41643445,41645451,41647480,41649355,41651232,41653134,41654964,41656840,41658736,41660648,41662497,41664491,41666404,41668346,41670281,41672130,41674035,41675975,41677880,41679726,41681583,41683563,41685433,41687321,41689279,41691166,41692914,41694691,41696498,41698220,41700198,41702104,41703997,41705862,41707743,41709649,41711560,41713457,41715325,41717308,41719047,41720881,41722742,41724661,41726487,41728007,41729740,41731411,41733073,41734746,41736467,41738126,41739817,41741473,41743205,41744847,41746494,41748192,41749914,41751573,41753269,41754941,41756608,41758528,41759985,41761501,41763109,41764723,41766319,41767858,41769305,41770888,41772491,41774122,41775780,41777305,41778819,41780406,41781971,41783506,41785403,41787017,41788650,41790141,41791726,41793694,41795496,41797275,41799046,41800898,41802771,41804620,41806469,41808386,41809786,41811071,41812372,41813744,41815028,41816391,41817721,41818965,41820569,41822034,41823485,41824928,41826386,41827896,41829377,41830809,41832298,41833913,41835369,41836812,41838284,41839776,41841253,41842710,41844145,41845752,41847212,41848666,41850100,41851590,41853081,41854529,41855991,41857412,41859053,41860466,41861879,41863275,41864789,41866242,41867670,41869073,41870677,41872080,41873476,41874876,41876302,41877781,41879234,41880651,41882062,41883692,41885110,41886477,41887904,41889405,41890856,41892273,41893655,41895228,41896668,41898041,41899449,41900906,41902373,41903786,41905219,41906608,41908214,41909641,41911014,41912487,41913978,41915462,41916921,41918322,41919831,41921402,41922873,41924319,41925799,41927261,41928767,41930222,41931625,41933231,41934556,41935894,41937252,41938652,41939974,41941300,41942625,41943935,41945500,41946838,41948150,41949512,41950893,41952245,41953543,41954817,41956391,41957710,41958999,41960302,41961678,41962967,41964321,41965657,41966904,41968536,41969968,41971408,41972875,41974346,41975848,41977307,41978725,41980352,41981771,41983165,41984606,41986099,41987550,41989029,41990478,41991883,41993477,41994858,41996235,41997667,41999118,42000581,42002002,42003381,42004911,42006426,42007790,42009153,42010621,42012092,42013529,42014937,42016335,42017926,42019341,42020729,42022148,42023579,42025054,42026471,42027892,42029280,42030933,42032363,42033781,42035220,42036718,42038166,42039590,42040985,42042696,42044334,42046157,42047914,42049678,42051475,42053119,42054907,42056732,42058569,42060379,42062123,42063712,42065560,42067295,42069096,42070780,42072609,42074431,42076299,42078167,42079971,42081901,42083795,42085614,42087519,42089442,42091280,42093093,42094877,42096717,42098498,42100281,42102050,42103940,42105759,42107465,42109184,42110917,42112641,42114339,42116041,42117760,42119618,42121354,42123110,42124801,42126538,42128255,42129984,42131652,42133396,42135357,42137207,42139029,42140841,42142634,42144463,42146278,42148087,42150001,42151720,42153463,42155237,42156952,42158688,42160413,42162192,42163958,42165810,42167707,42169557,42171404,42173219,42175040,42176785,42178579,42180365,42182244,42183902,42185636,42187407,42188904,42190643,42192392,42194053,42195809,42197609,42199375,42201111,42202891,42204496,42206170,42207756,42209577,42211381,42213115,42214805,42216410,42218046,42219739,42221421,42223104,42224766,42226534,42228209,42229856,42231500,42233173,42234870,42236557,42238244,42239913,42241766,42243608,42245312,42247102,42248934,42250729,42252536,42254334,42256192,42257945,42259696,42261405,42263158,42264958,42266702,42268516,42270237,42272032,42273716,42275411,42277173,42278899,42280654,42282342,42284080,42285870,42287600,42289286,42291029,42292689,42294383,42296056,42297764,42299496,42301270,42302934,42304666,42306301,42307944,42309617,42311294,42313041,42314803,42316341,42317809,42319326,42320863,42322365,42323894,42325434,42326910,42328744,42330747,42332676,42334622,42336628,42338597,42340543,42342531,42344422,42346369,42348361,42350383,42352372,42354293,42356270,42358265,42360271,42362198,42363468,42363508,42363548,42363587,42363751,42363914,42363954,42363994,42364033,42365581,42367392,42369210,42371040,42372877,42374712,42376537,42378314,42380201,42381694,42383193,42384687,42386094,42387489,42388969,42390418,42391888,42393756,42395582,42397369,42399130,42400929,42402688,42404486,42406226,42408025,42408742,42409134,42409174,42409214,42409252,42409570,42409608,42409648,42409688,42410121,42411317,42412642,42414366,42416063,42417721,42419434,42421127,42422801,42424484,42426222,42427348,42428561,42430019,42431456,42432080,42433650,42435136,42436463,42437402,42439182,42440869,42442516,42443353,42443393,42443431,42443471,42443788,42443828,42443868,42443906,42444178,42445472,42446802,42447904,42449133,42450752,42452415,42454021,42455695,42457360,42459032,42460688,42462313,42463950,42464285,42464324,42464364,42464396,42465424,42466104,42466174,42466981,42468858,42470809,42472676,42474356,42475966,42477613,42479275,42480946,42482661,42484403,42486094,42487826,42489555,42491287,42493019,42494756,42496458,42498135,42499780,42501025,42502047,42502859,42503493,42505300,42507087,42508818,42510522,42512275,42514061,42515767,42517502,42519374,42521236,42523023,42524916,42526754,42528614,42530453,42532328,42534126,42535983,42537688,42539355,42541160,42542797,42544595,42546336,42548066,42549905,42551691,42553636,42555509,42557383,42559249,42561114,42563039,42564879,42566891,42568440,42569850,42571177,42572423,42573678,42575241,42576813,42578299,42579660,42581069,42582360,42583665,42584919,42586205,42587519,42588921,42590612,42591464,42592185,42593059,42593984,42595197,42596886,42598193,42598929,42599538,42600249,42601492,42603089,42604775,42606385,42607257,42608431,42609834,42611409,42612564,42613530,42614366,42615290,42616111,42616703,42617581,42618751,42620109,42621378,42622500,42623856,42625175,42626586,42627915,42629212,42631001,42632750,42634552,42636271,42638034,42639749,42641492,42643245,42645000,42646741,42648491,42650271,42652036,42653833,42655586,42657392,42658773,42659703,42660658,42661577,42662899,42664839,42666714,42668456,42670441,42671674,42672839,42674014,42675221,42677091,42679119,42681090,42683123,42685111,42687022,42688912,42690823,42692702,42694729,42696774,42698818,42700848,42702688,42704497,42706273,42708121,42709918,42711737,42713448,42715262,42717034,42718688,42720321,42721938,42723549,42725261,42726533,42727812,42729409,42730890,42732082,42733341,42734572,42735947,42737136,42738382,42739595,42741054,42742684,42743870,42745052,42746711,42748498,42749360,42750113,42751487,42752829,42753862,42754590,42755596,42757120,42758552,42759286,42760159,42761854,42763571,42764922,42766314,42767946,42769856,42771735,42773598,42775487,42777325,42779275,42781242,42783196,42785117,42786780,42788475,42790112,42791725,42793464,42795233,42797029,42798803,42800443,42801876,42803294,42804730,42806302,42807745,42809134,42810589,42812117,42813670,42815135,42816592,42818110,42819746,42821261,42822698,42824212,42826050,42828023,42829986,42831908,42833886,42835881,42837869,42839844,42841829,42843693,42845447,42847205,42848944,42850772,42852382,42853946,42855516,42857306,42859218,42861050,42862910,42864836,42866621,42868452,42870222,42872045,42874028,42875889,42877727,42879639,42881551,42883343,42885141,42886938,42888786,42890400,42892008,42893548,42895226,42896401,42897642,42899117,42900611,42901764,42903015,42904192,42905732,42907074,42908253,42909546,42911215,42912977,42914765,42916536,42918296,42920221,42922017,42923815,42925590,42927460,42929283,42931104,42932932,42934594,42935387,42936269,42937100,42937824,42939145,42940296,42941452,42942629,42943899,42945097,42946282,42947442,42948793,42950138,42951544,42952858,42954304,42956144,42957980,42959848,42961674,42963564,42965385,42967228,42969071,42971003,42972902,42974826,42976736,42978674,42980580,42982526,42984475,42986417,42988151,42989913,42991699,42993407,42995182,42996979,42998631,43000175,43001808,43003450,43005255,43007036,43008860,43010710,43012463,43014295,43016104,43017704,43019189,43020603,43022072,43023613,43025155,43026923,43028565,43030126,43031706,43033360,43035081,43036718,43038490,43040284,43042030,43043835,43045697,43047736,43049785,43051812,43053729,43055720,43057713,43059701,43061658,43063611,43065570,43067501,43069367,43070725,43071947,43073438,43074494,43076068,43077849,43079588,43081348,43083090,43084634,43086218,43087740,43089264,43091089,43092858,43094652,43096384,43098236,43100048,43101839,43103633,43105423,43107128,43108851,43110549,43112278,43113859,43115670,43117464,43119111,43120492,43121478,43122600,43123568,43125238,43125914,43126464,43127004,43128542,43129519,43130709,43131673,43132865,43133605,43134199,43134743,43135269,43136155,43136930,43137657,43138374,43139228,43140267,43141585,43142792,43143813,43145296,43146647,43148028,43149464,43151006,43152404,43153775,43155352,43156914,43158376,43159817,43161336,43162872,43164425,43165853,43167342,43168824,43170377,43171729,43173098,43174580,43176161,43177602,43178998,43180485,43181765,43181977,43182197,43182389,43183104,43183597,43184075,43184476,43184986,43186999,43189028,43191077,43193132,43195172,43197217,43199259,43201277,43203318,43205300,43207238,43209185,43211092,43212990,43214931,43216853,43218763,43220373,43221758,43223142,43224616,43226018,43227178,43228356,43229466,43230657,43232034,43233443,43234891,43236325,43238175,43239996,43241829,43243693,43245589,43247409,43249191,43251000,43252885,43254697,43256451,43258192,43259990,43261652,43263390,43265164,43266890,43268578,43269879,43271170,43272516,43274069,43275432,43276712,43278104,43279692,43281480,43283218,43285018,43286739,43288110,43289311,43290549,43291797,43293511,43295325,43297102,43298903,43300695,43302135,43303501,43305043,43306450,43308491,43310532,43312565,43314584,43316619,43318600,43320589,43322579,43324453,43325961,43327459,43328936,43330549,43332230,43333895,43335559,43337218,43339244,43341219,43343209,43345193,43347121,43348854,43350559,43352290,43354175,43356232,43358280,43360332,43362385,43363985,43365545,43366545,43367084,43367623,43368159,43368917,43370290,43371716,43373136,43374393,43375569,43377109,43378597,43379843,43381223,43382789,43384226,43385811,43387355,43388994,43390696,43392387,43394263,43396093,43397605,43398778,43400150,43401362,43402678,43403647,43404632,43405603,43406830,43407827,43408684,43409530,43410585,43411794,43412441,43413280,43414472,43416472,43418455,43420427,43422386,43424366,43426336,43428320,43430296,43431814,43433713,43435610,43437478,43439444,43441442,43443074,43445080,43447085,43449003,43450886,43452779,43454687,43456527,43458571,43459942,43461968,43463747,43465315,43466981,43468512,43469996,43471476,43473096,43474625,43476045,43477989,43479881,43481748,43483603,43485479,43487387,43489243,43491113,43493024,43494600,43496109,43497557,43499321,43501281,43503277,43505273,43507272,43509212,43511016,43512811,43514626,43516475,43518334,43520220,43522126,43523906,43525300,43526766,43528145,43529448,43530973,43532480,43533977,43535440,43536992,43538609,43540341,43542003,43543565,43545072,43546662,43548184,43549753,43551473,43553223,43554842,43556594,43558274,43560007,43561683,43563447,43565093,43566774,43568296,43570002,43571677,43573350,43574892,43576556,43578201,43579749,43581281,43582876,43584435,43585835,43587667,43589162,43590759,43592232,43593703,43595244,43596728,43598252,43599698,43601220,43602913,43604432,43605765,43607071,43608460,43610083,43611769,43613585,43614972,43616637,43618238,43619823,43621589,43623324,43624982,43626667,43628127,43629786,43631340,43632863,43634478,43636017,43637444,43638945,43640823,43642141,43643558,43644927,43646224,43647322,43648481,43649755,43650942,43652306,43653757,43655170,43656515,43658023,43659532,43660722,43662031,43663792,43665454,43667280,43668884,43670227,43671303,43672307,43673226,43674124,43675216,43676387,43677655,43678948,43680408,43682058,43683612,43685290,43687209,43688657,43689988,43691434,43692978,43694443,43695979,43697401,43698865,43700266,43701919,43703633,43705359,43707102,43708740,43710483,43712252,43714122,43715884,43717671,43719472,43721160,43722492,43723832,43725169,43726531,43727962,43729524,43731132,43732735,43734335,43735821,43737243,43738624,43740063,43741682,43742996,43744397,43745786,43747197,43748582,43750178,43751734,43753241,43754700,43756132,43757545,43758974,43760407,43761949,43763345,43764995,43766885,43768472,43769878,43771295,43772686,43774068,43775429,43776814,43778225,43779922,43781668,43783465,43785076,43786656,43788154,43789595,43791003,43792829,43794230,43795614,43797043,43798466,43799876,43801404,43803074,43804713,43806350,43807811,43809318,43810832,43812208,43813659,43815158,43816611,43818272,43819829,43820554,43820798,43822118,43823685,43824433,43824677,43825913,43827472,43828218,43828461,43829705,43831275,43832044,43832311,43833563,43835117,43835898,43836144,43837330,43838891,43839667,43839911,43840973,43842240,43843505,43844781,43846169,43847445,43848745,43850061,43851364,43852764,43854027,43855399,43856662,43858091,43859391,43860683,43861971,43863369,43864934,43866173,43867388,43868659,43869883,43871164,43872417,43873692,43874906,43876443,43877630,43878802,43880041,43881311,43882501,43883711,43884896,43886277,43887606,43888905,43890187,43891477,43892742,43894025,43895270,43896549,43898309,43900030,43901824,43903523,43905201,43906859,43908576,43910254,43911949,43913155,43914537,43915822,43917219,43918547,43919945,43921203,43922613,43923957,43925340,43926707,43928074,43929416,43930837,43932189,43933591,43935482,43937167,43938742,43940318,43941977,43943557,43945061,43946520,43947797,43949152,43950567,43952026,43953605,43955123,43956563,43958070,43959784,43961679,43963377,43964968,43966555,43968224,43969802,43971318,43972814,43974070,43975427,43976818,43978270,43979845,43981354,43982805,43984310,43986039,43987938,43989629,43991245,43992812,43994461,43996018,43997558,43999035,44000274,44001653,44003012,44004446,44006035,44007538,44008993,44010505,44012192,44014106,44015781,44017395,44018969,44020632,44022205,44023768,44025303,44026589,44028003,44029336,44030746,44032294,44033776,44035267,44036784,44038442,44040323,44041672,44042952,44044086,44045038,44046036,44047119,44048246,44049268,44050427,44051669,44052928,44054151,44055135,44056066,44057146,44058195,44059599,44061082,44062351,44063507,44064529,44065534,44066560,44067702,44068719,44069870,44071083,44072355,44073605,44074595,44075553,44076595,44077662,44078937,44080957,44082885,44084800,44086761,44088724,44090715,44092656,44094582,44096455,44098275,44100051,44101887,44103778,44105707,44107649,44109603,44111556,44113000,44114978,44116900,44118874,44120896,44122886,44124812,44126785,44128771,44129957,44131124,44132270,44133441,44134766,44135888,44137026,44138165,44139722,44141486,44143242,44145014,44146766,44148544,44150289,44152136,44153896,44155655,44157449,44159247,44161020,44162853,44164376,44166335,44168323,44170250,44172153,44174021,44175986,44177747,44178544,44179410,44181265,44183198,44185196,44187169,44189165,44191101,44193114,44195071,44197030,44199066,44201027,44203012,44205013,44206952,44208933,44210896,44212854,44214805,44216397,44217969,44219542,44221107,44222690,44224242,44225816,44227395,44229160,44230863,44232494,44234203,44235776,44237611,44239252,44241017,44242628,44244352,44245841,44247405,44248911,44250498,44252202,44253891,44255632,44257274,44259056,44260685,44262404,44264117,44266021,44267732,44269543,44271339,44273164,44274836,44276499,44278172,44279837,44281602,44283319,44285093,44286734,44288489,44289994,44291618,44293145,44294782,44296422,44298151,44299850,44301621,44303345,44305075,44306911,44308702,44310406,44311916,44313672,44315290,44317100,44318872,44320701,44322495,44324305,44326093,44327886,44329720,44331499,44333259,44334947,44336694,44338296,44339938,44341473,44343220,44344857,44346697,44348383,44350219,44352014,44353751,44355464,44357208,44359012,44360696,44362228,44364102,44366037,44367871,44369124,44371050,44372977,44374526,44376200,44377745,44379751,44381756,44383772,44385464,44387038,44388651,44390053,44391368,44392569,44393739,44395306,44396924,44398519,44400081,44401600,44403104,44404666,44406150,44407696,44409150,44410374,44411333,44412224,44413225,44414567,44415652,44416622,44417733,44418806,44420592,44422414,44424271,44426157,44427951,44429807,44431572,44433363,44435342,44437069,44438644,44440276,44441938,44443647,44445425,44447201,44448866,44450728,44452554,44454428,44456306,44458076,44459951,44461722,44463520,44465469,44467293,44468888,44470558,44472209,44473952,44475737,44477534,44479218,44481062,44482855,44484748,44486540,44488464,44490240,44492185,44493968,44495886,44497869,44499744,44501742,44503709,44505600,44507538,44509523,44511461,44513467,44515305,44516985,44518748,44520564,44522347,44524172,44526028,44527853,44529356,44530744,44532326,44533814,44535077,44536558,44538098,44539810,44541268,44542389,44543724,44545070,44546318,44547367,44548139,44548402,44549347,44550643,44551896,44553231,44554536,44555964,44557270,44558579,44559930,44561237,44562697,44563990,44565287,44566627,44567943,44569410,44570753,44572098,44573436,44574877,44576295,44577872,44578858,44580478,44582028,44583902,44585838,44587851,44589897,44591889,44593891,44595882,44597801,44599630,44601261,44602795,44604297,44605931,44607570,44609257,44610955,44612759,44614499,44616225,44617922,44619613,44621244,44622846,44624431,44626078,44627323,44629027,44630885,44632842,44634691,44636348,44638041,44639807,44641772,44643760,44645638,44647419,44649065,44650914,44652839,44654730,44656531,44658033,44659761,44661705,44663603,44665482,44667186,44668841,44670760,44672704,44674694,44676619,44678446,44680079,44681931,44683792,44685682,44687521,44689086,44690046,44691025,44691996,44693119,44694671,44696215,44697829,44699488,44701126,44702738,44704366,44706076,44707556,44709446,44711135,44712844,44714574,44716207,44717909,44719574,44721221,44722915,44724570,44726395,44728229,44729997,44731751,44733474,44735144,44736940,44738601,44740245,44741948,44743662,44745433,44747174,44749124,44750965,44752485,44754155,44756031,44757901,44759832,44761755,44763698,44765597,44767355,44769028,44770790,44772454,44774148,44776079,44777992,44779891,44781774,44783684,44785648,44787586,44789480,44791432,44793373,44795222,44796998,44798783,44800574,44802391,44804358,44806261,44808174,44810072,44811976,44813835,44815712,44817599,44818929,44820027,44821332,44822992,44824599,44826276,44827864,44829663,44831452,44833159,44834939,44836698,44838451,44840201,44841969,44843759,44845503,44847285,44848990,44850387,44850995,44851513,44852113,44853372,44854391,44855648,44856911,44858131,44859146,44860827,44862562,44864178,44865805,44867500,44869221,44870704,44872392,44874145,44875387,44877088,44878616,44879932,44881006,44882668,44884250,44885956,44887638,44889348,44891071,44892809,44894385,44895967,44897655,44899177,44900790,44902284,44903930,44905502,44907110,44908718,44910286,44911979,44913555,44915240,44916791,44918448,44919989,44921538,44923100,44924599,44926247,44927759,44929394,44930932,44932460,44934114,44935669,44937343,44938887,44940464,44942093,44943888,44945702,44947554,44949452,44951309,44953150,44954982,44956838,44958717,44960556,44962396,44964308,44966218,44968102,44969978,44971836,44973787,44975793,44977772,44979698,44981576,44983471,44985404,44987312,44989215,44991141,44993093,44995032,44996909,44998771,45000606,45002523,45004428,45006300,45007948,45009572,45011171,45012956,45014585,45016157,45017793,45019402,45021017,45022659,45024278,45026022,45027650,45029310,45030942,45032595,45034219,45035851,45037483,45039100,45040862,45042519,45044147,45045796,45047433,45049095,45050733,45052387,45054123,45056003,45057874,45059754,45061618,45063495,45065352,45067209,45069063,45071009,45072853,45074688,45076511,45078358,45080198,45082041,45083884,45085778,45087711,45089562,45091423,45093288,45095141,45096984,45098841,45100704,45102558,45103876,45105307,45106736,45108076,45109475,45110900,45112506,45113895,45115249,45116658,45118154,45119585,45121044,45122650,45124527,45126417,45128241,45129971,45131771,45133602,45135483,45137385,45139184,45140856,45142589,45144312,45146055,45147716,45149444,45151144,45152823,45154433,45156124,45157866,45159528,45161301,45163025,45164803,45166343,45168062,45169839,45171700,45173514,45175402,45177057,45178749,45180625,45182508,45184434,45186294,45188078,45189717,45191522,45193291,45195089,45196898,45198309,45200003,45201712,45203378,45205198,45206885,45208531,45210338,45212071,45213949,45215689,45217476,45219108,45220824,45222453,45224071,45225834,45227555,45228974,45230475,45231954,45233514,45235034,45236688,45238070,45239802,45241403,45242906,45244485,45246114,45247682,45249195,45250803,45252372,45253929,45255474,45257047,45258801,45260608,45262387,45264168,45265913,45267676,45269451,45270876,45272269,45274041,45275829,45277665,45279412,45281124,45282861,45284347,45286058,45287762,45289546,45291213,45292590,45293872,45295620,45297376,45299137,45300615,45302104,45303553,45304992,45306672,45308235,45309665,45311236,45312757,45314280,45315770,45317302,45318781,45320323,45321682,45323100,45324632,45326173,45327760,45329224,45330701,45332177,45333894,45335424,45336968,45338405,45339781,45341250,45342743,45344496,45346294,45348171,45349980,45351812,45353668,45355450,45357188,45358893,45360514,45362158,45363957,45365640,45367435,45369142,45370890,45372679,45374403,45376133,45378140,45380191,45382200,45384217,45386239,45388229,45390103,45391820,45393493,45395166,45396865,45398584,45400356,45402074,45403755,45405454,45407270,45409048,45410655,45412506,45414197,45415929,45417631,45419369,45420976,45422677,45424342,45426074,45427876,45429546,45431259,45432904,45434674,45436382,45438128,45439817,45441407,45443209,45444949,45446351,45447794,45449570,45451339,45452995,45454688,45456447,45457831,45459336,45460870,45462387,45463882,45465325,45466928,45468449,45469935,45471723,45473481,45475132,45476879,45478603,45480265,45482029,45483780,45485407,45487078,45488714,45490385,45492023,45493634,45495263,45496897,45498589,45500252,45501890,45503496,45505179,45506788,45508459,45510086,45511830,45513473,45515124,45516755,45518412,45520109,45521736,45523406,45525051,45526770,45528399,45530057,45531714,45533399,45535025,45536670,45538264,45539993,45541600,45543239,45544955,45546722,45548445,45550088,45551705,45553345,45555064,45556691,45558361,45560018,45561804,45563464,45565082,45566711,45568381,45570085,45571862,45573726,45575417,45577065,45578773,45580589,45582283,45583988,45585743,45587573,45589369,45591120,45592996,45594882,45596755,45598744,45600712,45602663,45604604,45606577,45608452,45610282,45612155,45614118,45616122,45618139,45620148,45622056,45623937,45625855,45627646,45629490,45631459,45633478,45635491,45637487,45639488,45641440,45643386,45645295,45647179,45649086,45651013,45652955,45654906,45656879,45658696,45660505,45662425,45664337,45666234,45668063,45669674,45671292,45673101,45674955,45676781,45678448,45680073,45681679,45683314,45684945,45686609,45687873,45688973,45689942,45691075,45692266,45693549,45694688,45695980,45697217,45698425,45699570,45700746,45701981,45703206,45704453,45705648,45706909,45708482,45710184,45711885,45713643,45715294,45716990,45718693,45720478,45722190,45723850,45725598,45727427,45729120,45730803,45732442,45734138,45735809,45737512,45739137,45740786,45742436,45744146,45745822,45747548,45749180,45750818,45752572,45754240,45755915,45757547,45759397,45761110,45762829,45764558,45766230,45767952,45769683,45771427,45773156,45774922,45776619,45778341,45780077,45782090,45784129,45786139,45788181,45790223,45792250,45794286,45796310,45798360,45800394,45802416,45804465,45806522,45808578,45810632,45812655,45814696,45816680,45818538,45820390,45822311,45824238,45826150,45828018,45829864,45831772,45833408,45835071,45836650,45838315,45840096,45841825,45843383,45844971,45846716,45848340,45850050,45851728,45853368,45855062,45856763,45858540,45860205,45861909,45863593,45865146,45866838,45868243,45869829,45871571,45873495,45875223,45876914,45878615,45880319,45882231,45884106,45885972,45887781,45889555,45891319,45893114,45894941,45896830,45898326,45900244,45902221,45904236,45906214,45908116,45910016,45911810,45913470,45915136,45916894,45918610,45920385,45922124,45923918,45925591,45927290,45929064,45930724,45932427,45934121,45935620,45937104,45938622,45940164,45941655,45943238,45944762,45946279,45947766,45949344,45950829,45952339,45953852,45955415,45956927,45958437,45959929,45961457,45962375,45963359,45964202,45965236,45966677,45968129,45969421,45970839,45972175,45973573,45974973,45976380,45977703,45979503,45981126,45982828,45984484,45986111,45987711,45989348,45991052,45992866,45994530,45996209,45997859,45999650,46001413,46003127,46004863,46006528,46008328,46009953,46011648,46013304,46014068,46015665,46017308,46019005,46020827,46022732,46024636,46026536,46028404,46030284,46032196,46034099,46035995,46037947,46039723,46041281,46042781,46044311,46045766,46047303,46048937,46050880,46052798,46054664,46056321,46057919,46059434,46061046,46062825,46064726,46066649,46068286,46069976,46071614,46073230,46074848,46076510,46078206,46079910,46081479,46082881,46084497,46086176,46087878,46089604,46091378,46092644,46094099,46095314,46096716,46098163,46099816,46101558,46103307,46104818,46106051,46107653,46109072,46110462,46111778,46113180,46114518,46115898,46117263,46118734,46120224,46121493,46122882,46124190,46125505,46126806,46128038,46129398,46130946,46132238,46133806,46135311,46136992,46138707,46140185,46141320,46142778,46144217,46145431,46146896,46148479,46150109,46151599,46153021,46154171,46155739,46157218,46158623,46159933,46161204,46162426,46163649,46165057,46166601,46168204,46169621,46171293,46173003,46174765,46176452,46178242,46179572,46181220,46182505,46184180,46185742,46187409,46189058,46190613,46191857,46193290,46194960,46196225,46197703,46199294,46200922,46202465,46203847,46205121,46206784,46208129,46209563,46211020,46212696,46214441,46216119,46217807,46219137,46220809,46222330,46223814,46225272,46226758,46228312,46229734,46231202,46232862,46234670,46236412,46238170,46239969,46240769,46240838,46241570,46242530,46243316,46243893,46244519,46244953,46245784,46246275,46246920,46248057,46248974,46249713,46251139,46252544,46253923,46255347,46256756,46258204,46259864,46261540,46263177,46264811,46266366,46267893,46269713,46271401,46272613,46273669,46274866,46276039,46277365,46278729,46279943,46281169,46282617,46284051,46285645,46287201,46288696,46290179,46291845,46293520,46294911,46296243,46297676,46298863,46298888,46298918,46298943,46299045,46299957,46300914,46301940,46303086,46304716,46306362,46307980,46309575,46310984,46312447,46314022,46315604,46317124,46318686,46320589,46322505,46324415,46326334,46328226,46330158,46331650,46333121,46334588,46336069,46336983,46337918,46339155,46340409,46341837,46343276,46344767,46346264,46347683,46349152,46350891,46352661,46354168,46355745,46357254,46358825,46360401,46361931,46363474,46365055,46367104,46369161,46371200,46373223,46375092,46376957,46379006,46381007,46382748,46384563,46386455,46388336,46390349,46392353,46394378,46396381,46398391,46400393,46402402,46404397,46406448,46408486,46410215,46411957,46413961,46415952,46417945,46419936,46421618,46423275,46424514,46425733,46426931,46428159,46430146,46432145,46433834,46435557,46437443,46439336,46441092,46442869,46444633,46446397,46448427,46450439,46452431,46454424,46456459,46458451,46460457,46462469,46464006,46465552,46467090,46468607,46470158,46471699,46473263,46474799,46476168,46477587,46478889,46480243,46481531,46482798,46484165,46485460,46487471,46489471,46491466,46493431,46495436,46497405,46499349,46501246,46503249,46505183,46506882,46508560,46510205,46511883,46513541,46515146,46515399,46515658,46516792,46518172,46519528,46520624,46521579,46522620,46523634,46524656,46526232,46527952,46529539,46531216,46532940,46534659,46536167,46537690,46539261,46540854,46542387,46543941,46545432,46546918,46548277,46549657,46550738,46551852,46553181,46554511,46555768,46557028,46558484,46559889,46561476,46563079,46564524,46566003,46567374,46568784,46569693,46570669,46572246,46573815,46574771,46575782,46577104,46578433,46579920,46581329,46582813,46584364,46585523,46586738,46588283,46589840,46591772,46593693,46594997,46596323,46597542,46598847,46600427,46602013,46603613,46605241,46606827,46608412,46609916,46611439,46612939,46614439,46615653,46616991,46618579,46620158,46621518,46622876,46624280,46625668,46627025,46628430,46628991,46629620,46630010,46630451,46631947,46633468,46635106,46636717,46638126,46639560,46641081,46642605,46643997,46645349,46646489,46647633,46648902,46650274,46651760,46653235,46654324,46655276,46656154,46657097,46658860,46660705,46662498,46664311,46665854,46667369,46668332,46669332,46670892,46672465,46674018,46675590,46677177,46678760,46680335,46681935,46683776,46685589,46687391,46689181,46691032,46692880,46694707,46696548,46697834,46699263,46700639,46702014,46703428,46704858,46706516,46708208,46710126,46712115,46713965,46715921,46717839,46719828,46721678,46723639,46725514,46727453,46728997,46730515,46731115,46731791,46732647,46733571,46734772,46736301,46737951,46739650,46741134,46742669,46744097,46745477,46746628,46747683,46748348,46749034,46749843,46750673,46751280,46751887,46753355,46754779,46755285,46755810,46756317,46756883,46758652,46760497,46761604,46762737,46763779,46764862,46766227,46767623,46768728,46769751,46770648,46771627,46773078,46774552,46776003,46777456,46778861,46780308,46782003,46783720,46785371,46787040,46788905,46790805,46792346,46793891,46794875,46795849,46796984,46798137,46799053,46799967,46800830,46801730,46802747,46803743,46804963,46806167,46806667,46807167,46807799,46808431,46808947,46809463,46810090,46810717,46811222,46811727,46812355,46812983,46813499,46814015,46814614,46815213,46815689,46816165,46816718,46817355,46819234,46821106,46822156,46823224,46824264,46825328,46826369,46827400,46828476,46829597,46831404,46833117,46834789,46836497,46838123,46839801,46841534,46843190,46844343,46845545,46847191,46848842,46850520,46852261,46854146,46855967,46856173,46856406,46856700,46857037,46857226,46857422,46857731,46858043,46858171,46858418,46858498,46858626,46858771,46858975,46859182,46859371,46859599,46859907,46861353,46862839,46864413,46866062,46867131,46868214,46869269,46870354,46871523,46872753,46874233,46875740,46877195,46878658,46880522,46882374,46884057,46885746,46887232,46888737,46890345,46891982,46893343,46894737,46896698,46898669,46900693,46902731,46904685,46906623,46908597,46910554,46912511,46914490,46916504,46918457,46919735,46921010,46922488,46924148,46925805,46926983,46928589,46930073,46931554,46933037,46934563,46935994,46937468,46938928,46940445,46941977,46943499,46945024,46946017,46947258,46948587,46949936,46951124,46952366,46953705,46954758,46955857,46956885,46958794,46960842,46962890,46964938,46966986,46969034,46971082,46973130,46975178,46977226,46979274,46981322,46983370,46985418,46987466,46989514,46991562,46993610,46995658,46997706,46999754,47001802,47003850,47005898,47007946,47009994,47012046,47013955,47016003,47018051,47020099,47022147,47024195,47026243,47028291,47030339,47032387,47034435,47036483,47038531,47040579,47042627,47044675,47046723,47048771,47050819,47052867,47054915,47056963,47059011,47061068,47063116,47065170,47067227,47069164,47071162,47073210,47075232,47077280,47079328,47081337,47083385,47085433,47087481,47089529,47091577,47093625,47095673,47097678,47099726,47101774,47103822,47105870,47107918,47109966,47111973,47114021,47116069,47118117,47120165,47122170,47124218,47126266,47128314,47130319,47132367,47134415,47136463,47138511,47140568,47142616,47144622,47146670,47148718,47150766,47152814,47154731,47156779,47158827,47160875,47162932,47164849,47166897,47168904,47170952,47172956,47175004,47177052,47179100,47181148,47183196,47185244,47187292,47189340,47191388,47193436,47195484,47197532,47199580,47201628,47203676,47205724,47207774,47209781,47211618,47213656,47215704,47217752,47219800,47221848,47223896,47225944,47227992,47230040,47232088,47234136,47236184,47238232,47240280,47242328,47244383,47246431,47248479,47250459,47252332,47254380,47256428,47258476,47260524,47262572,47264556,47266471,47268519,47270567,47272615,47274663,47276706,47278682,47280622,47282670,47284718,47286766,47288814,47290862,47292910,47294958,47297006,47299054,47301102,47303150,47305198,47307246,47309294,47311342,47313390,47315438,47317486,47319534,47321582,47323630,47325678,47327726,47329774,47331822,47333878,47335914,47337901,47339713,47341761,47343809,47345857,47347905,47349953,47352001,47354049,47356097,47358145,47360193,47362241,47364289,47366337,47368385,47370433,47372481,47374529,47376577,47378625,47380673,47382730,47384784,47386832,47388887,47390935,47392985,47395013,47396989,47398691,47400739,47402742,47404790,47406801,47408849,47410897,47412945,47414993,47417041,47419089,47421137,47423185,47425233,47427281,47429329,47431377,47433425,47435473,47437521,47439569,47441617,47443665,47445713,47447761,47449809,47451857,47453905,47455953,47458001,47460057,47462086,47464020,47466068,47468116,47470164,47472212,47474260,47476308,47478356,47480404,47482452,47484500,47486548,47488596,47490644,47492692,47494740,47496788,47498836,47500884,47502932,47504980,47507028,47509076,47511124,47513172,47515220,47517271,47519176,47521224,47523272,47525320,47527368,47529355,47531403,47533451,47535499,47537547,47539516,47541564,47543612,47545660,47547708,47549756,47551804,47553798,47555846,47557894,47559942,47561990,47564038,47566094,47568087,47570135,47572183,47574231,47576279,47578288,47580336,47582384,47584432,47586480,47588528,47590576,47592624,47594672,47596720,47598768,47600816,47602864,47604912,47606960,47609008,47611056,47613060,47615108,47617156,47619204,47621252,47623300,47625348,47627396,47629444,47631492,47633540,47635588,47637636,47639684,47641732,47643780,47645828,47647829,47649877,47651925,47653973,47656021,47658069,47660117,47662165,47664213,47666261,47668309,47670357,47672405,47674453,47676501,47678549,47680597,47682645,47684652,47686700,47688748,47690796,47692844,47694892,47696940,47698988,47701036,47703084,47705132,47707180,47709228,47711276,47713324,47715372,47717420,47719468,47721516,47723520,47725568,47727616,47729664,47731712,47733760,47735808,47737856,47739904,47741952,47744000,47746048,47748096,47750144,47752192,47754240,47756288,47758295,47760343,47762391,47764439,47766487,47768535,47770583,47772631,47774679,47776727,47778775,47780823,47782871,47784919,47786967,47789015,47791063,47793111,47795115,47797163,47799168,47801216,47803221,47805269,47807277,47809325,47811373,47813374,47815383,47817431,47819236,47821227,47823279,47825334,47827322,47829200,47831178,47833234,47835289,47837300,47839219,47841140,47843178,47845226,47847271,47849190,47851124,47853146,47855202,47857252,47859212,47861096,47863100,47865156,47867204,47869189,47871105,47873075,47875126,47877174,47879191,47881059,47883107,47885155,47887203,47889251,47891299,47893347,47895395,47897443,47899491,47901539,47903587,47905635,47907683,47909689,47911737,47913785,47915833,47917881,47919929,47921977,47924025,47926073,47928121,47930169,47932217,47934265,47936313,47938320,47940368,47942416,47944464,47946512,47948560,47950608,47952656,47954704,47956752,47958800,47960806,47962854,47964902,47966950,47968998,47971046,47973094,47975142,47977190,47979238,47981286,47983289,47985337,47987385,47989433,47991442,47993490,47995538,47997586,47999634,48001643,48003691,48005696,48007744,48009746,48011753,48013798,48015836,48017884,48019932,48021980,48024028,48026029,48028077,48030125,48032173,48034221,48036170,48038176,48040224,48042272,48044320,48046368,48048416,48050464,48052512,48054560,48056608,48058656,48060704,48062752,48064800,48066848,48068896,48070944,48072992,48075040,48077043,48079091,48081139,48083187,48085235,48087283,48089331,48091379,48093427,48095475,48097523,48099571,48101619,48103667,48105715,48107763,48109811,48111859,48113865,48115913,48117918,48119966,48121969,48123974,48126022,48128026,48130074,48132122,48134127,48136175,48138223,48140229,48142277,48144280,48146328,48148335,48150383,48152386,48154434,48156437,48158485,48160533,48162581,48164629,48166677,48168725,48170773,48172821,48174869,48176917,48178965,48181013,48183061,48185109,48187157,48189205,48191212,48193260,48195308,48197356,48199404,48201452,48203500,48205548,48207596,48209644,48211692,48213740,48215788,48217836,48219884,48221932,48223980,48226028,48228031,48230079,48232127,48234175,48236175,48238223,48240271,48242280,48244328,48246376,48248424,48250472,48252476,48254524,48256572,48258620,48260668,48262672,48264720,48266768,48268816,48270864,48272912,48274960,48277008,48279056,48281104,48283152,48285200,48287208,48289256,48291304,48293352,48295400,48297448,48299496,48301502,48303550,48305598,48307646,48309694,48311742,48313790,48315793,48317841,48319889,48321937,48323985,48326033,48328081,48330129,48332177,48334225,48336273,48338321,48340369,48342417,48344465,48346513,48348561,48350568,48352616,48354664,48356712,48358760,48360808,48362856,48364904,48366952,48369000,48371048,48373096,48375144,48377192,48379240,48381288,48383336,48385384,48387389,48389437,48391485,48393533,48395581,48397629,48399677,48401725,48403773,48405821,48407878,48409926,48411974,48414022,48416070,48418118,48420166,48422214,48424269,48426323,48428372,48430411,48432316,48434312,48436360,48438408,48440456,48442504,48444552,48446600,48448648,48450696,48452744,48454792,48456840,48458888,48460936,48462984,48465040,48467088,48469136,48471152,48473161,48475160,48477042,48478868,48480916,48482964,48485012,48487060,48489108,48491156,48493204,48495252,48497300,48499348,48501396,48503444,48505492,48507540,48509588,48511636,48513684,48515732,48517780,48519828,48521876,48523924,48525921,48527969,48530017,48532065,48534113,48536161,48538209,48540257,48542305,48544353,48546401,48548449,48550497,48552545,48554593,48556641,48558689,48560737,48562785,48564833,48566881,48568929,48570920,48572968,48575016,48577064,48579112,48581160,48583208,48585256,48587304,48589352,48591400,48593448,48595496,48597544,48599592,48601640,48603688,48605736,48607784,48609785,48611833,48613881,48615929,48617977,48620025,48622073,48624121,48626169,48628217,48630265,48632313,48634361,48636409,48638457,48640505,48642553,48644601,48646554,48648602,48650650,48652698,48654746,48656794,48658842,48660890,48662938,48664986,48667034,48669082,48671130,48673178,48675226,48677274,48679322,48681370,48683377,48685425,48687473,48689521,48691569,48693617,48695665,48697713,48699761,48701809,48703857,48705905,48707953,48710001,48712049,48714097,48716145,48718193,48720194,48722242,48724290,48726338,48728386,48730434,48732435,48734455,48736503,48738512,48740560,48742608,48744656,48746704,48748752,48750800,48752848,48754896,48756944,48758947,48760995,48763043,48765091,48767139,48769187,48771235,48773283,48775331,48777379,48779427,48781475,48783523,48785571,48787619,48789667,48791715,48793763,48795811,48797859,48799907,48801955,48804003,48806051,48808099,48810147,48812195,48814243,48816291,48818339,48820387,48822435,48824442,48826490,48828538,48830586,48832634,48834682,48836730,48838778,48840826,48842874,48844922,48846970,48849018,48851066,48853114,48855162,48857210,48859258,48861306,48863354,48865402,48867450,48869498,48871546,48873594,48875642,48877690,48879738,48881786,48883834,48885882,48887930,48889978,48891984,48894032,48896080,48898128,48900176,48902224,48904272,48906320,48908330,48910378,48912426,48914474,48916522,48918570,48920618,48922666,48924714,48926715,48928763,48930811,48932809,48934857,48936905,48938902,48940950,48942998,48945046,48947094,48949142,48951190,48953238,48955286,48957334,48959382,48961430,48963478,48965484,48967532,48969580,48971628,48973676,48975724,48977772,48979820,48981868,48983916,48985964,48988012,48990060,48992108,48994112,48996160,48998208,49000256,49002304,49004352,49006400,49008448,49010496,49012544,49014592,49016598,49018646,49020694,49022742,49024790,49026838,49028886,49030934,49032982,49035030,49037078,49039083,49041084,49043132,49045180,49047180,49049228,49051238,49053286,49055334,49057336,49059384,49061389,49063437,49065441,49067489,49069490,49071538,49073586,49075634,49077682,49079730,49081778,49083826,49085874,49087922,49089970,49092018,49094066,49096114,49098162,49100210,49102258,49104306,49106354,49108402,49110450,49112498,49114546,49116594,49118642,49120690,49122690,49124738,49126786,49128834,49130882,49132930,49134978,49137026,49139074,49141122,49143170,49145218,49147266,49149314,49151362,49153410,49155458,49157514,49159562,49161610,49163658,49165706,49167754,49169802,49171850,49173898,49175901,49177949,49179997,49182045,49184093,49186141,49188189,49190192,49192240,49194288,49196336,49198384,49200432,49202480,49204482,49206492,49208540,49210545,49212593,49214641,49216689,49218737,49220759,49222807,49224855,49226903,49228951,49230999,49233002,49235050,49237098,49239146,49241194,49243242,49245290,49247338,49249386,49251434,49253482,49255530,49257578,49259626,49261674,49263722,49265723,49267771,49269819,49271867,49273915,49275963,49278011,49280059,49282107,49284155,49286203,49288251,49290299,49292347,49294395,49296404,49298452,49300500,49302494,49304542,49306590,49308586,49310634,49312682,49314730,49316778,49318826,49320874,49322922,49324970,49327018,49329066,49331114,49333162,49335210,49337258,49339306,49341354,49343402,49345458,49347515,49349568,49351624,49353653,49355617,49357366,49359414,49361462,49363510,49365558,49367606,49369654,49371702,49373750,49375798,49377846,49379894,49381942,49383990,49386038,49388086,49390134,49392182,49394237,49396285,49398333,49400388,49402443,49404473,49406346,49408288,49410336,49412384,49414432,49416480,49418528,49420576,49422624,49424672,49426720,49428768,49430816,49432864,49434912,49436960,49439008,49441056,49443104,49445152,49447208,49449264,49451303,49453187,49455235,49457283,49459331,49461379,49463427,49465475,49467523,49469571,49471619,49473667,49475715,49477763,49479811,49481859,49483907,49485955,49488003,49490051,49492099,49494155,49496204,49498109,49500066,49502114,49504162,49506210,49508258,49510306,49512319,49514326,49516379,49518407,49520455,49522503,49524551,49526599,49528647,49530695,49532743,49534752,49536800,49538848,49540896,49542944,49544992,49547040,49549088,49551136,49553143,49555191,49557239,49559287,49561335,49563383,49565386,49567434,49569482,49571530,49573578,49575626,49577621,49579669,49581717,49583765,49585813,49587861,49589909,49591957,49594005,49596053,49598101,49600149,49602197,49604245,49606293,49608341,49610389,49612437,49614485,49616533,49618581,49620629,49622677,49624627,49626675,49628723,49630771,49632819,49634867,49636915,49638963,49641011,49643059,49645107,49647155,49649203,49651251,49653299,49655347,49657395,49659452,49661500,49663548,49665596,49667644,49669692,49671741,49673723,49675771,49677819,49679867,49681915,49683963,49686011,49688059,49690107,49692155,49694203,49696251,49698299,49700347,49702395,49704443,49706491,49708547,49710595,49712643,49714691,49716747,49718789,49720668,49722716,49724764,49726812,49728860,49730908,49732956,49735004,49737052,49739100,49741148,49743196,49745244,49747292,49749340,49751388,49753436,49755484,49757532,49759580,49761628,49763682,49765734,49767709,49769624,49771672,49773675,49775723,49777728,49779733,49781781,49783784,49785832,49787880,49789928,49791976,49794024,49796043,49797998,49800046,49802094,49804142,49806190,49808238,49810270,49812250,49814298,49816346,49818394,49820442,49822490,49824538,49826586,49828634,49830682,49832685,49834733,49836781,49838829,49840877,49842925,49844973,49847021,49849069,49851117,49853119,49855126,49857174,49859118,49861166,49863167,49865178,49867126,49869174,49871222,49873270,49875318,49877366,49879414,49881462,49883510,49885558,49887606,49889654,49891702,49893750,49895798,49897846,49899894,49901942,49903944,49905992,49908040,49910088,49912136,49914184,49916232,49918280,49920328,49922376,49924424,49926472,49928520,49930568,49932616,49934664,49936712,49938720,49940768,49942816,49944864,49946912,49948960,49951008,49953056,49955104,49957152,49959200,49961248,49963296,49965344,49967392,49969440,49971445,49973493,49975541,49977589,49979637,49981685,49983733,49985781,49987829,49989877,49991925,49993973,49996021,49998069,50000117,50002165,50004168,50006216,50008264,50010312,50012360,50014367,50016415,50018463,50020511,50022559,50024566,50026614,50028662,50030710,50032758,50034806,50036854,50038902,50040950,50042998,50045046,50047094,50049142,50051190,50053238,50055286,50057334,50059382,50061430,50063444,50065492,50067540,50069588,50071636,50073684,50075732,50077780,50079828,50081876,50083924,50085972,50088020,50090068,50092116,50094164,50096212,50098260,50100308,50102356,50104365,50106413,50108461,50110509,50112557,50114605,50116611,50118659,50120707,50122755,50124803,50126851,50128852,50130900,50132948,50134996,50137044,50139092,50141140,50143188,50145236,50147284,50149332,50151380,50153428,50155476,50157524,50159572,50161620,50163629,50165677,50167725,50169773,50171821,50173869,50175917,50177965,50180013,50182061,50184109,50186157,50188205,50190253,50192301,50194349,50196397,50198445,50200448,50202496,50204544,50206592,50208640,50210688,50212736,50214784,50216791,50218839,50220887,50222935,50224983,50227031,50229079,50231127,50233175,50235182,50237230,50239278,50241326,50243374,50245422,50247470,50249518,50251566,50253614,50255662,50257710,50259758,50261806,50263854,50265902,50267950,50269951,50271999,50274047,50276095,50278143,50280191,50282239,50284287,50286335,50288383,50290431,50292479,50294527,50296575,50298623,50300671,50302681,50304729,50306736,50308737,50310785,50312833,50314862,50316900,50318948,50320996,50322976,50325024,50327025,50329027,50331036,50333045,50334918,50336929,50338977,50340980,50343028,50345076,50347124,50349172,50351220,50353268,50355316,50357364,50359385,50361350,50363171,50365134,50367182,50369230,50371278,50373326,50375374,50377422,50379470,50381518,50383566,50385614,50387471,50389519,50391567,50393615,50395663,50397711,50399759,50401807,50403855,50405903,50407910,50409958,50412006,50414054,50416102,50418150,50420198,50422246,50424294,50426342,50428350,50430398,50432446,50434494,50436542,50438549,50440597,50442645,50444693,50446741,50448748,50450796,50452844,50454892,50456940,50458994,50460882,50462930,50464978,50467026,50469074,50471126,50473161,50475010,50477064,50479112,50481160,50483208,50485256,50487304,50489352,50491400,50493448,50495496,50497544,50499592,50501640,50503688,50505736,50507784,50509832,50511880,50513928,50515976,50518024,50520072,50522120,50524168,50526216,50528264,50530215,50532242,50534290,50536346,50538394,50540442,50542490,50544538,50546586,50548634,50550682,50552730,50554778,50556826,50558874,50560922,50562970,50565018,50567066,50569114,50571162,50573210,50575258,50577306,50579354,50581402,50583450,50585498,50587499,50589547,50591595,50593643,50595691,50597739,50599787,50601835,50603883,50605871,50607919,50609967,50612015,50614063,50616111,50618159,50620207,50622255,50624250,50626298,50628346,50630394,50632442,50634490,50636538,50638586,50640582,50642630,50644678,50646726,50648774,50650822,50652870,50654918,50656915,50658963,50661011,50663059,50665107,50667155,50669203,50671208,50673256,50675304,50677352,50679359,50681407,50683455,50685503,50687551,50689553,50691601,50693656,50695704,50697715,50699712,50701594,50703642,50705690,50707738,50709744,50711744,50713727,50715706,50717700,50719748,50721796,50723787,50725835,50727883,50729880,50731928,50733928,50735976,50738024,50740072,50742120,50744113,50746161,50748209,50750174,50752157,50754205,50756219,50758272,50760320,50762370,50764323,50766371,50768377,50770425,50772473,50774521,50776518,50778566,50780571,50782619,50784623,50786557,50788433,50790486,50792534,50794582,50796573,50798621,50800669,50802717,50804765,50806813,50808861,50810814,50812789,50814837,50816885,50818933,50820981,50823029,50825035,50827027,50829075,50831123,50833130,50835120,50837168,50839216,50841264,50843312,50845360,50847408,50849399,50851447,50853495,50855543,50857480,50859528,50861576,50863624,50865385,50866884,50868046,50869257,50870925,50872335,50873592,50875550,50876872,50877829,50878986,50880086,50881484,50882900,50884366,50885846,50887306,50888451,50889238,50890136,50890493,50890518,50890931,50892584,50894306,50896201,50898045,50899669,50900880,50902168,50903371,50904506,50905430,50906452,50907500,50908740,50910302,50911978,50913552,50915241,50916937,50918595,50920229,50921956,50923655,50925357,50926962,50928616,50930319,50931984,50933632,50935314,50937004,50938696,50940396,50942047,50943734,50945388,50947026,50948663,50950357,50952016,50953720,50954882,50956122,50957657,50959203,50960839,50962735,50964631,50966484,50968434,50969974,50971157,50972430,50973558,50974787,50976835,50978883,50980931,50982979,50985027,50987075,50989123,50991171,50993219,50995267,50997315,50999363,51001411,51003459,51005507,51007555,51009603,51011651,51013699,51015747,51017795,51019843,51021891,51023939,51025987,51028035,51030083,51032131,51034179,51036227,51038275,51040323,51042371,51044367,51046415,51048463,51050511,51052559,51054607,51056655,51058703,51060751,51062799,51064847,51066895,51068943,51070991,51073039,51075087,51077135,51079183,51081231,51083279,51085327,51087375,51089423,51091471,51093519,51095567,51097615,51099663,51101711,51103759,51105807,51107855,51109903,51111951,51113999,51116047,51118095,51120090,51122138,51124186,51126234,51128282,51130330,51132378,51134426,51136474,51138522,51140570,51142618,51144666,51146714,51148762,51150810,51152858,51154906,51156954,51159002,51161050,51163098,51165146,51167194,51169242,51171290,51173338,51175395,51177443,51179491,51181539,51183587,51185635,51187631,51189679,51191727,51193775,51195823,51197871,51199919,51201967,51204015,51206063,51208111,51210159,51212207,51214255,51216303,51218351,51220399,51222447,51224495,51226543,51228591,51230639,51232687,51234735,51236783,51238831,51240879,51242874,51244922,51246970,51249018,51251066,51253114,51255162,51257210,51259258,51261306,51263354,51265402,51267450,51269498,51271546,51273594,51275642,51277690,51279738,51281786,51283834,51285882,51287930,51289978,51292026,51294082,51295825,51297873,51299921,51301969,51304017,51306065,51308113,51310161,51312209,51314257,51316305,51318353,51320401,51322449,51324497,51326545,51328593,51330649,51332697,51334745,51336793,51338841,51340896,51342947,51344977,51347026,51349012,51351060,51353108,51355156,51357204,51359252,51361300,51363348,51365396,51367444,51369492,51371540,51373588,51375636,51377684,51379732,51381780,51383828,51385876,51387924,51389972,51392020,51394068,51396116,51398171,51400173,51402221,51404269,51406317,51408365,51410413,51412461,51414509,51416557,51418605,51420653,51422701,51424749,51426797,51428845,51430850,51432898,51434946,51436994,51439042,51441090,51443138,51445186,51447234,51449282,51451330,51453378,51455373,51457421,51459469,51461517,51463565,51465613,51467661,51469709,51471757,51473813,51475861,51477858,51479791,51481725,51483662,51485710,51487712,51489760,51491756,51493758,51495759,51497807,51499728,51501776,51503771,51505764,51507692,51509630,51511678,51513726,51515725,51517773,51519775,51521823,51523871,51525863,51527862,51529910,51531910,51533900,51535896,51537944,51539940,51541898,51543946,51545934,51547982,51549974,51551971,51553976,51556013,51558008,51560008,51562055,51564036,51566015,51567997,51569928,51571976,51574024,51576072,51578120,51580168,51582216,51584264,51586312,51588360,51590297,51592345,51594393,51596441,51598489,51600537,51602585,51604633,51606681,51608673,51610671,51612719,51614767,51616815,51618863,51620911,51622890,51624891,51626939,51628987,51631035,51633083,51635131,51637179,51639180,51641228,51643276,51645324,51647372,51649309,51651357,51653405,51655453,51657501,51659549,51661542,51663590,51665638,51667686,51669734,51671666,51673714,51675762,51677697,51679745,51681793,51683841,51685889,51687937,51689985,51692033,51694081,51696129,51698151,51700202,51702202,51704203,51706196,51708244,51710292,51712340,51714388,51716436,51718436,51720434,51722296,51724295,51726343,51728346,51730394,51732442,51734490,51736538,51738586,51740634,51742682,51744730,51746778,51748826,51750874,51752922,51754970,51757018,51759066,51761114,51763162,51765210,51767258,51769306,51771305,51773353,51775401,51777449,51779497,51781545,51783593,51785641,51787689,51789737,51791785,51793833,51795881,51797929,51799977,51802025,51804073,51806121,51808169,51810217,51812212,51814260,51816308,51818356,51820404,51822452,51824500,51826548,51828596,51830644,51832692,51834740,51836788,51838836,51840884,51842932,51844929,51846977,51849025,51851073,51853121,51855169,51857217,51859265,51861313,51863361,51865409,51867457,51869505,51871553,51873601,51875649,51877697,51879745,51881793,51883841,51885836,51887832,51889880,51891928,51893976,51896024,51897991,51900039,51902087,51904084,51906132,51908180,51910114,51912162,51914167,51916169,51917648,51919696,51921726,51923771,51925774,51927822,51929817,51931865,51933857,51935852,51937853,51939852,51941793,51943841,51945889,51947881,51949929,51951923,51953976,51955998,51957996,51960044,51961981,51964029,51966077,51968072,51970120,51972118,51974166,51976163,51978211,51980210,51982258,51984259,51986307,51988355,51990348,51992396,51994392,51996440,51998488,52000536,52002584,52004632,52006630,52008678,52010680,52012728,52014733,52016781,52018785,52020833,52022881,52024874,52026871,52028874,52030922,52032916,52034919,52036922,52038970,52040904,52042952,52045000,52047048,52049042,52051090,52053138,52055138,52057186,52059234,52061236,52063284,52065332,52067333,52069381,52071429,52073426,52075474,52077477,52079525,52081573,52083567,52085615,52087613,52089661,52091662,52093710,52095712,52097760,52099808,52101856,52103849,52105897,52107896,52109944,52111943,52113991,52115990,52118038,52120041,52122089,52124082,52126086,52128025,52130029,52131930,52133978,52136026,52138029,52140077,52142125,52144122,52146170,52148166,52150214,52152213,52154261,52156268,52158316,52160364,52162362,52164410,52166413,52168461,52170509,52172510,52174558,52176606,52178600,52180595,52182398,52184446,52186494,52188542,52190590,52192588,52194636,52196684,52198732,52200780,52202778,52204718,52206766,52208769,52210701,52212749,52214752,52216753,52218801,52220849,52222897,52224900,52226948,52228996,52231044,52233092,52235140,52237141,52239066,52241114,52243162,52245210,52247258,52249306,52251354,52253402,52255403,52257451,52259499,52261547,52263595,52265434,52267482,52269530,52271521,52273569,52275567,52277504,52279552,52281600,52283598,52285646,52287646,52289694,52291695,52293743,52295750,52297682,52299684,52301732,52303731,52305735,52307783,52309778,52311778,52313776,52315824,52317821,52319706,52321754,52323735,52325783,52327782,52329779,52331827,52333875,52335923,52337924,52339972,52342020,52344068,52346116,52348115,52350097,52352145,52354193,52356241,52358289,52360337,52362385,52364433,52366481,52368529,52370577,52372625,52374673,52376721,52378769,52380817,52382865,52384913,52386961,52389009,52391010,52393058,52395106,52397154,52399202,52401250,52403298,52405346,52407394,52409442,52411490,52413538,52415586,52417634,52419682,52421730,52423778,52425826,52427825,52429873,52431921,52433969,52436017,52438065,52440113,52442161,52444209,52446257,52448305,52450353,52452401,52454449,52456497,52458545,52460593,52462641,52464635,52466683,52468731,52470779,52472827,52474875,52476923,52478971,52481019,52483067,52485115,52487163,52489211,52491259,52493307,52495355,52497347,52499395,52501443,52503491,52505539,52507587,52509635,52511683,52513731,52515779,52517827,52519875,52521923,52523971,52526019,52528067,52530115,52532163,52534211,52536210,52538258,52540306,52542354,52544402,52546403,52548451,52550499,52552547,52554595,52556643,52558636,52560684,52562732,52564780,52566777,52568825,52570841,52572842,52574890,52576885,52578888,52580936,52582935,52584934,52586982,52589030,52591078,52593126,52595174,52597222,52599217,52601265,52603313,52605361,52607409,52609457,52611505,52613553,52615601,52617649,52619697,52621702,52623750,52625798,52627846,52629894,52631942,52633990,52636038,52638086,52640134,52642127,52644175,52646223,52648271,52650319,52652367,52654415,52656463,52658511,52660506,52662554,52664602,52666650,52668698,52670746,52672794,52674842,52676890,52678938,52680986,52683034,52685048,52687096,52689144,52691192,52693240,52695288,52697336,52699384,52701432,52703480,52705528,52707576,52709624,52711620,52713668,52715716,52717764,52719812,52721860,52723908,52725956,52728004,52730052,52732100,52734148,52736145,52738193,52740241,52742289,52744337,52746385,52748433,52750481,52752529,52754577,52756625,52758673,52760670,52762718,52764715,52766763,52768811,52770859,52772907,52774955,52777003,52779051,52781099,52783147,52785195,52787243,52789291,52791339,52793343,52795391,52797439,52799487,52801535,52803583,52805631,52807679,52809727,52811775,52813823,52815871,52817919,52819967,52822015,52824063,52826111,52828159,52830207,52832255,52834303,52836351,52838399,52840392,52842440,52844488,52846536,52848584,52850632,52852680,52854728,52856776,52858824,52860872,52862920,52864968,52867016,52869064,52871047,52873095,52875091,52877139,52879187,52881182,52883230,52885223,52887222,52889270,52891272,52893320,52895256,52897252,52899308,52901356,52903350,52905398,52907400,52909448,52911496,52913491,52915539,52917538,52919586,52921634,52923631,52925679,52927727,52929716,52931764,52933760,52935808,52937856,52939853,52941850,52943898,52945899,52947947,52949949,52951997,52953996,52956044,52958092,52960092,52962140,52964188,52966183,52968183,52970231,52972279,52974327,52976375,52978423,52980471,52982519,52984567,52986615,52988663,52990711,52992759,52994807,52996855,52998903,53000951,53002999,53005047,53007095,53009143,53011191,53013239,53015287,53017335,53019383,53021431,53023432,53025480,53027528,53029576,53031624,53033672,53035720,53037768,53039816,53041864,53043912,53045960,53048008,53050056,53052104,53054152,53056200,53058248,53060296,53062344,53064397,53066414,53068462,53070510,53072558,53074606,53076654,53078702,53080750,53082798,53084846,53086894,53088942,53090990,53093038,53095086,53097134,53099182,53101230,53103278,53105278,53107326,53109374,53111422,53113470,53115518,53117566,53119614,53121662,53123710,53125758,53127806,53129854,53131902,53133950,53135998,53138046,53140094,53142142,53144190,53146238,53148286,53150334,53152382,53154430,53156478,53158483,53160531,53162579,53164627,53166675,53168723,53170771,53172819,53174867,53176915,53178963,53181011,53183059,53185107,53187155,53189203,53191251,53193299,53195347,53197395,53199443,53201491,53203539,53205587,53207635,53209683,53211731,53213734,53215642,53217438,53219486,53221534,53223529,53225577,53227574,53229622,53231619,53233667,53235664,53237712,53239710,53241712,53243760,53245798,53247723,53249771,53251819,53253814,53255818,53257795,53259843,53261841,53263848,53265844,53267892,53269888,53271936,53273839,53275887,53277887,53279935,53281983,53283982,53286030,53288078,53290071,53292119,53294117,53296165,53298165,53300213,53302215,53304263,53306246,53308294,53310290,53312338,53314339,53316387,53318380,53320378,53322372,53324308,53326306,53328303,53330351,53332350,53334398,53336395,53338443,53340436,53342434,53344482,53346475,53348473,53350472,53352520,53354515,53356514,53358562,53360567,53362615,53364612,53366660,53368708,53370703,53372751,53374753,53376801,53378804,53380852,53382793,53384790,53386838,53388831,53390833,53392871,53394911,53396907,53398906,53400904,53402952,53404956,53406955,53409003,53411005,53413010,53415058,53417059,53419107,53421107,53423110,53425158,53427206,53429203,53431251,53433299,53435295,53437343,53439391,53441396,53443444,53445446,53447494,53449542,53451545,53453593,53455641,53457639,53459687,53461687,53463682,53465730,53467778,53469826,53471874,53473922,53475970,53478018,53480066,53482114,53484115,53486163,53488211,53490259,53492307,53494355,53496357,53498357,53500405,53502453,53504419,53506467,53508515,53510513,53512561,53514609,53516480,53518217,53520265,53522313,53524361,53526409,53528457,53530505,53532553,53534601,53536649,53538697,53540694,53542695,53544743,53546791,53548839,53550887,53552221,53554213,53556261,53558309,53560357,53562405,53564405,53566410,53568407,53570455,53572503,53574505,53576553,53578601,53580649,53582697,53584572,53586620,53588668,53590675,53592723,53594771,53596770,53598818,53600820,53602868,53604870,53606918,53608966,53610967,53613023,53615071,53617066,53619114,53621116,53623115,53625163,53627211,53629259,53631259,53633266,53635314,53637362,53639363,53641295,53643224,53645272,53647204,53649207,53651202,53653133,53655127,53657175,53659223,53661271,53663269,53665317,53667365,53669413,53671461,53673454,53675502,53677550,53679598,53681646,53683694,53685742,53687742,53689790,53691790,53693838,53695818,53697866,53699914,53701962,53704010,53706058,53708059,53710107,53712155,53714203,53716251,53718299,53720347,53722395,53724443,53726491,53728547,53730595,53732590,53734638,53736686,53738734,53740782,53742784,53744832,53746880,53748928,53750976,53753024,53755072,53757120,53759168,53761216,53763264,53765312,53767360,53769408,53771456,53773504,53775552,53777600,53779648,53781696,53783744,53785792,53787840,53789888,53791936,53793984,53795981,53798029,53800077,53802077,53804125,53806173,53808221,53810269,53812317,53814365,53816413,53818461,53820509,53822557,53824605,53826653,53828701,53830749,53832744,53834792,53836840,53838888,53840936,53842932,53844980,53846978,53849026,53851074,53853122,53855119,53857167,53859215,53861263,53863311,53865359,53867407,53869455,53871503,53873551,53875599,53877647,53879695,53881743,53883800,53885848,53887896,53889895,53891943,53893991,53896039,53898087,53900135,53902183,53904231,53906279,53908327,53910375,53912423,53914471,53916528,53918576,53920624,53922542,53924590,53926638,53928686,53930734,53932727,53934775,53936779,53938827,53940884,53942772,53944412,53946460,53948457,53950505,53952553,53954601,53956649,53958697,53960745,53962793,53964841,53966889,53968937,53970985,53973033,53975081,53977129,53979177,53981225,53983273,53985321,53987369,53989417,53991465,53993513,53995511,53997559,53999607,54001605,54003660,54005708,54007756,54009804,54011852,54013832,54015880,54017928,54019911,54021965,54024013,54026061,54028109,54030157,54032205,54034054,54036102,54038150,54040135,54042183,54044179,54046227,54048275,54050323,54052371,54054419,54056467,54058515,54060563,54062611,54064659,54066707,54068755,54070803,54072851,54074899,54076947,54078995,54081043,54083091,54085090,54087138,54089186,54091234,54093231,54095279,54097280,54099328,54101376,54103376,54105424,54107472,54109520,54111425,54113411,54115459,54117325,54119373,54121421,54123310,54125076,54127124,54129172,54131220,54133275,54135331,54137325,54139373,54141421,54143469,54145517,54147514,54149562,54151610,54153658,54155706,54157754,54159802,54161850,54163852,54165900,54167948,54169996,54172044,54174092,54176140,54178188,54180238,54182227,54184275,54186323,54188315,54190363,54192364,54194394,54196441,54198489,54200537,54202481,54204529,54206577,54208625,54210673,54212721,54214769,54216765,54218813,54220730,54222778,54224826,54226813,54228861,54230909,54232903,54234951,54236946,54238994,54240995,54243043,54245091,54247139,54249187,54251235,54253283,54255282,54257330,54259378,54261426,54263474,54265522,54267570,54269618,54271666,54273714,54275762,54277757,54279805,54281751,54283799,54285847,54287895,54289943,54291991,54294039,54296087,54298135,54300138,54302186,54304234,54306282,54308330,54310378,54312426,54314428,54316476,54318474,54320522,54322570,54324618,54326548,54328541,54330589,54332548,54334361,54336409,54338457,54340505,54342553,54344546,54346594,54348573,54350621,54352669,54354650,54356698,54358691,54360734,54362491,54364544,54366366,54368414,54370462,54372510,54374558,54376517,54378565,54380613,54382661,54384709,54386757,54388813,54390861,54392809,54394857,54396905,54398953,54401001,54403049,54405097,54407145,54409193,54411241,54413289,54415288,54417336,54419384,54421432,54423480,54425528,54427576,54429624,54431672,54433720,54435768,54437816,54439864,54441912,54443960,54446008,54448002,54450050,54452098,54454146,54456194,54458242,54460290,54462338,54464386,54466434,54468482,54470530,54472514,54474414,54476462,54478510,54480558,54482606,54484654,54486702,54488750,54490798,54492846,54494894,54496942,54498990,54501038,54503086,54505134,54507182,54509179,54511227,54513275,54515323,54517371,54519419,54521467,54523470,54525518,54527566,54529614,54531607,54533655,54535649,54537697,54539745,54541793,54543831,54545879,54547873,54549921,54551969,54554017,54556065,54558113,54560161,54562209,54564257,54566305,54568353,54570401,54572449,54574497,54576545,54578593,54580641,54582644,54584692,54586740,54588788,54590836,54592884,54594932,54596980,54599028,54601076,54603124,54605172,54607220,54609268,54611316,54613364,54615363,54617411,54619459,54621507,54623555,54625603,54627651,54629699,54631747,54633737,54635785,54637833,54639881,54641929,54643977,54646025,54648073,54650075,54652123,54654171,54656219,54658267,54660315,54662363,54664411,54666414,54668462,54670510,54672558,54674606,54676654,54678702,54680709,54682757,54684805,54686853,54688901,54690949,54692997,54695045,54697049,54699097,54701145,54703144,54705192,54707240,54709243,54711248,54713190,54715127,54716966,54719014,54721062,54723110,54725158,54727206,54729004,54731052,54733100,54735148,54737196,54739210,54741081,54743129,54745177,54747225,54749273,54751174,54753222,54755270,54757318,54759308,54761356,54763404,54765452,54767389,54769437,54771485,54773533,54775581,54777629,54779677,54781725,54783773,54785768,54787816,54789864,54791912,54793960,54796008,54798056,54800104,54802149,54804152,54806190,54808238,54810286,54812334,54814382,54816430,54818478,54820526,54822574,54824622,54826670,54828669,54830717,54832765,54834813,54836861,54838909,54840957,54843005,54845053,54847101,54849149,54851197,54853245,54855242,54857290,54859338,54861386,54863434,54865482,54867530,54869578,54871626,54873674,54875722,54877770,54879769,54881817,54883865,54885913,54887961,54890009,54892057,54894105,54896153,54898201,54900249,54902297,54904292,54906340,54908388,54910436,54912484,54914532,54916580,54918628,54920676,54922724,54924772,54926820,54928820,54930868,54932916,54934964,54936400,54937528,54938679,54939879,54940857,54941793,54943325,54945203,54946981,54948712,54950589,54952295,54953560,54954840,54956628,54958676,54960724,54962545,54962579,54962613,54962647,54962681,54962715,54962749,54962783,54962817,54963566,54964490,54965441,54966532,54967683,54968712,54969600,54970374,54971258,54972228,54973254,54974065,54975117,54976188,54977068,54978098,54979196,54980214,54981220,54982250,54983062,54983916,54984776,54985669,54986736,54987709,54988645,54989497,54990397,54991239,54992232,54993088,54994049,54995014,54995763,54996649,54997586,54998709,54999755,55000772,55001851,55003230,55004472,55005766,55006937,55008322,55009682,55011028,55012414,55013745,55015134,55016421,55017271,55018338,55019290,55020231,55021185,55022219,55023239,55024140,55025415,55026272,55027398,55028561,55029666,55030828,55032000,55033112,55034229,55035406,55036730,55038036,55039447,55040936,55042461,55043577,55044474,55045373,55046900,55048772,55050655,55052550,55054522,55056304,55058194,55060242,55062290,55064338,55066386,55068434,55070482,55072530,55074578,55076626,55078674,55080722,55082770,55084818,55086866,55088914,55090962,55093010,55095058,55097112,55099086,55101134,55103182,55105230,55107278,55109326,55111374,55113422,55115470,55117518,55119566,55121614,55123662,55125710,55127758,55129806,55131854,55133902,55135950,55137932,55139980,55142028,55144076,55146124,55148172,55150220,55152268,55154316,55156364,55158412,55160460,55162508,55164556,55166604,55168652,55170700,55172748,55174796,55176844,55178819,55180867,55182915,55184963,55187011,55189059,55191107,55193155,55195203,55197251,55199299,55201347,55203395,55205443,55207491,55209539,55211587,55213635,55215683,55217662,55219710,55221758,55223806,55225854,55227902,55229950,55231998,55234046,55236094,55238142,55240190,55242238,55244286,55246334,55248382,55250430,55252478,55254526,55256574,55258552,55260600,55262648,55264696,55266744,55268792,55270840,55272888,55274936,55276984,55279032,55281080,55283128,55285176,55287224,55289272,55291320,55293368,55295416,55297464,55299437,55301485,55303533,55305581,55307629,55309677,55311725,55313773,55315821,55317869,55319917,55321965,55324013,55326061,55328109,55330157,55332205,55334253,55336301,55338278,55340326,55342374,55344422,55346470,55348518,55350566,55352614,55354662,55356710,55358758,55360806,55362854,55364902,55366950,55368998,55371046,55373094,55375142,55377190,55379164,55381212,55383260,55385241,55387289,55389269,55391317,55392809,55394141,55395689,55397253,55398427,55399749,55401301,55402669],\"sizes\":[1547,1268,1399,1666,2048,2048,2029,1710,1937,1796,1766,1711,974,711,761,964,947,974,904,956,880,990,920,913,887,849,917,941,709,914,844,1002,1079,1077,882,806,1343,1274,1267,1467,563,533,608,624,591,573,1121,998,977,1061,512,883,824,819,1053,1039,936,1200,712,548,555,712,598,675,735,1240,466,760,636,672,746,628,827,1021,988,1171,890,556,599,512,566,598,722,663,896,713,798,645,920,1139,835,906,861,1011,1009,721,1054,672,956,862,700,988,935,911,461,488,798,818,903,436,668,982,624,690,555,571,697,903,926,871,616,685,710,1260,1449,45,44,148,229,276,373,462,575,663,884,1022,1090,1351,1409,1380,1447,1442,1347,1416,1398,1462,1593,1630,1642,1582,1626,1496,1574,1502,1472,1532,1430,1397,1524,1563,1739,1705,1680,1637,1630,1647,1672,1552,1406,1423,1470,1370,1192,1099,1123,1060,1108,1076,1052,1056,1016,1106,2048,1417,1411,1362,1329,1281,1298,1320,1279,1351,1296,1337,1236,1237,1332,1133,991,1007,983,944,862,797,884,1098,1124,1170,1345,1476,1711,1583,1547,1613,1533,1418,1409,1072,1198,1335,1370,1532,1416,1273,1009,984,1114,1182,1212,1228,1256,1252,1217,1274,1299,1370,1277,1344,1317,1369,2027,1524,1342,1083,826,1360,1200,1101,915,933,897,890,869,1124,1497,1543,1373,1405,1505,1307,1358,1446,1533,1402,1450,1397,1483,1443,1204,1204,1158,1311,1500,1652,1707,1675,1453,1433,1464,1567,1514,1414,1477,1410,1310,1341,1149,1052,795,931,1174,1292,1335,1408,1370,1377,1410,1338,1834,907,48,49,87,59,96,48,174,275,381,454,607,632,614,671,759,781,1286,1454,1519,1437,1485,1704,1567,1562,1658,1611,1689,1656,1704,1802,1669,1602,1622,1691,1660,1446,1507,1441,1283,885,849,744,630,587,571,574,576,520,346,342,219,107,82,45,45,48,925,1414,47,45,46,48,49,47,45,46,48,49,112,346,1193,1371,1377,1426,1417,1368,1171,1069,1060,793,600,905,847,759,824,871,974,969,856,800,753,752,976,843,811,791,792,740,746,694,611,368,132,45,45,45,48,49,45,45,45,48,49,45,417,1908,46,48,49,47,45,45,794,1076,1069,1092,1074,1033,1064,1088,983,1104,1141,1216,1446,1647,1695,1769,1612,1455,1440,1397,1330,1078,1216,1368,1253,1261,1248,1374,1529,1606,1442,1556,1685,1550,1434,1568,1564,1515,1104,980,936,1138,1255,1009,683,42,49,45,45,45,42,1952,369,45,85,190,248,352,426,543,632,773,1047,1130,1263,1493,1387,1463,1609,1564,1623,1524,1664,1717,1759,1785,1771,1747,1703,1662,1654,1602,1514,1581,1531,1489,1509,1775,1790,1720,1687,1672,1645,1657,1608,1449,1372,1515,1503,1315,1117,1120,1107,1081,1064,1059,1025,1019,930,1652,2048,1668,988,990,838,896,1006,979,890,958,867,925,817,887,1057,1290,1361,1264,1294,1384,1397,1412,1385,1452,1428,1345,1182,1008,1024,918,1140,1139,1166,1038,1176,968,1072,1265,1241,1241,1290,1207,1122,1201,1148,1155,1307,1282,1341,1286,1271,1294,1291,1282,1276,1305,1324,1419,1457,1308,1248,1269,1355,1335,1365,1391,1439,1460,1420,1410,1326,1301,1358,1384,1373,1376,1399,1398,1306,1235,1161,1203,1203,1263,1279,1157,1118,1228,1053,1088,937,1475,1427,1268,1255,1294,1366,1353,1379,1447,1459,1412,1429,1341,1270,1363,1387,1382,1363,1377,1348,1374,1249,1203,1203,1182,1266,1260,1171,1123,1252,1108,1040,1014,1126,1890,923,1019,873,884,974,978,914,916,940,917,818,893,1000,1280,1295,1266,1247,1403,1379,1457,1415,1497,1429,1406,1229,1005,1022,920,1085,1075,1211,1048,1162,1030,983,1295,1242,1200,1298,1208,1114,1191,1168,1131,1253,1264,1319,1303,1246,1260,1307,1292,1296,1304,1270,1437,1464,2048,430,74,1202,1280,1091,875,1199,1172,288,72,1791,1457,1084,990,1022,1017,1226,1254,1356,1204,1228,1380,1269,1418,1416,1392,1298,1280,1483,1665,1529,1443,1443,1398,1445,1479,1434,1504,1520,1503,1397,1409,1518,1488,1547,1660,1695,1641,1517,1519,1543,1567,1582,1464,1485,1427,1494,1414,1352,1188,1204,1222,1186,1288,1324,1187,1154,1165,1646,1708,1142,1107,910,1037,1113,1212,1140,1098,988,1032,964,971,1126,1215,1246,1214,1040,1125,1248,1458,1243,1393,1195,1168,1500,1533,1613,1654,1656,1638,1578,1532,1591,1637,1692,1751,1663,1639,1486,1442,1330,1396,1390,1369,1500,1617,1592,1524,1512,1423,1428,1410,1412,1377,1330,1363,1592,1806,715,725,888,925,991,1064,1022,1182,1176,1185,1219,1249,1187,1360,1400,1337,1472,1457,1455,1540,1479,1494,1569,1713,1658,1570,1642,1670,1747,1741,1773,1854,1752,1599,1623,1652,1630,1702,1740,1718,1754,1719,1669,1653,1592,1776,1802,1748,1744,1677,1732,1723,1544,1251,1163,902,719,1264,1100,1649,1596,1581,1600,1463,45,45,48,49,45,100,921,1118,1098,1083,1026,1045,1173,1047,1008,1105,1115,1258,1459,1700,1675,1794,1564,1423,1513,1358,1275,1028,1267,1356,1250,1238,1262,1410,1545,1563,1442,1627,1681,1486,1502,1551,1608,1432,1038,990,983,1168,1209,983,494,45,45,49,45,45,369,1950,48,49,45,45,45,48,49,45,45,45,84,290,895,1450,1289,1463,1405,1401,1256,1041,1110,851,638,770,888,772,831,831,947,966,897,827,742,726,946,929,804,793,812,829,748,675,547,465,181,48,49,45,45,45,48,49,45,38,45,48,49,1900,1107,938,867,1112,1084,1005,986,1019,1038,961,876,1017,1029,1106,950,1184,1364,1379,1444,1520,1483,1601,1487,1300,1321,1320,1406,1335,1268,1396,1184,1158,989,1080,1241,1442,1482,1453,1359,1215,1153,1199,1125,1392,1174,988,1088,1207,1028,915,873,968,1034,1028,1042,1007,1011,1639,918,42,49,45,45,45,237,605,876,944,1178,1519,1702,1715,1798,1729,1721,1728,1755,1756,1836,1851,1777,1726,1436,1357,1346,1413,1775,1836,1837,1901,1903,1940,1928,1877,1846,1904,1875,1803,1769,1749,1662,1820,1896,1621,1430,1387,1216,643,155,48,49,45,41,45,48,497,735,1206,1226,1229,714,732,1130,1126,2056,1424,1471,1450,1518,1521,1527,1534,1501,1501,1544,1649,1820,1874,1970,1986,2002,2001,2007,2041,1995,1948,1869,1756,1798,1890,1939,1891,2019,2026,1871,1830,1854,1777,1692,1740,1745,1836,1862,1922,1950,2011,2012,2009,1967,1803,1596,1506,1508,1489,1512,1526,1504,1480,1470,1433,1459,1436,2022,1474,1308,1262,1272,1305,1284,1352,1311,1264,1273,1325,1160,1337,1399,1406,1385,1400,1457,1420,1462,1520,1523,1480,1553,1539,1551,1675,1605,1618,1571,1597,1546,1554,1497,1568,1701,1692,1609,1703,1494,1358,1394,1408,1231,1211,1269,1308,1236,1142,1171,1246,1172,1241,1191,1249,1280,1254,1860,1496,1041,1150,1126,1091,979,1047,1086,1055,1156,1126,1129,1198,1293,1359,1474,1502,1574,1588,1532,1632,1572,1414,1406,1595,1596,1528,1547,1426,1423,1377,1308,1305,1370,1218,1406,1430,1504,1513,1499,1508,1339,1221,1185,996,1065,1024,1154,1168,1175,970,881,1035,993,895,940,1024,1520,1892,1546,1579,1555,1617,1611,1653,1657,1532,1593,1623,1685,1519,1448,1584,1583,1570,1700,1694,1568,1612,1605,1454,1470,1432,1612,1577,1454,1489,1567,1551,1543,1521,1559,1598,1603,1662,1658,1697,1548,1516,1683,1638,1534,1437,1194,1480,1545,1516,1452,1511,1601,1654,1705,1717,1545,1530,1702,2047,998,975,933,1096,1107,1127,1093,1060,1042,1065,1166,1176,1129,1114,1088,1174,1120,1182,1197,1215,1260,1312,1316,1239,1119,1147,1061,1048,986,992,1061,1069,916,961,913,961,931,1038,1066,993,1056,1023,966,1002,937,1018,996,974,1059,1098,1160,1118,1066,1060,946,914,866,1999,1462,1337,1261,1283,1302,1273,1365,1300,1259,1288,1325,1122,1230,1307,1327,1302,1314,1335,1330,1430,1525,1659,1619,1532,1330,1318,1480,1574,1629,1729,1659,1521,1361,1325,1409,1472,1509,1490,1497,1447,1356,1376,1403,1223,1213,1266,1292,1239,1157,1177,1249,1157,1240,1198,1268,1290,1230,1868,1775,1568,1596,1598,1607,1587,1515,1627,1605,1552,1578,1659,1770,1769,1792,1789,1617,1637,1598,1765,1806,1868,1785,1788,1896,1859,1800,1896,1764,1810,1709,1758,1732,1752,1675,1695,1633,1793,1911,1715,1775,1283,1350,1356,1260,1464,1505,1482,1500,1525,1538,1491,1543,1528,1454,1435,1534,1788,1614,795,788,856,931,821,691,880,913,800,841,775,911,1011,1190,1268,1215,1348,1233,1380,1534,1564,1517,1610,1638,1628,1588,1624,1583,1630,1618,1534,1465,1445,1534,1542,1562,1492,1441,1489,1410,1330,1300,1158,1184,1198,1216,1036,1022,1020,1080,995,1021,981,967,1052,756,983,2044,1677,1840,1882,1850,1807,1828,1825,1835,1755,1683,1558,1493,1402,2053,1691,1853,1883,1890,1858,1869,1924,1905,1726,1718,1579,1539,1462,1950,1856,1839,1886,1890,1929,1820,1789,1648,1508,1448,1554,1620,1622,1873,1711,1841,1969,1633,1993,1976,1661,2008,1883,1369,1401,1633,1470,1532,1999,1495,1328,1681,1546,1488,1760,1828,1378,1463,1638,1530,1513,2053,1707,1656,1672,1733,1789,1741,1729,1786,1777,1835,1813,1890,1769,1747,1804,1785,1811,1822,1820,1776,1884,1796,1768,1784,1772,1738,1770,1679,1773,1806,1737,1755,1790,1830,1767,1763,1743,1705,1732,1707,1732,1732,1721,1699,1616,1845,1862,1897,1833,1828,1821,1882,1874,1843,1783,1682,1571,1973,2026,1930,1911,1920,1964,1901,1908,1918,1920,1874,1857,1928,1877,1856,1777,1746,1771,1800,1839,1765,1852,1776,1884,1824,1813,1767,1771,1705,1616,1566,1570,1683,1784,1797,1730,1758,1668,1689,1751,1691,1751,1799,1795,1796,1716,1883,1892,1920,1910,1817,1817,1875,1916,1905,1924,1910,1899,1966,2048,1947,1954,2023,2003,1993,2011,1980,1952,1929,1920,1986,2001,1957,1928,1918,1981,1960,1968,1940,2039,2016,2010,1890,1930,1898,1924,1890,1726,1808,1766,1849,1911,1941,1969,1964,1980,1968,1959,1906,1978,1991,1882,1833,1839,1876,1854,1834,1802,1776,1828,1858,1788,1735,1644,1559,1439,1501,692,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2055,2048,2048,2056,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2022,1448,1389,1412,1537,1541,1504,1419,1480,1246,1214,1403,1509,1281,1193,1390,1461,1531,1440,1458,1392,1419,1360,1516,1476,1462,1497,1492,1502,1451,1565,1518,1539,1529,1481,1610,1497,1550,1519,1460,1513,1576,1563,1368,1468,1363,1655,1639,1639,1650,1571,1554,1661,1682,1539,1556,1642,1499,2048,1199,1048,1209,1089,1040,1007,1073,1110,1069,1157,1141,1211,1205,1347,1358,1506,1524,1593,1543,1523,1616,1499,1404,1515,1609,1530,1532,1523,1381,1460,1331,1337,1332,1317,1285,1447,1422,1552,1529,1484,1462,1285,1240,1093,1011,1029,1032,1162,1155,1143,905,962,1031,939,883,1009,1051,1812,1454,1076,1115,1097,1095,988,1058,1088,1086,1113,1171,1326,1239,1268,1611,1519,1429,1576,1481,1463,1614,1599,1457,1545,1578,1623,1421,1500,1468,1639,1617,1752,1820,1895,1774,1635,1804,1748,1654,1562,1622,1300,1339,1248,912,1105,1090,1175,1163,1142,993,886,1036,966,907,966,1039,1572,1885,1492,1520,1519,1555,1531,1460,1511,1531,1499,1546,1574,1698,1737,1788,1758,1695,1529,1643,1685,1740,1886,1710,1705,1858,1754,1722,1936,1611,1715,1778,1712,1694,1759,1553,1572,1660,1674,1869,1738,1766,1242,1361,1375,1220,1381,1429,1486,1451,1446,1449,1471,1491,1481,1397,1396,1421,1621,2038,1666,1692,1666,1752,1769,1746,1736,1794,1802,1820,1815,1907,1743,1726,1789,1783,1843,1831,1812,1830,1846,1796,1765,1768,1757,1764,1753,1682,1803,1759,1738,1747,1813,1810,1742,1767,1759,1705,1719,1706,1737,1740,1720,1683,1664,1863,1878,1860,1857,1809,1820,1904,1857,1804,1738,1654,1572,664,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1335,1329,1326,1463,1409,1533,1528,1406,1447,1473,1486,1446,1423,1405,1355,1170,702,993,1210,1480,1627,1749,1835,1842,1877,1875,1785,1738,1417,1775,1752,1838,1863,1841,1817,1814,1771,1756,1485,1266,971,1122,1350,1249,1196,1406,1196,1131,1221,1322,1468,1446,1477,1477,1396,1372,1404,1926,1661,1441,1501,1500,1537,1442,1525,1486,1437,1490,1587,1634,1419,1544,1685,1679,1686,1796,1764,1655,1740,1583,1572,1561,1522,1595,1620,1585,1623,1615,1597,1588,1550,1580,1603,1676,1584,1653,1569,1538,1593,1666,1620,1592,1400,1166,1443,1509,1455,1363,1449,1520,1578,1605,1510,1389,1473,1797,1791,1414,1379,1373,1441,1344,1401,1494,1365,1395,1441,1512,1237,1324,1548,1528,1509,1636,1635,1615,1618,1532,1470,1453,1529,1533,1561,1429,1479,1532,1580,1467,1480,1527,1528,1557,1570,1610,1621,1510,1517,1563,1506,1395,1297,922,1167,1362,1363,1268,1374,1438,1461,1537,1504,1358,1331,1529,2027,1582,1664,1669,1739,1759,1713,1777,1657,1688,1738,1830,1676,1444,1638,1658,1631,1718,1811,1678,1636,1681,1554,1550,1506,1664,1683,1511,1550,1563,1637,1659,1627,1643,1706,1666,1742,1743,1792,1648,1596,1674,1664,1560,1523,1267,1504,1732,1719,1580,1615,1704,1767,1817,1836,1647,1610,1679,2057,690,594,650,663,643,683,819,985,1036,1046,857,1164,1470,1540,1613,1573,1120,1576,1530,1696,1763,1663,1544,1735,1634,1705,1714,1625,1530,1811,1685,1732,1742,1717,1634,1671,1698,1718,1792,1750,1511,1414,1396,1235,1186,1376,1376,1253,1218,1299,1339,1455,1549,1548,1525,1550,1625,1069,1796,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2016,2019,2047,2056,2055,2048,2050,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2057,2055,2041,2009,2047,2050,2057,2048,2048,2054,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2056,2041,2008,2038,2049,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2047,2010,2023,2051,2048,2057,2048,2051,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1857,1236,1394,1313,1116,992,1027,1167,1110,1067,1245,1101,1157,1099,1129,1185,997,1102,1160,1210,1176,1198,1248,905,814,908,976,922,879,783,966,836,857,807,335,337,345,1198,1222,1472,1463,1467,1449,760,1103,1031,893,876,827,1438,1214,1408,1308,1145,1112,947,1176,1106,1144,1105,1157,1275,1047,1094,1114,1146,1100,1175,1102,1106,1149,1307,931,908,942,981,905,828,843,919,860,994,843,336,338,341,1230,1237,1481,1439,1434,1337,975,1109,847,897,876,888,1986,485,48,49,61,74,126,153,203,169,186,255,243,382,815,1005,986,1024,1303,1567,1601,1603,1652,1669,1755,1773,1720,1536,1562,1602,1666,1655,1709,1788,1751,1585,1673,1579,1629,1636,1441,902,976,895,733,408,234,160,127,110,160,152,94,75,45,45,45,48,404,806,1567,960,143,208,250,213,258,421,411,384,388,300,284,482,788,945,868,1056,1100,1492,1702,1722,1814,1748,1852,1841,1826,1647,1683,1711,1770,1858,1840,1897,1852,1734,1853,1904,1874,1829,1826,970,979,903,841,648,384,326,360,362,401,367,338,174,160,207,253,150,990,1864,1258,1384,1232,1210,1401,1400,1331,1404,1329,1411,1474,1498,1407,1440,1433,1502,1503,1384,1540,1418,1350,1377,1405,1380,1161,1144,1322,1374,1314,1358,1375,1292,1261,1421,1371,1290,1319,1433,1537,1395,1508,1401,1363,1360,1392,1424,1483,1364,1347,1409,1220,1329,1418,1280,1164,1191,1388,899,1015,755,2008,537,49,45,45,805,946,1098,1120,1375,1583,1280,1644,1838,1790,1640,1701,1693,772,1236,1550,1750,1796,1806,1784,1813,1812,1716,1589,1678,1682,1914,1820,1885,1831,1812,1767,1905,1860,1864,1885,1744,1613,1584,1555,1763,1362,1263,1328,1229,1242,1076,1010,840,375,45,44,49,636,760,952,793,739,1050,1347,1323,1228,983,661,978,792,1044,839,729,681,727,691,716,725,927,873,904,930,877,957,869,822,595,941,995,900,899,954,491,730,777,742,719,743,901,807,966,639,705,832,829,801,852,833,922,896,850,829,829,839,852,1048,778,867,1779,1472,1515,1439,1682,1598,1523,1613,1534,1526,1507,1669,1628,1535,1573,1573,1337,1504,1636,1612,1555,1503,1485,1500,1728,1701,1490,1501,1360,1129,1193,1309,1381,1148,1100,1196,1137,1094,1234,1244,1310,1141,831,832,685,1848,1482,1431,1469,1406,1290,1346,1246,1198,1337,1346,1259,1148,925,916,650,801,1875,1488,1517,1451,1458,1359,1310,1223,1187,1322,1326,1261,1005,803,744,635,1699,1522,1499,1402,1473,1377,1252,1409,1172,1284,1386,1313,1212,1112,925,902,675,855,1881,1456,1488,1406,1454,1515,1488,1435,1222,1012,822,766,847,879,876,1463,1606,1516,1413,1447,1341,1240,1390,1173,1268,1357,1313,1211,1043,939,837,657,1355,1805,1493,1415,1221,1164,1425,1466,1380,992,956,1290,1734,1540,1576,1415,1265,1098,1489,1452,1266,1052,1245,1321,1295,1056,938,1814,1718,1829,1822,1719,1691,1316,1796,1924,1850,1687,1872,1913,1478,1162,1306,1360,1390,1320,1966,1487,1290,1315,1373,1416,1409,1589,924,889,1032,1844,1149,818,890,1582,1557,1261,1622,1680,1511,1686,1747,1865,1239,1478,1736,1532,1599,1841,1816,1807,1196,1554,1746,1543,1703,1892,1865,1644,1243,1587,1723,1593,1780,1883,1893,1469,1297,1636,1742,1572,1677,1896,1900,1526,1358,1592,1727,1516,1653,1855,1912,1429,1318,1633,1677,1507,1704,1793,1842,1236,1485,1716,1547,1585,1748,1737,1637,1227,1576,1703,1506,1667,1794,1904,1308,1351,1694,1597,1539,1774,1844,1627,1632,1530,1647,1553,1526,1659,1593,1577,1522,1608,1466,1599,1627,1485,1600,1427,1478,1495,1302,1636,1496,1226,1111,1087,1332,1330,1122,1253,1618,1545,1345,1335,1328,1390,1491,1219,1365,1149,1319,1836,299,48,49,45,38,66,338,611,741,836,915,1014,951,1052,926,1099,1151,1222,1343,1202,1257,1369,1163,1186,1181,980,1226,1085,1161,1191,1026,934,957,838,646,704,703,435,45,44,45,48,49,861,1177,733,757,1075,1202,1357,1022,968,1048,976,809,668,775,985,969,1055,1190,1143,1162,1241,1265,1168,1350,1367,1316,1364,1321,1340,1244,941,858,640,519,505,720,895,823,794,864,984,1051,858,960,1060,1030,991,1140,750,1092,1328,719,1331,1011,728,1178,1402,670,794,1118,1847,1161,1266,1385,1393,1489,1463,1610,1718,1790,1812,1805,1819,1712,1762,1652,1661,1772,1646,1655,1609,1642,1629,1456,1628,1699,1627,1561,1566,1577,1581,1446,1244,1069,1308,1633,1528,1602,1534,1496,1347,1389,1450,1861,972,703,1037,1122,1122,1253,1357,1361,1267,1488,1468,1313,847,866,1064,1320,1429,1262,1213,1255,1156,1202,1146,1211,1323,1233,1275,1401,1312,1230,1340,1392,1314,1306,1224,1263,1198,1040,979,1088,1159,1268,1180,1477,552,1101,958,1150,922,1306,1934,866,983,849,1872,828,889,746,1072,1092,1036,948,1038,1210,1318,1505,1648,1627,1653,1518,1324,1426,1504,1651,1623,1657,1617,1633,1594,1582,1463,1518,1557,1817,1827,1856,1830,1754,1796,1507,1404,1331,1380,1321,1269,1076,632,878,1165,1171,1095,1090,1164,884,737,1074,998,720,941,1203,1320,1260,672,609,622,685,658,676,640,879,847,1086,1019,917,1092,811,824,823,801,817,1060,914,893,882,955,808,835,983,799,1021,948,914,1027,737,623,653,726,707,697,964,882,787,939,859,836,879,822,927,784,1668,1811,1748,1810,2054,1898,1828,1730,1740,1714,1738,1750,1913,1894,2057,324,49,48,45,46,48,49,47,45,45,48,49,233,764,1098,1422,1418,1533,1561,1421,1517,1554,1629,1675,1717,1753,1747,1658,1726,1651,1634,1633,1650,1589,1596,1393,1325,1272,1113,1118,825,458,330,198,133,48,49,45,45,45,48,49,45,45,45,42,49,1503,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2045,1363,1213,1209,1242,1252,1117,1199,1119,1221,1244,1225,1256,1194,1373,1260,1487,1694,1553,1530,1351,1368,1541,1586,1451,1360,1614,1632,1552,1496,1446,1592,1417,1342,1375,1465,1447,1459,1259,1216,1330,1254,1267,1160,1054,836,1064,1061,1108,951,802,698,786,818,623,608,632,587,1962,1612,1116,1042,1166,1018,1197,1324,1293,1151,1209,1202,1270,1312,1263,1605,1527,1776,1790,1729,1756,1763,1598,1443,1568,1465,1409,1591,1589,1472,1478,1634,1574,1662,1490,1683,1538,1399,1282,1380,1210,1096,1119,1003,1024,1024,879,998,1019,1013,1040,944,863,629,547,468,423,363,1497,1277,693,704,621,669,680,683,670,658,644,627,715,692,1271,1574,1510,1578,1594,1659,1599,1551,1497,1423,1043,812,1325,1448,1459,1552,1513,1464,1517,1416,1310,1068,971,1200,1414,1511,1460,1443,1500,1363,1228,917,682,690,663,668,625,706,685,666,696,661,657,695,1273,1633,694,662,647,692,676,675,661,675,718,695,677,631,872,1482,1633,1608,1649,1689,1684,1566,1481,1413,1382,1340,1366,1204,1335,1320,1322,1284,1287,1277,1175,1684,1698,1626,1609,1668,1586,1524,1368,1087,986,786,743,660,630,694,667,697,678,664,681,694,669,617,907,2033,727,406,555,590,613,752,910,891,959,1083,1042,1144,1374,1526,1533,1579,1571,1555,1489,1453,1424,1479,1456,1414,1487,1444,1463,1444,1381,1218,1397,1444,1441,1593,1617,1555,1451,1339,1093,1191,1283,1230,1265,1228,1143,1124,1016,946,1016,1054,986,994,889,841,644,563,419,1344,1156,315,498,572,664,718,784,883,896,991,1032,1133,1248,1353,1534,1625,1685,1728,1646,1617,1492,1432,1369,1295,1316,1400,1398,1444,1412,1477,1532,1417,1444,1409,1473,1455,1542,1705,1635,1521,1349,1296,1210,1227,1232,1209,1246,1195,1071,1078,1029,954,846,800,720,644,468,1018,1627,355,482,601,641,683,825,881,925,1052,1064,1028,1389,1535,1493,1477,1576,1504,1481,1313,1296,1328,1395,1335,1417,1370,1408,1364,1278,1384,1383,1357,1311,1351,1327,1318,1385,1528,1557,1624,1428,1487,1426,1390,1205,1197,1241,1210,1118,1062,1036,987,970,888,757,639,537,495,1753,1712,1778,1766,1739,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,1998,1969,2048,2048,2048,1963,1959,2048,1960,2048,2011,1975,1960,2025,1905,1954,1917,1975,1972,1962,1967,1941,2048,1956,1815,1013,751,837,876,935,1028,1156,1047,1096,831,940,931,939,850,945,769,889,948,805,806,918,801,1044,1090,890,692,619,1459,1185,1279,1305,802,632,626,562,557,585,942,895,938,1035,986,617,914,793,850,956,1070,921,1032,835,559,555,870,521,751,964,967,456,858,590,692,721,612,1094,866,1032,1147,752,631,559,559,544,680,741,663,901,663,771,681,891,1256,749,856,965,947,1016,746,1016,728,1024,1020,726,810,978,921,360,529,915,721,817,493,583,973,615,669,597,613,720,940,979,847,622,691,747,724,1964,1671,1633,1421,1432,1389,1463,1542,1921,1789,1767,1625,1439,1447,1377,1456,1543,2018,1730,1614,1709,1675,1598,1622,1715,1750,1811,1752,1723,1730,1497,1231,1218,1215,1618,1620,1623,1805,1759,1742,1732,1673,1794,1716,1692,1693,1692,1758,1748,1757,1700,1765,1786,1754,1695,1791,1713,1608,1583,1552,1351,1294,1277,1415,1534,1509,1654,1632,1588,1692,1552,1543,1650,1613,1619,1915,1701,1433,1495,1507,1547,1439,1526,1508,1426,1462,1592,1634,1431,1530,1677,1703,1666,1772,1777,1633,1728,1609,1583,1551,1512,1599,1613,1579,1611,1615,1618,1593,1545,1564,1611,1643,1585,1640,1568,1576,1566,1643,1632,1568,1414,1156,1414,1507,1473,1370,1486,1517,1589,1607,1540,1390,1475,1764,1835,1249,1227,1242,1236,1227,1288,1246,1272,1255,1279,1296,1566,1296,1292,1288,1324,1334,1316,1306,1230,1242,1283,1284,1229,1250,1237,1246,1272,1240,1210,1221,1185,1234,1227,1205,1240,1235,1240,1253,1236,1250,1264,1289,1287,1455,1376,1286,1281,1295,1310,1302,1299,1227,1276,1267,1251,1355,2048,1766,1764,1793,1746,1784,1823,1781,1757,1760,1793,1720,1733,1704,1714,1639,1655,1685,1601,1602,1650,1670,1637,1612,1688,1708,1711,1793,1737,1773,1745,1797,1742,1722,1751,1607,1682,1709,1642,1653,1608,1686,1729,1659,1692,1699,1786,1715,1769,1736,1765,1758,1765,1735,1738,1792,1765,1769,868,1479,1817,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1182,623,600,628,612,661,593,576,620,628,638,655,1399,493,536,639,559,474,384,407,907,1624,1683,1185,1038,1364,1210,1057,1582,1181,1100,1719,1481,903,970,1285,340,436,489,483,519,428,497,342,378,259,273,317,868,1813,1688,1755,1649,1705,1417,1117,1067,1083,1205,1164,1037,1128,844,1209,1022,630,1204,1173,1041,1068,1199,836,1098,1070,962,1151,828,1173,810,946,980,928,1282,705,1220,958,1107,1058,1102,1366,809,1116,1109,820,1179,812,1294,312,311,312,1160,1064,987,946,891,1619,910,1843,932,1299,1559,1784,1490,1516,1589,1607,1592,1638,1617,1680,1629,1610,1652,1678,1644,1641,1647,1597,1619,1651,1739,1719,1708,1766,1748,1781,1679,1692,1753,1790,1802,1823,1895,1884,1886,1876,1894,1883,1764,1801,1818,1803,1830,1784,1803,1812,1789,1683,1552,1585,1639,1596,1540,1429,1534,1604,1633,1661,1823,1893,1456,1429,1497,1560,1452,1493,1527,1461,1462,1546,1624,1478,1459,1653,1662,1642,1740,1797,1673,1718,1671,1557,1576,1494,1582,1620,1573,1578,1629,1622,1592,1533,1552,1628,1622,1630,1625,1589,1537,1549,1614,1644,1618,1506,1173,1347,1499,1480,1382,1410,1480,1593,1617,1583,1437,1397,1584,2030,516,589,608,592,704,749,719,894,1005,985,1090,968,1227,1256,1309,1297,1292,1370,1406,1386,1487,1396,1410,1381,1501,1550,1422,1426,1436,1219,995,1009,879,1276,1309,1231,1223,1054,1009,945,1010,1008,831,966,1008,887,663,826,914,823,422,724,708,692,674,575,628,1836,994,742,803,871,954,1083,1081,1125,1116,1141,1079,894,835,714,1131,1336,1364,1445,1467,1507,1473,1519,1284,1575,1553,1605,1497,1555,1638,1708,1705,1633,1489,1540,1556,1587,1492,1488,1415,1268,1303,1170,1014,980,1031,1053,1124,1086,1155,1207,1238,1052,961,773,778,792,804,907,1239,1612,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2027,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,1816,1324,1269,1174,816,487,414,1219,853,1079,1103,1078,811,782,1494,1595,1335,1421,1346,1365,1382,1089,1177,1183,1089,1451,1325,1331,1315,1187,1217,1188,1168,1186,1385,1444,1416,1339,1295,1237,1243,1416,1487,1644,1602,1570,1561,1585,1552,1535,1570,1485,1499,1472,1431,1382,1356,1391,2043,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1746,1351,1418,1417,1380,1381,1403,1488,1462,1627,1702,1542,1454,1457,1348,1426,1647,1733,1760,1686,1638,1527,1452,1499,1633,1649,1663,1625,1622,1563,1493,1553,1819,2046,2048,2046,2029,2027,2015,2048,2025,2035,2048,1993,2048,2029,2019,2048,2040,2049,2048,2047,2038,1993,1873,2048,2041,2048,1669,1367,1628,1606,1601,1620,1032,213,240,207,220,215,725,220,249,221,221,237,553,1822,1421,1249,1293,1220,1197,1135,1183,1185,1194,1260,1220,1141,1150,1618,2048,1059,673,1860,1767,784,1096,2057,1589,653,1561,2048,958,719,370,455,812,1812,1215,2008,2055,2056,2048,465,1824,2048,2048,2048,2048,2048,2048,464,1784,2048,2048,2048,2048,2048,2048,2048,463,1782,2048,2048,2048,2048,2048,2048,459,1886,2048,2048,2048,2055,2048,2056,2048,2048,2048,2048,744,1562,576,145,1330,2048,2048,2048,2048,2048,2048,2048,2048,2048,2043,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2036,2048,2048,2048,2048,2048,1909,2048,2048,2048,2048,2048,2043,2055,2048,2048,2022,2048,2048,2048,2048,2048,2048,2026,2048,2048,2048,2034,2048,2048,2048,2048,2018,2048,2048,2027,2048,2048,2039,2048,2048,2039,2035,2048,2048,2032,2048,2037,2048,2048,1959,2056,2048,2025,2048,2037,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,1017,1774,2057,2051,2048,469,1779,1970,2048,2024,2048,2048,2048,2048,2048,2048,2048,2038,2048,2048,2048,2048,2048,2048,2048,2037,2055,2048,2048,2048,2048,2029,2048,2048,2000,2020,2048,2039,2048,2039,1994,2048,2030,2048,2033,2057,1931,2048,2048,2048,2036,2048,1990,2011,2048,2048,2035,2048,2024,1986,2048,2031,2057,2034,2048,1928,2048,2037,2048,2037,2057,2002,2048,2048,2048,2048,2048,2048,2048,2057,2034,2048,2037,2057,2034,2057,2048,2041,2042,2048,2048,2048,2044,2056,2048,2048,2048,2048,2048,2039,2056,2037,2048,2048,2048,2048,2041,2036,2030,2053,1999,2037,2048,2036,2048,1935,2057,2031,2048,2048,2048,2021,1996,2048,2033,2048,2028,2048,1887,2048,2040,2048,2033,2048,1913,2048,2044,2048,2045,2048,1929,2048,2048,2048,2048,2048,2026,1988,2048,2025,2048,2015,2045,1963,457,142,149,1783,2031,777,141,1824,2030,465,2030,1914,1990,2053,2047,2039,1168,140,1782,2046,463,1875,2046,765,150,1782,1923,469,141,145,457,140,1784,1667,133,142,148,446,101,757,945,994,912,839,971,969,626,1066,767,874,923,944,1089,1060,940,895,1051,750,996,926,1196,952,1100,978,813,1035,1064,1242,1163,862,716,471,402,782,1223,912,928,600,441,334,336,421,363,366,568,560,1024,1309,1107,691,1172,1345,1512,1555,1325,1352,1076,1203,1513,1395,1273,1219,1114,1423,1387,1455,1554,1436,962,1244,1212,1301,1403,1432,1546,1425,1097,1187,1175,1464,1395,1527,1557,1093,1181,1104,1280,1445,1427,1519,1495,1057,1101,1135,1326,1457,1497,1493,1316,1120,1108,1234,1477,1397,997,691,612,609,772,646,641,645,754,814,973,898,614,1004,815,802,727,889,865,795,691,457,726,667,860,767,802,697,767,633,800,516,702,564,491,670,618,799,652,807,618,596,592,581,654,505,574,438,558,471,457,721,513,779,805,420,561,1476,1083,1361,1514,1526,1319,1158,1308,1175,1244,1006,1386,1232,1243,1516,1076,1171,1184,818,1595,860,1255,1292,864,826,1058,1478,1011,794,960,1022,948,1159,806,1118,987,1124,731,947,841,876,809,1131,981,822,1003,1070,919,1005,944,741,691,1116,825,888,1090,715,953,1149,482,592,496,485,751,700,729,721,892,657,627,604,620,1070,1045,1161,1086,478,639,787,710,726,757,670,862,582,345,532,535,814,696,843,890,1126,586,875,816,815,899,910,821,913,876,866,853,847,986,516,832,856,913,680,778,965,787,925,1059,822,828,770,825,896,823,830,838,719,778,857,866,859,793,838,506,869,692,665,596,718,510,346,1328,771,761,1454,1778,1855,1706,1953,1850,2048,2048,2048,1871,1373,1562,1777,2053,2048,1868,1777,2048,1930,1802,2003,2048,2048,2016,1889,1846,1996,1892,1839,2012,1871,1950,1405,1165,745,612,438,1647,2017,2008,1621,1430,1193,1200,1154,1954,1963,1310,1270,1113,904,1850,1350,1421,1343,539,135,304,1761,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2055,2038,1923,1492,1940,2048,2048,2048,2048,2048,2056,2048,1049,25,1698,2012,2048,2048,2033,1448,1896,1862,2048,2020,1878,2048,2048,2057,2048,2029,1855,2048,2048,1871,2048,2042,2027,2048,2042,2056,2049,2039,1871,1461,1656,1850,2048,2048,2048,2048,2048,2048,2048,2048,1878,1854,996,1108,1186,1118,1507,1079,1548,1472,1285,1457,1363,1134,1261,1104,996,1053,1193,1031,1483,1855,1943,1883,1870,1907,1209,1681,1709,1555,1675,1112,998,1088,1116,1022,1646,1097,956,1101,1161,1548,1105,1083,1057,1486,1135,1262,1797,1981,2030,2053,2051,2048,1977,2055,1989,2048,2028,1974,2048,1976,2048,2033,1981,2036,1970,2057,2031,1974,2048,2044,1972,2033,2057,1972,2048,2057,1974,2048,2057,1980,2042,2057,2001,2031,2041,2007,2036,1971,2048,2029,1970,2048,1983,2048,2048,2057,2057,1966,2048,2048,2048,2048,2054,2056,2048,2048,1896,2048,2048,2048,2048,2048,2048,2048,2048,2048,2022,2019,2048,2048,2048,2048,2048,2048,2048,2013,2048,2048,2048,2048,2048,2048,2048,1898,2048,2048,2048,2048,2048,2048,2020,2033,2048,2048,2048,2048,2048,2048,1890,2048,2048,2048,2048,2048,2048,2048,1895,2048,2048,2048,2048,2048,2048,2048,2048,2048,1925,1564,1650,1237,1709,1524,1636,1827,1776,1764,1787,1453,1513,1587,1619,1707,1817,1678,1674,1482,2044,1989,1026,1582,1416,1317,1115,1109,1613,1616,1724,1625,1777,1615,1852,1919,2051,2048,1564,1052,1209,1243,1110,1209,1159,1015,1136,1740,1437,1532,1344,1430,1383,1404,1549,1507,1703,1640,1678,1564,1467,1594,1587,1810,1906,1758,1783,1862,1848,1846,1703,1777,1803,1823,1371,1694,1853,1786,974,1310,1820,1799,1190,1526,1699,1653,1293,1444,1892,1573,1802,1708,1467,738,786,1344,1302,1217,1246,1372,1820,1748,1463,1456,1354,1511,1332,1695,1655,2026,2011,1705,1657,1810,1784,1825,1810,1797,1840,1710,1811,1683,1721,1840,1823,1647,1400,1534,1382,1497,1471,1168,1228,1505,1605,1595,1782,1402,1650,1571,1229,1591,1722,1485,1497,1490,1380,613,679,714,712,688,682,653,566,518,568,521,1477,1828,1676,1697,1690,1686,1934,1719,1742,1761,1098,1078,1799,1648,1524,1481,1490,731,497,275,421,398,428,313,629,1876,1695,1684,1692,1861,1779,1796,1437,1554,1590,1472,1490,1514,373,570,502,490,416,374,520,527,417,1358,1781,1675,1666,1676,1803,1789,1792,1729,1130,1723,1634,1474,1471,1494,1483,719,629,639,593,491,586,567,543,550,513,573,388,336,1226,1907,1698,1666,1680,1685,1686,1902,1809,1707,1705,1772,993,1487,1700,1669,1493,1475,1483,1024,570,568,627,547,589,599,607,546,586,533,541,1622,1804,1688,1676,1668,1681,1793,1808,1707,1722,1684,1003,1200,1752,1641,1513,1497,1485,1211,591,531,574,516,403,629,575,604,497,379,523,1430,1749,1698,1691,1655,1658,1892,1712,1750,1660,1341,991,1825,1638,1510,1487,1051,350,518,367,422,515,509,485,831,1804,1634,1692,1663,1836,1708,1677,1331,1484,1579,1459,1480,1457,1487,1483,1272,630,622,491,552,706,443,652,617,571,599,717,698,652,743,665,599,605,656,617,460,1144,1999,1667,1679,1710,1673,1650,1701,1723,1710,1687,1943,1762,1760,1702,1698,1831,1817,1781,774,735,1072,1806,1787,1691,1787,1551,1473,1475,1465,1453,720,401,469,541,551,618,594,618,474,475,599,462,562,558,1123,1964,1688,1684,1686,1692,1686,1676,1972,1724,1783,1772,1780,1257,670,1460,2003,1640,1706,1509,1478,1491,1467,1387,620,616,674,582,633,553,517,545,691,561,416,510,406,565,477,2017,1754,1680,1689,1702,1698,1708,1798,1886,1709,1725,1785,1780,1365,743,1708,1839,1759,1514,1491,1494,1479,1303,531,575,606,603,597,576,496,246,211,177,259,190,279,1806,1927,1718,1696,1714,1721,1725,1730,2028,1781,1748,1781,1799,1735,1017,1637,1608,1555,1455,912,700,632,682,645,1793,1686,1793,1627,1375,1545,1457,1477,1046,573,572,573,531,474,451,448,506,1346,1755,1656,1669,1662,1857,1701,1701,717,1777,1666,1453,1477,1461,1177,569,584,621,546,579,597,539,430,612,536,584,1992,1651,1676,1683,1683,1731,1818,1675,1774,1650,719,1729,1785,1519,1473,1449,1111,577,579,304,490,522,453,322,308,458,620,1892,1676,1698,1674,1642,1756,1783,1743,1648,1359,954,1854,1644,1460,1451,1432,747,290,385,325,423,457,399,327,323,430,363,487,1904,1634,1643,1657,1665,1699,1827,1727,1609,1414,1351,1708,1513,1488,1460,459,454,504,591,602,647,616,630,494,1581,1688,1676,1657,1691,1835,1705,1677,1672,957,1805,1589,1472,1484,1472,1290,531,517,563,573,604,589,647,422,481,549,408,507,670,1931,1662,1674,1686,1662,1679,1694,1933,1667,1652,1754,1534,762,1723,1725,1728,1420,1483,1500,1469,1485,1497,1499,1487,1482,760,674,740,608,621,549,625,717,473,588,509,609,704,626,616,644,621,551,394,693,699,633,491,484,559,516,258,316,1056,2015,1995,1732,1727,1718,1673,1706,1675,1696,1684,1663,1675,1705,1724,2048,1823,1667,1749,1666,1654,1704,1703,1672,1700,1338,738,815,1724,1896,1826,179,929,732,629,1691,1685,1629,1490,1511,1505,1506,1504,1500,1493,1475,1490,1478,811,726,805,564,700,738,676,722,741,564,655,662,721,584,642,634,784,664,661,540,506,472,482,264,315,400,509,456,517,336,203,231,1544,2056,1948,1719,1704,1690,1690,1671,1685,1692,1705,1652,1685,1674,1671,1686,1707,1953,2048,1752,1746,1723,1704,1730,1674,1675,1620,1665,1721,1720,1178,837,1264,1833,1848,1689,1797,1778,1544,1493,1478,1485,1353,520,544,522,513,470,570,401,487,438,463,190,602,550,1380,1859,1663,1675,1675,1684,1700,1953,1627,1733,1715,1692,1036,1405,1709,1712,1522,1460,1484,1464,1365,665,683,661,696,516,685,490,646,507,320,484,341,581,284,502,1367,1951,1674,1684,1681,1695,1687,1693,1848,1842,1744,1708,1719,1804,1067,794,1722,1712,1770,1456,1468,1480,1480,1483,1215,528,531,512,575,733,624,676,600,717,627,532,453,655,711,589,360,673,2015,1793,1685,1661,1685,1709,1686,1664,1720,1979,1694,1738,1763,1763,1724,1488,1029,1833,1782,1740,1511,1494,1495,1493,1512,1464,1490,1497,1496,1513,1513,1500,1318,527,710,647,563,623,615,546,618,673,580,573,656,600,580,494,660,613,484,539,664,503,509,608,618,556,608,497,527,585,588,627,583,568,508,492,527,448,626,465,550,2033,2035,2049,1842,1717,1729,1701,1722,1704,1696,1699,1707,1725,1715,1710,1703,1708,1706,1710,1704,1742,2048,2022,1694,1756,1708,1758,1698,1719,1695,1732,1699,1749,1760,1769,1093,870,910,831,1369,1616,1653,1579,1615,1534,1523,1125,1019,1073,1769,1772,1766,1509,1465,1481,1497,1484,856,678,680,578,445,390,372,434,378,415,498,504,377,1599,1869,1696,1683,1680,1679,1679,1870,1788,1696,1737,1705,1377,1224,1786,1683,1479,1472,1316,623,436,441,498,270,335,479,376,1568,1704,1671,1671,1748,1806,1702,1683,1199,1757,1511,1468,1474,1466,1449,611,560,583,592,587,571,552,591,609,315,450,475,417,606,1944,1672,1665,1667,1670,1666,1675,1890,1687,1680,1710,1672,627,478,1399,1326,1540,1628,1484,1479,882,193,325,430,295,249,383,265,1122,1709,1630,1646,1810,1641,1628,1103,1444,1545,1437,1457,1015,538,503,386,537,463,415,1600,1677,1660,1753,1729,1493,1343,1622,1482,1487,1469,1454,1489,1478,1195,683,601,592,626,557,418,531,601,407,465,410,592,504,465,460,426,382,339,409,1863,1908,1660,1668,1690,1703,1694,1692,1659,1653,1861,1849,1715,1789,1676,1711,1658,1430,826,1264,1634,1454,1585,1690,1583,1472,1497,1476,1188,452,355,509,452,490,269,370,547,459,461,331,376,430,1439,1818,1652,1659,1656,1651,1668,1804,1782,1673,1703,1661,983,692,1476,1686,1605,1393,1472,1468,1480,1505,1496,1480,1478,1148,643,594,649,586,581,654,679,665,690,515,543,749,633,626,630,720,473,572,580,666,519,415,601,569,1833,2013,1718,1680,1680,1681,1714,1692,1706,1675,1670,1705,1917,1971,1687,1651,1709,1675,1696,1699,1787,1313,851,1447,1772,1516,1616,1642,1672,2045,2056,2050,2056,2048,1562,1597,1519,1327,1402,1494,1449,1067,895,849,1777,2018,1960,1902,1923,1478,1203,1475,1197,1470,1354,833,1351,1312,817,928,1107,1184,945,1087,1032,1061,1091,975,927,1151,1099,1117,1017,797,968,937,958,916,848,935,955,877,1054,987,1019,983,1080,1010,925,888,845,958,952,964,975,924,974,964,789,1062,994,1003,1039,812,1068,1048,1016,1102,975,974,1133,1127,1098,1164,1088,1167,1095,1141,1064,1169,1090,1137,1018,1061,816,846,1104,1184,1036,985,1142,1170,1086,1075,1117,1139,922,1053,1096,1258,1106,1879,2048,1053,1095,1059,922,964,1049,1135,1020,1023,874,1126,1186,896,1098,992,956,1059,762,900,736,789,880,1144,1329,1421,1582,1295,1638,1991,2048,2056,1847,1468,2028,2056,2048,2048,1975,1846,2053,1621,1962,2057,2048,2048,2048,2048,2048,2048,2054,2037,2034,2017,2035,2044,2000,1951,1805,1668,2002,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,1982,1937,1836,1761,1283,1892,1922,1891,1753,1941,2051,2054,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1941,1431,1141,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2056,2030,1544,2048,2048,2048,2041,1835,1553,1349,1171,987,671,539,2052,2048,2048,2048,2048,2055,2056,2048,2048,2052,1785,1423,860,2048,2048,2026,1919,1853,1673,1466,1124,888,500,234,500,1974,2048,2057,2048,2047,2048,2056,2048,2057,2048,2057,2053,2046,1962,1812,1593,1482,1395,2051,2057,2048,2048,2055,2048,2048,2048,2048,2048,2053,2048,2036,1883,1685,1429,977,1289,1858,1893,2020,2048,2051,2048,1915,1654,1229,1114,2048,2044,2048,1838,2052,2048,2056,1712,388,106,167,33,1010,2048,2048,2048,2048,2048,2055,2048,2041,1908,2048,1724,1948,2048,2048,2048,2048,2048,2048,2048,2048,2048,1901,1572,1982,1960,1625,1593,1806,1516,834,1075,1724,1988,2035,2057,2048,2055,2052,1961,1722,1056,46,1940,2048,2048,2048,2048,2048,2048,2057,2048,2037,2038,1952,1843,1932,1840,1636,2048,2048,2048,2057,2048,2048,2048,2048,1904,2048,2048,2057,2048,2048,2048,2048,2048,1595,2049,1988,1973,1226,1783,2057,2052,1962,1654,1990,2048,2048,2048,2048,2057,2048,2048,2048,2042,1598,1299,1867,1973,2029,2048,2048,2037,2035,2027,2054,2047,2045,2051,2025,1990,1979,1966,2016,2055,2053,2044,2051,2006,2035,2040,2057,2057,2042,2041,2009,1862,1732,1524,1349,1260,1222,1183,1150,995,1064,1114,957,993,806,917,907,731,621,466,396,205,178,81,50,778,2041,2037,2050,2057,1996,1782,1739,1459,952,1381,2048,2048,2048,2048,1892,2048,2048,2048,1969,2048,2048,2048,2016,2055,2048,2048,2048,2043,2054,2048,2048,2032,2042,2054,2014,1916,1872,1765,1775,1755,1608,2051,2048,2033,2048,2056,2048,2052,1761,2056,2056,2057,2057,2057,2056,2053,2005,1969,2057,2049,1874,1462,2055,2048,1926,1453,2042,2048,2048,2048,2048,2048,2056,2048,2046,1971,1778,1704,1482,1372,1224,1139,1932,2048,2048,2048,2055,1978,1838,1511,634,509,1196,1602,1789,1933,1937,1946,1953,1993,1837,1679,1452,1253,873,466,780,1884,2033,1934,1271,891,2048,2048,2048,2048,2048,2048,2048,2048,1986,2002,2048,1977,1705,1320,865,2055,2025,1641,1345,2017,2048,2048,2053,2056,2053,2057,2040,1995,1969,1525,1995,2048,1416,594,1960,2048,2048,2048,2048,2048,2048,1987,1766,2048,2048,2048,2048,2048,2048,2048,1499,1107,1636,1964,2039,2057,2056,1908,1170,1928,1804,2054,2048,2048,2048,2030,1978,1614,1239,890,678,423,335,170,765,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1861,1350,2056,2051,2045,2055,2048,2053,1924,1932,2020,1483,1977,1221,660,1426,1708,1991,2056,2048,2048,2048,2048,2048,2048,2048,2048,2019,1838,1606,1479,1355,1168,1050,1012,913,705,825,964,799,964,1728,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,1752,1193,706,708,1918,2048,2048,2048,1994,1590,2048,2048,2056,2052,2048,2048,2048,1977,1406,1507,1639,1254,1376,2048,1843,1061,674,1809,1953,2006,2048,2056,2053,2054,2039,1924,1615,1751,1855,1927,1993,2055,2057,2048,2048,2055,2056,2048,2042,1984,1757,1424,725,812,1760,2055,2048,2048,2048,2048,2048,2048,2048,2047,1989,1701,1411,995,925,187,642,2048,2039,1957,1904,1795,1704,1813,2048,2017,1732,1565,1367,1714,1794,2051,2048,1920,2007,1072,2048,1686,1812,1960,2053,1655,1888,1335,1426,1130,1732,1964,2030,2003,1986,2035,1990,1909,2048,2053,2048,1607,934,1462,1978,2056,2048,2048,1858,1809,1217,797,1188,2056,2048,2048,2048,1436,360,1917,2054,2045,2048,2048,2048,2048,1956,2048,2055,1498,2052,2041,1777,2056,2055,1684,2024,2056,1432,1326,1971,1427,806,2052,2048,2048,2044,1211,122,152,1448,2053,2048,2048,2048,2057,2054,2049,1702,1938,1775,1459,778,157,1206,1999,2054,1958,2048,2057,2057,2056,2031,2054,1837,2008,1671,1946,1400,1877,1247,1621,1647,1667,1276,1292,1826,2038,1981,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2050,2040,1983,1952,1766,2020,1673,1972,2051,1862,1500,1941,1801,2048,2048,2057,2048,2048,2048,2048,2048,2056,2028,1952,1756,1562,1389,1139,837,1515,2048,2048,2048,2048,2048,1307,958,2057,2048,1972,1967,2050,1958,2026,1993,2042,2056,2057,2054,2052,1984,1669,1480,2024,2048,2057,1957,1921,2029,2055,2048,2048,2048,2057,2051,2040,1932,1750,1352,581,1445,2048,2048,2048,2048,2048,1943,2057,2048,2048,2048,1765,1427,2056,2048,2048,2057,2048,2048,2048,2048,1802,1255,2048,2048,2048,2048,2048,1994,1959,2048,1051,425,516,1372,1933,2048,2048,2048,2048,2048,2057,2048,2048,2048,2056,2003,1917,1771,1781,1730,1568,1418,1257,1233,1221,1063,814,543,524,521,491,461,417,383,445,464,438,527,536,219,365,844,1164,1202,1232,1116,1092,958,842,740,513,268,146,742,1933,2056,1665,1715,1917,1978,2048,2052,2014,2019,2048,2048,2055,1988,1860,1547,1908,2049,1585,1491,1997,1790,2031,2056,2036,1983,1918,2048,2048,2035,1875,2042,2056,2034,1913,1999,1978,1691,1414,1561,2053,2051,2035,2053,2048,1948,1676,1880,2005,2055,2028,2052,2010,2051,1924,1949,1878,1781,1846,1967,1940,1892,1984,1856,2049,1942,2048,2057,2048,2052,1981,1578,1338,1831,1119,945,1420,2048,2048,2040,1990,1925,1835,1795,1907,1762,1989,1879,1914,1950,1953,1959,2045,1869,1837,1935,1489,1486,1982,2016,2004,1865,1859,1856,1851,1771,1721,1529,1928,1662,1464,1485,1297,870,1311,2009,1946,1844,1841,1731,1599,1753,1642,1332,1438,1277,1492,1271,1232,1174,1061,1354,1122,1078,1241,1465,1163,1468,1613,1821,1785,1762,1966,1988,2051,1988,2008,1813,1711,1562,1401,772,1592,1794,2033,2057,2048,2053,1006,101,1495,2048,2048,1980,1472,2039,1126,2048,2048,1403,1717,2048,2048,2048,2057,1544,2048,1920,1459,1480,2048,2057,2048,2056,2055,2049,1934,2053,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2047,2025,2048,2057,2048,2048,2048,1947,1952,2028,2054,2056,2051,2052,2055,2055,2048,2048,2048,2054,1576,1516,2053,2053,2056,2048,2053,2054,2048,1877,1962,1761,1556,1617,1458,1768,1784,1571,1437,1314,1100,816,223,1978,1791,1928,2042,2048,2045,1890,1427,1325,2048,2048,1756,2055,2048,2048,2007,1467,2007,2057,1881,1619,1458,1839,1834,422,453,659,417,726,794,429,653,633,884,830,263,467,491,388,469,643,775,1027,926,722,906,348,282,621,662,267,672,1071,831,170,267,232,781,607,182,273,606,866,1119,1382,985,623,609,447,436,474,520,330,673,282,370,430,219,176,530,492,229,599,379,313,288,300,256,276,321,323,245,403,312,328,242,406,276,421,192,232,134,291,199,243,377,493,852,272,256,327,646,714,544,264,175,368,315,236,327,486,450,591,564,191,446,516,267,226,206,429,233,554,352,403,721,309,318,323,308,318,979,699,1022,699,1285,1326,984,638,608,442,518,483,590,343,495,647,551,567,532,651,459,441,477,663,503,697,691,611,956,1045,1067,705,665,726,367,358,452,142,286,442,1297,1680,1452,1095,1371,1539,1409,1602,663,979,956,896,1011,992,659,1022,818,925,651,759,126,233,240,233,571,503,422,623,571,187,181,182,486,99,176,140,188,230,512,300,310,676,300,311,785,498,768,1481,631,401,623,433,575,419,511,303,532,227,327,227,293,433,228,328,228,291,390,138,470,138,393,384,395,487,1159,1207,281,312,380,290,479,531,603,481,326,421,339,177,538,355,348,533,650,605,1139,1345,333,319,588,691,804,684,750,1053,1076,637,455,265,408,467,283,446,376,1190,666,323,306,397,302,285,316,562,340,321,342,290,300,477,350,490,405,622,584,506,658,564,448,636,604,681,724,707,804,603,680,696,676,754,112,194,412,718,714,1298,1463,1302,379,575,594,467,430,554,664,739,336,569,750,643,434,971,914,578,210,655,722,628,253,749,799,747,874,249,715,744,827,868,565,479,697,565,455,867,461,845,528,621,532,506,361,249,799,577,671,1115,701,255,570,773,284,358,583,287,436,91,99,117,287,94,109,119,345,510,698,713,905,771,532,611,784,786,579,563,523,622,737,772,265,284,345,204,332,219,345,229,253,226,258,107,108,203,113,107,114,113,107,219,101,497,159,247,538,852,835,771,594,371,382,400,286,385,226,332,669,372,1278,1211,1418,1184,1322,1156,1533,1682,1543,1413,1126,1178,823,998,1227,1515,1579,1561,1270,1454,1607,468,216,389,138,101,109,94,494,313,471,393,646,314,177,255,346,296,218,488,221,240,166,235,404,186,305,260,483,554,525,430,305,252,360,350,215,199,217,129,289,234,269,197,108,223,268,220,152,404,449,191,244,236,333,289,216,119,383,171,197,109,226,109,157,173,1061,1159,700,323,465,442,416,692,490,512,287,503,253,512,864,1104,665,528,589,424,715,901,888,889,889,276,780,301,453,399,404,396,410,424,37,36,37,161,202,212,286,139,193,208,182,169,353,305,324,344,246,175,81,342,702,520,177,320,174,119,125,347,1136,1157,206,419,429,424,204,198,1651,1639,1638,1640,1620,494,349,668,1072,821,977,1089,629,1796,1266,1268,1325,1249,1403,1262,1228,1164,1151,1147,1152,1110,1283,1385,1293,1306,1304,1242,1258,1247,1343,1267,1451,1498,1367,1556,1593,1468,1343,1162,1066,873,1375,1097,941,1086,1038,1212,1844,1713,1749,1757,1661,1724,1709,1711,1706,1741,1700,1720,1750,1753,1769,1711,1712,1511,1690,1641,1689,1712,1702,1726,1687,1723,1650,1658,1649,1668,1595,1567,1654,1808,1650,1657,1694,1619,1623,1701,1745,1718,1749,1857,1851,1779,1814,1804,1731,1740,1717,1769,1820,1860,1789,1640,1729,1796,1744,1719,1800,1759,1730,1686,1739,1599,1590,1838,1622,1641,1590,1584,1663,1639,1647,1723,1685,1695,1673,1740,1701,1740,1689,1634,1728,1750,1687,1706,1672,1641,1663,1681,1625,1663,1601,1612,1546,1536,1514,1481,1900,1618,1545,1538,1352,1477,1526,1496,1469,1189,1292,1514,1416,1341,1342,1431,1356,1320,1475,1574,1497,1558,1482,1392,1448,1484,1385,1382,1578,1536,1469,1566,1642,1554,1649,1432,1494,1331,1563,1441,1434,1550,1337,1466,1346,1335,1238,1170,210,238,218,227,222,799,1459,1662,1410,1089,1388,1202,915,1259,1368,945,1576,1635,1148,1305,1640,1147,1791,1057,1601,1721,1616,1346,1662,1646,1222,1674,1337,1623,1498,1207,1698,1087,1509,1593,1517,1684,1431,1480,1444,1486,1772,1160,1367,1617,1693,1215,1581,1505,1490,1575,1658,1401,1327,1551,1532,1453,1730,1465,1703,1355,1380,1532,1470,1666,1410,1202,1721,1573,1429,1687,1220,1611,1041,1518,1441,1625,1442,1499,1593,1441,1513,1569,1266,1516,1281,1460,1422,1442,1247,1586,1348,1085,1505,1226,1221,1555,1538,1567,1639,1686,1469,1271,1616,1546,1266,1473,1467,1795,1408,1692,1204,1630,1631,1419,1740,1827,1432,1738,1544,1729,1619,1585,1444,1592,1426,1660,1373,1511,1644,1703,1236,1690,1622,1739,1519,1465,1591,1523,1550,1603,1689,1788,1568,1632,1199,1670,1829,1401,1687,2055,2047,1986,2042,2053,2039,2014,2054,2025,2031,2027,2036,2027,2037,2034,2047,2048,2045,2027,1989,1923,2001,2014,2048,2041,2056,2048,2037,2040,2040,2025,2018,2035,2043,2032,2051,2043,2047,2034,2005,2030,1889,2005,2036,2051,2051,2028,2048,2044,2032,1997,2020,2004,1991,1993,2015,2006,2012,2044,2025,2040,2013,1987,2005,1987,1982,2018,1996,2020,2042,2028,2049,2015,2000,1972,1987,1976,2011,1986,2057,2051,2026,2042,1981,1996,1999,2014,2013,2046,2028,2051,2051,2043,2043,2027,2039,2048,2044,2036,2041,2052,1981,1911,2001,1965,1988,1959,1992,1987,1987,1981,1995,1957,1977,1976,1995,1967,1919,1992,1984,1967,1967,1996,1972,1985,1995,1974,1951,2000,1991,1999,1967,1941,2006,1969,1998,1954,1950,1991,2014,1997,2001,2009,1955,2010,1975,1996,1908,1966,1958,2003,1987,1997,1968,1937,1992,1988,1987,1965,1999,2014,1985,1996,1999,2003,2023,1992,1979,2004,1986,1926,1785,1795,1800,1800,1739,1915,1872,1732,1791,1896,1889,1891,1770,1622,1864,1964,1898,1906,1734,1809,1905,1871,1816,1702,1631,1619,1743,1554,1776,1966,1822,1864,1649,2055,2048,2027,1987,1968,1907,1799,1887,1906,1828,1929,1644,1770,1656,1877,1890,1914,1739,1855,1887,1684,1793,1722,1873,1852,1878,1810,1832,1759,1751,1730,1738,1934,1859,1789,1902,1762,1895,1801,1672,1676,1716,1873,1891,1730,1895,1843,1786,1831,1590,1850,1668,1856,1848,1900,1734,1929,1733,1754,1671,1702,1740,1941,1908,1994,1885,1868,1861,1898,1818,1707,1938,1890,1979,1937,1966,1995,1855,1739,1883,1829,1749,1636,1909,1812,1847,1922,1807,1884,1928,1790,1873,1774,1904,1790,1927,1770,1942,1890,1763,1866,1785,1864,1782,1768,1903,1782,1694,1846,1776,1814,1723,1937,1912,1857,1961,1914,1926,1920,1934,1942,1915,1886,1913,1964,1952,1918,1896,1992,1904,1898,2006,1816,1437,1419,1389,1454,1454,1475,1547,1474,1554,1437,1471,1645,1780,1683,1525,1846,1884,1975,1893,1975,1837,1834,1772,1880,1822,1927,1977,1985,1814,1981,1669,1976,1779,1727,1964,1802,1975,1948,1908,1927,1727,1827,1860,1764,1930,1950,1982,1680,2010,1673,1911,1645,1801,1778,1892,1979,1968,1808,1992,1776,1917,1714,1814,1871,1668,1972,1934,1822,1986,1671,2002,1818,1744,1967,1887,1976,1954,1939,1927,1775,1858,1867,1840,1993,1981,1931,1963,1910,1942,1975,1909,1926,1912,1856,1650,1686,2023,2021,1950,1962,2010,2000,2000,2019,2011,2014,1997,1987,2003,1939,1988,1983,1993,1996,2001,1990,1962,1982,1987,1971,2019,1976,1972,2011,2036,2014,1987,2009,2014,2019,2020,2009,2002,2017,1994,2002,2011,2013,2019,2044,2004,2014,2016,1990,2036,2027,2028,1969,2011,2015,2012,1981,2005,1996,1996,1995,2007,1990,2009,2013,2046,2041,1995,1966,1815,1715,1874,1629,1680,1718,1697,1716,1638,1612,1747,1722,1705,1608,1835,1672,1633,1788,1704,1519,1732,1700,1739,1669,1751,1752,1758,1675,1797,1796,1809,1675,1766,1731,1755,1728,1776,1767,1942,1895,1996,1998,1989,1949,1917,1943,1910,2016,1981,1969,2010,1986,1976,2007,1968,2003,1966,1969,1971,1989,2010,1987,1985,1962,1985,1976,1935,1991,2018,1997,1991,1956,1980,1972,1976,1975,1957,1975,1894,1921,1829,1969,1828,1851,1885,1820,1835,1904,1849,1914,1870,1867,1916,1905,1878,1921,1921,1994,1984,2007,1904,1954,1902,1915,1881,1987,1940,1941,1892,1930,1959,1933,1973,1958,1884,1929,1795,1912,1931,2048,2023,2025,2016,2013,2003,2020,2005,2048,2004,2045,2043,2049,2018,2009,1998,2015,1992,2027,2030,2051,2056,2022,2038,2024,1999,2035,2012,2036,2051,2048,2033,2036,2053,2028,1979,1861,2046,1991,2037,2053,2032,2026,2003,1975,2002,2002,1968,1984,2020,2036,2009,2031,2009,1997,1979,2020,1999,1955,1981,2016,2039,2024,2017,2034,1974,1998,2021,1984,1953,1985,2022,2040,2025,2039,2037,2014,2049,2004,2017,1981,1990,1991,2028,2034,2053,2052,2042,2028,2040,2049,2040,2053,2034,2047,2056,1998,1950,1971,2013,1989,1953,1962,1978,2024,2002,1962,1972,1948,1956,1993,1967,1978,1976,1998,1973,1982,1931,1901,1897,1964,1932,1995,2005,1991,1999,1968,2013,1793,2006,1940,1925,1979,1950,1799,1985,2022,2037,2022,2043,2013,1953,1847,2006,2002,1955,1892,1902,1909,1976,1973,1901,1905,1970,1958,1958,1843,1898,1966,1996,1970,1832,1927,1915,1952,1906,1837,1906,1936,1928,1964,1870,1877,1903,1990,1927,1866,1942,1968,1919,1806,1935,1967,1859,1871,1820,1645,1953,1909,1894,1924,1910,1851,1879,1939,1833,1900,1896,1850,1882,1847,1811,1881,1960,1965,1917,1908,1875,1854,1849,1888,1836,1865,2020,2008,2005,2024,2008,1936,1807,1958,2003,1929,2028,2010,2017,1782,1973,2021,2010,2016,1971,1955,2000,2032,1981,2020,1813,1987,1996,2029,1934,1779,2010,2004,2013,1973,1777,2016,2009,2036,2000,1990,1856,1940,2003,2003,1995,2015,2028,2025,2002,1992,2024,1957,2018,2000,1983,1974,2023,2031,2016,2028,2010,2006,1715,2012,1987,1988,1989,1994,1967,1956,1980,1970,1962,1983,1939,2002,1969,1933,1983,1969,2001,1945,1846,1956,1925,1990,1835,1937,2007,2009,1986,2020,1949,1925,1909,1946,1762,1934,1953,1977,1984,1968,2006,2013,1971,1966,1988,1938,1963,1926,1976,1990,1977,1991,2020,1978,1979,1919,1972,1980,1917,1911,1987,1935,1972,1920,2038,1959,2001,1986,1997,2017,1965,1986,1955,1971,1949,2006,1999,1975,1948,1919,1938,2006,1927,1961,1936,1955,1965,1937,1994,1911,1943,1961,1837,1879,1950,1966,1894,1896,1927,1910,1967,1954,1909,2004,1975,1947,1995,1973,1936,2029,1813,1988,1963,2001,2027,1991,2015,2051,2055,1865,2014,1962,2045,2023,2029,2051,2033,2028,1947,2007,1994,2014,2032,2024,2025,1994,2040,1983,2036,2003,2033,2046,2028,2055,2030,2047,1963,2018,1987,2024,2039,2024,2048,2050,2048,1980,2008,1967,2034,2041,2028,2041,2042,2036,1936,1952,1959,1916,1892,2005,1965,1983,2000,1995,2034,2015,1996,1991,1873,1962,1974,2032,2036,1953,1999,2016,1949,2019,2016,1918,1967,1923,1671,1812,1473,1564,1435,1581,1511,1239,1454,1452,1330,1245,1433,1331,1381,1199,1500,1101,1439,1281,865,1620,1331,1295,1193,1215,1578,809,1252,1406,1115,1613,1059,1346,1264,1206,1587,1128,1458,1529,1286,1592,1367,1508,1530,1486,1644,1256,1486,1543,1261,1546,1300,1352,1331,1182,1552,1239,1451,1210,866,1631,1390,1238,1196,1243,1614,823,1248,1456,1204,1591,1069,1293,1197,1462,1348,1359,1468,1505,1230,1656,1428,1479,1567,1305,1584,1309,1517,1525,1211,1599,1201,1378,1213,1488,1341,1312,1417,1156,952,1662,1405,1166,1236,1227,1602,801,1242,1468,1151,1587,1076,1356,1229,1462,1367,1407,1455,1462,1267,1568,1523,1441,1594,1415,1402,1435,1458,1404,1112,1652,1202,1437,1176,1603,1146,1309,1378,1086,1133,1469,1405,1095,1325,1497,1063,1039,1278,1309,1237,1359,1234,1378,1164,1543,1135,1425,1506,1298,1630,1390,1515,1534,1429,1625,1248,1483,1495,1382,1382,1435,1274,1353,1140,1613,1203,1492,1249,865,1615,1367,1305,1166,1295,1662,852,1210,1425,1270,1555,1065,1313,1221,1323,1512,1282,1503,1520,1214,1611,1381,1514,1563,1342,1639,1285,1512,1524,1238,1640,1173,1408,1263,1397,1366,1252,1416,1098,935,1646,1372,1222,1202,1310,1523,917,1254,1455,1165,1616,1085,1364,1204,1493,1354,1402,1466,1519,1208,1579,1492,1527,1627,1378,1511,1397,1581,1513,1109,1623,1185,1334,1231,1386,1331,1219,1432,1182,871,1606,1402,1213,1197,1315,1498,909,1248,1424,1100,1566,1076,1319,1242,1519,1247,1222,1491,1535,1336,1627,1494,1543,1557,1433,1570,1389,1573,1505,1142,1596,1332,1327,1309,1216,1504,1192,1438,1242,841,1617,1367,1310,1202,1215,1584,828,1225,1424,1180,1446,1105,1295,1388,1320,1635,1131,1528,1571,1439,1577,1441,1511,1482,1521,1683,1281,1467,1517,1349,1276,1590,1282,1363,1135,1625,1156,1491,1339,838,1604,1287,1341,1159,1255,1569,1024,1116,1356,1348,1298,1428,1211,1312,1209,1636,1217,1494,1482,1280,1658,1408,1584,1535,1479,1720,1276,1511,1531,1335,1305,1550,1332,1373,1153,1626,1144,1528,1317,874,1566,1279,1340,1145,1341,1309,1282,998,1327,1469,1293,1604,1095,1458,1274,1660,1234,1433,1541,1419,1368,1639,1664,1558,1620,1376,1703,1212,1211,1278,1388,1388,1805,1456,1420,1193,1364,1542,1450,1566,1736,1363,1299,1290,1538,1406,1506,1781,1448,1427,1281,1387,1468,1351,1436,1783,1503,1518,1305,1280,1447,1210,1370,1521,1584,1076,1253,1235,1665,1442,1305,1439,1563,1296,1578,1679,1762,1740,1899,1546,1925,1859,1803,1717,1891,1803,1844,1897,1168,1264,1703,1691,1775,1677,1669,1597,1605,719,1525,1966,1894,1703,1532,1013,1497,1617,1808,1471,1809,1548,1986,1534,1899,1656,1854,1906,1896,1855,1631,1585,1908,1755,1921,1400,1944,1702,1642,1922,1893,1701,1876,1815,1860,1892,1829,1667,1692,1591,1549,1585,1603,1542,1681,1509,1646,1575,1539,1513,1438,1611,1485,1409,1570,1819,1866,1872,1824,1911,1838,1719,1799,1959,1914,1737,1871,1851,1855,1871,1996,1967,1966,1890,1983,1941,1950,1904,2008,1938,1963,1930,1818,1834,1901,1915,2057,2048,2040,1974,1932,1841,1605,1947,1939,1929,1974,1929,2000,1924,1941,1937,1910,1968,1890,1847,1980,1913,1886,1964,1925,1897,1750,1869,1922,1917,1824,1831,1798,1745,1735,1662,1805,1356,1789,1760,1608,1893,1437,1765,1651,1538,1827,1519,1282,1213,1122,1309,1443,1717,1634,1321,1131,1665,1674,1321,1129,2050,1849,1794,1731,1809,1751,1716,1849,1768,1688,1664,1704,1695,1541,1789,1748,1516,1603,1483,1547,1566,1286,1333,1693,1525,1006,1162,1589,1489,1639,1952,2010,1967,1988,1977,1899,1815,1541,1742,1873,2002,1837,1868,1935,1930,1870,1625,1839,1660,1854,1825,1831,1781,1747,1768,1553,1618,1611,1528,1751,1789,1788,1868,1414,1764,1426,1746,1135,1825,1876,1784,1686,1424,1348,1805,1592,1603,1555,1550,1734,1617,1477,1651,1608,1589,1652,1270,1568,1566,1557,1651,1253,1660,1482,1651,1630,1246,1543,1530,1492,1237,1149,1481,1175,1474,1213,1625,1087,1404,1453,1250,1547,1274,1276,1591,1444,1519,1749,1560,1320,1875,1849,1883,1817,1535,1897,1921,1408,1710,1311,1807,1569,2010,2036,1749,1619,1773,1689,1854,1827,1660,1803,1815,1686,1784,1750,1430,1540,1511,1189,1955,1870,1604,1606,1826,1537,1810,1878,1651,1503,1729,1688,1768,1677,1737,2028,1465,1518,1888,1627,1842,1706,1724,1166,498,535,481,673,683,630,425,693,1590,1989,1970,1961,1933,1970,1965,1957,1926,1752,1641,1631,1659,1766,1591,1749,1535,1548,1621,1623,1696,1465,1496,1439,1401,1488,1360,1563,1543,1318,1162,1347,1430,1511,1463,1420,1330,1622,1439,1608,1422,1448,1366,1415,1447,1434,1359,1403,1822,1758,1804,1873,1886,1895,1814,1730,1850,1673,1686,1773,1803,1844,1744,1747,1689,1325,805,805,843,1256,1705,1742,1628,1640,1701,1591,1506,1648,1746,1668,1641,1711,1656,1814,1787,1866,1682,1783,1547,1551,1796,1694,1673,1455,1925,1505,1847,1814,1864,1593,1836,1827,1909,1075,1058,985,1076,1067,1088,1023,1083,1589,1562,1586,1504,1589,1543,1540,1535,1664,1455,1507,1675,1625,1409,1027,1011,1054,1230,1424,1442,1775,1738,1499,1131,1351,1507,1249,1104,1559,1630,1329,1587,1622,1523,1573,1616,1588,1286,1106,785,1075,590,971,722,766,1525,1435,1031,509,933,522,786,546,529,928,679,850,498,850,635,705,689,560,898,745,923,552,743,733,728,807,500,806,619,820,287,309,396,263,626,241,652,264,518,238,195,488,179,510,39,504,169,320,340,211,1301,1416,1480,1161,1217,1200,1430,965,961,1005,990,946,967,977,997,1493,1402,1377,1412,1495,1519,1375,1361,1512,1496,1484,1475,1589,1599,1533,1541,1502,1586,1400,1428,1400,1416,1436,1411,1442,1448,1495,1388,1406,1388,1194,937,944,934,1113,921,946,925,1040,936,895,972,912,1412,1403,1438,1399,1222,916,942,921,1260,1624,1611,1612,1597,1461,1568,1571,1593,1664,1345,1347,1313,1259,1278,1304,1340,1464,1545,1507,1438,1399,1131,1385,1244,1529,1624,1702,1604,1488,1583,1834,1746,1780,1484,1343,1230,1479,1438,1514,1185,1169,1491,1429,1612,1431,1491,1437,1453,1730,1653,1560,1688,1460,1642,1543,1623,1768,1562,1650,1580,1614,1471,1588,1570,1542,1635,1667,1539,1656,1484,1587,1588,1625,1613,1633,1659,1628,1646,1471,1649,1607,1574,1760,1540,1590,1548,1652,1829,1554,1553,1530,1839,1613,1613,1577,1641,1783,1620,1706,1604,1418,966,948,984,1222,1505,1541,1523,1511,1416,1300,1303,1363,1279,1186,1222,1210,1449,1184,888,998,1247,1222,1186,1098,1055,1273,992,936,897,1685,1724,1632,1784,1653,1436,1416,1389,1329,1439,1418,1403,1349,1679,1503,1506,1547,1528,1500,1509,1555,1657,1429,1392,1373,1403,1369,1389,1370,1397,1685,1529,1552,1539,1559,1537,1516,1547,1592,1724,1594,1607,1657,1611,1593,1595,1667,1779,1473,1418,1421,1430,1490,1440,1401,1436,1881,1759,1706,1693,1740,1738,1705,1676,1912,1751,1718,1693,1680,1721,1673,1673,1674,1426,1012,1209,1025,1109,1064,1202,1184,1125,1059,919,862,662,703,685,1541,1678,1715,1684,1716,1701,1741,1713,1718,1857,1735,1672,1615,1724,1679,1742,1715,1878,1754,1775,1781,1720,1804,1750,1791,1722,1868,1725,1692,1612,1686,1665,1721,1672,1731,1428,1509,1380,1562,1045,1008,1034,1006,1812,1816,1808,1828,1652,1866,1789,1831,1815,1465,1178,1214,1493,1550,1023,1039,1256,1754,1618,1622,1584,1537,1662,1612,1586,1688,1587,1441,1411,1471,1393,1477,1431,1419,1465,1763,1394,1711,1377,1477,1457,1464,1400,1735,1640,1611,1600,1531,1603,1603,1583,1699,1529,1487,1443,1378,1506,1433,1465,1480,1721,1822,1831,1833,1684,1844,1794,1837,1833,1641,1649,1622,1758,1534,1645,1614,1663,1636,1484,1440,1477,1385,1494,1483,1455,1518,1862,1806,1853,1886,1701,1848,1799,1877,1685,1630,1648,1601,1567,1685,1633,1590,1644,1654,1453,1435,1479,1386,1497,1427,1434,1538,1860,1820,1846,1781,1851,1798,1857,1872,1328,961,1760,666,669,1181,694,942,865,712,1379,1162,626,711,1080,1299,911,1259,1384,1273,590,1191,1343,1081,1377,1207,1732,1042,1094,963,1548,1582,1576,1749,1651,1747,1533,1726,1510,1521,1201,785,1277,1553,1521,1017,1004,1014,1022,1356,1091,1029,1101,1314,1830,2030,2019,2020,2022,2011,2023,1971,2012,2029,2026,2012,2006,2013,2004,2010,1972,2019,2026,2022,2000,2013,2001,2017,1966,2013,2035,2036,1996,2004,2021,1993,2007,1965,2043,1944,1902,1903,1878,1894,1924,1843,1879,1890,1898,1877,1891,1818,1867,1833,1887,1921,1711,1653,1665,1671,1663,1657,1661,1605,1791,1653,1680,1665,1622,1669,1640,1620,1632,1602,1453,1420,1423,1420,1437,1399,1394,1554,1526,1497,1475,1543,1331,1578,1494,1642,1416,1495,1471,1664,1420,1482,1561,1630,1439,1281,1487,1474,1977,1715,1491,1665,1593,1577,1533,1579,1716,1544,1574,1620,1651,1750,1632,1596,1525,1666,1545,1555,1566,1554,1548,1584,1519,1388,1643,1463,1720,1558,1651,1534,1713,1636,1632,1753,1753,1471,1662,1926,1871,1705,1730,1877,1938,1922,1952,1972,1947,1932,1917,1917,1820,1837,1869,1950,1893,1846,1868,1830,1807,1785,1776,1758,2009,1972,1963,1961,1918,1923,1899,1896,1966,1972,1896,1900,1856,1806,1821,1822,1783,1981,1979,1993,1970,1961,1939,1931,1917,1946,1958,1789,1755,1745,1731,1754,1755,1741,1898,1846,1774,1805,1821,1782,1795,1779,1816,1757,1467,1453,1421,1439,1408,1430,1390,1559,1958,1944,1935,1974,1949,1923,1903,1899,1907,1895,1899,1970,1945,1926,1911,1910,1882,1953,1875,1924,1755,1504,1533,1616,1589,1605,1571,1497,1787,1796,1807,1789,1730,1780,1738,1721,1721,1637,1332,1292,1302,1404,1282,1339,1356,1536,1646,1651,1641,1665,1704,1663,1633,1589,1765,1487,1463,1529,1569,1559,1487,1459,1499,1692,1615,1600,1610,1656,1544,1656,1359,1348,1334,1302,1242,1212,1217,1299,1899,1896,1866,1888,1901,1880,1864,1882,1961,1889,1875,1838,1882,1889,1888,1871,1850,1786,1400,1409,1359,1414,1503,1481,1455,1572,1711,1683,1692,1740,1643,1618,1577,1533,1188,1518,1558,1593,1632,1765,1691,1699,1715,1581,1442,1486,1500,1434,1326,1430,1423,1688,1453,1525,1508,1453,1545,1502,1522,1449,1681,1484,1535,1485,915,1474,1535,1499,1729,1976,1927,1967,1449,1406,1427,1396,1194,1424,1407,1413,1534,1134,1162,1103,954,1109,1115,1122,1281,1502,1415,1518,2026,1876,1902,1893,1905,1898,1911,1883,1637,1658,1439,1479,1481,1179,945,845,820,901,831,891,806,862,969,955,821,890,968,1001,967,1189,1339,1275,1262,1307,436,518,635,632,224,452,166,1011,1383,688,987,733,1359,1064,942,1300,407,235,438,385,626,1331,1514,1491,1878,1821,1756,1818,1827,1816,1778,1748,1820,1613,1639,1647,1532,1631,1621,1631,1551,1630,1310,1333,1343,1332,1709,1661,1683,1695,1665,1667,1683,1640,1641,1695,1678,1672,1365,1852,1830,1836,1752,1800,1833,1861,1768,1828,1497,1426,1480,1451,1757,1890,1833,1864,1842,1861,1844,1875,1879,1832,1583,1825,950,1029,1133,1189,1521,1999,1999,1954,1950,1956,1949,1886,1885,1900,1956,1937,1935,1937,1921,1906,1953,2016,1669,1691,1748,1823,1811,1764,1658,1614,2016,2056,2048,2033,2056,2038,2048,2051,2057,2049,2054,2037,2041,2049,2044,2041,2054,2001,1875,1915,1831,1844,1834,1848,1842,1921,1895,1911,1864,1855,1848,1858,1848,1866,1966,1847,1542,785,847,753,642,657,681,767,870,667,405,753,841,863,508,504,781,847,904,537,384,807,853,869,529,628,1185,1084,1084,382,850,1156,1027,949,388,1067,1155,1079,713,445,1163,1129,1198,499,1486,1361,1607,1364,1816,1202,1031,1144,1168,1112,1151,1035,1093,1099,1181,1105,1203,1182,1071,1049,1111,1386,1279,1138,1077,1205,1045,1011,1129,1023,1067,984,907,1020,1053,860,822,823,973,1123,427,589,514,534,555,502,527,525,490,528,505,485,487,524,571,519,1588,1465,1488,1504,1532,1498,1517,1514,1465,1061,990,1055,1566,1527,1362,1390,1310,1409,1498,1755,1622,1667,1651,1603,1632,1673,1644,1716,1792,1694,1699,1741,1719,1690,1686,1698,1563,1046,1170,1237,1371,1316,1313,1275,1041,1462,1428,1413,1428,1553,1534,1517,1550,1810,1144,1029,1158,1188,1093,1174,1062,1104,1081,1147,1085,1236,1165,1086,1073,1089,1415,1218,1114,1099,1177,1030,1058,1142,1051,994,1005,912,1051,1043,827,802,842,1098,1009,434,558,518,534,564,499,532,514,511,501,511,502,525,522,580,611,1855,1829,1792,1783,1811,1786,1744,1734,1376,1406,1403,1403,1860,1838,1848,1860,1871,1844,1827,1900,1850,1425,1566,1572,1482,1507,1703,1449,1672,1596,1782,1782,1845,1749,1343,1155,1170,1124,1495,1225,1850,1744,1795,1805,1802,1830,1746,1730,1746,1223,1295,1424,1120,1525,999,1642,1782,1845,1842,1738,1793,1827,1787,1838,1741,1759,1821,1645,1630,1758,1746,1766,1678,1616,1655,1383,1637,1615,1608,1599,1573,1593,1563,1622,1691,1595,1782,1730,1371,1566,1785,1730,1517,1473,993,1162,1141,1130,1170,1083,1090,1102,1148,1107,1177,1162,1122,1102,1060,1093,1023,1190,1166,1183,392,968,1242,1096,963,1018,1193,1149,1155,447,930,1250,1142,964,996,1114,1201,1119,647,844,1188,1124,989,1019,1059,1236,1157,791,737,1129,1153,1080,965,973,1247,1086,936,649,1095,1241,1116,1408,1008,1108,1117,1144,1053,1041,1141,1004,1022,945,948,1050,1054,808,777,860,1269,853,1157,1123,1010,408,1222,1197,1155,922,1121,1136,1170,1178,1266,1109,1151,1240,1103,1306,1157,1154,1219,1152,1273,1098,1169,1207,1177,1346,1093,977,1074,1297,1221,1055,1002,1093,1261,1246,1079,947,1115,1307,1148,1055,997,1127,1501,429,528,666,1420,1619,1799,1849,1870,1802,1513,1087,507,520,512,544,516,1302,1545,1410,1658,1536,1422,1660,1539,1428,1657,1547,1427,1761,1816,1893,1706,1739,1887,1706,1893,1767,1753,1919,1767,1721,1791,1902,1736,1808,1853,1690,1897,1673,1839,1790,1798,1744,1788,1824,1778,1831,1840,1750,1900,1730,1748,1900,1710,1845,1783,1758,1884,1868,1734,1715,1939,1698,1831,1885,1694,1886,1747,1837,1751,1854,1750,1791,1860,1768,1747,1873,1732,1846,1777,1755,1889,1695,1832,1779,1900,1732,1850,1737,1732,1991,1668,1802,1890,1730,1734,1080,1268,1100,1307,1280,1167,1255,1110,589,790,835,931,591,323,831,855,860,532,443,775,912,778,401,625,785,859,729,1337,1095,1073,1142,1141,1137,1162,1057,1144,1075,1182,1118,1218,1145,1102,1054,1100,1493,1537,1560,1333,1125,1101,1203,1047,1047,1107,1027,1001,987,921,1035,1055,827,830,830,900,1528,1386,1669,824,473,556,521,542,560,494,560,532,498,504,478,503,520,523,577,788,1639,1663,1608,1680,1703,1635,1639,1699,1669,1697,1792,1624,1614,1606,1689,1615,606,935,1312,1406,1342,1402,1334,1402,1337,1350,1099,1077,1220,1055,1287,1131,1217,1064,1336,1387,1440,1412,1508,1406,1403,1421,1436,1589,1523,1470,1335,1475,1407,1404,1335,1405,1137,1195,1167,1128,1289,1220,1274,1166,1271,1139,1247,1269,1329,1144,1251,1091,1291,1372,1546,1500,1519,1665,1480,1565,1431,1426,1416,1443,1182,1207,1090,1316,1495,1356,833,1352,1023,841,1206,1675,2031,2032,2016,2002,1998,2010,1956,2007,2031,2022,2007,2014,2018,1988,2002,1987,1788,1404,1354,1588,1421,1121,1118,1121,1121,1130,1121,1416,1551,1459,1619,1565,1761,1715,1746,1769,1773,1573,1473,1566,1604,1581,1570,1561,1480,111,264,2015,2025,1898,1891,1896,1891,1819,1882,1902,1867,1938,1920,1913,1963,1897,1910,1912,1949,1872,1756,1989,1942,1888,1893,1958,1901,1750,1794,1821,1810,1896,1894,1900,1814,1909,1888,1882,1873,1940,1866,1860,1829,1877,1903,1808,1550,1672,1664,1658,1711,1632,1671,1660,1631,1734,1618,1695,1656,1730,1655,1655,1659,1792,360,616,487,713,682,624,621,661,716,722,677,827,868,699,855,511,469,1565,1283,1386,1771,1600,1657,1552,1498,1132,1338,1642,1579,1476,1597,1637,1596,1572,1434,1501,1618,1605,1645,1601,1470,1593,1559,1527,1735,1521,1693,1581,1494,1850,1849,1793,1764,1830,1864,1838,1840,1856,1733,1286,1283,1351,1366,1327,1301,1315,1446,1514,1476,1469,1469,1486,1447,1450,1424,1611,1465,1444,1435,1465,1509,1483,1434,1475,1623,1469,1440,1470,1495,1470,1457,1430,1591,1473,1425,1425,1445,1488,1448,1415,1400,1618,1381,1415,1411,1503,1462,1406,1418,1611,1419,1395,1353,1469,1483,1430,1403,1411,1611,1373,1366,1420,1464,1479,1415,1389,1590,1460,1390,1455,1495,1462,1470,1437,1422,1630,1457,1416,1471,1483,1485,1446,1454,1480,1483,1365,1342,1375,1370,1384,1308,1262,1567,1326,1325,1386,1404,1358,1341,1323,1274,1541,1322,1296,1361,1352,1323,1304,1260,1588,1450,1439,1457,1495,1497,1472,1446,1397,1637,1410,1396,1493,1494,1492,1445,1394,1624,1421,1351,1385,1462,1475,1420,1443,1391,1609,1416,1372,1432,1473,1459,1414,1382,1509,1523,1383,1387,1438,1494,1455,1420,1415,1611,1457,1409,1436,1455,1476,1436,1409,1395,1829,1763,1827,1723,1864,1584,1750,1800,1841,1832,1771,1635,1730,1789,1753,1734,1797,1853,1824,1881,1823,1891,1839,1908,1846,1881,1832,1824,1758,1816,1823,1789,1768,1812,1959,1728,1726,1682,1721,1695,1685,1686,1817,1775,1740,1690,1718,1730,1732,1673,1716,1919,1879,1818,1819,1813,1796,1847,1792,1802,1881,1725,1793,1738,1734,1723,1760,1772,1848,1795,1839,1823,1816,1825,1755,1769,1794,1812,1790,1753,1759,1620,1611,1752,1735,1612,1825,1784,1718,1780,1649,1648,1637,1697,1803,1883,1656,1604,1624,1659,1695,1681,1670,1664,1758,1688,1624,1650,1710,1694,1690,1678,1809,1816,1753,1777,1794,1834,1790,1842,1778,1841,1791,1684,1748,1797,1795,1769,1767,1852,1665,1706,1728,1738,1753,1711,1700,1735,1770,1694,1698,1712,1694,1676,1697,1749,1801,1700,1703,1702,1627,1653,1652,1735,1718,1719,1403,1522,1506,1505,1514,1518,1505,1567,2050,1966,1928,2005,2005,1935,1993,1931,1910,1965,1984,2000,1969,1944,2004,1988,2014,1581,457,32,40,40,319,40,32,40,720,1852,1779,1852,1856,1820,1831,1785,1817,1774,1473,1495,1401,1465,1406,1461,1456,1582,1852,1807,1759,1758,1787,1772,1755,1766,1157,802,40,38,40,301,38,40,38,40,1102,1119,1741,1677,1675,1676,1681,1681,1681,1715,1367,1303,1406,1491,734,1299,1547,1329,1074,1425,1794,1583,1538,40,39,40,38,313,40,39,40,889,1249,1183,1139,1220,1764,1606,1647,1707,1663,1690,1673,1638,1078,40,40,39,551,964,99,386,1593,1874,2026,1635,1644,1632,1643,1646,1681,1725,1734,1689,1767,1710,1766,1726,1699,1687,1677,1737,808,1149,39,1654,1802,1705,1713,1762,1742,1765,1708,1818,1855,1828,1887,1896,1808,1896,1785,1806,1978,1783,1626,1681,1667,1764,1790,1818,1695,1875,1830,1929,1804,1951,1775,1981,1775,1966,1824,1466,1366,1267,1200,1446,1576,1526,1403,1341,1352,1255,1272,1238,1321,1355,1475,1503,618,865,857,1076,1508,1594,879,638,696,857,1565,1644,1685,1238,900,1275,1712,1237,1076,811,919,925,645,731,1020,1316,1288,1215,1252,1390,1348,1384,1288,1666,1778,1757,1773,1746,1754,1687,1776,1714,1776,1758,1772,1740,1784,1789,1783,1729,918,945,913,953,1904,1958,1596,1979,1648,1165,1231,1167,1501,1980,2001,2027,2015,1861,1939,1893,1884,2007,2043,2046,2031,1966,1777,1749,1881,1800,1829,1793,1755,1779,1658,1672,1611,1607,1863,1368,1277,1323,1689,1180,1243,1280,1356,1265,1173,1268,1261,1805,1170,1234,1257,1419,1263,739,921,1710,1576,771,824,1633,1675,841,725,1337,1302,1390,1390,1348,1839,1883,1855,1879,1857,1905,1955,1950,1942,1778,1705,1649,1627,1656,1752,1767,1816,1749,1462,1383,1445,1482,1549,1447,1403,1457,1612,1491,1456,1482,1642,1517,1450,1530,1599,1980,1982,1939,1915,2012,1978,1957,2005,1980,1769,1779,1742,1816,1660,1532,1577,1592,1959,1891,1781,1907,1891,1805,1811,1803,1938,1907,1872,1874,1939,1793,1826,1755,1835,1787,1436,1512,1362,1305,1244,1236,1675,1158,1202,1230,1231,1657,1089,1223,1519,1851,1790,1757,1766,1905,1790,1784,1775,1855,1802,1834,1816,1797,1154,884,805,734,1107,1152,1179,1155,1272,1184,1242,1159,1234,1345,1380,1359,1259,1787,1836,1866,1833,1883,1829,1866,1855,1885,1906,1921,1921,1885,1949,1923,1932,1953,1848,1760,1809,1758,1662,1782,1688,1631,1539,1562,1838,1747,1787,1864,1817,1777,1862,1737,1480,1403,1478,1565,1477,1708,1729,1553,1555,1720,1607,1734,1685,1753,1741,1776,1842,1962,2048,2049,1870,2037,1975,1990,1956,2040,1949,1943,1888,1701,1140,1369,1292,1217,1765,1800,1750,1755,1680,1533,1605,1587,1684,1800,1801,1777,1806,1802,1845,1781,1769,1768,1673,1711,1648,1629,1759,1817,1776,1547,1054,1138,986,1425,1140,562,559,1009,1515,679,1456,689,1340,558,601,502,737,723,729,674,808,960,1163,1206,1035,1480,1357,1331,1422,1558,1417,1336,1573,1557,1518,1477,1460,1497,1594,1523,1415,1517,1566,1379,1333,1465,1548,1533,1381,1485,1433,507,248,193,217,906,492,457,440,1358,2049,2030,2052,2041,2040,2056,2051,2013,2031,1936,1915,1955,1881,1909,1927,1903,1834,1406,1382,1442,1424,1217,1181,1150,1054,1398,1413,1432,1460,1592,1872,1808,1809,1879,1864,1813,1779,1873,1855,1759,1745,1718,1727,1732,1746,1686,1696,1428,1257,1325,1423,1538,1293,1326,1409,1775,1769,1763,1792,1586,1236,1258,1237,1423,1843,1806,1770,1845,1492,1473,1426,1457,1773,2028,2022,2039,2038,2014,2004,1968,1995,1583,1497,1509,1505,1800,1672,1670,1683,1890,1978,1978,1983,2013,1711,1706,1737,1735,2050,2052,2053,2056,1818,1567,1490,525,525,536,541,1221,1408,1417,1343,1078,1434,1400,1543,1205,1474,1576,1641,1440,1627,1643,1851,1666,1887,1716,1254,1275,1287,1382,974,961,1042,945,1230,875,1060,838,938,1133,697,688,1946,1987,1989,1935,1224,1943,1992,1987,1777,1901,1909,1872,1918,2016,2013,1612,1999,1989,1881,1903,1890,1641,1998,1653,2004,2004,1434,1705,1607,1440,1480,1583,1563,1449,1750,1899,1886,1844,1887,1875,1884,1847,1883,1784,1486,1427,1556,1948,1983,1961,2006,1989,1829,1789,1809,1828,1848,1886,1910,1824,1545,1441,1463,1397,1469,1485,1546,1481,1505,1524,1742,1694,1596,1521,1585,1549,1505,1706,1739,1603,1764,1713,1683,1647,1804,1720,1641,1676,1545,1701,1646,1651,1519,1701,1662,1548,1477,1586,1488,1702,1482,1598,1648,1424,1504,1471,1560,1459,1529,1648,1656,1396,1315,1211,1581,1688,1737,1527,1525,1695,1542,1731,1780,1710,1534,1569,1592,1612,1539,1535,1591,1493,1451,1646,1532,1518,1308,1376,1179,1160,1161,1271,1259,1398,1443,1356,1394,1593,1291,1249,1431,1818,1814,1691,1461,1208,1002,990,882,1029,1111,1204,1293,1364,1626,1558,1626,1779,1776,1298,1371,1542,1476,1530,1471,1474,1410,1566,1702,1708,1707,1711,1713,1745,1791,1958,1682,1781,1765,1469,1348,1322,1326,1382,1513,1592,1582,1626,1562,1382,1410,1357,1751,1245,1455,1349,1372,1412,1409,1649,1501,1503,1438,1448,1410,1476,1522,1433,1503,1877,1615,1467,1437,1371,1366,1362,1347,1401,1558,1705,1731,1721,1562,1509,1520,1381,1657,1540,1376,1439,1352,1432,1420,1632,1657,1643,1566,1431,1569,1407,1451,1484,1451,1580,1554,1270,271,689,1589,1316,262,663,1575,1301,262,645,1564,1325,261,615,1575,1336,275,593,1548,1353,272,559,1262,1228,1300,1255,1411,1287,1341,1259,1438,1281,1275,1303,1395,1333,1278,1351,1312,1377,1492,1237,1230,1248,1258,1242,1254,1235,1504,1189,1207,1244,1257,1164,1191,1247,1212,1492,1300,1211,1275,1273,1264,1238,1246,1426,1835,1719,1768,1677,1649,1683,1916,2008,1226,1327,1313,1392,1323,1424,1278,1324,1379,1312,1388,1311,1371,1395,1403,1365,1695,1669,1622,1584,1670,1582,1574,1522,1283,1395,1355,1394,1529,1491,1516,1510,1649,1853,1719,1602,1627,1605,1570,1587,1471,1313,1363,1365,1388,1514,1505,1546,1473,1601,1814,1784,1633,1599,1590,1613,1613,1501,1350,1335,1368,1403,1498,1508,1541,1426,1593,1762,1839,1650,1588,1581,1630,1602,1513,1401,1298,1404,1401,1488,1533,1545,1404,1579,1711,1738,1244,1233,1067,937,990,1172,1043,1167,1121,1264,1258,1105,887,1012,998,1153,1664,1246,1258,1089,932,957,1155,1057,1133,1137,1274,1272,1142,916,993,1054,1116,1825,1949,1905,1949,1962,1984,1918,1964,1880,1853,1784,1795,1894,1891,1962,1931,1938,1463,1958,1957,1946,1977,1991,1979,1925,1964,1646,1130,1156,1166,1328,1145,1130,1144,1181,1836,1762,1777,1776,1774,1782,1808,1758,1724,1780,1743,1795,1768,1630,1810,2010,1945,1864,1872,1913,1949,1349,877,1018,1942,1957,2003,1971,1937,1994,1979,1970,2012,1962,1974,1976,1950,1986,1949,2000,1964,1687,1558,1592,1548,1579,1551,1571,1576,1748,1781,1593,1685,1576,1742,1678,1710,1682,1681,1607,1471,1589,1436,1784,1616,1745,1617,1792,1657,1731,1727,1824,1781,1764,1849,1800,1788,1614,1677,1604,1817,1685,1810,1628,1763,1576,1619,1589,1567,1700,1608,1778,1682,1773,1665,1822,1755,1813,1556,1650,1685,1730,1781,1809,1829,1738,1848,1793,1840,1784,1789,1690,1741,1698,1636,1543,1646,1711,1675,1820,1743,1870,1711,1758,1652,1837,1702,1788,1336,1906,1882,1553,1871,1957,1870,1760,1565,1901,2011,2005,1665,1809,1469,1365,1145,1228,1189,1137,1740,1625,1576,1529,1472,1538,1451,1525,1614,1261,1059,798,1005,1299,1056,996,1038,1052,1484,1833,1807,1883,1753,1921,1769,1898,1805,1829,1669,1664,1728,1615,1771,1743,1682,1888,1838,1785,1871,1802,1855,1800,1876,1789,1852,1686,1663,1791,1608,1795,1730,1697,1864,1749,1888,1853,1880,1852,1865,1885,1830,1956,1946,1924,1999,1880,1979,1961,2051,1925,1938,1764,1702,1794,1772,1878,1818,1815,1740,1376,1461,1594,1344,1264,1709,1556,1694,1248,1141,1371,1378,1067,984,339,340,1438,1264,1319,1282,1452,1348,1287,1356,1301,1439,1359,1285,1394,1261,1423,1369,1293,1380,1341,1435,1641,977,1565,1385,1909,1929,1991,2047,2025,2006,1996,1925,1989,1623,1558,1518,1494,1725,1580,1755,1734,1691,1740,1778,1590,1762,1528,1623,1668,1666,1619,1812,1922,1885,1776,1595,1761,1880,1915,1921,1823,1639,1794,1852,1928,1810,1757,1639,1925,1915,1896,1850,1586,1852,1916,1928,1941,1892,1634,1763,1873,1877,1864,1733,1137,974,1013,992,1495,1496,1626,1565,1648,1634,1702,1630,1596,1659,1777,1666,1730,1738,1602,1700,1613,1642,1665,1725,1920,1718,1746,1725,1657,1783,1695,1599,1768,1632,1810,1625,1897,1922,1694,1214,1953,1897,1870,1898,1946,1919,1873,1680,1758,1639,1674,1833,1944,1881,1878,1928,1891,2029,1906,1948,1951,1914,1800,1768,1776,1822,1920,1950,1875,1876,1918,1878,1885,1857,1563,1359,1402,1508,1617,1639,1602,1633,1917,1737,1782,1749,1778,1716,1783,1779,1758,1776,1763,1726,538,547,536,1169,1071,993,1380,1233,1256,1128,1744,1647,1631,1583,1771,1531,1650,1722,1466,1582,1589,1447,1280,1380,1603,1696,1707,1650,1746,1699,1608,1601,1759,1503,1623,1457,1524,1680,1580,1658,1573,1664,1570,1614,1608,1550,1648,1516,1621,1466,1613,1538,1509,1652,1468,1562,1642,1553,1651,1572,1495,1825,1809,1837,1888,1854,1849,1860,1819,1897,1817,1823,1860,1916,1891,1855,1858,1868,1981,1997,1954,1894,1902,1888,1943,1926,1920,1921,1917,1903,1853,1865,1895,1880,1849,1752,1625,1628,1799,1624,1616,1625,1627,1598,1633,1610,1591,1745,1649,1642,1665,1649,1641,1635,1644,1758,1641,1652,1636,1645,1627,1635,1651,1655,1941,1866,1878,1832,1879,1868,1844,1873,1905,1837,1856,1829,1824,1839,1849,1844,1854,1959,1871,1839,1861,1853,1862,1840,1864,1892,1461,1410,1442,1377,1278,1473,1438,1587,1369,1330,1537,1474,1445,1409,1964,1888,1821,1804,1810,1858,1832,1909,1939,1621,1785,1709,1665,1699,1659,1790,1606,1711,1657,1712,1726,1762,1731,1771,1686,1678,1613,1873,1837,1850,1809,1556,1887,1852,1861,1828,1893,1609,1769,1745,1768,1822,1733,1636,1779,1689,1720,1807,1599,1789,1744,1760,1729,1804,1635,1714,1670,1623,1706,1700,1591,1462,1510,1503,1579,1622,1553,1578,1660,1537,1485,1650,1673,1545,1575,1597,1534,1568,1533,1582,1865,1783,1784,1735,1765,1779,1571,1424,1658,1750,1802,1791,1704,1782,1563,1488,1703,1700,1797,1462,1368,1503,1754,1820,1472,1462,1609,1440,1550,1548,1443,1679,1509,1465,1534,1515,1488,1590,1447,1474,1552,1476,1604,1469,1502,1496,1661,1541,1451,1537,1363,1476,1430,1533,1900,1856,1840,1780,1816,1810,1761,1725,1709,1582,1798,1694,1762,1789,1607,1775,1780,1623,1973,2029,2019,2016,2021,2000,2006,1703,1748,1748,1618,1750,1746,1775,1604,1752,1759,1776,1680,1815,1646,1858,1688,1649,1674,1645,1713,1710,1833,1636,1687,1661,1796,1685,1733,1663,1710,1732,1775,1508,1427,1668,1752,1669,1729,1752,1575,1473,1579,1515,1498,1411,1518,1504,1556,1660,1788,1681,1766,1773,1663,1680,1743,1629,1609,1701,1623,1706,1603,1616,1635,1723,1641,1640,1593,1706,1640,1645,1647,1639,1717,1626,1651,1621,1689,1620,1640,1624,1718,1633,1639,1647,1672,1679,1638,1616,1601,1761,1643,1707,1715,1790,1628,1632,1632,1745,1616,1621,1705,1688,1798,1598,1601,1642,1705,1674,1886,1745,1666,1639,1790,1777,1637,1731,1819,1802,1696,1929,1856,1874,1950,2003,1949,1938,1958,1998,1707,1863,1944,1981,2002,2003,2006,1812,1954,1816,1808,1921,2007,2029,2005,2000,1975,1915,1942,1915,1868,1909,1917,1949,1948,1954,1802,1877,1901,1892,1857,1722,1597,1627,1956,1774,1810,1551,1623,1627,1625,1558,1703,1125,931,1097,1095,1151,1169,1180,1245,1246,1268,1159,1326,1170,1293,1149,1341,1289,1682,1762,1798,1647,1736,1705,1755,1717,1675,1708,1691,1750,1644,1673,1665,1671,1662,1701,1632,1636,1663,1750,1693,1650,1638,1726,1667,1675,1651,1778,1727,1704,1749,1694,1707,1720,1738,1689,1865,1731,1675,1741,1883,2003,1977,2052,2047,2038,2048,2018,2028,2040,2051,2039,2047,2054,2052,2028,2044,2039,1825,1851,1870,1916,1922,1895,1863,1893,1845,1626,1682,1545,1771,1755,1639,1526,1714,1698,1645,1682,1721,1586,1678,1785,1744,1609,1791,1556,1541,1594,1439,1765,1867,1776,1727,1664,1648,1853,1839,1868,1830,1801,1775,1671,1816,1859,1778,1654,2000,1983,2009,1905,1905,1930,1589,1670,1743,1728,1722,1764,1800,1738,1654,1770,1691,1680,1685,1683,1636,1525,1515,1498,1540,1515,1522,1491,1567,1512,1516,1545,1501,1544,1526,1520,1484,1243,1045,851,1046,1070,1500,1441,1348,1332,1389,1387,1381,1416,1627,1639,1748,1643,1623,1638,1616,1672,1691,1781,1719,1667,1734,1778,1756,1735,1700,1784,1615,1710,1650,1357,1359,1586,1666,1688,1914,1893,1908,1884,1880,1905,1887,1919,1961,1907,1537,1593,1495,1474,1453,1500,1901,1948,1911,1768,1598,1484,1577,1677,1900,1943,1652,1665,1632,1657,1627,1610,1694,1741,1712,1263,1606,1735,1693,1723,1731,1385,1337,1572,1259,1402,1542,1714,1764,1750,1238,1440,1483,1297,1406,1387,1342,1393,1348,1329,1598,1375,1353,1311,1350,1310,1334,1286,1472,1340,1505,1583,1563,1669,1658,1294,1142,1539,1211,1383,1528,1624,1581,1416,1172,1453,1508,1433,1320,1327,1241,1161,1425,1466,1660,1312,1688,1750,1753,1703,1718,1458,1547,1602,1384,1621,1572,1717,1691,1428,1224,1651,1292,1484,1470,1668,1610,1413,1286,1421,1672,1301,1462,1568,1689,1760,1735,1367,1709,1537,1432,1533,1475,1518,1444,1513,1446,1889,1762,1732,1739,1545,97,341,1151,670,582,641,544,570,629,647,579,1249,833,1104,1418,1411,1427,1400,1418,1640,1564,1687,1565,1570,1543,1685,1810,1486,1030,1117,1207,1247,1320,1230,1282,1303,1443,1578,1602,1565,1504,1631,1684,1482,1324,1463,1267,541,25,30,25,778,582,1392,605,1631,1590,1690,1606,1652,1122,1677,1519,1557,1534,1819,1916,1934,1917,1957,1898,1733,1456,1511,1481,1124,944,1044,1273,1363,1429,1478,1476,1498,1432,1675,1750,1650,1583,1573,1521,1567,1602,1507,1573,1854,2053,2048,2031,1976,1853,2020,2007,1874,1766,1941,1892,1971,1995,2034,2000,2036,1997,2017,1984,2037,2053,1928,1726,1938,2016,2015,1993,1837,1662,1498,1228,1205,1197,1681,1998,1830,1730,1801,1895,1872,1752,1777,1752,1956,2034,2027,1993,2029,2055,1975,2038,1755,1538,1541,1548,1512,1528,1558,1516,1449,1385,1336,1362,1308,1286,1315,1335,1737,2002,2006,1994,1982,1995,1952,1932,1995,1988,1768,1721,1649,1678,1672,1689,844,290,736,1304,1304,1249,968,1025,896,1065,1341,1671,1656,1612,1737,1714,1623,1520,1623,1552,1604,1555,1581,1449,1502,1198,1257,1080,1242,1266,1278,1237,1412,1392,1586,1562,1579,1442,1403,1424,1077,976,1289,1591,1366,616,1296,1290,1416,1524,1502,1489,1386,1166,1457,1565,1815,1933,1592,1332,1279,1205,1520,1534,1657,1603,1651,1570,1613,1489,1565,1502,1373,1299,1518,1541,1507,1380,1363,1376,1379,1375,1009,482,641,469,1078,1425,1582,1528,1492,1439,1529,1539,1510,1379,1262,1142,1244,1330,1425,1513,1248,1048,920,891,1534,1755,1890,1777,1708,1570,1195,1062,1298,1551,1584,1563,1574,1583,1569,1565,1805,1743,1830,1726,1865,1762,1905,1750,1610,1403,1426,1365,1413,1424,1570,1695,1821,1989,1905,1923,1936,1989,1905,1923,1960,1926,1700,1561,988,738,968,873,1163,1598,1637,1660,1685,1465,1623,1294,1276,1275,888,523,907,799,784,596,1104,1418,1036,539,645,515,1344,1798,1440,1082,1115,1022,1292,1377,1291,1083,990,933,1338,1441,1481,1441,1433,1463,1633,1679,1774,1651,1853,1897,1729,1559,1245,1032,1249,1160,1195,994,1079,863,1188,996,1246,1206,940,489,633,621,666,522,610,613,645,526,630,600,656,552,660,606,632,428,563,564,1436,1888,1462,1036,1149,1033,1147,1034,1176,1116,1561,1770,1606,1738,1689,1693,1662,1705,1379,1195,1507,1669,1697,1700,1836,1854,905,271,379,260,325,201,358,220,321,52,276,25,210,141,297,317,349,243,995,1502,1537,1677,1340,1111,1070,1117,1144,1183,1444,1478,1506,1442,1775,1852,1833,1691,1671,1353,1655,1623,1563,1381,1772,1960,2032,2032,1995,1937,1976,1950,1951,1991,1960,1992,1563,1263,1265,1794,1548,1412,1373,1566,1456,1488,1504,1467,1475,1456,1484,1553,1486,1515,1243,1146,1293,1283,1377,1152,1309,1192,1124,1067,1265,1574,1529,1483,1520,1531,1525,1511,1525,1497,1028,792,597,610,757,656,742,649,632,574,612,743,696,689,708,645,757,683,763,785,748,649,621,554,661,647,355,328,468,465,1766,2041,1887,1733,1734,1724,1683,1675,1660,1716,1702,1693,1708,1703,1695,1838,2048,1715,1771,1768,1663,1642,1729,1733,1729,1734,1453,983,1004,1746,1837,1808,1671,1823,1713,1481,1474,1487,1480,1457,1478,1493,1491,1220,595,566,603,648,606,530,601,618,569,599,582,602,567,509,293,405,564,452,270,498,614,326,423,419,526,1992,1917,1665,1665,1668,1669,1676,1657,1691,1697,1669,1691,1692,2048,1599,1723,1774,1673,1694,1685,1691,1079,718,758,1674,1894,1713,1651,1707,1810,1593,1523,1469,1529,1485,1488,1497,1513,1499,1487,1508,1500,1493,1476,1527,1487,1508,1512,1498,1475,1502,634,302,554,555,672,519,575,695,588,321,519,432,419,478,465,337,374,589,639,559,650,703,527,670,566,574,643,418,537,318,511,471,326,323,422,488,446,384,560,407,577,501,544,483,588,444,367,497,369,613,428,361,385,532,334,452,526,214,343,731,1987,2029,2038,1998,2011,1972,1693,1691,1693,1713,1703,1696,1717,1731,1663,1686,1686,1671,1674,1668,1713,1696,1691,1705,1707,1704,1685,1686,1691,1702,1689,1679,1729,2048,2048,2009,1640,1685,1737,1755,1665,1702,1670,1646,1669,1609,1705,1772,1754,1675,1743,1765,1667,1688,1715,1687,1497,1021,1065,1044,1250,1676,1598,1717,1635,1743,1445,1297,657,1743,1828,1848,1837,1849,1504,1535,1476,1507,1528,1499,1478,1478,1515,1482,1489,797,585,336,479,461,428,538,383,542,611,589,495,545,628,540,288,320,121,224,511,649,528,535,375,569,293,520,526,117,385,765,2046,2001,1829,1712,1706,1704,1707,1683,1696,1676,1690,1683,1740,1688,1686,1785,2048,1804,1684,1735,1727,1745,1670,1694,1754,1804,1624,1632,1017,1151,1404,1406,1784,1739,1544,1580,1519,1505,1491,1477,1494,1483,1493,1463,1490,1027,373,357,301,518,615,326,274,247,450,232,397,399,479,174,116,286,271,361,254,412,410,397,431,596,521,493,318,526,503,1258,2011,2031,1800,1709,1663,1692,1681,1689,1702,1660,1715,1707,1708,1708,1709,1873,2048,1847,1818,1766,1764,1753,1627,1882,1793,1744,1825,1847,1246,835,982,1508,1408,1686,1645,1787,1665,1481,1502,1487,1504,1479,1473,356,452,311,458,364,300,321,492,429,368,317,495,284,201,313,442,671,1976,1884,1697,1707,1680,1665,1697,1672,1720,1880,1889,1741,1676,1710,1710,1810,1848,1077,1272,1300,1672,1615,1598,1511,1479,1490,1481,1468,1522,1501,1476,1548,632,638,588,592,522,585,593,597,568,536,533,643,660,576,557,533,555,498,614,525,385,439,530,540,369,286,628,526,1954,2022,1909,1726,1668,1674,1669,1680,1707,1684,1714,1692,1674,1678,1697,2048,1971,1777,1737,1660,1739,1783,1810,1765,1784,1595,858,819,899,1260,1294,1213,1439,1206,1686,1653,1590,1531,1497,1470,1504,1504,1491,1497,1493,1484,1482,1518,1496,1504,1496,1487,1553,1485,425,404,426,286,251,470,436,328,348,448,483,502,370,385,388,361,488,471,382,327,179,163,373,242,314,114,89,307,404,322,315,269,397,279,295,433,325,306,338,368,363,502,234,297,389,355,373,391,368,402,404,637,1990,1924,1960,1973,1950,1671,1655,1684,1669,1685,1680,1663,1668,1722,1713,1676,1672,1662,1680,1667,1673,1666,1683,1650,1676,1681,1703,1675,2048,2048,1829,1626,1627,1636,1640,1601,1837,1622,1729,1696,1704,1634,1618,1634,1681,1662,1717,1456,731,871,1221,1617,1654,1595,1460,1576,1875,1820,1812,1747,1612,1435,1491,1454,1485,1484,1497,1482,1500,1486,1499,1475,1502,1493,1475,1464,1504,657,494,566,635,600,628,390,494,296,350,403,346,353,416,581,436,419,422,528,544,642,652,573,458,457,484,524,583,636,561,664,609,242,152,455,593,704,498,612,597,634,663,627,556,639,585,497,623,606,562,1315,1996,1980,1965,1938,1692,1688,1685,1668,1667,1694,1694,1681,1706,1700,1700,1718,1722,1677,1705,1696,1695,1714,1679,1687,1728,1840,2048,2048,1751,1720,1680,1774,1777,1783,1771,1757,1806,1800,1743,1773,1755,1765,1673,1774,1796,1242,966,993,939,1027,1040,1116,1325,1142,1102,1052,929,1178,1774,1714,1796,1836,1609,1643,1671,1491,1496,1496,1526,1487,1510,1501,1487,1496,1503,1503,1504,1490,1484,1483,1462,1471,1473,1500,1436,621,657,646,607,566,535,549,652,604,539,626,528,519,612,545,464,427,431,562,449,705,486,570,603,459,425,505,517,532,592,291,538,559,483,619,568,341,379,534,627,510,509,547,397,362,466,520,296,384,442,181,312,337,493,456,502,450,215,531,519,362,226,350,507,436,335,238,496,582,629,2056,2048,2050,2054,2048,2056,1840,1711,1734,1733,1748,1734,1688,1746,1719,1722,1702,1707,1741,1726,1756,1736,1739,1716,1725,1724,1741,1728,1712,1744,1740,1734,1733,1752,1722,1751,1707,1713,1960,2048,2048,2048,1996,1724,1804,1838,1858,1875,1859,1778,1834,1718,1739,1831,1800,1794,1813,1810,1749,1788,1855,1801,1831,1855,1827,1831,1851,1853,1837,1862,1849,1712,1811,1164,849,886,789,711,1252,1372,1509,1082,1353,1409,1475,977,878,822,1231,1252,1587,1134,1769,1827,1799,1674,1700,1653,1609,1553,1652,1531,1575,1489,1484,1533,1508,1548,1542,1508,1520,1512,1495,1499,1526,1531,1508,1551,1468,1491,1510,1505,1513,1547,1491,1493,1488,1516,1495,1483,1476,1509,1517,845,625,671,587,543,580,345,599,765,622,660,560,631,702,519,561,627,689,658,680,685,571,654,680,670,587,725,613,582,687,501,300,438,577,571,665,510,622,713,655,493,528,552,405,626,527,606,218,299,201,439,534,366,125,247,535,297,551,546,499,687,616,544,641,553,570,682,543,564,628,515,453,476,672,426,420,512,754,609,550,562,517,442,523,592,426,482,426,394,590,583,570,532,613,676,587,1430,2041,1998,2001,1994,1959,1966,2027,1891,1686,1694,1650,1678,1705,1703,1699,1689,1696,1731,1701,1706,1672,1714,1695,1702,1701,1685,1673,1714,1712,1708,1694,1701,1690,1695,1710,1695,1710,1685,1726,1680,1716,1697,1711,1697,1685,1704,1703,1651,1658,1979,2048,2048,2048,1952,1712,1693,1780,1739,1719,1741,1751,1629,1666,1700,1705,1743,1768,1756,1777,1800,1775,1723,1711,1776,1744,1722,1741,1730,1732,1827,1718,1818,1674,1734,1149,998,959,1002,1132,1013,1044,1025,1024,809,740,645,674,720,749,808,1028,983,837,844,903,932,782,731,896,731,963,722,759,515,391,621,821,661,1060,1659,773,1586,1762,1657,1709,1791,1850,1831,1711,1702,1639,1558,1616,1619,1498,1508,1522,1510,1502,1472,1528,1497,1497,1536,1522,1494,1489,1479,1519,1503,1495,1485,1512,1506,1496,1511,1490,1500,1514,1504,1528,1516,1515,1537,1540,1489,1491,1473,1512,1527,1480,1533,1522,1489,1499,1519,1504,1493,1501,1512,1551,1487,1520,1143,698,642,762,647,774,632,748,491,627,768,759,707,714,663,482,507,667,699,700,739,646,735,657,655,417,481,708,686,635,448,693,741,658,730,704,514,676,563,738,654,638,644,628,528,332,544,676,410,714,615,620,696,562,648,556,523,785,632,688,607,610,671,599,612,653,628,522,501,494,529,595,631,774,581,700,552,662,647,658,654,762,705,753,655,696,781,734,718,627,764,648,701,665,678,721,648,682,642,607,617,248,579,627,592,543,649,575,532,576,729,445,591,310,616,575,603,693,504,729,690,709,694,647,599,620,664,430,635,537,504,587,736,600,659,687,567,466,399,453,588,661,645,646,670,644,1317,1983,1986,1973,1952,1981,1996,2027,1970,2015,2015,2017,2054,1986,1723,1733,1714,1714,1700,1681,1685,1716,1681,1693,1671,1676,1709,1719,1711,1713,1700,1701,1685,1679,1697,1696,1686,1676,1689,1744,1722,1694,1676,1688,1713,1703,1720,1743,1736,1731,1716,1748,1731,1698,1703,1688,1690,1683,1695,1682,1687,1727,1659,1709,1717,1721,1682,1684,1687,1748,1729,1740,1730,1716,1727,1747,2048,2048,2048,2048,2048,2048,1686,1569,1707,1764,1742,1737,1766,1696,1741,1823,1694,1673,1730,1676,1761,1726,1660,1774,1740,1688,1630,1716,1742,1722,1749,1802,1702,1697,1722,1726,1717,1727,1626,1714,1802,1763,1756,1716,1624,1669,1770,1739,1798,1703,1066,1011,1030,938,1020,1048,962,984,976,909,1011,1570,1379,1595,1697,1533,1542,1516,1636,1732,1508,1743,1489,1469,1534,1400,1226,1226,1507,1085,1419,1643,1564,1311,1402,1498,1230,1286,1358,1399,1505,1585,1461,1483,1662,1594,1678,1519,1317,1489,1592,1561,1591,1369,1538,1511,1538,1859,1220,1822,1884,1832,1935,1874,1867,1888,1807,1765,1863,1805,1880,1494,1516,1470,1491,1490,1487,1492,1488,1495,1494,1225,492,486,510,529,448,462,501,430,453,243,516,498,498,435,494,605,241,403,393,346,445,351,272,385,318,296,514,128,305,382,480,1175,1955,2001,1849,1684,1692,1699,1713,1709,1696,1676,1711,1692,1687,1675,1664,1674,1657,1982,2054,1721,1767,1715,1751,1805,1659,1811,1755,1784,1738,1694,1656,809,727,864,1518,1505,1425,1118,1526,1641,1740,1603,1490,1500,1493,1489,1439,1510,1493,1494,1493,1497,594,548,503,484,383,629,591,582,521,629,499,429,467,364,372,359,474,356,371,449,394,362,561,453,334,515,336,281,2001,2032,1890,1681,1706,1708,1715,1744,1723,1687,1686,1708,1687,1712,1695,1878,2048,1643,1715,1843,1859,1787,1789,1749,1809,1803,1760,1800,1564,599,845,1570,1540,1716,1338,1586,1699,1698,1565,1608,1591,1503,1486,1483,1478,1488,1499,1489,1483,1468,1479,1472,1496,1458,1453,1475,1489,1486,1484,1486,1472,1458,1463,1479,1496,1477,1463,1493,1486,1484,1477,1495,1490,1497,1481,1469,1490,844,646,641,595,640,737,625,549,536,630,569,671,601,622,585,612,610,618,584,526,647,693,590,588,560,661,602,582,610,598,488,421,545,696,621,517,531,503,511,537,544,506,522,640,582,411,394,226,294,470,350,461,402,422,433,513,711,530,330,224,201,391,143,256,354,458,482,515,469,498,645,508,595,560,600,606,559,523,490,412,614,471,562,558,525,235,552,448,552,422,300,220,371,655,620,598,541,434,423,634,558,469,527,640,625,544,556,431,579,967,2001,2005,1973,1992,1979,1938,1963,1960,2023,1826,1708,1718,1722,1705,1707,1711,1706,1691,1698,1673,1710,1667,1706,1714,1709,1685,1684,1684,1698,1700,1625,1681,1657,1672,1677,1684,1692,1692,1674,1674,1662,1688,1690,1689,1678,1689,1641,1695,1682,1694,1691,1677,1672,1673,1666,1682,2048,2048,2048,2048,1942,1738,1724,1710,1733,1686,1648,1730,1779,1765,1758,1751,1676,1716,1706,1583,1732,1637,1689,1751,1709,1719,1733,1757,1741,1672,1629,1681,1682,1663,1812,1674,1680,1069,935,914,837,797,922,944,873,1010,796,1157,1178,908,1180,973,1483,1072,1187,1240,1248,1299,1199,1388,1196,1468,1446,1533,1031,1150,1340,1118,837,828,827,735,377,547,1093,1027,1106,1050,1241,824,632,556,904,1180,1449,1536,1830,1861,1860,1879,1941,1946,1901,1920,1688,1572,1476,1484,1501,1493,1490,1501,1452,1492,1483,1490,1500,1480,411,353,301,580,511,367,476,611,518,302,236,244,243,323,328,457,499,455,473,353,274,406,428,332,441,306,382,357,322,350,360,435,371,290,639,627,606,1826,1984,2017,1904,1688,1684,1662,1698,1688,1713,1710,1682,1673,1702,1714,1710,1687,1693,1712,1746,2048,1969,1667,1687,1719,1772,1807,1816,1723,1742,1765,1798,1722,1769,1623,681,856,1396,1629,1443,657,829,1058,1598,1870,1799,1645,1591,1492,1488,1507,1483,1513,1524,1482,597,593,636,615,483,511,541,434,424,452,464,393,247,325,324,506,432,247,462,527,258,315,570,573,1686,1988,1819,1706,1700,1721,1709,1696,1675,1680,1690,1702,1707,1958,1893,1760,1850,1761,1787,1685,1747,1760,1832,1276,792,882,1623,1603,1591,1368,1583,1683,1479,1479,1337,1497,1488,1472,1508,1459,1484,1471,1474,1497,1503,1488,1490,1494,1072,525,508,573,610,503,607,425,512,643,498,454,602,586,455,326,461,439,393,449,465,517,362,538,245,238,298,624,669,645,601,645,520,536,574,308,518,492,488,643,578,414,519,524,737,2002,1995,1993,1881,1689,1673,1736,1691,1682,1690,1679,1661,1741,1713,1655,1680,1713,1721,1709,1710,1731,1729,1710,1978,2048,1900,1703,1741,1715,1731,1713,1667,1714,1660,1672,1783,1807,1681,1760,1787,1643,951,826,916,1586,1647,1393,1560,1511,1552,1618,1874,1781,1660,1518,1395,1510,1521,1503,1469,1479,1485,1492,1466,1465,1482,1489,1495,1464,1476,1286,474,539,590,581,441,412,581,603,584,310,463,452,446,372,382,449,430,511,505,437,481,556,433,356,256,203,218,506,430,282,193,84,215,416,272,183,404,552,337,497,381,337,266,395,298,542,827,1937,1896,1968,2000,1697,1681,1693,1679,1691,1673,1718,1712,1675,1658,1677,1671,1704,1701,1653,1673,1687,1672,1682,1665,1773,2048,2048,1826,1710,1704,1765,1733,1776,1751,1665,1712,1708,1738,1605,1661,1756,1694,1768,1550,721,915,769,1481,1403,1335,1374,1368,987,1452,1412,1788,1696,1681,1620,1638,1474,1570,1503,1506,1512,1518,1464,1466,1497,1482,1497,1504,1511,1475,1518,1496,1498,1423,1469,1514,1500,1537,816,544,653,410,408,551,458,584,600,546,533,403,544,546,84,518,623,507,456,407,337,224,258,201,442,568,556,529,579,513,493,409,374,417,537,511,604,470,503,457,351,291,385,165,149,384,545,574,615,353,342,417,488,357,358,295,144,434,399,419,420,413,475,358,395,473,439,481,545,448,487,2056,2020,2049,2005,2025,2043,1676,1645,1670,1705,1681,1710,1720,1683,1701,1673,1688,1678,1700,1708,1713,1700,1677,1664,1677,1694,1720,1702,1686,1698,1689,1651,1697,1702,1695,1719,1696,1802,2048,2048,2048,1819,1595,1727,1759,1729,1791,1733,1704,1695,1684,1781,1675,1787,1683,1675,1721,1737,1839,1705,1691,1714,1707,1708,1725,1876,1779,1282,860,781,762,625,823,957,863,706,899,1015,900,803,642,502,664,282,771,1240,1066,778,1583,1684,1724,1764,1768,1800,1608,1659,1521,1477,1479,1473,1494,1476,1486,1474,1472,914,524,494,559,276,446,466,359,479,560,438,462,385,336,319,302,537,418,553,612,522,533,455,642,494,528,524,495,560,1955,2012,1922,1695,1682,1700,1654,1698,1694,1715,1735,1688,1694,1674,1710,1953,1974,1716,1740,1722,1797,1807,1801,1743,1768,1767,1601,882,848,940,1084,937,1391,1638,1662,1614,1564,1612,1517,1516,1506,1494,1472,1495,1478,1498,1489,1467,1474,1491,1487,1496,1486,1486,1347,600,677,539,590,623,632,591,611,653,472,622,601,534,604,517,505,573,530,558,527,533,637,422,492,590,441,452,410,588,515,552,215,485,435,514,485,460,605,387,615,594,586,588,503,331,542,403,628,729,444,495,559,617,584,699,2053,2033,2031,2009,1952,1709,1702,1728,1706,1705,1723,1698,1678,1678,1693,1707,1700,1716,1718,1697,1686,1709,1695,1665,1647,1714,1699,1708,1717,2048,2048,1944,1713,1791,1663,1729,1695,1770,1703,1844,1811,1770,1738,1717,1687,1774,1792,1805,1370,733,776,813,663,1368,1750,1424,1290,1733,1801,1545,1349,1252,1850,1840,1791,1756,1685,1628,1369,1569,1479,1489,1478,1479,1476,1492,1467,1477,1495,1497,1460,1492,1492,1502,1513,1508,1493,1499,1485,1495,1314,487,109,259,211,484,532,472,480,461,488,600,613,200,453,405,386,354,246,573,586,521,317,400,156,490,251,238,560,390,620,561,530,420,538,540,276,246,571,369,525,594,556,536,461,204,126,423,342,412,528,461,632,582,550,611,550,527,506,408,297,445,464,240,141,436,371,511,294,414,503,1756,2048,1992,2030,2049,1972,1677,1701,1701,1676,1644,1693,1668,1643,1667,1697,1690,1668,1687,1697,1693,1693,1709,1720,1671,1680,1690,1703,1684,1694,1729,1708,1694,1696,1653,1699,1936,2048,2048,1985,1642,1779,1765,1692,1747,1642,1742,1751,1697,1753,1742,1799,1779,1833,1691,1735,1725,1643,1758,1731,1651,1583,1730,1091,922,820,778,818,737,746,827,913,945,1115,1050,1056,799,843,840,1085,1122,972,1085,1061,1005,1026,1025,953,391,213,1006,1283,1628,1801,1837,1831,1844,1722,1528,1518,1535,1516,1485,1492,1492,1512,1497,1476,1520,1521,572,319,233,266,360,501,353,428,499,446,445,553,336,351,422,377,356,288,403,276,364,433,399,413,366,323,194,298,257,273,484,475,268,243,318,652,2017,1961,2030,1686,1686,1705,1685,1674,1686,1681,1696,1668,1694,1690,1673,1672,1687,1676,1875,2048,1913,1738,1802,1732,1633,1782,1715,1733,1733,1770,1707,1673,1671,1420,843,874,1475,1671,1511,1861,1885,1826,1525,1553,1489,1506,1500,1501,1495,1502,1511,1491,1499,1497,1492,1502,1511,1527,1490,1487,1493,1502,1502,1499,1481,1503,1507,1486,1475,1515,1523,1492,1481,1533,1504,1461,1481,1043,423,550,558,331,585,622,560,646,567,672,516,471,475,571,500,512,499,582,619,625,654,558,510,552,438,486,537,639,592,328,475,467,477,585,465,483,490,496,627,566,443,659,318,477,356,355,435,403,386,288,440,481,243,566,285,591,576,586,297,569,585,619,588,574,542,453,538,489,479,515,479,494,417,329,536,475,472,366,444,420,494,590,341,481,655,445,374,358,358,616,412,397,167,264,303,482,466,351,461,324,224,367,400,381,343,314,443,297,351,514,293,348,1909,2002,2040,1997,1970,2032,2007,2014,2052,2042,1728,1745,1739,1734,1702,1690,1693,1705,1688,1685,1680,1700,1692,1722,1693,1727,1712,1718,1703,1702,1690,1695,1710,1736,1718,1690,1682,1649,1676,1680,1700,1694,1650,1664,1670,1671,1696,1716,1715,1744,1761,1726,1745,1679,1665,1705,1709,1694,1659,1682,1663,2048,2048,2048,2048,2048,1911,1736,1720,1782,1724,1669,1648,1706,1601,1676,1751,1729,1677,1805,1737,1688,1751,1735,1709,1717,1650,1633,1584,1761,1779,1606,1660,1703,1603,1677,1672,1732,1823,1687,1725,1772,1605,1613,1593,811,854,748,806,878,681,814,779,1007,1021,1075,1094,1021,542,772,817,917,1023,721,797,857,885,758,703,749,674,891,925,883,940,1181,1262,1200,1109,1109,1163,1574,1376,1846,1843,1801,1886,1842,1842,1848,1872,1692,1599,1577,1561,1536,1520,1501,1515,1533,1508,1497,1493,1512,1506,1523,1464,1499,1250,557,725,699,510,632,549,638,525,500,452,433,699,743,480,814,660,641,661,535,748,698,495,718,648,579,515,594,605,733,674,471,546,609,235,307,352,548,631,608,602,605,546,523,481,617,466,1953,2035,2050,2044,1802,1702,1743,1728,1732,1725,1736,1737,1728,1723,1768,1730,1694,1709,1721,1684,1690,1727,1731,1725,1726,1973,2048,2048,1794,1813,1867,1881,1831,1869,1824,1869,1887,1824,1839,1775,1782,1820,1735,1777,1785,1844,1801,1095,1030,834,942,1213,1314,1171,1186,1055,1144,890,1052,990,1528,1154,1546,1652,1700,1659,1581,1580,1545,1492,1474,1500,1484,1462,1460,1496,1520,1529,1487,1465,1483,1496,1487,1486,1468,1459,1483,1468,1466,1493,1467,1441,1498,1471,775,520,651,520,483,484,505,478,552,426,427,426,384,380,133,488,326,586,443,483,331,475,438,530,552,482,508,509,550,480,418,446,481,252,346,370,397,541,418,237,451,501,506,467,439,448,235,345,533,588,371,382,367,357,500,528,334,381,502,429,529,434,637,666,650,676,504,423,317,313,383,254,471,322,363,216,444,403,538,323,546,502,1525,1914,1902,1975,1975,1963,2039,1749,1711,1687,1673,1684,1698,1668,1662,1669,1663,1697,1696,1683,1675,1655,1683,1677,1662,1704,1740,1693,1718,1646,1664,1678,1683,1683,1660,1680,1678,1646,1631,1665,1634,1684,1690,2048,2048,2048,1968,1757,1776,1794,1758,1794,1682,1680,1672,1755,1688,1677,1669,1712,1767,1772,1748,1620,1710,1665,1592,1675,1678,1632,1604,1673,1673,822,801,731,840,812,755,1007,1290,1210,1361,1085,863,1001,1248,1232,1046,955,910,973,1142,1328,972,1153,893,448,1039,1736,1754,1735,1762,1865,1796,1637,1625,1608,1655,1509,1504,1506,1531,1518,1521,1518,1530,1500,1511,1518,1504,1505,1513,1504,1518,1531,1498,1518,1499,1504,1522,1520,1504,1504,1535,1494,1502,1546,1539,1523,1542,1515,1522,1512,1514,1512,1502,1493,1502,1492,1491,1471,1488,1496,1486,1502,1481,523,547,474,466,511,500,564,433,514,668,687,653,700,700,687,706,677,636,630,767,740,626,660,592,466,390,624,587,553,685,661,594,691,668,645,559,635,548,640,600,476,634,593,560,563,509,547,584,475,611,617,638,530,594,560,606,557,545,588,532,646,495,460,510,504,501,595,577,594,581,644,557,624,529,534,616,668,601,480,561,561,511,497,590,530,616,549,463,443,617,597,543,700,541,724,752,700,605,661,686,738,727,610,565,674,712,627,657,490,493,616,637,539,662,646,529,602,616,600,623,578,562,473,423,422,554,585,549,536,585,544,518,499,483,583,549,585,470,456,422,561,491,503,564,311,427,564,555,518,543,384,371,1105,2030,2053,2037,2047,2035,2048,2031,2056,2048,2056,2019,2054,2015,1714,1728,1677,1703,1705,1728,1700,1671,1716,1696,1701,1711,1704,1697,1702,1699,1729,1740,1710,1725,1733,1724,1734,1739,1754,1752,1756,1753,1739,1704,1694,1716,1705,1679,1688,1669,1693,1729,1703,1681,1707,1703,1696,1699,1729,1741,1747,1758,1751,1747,1731,1718,1708,1734,1724,1737,1733,1757,1747,1748,1736,1767,1745,1751,1718,1758,2000,2048,2048,2048,2048,2048,2048,2048,1731,1714,1669,1752,1735,1662,1708,1764,1734,1745,1775,1776,1852,1796,1837,1807,1801,1816,1768,1798,1774,1815,1638,1615,1701,1703,1679,1611,1579,1790,1709,1715,1715,1658,1749,1771,1849,1803,1842,1814,1850,1692,1707,1584,1658,1763,1835,1817,1789,1852,1850,1833,1780,1375,861,920,957,912,957,809,830,991,838,1277,1366,1386,1222,1267,1285,1278,1339,1318,1293,1181,1336,770,725,815,954,959,1001,1106,629,463,1163,1641,1452,1931,1837,1696,1891,1889,1884,1811,1823,1820,1832,1897,1622,1613,1523,1513,1502,1518,1554,1499,1519,1490,611,488,353,353,461,607,486,473,325,427,434,267,354,227,342,328,203,198,259,369,380,310,363,431,982,2049,2049,1773,1688,1729,1708,1675,1693,1712,1686,1691,1666,1714,1688,2048,1952,1835,1832,1705,1807,1794,1805,1806,1729,1769,822,1139,1702,1562,1527,1578,1554,1452,1174,1515,1500,606,460,468,508,568,455,512,1909,1709,1671,1858,1770,1781,1294,714,1284,1574,1502,1503,1500,1413,316,489,422,449,406,97,239,550,402,259,262,605,539,955,1928,1676,1676,1684,1655,1672,1668,1948,1770,1658,1711,1675,1365,1202,1782,1739,1617,1438,1503,1473,1514,1505,780,461,405,375,401,479,291,279,451,460,486,331,543,477,445,589,410,1662,1879,1673,1683,1658,1666,1656,1677,1695,1973,1717,1661,1716,1754,1612,657,1035,1731,862,1266,1639,1884,2055,2057,2040,2057,1856,1613,1602,1465,1211,1605,1462,1268,916,939,1108,2027,1997,1987,1888,1855,854,1357,1306,1392,1332,1455,1386,1445,1009,1318,580,947,1107,1201,1101,880,850,888,943,811,1045,1078,1183,1079,852,1100,1062,1034,1068,1057,1137,1116,1084,919,926,1158,1134,1034,1134,852,709,646,837,1283,1120,954,800,1102,812,934,971,566,1284,1165,1024,928,1051,790,890,1009,933,888,1155,566,1134,2048,1491,1062,1059,969,970,991,1087,1042,1016,869,1030,1200,888,1051,1054,935,986,986,860,749,744,873,1028,1234,1417,1477,1470,1418,1958,2055,2055,1977,1441,1954,2042,2048,2048,2057,1764,2048,1723,1842,2055,2048,2048,2048,2048,2048,2048,2057,2031,2036,2021,2020,2034,2021,1970,1845,1726,1863,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2039,1974,1855,1821,1519,1498,1967,1939,1792,1851,2034,2054,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2032,1646,966,1964,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2050,1786,1803,2048,2048,2057,1933,1656,1409,1270,1048,831,534,1554,2048,2048,2048,2048,2048,2057,2048,2056,2053,1938,1540,961,1743,2048,2038,1969,1894,1743,1551,1267,902,659,312,123,1719,2048,2048,2052,2050,2048,2048,2048,2048,2048,2048,2048,2048,2035,1856,1654,1523,1190,2000,2048,2048,2048,2048,2048,2048,2053,2048,2057,2048,2051,2026,1956,1757,1554,1101,949,1828,1851,2003,2048,2048,2056,2006,1727,1426,736,2022,2052,2048,2044,1809,2048,2048,1863,933,34,220,40,326,2048,2048,2048,2056,2048,2053,2052,2039,1955,2021,2048,1608,2048,2048,2048,2048,2048,2048,2051,2048,2048,1986,1621,1894,2030,1481,1713,1785,1738,1000,723,1612,1931,2053,2051,2048,2056,2053,2033,1846,1382,267,1256,2057,2048,2048,2053,2056,2048,2056,2056,2046,2053,2028,1838,1873,1947,1560,2040,2057,2056,2057,2048,2048,2057,2048,1967,2000,2057,2048,2048,2048,2048,2057,2048,1975,1734,1990,1974,1781,1164,2054,2056,2004,1834,1752,2048,2048,2048,2048,2057,2048,2048,2048,2056,1761,1281,1714,1931,1991,2013,2045,2052,2020,2027,2036,2054,2039,2052,2004,2032,1998,1984,1993,2048,2051,2056,2049,2048,2019,2045,2049,2037,2034,2046,2017,1909,1795,1594,1385,1279,1179,1134,1198,982,1040,1113,986,985,893,857,887,751,636,564,435,194,171,105,59,94,2056,2023,2048,2048,2048,1902,1738,1604,1167,959,2048,2048,2048,2048,1898,2048,2048,2048,1976,2048,2048,2048,1997,2053,2057,2057,2053,2054,2034,2057,2055,2050,2027,2057,2021,1993,1885,1835,1734,1757,1599,1951,2055,2048,2020,2052,2052,2054,1782,2005,2056,2057,2057,2056,2057,2048,2043,1936,2048,2026,1919,1481,1976,2055,2055,1485,1867,2048,2048,2048,2048,2048,2048,2057,2048,2006,1890,1722,1512,1372,1285,1158,1612,2048,2048,2057,2055,2037,1880,1656,1018,310,1060,1517,1730,1887,1964,1891,1933,2004,1923,1739,1537,1352,1047,582,435,1679,2042,2038,1391,807,1966,2048,2048,2048,2048,2048,2048,2048,2021,1975,2037,2034,1770,1469,959,1653,2046,1789,1430,1758,2048,2048,2050,2055,2056,2056,2054,2051,1935,1821,1696,2048,1415,1129,1429,2054,2048,2048,2048,2048,2057,2042,1841,1913,2057,2048,2048,2048,2048,2048,1860,1038,1480,1914,2025,2056,2048,2045,1292,1692,1824,2053,2048,2048,2057,2048,2001,1816,1288,965,736,499,332,247,159,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1181,2057,2057,2057,2056,2055,2055,1891,2024,1969,1745,1820,1529,731,1144,1664,1914,2050,2048,2048,2048,2048,2048,2048,2048,2048,2057,1917,1677,1521,1385,1243,1098,1041,984,742,810,978,989,671,1485,2042,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2013,1347,821,656,1462,2048,2048,2048,2047,1546,2053,2057,2057,2048,2057,2048,2055,2048,1596,1451,1470,1488,1012,2048,1966,1371,397,1693,1872,1981,2042,2057,2052,2053,2042,2026,1588,1747,1801,1969,1944,2054,2055,2048,2048,2048,2048,2057,2048,2020,1793,1561,1032,661,1452,2024,2048,2048,2048,2048,2048,2048,2057,2048,2005,1790,1521,1175,902,404,282,1806,2055,2023,1947,1852,1707,1656,2057,2047,1826,1547,1324,1788,1716,1980,2048,1930,2048,1080,1966,1765,1841,1794,2048,1702,1924,1491,1418,1135,1440,2037,1987,2015,1887,1958,1958,1921,2048,2057,2045,1830,1106,1062,1916,2049,2048,2048,2035,1639,1476,1008,673,2049,2057,2056,2048,1853,559,1314,2048,2035,2057,2048,2057,2048,2054,1967,2048,1596,1913,2048,1728,2056,2048,1610,2007,2054,1661,1276,1635,1806,577,1912,2048,2056,2056,1677,266,121,951,1967,2055,2057,2055,2048,2057,2055,1884,1716,1928,1589,1120,227,594,1945,2048,1979,2056,2048,2020,2048,2034,2048,1837,2057,1638,2017,1415,1920,1340,1450,1645,1722,1418,1334,1555,2057,1920,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2057,2054,1997,1854,1967,1949,1729,1860,2056,1965,1483,1500,1821,2057,2048,2048,2048,2057,2048,2056,2048,2048,2048,1971,1847,1616,1422,1205,965,1090,2048,2048,2048,2048,2048,1846,453,2048,2048,1998,1970,2024,1998,1984,2032,2002,2048,2048,2057,2054,2026,1811,1365,1969,2043,2048,2016,1906,2014,2047,2057,2048,2048,2048,2055,2049,2017,1828,1471,976,760,2048,2048,2048,2048,2048,2015,2006,2048,2048,2048,2056,1215,2026,2057,2048,2048,2048,2056,2048,2048,2009,1644,1563,2048,2048,2048,2048,2048,1869,2048,1498,605,319,1036,1770,2052,2056,2048,2048,2048,2048,2048,2048,2048,2048,2055,1937,1821,1781,1770,1637,1476,1309,1223,1240,1158,852,626,547,531,497,404,484,437,445,413,454,534,487,427,220,637,1214,1193,1266,1180,1049,1014,895,754,571,385,194,232,1757,2041,1834,1739,1886,1890,2056,2056,2004,2048,2057,2048,2038,2057,1883,1558,1809,2001,1879,1365,1895,1856,1998,2054,2029,2052,1789,2048,2054,2048,1843,2035,2036,2040,1985,1881,2009,1923,1411,1498,1925,2056,1972,2056,2048,1995,1806,1735,1953,2048,2038,2024,2048,2036,2044,1820,1967,1798,1843,1876,2011,1836,2037,1794,2019,1936,2054,2048,2048,2050,2035,1667,1405,1638,1630,749,1093,2030,2055,2055,2009,1927,1896,1780,1850,1745,1952,1899,1858,2004,1930,1905,2039,2040,1640,2054,1554,1479,1795,2006,2008,1927,1814,1906,1854,1767,1762,1597,1706,1935,1309,1527,1358,983,932,1989,1974,1905,1810,1851,1593,1742,1680,1392,1413,1283,1369,1367,1306,1113,1013,1325,1201,1085,1288,1307,1356,1304,1510,1854,1810,1665,1961,1975,2048,2010,2027,1863,1785,1604,1503,1007,1146,1822,1943,2048,2054,2048,1550,218,811,2048,2048,2056,1384,2048,1256,1851,2048,1696,1416,2055,2048,2048,2048,1535,2057,2008,1637,1191,2048,2048,2048,2048,2048,2048,2045,2021,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2055,2057,2057,2057,2048,2038,1975,2019,2049,2057,2048,2036,2048,2056,2048,2048,2048,2057,1822,1218,2048,2048,2048,2057,2057,2046,2056,1929,1922,1860,1546,1622,1484,1673,1831,1633,1456,1400,1152,962,479,1321,1873,1822,2046,2048,2048,1974,1653,1026,2048,2048,1880,1953,2048,2048,2048,1686,1725,2048,2048,1683,1470,1770,1873,1413,750,608,1249,1420,1459,1436,1213,1186,685,828,842,471,314,338,574,404,777,1090,648,476,544,470,707,534,447,543,309,488,451,717,629,1005,813,1116,609,731,1058,594,722,1046,689,281,637,483,527,493,424,564,610,375,542,629,471,315,1176,851,1189,1016,962,756,529,692,520,564,555,709,285,409,296,501,695,330,407,655,382,550,895,1297,692,333,420,268,344,580,644,536,503,449,641,542,330,509,352,1088,1323,1163,987,286,524,458,430,449,430,367,492,258,357,400,252,233,274,564,722,265,321,707,283,546,999,625,229,443,239,526,279,248,256,308,897,473,522,434,631,378,492,425,290,728,387,325,665,579,1138,894,458,290,270,287,287,296,584,258,263,233,414,749,608,763,820,1358,1320,815,890,539,538,393,480,655,1350,1432,520,671,776,628,557,588,638,861,562,679,716,664,686,769,681,1016,1067,1165,1351,1017,611,638,557,992,1196,1081,1116,1065,1068,1164,389,343,1147,1064,1054,810,477,1314,437,465,347,148,404,194,208,136,240,251,471,135,133,133,270,500,650,352,660,535,458,868,583,488,264,323,587,279,312,322,736,399,584,322,444,297,268,306,687,184,308,235,185,338,190,464,285,369,177,222,212,207,495,342,528,432,698,1066,370,433,526,420,640,619,330,565,1019,755,864,693,471,378,352,406,417,273,391,308,217,264,178,127,641,738,927,789,501,699,424,408,494,240,519,713,165,368,411,245,165,310,470,420,538,98,237,360,155,245,260,159,292,465,165,285,541,379,138,625,275,405,271,706,948,1270,1038,422,581,562,454,602,705,395,294,638,1107,753,316,986,1000,1335,1050,458,518,469,661,640,466,623,289,259,229,354,364,937,811,623,594,360,517,425,410,427,943,798,593,694,383,524,681,639,450,732,1040,1107,899,780,811,1122,1897,1854,990,991,991,1719,1886,1886,989,986,986,1064,1586,1059,1255,1091,832,876,473,1190,388,436,807,579,793,569,543,758,716,664,466,501,798,652,982,443,123,159,450,566,158,157,119,511,195,397,540,582,1177,734,425,341,626,532,333,583,429,456,370,342,707,876,857,1783,496,502,1057,471,415,362,419,642,210,373,425,569,225,590,219,370,344,448,449,285,230,501,312,347,281,281,294,279,567,236,400,181,472,394,409,119,450,572,537,525,160,288,454,474,414,222,427,687,282,693,372,473,707,336,544,899,566,406,76,59,834,861,419,790,837,460,508,630,660,649,651,464,484,577,506,257,540,475,681,711,833,702,527,531,496,422,464,432,467,816,1086,814,797,542,542,496,491,710,446,608,465,690,409,850,284,449,674,195,345,206,184,209,394,110,480,563,171,204,307,159,349,124,116,540,522,532,335,475,428,210,265,180,565,334,178,795,314,411,331,378,373,587,779,705,932,816,660,677,202,520,910,443,509,1428,459,568,1015,1125,1244,738,312,587,303,703,1687,1003,1225,1344,1431,1414,1437,1512,1549,1470,1522,1574,1446,1510,1515,1514,1533,1532,1533,1469,1561,1475,1442,1336,1268,1186,1300,1415,1306,1205,1173,1099,1125,1499,1491,1696,1874,1723,1776,1696,1691,1708,1753,1680,1754,1722,1702,1727,1761,1767,1749,1723,1547,1687,1646,1633,1706,1720,1713,1719,1702,1676,1661,1656,1675,1627,1555,1639,1595,1910,1591,1686,1665,1642,1634,1750,1734,1755,1789,1834,1811,1746,1821,1779,1702,1734,1754,1750,1880,1835,1717,1646,1797,1761,1694,1768,1833,1743,1697,1693,1687,1573,1857,1553,1675,1610,1582,1633,1606,1699,1671,1695,1663,1720,1715,1672,1739,1767,1710,1632,1774,1711,1712,1713,1650,1627,1726,1648,1651,1621,1625,1603,1545,1468,1516,1722,1725,1612,1509,1460,1359,1559,1510,1485,1310,1209,1385,1493,1339,1373,1360,1436,1278,1393,1553,1565,1549,1583,1424,1392,1530,1374,1376,1475,1550,1463,1520,1545,1533,1832,1417,1435,1386,1381,1598,1383,1498,1445,1521,1363,1340,1314,1315,509,214,270,225,218,502,911,1323,1274,1009,1472,1552,1301,1483,1713,1269,977,1436,1160,739,1308,1443,1477,1609,1643,1550,1627,1338,1405,1490,1384,1480,1482,1714,1392,1548,1587,1354,1555,1617,1115,1434,1596,1464,1614,1460,1633,1594,1122,1759,1423,1581,1520,1276,1372,1551,1664,1628,1387,1358,1658,1302,1658,1471,1617,1305,1243,1628,1600,1532,1530,1381,1338,1557,1689,1221,1702,1424,1419,1533,1580,1441,1139,1569,1693,1623,1528,1343,1435,1502,1647,1107,1385,1284,1627,1112,1284,1399,1577,1359,1322,1269,1613,1555,1673,1585,1514,1272,1294,1674,1461,1806,1203,1717,1361,1842,1515,1606,1186,1730,1720,1623,1782,1669,1755,1471,1466,1921,1380,1532,1438,1692,1774,1603,1720,1569,1652,1272,1749,1656,1706,1558,1521,1394,1625,1578,1553,1704,1066,1492,1684,1659,1614,1726,1833,1560,1335,1558,1570,1906,2057,2025,1995,2041,2056,2021,2041,2037,2024,2045,2027,2038,2029,2042,2052,2046,2038,2035,2008,2012,1954,2014,2020,2031,2050,2057,2037,2050,2047,2026,2017,2009,2045,2043,2022,2044,2045,2031,2023,2000,2003,1989,2012,2039,2040,2045,2028,2025,2047,2030,1988,1962,1996,2017,1976,2011,2028,2029,2019,2057,2028,1996,1974,2005,1995,1977,2018,2018,2011,2020,2047,2025,1988,1989,2007,1999,1979,2010,2012,2051,2048,2047,2041,1989,2012,2024,2025,2008,2038,2044,2042,2029,2033,2042,2024,2048,2036,2055,2034,2049,2000,2001,1990,1992,1950,1992,1972,2012,1996,1901,1980,1984,1968,1978,1995,1981,1988,1986,1985,1962,1961,1977,1998,1978,1979,1968,1992,1969,2011,1962,1968,1960,1989,1995,1980,1959,1979,1992,1997,1983,2001,1966,2007,1993,1997,1969,1904,1968,1996,1992,1958,2008,1982,1992,1945,1988,1961,1990,1985,1991,2010,1984,1989,2009,2015,2003,1999,1985,1971,1956,1929,1772,1800,1782,1889,1895,1955,1786,1814,1892,1772,1648,1833,1633,1806,1965,1940,1876,1791,1821,1916,1875,1870,1824,1671,1692,1675,1801,1869,1883,1887,1824,1915,1972,2057,2056,2053,1963,1989,1787,1874,1834,1897,1816,1819,1652,1772,1813,1863,1887,1863,1782,1822,1826,1645,1825,1787,1886,1793,1904,1780,1808,1818,1646,1805,1712,1890,1833,1884,1819,1871,1757,1838,1590,1769,1773,1878,1775,1914,1841,1904,1724,1771,1700,1776,1752,1872,1866,1819,1813,1796,1865,1516,1885,1629,1942,1927,1937,1951,1826,1908,1835,1908,1752,1841,1875,1973,1934,1938,2018,1926,1761,1917,1748,1901,1643,1756,1854,1819,1950,1810,1828,1972,1832,1766,1897,1871,1844,1833,1851,1849,1887,1776,1903,1817,1815,1757,1826,1847,1834,1816,1625,1834,1847,1718,1848,1911,1876,1895,1937,1932,1937,1921,1945,1979,1883,1893,1947,1898,1964,1954,1875,1922,2020,1880,1920,1584,1390,1328,1419,1422,1492,1523,1414,1607,1496,1482,1602,1625,1727,1608,1606,1912,1985,1982,1824,1988,1675,1957,1782,1705,1966,1845,1981,1924,1930,1880,1783,1810,1876,1787,1925,1964,1977,1807,1986,1664,1989,1758,1751,1944,1830,1986,1898,1840,1955,1593,1919,1731,1580,1960,1844,1967,1917,1934,1931,1717,1913,1810,1626,1965,1683,1937,1914,1925,1938,1748,1857,1878,1781,1985,1973,1980,1864,1999,1685,2021,1826,1813,1963,1901,1951,1870,1898,1966,1953,1951,1904,1924,1903,1788,1633,1868,2006,1986,1972,1991,2012,2013,2017,1990,1998,2017,1994,2000,1976,1965,1978,1969,2003,2020,2035,2000,1968,1979,1987,1993,2009,1987,1990,2031,2035,2014,1978,2017,2023,2036,2021,1994,2013,2012,2005,1996,2020,2006,2031,2015,1999,2011,1986,2029,2031,2026,2018,1995,2002,1999,1981,2004,2013,2019,1988,2001,1992,1997,2011,2035,2046,1999,2016,1927,1753,1779,1739,1691,1658,1695,1767,1709,1640,1603,1790,1708,1611,1783,1794,1587,1674,1828,1576,1596,1711,1649,1703,1699,1844,1705,1671,1764,1837,1769,1689,1697,1818,1696,1754,1778,1728,1867,1950,1925,2020,1978,1953,1912,1968,1934,1935,1989,1974,1980,1977,1989,1994,2012,1983,1982,1971,1953,2037,1960,1997,2005,1966,1962,1985,1964,1970,1990,2028,2015,1975,1971,1991,1986,1949,1947,1975,1938,1939,1856,1926,1907,1817,1873,1893,1786,1893,1851,1927,1841,1866,1919,1868,1862,1911,1919,1974,1993,1976,1960,1877,1959,1861,1944,1906,1972,1937,1897,1971,1947,1943,1945,1989,1895,1965,1816,1876,1859,2055,2055,2036,2018,2014,2010,2031,2017,2021,2040,2039,2041,2035,2028,2011,1996,1860,1979,2019,2043,2051,2053,2015,2043,2020,2008,2019,2026,2041,2031,2040,2056,2036,2038,2048,2018,1976,1974,2008,2026,2023,2039,2044,1998,2034,1983,1985,1988,1989,1988,2033,2035,2017,2006,2013,2006,1992,1994,1995,1965,1990,2018,2048,2008,2026,2010,2023,1975,2008,1998,1969,1979,2015,2041,2011,2043,2050,2032,1994,2042,2004,2003,1982,2023,2029,2054,2045,2052,2036,2014,2031,2048,2045,2048,2052,2038,2015,1985,1979,2012,1970,1975,1980,1992,1992,2010,1978,1943,1978,1949,1978,1961,1993,1965,1978,1986,1954,1986,1905,1950,1976,1978,1976,1955,1992,2010,1974,2005,1989,1949,1950,1989,1943,1972,1829,1841,2043,2052,2017,2053,2025,2039,1754,1789,1996,1969,1903,1896,1914,1977,1971,1930,1899,1951,1999,1947,1931,1839,1888,1984,1995,1906,1854,1923,1964,1953,1870,1878,1917,1940,1955,1911,1834,1892,1974,1956,1905,1876,1955,1952,1909,1824,1946,1941,1888,1847,1857,1851,1905,1922,1888,1902,1872,1865,1901,1886,1831,1920,1897,1823,1899,1791,1780,1970,1967,1924,1934,1937,1836,1843,1856,1821,1808,1988,1985,2006,2029,2009,2010,1981,1767,1978,1933,2009,2026,2011,1952,1886,2000,1977,2018,1954,1974,1931,2052,2027,1978,1888,1962,2002,2015,2001,1978,1983,2015,2011,1978,1974,1963,2012,2006,2017,1987,1932,1975,1975,1958,2015,1953,2012,2047,2027,1977,2005,1910,2024,2003,1988,1966,2017,2035,2040,2017,2016,2006,1913,1887,2001,1991,1952,2023,1952,1946,1975,1985,1928,2030,1897,1967,1995,1969,1925,2002,1972,1970,1840,1952,1934,1957,1902,1882,2004,2003,2027,1993,1999,1917,1908,1946,1926,1904,1896,1969,1966,1963,1991,2013,2005,1963,1974,1936,1956,1948,1939,2015,1998,1973,2016,1998,1965,1982,1944,1960,1959,1899,1945,1974,1950,1976,1992,2042,1916,2003,1990,1978,2041,1937,1992,1946,1963,1981,2006,1969,1962,1906,1969,1961,1984,1923,1957,1959,1965,1955,1945,1951,1948,1932,1893,1864,1928,1979,1924,1902,1979,1856,1941,1968,1882,1959,1963,1967,1959,2006,1937,1974,1992,1925,1971,1943,1995,2027,1969,2023,2043,2005,1969,1994,1976,2008,2035,2039,2031,2050,2012,1956,2014,1969,2021,2040,2024,2052,1995,2012,2009,2016,2003,2032,2048,2023,2051,2032,2055,1957,2016,1981,2030,2037,2045,2051,2049,2028,1960,2011,1977,2030,2023,2045,2034,2048,2022,1965,1924,1982,1807,1980,1975,1996,1986,2007,2034,2007,1984,1968,1824,2008,1996,1955,2045,1983,1944,2024,1996,1961,2041,1987,1904,1942,1782,1798,1774,1373,1521,1575,1324,1604,1302,1507,1444,1124,1533,1171,1427,1275,1412,1265,1202,1381,1092,1001,1540,1464,1111,1254,1413,1174,1007,1273,1332,1120,1607,1119,1393,1128,1607,1139,1317,1415,1490,1244,1496,1545,1425,1597,1424,1505,1343,1490,1507,1188,1654,1108,1439,1107,1615,1180,1434,1303,932,1330,1458,1438,1076,1326,1430,1179,1010,1317,1376,1260,1444,1135,1351,1137,1659,1206,1470,1481,1315,1587,1416,1528,1486,1514,1578,1220,1465,1515,1352,1337,1500,1271,1325,1155,1630,1205,1437,1305,900,1521,1372,1342,1146,1265,1642,931,1084,1341,1314,1295,1360,1199,1369,1129,1632,1253,1505,1499,1282,1615,1348,1524,1539,1419,1549,1255,1497,1489,1150,1508,1350,1393,1351,1134,1579,1152,1428,1306,873,1621,1319,1269,1204,1244,1619,815,1237,1400,1141,1504,1055,1359,1231,1474,1234,1283,1406,1472,1222,1645,1510,1433,1584,1309,1574,1320,1508,1533,1221,1643,1141,1407,1181,1524,1277,1377,1391,1040,1171,1469,1475,1117,1261,1441,1312,956,1279,1407,1175,1559,1093,1387,1058,1664,1216,1461,1470,1356,1471,1404,1554,1456,1539,1555,1267,1438,1474,1449,1262,1576,1253,1371,1175,1592,1142,1482,1276,861,1494,1347,1393,1094,1309,1632,870,1102,1360,1268,1314,1399,1227,1339,1176,1615,1246,1496,1515,1323,1532,1393,1583,1563,1501,1604,1278,1531,1559,1286,1122,1572,1259,1310,1129,1574,1195,1393,1312,930,1350,1431,1380,1071,1301,1566,901,1084,1371,1239,1222,1360,1203,1369,1158,1646,1129,1449,1544,1435,1519,1475,1554,1544,1536,1624,1291,1496,1567,1307,1038,1746,1205,1381,1137,1583,1214,1307,1367,1040,1108,1514,1478,1136,1270,1433,1200,966,1302,1303,1137,1550,1085,1405,1248,1715,1110,1273,1536,1528,1350,1688,1452,1498,1578,1407,1684,1286,1534,1506,1182,1652,1226,1379,1261,1428,1387,1293,1452,1095,989,1626,1329,1171,1242,1203,1630,810,1286,1486,1182,1631,1080,1361,1211,1541,1341,1349,1414,1493,1217,1708,1511,1520,1598,1422,1626,1361,1568,1511,1163,1659,1270,1409,1288,1398,1415,1301,1476,1147,936,1670,1314,1207,1236,1187,1649,836,1263,1462,1411,1535,1157,1326,1372,1279,1646,1256,1517,1564,1250,1667,1582,1605,1582,1476,1684,1291,1251,1253,1321,1382,1707,1554,1459,1253,1247,1589,1495,1400,1823,1475,1333,1222,1504,1451,1423,1789,1471,1432,1349,1273,1513,1398,1391,1746,1497,1602,1432,1235,1402,1337,1207,1500,1715,1188,1171,1306,1322,1718,1382,1303,1443,1589,1274,1712,1676,1835,1938,1835,1910,1912,1780,1749,1845,1866,1752,1852,1451,1162,1706,1725,1754,1698,1706,1663,1519,1083,913,1985,1907,1793,1721,1355,1193,1440,1429,1716,1857,1938,1739,1468,1650,1822,1613,1889,1878,1894,1818,1504,1788,1560,1930,1930,1671,1887,1830,1817,1859,1735,1694,1859,1842,1896,1879,1773,1646,1763,1557,1562,1761,1510,1607,1586,1580,1617,1443,1562,1518,1479,1582,1412,1425,1837,1932,1871,1737,1874,1849,1903,1828,1858,1869,1847,1810,1927,1821,1855,1950,1959,1954,1849,1923,1921,1978,1875,1900,1958,1981,1872,1937,1860,1850,1683,2055,2048,2027,1946,2016,1917,1892,1965,1908,1915,1972,1928,1973,1965,1916,1989,1911,1929,1968,1887,1902,1956,1898,1859,1960,1906,1942,1882,1870,1638,1709,1791,1814,1743,1752,1746,1695,1478,1348,1922,1530,1725,1755,1618,1819,1578,1568,1774,1410,1219,1157,1178,1417,1566,1689,1507,1202,1381,1703,1513,1205,1570,1929,1822,1743,1767,1804,1634,1866,1871,1702,1653,1671,1732,1530,1758,1651,1592,1664,1460,1543,1538,1461,1246,1568,1712,1169,923,1468,1670,1606,1567,2038,1966,1968,1990,1966,1872,1731,1449,1810,2007,1886,1878,1867,1789,1844,1928,1622,1762,1841,1845,1756,1888,1692,1830,1585,1563,1693,1583,1670,1710,1848,1769,1703,1511,1749,1350,1397,1709,1835,1819,1714,1404,1464,1665,1773,1546,1447,1651,1627,1642,1667,1552,1572,1668,1595,1361,1574,1429,1700,1621,1439,1606,1544,1632,1656,1495,1242,1598,1517,1251,1320,1361,1211,1325,1352,1553,1209,1228,1435,1335,1311,1402,1377,1293,1596,1573,1562,1757,1342,1345,1794,1861,1854,1945,1545,1922,1451,1447,1540,1255,1707,2041,2002,2046,1512,1877,1714,1683,1883,1529,1830,1810,1802,1478,1823,1607,1506,1495,1377,1534,1901,1818,1518,1845,1315,1854,1619,1898,1453,1540,1820,1691,1840,1756,1961,1724,1513,1678,1702,1631,1737,1735,1742,420,604,436,517,821,616,583,565,838,2031,1965,1982,1930,1943,1956,1972,1953,1905,1654,1636,1620,1723,1593,1608,1781,1526,1726,1588,1679,1472,1487,1482,1555,1360,1453,1419,1620,1434,1273,1169,1484,1371,1585,1455,1363,1512,1473,1445,1584,1407,1381,1421,1406,1434,1381,1412,1610,1741,1770,1846,1899,1860,1874,1766,1723,1799,1651,1745,1774,1849,1797,1725,1696,1718,815,813,844,790,1720,1726,1584,1633,1734,1599,1626,1681,1665,1740,1673,1747,1664,1716,1773,1795,1879,1232,1789,1555,1810,1224,1800,1586,1888,1844,1854,1801,1836,1859,1730,1820,1854,1539,1046,1058,1010,1093,1062,1066,997,1282,1560,1557,1539,1560,1568,1549,1567,1539,1648,1447,1603,1582,1642,1122,1080,1070,1049,1435,1424,1707,1818,1549,1302,1135,1507,1451,1101,1364,1549,1481,1477,1608,1595,1556,1604,1606,1399,1386,796,941,825,613,984,695,1283,1408,1468,516,529,822,563,887,510,867,699,807,582,510,926,640,904,529,838,640,683,789,519,896,712,938,466,603,693,661,663,290,640,202,532,273,222,490,205,668,179,534,201,356,208,38,595,160,652,249,681,1445,1424,1308,1213,1224,1182,1279,982,1012,991,970,987,993,1006,1215,1370,1399,1400,1481,1502,1405,1407,1377,1582,1469,1495,1513,1580,1630,1481,1534,1547,1503,1384,1426,1415,1401,1404,1448,1415,1381,1397,1422,1339,1423,947,934,968,916,1099,954,942,946,1050,899,973,882,1183,1394,1444,1364,1402,982,917,937,942,1625,1612,1640,1552,1511,1524,1515,1605,1699,1413,1347,1333,1360,1219,1311,1314,1327,1633,1544,1536,1275,1473,1510,1284,1372,1544,1535,1657,1576,1614,1631,1741,1709,1768,1581,1221,1353,1364,1427,1470,1205,1405,1433,1372,1596,1443,1619,1432,1612,1608,1599,1606,1605,1543,1603,1580,1644,1741,1642,1576,1647,1445,1598,1553,1596,1634,1598,1624,1568,1641,1450,1615,1596,1607,1668,1668,1621,1656,1533,1598,1585,1598,1574,1716,1556,1555,1538,1829,1575,1589,1526,1631,1830,1577,1583,1577,1787,1637,1667,1670,1694,945,958,958,950,1538,1475,1570,1448,1566,1272,1237,1372,1405,1146,1164,1274,1254,1386,1037,914,1038,1389,1211,1127,1098,1259,1054,907,1005,1059,1986,1483,1915,1554,1597,1418,1452,1304,1386,1415,1419,1362,1548,1526,1529,1515,1549,1533,1536,1529,1514,1660,1410,1412,1377,1376,1387,1373,1359,1496,1624,1498,1545,1580,1557,1544,1529,1542,1755,1576,1605,1658,1647,1585,1611,1655,1646,1677,1476,1419,1397,1433,1469,1424,1375,1757,1768,1731,1703,1719,1743,1711,1723,1728,1874,1742,1689,1656,1737,1695,1693,1656,1799,1060,896,1286,1052,1104,1048,1250,1147,1066,1026,971,640,649,725,848,1819,1659,1745,1664,1742,1673,1719,1680,1850,1779,1728,1648,1654,1700,1716,1733,1734,1925,1742,1763,1720,1811,1710,1758,1742,1876,1755,1722,1667,1647,1686,1646,1705,1700,1560,1525,1415,1461,1500,1016,978,990,1407,1839,1791,1876,1823,1723,1806,1812,1859,1661,1230,1176,1237,1740,1185,1019,1049,1632,1645,1628,1571,1669,1504,1646,1576,1620,1637,1470,1411,1421,1347,1557,1438,1439,1413,1559,1635,1473,1628,1348,1467,1443,1505,1473,1670,1646,1595,1584,1643,1627,1615,1677,1598,1465,1439,1419,1428,1464,1417,1427,1566,1818,1793,1883,1835,1760,1799,1826,1876,1662,1614,1634,1619,1558,1648,1641,1609,1761,1546,1471,1437,1501,1429,1470,1470,1481,1628,1828,1845,1854,1696,1878,1798,1858,1825,1702,1644,1603,1631,1516,1626,1605,1599,1653,1520,1472,1453,1355,1547,1470,1436,1395,1808,1805,1818,1871,1657,1871,1812,1848,1773,889,1536,1181,686,1060,746,694,1182,651,870,1680,648,688,664,1365,1265,1013,1267,1349,1008,903,1302,1147,1256,1327,1425,1713,1460,1026,1099,1750,1577,1691,1649,1716,1570,1532,1744,1674,1096,1283,1382,1251,1557,1271,1026,1011,1007,1391,1112,1074,1087,1136,1517,2020,2036,2002,1989,2025,2001,2001,1984,2055,2036,2048,2006,2017,2005,2010,1960,1999,2026,2037,2000,1999,2015,1984,2015,1960,2030,2023,2032,2004,1987,2007,1998,1971,2007,2055,1884,1932,1882,1912,1902,1874,1861,1858,1881,1917,1905,1853,1859,1834,1828,1896,1888,1654,1679,1662,1677,1665,1652,1632,1662,1747,1642,1660,1659,1642,1660,1631,1594,1740,1434,1447,1437,1437,1433,1419,1396,1372,1618,1372,1197,1654,1393,1433,1528,1631,1513,1383,1552,1537,1622,1385,1636,1479,1667,1276,1413,1330,1799,1808,1555,1586,1675,1586,1588,1482,1699,1667,1541,1570,1673,1735,1723,1551,1592,1674,1527,1527,1551,1569,1543,1544,1548,1525,1535,1509,1573,1682,1517,1680,1673,1640,1593,1707,1869,1533,1505,1904,1928,1737,1693,1763,1954,1949,1928,1983,1924,1954,1914,1909,1882,1831,1842,1897,2002,1864,1875,1854,1831,1800,1767,1775,1838,2002,1955,1973,1943,1911,1906,1923,1915,2015,1868,1906,1873,1834,1802,1814,1789,1831,2023,1997,1986,1979,1936,1936,1948,1936,2011,1797,1791,1747,1725,1738,1773,1725,1772,1967,1804,1796,1806,1809,1811,1789,1781,1899,1455,1474,1455,1410,1388,1416,1450,1447,1850,1956,1943,2024,1941,1944,1896,1907,1879,1920,1864,1907,1991,1938,1949,1901,1919,1920,1919,1928,1963,1535,1504,1580,1619,1559,1630,1540,1491,1958,1792,1800,1765,1756,1709,1753,1711,1855,1307,1336,1306,1293,1398,1304,1374,1347,1775,1683,1681,1634,1664,1640,1629,1635,1648,1543,1484,1487,1552,1583,1483,1478,1459,1639,1691,1496,1655,1613,1639,1520,1596,1392,1312,1335,1229,1277,1162,1247,1618,1897,1864,1868,1893,1899,1908,1856,1874,1966,1913,1878,1870,1874,1900,1886,1872,1934,1431,1409,1381,1352,1442,1500,1457,1458,1733,1629,1718,1726,1708,1614,1582,1555,1609,1615,1555,1558,1611,1681,1732,1708,1660,1753,1463,1450,1466,1468,1399,1395,1415,1421,1651,1452,1504,1552,1003,1563,1489,1460,1657,1507,1505,1501,1495,1486,1477,1528,1521,1951,1966,1933,1795,1408,1402,1439,996,1424,1406,1407,1541,1242,1135,1128,1136,900,1101,1170,1149,1494,1406,1472,1791,1917,1886,1914,1888,1891,1892,1901,1746,1599,1538,1437,1520,1540,835,969,743,905,863,832,763,773,985,853,917,750,965,951,992,948,1357,1264,1352,1284,1076,325,527,475,522,208,543,431,1342,1099,772,832,998,1362,718,1315,952,187,231,439,353,1158,1299,1563,1565,1875,1746,1802,1831,1804,1799,1768,1767,1807,1636,1661,1594,1606,1574,1641,1612,1574,1508,1324,1316,1321,1537,1673,1669,1650,1642,1689,1689,1668,1677,1664,1668,1655,1152,1531,1813,1871,1795,1783,1831,1852,1823,1747,1696,1444,1453,1457,1566,1864,1835,1877,1880,1862,1880,1837,1859,1841,1174,1737,1405,1169,1195,1023,1033,2045,2025,1997,1923,1947,1957,1918,1897,1876,1948,1951,1973,1909,1909,1900,1915,1997,1841,1661,1761,1782,1828,1774,1729,1614,1794,2048,2049,2049,2043,2052,2032,2031,2052,2055,2051,2052,2048,2056,2044,2046,2039,2056,1892,1919,1871,1826,1822,1852,1826,1876,1948,1903,1883,1846,1864,1817,1879,1837,1890,1890,1858,1027,694,885,718,691,476,818,856,846,589,391,812,915,837,435,558,804,868,798,390,698,801,859,629,401,1137,1139,1162,551,571,1178,1014,1233,651,445,1245,1043,1111,505,657,1182,1082,1063,971,1226,1447,1393,1668,1703,1025,1119,1138,1128,1170,1149,1085,1133,1145,1154,1129,1201,1134,1097,1024,1081,1630,1089,1092,1156,1161,1106,1076,1066,1032,1006,872,1016,1049,989,864,777,877,1462,459,532,496,523,526,545,557,553,452,465,509,488,508,535,538,524,1155,1491,1464,1478,1538,1498,1485,1508,1441,1379,949,1000,1206,1711,1402,1418,1341,1260,1459,1660,1672,1654,1677,1633,1599,1646,1660,1656,1870,1698,1718,1722,1686,1714,1722,1683,1759,1161,1170,1176,1284,1336,1287,1341,1132,1337,1416,1409,1452,1517,1477,1580,1514,1577,1633,982,1148,1130,1122,1163,1104,1075,1126,1156,1138,1172,1174,1140,1103,998,1083,1650,1086,1089,1146,1092,1079,1059,1067,1020,997,883,1000,1052,934,848,770,923,1463,437,520,479,530,535,518,589,517,463,478,490,500,524,524,536,527,1347,1796,1786,1799,1778,1812,1759,1858,1430,1420,1375,1370,1541,1825,1850,1876,1861,1873,1853,1854,1854,1611,1493,1598,1537,1466,1621,1662,1708,1534,1768,1776,1814,1782,1609,1297,1160,1089,1354,1428,1604,1729,1802,1814,1766,1855,1786,1744,1733,1540,1118,1247,1227,1268,1568,1396,1921,1638,2000,1741,1792,1836,1783,1848,1783,1754,1738,1785,1659,1623,1794,1730,1784,1572,1654,1465,1635,1629,1608,1586,1576,1564,1559,1614,1757,1487,1746,1806,1564,1357,1721,1800,1616,1774,1062,1091,1116,1156,1107,1136,1032,1126,1072,1143,1128,1168,1141,1089,1040,1111,1334,914,1262,1132,925,528,1164,1229,1197,971,827,1198,1106,1018,443,1200,1195,1143,995,748,1129,1156,1087,415,1168,1153,1161,892,827,1098,1222,1125,415,1108,1210,1158,915,953,1164,1235,1193,383,1033,1240,1130,880,1585,1138,1122,1195,1087,1079,1079,1071,1034,1049,901,1024,1033,892,883,776,871,1136,1160,1189,1145,519,870,1225,1138,973,1220,1122,1181,1213,1139,1251,1133,1238,1201,1234,1164,1102,1263,1175,1304,1106,1132,1178,1194,1266,1179,1059,990,1071,1292,1192,990,1022,1128,1341,1108,1007,990,1162,1327,1061,978,1054,1310,992,443,540,1135,1477,1760,1842,1885,1855,1634,1418,686,492,527,505,586,634,1648,1470,1496,1636,1458,1507,1621,1464,1521,1607,1452,1531,1734,1871,1738,1733,2017,1671,1802,1887,1707,1857,1810,1832,1709,1852,1748,1763,1893,1748,1733,1902,1747,1803,1800,1755,1972,1790,1830,1690,1899,1735,1859,1772,1741,1893,1662,1821,1887,1782,1756,1818,1826,1706,1846,1881,1716,1905,1729,1767,1891,1741,1748,1804,1805,1796,1819,1824,1676,1907,1692,1843,1786,1762,1897,1783,1825,1795,1797,1748,1807,1888,1708,1737,1883,1704,1882,1770,1753,1355,1226,1227,1229,1274,1157,1194,1141,1027,561,782,880,772,403,730,798,889,615,417,784,858,913,455,534,767,853,912,652,1444,1007,1176,1142,1134,1166,1082,1072,1106,1145,1123,1193,1188,1081,1081,1015,1118,1641,1454,1763,1063,1107,1165,1143,1047,1076,1038,1032,974,873,997,1043,970,854,773,892,1296,1458,1388,1563,438,526,499,532,570,484,560,562,478,485,472,519,522,521,555,529,1394,1630,1660,1600,1681,1687,1614,1662,1685,1716,1788,1654,1651,1597,1643,1656,1446,312,1321,1394,1431,1339,1429,1330,1401,1330,1302,1051,1203,1092,1190,1096,1251,1106,1124,1446,1351,1459,1397,1517,1351,1418,1439,1541,1556,1517,1372,1423,1430,1363,1420,1380,1284,1115,1267,1111,1260,1213,1341,1140,1296,1143,1191,1240,1275,1244,1126,1260,1129,1412,1465,1523,1479,1681,1487,1560,1526,1400,1405,1468,1330,1055,1240,1143,1449,1412,1166,1165,806,1052,1243,671,2049,2048,2004,2007,2024,1987,2005,1962,2022,2020,2037,2006,2011,2013,2012,1967,2022,1446,1340,1567,1654,1121,1122,1123,1123,1121,1128,1118,1637,1497,1442,1575,1788,1685,1752,1761,1872,1577,1514,1485,1616,1592,1579,1547,1605,777,70,1228,2006,2029,1875,1877,1902,1830,1876,1896,1912,1849,1994,1913,1942,1935,1849,1905,1940,1905,1846,1857,1980,1870,1888,1958,1887,1748,1777,1807,1722,1978,1906,1893,1865,1881,1906,1911,1897,1868,1983,1739,1834,1861,1919,1826,1520,1733,1671,1662,1673,1721,1659,1691,1656,1732,1642,1647,1698,1722,1659,1696,1672,1667,1920,1457,1516,1608,1614,1596,1539,1447,1583,1603,1631,1658,1525,1514,1587,1565,1535,1897,1614,1633,1491,1585,1968,1802,1779,1771,1852,1873,1849,1849,1917,1400,1285,1301,1372,1284,1363,1330,1244,1604,1465,1451,1443,1458,1510,1481,1432,1489,1615,1456,1443,1472,1492,1477,1457,1435,1607,1460,1454,1434,1490,1491,1448,1462,1421,1641,1413,1413,1396,1514,1453,1428,1403,1604,1403,1396,1400,1426,1479,1453,1417,1411,1630,1418,1367,1427,1501,1451,1417,1382,1573,1440,1373,1408,1457,1467,1413,1433,1389,1606,1427,1373,1473,1491,1484,1459,1401,1509,1571,1471,1446,1480,1462,1506,1455,1403,1606,1325,1338,1358,1400,1322,1326,1325,1310,1565,1338,1312,1362,1381,1352,1298,1274,1574,1319,1289,1303,1376,1289,1354,1336,1247,1632,1432,1440,1467,1471,1502,1459,1418,1627,1419,1394,1441,1493,1451,1479,1449,1405,1594,1381,1377,1432,1451,1463,1421,1379,1530,1515,1364,1363,1468,1471,1437,1408,1398,1591,1415,1388,1419,1431,1475,1417,1421,1388,1653,1430,1418,1439,1498,1448,1424,1395,1711,1638,1823,1757,1764,1797,1644,1788,1825,1837,1810,1744,1589,1848,1735,1801,1684,1829,1822,1868,1868,1804,1930,1894,1819,1905,1923,1838,1813,1784,1840,1781,1783,1769,1890,1819,1706,1719,1733,1724,1698,1702,1719,1858,1736,1756,1691,1737,1717,1729,1668,1744,1961,1850,1822,1812,1793,1829,1815,1809,1914,1719,1743,1774,1715,1736,1725,1779,1766,1852,1897,1850,1847,1815,1821,1745,1794,1786,1879,1658,1734,1771,1497,1739,1749,1661,1756,1800,1766,1736,1780,1605,1674,1586,1821,1804,1734,1690,1605,1636,1693,1682,1683,1662,1768,1675,1647,1644,1673,1697,1687,1687,1669,1853,1842,1704,1790,1832,1795,1807,1798,1858,1753,1751,1709,1753,1800,1744,1814,1721,1795,1684,1695,1762,1726,1755,1688,1738,1790,1730,1686,1743,1660,1694,1673,1708,1732,1774,1664,1732,1635,1643,1673,1677,1747,1762,1538,1468,1517,1537,1502,1529,1540,1476,1834,2003,1929,1946,2006,1969,1946,1988,1891,1947,1992,2022,1989,1921,1977,1995,2006,1927,1270,40,40,39,164,163,40,40,39,1548,1811,1818,1830,1837,1835,1825,1777,1887,1493,1499,1494,1407,1395,1480,1449,1470,1868,1826,1787,1761,1799,1759,1798,1740,1799,717,392,40,40,38,318,38,40,40,433,1196,1325,1724,1697,1658,1713,1693,1674,1683,1738,1126,1213,1458,1437,624,1570,1486,1327,939,1780,1687,1647,837,40,38,40,317,40,40,38,272,1294,1330,1102,1229,1619,1663,1606,1674,1665,1672,1656,1625,1637,335,39,40,32,1028,680,70,807,1877,1951,1867,1680,1610,1647,1662,1671,1715,1742,1691,1732,1729,1732,1732,1737,1702,1677,1645,1245,1022,812,634,1807,1787,1731,1704,1753,1786,1706,1735,1872,1862,1787,1893,1838,1860,1839,1875,1798,1857,1705,1667,1805,1637,1798,1741,1730,1839,1786,1945,1873,1874,1866,1865,1925,1840,2012,1549,1410,1327,1246,1255,1563,1572,1486,1361,1409,1291,1305,1254,1286,1314,1402,1691,852,721,874,925,1213,1689,1307,736,609,711,1243,1597,1686,1610,872,1174,1403,1575,1155,966,836,924,821,592,878,1170,1358,1269,1122,1356,1319,1411,1329,1297,1789,1749,1802,1719,1763,1715,1743,1753,1755,1741,1750,1780,1765,1797,1753,1806,1381,930,955,919,1322,1940,1875,1742,1985,1233,1165,1175,1207,1870,2028,1971,2033,1988,1911,1890,1911,1879,2027,2045,2044,2030,1840,1809,1776,1848,1797,1819,1711,1814,1772,1654,1633,1617,1611,1712,1272,1279,1597,1481,1192,1259,1231,1375,1189,1246,1213,1459,1630,1186,1182,1659,1787,862,753,1374,1342,1033,728,1006,1524,1432,734,873,1695,1717,1351,1392,1632,1910,1879,1863,1889,1838,1950,1967,1954,1921,1663,1695,1637,1613,1739,1769,1796,1774,1640,1433,1418,1436,1572,1443,1389,1455,1528,1553,1465,1457,1518,1636,1515,1437,1514,1838,1973,1963,1922,1978,1995,1988,1975,1985,1864,1754,1758,1739,1828,1610,1564,1570,1790,1912,1832,1860,1926,1785,1831,1770,1823,1983,1861,1838,1912,1912,1792,1798,1797,1848,1614,1608,1540,1678,1175,1241,1475,1494,1153,1251,1177,1540,1342,1179,1293,1669,1762,1788,1771,1760,1925,1796,1798,1775,1870,1823,1821,1828,1662,793,882,831,724,1321,1151,1156,1177,1270,1198,1185,1160,1351,1345,1406,1314,1446,1840,1836,1868,1826,1890,1821,1843,1843,1932,1899,1924,1910,1938,1906,1946,1949,1942,1734,1762,1786,1708,1775,1797,1652,1544,1633,1642,1805,1781,1824,1850,1753,1832,1809,1600,1485,1414,1469,1541,1542,1768,1642,1561,1580,1654,1721,1637,1772,1794,1746,1805,1862,2039,2049,2027,1917,1991,1993,1988,1957,1953,1959,1931,1866,1358,1222,1491,1056,1574,1781,1739,1760,1742,1544,1584,1522,1524,1825,1769,1794,1732,1852,1812,1791,1794,1790,1705,1723,1698,1729,1581,1811,1794,1647,1381,986,1122,968,1670,676,550,540,1538,977,1190,964,1192,740,594,544,526,886,775,727,717,854,1039,1318,1207,1021,1483,1351,1381,1436,1542,1398,1371,1577,1562,1462,1441,1519,1536,1553,1428,1489,1482,1553,1352,1369,1482,1581,1441,1396,1487,1280,212,220,192,715,493,478,401,510,2013,2029,2049,2055,2040,2045,2042,2018,2041,1982,1938,1947,1907,1898,1941,1922,1910,1610,1385,1384,1474,1402,1160,1178,1110,1191,1377,1409,1448,1434,1850,1821,1833,1864,1896,1820,1782,1809,1885,1812,1754,1741,1798,1662,1738,1774,1726,1688,1301,1291,1346,1553,1363,1280,1392,1588,1788,1738,1800,1721,1371,1201,1238,1248,1714,1814,1777,1801,1792,1440,1366,1542,1407,2041,2041,2033,2019,2035,1981,1989,1990,1874,1508,1498,1477,1613,1681,1665,1664,1659,2026,1975,1990,1984,1928,1733,1705,1731,1885,2057,2048,2052,2053,1600,1560,1000,539,539,536,758,1373,1426,1420,1257,1176,1540,1488,1246,1380,1566,1437,1585,1544,1639,1702,1691,1876,1830,1512,1173,1372,1212,1316,969,985,971,1227,997,857,846,1055,1209,647,839,1192,2000,1983,1972,1959,1980,1970,1984,1976,1518,1899,1897,1868,1966,1998,1632,2006,2005,1918,1883,1893,1908,1840,2044,1371,2026,1779,1568,1666,1531,1484,1480,1620,1529,1420,1944,1892,1867,1855,1876,1908,1856,1870,1911,1576,1509,1448,1764,1960,1996,1996,1999,1940,1804,1795,1815,1849,1859,1886,1906,1780,1394,1466,1379,1303,1525,1507,1497,1463,1552,1617,1732,1662,1562,1507,1590,1522,1569,1720,1750,1619,1752,1680,1733,1676,1764,1646,1681,1522,1706,1675,1673,1542,1664,1645,1548,1532,1595,1559,1400,1832,1495,1597,1473,1471,1541,1484,1524,1446,1522,1693,1519,1333,1306,1389,1623,1686,1816,1387,1665,1601,1585,1766,1735,1658,1685,1460,1659,1554,1523,1615,1539,1427,1501,1878,1318,1417,1369,1297,1098,1159,1274,1187,1364,1451,1413,1345,1508,1509,1190,1309,1761,1662,1826,1604,1343,1076,1004,919,898,1092,1171,1268,1293,1460,1650,1554,1678,1919,1448,1331,1446,1544,1465,1536,1422,1464,1401,1653,1714,1726,1743,1638,1743,1769,1870,1762,1787,1801,1688,1332,1340,1337,1362,1431,1562,1608,1603,1600,1486,1422,1381,1439,1619,1314,1401,1389,1411,1385,1596,1556,1507,1459,1432,1413,1429,1433,1542,1396,1650,1890,1587,1406,1417,1391,1382,1361,1385,1411,1697,1746,1797,1611,1580,1498,1441,1408,1826,1401,1384,1429,1423,1410,1528,1670,1639,1637,1461,1507,1514,1376,1451,1499,1453,1661,1557,725,244,1320,1567,748,244,1236,1559,746,243,1244,1570,769,267,1252,1554,781,246,1186,1561,776,244,1062,1267,1265,1276,1388,1276,1300,1316,1303,1400,1263,1372,1263,1429,1300,1292,1288,1398,1565,1239,1215,1271,1224,1281,1253,1275,1214,1537,1187,1172,1239,1270,1190,1210,1185,1381,1329,1299,1282,1290,1265,1283,1245,1279,1760,1721,1794,1699,1678,1658,1717,1678,1695,1206,1382,1285,1397,1328,1398,1258,1410,1344,1383,1367,1367,1342,1421,1352,1402,1891,1685,1575,1576,1659,1580,1504,1459,1277,1355,1415,1459,1579,1518,1440,1507,1714,1895,1698,1591,1587,1669,1578,1516,1496,1256,1357,1391,1452,1575,1509,1451,1505,1729,1899,1691,1616,1567,1649,1557,1540,1477,1239,1379,1359,1434,1589,1503,1455,1512,1687,1914,1675,1614,1574,1663,1573,1563,1535,1286,1414,1333,1410,1548,1482,1491,1517,1658,1881,1349,1280,1134,952,998,1083,1127,1022,1159,1242,1259,1223,984,931,1080,1049,1404,1483,1269,1156,1022,1005,1026,1142,1017,1151,1213,1272,1250,990,958,1042,1067,1275,2020,1928,1915,1961,1963,1991,1941,1926,1873,1820,1776,1836,1891,1929,1942,1954,1953,1444,1978,1922,1974,2022,1990,1926,1973,1986,1186,1167,1146,1171,1325,1122,1138,1139,1557,1764,1756,1772,1752,1778,1745,1847,1760,1759,1794,1798,1773,1833,1523,1959,1988,1927,1903,1868,1965,1761,797,866,1855,1933,1998,1973,1996,1936,2013,1957,1959,2036,1961,1985,2001,1939,1981,1963,1958,1951,1592,1572,1573,1565,1583,1552,1574,1579,1765,1703,1631,1709,1573,1835,1641,1765,1611,1724,1489,1564,1506,1587,1704,1689,1741,1642,1782,1629,1719,1713,1904,1711,1811,1796,1825,1672,1663,1673,1665,1765,1717,1774,1641,1755,1505,1624,1527,1637,1640,1729,1699,1771,1724,1730,1836,1791,1704,1510,1756,1618,1810,1772,1829,1794,1810,1788,1793,1834,1779,1760,1688,1747,1602,1642,1535,1747,1637,1840,1686,1836,1795,1737,1713,1744,1804,1684,1532,1874,1935,1834,1253,1926,1927,1549,1674,1545,2006,2005,2016,1692,1574,1613,1402,1315,1201,1170,1567,1618,1595,1562,1519,1504,1562,1484,1546,1454,1224,959,891,1001,1342,1085,970,1111,1073,1786,1822,1857,1886,1794,1856,1765,1791,1979,1727,1575,1632,1662,1709,1778,1776,1665,1862,1826,1874,1878,1770,1875,1771,1798,1949,1824,1595,1670,1651,1743,1785,1797,1684,1844,1793,1893,1792,1924,1776,1945,1783,1918,1983,1875,1998,1967,1891,1938,1985,1938,2006,1838,1680,1763,1816,1783,1825,1856,1825,1503,1388,1582,1488,1263,1481,1540,1712,1458,1121,1335,1346,1248,1049,772,263,945,1296,1253,1335,1305,1428,1306,1309,1351,1307,1460,1293,1297,1340,1316,1467,1343,1345,1338,1441,1418,1577,986,1620,1550,1874,1936,2013,2046,1992,2002,1991,1919,1829,1631,1534,1502,1634,1639,1687,1698,1804,1740,1726,1697,1691,1631,1602,1585,1647,1245,1704,1858,1957,1849,1657,1693,1766,1965,1988,1878,1781,1646,1849,1925,1891,1801,1502,1728,1944,1898,1879,1704,1655,1919,1944,1990,1925,1827,1633,1852,1861,1890,1839,1565,960,979,971,1123,1552,1544,1614,1659,1638,1612,1628,1710,1480,1890,1689,1709,1730,1633,1702,1665,1647,1694,1655,1825,1834,1768,1754,1723,1670,1796,1661,1644,1703,1714,1771,1741,1950,1841,1520,1670,1876,1870,1931,1923,1943,1899,1758,1673,1762,1664,1694,1931,1913,1899,1883,1910,1964,1938,1894,1952,1941,1849,1776,1785,1791,1817,1967,1903,1913,1898,1904,1859,1877,1887,1330,1098,1305,1660,1607,1677,1588,1799,1789,1707,1780,1759,1753,1750,1768,1790,1744,1782,1705,1397,608,518,600,1259,1019,1257,1263,1220,1015,1681,1735,1616,1627,1695,1721,1483,1688,1753,1242,1701,1528,1316,1074,1662,1582,1706,1682,1710,1723,1738,1576,1582,1688,1522,1613,1494,1646,1572,1608,1608,1568,1693,1576,1685,1551,1657,1541,1549,1562,1499,1648,1512,1635,1538,1528,1654,1555,1674,1544,1577,1629,1795,1814,1852,1898,1857,1841,1832,1856,1879,1839,1840,1912,1910,1884,1876,1858,1951,2006,1979,1926,1878,1895,1933,1908,1903,1926,1952,1939,1877,1862,1835,1917,1905,1872,1648,1624,1599,1785,1629,1572,1636,1609,1615,1642,1619,1744,1628,1660,1632,1653,1624,1632,1632,1617,1762,1657,1628,1649,1637,1662,1638,1654,1736,1880,1871,1880,1864,1877,1857,1857,1854,1946,1844,1835,1823,1847,1840,1843,1843,1894,1933,1851,1861,1865,1853,1843,1857,1863,1854,1318,1431,1429,1340,1399,1425,1606,1389,1354,1409,1496,1431,1459,1606,1877,1890,1824,1730,1800,1831,1881,1902,1799,1672,1733,1723,1743,1661,1728,1700,1679,1610,1691,1742,1662,1773,1724,1778,1540,1719,1777,1861,1814,1888,1655,1692,1876,1883,1926,1860,1784,1639,1805,1769,1798,1809,1411,1694,1709,1666,1820,1687,1646,1807,1733,1878,1740,1787,1632,1716,1629,1618,1763,1721,1419,1501,1479,1560,1520,1654,1382,1732,1601,1503,1579,1629,1568,1513,1608,1569,1557,1545,1573,1754,1807,1779,1781,1745,1763,1775,1425,1393,1772,1788,1836,1747,1712,1737,1486,1711,1704,1784,1667,1377,1282,1748,1756,1761,1478,1489,1449,1439,1680,1563,1430,1571,1521,1523,1490,1532,1479,1542,1359,1418,1532,1541,1587,1464,1477,1476,1717,1530,1544,1437,1376,1469,1493,1753,1798,1877,1809,1832,1856,1782,1738,1705,1621,1644,1799,1683,1795,1707,1748,1789,1724,1730,2007,2051,2009,2017,2022,1990,1874,1717,1673,1673,1699,1719,1772,1718,1681,1699,1816,1778,1607,1851,1691,1732,1702,1738,1607,1701,1665,1732,1802,1670,1713,1645,1770,1708,1746,1689,1590,1802,1740,1402,1443,1776,1769,1656,1693,1759,1384,1505,1534,1517,1495,1443,1603,1521,1486,1788,1758,1651,1747,1724,1662,1764,1751,1627,1671,1636,1671,1638,1611,1629,1634,1692,1663,1638,1606,1683,1609,1671,1627,1744,1643,1651,1631,1657,1697,1627,1670,1645,1719,1629,1658,1657,1685,1626,1645,1594,1729,1607,1639,1716,1767,1723,1643,1617,1640,1719,1627,1670,1657,1786,1660,1618,1629,1670,1704,1777,1864,1691,1648,1708,1816,1694,1705,1755,1830,1796,1751,1876,1886,1873,1989,1968,1951,1941,1973,1875,1830,1873,1963,2004,2017,2009,1908,1881,1918,1791,1844,1969,2019,2013,1996,2001,1952,1946,1909,1884,1907,1927,1942,1951,1973,1817,1809,1920,1912,1897,1829,1611,1618,1809,1854,1826,1667,1625,1606,1635,1631,1664,1264,1100,969,1133,1191,1283,1139,1292,1237,1208,1145,1176,1235,1225,1247,1195,1261,1573,1702,1701,1758,1651,1696,1703,1785,1712,1660,1748,1829,1693,1683,1639,1696,1671,1703,1625,1649,1650,1710,1676,1726,1632,1638,1754,1668,1675,1632,1850,1713,1719,1729,1672,1722,1731,1744,1729,1766,1697,1722,1736,2013,2039,2010,2042,2042,2027,2036,2024,2050,2034,2022,2049,2057,2056,2054,2023,2041,1984,1858,1852,1921,1927,1912,1868,1846,1908,1636,1663,1579,1665,1781,1729,1558,1588,1745,1624,1710,1678,1640,1694,1701,1777,1665,1704,1684,1553,1692,1405,1586,1742,1924,1728,1691,1701,1704,1912,1875,1866,1809,1774,1764,1795,1827,1889,1496,1918,1977,2015,1978,1902,1900,1794,1660,1666,1758,1716,1775,1739,1794,1673,1699,1774,1660,1703,1694,1499,1484,1518,1542,1491,1583,1524,1517,1487,1578,1485,1510,1513,1563,1512,1510,1492,1528,918,984,843,1034,1441,1452,1292,1418,1336,1398,1400,1407,1323,1800,1623,1702,1656,1627,1600,1637,1704,1814,1664,1679,1650,1791,1763,1714,1736,1665,1800,1625,1695,1656,764,1597,1643,1697,1822,1905,1904,1900,1868,1880,1912,1903,1896,1952,1776,1558,1500,1530,1455,1537,1634,1943,1918,1866,1657,1598,1515,1612,1779,1901,1923,1637,1690,1638,1616,1618,1662,1696,1704,1569,1402,1616,1679,1702,1726,1774,1266,1455,1215,1402,1447,1653,1742,1749,1511,1233,1602,1419,1390,1316,1402,1338,1380,1365,1471,1490,1269,1389,1308,1315,1301,1232,1360,1548,1292,1568,1505,1681,1715,1478,1135,1458,1439,1214,1465,1583,1630,1490,1422,1150,1568,1479,1405,1310,1271,1222,1223,1408,1544,1603,1417,1672,1710,1762,1687,1790,1330,1648,1285,1675,1562,1667,1649,1555,1244,1433,1670,1265,1478,1591,1628,1543,1382,1274,1663,1345,1434,1457,1676,1745,1678,1688,1330,1672,1521,1484,1458,1486,1554,1422,1468,1660,1808,1742,1758,1799,800,69,732,960,786,577,626,434,831,491,645,1137,917,739,1426,1405,1379,1424,1409,1448,1660,1676,1637,1634,1555,1527,1820,1688,1212,1056,1197,1173,1326,1364,1214,1226,1448,1434,1594,1556,1495,1483,1666,1675,1391,1332,1433,1187,25,30,25,102,912,957,1026,1146,1630,1646,1618,1595,1409,1463,1575,1582,1520,1562,1903,1916,1910,1919,1892,1932,1492,1471,1467,1481,914,935,1237,1254,1428,1439,1491,1497,1419,1469,1739,1770,1507,1577,1509,1571,1576,1530,1543,1581,2049,2057,2039,2023,1869,1865,2049,2001,1741,1815,1892,1881,2013,2004,2025,2003,2010,2002,2009,1995,2051,2038,1729,1742,2004,1991,1993,1991,1682,1657,1239,1219,1198,1228,1987,1999,1689,1723,1886,1893,1756,1777,1764,1764,2030,2012,1992,1993,2035,1992,2006,2012,1537,1546,1538,1517,1551,1541,1564,1536,1369,1419,1302,1354,1288,1267,1367,1295,2011,2000,1995,1965,2005,1969,1944,1897,2003,1934,1699,1678,1645,1678,1658,1605,253,259,1134,1380,1356,1096,955,1041,1014,1022,1576,1720,1587,1677,1724,1719,1508,1523,1571,1593,1533,1554,1491,1486,1359,1380,1081,1114,1329,1330,1257,1260,1456,1405,1587,1603,1445,1479,1371,1410,909,976,1577,1569,956,1011,1322,1329,1487,1409,1484,1551,1159,1215,1545,1557,1932,1921,1304,1326,1219,1305,1580,1586,1600,1628,1586,1585,1504,1523,1500,1500,1214,1338,1588,1579,1360,1358,1404,1388,1357,1405,561,629,390,441,1496,1521,1638,1611,1409,1434,1521,1524,1392,1352,1140,1144,1269,1372,1486,1475,1089,952,878,943,1763,1845,1793,1813,1543,1515,963,1000,1560,1573,1553,1572,1587,1583,1575,1600,1841,1813,1802,1790,1851,1848,1827,1841,1286,1429,1376,1375,1414,1430,1658,1692,1918,1989,1850,1956,1918,1989,1850,1961,1875,1939,1544,1518,600,676,856,924,1201,1529,1650,1699,1484,1535,1428,1380,1151,1055,665,686,809,830,607,607,1468,1424,506,525,507,566,1769,1845,1107,1133,1042,1083,1365,1396,1105,1023,897,979,1451,1474,1451,1453,1405,1447,1695,1717,1651,1669,1865,1900,1541,1545,984,974,1135,1153,916,914,863,900,1017,996,1220,1204,500,500,632,632,516,516,627,627,505,505,628,628,516,516,599,599,476,476,553,637,1879,1872,1050,1068,1040,1064,1041,1031,1076,1121,1807,1713,1672,1708,1626,1678,1733,1656,1153,1202,1646,1651,1678,1741,1885,1821,206,233,294,337,189,196,309,312,128,247,80,128,145,204,207,189,228,308,1446,1486,1574,1649,1069,1083,1055,1085,1169,1230,1480,1507,1455,1463,1864,1852,1683,1689,1486,1505,1608,1637,1361,1394,1961,1971,2024,2038,1954,1938,1974,1957,1957,1979,2014,1953,1278,1275,1478,1660,1657,1178,1606,1484,1481,1483,1526,1431,1474,1460,1517,1532,1522,1525,993,1241,1329,1349,1188,1242,1339,1053,1099,1028,1909,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,1909,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2054,2057,1937,1998,2048,2022,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2005,2048,2048,2048,2005,2048,2048,2048,2048,2057,2048,2006,2048,2048,2048,2048,1917,2048,2048,2048,2057,1917,2048,2007,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2050,2007,1837,2038,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,1980,1873,2048,2048,2048,2048,2048,1984,1915,2048,2048,2048,2048,2043,1976,1940,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2036,1987,1812,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2054,2048,2055,2048,2050,2028,1976,1702,2048,2003,2048,2011,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2029,1934,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2051,1905,2048,2048,2048,2048,1987,2048,2048,2048,2048,1969,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,2048,2048,2056,1993,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2005,2048,2005,2048,2008,2048,2048,2001,2009,2048,1805,1991,2052,2055,1988,1878,1978,2056,2055,2011,1919,1921,2038,2048,2045,1919,1934,2022,2056,2050,1960,1884,2004,2056,2048,1985,1916,1970,2051,2048,2017,1868,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2009,2048,2048,2048,2048,2009,2048,2005,2048,2002,2007,2045,2038,2048,2048,2048,2048,2001,2048,2048,2048,2048,1949,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2005,2048,2003,2005,2048,2004,2048,2048,2005,2048,2048,2006,2048,2003,2048,2007,2048,2003,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2000,2048,2048,2009,2048,2048,2048,2048,2004,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2055,2054,2049,2039,1905,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2016,2009,1999,1882,1826,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1991,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1953,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2001,2020,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2010,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,1998,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2001,2048,2048,2000,2048,2010,2048,2048,2002,2048,2005,2048,2004,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2002,2010,2048,2005,2048,2048,2048,2048,2022,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,1994,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2057,2053,2056,2029,1964,1749,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2055,2055,2030,1873,1942,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2056,2039,1884,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2049,1905,1957,2048,2048,2048,2048,2048,2013,2007,2053,2028,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1950,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2049,1982,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2056,2042,1879,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2052,1975,1915,2048,2003,2048,2005,2005,2048,2003,2048,2048,2048,2048,2048,2019,1955,2048,2048,2048,2048,2048,2032,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2007,2048,1944,2048,2001,2011,1948,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2007,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2014,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2010,2048,2007,2001,2048,2048,2029,2038,2048,2048,1980,2048,2001,2002,2009,2009,1873,2011,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2021,1965,1821,1963,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1857,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2007,2048,2048,2048,2048,2007,2048,2048,2048,2048,2054,1888,2048,2048,2048,2048,2052,2035,1849,2054,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1951,2027,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,1988,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2007,2048,2048,2048,2048,2002,2048,2055,2048,2011,1997,1882,2048,2048,2048,2006,2000,1983,1979,1994,2048,2048,1991,2048,2048,1997,2048,2000,2048,2048,2048,2048,1993,2048,2048,1965,1983,2048,2014,2053,2048,2050,1953,2048,2006,2048,2048,2048,1997,2048,2005,2048,2004,1934,1876,2053,2048,2048,1991,2048,2048,2048,2048,2048,2048,1953,1975,2048,2048,2048,2048,2048,2006,1992,2048,2048,2007,1990,2048,2048,2048,2048,2048,2048,1991,2048,2048,2048,1937,2048,2048,2048,1761,1499,1162,1211,1668,1410,1257,1958,1322,957,1157,1100,1398,1416,1466,1480,1460,1145,787,898,357,25,413,1653,1722,1895,1844,1624,1211,1288,1203,1135,924,1022,1048,1240,1562,1676,1574,1689,1696,1658,1634,1727,1699,1702,1605,1654,1703,1665,1648,1682,1690,1692,1700,1651,1687,1654,1638,1637,1694,1659,1704,1162,1240,1535,1546,1636,1896,1896,1853,1950,1540,1183,1273,1128,1229,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1743,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2055,2051,2030,2049,1986,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,1997,1933,1934,1937,2048,2002,2048,1996,2002,2001,2048,1921,2048,1995,1993,1928,1938,2048,2048,1999,2048,2002,2048,2048,1992,1999,2048,2000,1990,1996,2048,1996,1958,2048,1988,2048,1992,1997,2005,2037,1995,2000,2047,1981,1979,1982,1931,2048,2048,2048,2048,2048,2048,2048,2048,2048,1937,2048,2048,2048,2048,2048,2048,2048,2048,1992,1998,2048,2048,2048,2048,2048,1979,2001,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,1937,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,1932,2048,2048,1935,2048,2048,2048,2048,2048,2048,2048,2048,2048,2022,2051,2000,2001,1993,2048,2048,2048,2048,2048,2000,1998,1862,1999,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,1996,2048,2048,2048,2048,1967,2048,2048,1997,2048,2048,1934,2048,2005,2002,1479,2048,2030,2045,2003,2048,1995,2048,1992,1995,2001,1999,1941,2048,2048,1992,2048,1994,2053,2022,1998,2048,1937,2048,2048,1995,2048,1998,2048,1997,2048,1999,2048,2001,2048,2048,1993,2048,1996,2048,2048,2048,2048,2048,1998,2048,2002,2048,2005,2048,2004,2048,2048,1993,1997,2003,2048,1994,2003,2003,2048,1934,2048,2048,2048,1994,2048,2048,2000,2048,2048,2002,2048,2048,2001,2048,2048,1997,2048,2003,2048,2048,1994,2048,1998,2048,2001,2048,2002,2048,2048,2048,1993,2048,1999,2048,1999,2048,1999,2048,2003,2048,1993,2004,1939,2004,1901,2048,2048,2003,2048,2048,1997,2048,1996,2048,1999,2048,2007,2048,2048,1998,2048,2003,2048,2048,2001,2048,2048,1994,1995,1803,2048,2048,2048,2048,1998,2048,2048,2048,2048,1998,1940,2048,2003,1932,2048,2003,2001,2048,2048,2048,2003,2048,2048,2048,2048,2048,2001,1925,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,1839,2048,2048,1991,2048,1998,1937,2048,2048,1998,2048,2000,2048,2001,2048,2007,1932,2002,2048,1999,2004,2048,1995,2000,1998,2048,1997,1885,2048,1981,2048,1999,1997,2048,2048,2048,2001,2048,2048,2048,2048,1999,1982,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1992,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,1993,2048,2048,2048,1997,2048,2016,2001,2048,1995,2003,2048,1999,1999,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2014,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1983,2048,1996,2048,2048,1995,2048,1993,1999,2048,2002,2048,1936,1996,2056,2048,1994,2048,2002,2048,2048,1995,2048,1999,2048,2048,1997,2048,2048,1989,2048,1996,2048,2048,1997,1997,2048,2001,2048,2002,2048,1999,2048,2048,2000,2048,2048,1995,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2017,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,1908,1796,2048,2048,1995,2048,1997,2048,1997,2048,1997,2048,1998,2002,2048,2038,1925,2048,2048,1995,2004,1977,2048,1998,2007,1996,2048,1996,2048,1903,2048,2000,2048,2048,1999,2048,2048,1993,2048,1998,2048,2000,2048,2002,2048,1983,2048,1996,2048,2001,2048,1993,1998,1994,1936,1998,1997,2048,1999,2048,1997,2048,1993,1998,2048,1993,1998,1999,2048,1995,1999,2048,2005,2048,1997,2048,2048,1995,2048,2002,2048,2003,2048,1941,1997,2048,1993,2002,2038,2040,1996,1999,1998,2048,2004,1999,2048,2002,2005,2048,2001,2048,2000,2003,2048,2048,1997,2048,2048,1996,2048,2048,2005,2048,2002,2048,2048,2003,2048,2048,1998,2048,2000,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2002,2000,2048,2048,1966,2048,2048,1998,2048,2048,1871,1737,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2001,2048,2048,2048,2048,1334,1992,2048,2048,2048,2048,2000,2005,1997,2048,2048,2002,2048,2048,2048,2048,1875,2048,2048,2007,2048,2048,1999,2048,2002,2048,2002,2048,2048,2001,2056,2048,1995,2048,2002,1999,2048,2048,2048,2000,2007,2048,2048,2001,1932,1929,2048,1932,2003,1995,1931,1994,2048,2048,2048,1998,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,2000,2048,2000,2048,1980,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,1995,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,1996,2048,1998,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,1918,2048,2048,2048,2048,1993,2048,2004,2048,2057,1888,1640,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,1998,2055,2048,2048,2048,2048,1980,2048,2048,1983,2054,2048,2048,2048,2048,2048,1849,2048,2048,1985,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,1997,2048,2001,2048,2048,2000,2048,2048,2048,1905,1986,2048,1866,2048,2048,1889,1766,2048,2048,2048,2055,2056,1994,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2050,1989,2048,2048,1992,2048,2001,2030,2047,2048,2048,1944,2048,2048,2048,2048,2048,2048,1996,2048,1917,2048,2048,1987,2048,2048,1994,2048,1995,2048,2001,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,1946,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2002,2048,1998,2048,2048,2048,1930,1993,2048,1959,1813,2048,2048,2048,2048,1993,2048,1979,2048,2048,1981,2048,1993,2043,1757,2053,1822,2048,2048,2048,2048,1959,2048,2048,2048,2048,2048,2056,2048,1948,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1984,1900,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,1993,2048,1994,2048,2048,2048,2038,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,1990,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,1999,2048,2048,2003,2005,1942,1937,1839,2048,2048,2048,2048,2048,1798,2048,2048,2048,2048,2014,1871,2048,2048,2048,2048,1901,2048,2048,2048,1990,2048,2048,2048,1937,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2045,2003,2038,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,1436,1128,1151,1200,978,936,1532,1878,1778,1731,1877,1706,1265,1280,1788,2048,2048,1821,34,34,34,34,34,34,34,34,749,924,951,1091,1151,1029,888,774,884,970,1026,811,1052,1071,880,1030,1098,1018,1006,1030,812,854,860,893,1067,973,936,852,900,842,993,856,961,965,749,886,937,1123,1046,1017,1079,1379,1242,1294,1171,1385,1360,1346,1386,1331,1389,1287,850,1067,952,941,954,1034,1020,901,1275,857,1126,1163,1105,1162,1172,1112,1117,1177,1324,1306,1411,1489,1525,1116,897,899,1527,1872,1883,1895,1972,1782,1890,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1982,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,1981,2048,1980,2048,1492,1332,1548,1564,1174,1322,1552,1368,257],\"successes\":[1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,1,0,1,1,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,1,0,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,0,1,1,0,0,1,0,1,0,0,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,1,1,0,1,0,1,1,0,1,0,1,1,1,0,0,0,1,0,1,1,0,0,1,0,1,1,0,1,1,1,0,1,0,1,0,1,1,1,0,0,0,0,0,0,0,1,1,0,1,1,1,1,0,1,1,0,0,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,0,0,1,1,1,1,0,1,1,0,0,1,0,1,1,0,0,1,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,0,1,1,1,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,1,0,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,0,1,1,0,0,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,0,1,1,0,0,0,1,1,0,1,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,0,1,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,0,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1,1,0,0,0,1,0,0,1,1,1,0,0,0,0,0,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,0,1,1,0,1,1,0,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,1,0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,1,0,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,1,1,0,0,1,0,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,0,1,1,1,0,0,0,1,1,1,1,1,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,1,0,1,1,1,1,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,1,0,0,1,0,1,0,0,1,1,0,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,1,0,0,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1,1,1,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,0,0,0,1,0,1,0,1,0,1,0,0,1,1,1,0,1,1,1,0,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,1,0,0,1,1,1,0,0,0,0,1,0,0,0,0,1,1,0,1,1,0,1,1,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,1,0,0,1,0,1,0,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,1,1,0,1,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,1,1,0,1,0,1,1,1,0,1,0,1,0,0,1,0,1,0,0,1,0,0,1,0,1,0,0,1,1,0,1,0,1,0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,1,0,1,0,1,0,1,0,1,1,0,1,1,0,0,1,1,1,0,1,1,1,0,1,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,0,1,0,1,0,1,1,0,1,1,1,0,1,1,0,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,0,1,1,0,0,1,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,1,0,1,0,0,1,1,0,1,0,1,1,0,0,0,1,1,0,0,1,1,1,0,1,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,1,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,1,0,0,1,1,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,0,0,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,0,1,0,1,1,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,1,0,0,0,0,1,0,1,0,0,1,0,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1]}\r\n;\r\n            compressedData['data'] = byteArray;\r\n            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');\r\n            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, false);\r\n            Module['removeRunDependency']('datafile_C:/Dev/EDGE-classic/web/site/edge-classic.data');\r\n      };\r\n      Module['addRunDependency']('datafile_C:/Dev/EDGE-classic/web/site/edge-classic.data');\r\n\r\n      if (!Module.preloadResults) Module.preloadResults = {};\r\n\r\n        function preloadFallback(error) {\r\n          console.error(error);\r\n          console.error('falling back to default preload behavior');\r\n          fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, processPackageData, handleError);\r\n        };\r\n\r\n        openDatabase(\r\n          function(db) {\r\n            checkCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME,\r\n              function(useCached, metadata) {\r\n                Module.preloadResults[PACKAGE_NAME] = {fromCache: useCached};\r\n                if (useCached) {\r\n                  fetchCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME, metadata, processPackageData, preloadFallback);\r\n                } else {\r\n                  fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE,\r\n                    function(packageData) {\r\n                      cacheRemotePackage(db, PACKAGE_PATH + PACKAGE_NAME, packageData, {uuid:PACKAGE_UUID}, processPackageData,\r\n                        function(error) {\r\n                          console.error(error);\r\n                          processPackageData(packageData);\r\n                        });\r\n                    }\r\n                  , preloadFallback);\r\n                }\r\n              }\r\n            , preloadFallback);\r\n          }\r\n        , preloadFallback);\r\n\r\n        if (Module['setStatus']) Module['setStatus']('Downloading...');\r\n\r\n    }\r\n    if (Module['calledRun']) {\r\n      runWithFS();\r\n    } else {\r\n      if (!Module['preRun']) Module['preRun'] = [];\r\n      Module[\"preRun\"].push(runWithFS); // FS is not initialized yet, wait for it\r\n    }\r\n\r\n    }\r\n    loadPackage({\"files\": [{\"filename\": \"/.gitkeep\", \"start\": 0, \"end\": 0}, {\"filename\": \"/edge_base/blasphemer/graphics/NULL.png\", \"start\": 0, \"end\": 1160}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARL.lmp\", \"start\": 1160, \"end\": 3871}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARR.lmp\", \"start\": 3871, \"end\": 6582}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK0.png\", \"start\": 6582, \"end\": 8078}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK1.png\", \"start\": 8078, \"end\": 9168}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK10.png\", \"start\": 9168, \"end\": 10119}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK11.png\", \"start\": 10119, \"end\": 11090}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK12.png\", \"start\": 11090, \"end\": 12362}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK13.png\", \"start\": 12362, \"end\": 13594}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK14.png\", \"start\": 13594, \"end\": 15134}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK15.png\", \"start\": 15134, \"end\": 16101}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK2.png\", \"start\": 16101, \"end\": 17161}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK3.png\", \"start\": 17161, \"end\": 17828}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK4.png\", \"start\": 17828, \"end\": 18392}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK5.png\", \"start\": 18392, \"end\": 19330}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK6.png\", \"start\": 19330, \"end\": 20665}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK7.png\", \"start\": 20665, \"end\": 21295}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK8.png\", \"start\": 21295, \"end\": 22711}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK9.png\", \"start\": 22711, \"end\": 23673}, {\"filename\": \"/edge_base/blasphemer/scripts/anims.ddf\", \"start\": 23673, \"end\": 25224}, {\"filename\": \"/edge_base/blasphemer/scripts/attacks.ddf\", \"start\": 25224, \"end\": 66350}, {\"filename\": \"/edge_base/blasphemer/scripts/colmap.ddf\", \"start\": 66350, \"end\": 66645}, {\"filename\": \"/edge_base/blasphemer/scripts/flats.ddf\", \"start\": 66645, \"end\": 67202}, {\"filename\": \"/edge_base/blasphemer/scripts/fonts.ddf\", \"start\": 67202, \"end\": 68357}, {\"filename\": \"/edge_base/blasphemer/scripts/games.ddf\", \"start\": 68357, \"end\": 71386}, {\"filename\": \"/edge_base/blasphemer/scripts/images.ddf\", \"start\": 71386, \"end\": 73327}, {\"filename\": \"/edge_base/blasphemer/scripts/language.ldf\", \"start\": 73327, \"end\": 81540}, {\"filename\": \"/edge_base/blasphemer/scripts/levels.ddf\", \"start\": 81540, \"end\": 94410}, {\"filename\": \"/edge_base/blasphemer/scripts/lines.ddf\", \"start\": 94410, \"end\": 99245}, {\"filename\": \"/edge_base/blasphemer/scripts/lua/edge_hud.lua\", \"start\": 99245, \"end\": 118474}, {\"filename\": \"/edge_base/blasphemer/scripts/playlist.ddf\", \"start\": 118474, \"end\": 120630}, {\"filename\": \"/edge_base/blasphemer/scripts/rscript.rts\", \"start\": 120630, \"end\": 134037}, {\"filename\": \"/edge_base/blasphemer/scripts/sectors.ddf\", \"start\": 134037, \"end\": 138029}, {\"filename\": \"/edge_base/blasphemer/scripts/sounds.ddf\", \"start\": 138029, \"end\": 149715}, {\"filename\": \"/edge_base/blasphemer/scripts/styles.ddf\", \"start\": 149715, \"end\": 154813}, {\"filename\": \"/edge_base/blasphemer/scripts/switch.ddf\", \"start\": 154813, \"end\": 155226}, {\"filename\": \"/edge_base/blasphemer/scripts/things.ddf\", \"start\": 155226, \"end\": 242473}, {\"filename\": \"/edge_base/blasphemer/scripts/weapons.ddf\", \"start\": 242473, \"end\": 253095}, {\"filename\": \"/edge_base/chex/graphics/BOSSBACK.lmp\", \"start\": 253095, \"end\": 372383}, {\"filename\": \"/edge_base/chex/graphics/CQ1TITLE.lmp\", \"start\": 372383, \"end\": 491671}, {\"filename\": \"/edge_base/chex/graphics/CQ2TITLE.lmp\", \"start\": 491671, \"end\": 610959}, {\"filename\": \"/edge_base/chex/graphics/ENDPIC.lmp\", \"start\": 610959, \"end\": 730247}, {\"filename\": \"/edge_base/chex/graphics/HELP.lmp\", \"start\": 730247, \"end\": 849535}, {\"filename\": \"/edge_base/chex/graphics/HELP2.lmp\", \"start\": 849535, \"end\": 968823}, {\"filename\": \"/edge_base/chex/graphics/INTERPIC.lmp\", \"start\": 968823, \"end\": 1088111}, {\"filename\": \"/edge_base/chex/graphics/M_SKULL1.png\", \"start\": 1088111, \"end\": 1088678}, {\"filename\": \"/edge_base/chex/graphics/M_SKULL2.png\", \"start\": 1088678, \"end\": 1089426}, {\"filename\": \"/edge_base/chex/graphics/PFUB0.lmp\", \"start\": 1089426, \"end\": 1276874}, {\"filename\": \"/edge_base/chex/graphics/PFUB1.lmp\", \"start\": 1276874, \"end\": 1345042}, {\"filename\": \"/edge_base/chex/graphics/PFUB2.lmp\", \"start\": 1345042, \"end\": 1464330}, {\"filename\": \"/edge_base/chex/graphics/STBAR.lmp\", \"start\": 1464330, \"end\": 1487298}, {\"filename\": \"/edge_base/chex/graphics/VICTORY2.lmp\", \"start\": 1487298, \"end\": 1606586}, {\"filename\": \"/edge_base/chex/graphics/WIMAP1.lmp\", \"start\": 1606586, \"end\": 1725874}, {\"filename\": \"/edge_base/chex/graphics/WIMAP2.lmp\", \"start\": 1725874, \"end\": 1845162}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT033.lmp\", \"start\": 1845162, \"end\": 1845279}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT034.lmp\", \"start\": 1845279, \"end\": 1845412}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT035.lmp\", \"start\": 1845412, \"end\": 1845663}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT036.lmp\", \"start\": 1845663, \"end\": 1845990}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT037.lmp\", \"start\": 1845990, \"end\": 1846253}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT038.lmp\", \"start\": 1846253, \"end\": 1846345}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT039.lmp\", \"start\": 1846345, \"end\": 1846503}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT040.lmp\", \"start\": 1846503, \"end\": 1846661}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT041.lmp\", \"start\": 1846661, \"end\": 1846821}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT042.lmp\", \"start\": 1846821, \"end\": 1846941}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT043.lmp\", \"start\": 1846941, \"end\": 1847016}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT044.lmp\", \"start\": 1847016, \"end\": 1847094}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT045.lmp\", \"start\": 1847094, \"end\": 1847168}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT046.lmp\", \"start\": 1847168, \"end\": 1847359}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT047.lmp\", \"start\": 1847359, \"end\": 1847586}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT048.lmp\", \"start\": 1847586, \"end\": 1847724}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT049.lmp\", \"start\": 1847724, \"end\": 1847968}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT050.lmp\", \"start\": 1847968, \"end\": 1848215}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT051.lmp\", \"start\": 1848215, \"end\": 1848421}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT052.lmp\", \"start\": 1848421, \"end\": 1848665}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT053.lmp\", \"start\": 1848665, \"end\": 1848904}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT054.lmp\", \"start\": 1848904, \"end\": 1849102}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT055.lmp\", \"start\": 1849102, \"end\": 1849329}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT056.lmp\", \"start\": 1849329, \"end\": 1849568}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT057.lmp\", \"start\": 1849568, \"end\": 1849656}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT058.lmp\", \"start\": 1849656, \"end\": 1849762}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT059.lmp\", \"start\": 1849762, \"end\": 1849923}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT060.lmp\", \"start\": 1849923, \"end\": 1850015}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT061.lmp\", \"start\": 1850015, \"end\": 1850176}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT062.lmp\", \"start\": 1850176, \"end\": 1850370}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT063.lmp\", \"start\": 1850370, \"end\": 1850591}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT064.lmp\", \"start\": 1850591, \"end\": 1850792}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT065.lmp\", \"start\": 1850792, \"end\": 1850995}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT066.lmp\", \"start\": 1850995, \"end\": 1851221}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT067.lmp\", \"start\": 1851221, \"end\": 1851417}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT068.lmp\", \"start\": 1851417, \"end\": 1851575}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT069.lmp\", \"start\": 1851575, \"end\": 1851800}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT070.lmp\", \"start\": 1851800, \"end\": 1852027}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT071.lmp\", \"start\": 1852027, \"end\": 1852138}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT072.lmp\", \"start\": 1852138, \"end\": 1852329}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT073.lmp\", \"start\": 1852329, \"end\": 1852535}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT074.lmp\", \"start\": 1852535, \"end\": 1852697}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT075.lmp\", \"start\": 1852697, \"end\": 1852985}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT076.lmp\", \"start\": 1852985, \"end\": 1853208}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT077.lmp\", \"start\": 1853208, \"end\": 1853431}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT078.lmp\", \"start\": 1853431, \"end\": 1853601}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT079.lmp\", \"start\": 1853601, \"end\": 1853830}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT080.lmp\", \"start\": 1853830, \"end\": 1854044}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT081.lmp\", \"start\": 1854044, \"end\": 1854248}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT082.lmp\", \"start\": 1854248, \"end\": 1854407}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT083.lmp\", \"start\": 1854407, \"end\": 1854628}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT084.lmp\", \"start\": 1854628, \"end\": 1854824}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT085.lmp\", \"start\": 1854824, \"end\": 1855141}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT086.lmp\", \"start\": 1855141, \"end\": 1855343}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT087.lmp\", \"start\": 1855343, \"end\": 1855513}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT088.lmp\", \"start\": 1855513, \"end\": 1855713}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT089.lmp\", \"start\": 1855713, \"end\": 1855931}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT090.lmp\", \"start\": 1855931, \"end\": 1856122}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT091.lmp\", \"start\": 1856122, \"end\": 1856340}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT092.lmp\", \"start\": 1856340, \"end\": 1856523}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT093.lmp\", \"start\": 1856523, \"end\": 1856603}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT094.lmp\", \"start\": 1856603, \"end\": 1856695}, {\"filename\": \"/edge_base/chex/graphics/credit.lmp\", \"start\": 1856695, \"end\": 1975983}, {\"filename\": \"/edge_base/chex/graphics/help1.lmp\", \"start\": 1975983, \"end\": 2095271}, {\"filename\": \"/edge_base/chex/graphics/titlepic.lmp\", \"start\": 2095271, \"end\": 2214559}, {\"filename\": \"/edge_base/chex/graphics/wimap0.lmp\", \"start\": 2214559, \"end\": 2333847}, {\"filename\": \"/edge_base/chex/scripts/fonts.ddf\", \"start\": 2333847, \"end\": 2334469}, {\"filename\": \"/edge_base/chex/scripts/games.ddf\", \"start\": 2334469, \"end\": 2336814}, {\"filename\": \"/edge_base/chex/scripts/language.ldf\", \"start\": 2336814, \"end\": 2341982}, {\"filename\": \"/edge_base/chex/scripts/levels.ddf\", \"start\": 2341982, \"end\": 2347518}, {\"filename\": \"/edge_base/chex/scripts/rscript.rts\", \"start\": 2347518, \"end\": 2347912}, {\"filename\": \"/edge_base/chex/scripts/styles.ddf\", \"start\": 2347912, \"end\": 2350757}, {\"filename\": \"/edge_base/doom/graphics/CREDIT.lmp\", \"start\": 2350757, \"end\": 2470045}, {\"filename\": \"/edge_base/doom/graphics/ENDPIC.lmp\", \"start\": 2470045, \"end\": 2589333}, {\"filename\": \"/edge_base/doom/graphics/HELP1.lmp\", \"start\": 2589333, \"end\": 2708621}, {\"filename\": \"/edge_base/doom/graphics/INTERPIC.lmp\", \"start\": 2708621, \"end\": 2827909}, {\"filename\": \"/edge_base/doom/graphics/PFUB1.lmp\", \"start\": 2827909, \"end\": 2947197}, {\"filename\": \"/edge_base/doom/graphics/PFUB2.lmp\", \"start\": 2947197, \"end\": 3066485}, {\"filename\": \"/edge_base/doom/graphics/TITLEPIC.lmp\", \"start\": 3066485, \"end\": 3185773}, {\"filename\": \"/edge_base/doom/graphics/VICTORY2.lmp\", \"start\": 3185773, \"end\": 3305061}, {\"filename\": \"/edge_base/doom/graphics/WIA20000.lmp\", \"start\": 3305061, \"end\": 3334181}, {\"filename\": \"/edge_base/doom/graphics/WIA20001.lmp\", \"start\": 3334181, \"end\": 3363301}, {\"filename\": \"/edge_base/doom/graphics/WIA20002.lmp\", \"start\": 3363301, \"end\": 3392421}, {\"filename\": \"/edge_base/doom/graphics/WIA20400.lmp\", \"start\": 3392421, \"end\": 3398019}, {\"filename\": \"/edge_base/doom/graphics/WIA20401.lmp\", \"start\": 3398019, \"end\": 3403617}, {\"filename\": \"/edge_base/doom/graphics/WIA20402.lmp\", \"start\": 3403617, \"end\": 3409215}, {\"filename\": \"/edge_base/doom/graphics/WIA20500.lmp\", \"start\": 3409215, \"end\": 3422423}, {\"filename\": \"/edge_base/doom/graphics/WIA20501.lmp\", \"start\": 3422423, \"end\": 3435631}, {\"filename\": \"/edge_base/doom/graphics/WIA20502.lmp\", \"start\": 3435631, \"end\": 3448839}, {\"filename\": \"/edge_base/doom/graphics/WIMAP0.lmp\", \"start\": 3448839, \"end\": 3568127}, {\"filename\": \"/edge_base/doom/graphics/WIMAP1.lmp\", \"start\": 3568127, \"end\": 3687415}, {\"filename\": \"/edge_base/doom/graphics/WIMAP2.lmp\", \"start\": 3687415, \"end\": 3806703}, {\"filename\": \"/edge_base/doom/scripts/games.ddf\", \"start\": 3806703, \"end\": 3807133}, {\"filename\": \"/edge_base/doom/scripts/images.ddf\", \"start\": 3807133, \"end\": 3808971}, {\"filename\": \"/edge_base/doom/textures/SKY1_B.png\", \"start\": 3808971, \"end\": 3823614}, {\"filename\": \"/edge_base/doom/textures/SKY1_E.png\", \"start\": 3823614, \"end\": 3846793}, {\"filename\": \"/edge_base/doom/textures/SKY1_N.png\", \"start\": 3846793, \"end\": 3869680}, {\"filename\": \"/edge_base/doom/textures/SKY1_S.png\", \"start\": 3869680, \"end\": 3892305}, {\"filename\": \"/edge_base/doom/textures/SKY1_T.png\", \"start\": 3892305, \"end\": 3919497}, {\"filename\": \"/edge_base/doom/textures/SKY1_W.png\", \"start\": 3919497, \"end\": 3942340}, {\"filename\": \"/edge_base/doom/textures/SKY2_B.png\", \"start\": 3942340, \"end\": 3959207}, {\"filename\": \"/edge_base/doom/textures/SKY2_E.png\", \"start\": 3959207, \"end\": 3985776}, {\"filename\": \"/edge_base/doom/textures/SKY2_N.png\", \"start\": 3985776, \"end\": 4012632}, {\"filename\": \"/edge_base/doom/textures/SKY2_S.png\", \"start\": 4012632, \"end\": 4040132}, {\"filename\": \"/edge_base/doom/textures/SKY2_T.png\", \"start\": 4040132, \"end\": 4064486}, {\"filename\": \"/edge_base/doom/textures/SKY2_W.png\", \"start\": 4064486, \"end\": 4090673}, {\"filename\": \"/edge_base/doom/textures/SKY3_B.png\", \"start\": 4090673, \"end\": 4102656}, {\"filename\": \"/edge_base/doom/textures/SKY3_E.png\", \"start\": 4102656, \"end\": 4122222}, {\"filename\": \"/edge_base/doom/textures/SKY3_N.png\", \"start\": 4122222, \"end\": 4141923}, {\"filename\": \"/edge_base/doom/textures/SKY3_S.png\", \"start\": 4141923, \"end\": 4162257}, {\"filename\": \"/edge_base/doom/textures/SKY3_T.png\", \"start\": 4162257, \"end\": 4186700}, {\"filename\": \"/edge_base/doom/textures/SKY3_W.png\", \"start\": 4186700, \"end\": 4205745}, {\"filename\": \"/edge_base/doom/textures/SKY4_B.png\", \"start\": 4205745, \"end\": 4244081}, {\"filename\": \"/edge_base/doom/textures/SKY4_E.png\", \"start\": 4244081, \"end\": 4256690}, {\"filename\": \"/edge_base/doom/textures/SKY4_N.png\", \"start\": 4256690, \"end\": 4268406}, {\"filename\": \"/edge_base/doom/textures/SKY4_S.png\", \"start\": 4268406, \"end\": 4280122}, {\"filename\": \"/edge_base/doom/textures/SKY4_T.png\", \"start\": 4280122, \"end\": 4318458}, {\"filename\": \"/edge_base/doom/textures/SKY4_W.png\", \"start\": 4318458, \"end\": 4331067}, {\"filename\": \"/edge_base/doom1/graphics/CREDIT.lmp\", \"start\": 4331067, \"end\": 4450355}, {\"filename\": \"/edge_base/doom1/graphics/HELP1.lmp\", \"start\": 4450355, \"end\": 4569643}, {\"filename\": \"/edge_base/doom1/graphics/HELP2.lmp\", \"start\": 4569643, \"end\": 4688931}, {\"filename\": \"/edge_base/doom1/graphics/TITLEPIC.lmp\", \"start\": 4688931, \"end\": 4808219}, {\"filename\": \"/edge_base/doom1/graphics/WIMAP0.lmp\", \"start\": 4808219, \"end\": 4927507}, {\"filename\": \"/edge_base/doom1/scripts/images.ddf\", \"start\": 4927507, \"end\": 4929359}, {\"filename\": \"/edge_base/doom1/textures/SKY1_B.png\", \"start\": 4929359, \"end\": 4944002}, {\"filename\": \"/edge_base/doom1/textures/SKY1_E.png\", \"start\": 4944002, \"end\": 4967181}, {\"filename\": \"/edge_base/doom1/textures/SKY1_N.png\", \"start\": 4967181, \"end\": 4990068}, {\"filename\": \"/edge_base/doom1/textures/SKY1_S.png\", \"start\": 4990068, \"end\": 5012693}, {\"filename\": \"/edge_base/doom1/textures/SKY1_T.png\", \"start\": 5012693, \"end\": 5039885}, {\"filename\": \"/edge_base/doom1/textures/SKY1_W.png\", \"start\": 5039885, \"end\": 5062728}, {\"filename\": \"/edge_base/doom2/graphics/BOSSBACK.lmp\", \"start\": 5062728, \"end\": 5182016}, {\"filename\": \"/edge_base/doom2/graphics/CREDIT.lmp\", \"start\": 5182016, \"end\": 5301304}, {\"filename\": \"/edge_base/doom2/graphics/HELP.lmp\", \"start\": 5301304, \"end\": 5420592}, {\"filename\": \"/edge_base/doom2/graphics/INTERPIC.lmp\", \"start\": 5420592, \"end\": 5539880}, {\"filename\": \"/edge_base/doom2/graphics/TITLEPIC.lmp\", \"start\": 5539880, \"end\": 5659168}, {\"filename\": \"/edge_base/doom2/scripts/games.ddf\", \"start\": 5659168, \"end\": 5659619}, {\"filename\": \"/edge_base/doom2/scripts/images.ddf\", \"start\": 5659619, \"end\": 5661050}, {\"filename\": \"/edge_base/doom2/textures/SKY1_B.png\", \"start\": 5661050, \"end\": 5682330}, {\"filename\": \"/edge_base/doom2/textures/SKY1_E.png\", \"start\": 5682330, \"end\": 5700010}, {\"filename\": \"/edge_base/doom2/textures/SKY1_N.png\", \"start\": 5700010, \"end\": 5717690}, {\"filename\": \"/edge_base/doom2/textures/SKY1_S.png\", \"start\": 5717690, \"end\": 5735370}, {\"filename\": \"/edge_base/doom2/textures/SKY1_T.png\", \"start\": 5735370, \"end\": 5756650}, {\"filename\": \"/edge_base/doom2/textures/SKY1_W.png\", \"start\": 5756650, \"end\": 5774330}, {\"filename\": \"/edge_base/doom2/textures/SKY2_B.png\", \"start\": 5774330, \"end\": 5788253}, {\"filename\": \"/edge_base/doom2/textures/SKY2_E.png\", \"start\": 5788253, \"end\": 5813472}, {\"filename\": \"/edge_base/doom2/textures/SKY2_N.png\", \"start\": 5813472, \"end\": 5838704}, {\"filename\": \"/edge_base/doom2/textures/SKY2_S.png\", \"start\": 5838704, \"end\": 5863907}, {\"filename\": \"/edge_base/doom2/textures/SKY2_T.png\", \"start\": 5863907, \"end\": 5888659}, {\"filename\": \"/edge_base/doom2/textures/SKY2_W.png\", \"start\": 5888659, \"end\": 5913863}, {\"filename\": \"/edge_base/doom2/textures/SKY3_B.png\", \"start\": 5913863, \"end\": 5997433}, {\"filename\": \"/edge_base/doom2/textures/SKY3_E.png\", \"start\": 5997433, \"end\": 6092242}, {\"filename\": \"/edge_base/doom2/textures/SKY3_N.png\", \"start\": 6092242, \"end\": 6191013}, {\"filename\": \"/edge_base/doom2/textures/SKY3_S.png\", \"start\": 6191013, \"end\": 6289784}, {\"filename\": \"/edge_base/doom2/textures/SKY3_T.png\", \"start\": 6289784, \"end\": 6476275}, {\"filename\": \"/edge_base/doom2/textures/SKY3_W.png\", \"start\": 6476275, \"end\": 6571084}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARL.lmp\", \"start\": 6571084, \"end\": 6574495}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARR.lmp\", \"start\": 6574495, \"end\": 6577906}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT033.png\", \"start\": 6577906, \"end\": 6578251}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT034.png\", \"start\": 6578251, \"end\": 6578598}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT035.png\", \"start\": 6578598, \"end\": 6579029}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT036.png\", \"start\": 6579029, \"end\": 6579438}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT037.png\", \"start\": 6579438, \"end\": 6579859}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT038.png\", \"start\": 6579859, \"end\": 6580306}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT039.png\", \"start\": 6580306, \"end\": 6580627}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT040.png\", \"start\": 6580627, \"end\": 6581017}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT041.png\", \"start\": 6581017, \"end\": 6581406}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT042.png\", \"start\": 6581406, \"end\": 6581857}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT043.png\", \"start\": 6581857, \"end\": 6582216}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT044.png\", \"start\": 6582216, \"end\": 6582540}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT045.png\", \"start\": 6582540, \"end\": 6582853}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT046.png\", \"start\": 6582853, \"end\": 6583149}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT047.png\", \"start\": 6583149, \"end\": 6583572}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT048.png\", \"start\": 6583572, \"end\": 6583977}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT049.png\", \"start\": 6583977, \"end\": 6584357}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT050.png\", \"start\": 6584357, \"end\": 6584765}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT051.png\", \"start\": 6584765, \"end\": 6585228}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT052.png\", \"start\": 6585228, \"end\": 6585647}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT053.png\", \"start\": 6585647, \"end\": 6586055}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT054.png\", \"start\": 6586055, \"end\": 6586463}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT055.png\", \"start\": 6586463, \"end\": 6586867}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT056.png\", \"start\": 6586867, \"end\": 6587339}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT057.png\", \"start\": 6587339, \"end\": 6587754}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT058.png\", \"start\": 6587754, \"end\": 6588102}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT059.png\", \"start\": 6588102, \"end\": 6588463}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT060.png\", \"start\": 6588463, \"end\": 6588832}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT061.png\", \"start\": 6588832, \"end\": 6589173}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT062.png\", \"start\": 6589173, \"end\": 6589594}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT063.png\", \"start\": 6589594, \"end\": 6589997}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT064.png\", \"start\": 6589997, \"end\": 6590415}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT065.png\", \"start\": 6590415, \"end\": 6590918}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT066.png\", \"start\": 6590918, \"end\": 6591343}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT067.png\", \"start\": 6591343, \"end\": 6591746}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT068.png\", \"start\": 6591746, \"end\": 6592179}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT069.png\", \"start\": 6592179, \"end\": 6592595}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT070.png\", \"start\": 6592595, \"end\": 6593000}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT071.png\", \"start\": 6593000, \"end\": 6593419}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT072.png\", \"start\": 6593419, \"end\": 6593844}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT073.png\", \"start\": 6593844, \"end\": 6594246}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT074.png\", \"start\": 6594246, \"end\": 6594715}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT075.png\", \"start\": 6594715, \"end\": 6595149}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT076.png\", \"start\": 6595149, \"end\": 6595538}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT077.png\", \"start\": 6595538, \"end\": 6595993}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT078.png\", \"start\": 6595993, \"end\": 6596503}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT079.png\", \"start\": 6596503, \"end\": 6596913}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT080.png\", \"start\": 6596913, \"end\": 6597320}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT081.png\", \"start\": 6597320, \"end\": 6597737}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT082.png\", \"start\": 6597737, \"end\": 6598156}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT083.png\", \"start\": 6598156, \"end\": 6598582}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT084.png\", \"start\": 6598582, \"end\": 6598967}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT085.png\", \"start\": 6598967, \"end\": 6599382}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT086.png\", \"start\": 6599382, \"end\": 6599806}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT087.png\", \"start\": 6599806, \"end\": 6600251}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT088.png\", \"start\": 6600251, \"end\": 6600677}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT089.png\", \"start\": 6600677, \"end\": 6601142}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT090.png\", \"start\": 6601142, \"end\": 6601560}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT091.png\", \"start\": 6601560, \"end\": 6601947}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT092.png\", \"start\": 6601947, \"end\": 6602381}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT093.png\", \"start\": 6602381, \"end\": 6602777}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT094.png\", \"start\": 6602777, \"end\": 6603128}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT095.png\", \"start\": 6603128, \"end\": 6603441}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT096.png\", \"start\": 6603441, \"end\": 6603761}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT097.png\", \"start\": 6603761, \"end\": 6604219}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT098.png\", \"start\": 6604219, \"end\": 6604619}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT099.png\", \"start\": 6604619, \"end\": 6605053}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT100.png\", \"start\": 6605053, \"end\": 6605460}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT101.png\", \"start\": 6605460, \"end\": 6605856}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT102.png\", \"start\": 6605856, \"end\": 6606247}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT103.png\", \"start\": 6606247, \"end\": 6606691}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT104.png\", \"start\": 6606691, \"end\": 6607093}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT105.png\", \"start\": 6607093, \"end\": 6607473}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT106.png\", \"start\": 6607473, \"end\": 6607917}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT107.png\", \"start\": 6607917, \"end\": 6608386}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT108.png\", \"start\": 6608386, \"end\": 6608760}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT109.png\", \"start\": 6608760, \"end\": 6609181}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT110.png\", \"start\": 6609181, \"end\": 6609597}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT111.png\", \"start\": 6609597, \"end\": 6610046}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT112.png\", \"start\": 6610046, \"end\": 6610436}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT113.png\", \"start\": 6610436, \"end\": 6610894}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT114.png\", \"start\": 6610894, \"end\": 6611291}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT115.png\", \"start\": 6611291, \"end\": 6611702}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT116.png\", \"start\": 6611702, \"end\": 6612136}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT117.png\", \"start\": 6612136, \"end\": 6612538}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT118.png\", \"start\": 6612538, \"end\": 6612999}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT119.png\", \"start\": 6612999, \"end\": 6613416}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT120.png\", \"start\": 6613416, \"end\": 6613860}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT121.png\", \"start\": 6613860, \"end\": 6614253}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT122.png\", \"start\": 6614253, \"end\": 6614688}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT123.png\", \"start\": 6614688, \"end\": 6615078}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT124.png\", \"start\": 6615078, \"end\": 6615439}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT125.png\", \"start\": 6615439, \"end\": 6615827}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT126.png\", \"start\": 6615827, \"end\": 6616217}, {\"filename\": \"/edge_base/freedoom1/scripts/attacks.ddf\", \"start\": 6616217, \"end\": 6637388}, {\"filename\": \"/edge_base/freedoom1/scripts/fonts.ddf\", \"start\": 6637388, \"end\": 6638044}, {\"filename\": \"/edge_base/freedoom1/scripts/games.ddf\", \"start\": 6638044, \"end\": 6638474}, {\"filename\": \"/edge_base/freedoom1/scripts/images.ddf\", \"start\": 6638474, \"end\": 6646243}, {\"filename\": \"/edge_base/freedoom1/scripts/language.ldf\", \"start\": 6646243, \"end\": 6657414}, {\"filename\": \"/edge_base/freedoom1/scripts/styles.ddf\", \"start\": 6657414, \"end\": 6662577}, {\"filename\": \"/edge_base/freedoom1/scripts/things.ddf\", \"start\": 6662577, \"end\": 6671254}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARL.lmp\", \"start\": 6671254, \"end\": 6674665}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARR.lmp\", \"start\": 6674665, \"end\": 6678076}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT033.png\", \"start\": 6678076, \"end\": 6678421}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT034.png\", \"start\": 6678421, \"end\": 6678768}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT035.png\", \"start\": 6678768, \"end\": 6679199}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT036.png\", \"start\": 6679199, \"end\": 6679608}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT037.png\", \"start\": 6679608, \"end\": 6680029}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT038.png\", \"start\": 6680029, \"end\": 6680476}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT039.png\", \"start\": 6680476, \"end\": 6680797}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT040.png\", \"start\": 6680797, \"end\": 6681187}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT041.png\", \"start\": 6681187, \"end\": 6681576}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT042.png\", \"start\": 6681576, \"end\": 6682027}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT043.png\", \"start\": 6682027, \"end\": 6682386}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT044.png\", \"start\": 6682386, \"end\": 6682710}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT045.png\", \"start\": 6682710, \"end\": 6683023}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT046.png\", \"start\": 6683023, \"end\": 6683319}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT047.png\", \"start\": 6683319, \"end\": 6683742}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT048.png\", \"start\": 6683742, \"end\": 6684147}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT049.png\", \"start\": 6684147, \"end\": 6684527}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT050.png\", \"start\": 6684527, \"end\": 6684935}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT051.png\", \"start\": 6684935, \"end\": 6685398}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT052.png\", \"start\": 6685398, \"end\": 6685817}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT053.png\", \"start\": 6685817, \"end\": 6686225}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT054.png\", \"start\": 6686225, \"end\": 6686633}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT055.png\", \"start\": 6686633, \"end\": 6687037}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT056.png\", \"start\": 6687037, \"end\": 6687509}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT057.png\", \"start\": 6687509, \"end\": 6687924}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT058.png\", \"start\": 6687924, \"end\": 6688272}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT059.png\", \"start\": 6688272, \"end\": 6688633}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT060.png\", \"start\": 6688633, \"end\": 6689002}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT061.png\", \"start\": 6689002, \"end\": 6689343}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT062.png\", \"start\": 6689343, \"end\": 6689764}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT063.png\", \"start\": 6689764, \"end\": 6690167}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT064.png\", \"start\": 6690167, \"end\": 6690585}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT065.png\", \"start\": 6690585, \"end\": 6691088}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT066.png\", \"start\": 6691088, \"end\": 6691513}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT067.png\", \"start\": 6691513, \"end\": 6691916}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT068.png\", \"start\": 6691916, \"end\": 6692349}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT069.png\", \"start\": 6692349, \"end\": 6692765}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT070.png\", \"start\": 6692765, \"end\": 6693170}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT071.png\", \"start\": 6693170, \"end\": 6693589}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT072.png\", \"start\": 6693589, \"end\": 6694014}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT073.png\", \"start\": 6694014, \"end\": 6694416}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT074.png\", \"start\": 6694416, \"end\": 6694885}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT075.png\", \"start\": 6694885, \"end\": 6695319}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT076.png\", \"start\": 6695319, \"end\": 6695708}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT077.png\", \"start\": 6695708, \"end\": 6696163}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT078.png\", \"start\": 6696163, \"end\": 6696673}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT079.png\", \"start\": 6696673, \"end\": 6697083}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT080.png\", \"start\": 6697083, \"end\": 6697490}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT081.png\", \"start\": 6697490, \"end\": 6697907}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT082.png\", \"start\": 6697907, \"end\": 6698326}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT083.png\", \"start\": 6698326, \"end\": 6698752}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT084.png\", \"start\": 6698752, \"end\": 6699137}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT085.png\", \"start\": 6699137, \"end\": 6699552}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT086.png\", \"start\": 6699552, \"end\": 6699976}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT087.png\", \"start\": 6699976, \"end\": 6700421}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT088.png\", \"start\": 6700421, \"end\": 6700847}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT089.png\", \"start\": 6700847, \"end\": 6701312}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT090.png\", \"start\": 6701312, \"end\": 6701730}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT091.png\", \"start\": 6701730, \"end\": 6702117}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT092.png\", \"start\": 6702117, \"end\": 6702551}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT093.png\", \"start\": 6702551, \"end\": 6702947}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT094.png\", \"start\": 6702947, \"end\": 6703298}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT095.png\", \"start\": 6703298, \"end\": 6703611}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT096.png\", \"start\": 6703611, \"end\": 6703931}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT097.png\", \"start\": 6703931, \"end\": 6704389}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT098.png\", \"start\": 6704389, \"end\": 6704789}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT099.png\", \"start\": 6704789, \"end\": 6705223}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT100.png\", \"start\": 6705223, \"end\": 6705630}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT101.png\", \"start\": 6705630, \"end\": 6706026}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT102.png\", \"start\": 6706026, \"end\": 6706417}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT103.png\", \"start\": 6706417, \"end\": 6706861}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT104.png\", \"start\": 6706861, \"end\": 6707263}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT105.png\", \"start\": 6707263, \"end\": 6707643}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT106.png\", \"start\": 6707643, \"end\": 6708087}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT107.png\", \"start\": 6708087, \"end\": 6708556}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT108.png\", \"start\": 6708556, \"end\": 6708930}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT109.png\", \"start\": 6708930, \"end\": 6709351}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT110.png\", \"start\": 6709351, \"end\": 6709767}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT111.png\", \"start\": 6709767, \"end\": 6710216}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT112.png\", \"start\": 6710216, \"end\": 6710606}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT113.png\", \"start\": 6710606, \"end\": 6711064}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT114.png\", \"start\": 6711064, \"end\": 6711461}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT115.png\", \"start\": 6711461, \"end\": 6711872}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT116.png\", \"start\": 6711872, \"end\": 6712306}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT117.png\", \"start\": 6712306, \"end\": 6712708}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT118.png\", \"start\": 6712708, \"end\": 6713169}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT119.png\", \"start\": 6713169, \"end\": 6713586}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT120.png\", \"start\": 6713586, \"end\": 6714030}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT121.png\", \"start\": 6714030, \"end\": 6714423}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT122.png\", \"start\": 6714423, \"end\": 6714858}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT123.png\", \"start\": 6714858, \"end\": 6715248}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT124.png\", \"start\": 6715248, \"end\": 6715609}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT125.png\", \"start\": 6715609, \"end\": 6715997}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT126.png\", \"start\": 6715997, \"end\": 6716387}, {\"filename\": \"/edge_base/freedoom2/scripts/attacks.ddf\", \"start\": 6716387, \"end\": 6737558}, {\"filename\": \"/edge_base/freedoom2/scripts/fonts.ddf\", \"start\": 6737558, \"end\": 6738214}, {\"filename\": \"/edge_base/freedoom2/scripts/games.ddf\", \"start\": 6738214, \"end\": 6738665}, {\"filename\": \"/edge_base/freedoom2/scripts/images.ddf\", \"start\": 6738665, \"end\": 6746434}, {\"filename\": \"/edge_base/freedoom2/scripts/language.ldf\", \"start\": 6746434, \"end\": 6757466}, {\"filename\": \"/edge_base/freedoom2/scripts/styles.ddf\", \"start\": 6757466, \"end\": 6762258}, {\"filename\": \"/edge_base/freedoom2/scripts/things.ddf\", \"start\": 6762258, \"end\": 6770928}, {\"filename\": \"/edge_base/hacx/graphics/CREDIT.lmp\", \"start\": 6770928, \"end\": 6890216}, {\"filename\": \"/edge_base/hacx/graphics/ENDOOM.bin\", \"start\": 6890216, \"end\": 6894216}, {\"filename\": \"/edge_base/hacx/graphics/HELP.lmp\", \"start\": 6894216, \"end\": 7013504}, {\"filename\": \"/edge_base/hacx/graphics/INTERPIC.lmp\", \"start\": 7013504, \"end\": 7132792}, {\"filename\": \"/edge_base/hacx/graphics/STBARL.lmp\", \"start\": 7132792, \"end\": 7136203}, {\"filename\": \"/edge_base/hacx/graphics/STBARR.lmp\", \"start\": 7136203, \"end\": 7139614}, {\"filename\": \"/edge_base/hacx/graphics/TITLEPIC.lmp\", \"start\": 7139614, \"end\": 7258902}, {\"filename\": \"/edge_base/hacx/scripts/anims.ddf\", \"start\": 7258902, \"end\": 7262074}, {\"filename\": \"/edge_base/hacx/scripts/attacks.ddf\", \"start\": 7262074, \"end\": 7269587}, {\"filename\": \"/edge_base/hacx/scripts/colmap.ddf\", \"start\": 7269587, \"end\": 7269865}, {\"filename\": \"/edge_base/hacx/scripts/flats.ddf\", \"start\": 7269865, \"end\": 7270276}, {\"filename\": \"/edge_base/hacx/scripts/fonts.ddf\", \"start\": 7270276, \"end\": 7270922}, {\"filename\": \"/edge_base/hacx/scripts/games.ddf\", \"start\": 7270922, \"end\": 7271373}, {\"filename\": \"/edge_base/hacx/scripts/language.ldf\", \"start\": 7271373, \"end\": 7277196}, {\"filename\": \"/edge_base/hacx/scripts/levels.ddf\", \"start\": 7277196, \"end\": 7282138}, {\"filename\": \"/edge_base/hacx/scripts/lines.ddf\", \"start\": 7282138, \"end\": 7283026}, {\"filename\": \"/edge_base/hacx/scripts/playlist.ddf\", \"start\": 7283026, \"end\": 7284507}, {\"filename\": \"/edge_base/hacx/scripts/styles.ddf\", \"start\": 7284507, \"end\": 7287232}, {\"filename\": \"/edge_base/hacx/scripts/switch.ddf\", \"start\": 7287232, \"end\": 7290441}, {\"filename\": \"/edge_base/hacx/scripts/things.ddf\", \"start\": 7290441, \"end\": 7377948}, {\"filename\": \"/edge_base/hacx/scripts/weapons.ddf\", \"start\": 7377948, \"end\": 7383250}, {\"filename\": \"/edge_base/hacx/sprites/CHGFA0.lmp\", \"start\": 7383250, \"end\": 7398054}, {\"filename\": \"/edge_base/hacx/sprites/CHGFB0.lmp\", \"start\": 7398054, \"end\": 7413080}, {\"filename\": \"/edge_base/hacx/sprites/CHGGA0.lmp\", \"start\": 7413080, \"end\": 7427654}, {\"filename\": \"/edge_base/hacx/sprites/CHGGB0.lmp\", \"start\": 7427654, \"end\": 7434011}, {\"filename\": \"/edge_base/hacx/sprites/CRYXHRA0.lmp\", \"start\": 7434011, \"end\": 7435111}, {\"filename\": \"/edge_base/hacx/sprites/MISFA0.lmp\", \"start\": 7435111, \"end\": 7475383}, {\"filename\": \"/edge_base/hacx/sprites/MISFB0.lmp\", \"start\": 7475383, \"end\": 7510549}, {\"filename\": \"/edge_base/hacx/sprites/MISFC0.lmp\", \"start\": 7510549, \"end\": 7543702}, {\"filename\": \"/edge_base/hacx/sprites/MISFD0.lmp\", \"start\": 7543702, \"end\": 7580085}, {\"filename\": \"/edge_base/hacx/sprites/MISGA0.lmp\", \"start\": 7580085, \"end\": 7611615}, {\"filename\": \"/edge_base/hacx/sprites/MISGB0.lmp\", \"start\": 7611615, \"end\": 7646721}, {\"filename\": \"/edge_base/hacx/sprites/PISGD0.lmp\", \"start\": 7646721, \"end\": 7670864}, {\"filename\": \"/edge_base/hacx/sprites/PISGE0.lmp\", \"start\": 7670864, \"end\": 7700530}, {\"filename\": \"/edge_base/hacx/sprites/PLSGA0.lmp\", \"start\": 7700530, \"end\": 7711394}, {\"filename\": \"/edge_base/hacx/sprites/PLSGB0.lmp\", \"start\": 7711394, \"end\": 7724788}, {\"filename\": \"/edge_base/hacx/sprites/SAWGA0.lmp\", \"start\": 7724788, \"end\": 7739237}, {\"filename\": \"/edge_base/hacx/sprites/SAWGB0.lmp\", \"start\": 7739237, \"end\": 7753345}, {\"filename\": \"/edge_base/hacx/sprites/SAWGC0.lmp\", \"start\": 7753345, \"end\": 7762430}, {\"filename\": \"/edge_base/hacx/sprites/SAWGD0.lmp\", \"start\": 7762430, \"end\": 7771515}, {\"filename\": \"/edge_base/hacx/sprites/SHT2A0.lmp\", \"start\": 7771515, \"end\": 7787026}, {\"filename\": \"/edge_base/hacx/sprites/SHT2B0.lmp\", \"start\": 7787026, \"end\": 7802767}, {\"filename\": \"/edge_base/hacx/sprites/SHT2C0.lmp\", \"start\": 7802767, \"end\": 7818800}, {\"filename\": \"/edge_base/hacx/sprites/SHT2D0.lmp\", \"start\": 7818800, \"end\": 7834927}, {\"filename\": \"/edge_base/hacx/sprites/SHT2E0.lmp\", \"start\": 7834927, \"end\": 7851213}, {\"filename\": \"/edge_base/hacx/sprites/SHT2F0.lmp\", \"start\": 7851213, \"end\": 7867367}, {\"filename\": \"/edge_base/hacx/sprites/SHT2G0.lmp\", \"start\": 7867367, \"end\": 7883183}, {\"filename\": \"/edge_base/hacx/sprites/SHT2H0.lmp\", \"start\": 7883183, \"end\": 7898694}, {\"filename\": \"/edge_base/hacx/sprites/SHT2I0.lmp\", \"start\": 7898694, \"end\": 7914377}, {\"filename\": \"/edge_base/hacx/sprites/SHT2J0.lmp\", \"start\": 7914377, \"end\": 7930582}, {\"filename\": \"/edge_base/hacx/sprites/SHTFA0.lmp\", \"start\": 7930582, \"end\": 7939644}, {\"filename\": \"/edge_base/hacx/sprites/SHTFB0.lmp\", \"start\": 7939644, \"end\": 7949135}, {\"filename\": \"/edge_base/hacx/sprites/SHTGA0.lmp\", \"start\": 7949135, \"end\": 7957794}, {\"filename\": \"/edge_base/hacx/sprites/SHTGB0.lmp\", \"start\": 7957794, \"end\": 7970876}, {\"filename\": \"/edge_base/hacx/sprites/SHTGC0.lmp\", \"start\": 7970876, \"end\": 7990115}, {\"filename\": \"/edge_base/hacx/sprites/SHTGD0.lmp\", \"start\": 7990115, \"end\": 8008362}, {\"filename\": \"/edge_base/harmony/ENDOOM.bin\", \"start\": 8008362, \"end\": 8012362}, {\"filename\": \"/edge_base/harmony/graphics/BOSSBACK.lmp\", \"start\": 8012362, \"end\": 8103108}, {\"filename\": \"/edge_base/harmony/graphics/CREDIT.lmp\", \"start\": 8103108, \"end\": 8193854}, {\"filename\": \"/edge_base/harmony/graphics/CWILV00.lmp\", \"start\": 8193854, \"end\": 8195904}, {\"filename\": \"/edge_base/harmony/graphics/CWILV01.lmp\", \"start\": 8195904, \"end\": 8198056}, {\"filename\": \"/edge_base/harmony/graphics/CWILV02.lmp\", \"start\": 8198056, \"end\": 8199834}, {\"filename\": \"/edge_base/harmony/graphics/CWILV03.lmp\", \"start\": 8199834, \"end\": 8202434}, {\"filename\": \"/edge_base/harmony/graphics/CWILV04.lmp\", \"start\": 8202434, \"end\": 8204525}, {\"filename\": \"/edge_base/harmony/graphics/CWILV05.lmp\", \"start\": 8204525, \"end\": 8208391}, {\"filename\": \"/edge_base/harmony/graphics/CWILV06.lmp\", \"start\": 8208391, \"end\": 8211979}, {\"filename\": \"/edge_base/harmony/graphics/CWILV07.lmp\", \"start\": 8211979, \"end\": 8214474}, {\"filename\": \"/edge_base/harmony/graphics/CWILV08.lmp\", \"start\": 8214474, \"end\": 8217313}, {\"filename\": \"/edge_base/harmony/graphics/CWILV09.lmp\", \"start\": 8217313, \"end\": 8221148}, {\"filename\": \"/edge_base/harmony/graphics/CWILV10.lmp\", \"start\": 8221148, \"end\": 8222766}, {\"filename\": \"/edge_base/harmony/graphics/CWILV11.lmp\", \"start\": 8222766, \"end\": 8224495}, {\"filename\": \"/edge_base/harmony/graphics/HELP.lmp\", \"start\": 8224495, \"end\": 8313537}, {\"filename\": \"/edge_base/harmony/graphics/INTERPIC.lmp\", \"start\": 8313537, \"end\": 8404283}, {\"filename\": \"/edge_base/harmony/graphics/M_EPISOD.lmp\", \"start\": 8404283, \"end\": 8407480}, {\"filename\": \"/edge_base/harmony/graphics/M_JKILL.lmp\", \"start\": 8407480, \"end\": 8408898}, {\"filename\": \"/edge_base/harmony/graphics/M_NEWG.lmp\", \"start\": 8408898, \"end\": 8411272}, {\"filename\": \"/edge_base/harmony/graphics/M_NGAME.lmp\", \"start\": 8411272, \"end\": 8412222}, {\"filename\": \"/edge_base/harmony/graphics/M_RDTHIS.lmp\", \"start\": 8412222, \"end\": 8414081}, {\"filename\": \"/edge_base/harmony/graphics/M_SAVEG.lmp\", \"start\": 8414081, \"end\": 8415094}, {\"filename\": \"/edge_base/harmony/graphics/M_THERML.png\", \"start\": 8415094, \"end\": 8416034}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMM.png\", \"start\": 8416034, \"end\": 8416963}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMO.png\", \"start\": 8416963, \"end\": 8417878}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMR.png\", \"start\": 8417878, \"end\": 8418816}, {\"filename\": \"/edge_base/harmony/graphics/STBARL.lmp\", \"start\": 8418816, \"end\": 8422227}, {\"filename\": \"/edge_base/harmony/graphics/STBARR.lmp\", \"start\": 8422227, \"end\": 8425638}, {\"filename\": \"/edge_base/harmony/graphics/TITLEPIC.lmp\", \"start\": 8425638, \"end\": 8514680}, {\"filename\": \"/edge_base/harmony/graphics/WICOLON.lmp\", \"start\": 8514680, \"end\": 8514782}, {\"filename\": \"/edge_base/harmony/graphics/WIF.lmp\", \"start\": 8514782, \"end\": 8514830}, {\"filename\": \"/edge_base/harmony/graphics/WIFRGS.lmp\", \"start\": 8514830, \"end\": 8515961}, {\"filename\": \"/edge_base/harmony/graphics/WIKILRS.lmp\", \"start\": 8515961, \"end\": 8516434}, {\"filename\": \"/edge_base/harmony/graphics/WIMINUS.lmp\", \"start\": 8516434, \"end\": 8516554}, {\"filename\": \"/edge_base/harmony/graphics/WIMSTT.lmp\", \"start\": 8516554, \"end\": 8517654}, {\"filename\": \"/edge_base/harmony/graphics/WINUM0.lmp\", \"start\": 8517654, \"end\": 8517904}, {\"filename\": \"/edge_base/harmony/graphics/WINUM1.lmp\", \"start\": 8517904, \"end\": 8518050}, {\"filename\": \"/edge_base/harmony/graphics/WINUM2.lmp\", \"start\": 8518050, \"end\": 8518336}, {\"filename\": \"/edge_base/harmony/graphics/WINUM3.lmp\", \"start\": 8518336, \"end\": 8518589}, {\"filename\": \"/edge_base/harmony/graphics/WINUM4.lmp\", \"start\": 8518589, \"end\": 8518813}, {\"filename\": \"/edge_base/harmony/graphics/WINUM5.lmp\", \"start\": 8518813, \"end\": 8519068}, {\"filename\": \"/edge_base/harmony/graphics/WINUM6.lmp\", \"start\": 8519068, \"end\": 8519330}, {\"filename\": \"/edge_base/harmony/graphics/WINUM7.lmp\", \"start\": 8519330, \"end\": 8519547}, {\"filename\": \"/edge_base/harmony/graphics/WINUM8.lmp\", \"start\": 8519547, \"end\": 8519809}, {\"filename\": \"/edge_base/harmony/graphics/WINUM9.lmp\", \"start\": 8519809, \"end\": 8520068}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTF.lmp\", \"start\": 8520068, \"end\": 8520308}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTI.lmp\", \"start\": 8520308, \"end\": 8521756}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTK.lmp\", \"start\": 8521756, \"end\": 8523101}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTS.lmp\", \"start\": 8523101, \"end\": 8524270}, {\"filename\": \"/edge_base/harmony/graphics/WIPAR.lmp\", \"start\": 8524270, \"end\": 8525247}, {\"filename\": \"/edge_base/harmony/graphics/WIPCNT.lmp\", \"start\": 8525247, \"end\": 8525496}, {\"filename\": \"/edge_base/harmony/graphics/WISCRT2.lmp\", \"start\": 8525496, \"end\": 8527271}, {\"filename\": \"/edge_base/harmony/graphics/WISUCKS.lmp\", \"start\": 8527271, \"end\": 8528980}, {\"filename\": \"/edge_base/harmony/graphics/WITIME.lmp\", \"start\": 8528980, \"end\": 8529827}, {\"filename\": \"/edge_base/harmony/graphics/WIVCTMS.lmp\", \"start\": 8529827, \"end\": 8530627}, {\"filename\": \"/edge_base/harmony/scripts/attacks.ddf\", \"start\": 8530627, \"end\": 8538515}, {\"filename\": \"/edge_base/harmony/scripts/colmap.ddf\", \"start\": 8538515, \"end\": 8538831}, {\"filename\": \"/edge_base/harmony/scripts/flats.ddf\", \"start\": 8538831, \"end\": 8539178}, {\"filename\": \"/edge_base/harmony/scripts/games.ddf\", \"start\": 8539178, \"end\": 8539629}, {\"filename\": \"/edge_base/harmony/scripts/language.ldf\", \"start\": 8539629, \"end\": 8543359}, {\"filename\": \"/edge_base/harmony/scripts/levels.ddf\", \"start\": 8543359, \"end\": 8559648}, {\"filename\": \"/edge_base/harmony/scripts/lua/edge_hud.lua\", \"start\": 8559648, \"end\": 8563001}, {\"filename\": \"/edge_base/harmony/scripts/playlist.ddf\", \"start\": 8563001, \"end\": 8564474}, {\"filename\": \"/edge_base/harmony/scripts/styles.ddf\", \"start\": 8564474, \"end\": 8566901}, {\"filename\": \"/edge_base/harmony/scripts/things.ddf\", \"start\": 8566901, \"end\": 8636921}, {\"filename\": \"/edge_base/harmony/scripts/weapons.ddf\", \"start\": 8636921, \"end\": 8640701}, {\"filename\": \"/edge_base/harmony/sprites/CELLA0.png\", \"start\": 8640701, \"end\": 8642443}, {\"filename\": \"/edge_base/harmony/sprites/CLIPA0.png\", \"start\": 8642443, \"end\": 8645129}, {\"filename\": \"/edge_base/harmony/sprites/ROCKA0.png\", \"start\": 8645129, \"end\": 8646560}, {\"filename\": \"/edge_base/harmony/sprites/SHELA0.png\", \"start\": 8646560, \"end\": 8648744}, {\"filename\": \"/edge_base/heretic/graphics/BARBACK.lmp\", \"start\": 8648744, \"end\": 8669258}, {\"filename\": \"/edge_base/heretic/graphics/CREDIT.lmp\", \"start\": 8669258, \"end\": 8788546}, {\"filename\": \"/edge_base/heretic/graphics/E2END.png\", \"start\": 8788546, \"end\": 8844970}, {\"filename\": \"/edge_base/heretic/graphics/FINAL1.lmp\", \"start\": 8844970, \"end\": 8964258}, {\"filename\": \"/edge_base/heretic/graphics/FINAL2.lmp\", \"start\": 8964258, \"end\": 9083546}, {\"filename\": \"/edge_base/heretic/graphics/HELP1.lmp\", \"start\": 9083546, \"end\": 9202834}, {\"filename\": \"/edge_base/heretic/graphics/HELP2.lmp\", \"start\": 9202834, \"end\": 9322122}, {\"filename\": \"/edge_base/heretic/graphics/LTFCTOP.lmp\", \"start\": 9322122, \"end\": 9322813}, {\"filename\": \"/edge_base/heretic/graphics/MAPE1.lmp\", \"start\": 9322813, \"end\": 9442101}, {\"filename\": \"/edge_base/heretic/graphics/MAPE2.lmp\", \"start\": 9442101, \"end\": 9561389}, {\"filename\": \"/edge_base/heretic/graphics/MAPE3.lmp\", \"start\": 9561389, \"end\": 9680677}, {\"filename\": \"/edge_base/heretic/graphics/NULL.png\", \"start\": 9680677, \"end\": 9681837}, {\"filename\": \"/edge_base/heretic/graphics/RTFCTOP.lmp\", \"start\": 9681837, \"end\": 9682586}, {\"filename\": \"/edge_base/heretic/graphics/STBARL.lmp\", \"start\": 9682586, \"end\": 9686827}, {\"filename\": \"/edge_base/heretic/graphics/STBARR.lmp\", \"start\": 9686827, \"end\": 9691068}, {\"filename\": \"/edge_base/heretic/graphics/TITLE.png\", \"start\": 9691068, \"end\": 9741691}, {\"filename\": \"/edge_base/heretic/graphics/WIENTER.png\", \"start\": 9741691, \"end\": 9742590}, {\"filename\": \"/edge_base/heretic/graphics/WIF.png\", \"start\": 9742590, \"end\": 9743336}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL00.png\", \"start\": 9743336, \"end\": 9744512}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL01.png\", \"start\": 9744512, \"end\": 9745721}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL02.png\", \"start\": 9745721, \"end\": 9746986}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL03.png\", \"start\": 9746986, \"end\": 9748298}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL04.png\", \"start\": 9748298, \"end\": 9749712}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL05.png\", \"start\": 9749712, \"end\": 9751026}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL06.png\", \"start\": 9751026, \"end\": 9752413}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL07.png\", \"start\": 9752413, \"end\": 9753687}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL08.png\", \"start\": 9753687, \"end\": 9754741}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL09.png\", \"start\": 9754741, \"end\": 9755739}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL10.png\", \"start\": 9755739, \"end\": 9756831}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL11.png\", \"start\": 9756831, \"end\": 9758088}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL12.png\", \"start\": 9758088, \"end\": 9759571}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL13.png\", \"start\": 9759571, \"end\": 9760921}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL14.png\", \"start\": 9760921, \"end\": 9762525}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL15.png\", \"start\": 9762525, \"end\": 9764026}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL16.png\", \"start\": 9764026, \"end\": 9765304}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL17.png\", \"start\": 9765304, \"end\": 9766536}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK0.png\", \"start\": 9766536, \"end\": 9767518}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK1.png\", \"start\": 9767518, \"end\": 9768394}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK10.png\", \"start\": 9768394, \"end\": 9769035}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK11.png\", \"start\": 9769035, \"end\": 9769679}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK12.png\", \"start\": 9769679, \"end\": 9770507}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK13.png\", \"start\": 9770507, \"end\": 9771463}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK14.png\", \"start\": 9771463, \"end\": 9772655}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK15.png\", \"start\": 9772655, \"end\": 9773675}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK2.png\", \"start\": 9773675, \"end\": 9774425}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK3.png\", \"start\": 9774425, \"end\": 9774979}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK4.png\", \"start\": 9774979, \"end\": 9775611}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK5.png\", \"start\": 9775611, \"end\": 9776244}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK6.png\", \"start\": 9776244, \"end\": 9776833}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK7.png\", \"start\": 9776833, \"end\": 9777336}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK8.png\", \"start\": 9777336, \"end\": 9778017}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK9.png\", \"start\": 9778017, \"end\": 9778601}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY0.png\", \"start\": 9778601, \"end\": 9779726}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY1.png\", \"start\": 9779726, \"end\": 9780832}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY10.png\", \"start\": 9780832, \"end\": 9781758}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY11.png\", \"start\": 9781758, \"end\": 9782464}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY12.png\", \"start\": 9782464, \"end\": 9783390}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY13.png\", \"start\": 9783390, \"end\": 9784510}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY14.png\", \"start\": 9784510, \"end\": 9785645}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY15.png\", \"start\": 9785645, \"end\": 9786818}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY2.png\", \"start\": 9786818, \"end\": 9787730}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY3.png\", \"start\": 9787730, \"end\": 9788430}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY4.png\", \"start\": 9788430, \"end\": 9789351}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY5.png\", \"start\": 9789351, \"end\": 9790453}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY6.png\", \"start\": 9790453, \"end\": 9791551}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY7.png\", \"start\": 9791551, \"end\": 9792665}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY8.png\", \"start\": 9792665, \"end\": 9793782}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY9.png\", \"start\": 9793782, \"end\": 9794887}, {\"filename\": \"/edge_base/heretic/scripts/anims.ddf\", \"start\": 9794887, \"end\": 9796610}, {\"filename\": \"/edge_base/heretic/scripts/attacks.ddf\", \"start\": 9796610, \"end\": 9842500}, {\"filename\": \"/edge_base/heretic/scripts/colmap.ddf\", \"start\": 9842500, \"end\": 9842793}, {\"filename\": \"/edge_base/heretic/scripts/flats.ddf\", \"start\": 9842793, \"end\": 9843497}, {\"filename\": \"/edge_base/heretic/scripts/fonts.ddf\", \"start\": 9843497, \"end\": 9844652}, {\"filename\": \"/edge_base/heretic/scripts/games.ddf\", \"start\": 9844652, \"end\": 9847619}, {\"filename\": \"/edge_base/heretic/scripts/images.ddf\", \"start\": 9847619, \"end\": 9850865}, {\"filename\": \"/edge_base/heretic/scripts/language.ldf\", \"start\": 9850865, \"end\": 9859305}, {\"filename\": \"/edge_base/heretic/scripts/levels.ddf\", \"start\": 9859305, \"end\": 9872895}, {\"filename\": \"/edge_base/heretic/scripts/lines.ddf\", \"start\": 9872895, \"end\": 9877730}, {\"filename\": \"/edge_base/heretic/scripts/lua/edge_hud.lua\", \"start\": 9877730, \"end\": 9896966}, {\"filename\": \"/edge_base/heretic/scripts/playlist.ddf\", \"start\": 9896966, \"end\": 9899122}, {\"filename\": \"/edge_base/heretic/scripts/rscript.rts\", \"start\": 9899122, \"end\": 9912529}, {\"filename\": \"/edge_base/heretic/scripts/sectors.ddf\", \"start\": 9912529, \"end\": 9916521}, {\"filename\": \"/edge_base/heretic/scripts/sounds.ddf\", \"start\": 9916521, \"end\": 9928207}, {\"filename\": \"/edge_base/heretic/scripts/styles.ddf\", \"start\": 9928207, \"end\": 9933699}, {\"filename\": \"/edge_base/heretic/scripts/switch.ddf\", \"start\": 9933699, \"end\": 9934154}, {\"filename\": \"/edge_base/heretic/scripts/things.ddf\", \"start\": 9934154, \"end\": 10021401}, {\"filename\": \"/edge_base/heretic/scripts/weapons.ddf\", \"start\": 10021401, \"end\": 10033026}, {\"filename\": \"/edge_base/heretic/sprites/STFFC0.lmp\", \"start\": 10033026, \"end\": 10050156}, {\"filename\": \"/edge_base/heretic/sprites/STFFH0.lmp\", \"start\": 10050156, \"end\": 10068202}, {\"filename\": \"/edge_base/plutonia/graphics/BOSSBACK.lmp\", \"start\": 10068202, \"end\": 10187490}, {\"filename\": \"/edge_base/plutonia/graphics/CREDIT.lmp\", \"start\": 10187490, \"end\": 10306778}, {\"filename\": \"/edge_base/plutonia/graphics/INTERPIC.lmp\", \"start\": 10306778, \"end\": 10426066}, {\"filename\": \"/edge_base/plutonia/graphics/TITLEPIC.lmp\", \"start\": 10426066, \"end\": 10545354}, {\"filename\": \"/edge_base/plutonia/scripts/games.ddf\", \"start\": 10545354, \"end\": 10545805}, {\"filename\": \"/edge_base/plutonia/scripts/images.ddf\", \"start\": 10545805, \"end\": 10547231}, {\"filename\": \"/edge_base/plutonia/scripts/language.ldf\", \"start\": 10547231, \"end\": 10550405}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_B.png\", \"start\": 10550405, \"end\": 10565436}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_E.png\", \"start\": 10565436, \"end\": 10580432}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_N.png\", \"start\": 10580432, \"end\": 10593511}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_S.png\", \"start\": 10593511, \"end\": 10606590}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_T.png\", \"start\": 10606590, \"end\": 10621621}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_W.png\", \"start\": 10621621, \"end\": 10636617}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_B.png\", \"start\": 10636617, \"end\": 10664552}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_E.png\", \"start\": 10664552, \"end\": 10676192}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_N.png\", \"start\": 10676192, \"end\": 10688101}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_S.png\", \"start\": 10688101, \"end\": 10700010}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_T.png\", \"start\": 10700010, \"end\": 10727945}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_W.png\", \"start\": 10727945, \"end\": 10739585}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_B.png\", \"start\": 10739585, \"end\": 10938335}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_E.png\", \"start\": 10938335, \"end\": 11028928}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_N.png\", \"start\": 11028928, \"end\": 11112312}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_S.png\", \"start\": 11112312, \"end\": 11195696}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_T.png\", \"start\": 11195696, \"end\": 11394446}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_W.png\", \"start\": 11394446, \"end\": 11485039}, {\"filename\": \"/edge_base/rekkr/graphics/M_DOOM.lmp\", \"start\": 11485039, \"end\": 11510330}, {\"filename\": \"/edge_base/rekkr/graphics/M_EPISOD.lmp\", \"start\": 11510330, \"end\": 11527800}, {\"filename\": \"/edge_base/rekkr/graphics/M_HURT.lmp\", \"start\": 11527800, \"end\": 11529939}, {\"filename\": \"/edge_base/rekkr/graphics/M_JKILL.lmp\", \"start\": 11529939, \"end\": 11532698}, {\"filename\": \"/edge_base/rekkr/graphics/M_LGTTL.lmp\", \"start\": 11532698, \"end\": 11534885}, {\"filename\": \"/edge_base/rekkr/graphics/M_LOADG.lmp\", \"start\": 11534885, \"end\": 11537002}, {\"filename\": \"/edge_base/rekkr/graphics/M_NEWG.lmp\", \"start\": 11537002, \"end\": 11540277}, {\"filename\": \"/edge_base/rekkr/graphics/M_NGAME.lmp\", \"start\": 11540277, \"end\": 11542325}, {\"filename\": \"/edge_base/rekkr/graphics/M_NMARE.lmp\", \"start\": 11542325, \"end\": 11544759}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTION.lmp\", \"start\": 11544759, \"end\": 11546596}, {\"filename\": \"/edge_base/rekkr/graphics/M_QUITG.lmp\", \"start\": 11546596, \"end\": 11548664}, {\"filename\": \"/edge_base/rekkr/graphics/M_RDTHIS.lmp\", \"start\": 11548664, \"end\": 11549909}, {\"filename\": \"/edge_base/rekkr/graphics/M_ROUGH.lmp\", \"start\": 11549909, \"end\": 11552478}, {\"filename\": \"/edge_base/rekkr/graphics/M_SAVEG.lmp\", \"start\": 11552478, \"end\": 11554698}, {\"filename\": \"/edge_base/rekkr/graphics/M_SGTTL.lmp\", \"start\": 11554698, \"end\": 11556918}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKILL.lmp\", \"start\": 11556918, \"end\": 11585010}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL1.png\", \"start\": 11585010, \"end\": 11585598}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL2.png\", \"start\": 11585598, \"end\": 11586180}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL3.png\", \"start\": 11586180, \"end\": 11586775}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL4.png\", \"start\": 11586775, \"end\": 11587363}, {\"filename\": \"/edge_base/rekkr/graphics/M_ULTRA.lmp\", \"start\": 11587363, \"end\": 11589737}, {\"filename\": \"/edge_base/rekkr/graphics/STBARL.lmp\", \"start\": 11589737, \"end\": 11593148}, {\"filename\": \"/edge_base/rekkr/graphics/STBARR.lmp\", \"start\": 11593148, \"end\": 11596559}, {\"filename\": \"/edge_base/rekkr/graphics/WIENTER.lmp\", \"start\": 11596559, \"end\": 11598484}, {\"filename\": \"/edge_base/rekkr/graphics/WIF.lmp\", \"start\": 11598484, \"end\": 11600265}, {\"filename\": \"/edge_base/rekkr/graphics/WILV00.lmp\", \"start\": 11600265, \"end\": 11601864}, {\"filename\": \"/edge_base/rekkr/graphics/WILV01.lmp\", \"start\": 11601864, \"end\": 11602880}, {\"filename\": \"/edge_base/rekkr/graphics/WILV02.lmp\", \"start\": 11602880, \"end\": 11604907}, {\"filename\": \"/edge_base/rekkr/graphics/WILV03.lmp\", \"start\": 11604907, \"end\": 11607474}, {\"filename\": \"/edge_base/rekkr/graphics/WILV04.lmp\", \"start\": 11607474, \"end\": 11609189}, {\"filename\": \"/edge_base/rekkr/graphics/WILV05.lmp\", \"start\": 11609189, \"end\": 11610917}, {\"filename\": \"/edge_base/rekkr/graphics/WILV06.lmp\", \"start\": 11610917, \"end\": 11614301}, {\"filename\": \"/edge_base/rekkr/graphics/WILV07.lmp\", \"start\": 11614301, \"end\": 11617805}, {\"filename\": \"/edge_base/rekkr/graphics/WILV08.lmp\", \"start\": 11617805, \"end\": 11620648}, {\"filename\": \"/edge_base/rekkr/graphics/WILV10.lmp\", \"start\": 11620648, \"end\": 11622027}, {\"filename\": \"/edge_base/rekkr/graphics/WILV11.lmp\", \"start\": 11622027, \"end\": 11623663}, {\"filename\": \"/edge_base/rekkr/graphics/WILV12.lmp\", \"start\": 11623663, \"end\": 11625983}, {\"filename\": \"/edge_base/rekkr/graphics/WILV13.lmp\", \"start\": 11625983, \"end\": 11627193}, {\"filename\": \"/edge_base/rekkr/graphics/WILV14.lmp\", \"start\": 11627193, \"end\": 11629890}, {\"filename\": \"/edge_base/rekkr/graphics/WILV15.lmp\", \"start\": 11629890, \"end\": 11632977}, {\"filename\": \"/edge_base/rekkr/graphics/WILV16.lmp\", \"start\": 11632977, \"end\": 11634618}, {\"filename\": \"/edge_base/rekkr/graphics/WILV17.lmp\", \"start\": 11634618, \"end\": 11636506}, {\"filename\": \"/edge_base/rekkr/graphics/WILV18.lmp\", \"start\": 11636506, \"end\": 11637693}, {\"filename\": \"/edge_base/rekkr/graphics/WILV20.lmp\", \"start\": 11637693, \"end\": 11639654}, {\"filename\": \"/edge_base/rekkr/graphics/WILV21.lmp\", \"start\": 11639654, \"end\": 11642770}, {\"filename\": \"/edge_base/rekkr/graphics/WILV22.lmp\", \"start\": 11642770, \"end\": 11644531}, {\"filename\": \"/edge_base/rekkr/graphics/WILV23.lmp\", \"start\": 11644531, \"end\": 11647390}, {\"filename\": \"/edge_base/rekkr/graphics/WILV24.lmp\", \"start\": 11647390, \"end\": 11649103}, {\"filename\": \"/edge_base/rekkr/graphics/WILV25.lmp\", \"start\": 11649103, \"end\": 11651367}, {\"filename\": \"/edge_base/rekkr/graphics/WILV26.lmp\", \"start\": 11651367, \"end\": 11652600}, {\"filename\": \"/edge_base/rekkr/graphics/WILV27.lmp\", \"start\": 11652600, \"end\": 11653343}, {\"filename\": \"/edge_base/rekkr/graphics/WILV28.lmp\", \"start\": 11653343, \"end\": 11657121}, {\"filename\": \"/edge_base/rekkr/graphics/WILV30.lmp\", \"start\": 11657121, \"end\": 11658973}, {\"filename\": \"/edge_base/rekkr/graphics/WILV31.lmp\", \"start\": 11658973, \"end\": 11660611}, {\"filename\": \"/edge_base/rekkr/graphics/WILV32.lmp\", \"start\": 11660611, \"end\": 11661733}, {\"filename\": \"/edge_base/rekkr/graphics/WILV33.lmp\", \"start\": 11661733, \"end\": 11664072}, {\"filename\": \"/edge_base/rekkr/graphics/WILV34.lmp\", \"start\": 11664072, \"end\": 11666075}, {\"filename\": \"/edge_base/rekkr/graphics/WILV35.lmp\", \"start\": 11666075, \"end\": 11668209}, {\"filename\": \"/edge_base/rekkr/graphics/WILV36.lmp\", \"start\": 11668209, \"end\": 11671275}, {\"filename\": \"/edge_base/rekkr/graphics/WILV37.lmp\", \"start\": 11671275, \"end\": 11673270}, {\"filename\": \"/edge_base/rekkr/graphics/WILV38.lmp\", \"start\": 11673270, \"end\": 11675130}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTF.lmp\", \"start\": 11675130, \"end\": 11675392}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTI.lmp\", \"start\": 11675392, \"end\": 11676598}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTK.lmp\", \"start\": 11676598, \"end\": 11677663}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTS.lmp\", \"start\": 11677663, \"end\": 11678693}, {\"filename\": \"/edge_base/rekkr/graphics/WIPAR.lmp\", \"start\": 11678693, \"end\": 11679455}, {\"filename\": \"/edge_base/rekkr/graphics/WISCRT2.lmp\", \"start\": 11679455, \"end\": 11681022}, {\"filename\": \"/edge_base/rekkr/graphics/WITIME.lmp\", \"start\": 11681022, \"end\": 11681936}, {\"filename\": \"/edge_base/rekkr/scripts/anims.ddf\", \"start\": 11681936, \"end\": 11682080}, {\"filename\": \"/edge_base/rekkr/scripts/attacks.ddf\", \"start\": 11682080, \"end\": 11682804}, {\"filename\": \"/edge_base/rekkr/scripts/fonts.ddf\", \"start\": 11682804, \"end\": 11683059}, {\"filename\": \"/edge_base/rekkr/scripts/games.ddf\", \"start\": 11683059, \"end\": 11683489}, {\"filename\": \"/edge_base/rekkr/scripts/images.ddf\", \"start\": 11683489, \"end\": 11690637}, {\"filename\": \"/edge_base/rekkr/scripts/language.ldf\", \"start\": 11690637, \"end\": 11692265}, {\"filename\": \"/edge_base/rekkr/scripts/styles.ddf\", \"start\": 11692265, \"end\": 11696606}, {\"filename\": \"/edge_base/rekkr/scripts/things.ddf\", \"start\": 11696606, \"end\": 11698846}, {\"filename\": \"/edge_base/rekkr/scripts/weapons.ddf\", \"start\": 11698846, \"end\": 11700781}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA1.lmp\", \"start\": 11700781, \"end\": 11701406}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA2A8.lmp\", \"start\": 11701406, \"end\": 11702381}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA3A7.lmp\", \"start\": 11702381, \"end\": 11703356}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA4A6.lmp\", \"start\": 11703356, \"end\": 11704331}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA5.lmp\", \"start\": 11704331, \"end\": 11704962}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB1.lmp\", \"start\": 11704962, \"end\": 11705545}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB2B8.lmp\", \"start\": 11705545, \"end\": 11706512}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB3B7.lmp\", \"start\": 11706512, \"end\": 11707479}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB4B6.lmp\", \"start\": 11707479, \"end\": 11708446}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB5.lmp\", \"start\": 11708446, \"end\": 11709028}, {\"filename\": \"/edge_base/strife/games.ddf\", \"start\": 11709028, \"end\": 11709884}, {\"filename\": \"/edge_base/strife/images.ddf\", \"start\": 11709884, \"end\": 11710237}, {\"filename\": \"/edge_base/strife/playlist.ddf\", \"start\": 11710237, \"end\": 11711244}, {\"filename\": \"/edge_base/tnt/graphics/BOSSBACK.lmp\", \"start\": 11711244, \"end\": 11830532}, {\"filename\": \"/edge_base/tnt/graphics/CREDIT.lmp\", \"start\": 11830532, \"end\": 11949820}, {\"filename\": \"/edge_base/tnt/graphics/INTERPIC.lmp\", \"start\": 11949820, \"end\": 12069108}, {\"filename\": \"/edge_base/tnt/graphics/TITLEPIC.lmp\", \"start\": 12069108, \"end\": 12188396}, {\"filename\": \"/edge_base/tnt/scripts/games.ddf\", \"start\": 12188396, \"end\": 12188847}, {\"filename\": \"/edge_base/tnt/scripts/images.ddf\", \"start\": 12188847, \"end\": 12190277}, {\"filename\": \"/edge_base/tnt/scripts/language.ldf\", \"start\": 12190277, \"end\": 12193745}, {\"filename\": \"/edge_base/tnt/textures/SKY1_B.png\", \"start\": 12193745, \"end\": 12209738}, {\"filename\": \"/edge_base/tnt/textures/SKY1_E.png\", \"start\": 12209738, \"end\": 12229204}, {\"filename\": \"/edge_base/tnt/textures/SKY1_N.png\", \"start\": 12229204, \"end\": 12246630}, {\"filename\": \"/edge_base/tnt/textures/SKY1_S.png\", \"start\": 12246630, \"end\": 12262537}, {\"filename\": \"/edge_base/tnt/textures/SKY1_T.png\", \"start\": 12262537, \"end\": 12302655}, {\"filename\": \"/edge_base/tnt/textures/SKY1_W.png\", \"start\": 12302655, \"end\": 12321979}, {\"filename\": \"/edge_base/tnt/textures/SKY2_B.png\", \"start\": 12321979, \"end\": 12323290}, {\"filename\": \"/edge_base/tnt/textures/SKY2_E.png\", \"start\": 12323290, \"end\": 12327813}, {\"filename\": \"/edge_base/tnt/textures/SKY2_N.png\", \"start\": 12327813, \"end\": 12329042}, {\"filename\": \"/edge_base/tnt/textures/SKY2_S.png\", \"start\": 12329042, \"end\": 12335259}, {\"filename\": \"/edge_base/tnt/textures/SKY2_T.png\", \"start\": 12335259, \"end\": 12339386}, {\"filename\": \"/edge_base/tnt/textures/SKY2_W.png\", \"start\": 12339386, \"end\": 12340928}, {\"filename\": \"/edge_base/tnt/textures/SKY3_B.png\", \"start\": 12340928, \"end\": 12365399}, {\"filename\": \"/edge_base/tnt/textures/SKY3_E.png\", \"start\": 12365399, \"end\": 12373101}, {\"filename\": \"/edge_base/tnt/textures/SKY3_N.png\", \"start\": 12373101, \"end\": 12380980}, {\"filename\": \"/edge_base/tnt/textures/SKY3_S.png\", \"start\": 12380980, \"end\": 12388328}, {\"filename\": \"/edge_base/tnt/textures/SKY3_T.png\", \"start\": 12388328, \"end\": 12412799}, {\"filename\": \"/edge_base/tnt/textures/SKY3_W.png\", \"start\": 12412799, \"end\": 12420140}, {\"filename\": \"/edge_defs/colormaps/AUTOMAPS.dat\", \"start\": 12420140, \"end\": 12420652}, {\"filename\": \"/edge_defs/colormaps/LAVAMAP.cmp\", \"start\": 12420652, \"end\": 12429356}, {\"filename\": \"/edge_defs/colormaps/NITEVMAP.cmp\", \"start\": 12429356, \"end\": 12429612}, {\"filename\": \"/edge_defs/colormaps/PLYRMAPS.dat\", \"start\": 12429612, \"end\": 12433452}, {\"filename\": \"/edge_defs/colormaps/SARGMAPS.dat\", \"start\": 12433452, \"end\": 12434988}, {\"filename\": \"/edge_defs/colormaps/SHADEMAP.cmp\", \"start\": 12434988, \"end\": 12435244}, {\"filename\": \"/edge_defs/colormaps/SKINMAPS.dat\", \"start\": 12435244, \"end\": 12436524}, {\"filename\": \"/edge_defs/colormaps/SLIMEMAP.cmp\", \"start\": 12436524, \"end\": 12445228}, {\"filename\": \"/edge_defs/colormaps/TEXTMAPS.dat\", \"start\": 12445228, \"end\": 12447020}, {\"filename\": \"/edge_defs/colormaps/TXTBLUES.dat\", \"start\": 12447020, \"end\": 12448300}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS1.dat\", \"start\": 12448300, \"end\": 12449580}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS2.dat\", \"start\": 12449580, \"end\": 12450860}, {\"filename\": \"/edge_defs/colormaps/TXTGREYS.dat\", \"start\": 12450860, \"end\": 12452140}, {\"filename\": \"/edge_defs/colormaps/TXTGRNS.dat\", \"start\": 12452140, \"end\": 12453420}, {\"filename\": \"/edge_defs/colormaps/TXTORANS.dat\", \"start\": 12453420, \"end\": 12454700}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS1.dat\", \"start\": 12454700, \"end\": 12455980}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS2.dat\", \"start\": 12455980, \"end\": 12457260}, {\"filename\": \"/edge_defs/colormaps/TXTPURPS.dat\", \"start\": 12457260, \"end\": 12458540}, {\"filename\": \"/edge_defs/colormaps/TXTREDS.dat\", \"start\": 12458540, \"end\": 12459820}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS1.dat\", \"start\": 12459820, \"end\": 12461100}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS2.dat\", \"start\": 12461100, \"end\": 12462380}, {\"filename\": \"/edge_defs/colormaps/WATERMAP.cmp\", \"start\": 12462380, \"end\": 12471084}, {\"filename\": \"/edge_defs/graphics/CREDIT2.lmp\", \"start\": 12471084, \"end\": 12537972}, {\"filename\": \"/edge_defs/graphics/DLITEXPN.png\", \"start\": 12537972, \"end\": 12552315}, {\"filename\": \"/edge_defs/graphics/EDGECRED.png\", \"start\": 12552315, \"end\": 12719914}, {\"filename\": \"/edge_defs/graphics/EDGETTL.lmp\", \"start\": 12719914, \"end\": 12786802}, {\"filename\": \"/edge_defs/graphics/ENDFONT.png\", \"start\": 12786802, \"end\": 12793906}, {\"filename\": \"/edge_defs/graphics/FONTVERD.png\", \"start\": 12793906, \"end\": 12838537}, {\"filename\": \"/edge_defs/graphics/MOUSE.lmp\", \"start\": 12838537, \"end\": 12838720}, {\"filename\": \"/edge_defs/graphics/M_EPI5.lmp\", \"start\": 12838720, \"end\": 12839864}, {\"filename\": \"/edge_defs/graphics/M_EPI6.lmp\", \"start\": 12839864, \"end\": 12842894}, {\"filename\": \"/edge_defs/graphics/STBARL.lmp\", \"start\": 12842894, \"end\": 12846305}, {\"filename\": \"/edge_defs/graphics/STBARR.lmp\", \"start\": 12846305, \"end\": 12849716}, {\"filename\": \"/edge_defs/graphics/STCFN000.lmp\", \"start\": 12849716, \"end\": 12849860}, {\"filename\": \"/edge_defs/graphics/STCFN132.lmp\", \"start\": 12849860, \"end\": 12850002}, {\"filename\": \"/edge_defs/graphics/STCFN134.lmp\", \"start\": 12850002, \"end\": 12850129}, {\"filename\": \"/edge_defs/graphics/STCFN148.lmp\", \"start\": 12850129, \"end\": 12850264}, {\"filename\": \"/edge_defs/graphics/STDESYNC.lmp\", \"start\": 12850264, \"end\": 12852861}, {\"filename\": \"/edge_defs/graphics/STFB0.lmp\", \"start\": 12852861, \"end\": 12854269}, {\"filename\": \"/edge_defs/graphics/STFB1.lmp\", \"start\": 12854269, \"end\": 12855677}, {\"filename\": \"/edge_defs/graphics/STFB2.lmp\", \"start\": 12855677, \"end\": 12857085}, {\"filename\": \"/edge_defs/graphics/STFB3.lmp\", \"start\": 12857085, \"end\": 12858493}, {\"filename\": \"/edge_defs/graphics/STFB4.lmp\", \"start\": 12858493, \"end\": 12859901}, {\"filename\": \"/edge_defs/graphics/STFB5.lmp\", \"start\": 12859901, \"end\": 12861309}, {\"filename\": \"/edge_defs/graphics/STFB6.lmp\", \"start\": 12861309, \"end\": 12862717}, {\"filename\": \"/edge_defs/graphics/STFB7.lmp\", \"start\": 12862717, \"end\": 12864125}, {\"filename\": \"/edge_defs/graphics/STKEYS6.lmp\", \"start\": 12864125, \"end\": 12864245}, {\"filename\": \"/edge_defs/graphics/STKEYS7.lmp\", \"start\": 12864245, \"end\": 12864365}, {\"filename\": \"/edge_defs/graphics/STKEYS8.lmp\", \"start\": 12864365, \"end\": 12864485}, {\"filename\": \"/edge_defs/graphics/STKEYS9.PNG\", \"start\": 12864485, \"end\": 12864669}, {\"filename\": \"/edge_defs/graphics/STKEYSA.PNG\", \"start\": 12864669, \"end\": 12864921}, {\"filename\": \"/edge_defs/graphics/STPB0.lmp\", \"start\": 12864921, \"end\": 12866399}, {\"filename\": \"/edge_defs/graphics/STPB1.lmp\", \"start\": 12866399, \"end\": 12867877}, {\"filename\": \"/edge_defs/graphics/STPB2.lmp\", \"start\": 12867877, \"end\": 12869355}, {\"filename\": \"/edge_defs/graphics/STPB3.lmp\", \"start\": 12869355, \"end\": 12870833}, {\"filename\": \"/edge_defs/graphics/STPB4.lmp\", \"start\": 12870833, \"end\": 12872311}, {\"filename\": \"/edge_defs/graphics/STPB5.lmp\", \"start\": 12872311, \"end\": 12873789}, {\"filename\": \"/edge_defs/graphics/STPB6.lmp\", \"start\": 12873789, \"end\": 12875267}, {\"filename\": \"/edge_defs/graphics/STPB7.lmp\", \"start\": 12875267, \"end\": 12876745}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR1.png\", \"start\": 12876745, \"end\": 12876938}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR2.png\", \"start\": 12876938, \"end\": 12877123}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR3.png\", \"start\": 12877123, \"end\": 12877308}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR4.png\", \"start\": 12877308, \"end\": 12877495}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR5.png\", \"start\": 12877495, \"end\": 12877761}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR6.png\", \"start\": 12877761, \"end\": 12878102}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR7.png\", \"start\": 12878102, \"end\": 12878396}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR8.png\", \"start\": 12878396, \"end\": 12879780}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR9.png\", \"start\": 12879780, \"end\": 12880199}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN001.png\", \"start\": 12880199, \"end\": 12880556}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN002.png\", \"start\": 12880556, \"end\": 12880901}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN003.png\", \"start\": 12880901, \"end\": 12881257}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN004.png\", \"start\": 12881257, \"end\": 12881605}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN005.png\", \"start\": 12881605, \"end\": 12881944}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN006.png\", \"start\": 12881944, \"end\": 12882262}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN007.png\", \"start\": 12882262, \"end\": 12882612}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN008.png\", \"start\": 12882612, \"end\": 12882968}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN009.png\", \"start\": 12882968, \"end\": 12883247}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN010.png\", \"start\": 12883247, \"end\": 12883572}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN011.png\", \"start\": 12883572, \"end\": 12883941}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN012.png\", \"start\": 12883941, \"end\": 12884265}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN013.png\", \"start\": 12884265, \"end\": 12884631}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN014.png\", \"start\": 12884631, \"end\": 12884987}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN015.png\", \"start\": 12884987, \"end\": 12885360}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN016.png\", \"start\": 12885360, \"end\": 12885694}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN017.png\", \"start\": 12885694, \"end\": 12886069}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN018.png\", \"start\": 12886069, \"end\": 12886427}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN019.png\", \"start\": 12886427, \"end\": 12886778}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN020.png\", \"start\": 12886778, \"end\": 12887097}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN021.png\", \"start\": 12887097, \"end\": 12887443}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN022.png\", \"start\": 12887443, \"end\": 12887772}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN023.png\", \"start\": 12887772, \"end\": 12888127}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN024.png\", \"start\": 12888127, \"end\": 12888478}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN025.png\", \"start\": 12888478, \"end\": 12888827}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN026.png\", \"start\": 12888827, \"end\": 12889165}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN027.png\", \"start\": 12889165, \"end\": 12889454}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN028.png\", \"start\": 12889454, \"end\": 12889768}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN029.png\", \"start\": 12889768, \"end\": 12890011}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN030.png\", \"start\": 12890011, \"end\": 12890254}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN031.png\", \"start\": 12890254, \"end\": 12890520}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN032.png\", \"start\": 12890520, \"end\": 12890753}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN033.png\", \"start\": 12890753, \"end\": 12891091}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN034.png\", \"start\": 12891091, \"end\": 12891384}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN035.png\", \"start\": 12891384, \"end\": 12891722}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN036.png\", \"start\": 12891722, \"end\": 12892051}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN037.png\", \"start\": 12892051, \"end\": 12892380}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN038.png\", \"start\": 12892380, \"end\": 12892713}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN039.png\", \"start\": 12892713, \"end\": 12893049}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN040.png\", \"start\": 12893049, \"end\": 12893346}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN041.png\", \"start\": 12893346, \"end\": 12893686}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN042.png\", \"start\": 12893686, \"end\": 12894026}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN043.png\", \"start\": 12894026, \"end\": 12894261}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN044.png\", \"start\": 12894261, \"end\": 12894581}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN045.png\", \"start\": 12894581, \"end\": 12894865}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN046.png\", \"start\": 12894865, \"end\": 12895195}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN047.png\", \"start\": 12895195, \"end\": 12895533}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN048.png\", \"start\": 12895533, \"end\": 12895848}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN049.png\", \"start\": 12895848, \"end\": 12896177}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN050.png\", \"start\": 12896177, \"end\": 12896499}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN051.png\", \"start\": 12896499, \"end\": 12896816}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN052.png\", \"start\": 12896816, \"end\": 12897155}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN053.png\", \"start\": 12897155, \"end\": 12897475}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN054.png\", \"start\": 12897475, \"end\": 12897749}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN055.png\", \"start\": 12897749, \"end\": 12898056}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN056.png\", \"start\": 12898056, \"end\": 12898401}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN057.png\", \"start\": 12898401, \"end\": 12898699}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN058.png\", \"start\": 12898699, \"end\": 12899053}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN059.png\", \"start\": 12899053, \"end\": 12899392}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN060.png\", \"start\": 12899392, \"end\": 12899731}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN061.png\", \"start\": 12899731, \"end\": 12900055}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN062.png\", \"start\": 12900055, \"end\": 12900395}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN063.png\", \"start\": 12900395, \"end\": 12900720}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN064.png\", \"start\": 12900720, \"end\": 12901059}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN065.png\", \"start\": 12901059, \"end\": 12901365}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN066.png\", \"start\": 12901365, \"end\": 12901699}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN067.png\", \"start\": 12901699, \"end\": 12902031}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN068.png\", \"start\": 12902031, \"end\": 12902379}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN069.png\", \"start\": 12902379, \"end\": 12902720}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN070.png\", \"start\": 12902720, \"end\": 12903045}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN071.png\", \"start\": 12903045, \"end\": 12903377}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN072.png\", \"start\": 12903377, \"end\": 12903706}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN073.png\", \"start\": 12903706, \"end\": 12903940}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN074.png\", \"start\": 12903940, \"end\": 12904186}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN075.png\", \"start\": 12904186, \"end\": 12904512}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN076.png\", \"start\": 12904512, \"end\": 12904799}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN077.png\", \"start\": 12904799, \"end\": 12905117}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN078.png\", \"start\": 12905117, \"end\": 12905437}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN079.png\", \"start\": 12905437, \"end\": 12905748}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN080.png\", \"start\": 12905748, \"end\": 12906065}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN081.png\", \"start\": 12906065, \"end\": 12906380}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN082.png\", \"start\": 12906380, \"end\": 12906682}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN083.png\", \"start\": 12906682, \"end\": 12907010}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN084.png\", \"start\": 12907010, \"end\": 12907342}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN085.png\", \"start\": 12907342, \"end\": 12907590}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN086.png\", \"start\": 12907590, \"end\": 12907841}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_1x.png\", \"start\": 12907841, \"end\": 12915177}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_2x.png\", \"start\": 12915177, \"end\": 12922566}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_1x.png\", \"start\": 12922566, \"end\": 12922730}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_2x.png\", \"start\": 12922730, \"end\": 12922904}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_1x.png\", \"start\": 12922904, \"end\": 12930207}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_2x.png\", \"start\": 12930207, \"end\": 12937542}, {\"filename\": \"/edge_defs/movies/ECINTRO.mpg\", \"start\": 12937542, \"end\": 13615430}, {\"filename\": \"/edge_defs/scripts/anims.ddf\", \"start\": 13615430, \"end\": 13617620}, {\"filename\": \"/edge_defs/scripts/attacks.ddf\", \"start\": 13617620, \"end\": 13642945}, {\"filename\": \"/edge_defs/scripts/coal_api.ec\", \"start\": 13642945, \"end\": 13658248}, {\"filename\": \"/edge_defs/scripts/coal_hud.ec\", \"start\": 13658248, \"end\": 13676033}, {\"filename\": \"/edge_defs/scripts/colmap.ddf\", \"start\": 13676033, \"end\": 13680520}, {\"filename\": \"/edge_defs/scripts/flats.ddf\", \"start\": 13680520, \"end\": 13686187}, {\"filename\": \"/edge_defs/scripts/fonts.ddf\", \"start\": 13686187, \"end\": 13687724}, {\"filename\": \"/edge_defs/scripts/games.ddf\", \"start\": 13687724, \"end\": 13692333}, {\"filename\": \"/edge_defs/scripts/images.ddf\", \"start\": 13692333, \"end\": 13712402}, {\"filename\": \"/edge_defs/scripts/language.ldf\", \"start\": 13712402, \"end\": 13832132}, {\"filename\": \"/edge_defs/scripts/levels.ddf\", \"start\": 13832132, \"end\": 13848322}, {\"filename\": \"/edge_defs/scripts/lines.ddf\", \"start\": 13848322, \"end\": 13946929}, {\"filename\": \"/edge_defs/scripts/lua/core/base64.lua\", \"start\": 13946929, \"end\": 13954308}, {\"filename\": \"/edge_defs/scripts/lua/core/debugger.lua\", \"start\": 13954308, \"end\": 13976411}, {\"filename\": \"/edge_defs/scripts/lua/core/json.lua\", \"start\": 13976411, \"end\": 13986435}, {\"filename\": \"/edge_defs/scripts/lua/core/mat2.lua\", \"start\": 13986435, \"end\": 13991369}, {\"filename\": \"/edge_defs/scripts/lua/core/mat3.lua\", \"start\": 13991369, \"end\": 14000071}, {\"filename\": \"/edge_defs/scripts/lua/core/mat4.lua\", \"start\": 14000071, \"end\": 14013654}, {\"filename\": \"/edge_defs/scripts/lua/core/mat4Extended.lua\", \"start\": 14013654, \"end\": 14017716}, {\"filename\": \"/edge_defs/scripts/lua/core/quat.lua\", \"start\": 14017716, \"end\": 14021766}, {\"filename\": \"/edge_defs/scripts/lua/core/vec2.lua\", \"start\": 14021766, \"end\": 14024891}, {\"filename\": \"/edge_defs/scripts/lua/core/vec3.lua\", \"start\": 14024891, \"end\": 14028583}, {\"filename\": \"/edge_defs/scripts/lua/core/vec4.lua\", \"start\": 14028583, \"end\": 14032622}, {\"filename\": \"/edge_defs/scripts/lua/edge_api.lua\", \"start\": 14032622, \"end\": 14041636}, {\"filename\": \"/edge_defs/scripts/lua/edge_hud.lua\", \"start\": 14041636, \"end\": 14060594}, {\"filename\": \"/edge_defs/scripts/movies.ddf\", \"start\": 14060594, \"end\": 14060647}, {\"filename\": \"/edge_defs/scripts/playlist.ddf\", \"start\": 14060647, \"end\": 14063565}, {\"filename\": \"/edge_defs/scripts/rscript.rts\", \"start\": 14063565, \"end\": 14065256}, {\"filename\": \"/edge_defs/scripts/sectors.ddf\", \"start\": 14065256, \"end\": 14084202}, {\"filename\": \"/edge_defs/scripts/sounds.ddf\", \"start\": 14084202, \"end\": 14095773}, {\"filename\": \"/edge_defs/scripts/styles.ddf\", \"start\": 14095773, \"end\": 14102130}, {\"filename\": \"/edge_defs/scripts/switch.ddf\", \"start\": 14102130, \"end\": 14106434}, {\"filename\": \"/edge_defs/scripts/things.ddf\", \"start\": 14106434, \"end\": 14231836}, {\"filename\": \"/edge_defs/scripts/wadfixes.ddf\", \"start\": 14231836, \"end\": 14232773}, {\"filename\": \"/edge_defs/scripts/weapons.ddf\", \"start\": 14232773, \"end\": 14238467}, {\"filename\": \"/edge_defs/sounds/DPBAREXP.lmp\", \"start\": 14238467, \"end\": 14238550}, {\"filename\": \"/edge_defs/sounds/DPBDCLS.lmp\", \"start\": 14238550, \"end\": 14238596}, {\"filename\": \"/edge_defs/sounds/DPBDOPN.lmp\", \"start\": 14238596, \"end\": 14238637}, {\"filename\": \"/edge_defs/sounds/DPBFG.lmp\", \"start\": 14238637, \"end\": 14238825}, {\"filename\": \"/edge_defs/sounds/DPBGACT.lmp\", \"start\": 14238825, \"end\": 14238924}, {\"filename\": \"/edge_defs/sounds/DPBGDTH1.lmp\", \"start\": 14238924, \"end\": 14239013}, {\"filename\": \"/edge_defs/sounds/DPBGDTH2.lmp\", \"start\": 14239013, \"end\": 14239102}, {\"filename\": \"/edge_defs/sounds/DPBGSIT1.lmp\", \"start\": 14239102, \"end\": 14239213}, {\"filename\": \"/edge_defs/sounds/DPBGSIT2.lmp\", \"start\": 14239213, \"end\": 14239324}, {\"filename\": \"/edge_defs/sounds/DPBOSCUB.lmp\", \"start\": 14239324, \"end\": 14239360}, {\"filename\": \"/edge_defs/sounds/DPBOSDTH.lmp\", \"start\": 14239360, \"end\": 14239639}, {\"filename\": \"/edge_defs/sounds/DPBOSPIT.lmp\", \"start\": 14239639, \"end\": 14239684}, {\"filename\": \"/edge_defs/sounds/DPBOSPN.lmp\", \"start\": 14239684, \"end\": 14239722}, {\"filename\": \"/edge_defs/sounds/DPBOSSIT.lmp\", \"start\": 14239722, \"end\": 14239856}, {\"filename\": \"/edge_defs/sounds/DPBRSDTH.lmp\", \"start\": 14239856, \"end\": 14239968}, {\"filename\": \"/edge_defs/sounds/DPBRSSIT.lmp\", \"start\": 14239968, \"end\": 14240076}, {\"filename\": \"/edge_defs/sounds/DPBSPACT.lmp\", \"start\": 14240076, \"end\": 14240132}, {\"filename\": \"/edge_defs/sounds/DPBSPDTH.lmp\", \"start\": 14240132, \"end\": 14240223}, {\"filename\": \"/edge_defs/sounds/DPBSPSIT.lmp\", \"start\": 14240223, \"end\": 14240362}, {\"filename\": \"/edge_defs/sounds/DPBSPWLK.lmp\", \"start\": 14240362, \"end\": 14240407}, {\"filename\": \"/edge_defs/sounds/DPCACDTH.lmp\", \"start\": 14240407, \"end\": 14240496}, {\"filename\": \"/edge_defs/sounds/DPCACSIT.lmp\", \"start\": 14240496, \"end\": 14240608}, {\"filename\": \"/edge_defs/sounds/DPCLAW.lmp\", \"start\": 14240608, \"end\": 14240654}, {\"filename\": \"/edge_defs/sounds/DPCYBDTH.lmp\", \"start\": 14240654, \"end\": 14240791}, {\"filename\": \"/edge_defs/sounds/DPCYBSIT.lmp\", \"start\": 14240791, \"end\": 14240940}, {\"filename\": \"/edge_defs/sounds/DPDBCLS.lmp\", \"start\": 14240940, \"end\": 14240951}, {\"filename\": \"/edge_defs/sounds/DPDBLOAD.lmp\", \"start\": 14240951, \"end\": 14240962}, {\"filename\": \"/edge_defs/sounds/DPDBOPN.lmp\", \"start\": 14240962, \"end\": 14240973}, {\"filename\": \"/edge_defs/sounds/DPDMACT.lmp\", \"start\": 14240973, \"end\": 14241000}, {\"filename\": \"/edge_defs/sounds/DPDMPAIN.lmp\", \"start\": 14241000, \"end\": 14241041}, {\"filename\": \"/edge_defs/sounds/DPDORCLS.lmp\", \"start\": 14241041, \"end\": 14241112}, {\"filename\": \"/edge_defs/sounds/DPDOROPN.lmp\", \"start\": 14241112, \"end\": 14241185}, {\"filename\": \"/edge_defs/sounds/DPDSHTGN.lmp\", \"start\": 14241185, \"end\": 14241228}, {\"filename\": \"/edge_defs/sounds/DPFIRSHT.lmp\", \"start\": 14241228, \"end\": 14241263}, {\"filename\": \"/edge_defs/sounds/DPFIRXPL.lmp\", \"start\": 14241263, \"end\": 14241280}, {\"filename\": \"/edge_defs/sounds/DPFLAME.lmp\", \"start\": 14241280, \"end\": 14241357}, {\"filename\": \"/edge_defs/sounds/DPFLAMST.lmp\", \"start\": 14241357, \"end\": 14241371}, {\"filename\": \"/edge_defs/sounds/DPGETPOW.lmp\", \"start\": 14241371, \"end\": 14241508}, {\"filename\": \"/edge_defs/sounds/DPHOOF.lmp\", \"start\": 14241508, \"end\": 14241588}, {\"filename\": \"/edge_defs/sounds/DPITEMUP.lmp\", \"start\": 14241588, \"end\": 14241675}, {\"filename\": \"/edge_defs/sounds/DPITMBK.lmp\", \"start\": 14241675, \"end\": 14241760}, {\"filename\": \"/edge_defs/sounds/DPKEENDT.lmp\", \"start\": 14241760, \"end\": 14241866}, {\"filename\": \"/edge_defs/sounds/DPKEENPN.lmp\", \"start\": 14241866, \"end\": 14241922}, {\"filename\": \"/edge_defs/sounds/DPKNTDTH.lmp\", \"start\": 14241922, \"end\": 14242045}, {\"filename\": \"/edge_defs/sounds/DPKNTSIT.lmp\", \"start\": 14242045, \"end\": 14242111}, {\"filename\": \"/edge_defs/sounds/DPMANATK.lmp\", \"start\": 14242111, \"end\": 14242177}, {\"filename\": \"/edge_defs/sounds/DPMANDTH.lmp\", \"start\": 14242177, \"end\": 14242255}, {\"filename\": \"/edge_defs/sounds/DPMANSIT.lmp\", \"start\": 14242255, \"end\": 14242352}, {\"filename\": \"/edge_defs/sounds/DPMETAL.lmp\", \"start\": 14242352, \"end\": 14242371}, {\"filename\": \"/edge_defs/sounds/DPMNPAIN.lmp\", \"start\": 14242371, \"end\": 14242431}, {\"filename\": \"/edge_defs/sounds/DPNOWAY.lmp\", \"start\": 14242431, \"end\": 14242472}, {\"filename\": \"/edge_defs/sounds/DPOOF.lmp\", \"start\": 14242472, \"end\": 14242491}, {\"filename\": \"/edge_defs/sounds/DPPDIEHI.lmp\", \"start\": 14242491, \"end\": 14242569}, {\"filename\": \"/edge_defs/sounds/DPPEDTH.lmp\", \"start\": 14242569, \"end\": 14242678}, {\"filename\": \"/edge_defs/sounds/DPPEPAIN.lmp\", \"start\": 14242678, \"end\": 14242728}, {\"filename\": \"/edge_defs/sounds/DPPESIT.lmp\", \"start\": 14242728, \"end\": 14242845}, {\"filename\": \"/edge_defs/sounds/DPPISTOL.lmp\", \"start\": 14242845, \"end\": 14242863}, {\"filename\": \"/edge_defs/sounds/DPPLASMA.lmp\", \"start\": 14242863, \"end\": 14242905}, {\"filename\": \"/edge_defs/sounds/DPPLDETH.lmp\", \"start\": 14242905, \"end\": 14243054}, {\"filename\": \"/edge_defs/sounds/DPPLPAIN.lmp\", \"start\": 14243054, \"end\": 14243084}, {\"filename\": \"/edge_defs/sounds/DPPODTH1.lmp\", \"start\": 14243084, \"end\": 14243173}, {\"filename\": \"/edge_defs/sounds/DPPODTH2.lmp\", \"start\": 14243173, \"end\": 14243262}, {\"filename\": \"/edge_defs/sounds/DPPODTH3.lmp\", \"start\": 14243262, \"end\": 14243351}, {\"filename\": \"/edge_defs/sounds/DPPOPAIN.lmp\", \"start\": 14243351, \"end\": 14243389}, {\"filename\": \"/edge_defs/sounds/DPPOSACT.lmp\", \"start\": 14243389, \"end\": 14243419}, {\"filename\": \"/edge_defs/sounds/DPPOSIT1.lmp\", \"start\": 14243419, \"end\": 14243530}, {\"filename\": \"/edge_defs/sounds/DPPOSIT2.lmp\", \"start\": 14243530, \"end\": 14243641}, {\"filename\": \"/edge_defs/sounds/DPPOSIT3.lmp\", \"start\": 14243641, \"end\": 14243752}, {\"filename\": \"/edge_defs/sounds/DPPSTART.lmp\", \"start\": 14243752, \"end\": 14243793}, {\"filename\": \"/edge_defs/sounds/DPPSTOP.lmp\", \"start\": 14243793, \"end\": 14243810}, {\"filename\": \"/edge_defs/sounds/DPPUNCH.lmp\", \"start\": 14243810, \"end\": 14243847}, {\"filename\": \"/edge_defs/sounds/DPRADIO.lmp\", \"start\": 14243847, \"end\": 14243899}, {\"filename\": \"/edge_defs/sounds/DPRLAUNC.lmp\", \"start\": 14243899, \"end\": 14243962}, {\"filename\": \"/edge_defs/sounds/DPRXPLOD.lmp\", \"start\": 14243962, \"end\": 14244134}, {\"filename\": \"/edge_defs/sounds/DPSAWFUL.lmp\", \"start\": 14244134, \"end\": 14244162}, {\"filename\": \"/edge_defs/sounds/DPSAWHIT.lmp\", \"start\": 14244162, \"end\": 14244190}, {\"filename\": \"/edge_defs/sounds/DPSAWIDL.lmp\", \"start\": 14244190, \"end\": 14244195}, {\"filename\": \"/edge_defs/sounds/DPSAWUP.lmp\", \"start\": 14244195, \"end\": 14244283}, {\"filename\": \"/edge_defs/sounds/DPSGCOCK.lmp\", \"start\": 14244283, \"end\": 14244346}, {\"filename\": \"/edge_defs/sounds/DPSGTATK.lmp\", \"start\": 14244346, \"end\": 14244420}, {\"filename\": \"/edge_defs/sounds/DPSGTDTH.lmp\", \"start\": 14244420, \"end\": 14244509}, {\"filename\": \"/edge_defs/sounds/DPSGTSIT.lmp\", \"start\": 14244509, \"end\": 14244620}, {\"filename\": \"/edge_defs/sounds/DPSHOTGN.lmp\", \"start\": 14244620, \"end\": 14244662}, {\"filename\": \"/edge_defs/sounds/DPSKEACT.lmp\", \"start\": 14244662, \"end\": 14244702}, {\"filename\": \"/edge_defs/sounds/DPSKEATK.lmp\", \"start\": 14244702, \"end\": 14244761}, {\"filename\": \"/edge_defs/sounds/DPSKEDTH.lmp\", \"start\": 14244761, \"end\": 14244841}, {\"filename\": \"/edge_defs/sounds/DPSKEPCH.lmp\", \"start\": 14244841, \"end\": 14244878}, {\"filename\": \"/edge_defs/sounds/DPSKESIT.lmp\", \"start\": 14244878, \"end\": 14244984}, {\"filename\": \"/edge_defs/sounds/DPSKESWG.lmp\", \"start\": 14244984, \"end\": 14245024}, {\"filename\": \"/edge_defs/sounds/DPSKLATK.lmp\", \"start\": 14245024, \"end\": 14245104}, {\"filename\": \"/edge_defs/sounds/DPSKLDTH.lmp\", \"start\": 14245104, \"end\": 14245121}, {\"filename\": \"/edge_defs/sounds/DPSLOP.lmp\", \"start\": 14245121, \"end\": 14245230}, {\"filename\": \"/edge_defs/sounds/DPSPIDTH.lmp\", \"start\": 14245230, \"end\": 14245343}, {\"filename\": \"/edge_defs/sounds/DPSPISIT.lmp\", \"start\": 14245343, \"end\": 14245491}, {\"filename\": \"/edge_defs/sounds/DPSSDTH.lmp\", \"start\": 14245491, \"end\": 14245580}, {\"filename\": \"/edge_defs/sounds/DPSSSIT.lmp\", \"start\": 14245580, \"end\": 14245691}, {\"filename\": \"/edge_defs/sounds/DPSTNMOV.lmp\", \"start\": 14245691, \"end\": 14245699}, {\"filename\": \"/edge_defs/sounds/DPSWTCHN.lmp\", \"start\": 14245699, \"end\": 14245727}, {\"filename\": \"/edge_defs/sounds/DPSWTCHX.lmp\", \"start\": 14245727, \"end\": 14245756}, {\"filename\": \"/edge_defs/sounds/DPTELEPT.lmp\", \"start\": 14245756, \"end\": 14245858}, {\"filename\": \"/edge_defs/sounds/DPTINK.lmp\", \"start\": 14245858, \"end\": 14245910}, {\"filename\": \"/edge_defs/sounds/DPVILACT.lmp\", \"start\": 14245910, \"end\": 14245965}, {\"filename\": \"/edge_defs/sounds/DPVILATK.lmp\", \"start\": 14245965, \"end\": 14246028}, {\"filename\": \"/edge_defs/sounds/DPVILDTH.lmp\", \"start\": 14246028, \"end\": 14246296}, {\"filename\": \"/edge_defs/sounds/DPVILSIT.lmp\", \"start\": 14246296, \"end\": 14246372}, {\"filename\": \"/edge_defs/sounds/DPVIPAIN.lmp\", \"start\": 14246372, \"end\": 14246483}, {\"filename\": \"/edge_defs/sounds/DPWPNUP.lmp\", \"start\": 14246483, \"end\": 14246527}, {\"filename\": \"/edge_defs/sounds/DSACIDFT.ogg\", \"start\": 14246527, \"end\": 14254077, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSCRUSH.lmp\", \"start\": 14254077, \"end\": 14261095}, {\"filename\": \"/edge_defs/sounds/DSDGACT.ogg\", \"start\": 14261095, \"end\": 14268756, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGATK.ogg\", \"start\": 14268756, \"end\": 14275562, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGDTH.ogg\", \"start\": 14275562, \"end\": 14286378, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGPAIN.ogg\", \"start\": 14286378, \"end\": 14292370, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGSIT.ogg\", \"start\": 14292370, \"end\": 14298533, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT1.wav\", \"start\": 14298533, \"end\": 14313877, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT2.wav\", \"start\": 14313877, \"end\": 14329349, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT3.wav\", \"start\": 14329349, \"end\": 14341589, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT4.wav\", \"start\": 14341589, \"end\": 14356955, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSGLSBRK.wav\", \"start\": 14356955, \"end\": 14389553, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSJPDOWN.lmp\", \"start\": 14389553, \"end\": 14406141}, {\"filename\": \"/edge_defs/sounds/DSJPFLOW.lmp\", \"start\": 14406141, \"end\": 14410063}, {\"filename\": \"/edge_defs/sounds/DSJPIDLE.lmp\", \"start\": 14410063, \"end\": 14413030}, {\"filename\": \"/edge_defs/sounds/DSJPMOVE.lmp\", \"start\": 14413030, \"end\": 14414447}, {\"filename\": \"/edge_defs/sounds/DSJPRISE.lmp\", \"start\": 14414447, \"end\": 14422267}, {\"filename\": \"/edge_defs/sounds/DSMUCKFT.ogg\", \"start\": 14422267, \"end\": 14428341, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSSECRET.ogg\", \"start\": 14428341, \"end\": 14441182, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWATRFT.ogg\", \"start\": 14441182, \"end\": 14448843, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWTDIVE.wav\", \"start\": 14448843, \"end\": 14471319, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/HEARTBT1.ogg\", \"start\": 14471319, \"end\": 14491674, \"audio\": 1}, {\"filename\": \"/edge_defs/sprites/ARM3A0.png\", \"start\": 14491674, \"end\": 14492424}, {\"filename\": \"/edge_defs/sprites/ARM3B0.png\", \"start\": 14492424, \"end\": 14493102}, {\"filename\": \"/edge_defs/sprites/ARM4A0.png\", \"start\": 14493102, \"end\": 14493896}, {\"filename\": \"/edge_defs/sprites/ARM4B0.png\", \"start\": 14493896, \"end\": 14494597}, {\"filename\": \"/edge_defs/sprites/ARM5A0.png\", \"start\": 14494597, \"end\": 14495100}, {\"filename\": \"/edge_defs/sprites/ARM5B0.png\", \"start\": 14495100, \"end\": 14495615}, {\"filename\": \"/edge_defs/sprites/BSPHA0.png\", \"start\": 14495615, \"end\": 14496831}, {\"filename\": \"/edge_defs/sprites/BSPHB0.png\", \"start\": 14496831, \"end\": 14498052}, {\"filename\": \"/edge_defs/sprites/BSPHC0.png\", \"start\": 14498052, \"end\": 14499262}, {\"filename\": \"/edge_defs/sprites/BSPHD0.png\", \"start\": 14499262, \"end\": 14500463}, {\"filename\": \"/edge_defs/sprites/BSPHE0.png\", \"start\": 14500463, \"end\": 14501744}, {\"filename\": \"/edge_defs/sprites/BSPHF0.png\", \"start\": 14501744, \"end\": 14503087}, {\"filename\": \"/edge_defs/sprites/BSPHG0.png\", \"start\": 14503087, \"end\": 14504491}, {\"filename\": \"/edge_defs/sprites/BSPHH0.png\", \"start\": 14504491, \"end\": 14505836}, {\"filename\": \"/edge_defs/sprites/BSPHI0.png\", \"start\": 14505836, \"end\": 14507143}, {\"filename\": \"/edge_defs/sprites/BSPHJ0.png\", \"start\": 14507143, \"end\": 14508410}, {\"filename\": \"/edge_defs/sprites/BSPHK0.png\", \"start\": 14508410, \"end\": 14509647}, {\"filename\": \"/edge_defs/sprites/GLS1A0.lmp\", \"start\": 14509647, \"end\": 14509741}, {\"filename\": \"/edge_defs/sprites/GLS2A0.lmp\", \"start\": 14509741, \"end\": 14509955}, {\"filename\": \"/edge_defs/sprites/GLS3A0.lmp\", \"start\": 14509955, \"end\": 14510259}, {\"filename\": \"/edge_defs/sprites/GLS4A0.lmp\", \"start\": 14510259, \"end\": 14510627}, {\"filename\": \"/edge_defs/sprites/GLS5A0.lmp\", \"start\": 14510627, \"end\": 14511022}, {\"filename\": \"/edge_defs/sprites/GLS6A0.lmp\", \"start\": 14511022, \"end\": 14511458}, {\"filename\": \"/edge_defs/sprites/GLS7A0.lmp\", \"start\": 14511458, \"end\": 14511928}, {\"filename\": \"/edge_defs/sprites/GLS8A0.lmp\", \"start\": 14511928, \"end\": 14512360}, {\"filename\": \"/edge_defs/sprites/GLS9A0.lmp\", \"start\": 14512360, \"end\": 14512723}, {\"filename\": \"/edge_defs/sprites/JPCKA0.lmp\", \"start\": 14512723, \"end\": 14513539}, {\"filename\": \"/edge_defs/sprites/JPCKB0.lmp\", \"start\": 14513539, \"end\": 14514357}, {\"filename\": \"/edge_defs/sprites/JPCKC0.lmp\", \"start\": 14514357, \"end\": 14515175}, {\"filename\": \"/edge_defs/sprites/LVASA0.png\", \"start\": 14515175, \"end\": 14516473}, {\"filename\": \"/edge_defs/sprites/LVASB0.png\", \"start\": 14516473, \"end\": 14517856}, {\"filename\": \"/edge_defs/sprites/LVASC0.png\", \"start\": 14517856, \"end\": 14519210}, {\"filename\": \"/edge_defs/sprites/LVASD0.png\", \"start\": 14519210, \"end\": 14520510}, {\"filename\": \"/edge_defs/sprites/LVASE0.png\", \"start\": 14520510, \"end\": 14521779}, {\"filename\": \"/edge_defs/sprites/LVASF0.png\", \"start\": 14521779, \"end\": 14523002}, {\"filename\": \"/edge_defs/sprites/MUDSA0.png\", \"start\": 14523002, \"end\": 14524212}, {\"filename\": \"/edge_defs/sprites/MUDSB0.png\", \"start\": 14524212, \"end\": 14525424}, {\"filename\": \"/edge_defs/sprites/MUDSC0.png\", \"start\": 14525424, \"end\": 14526615}, {\"filename\": \"/edge_defs/sprites/MUDSD0.png\", \"start\": 14526615, \"end\": 14527800}, {\"filename\": \"/edge_defs/sprites/MUDSE0.png\", \"start\": 14527800, \"end\": 14529051}, {\"filename\": \"/edge_defs/sprites/MUDSF0.png\", \"start\": 14529051, \"end\": 14530292}, {\"filename\": \"/edge_defs/sprites/MUDSG0.png\", \"start\": 14530292, \"end\": 14531541}, {\"filename\": \"/edge_defs/sprites/MUDSH0.png\", \"start\": 14531541, \"end\": 14532763}, {\"filename\": \"/edge_defs/sprites/NVSCA0.lmp\", \"start\": 14532763, \"end\": 14533367}, {\"filename\": \"/edge_defs/sprites/NVSCB0.lmp\", \"start\": 14533367, \"end\": 14533971}, {\"filename\": \"/edge_defs/sprites/PLAYX1.lmp\", \"start\": 14533971, \"end\": 14534894}, {\"filename\": \"/edge_defs/sprites/PLAYX2X8.lmp\", \"start\": 14534894, \"end\": 14536110}, {\"filename\": \"/edge_defs/sprites/PLAYX3X7.lmp\", \"start\": 14536110, \"end\": 14537505}, {\"filename\": \"/edge_defs/sprites/PLAYX4X6.lmp\", \"start\": 14537505, \"end\": 14538634}, {\"filename\": \"/edge_defs/sprites/PLAYX5.lmp\", \"start\": 14538634, \"end\": 14539436}, {\"filename\": \"/edge_defs/sprites/PLAYY1.lmp\", \"start\": 14539436, \"end\": 14540384}, {\"filename\": \"/edge_defs/sprites/PLAYY2Y8.lmp\", \"start\": 14540384, \"end\": 14541612}, {\"filename\": \"/edge_defs/sprites/PLAYY3Y7.lmp\", \"start\": 14541612, \"end\": 14542998}, {\"filename\": \"/edge_defs/sprites/PLAYY4Y6.lmp\", \"start\": 14542998, \"end\": 14544136}, {\"filename\": \"/edge_defs/sprites/PLAYY5.lmp\", \"start\": 14544136, \"end\": 14544933}, {\"filename\": \"/edge_defs/sprites/PLS1A0.lmp\", \"start\": 14544933, \"end\": 14545318}, {\"filename\": \"/edge_defs/sprites/PLS1B0.lmp\", \"start\": 14545318, \"end\": 14545717}, {\"filename\": \"/edge_defs/sprites/PLS1C0.lmp\", \"start\": 14545717, \"end\": 14546102}, {\"filename\": \"/edge_defs/sprites/PLS1D0.lmp\", \"start\": 14546102, \"end\": 14546501}, {\"filename\": \"/edge_defs/sprites/PLS1E0.lmp\", \"start\": 14546501, \"end\": 14548859}, {\"filename\": \"/edge_defs/sprites/PLS1F0.lmp\", \"start\": 14548859, \"end\": 14551217}, {\"filename\": \"/edge_defs/sprites/PLS1G0.lmp\", \"start\": 14551217, \"end\": 14553444}, {\"filename\": \"/edge_defs/sprites/PLS2A0.lmp\", \"start\": 14553444, \"end\": 14553660}, {\"filename\": \"/edge_defs/sprites/PLS2B0.lmp\", \"start\": 14553660, \"end\": 14553903}, {\"filename\": \"/edge_defs/sprites/PLS2C0.lmp\", \"start\": 14553903, \"end\": 14554115}, {\"filename\": \"/edge_defs/sprites/PLS2D0.lmp\", \"start\": 14554115, \"end\": 14554505}, {\"filename\": \"/edge_defs/sprites/PLS2E0.lmp\", \"start\": 14554505, \"end\": 14555199}, {\"filename\": \"/edge_defs/sprites/PRT1A0.png\", \"start\": 14555199, \"end\": 14556071}, {\"filename\": \"/edge_defs/sprites/PRT2A0.png\", \"start\": 14556071, \"end\": 14556943}, {\"filename\": \"/edge_defs/sprites/PRT3A0.png\", \"start\": 14556943, \"end\": 14557072}, {\"filename\": \"/edge_defs/sprites/SLDGA0.png\", \"start\": 14557072, \"end\": 14558288}, {\"filename\": \"/edge_defs/sprites/SLDGB0.png\", \"start\": 14558288, \"end\": 14559506}, {\"filename\": \"/edge_defs/sprites/SLDGC0.png\", \"start\": 14559506, \"end\": 14560702}, {\"filename\": \"/edge_defs/sprites/SLDGD0.png\", \"start\": 14560702, \"end\": 14561889}, {\"filename\": \"/edge_defs/sprites/SLDGE0.png\", \"start\": 14561889, \"end\": 14563140}, {\"filename\": \"/edge_defs/sprites/SLDGF0.png\", \"start\": 14563140, \"end\": 14564381}, {\"filename\": \"/edge_defs/sprites/SLDGG0.png\", \"start\": 14564381, \"end\": 14565630}, {\"filename\": \"/edge_defs/sprites/SLDGH0.png\", \"start\": 14565630, \"end\": 14566852}, {\"filename\": \"/edge_defs/sprites/SLIMA0.png\", \"start\": 14566852, \"end\": 14568053}, {\"filename\": \"/edge_defs/sprites/SLIMB0.png\", \"start\": 14568053, \"end\": 14569258}, {\"filename\": \"/edge_defs/sprites/SLIMC0.png\", \"start\": 14569258, \"end\": 14570445}, {\"filename\": \"/edge_defs/sprites/SLIMD0.png\", \"start\": 14570445, \"end\": 14571623}, {\"filename\": \"/edge_defs/sprites/SLIME0.png\", \"start\": 14571623, \"end\": 14572868}, {\"filename\": \"/edge_defs/sprites/SLIMF0.png\", \"start\": 14572868, \"end\": 14574104}, {\"filename\": \"/edge_defs/sprites/SLIMG0.png\", \"start\": 14574104, \"end\": 14575349}, {\"filename\": \"/edge_defs/sprites/SLIMH0.png\", \"start\": 14575349, \"end\": 14576565}, {\"filename\": \"/edge_defs/sprites/SPSHA0.png\", \"start\": 14576565, \"end\": 14577782}, {\"filename\": \"/edge_defs/sprites/SPSHB0.png\", \"start\": 14577782, \"end\": 14579002}, {\"filename\": \"/edge_defs/sprites/SPSHC0.png\", \"start\": 14579002, \"end\": 14580213}, {\"filename\": \"/edge_defs/sprites/SPSHD0.png\", \"start\": 14580213, \"end\": 14581414}, {\"filename\": \"/edge_defs/sprites/SPSHE0.png\", \"start\": 14581414, \"end\": 14582694}, {\"filename\": \"/edge_defs/sprites/SPSHF0.png\", \"start\": 14582694, \"end\": 14584045}, {\"filename\": \"/edge_defs/sprites/SPSHG0.png\", \"start\": 14584045, \"end\": 14585452}, {\"filename\": \"/edge_defs/sprites/SPSHH0.png\", \"start\": 14585452, \"end\": 14586804}, {\"filename\": \"/edge_defs/sprites/SPSHI0.png\", \"start\": 14586804, \"end\": 14588115}, {\"filename\": \"/edge_defs/sprites/SPSHJ0.png\", \"start\": 14588115, \"end\": 14589383}, {\"filename\": \"/edge_defs/sprites/SPSHK0.png\", \"start\": 14589383, \"end\": 14590620}, {\"filename\": \"/edge_defs/sprites/TSTPA0.png\", \"start\": 14590620, \"end\": 14591745}, {\"filename\": \"/edge_defs/sprites/TSTPB0.lmp\", \"start\": 14591745, \"end\": 14592087}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA1.png\", \"start\": 14592087, \"end\": 14593367}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA2.png\", \"start\": 14593367, \"end\": 14594920}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA3.png\", \"start\": 14594920, \"end\": 14596551}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA4.png\", \"start\": 14596551, \"end\": 14598084}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA5.png\", \"start\": 14598084, \"end\": 14599270}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA6.png\", \"start\": 14599270, \"end\": 14600786}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA7.png\", \"start\": 14600786, \"end\": 14602379}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA8.png\", \"start\": 14602379, \"end\": 14603897}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB1.png\", \"start\": 14603897, \"end\": 14605127}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB2.png\", \"start\": 14605127, \"end\": 14606647}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB3.png\", \"start\": 14606647, \"end\": 14608254}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB4.png\", \"start\": 14608254, \"end\": 14609787}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB5.png\", \"start\": 14609787, \"end\": 14610997}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB6.png\", \"start\": 14610997, \"end\": 14612495}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB7.png\", \"start\": 14612495, \"end\": 14614087}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB8.png\", \"start\": 14614087, \"end\": 14615601}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC1.png\", \"start\": 14615601, \"end\": 14616898}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC2.png\", \"start\": 14616898, \"end\": 14618404}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC3.png\", \"start\": 14618404, \"end\": 14619975}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC4.png\", \"start\": 14619975, \"end\": 14621506}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC5.png\", \"start\": 14621506, \"end\": 14622843}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC6.png\", \"start\": 14622843, \"end\": 14624363}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC7.png\", \"start\": 14624363, \"end\": 14625899}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC8.png\", \"start\": 14625899, \"end\": 14627388}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD1.png\", \"start\": 14627388, \"end\": 14628699}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD2.png\", \"start\": 14628699, \"end\": 14630217}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD3.png\", \"start\": 14630217, \"end\": 14631805}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD4.png\", \"start\": 14631805, \"end\": 14633330}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD5.png\", \"start\": 14633330, \"end\": 14634656}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD6.png\", \"start\": 14634656, \"end\": 14636198}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD7.png\", \"start\": 14636198, \"end\": 14637771}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD8.png\", \"start\": 14637771, \"end\": 14639274}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE1.png\", \"start\": 14639274, \"end\": 14640636}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE2.png\", \"start\": 14640636, \"end\": 14642153}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE3.png\", \"start\": 14642153, \"end\": 14643701}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE4.png\", \"start\": 14643701, \"end\": 14645299}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE5.png\", \"start\": 14645299, \"end\": 14646737}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE6.png\", \"start\": 14646737, \"end\": 14648287}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE7.png\", \"start\": 14648287, \"end\": 14649841}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE8.png\", \"start\": 14649841, \"end\": 14651400}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF1.png\", \"start\": 14651400, \"end\": 14652797}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF2.png\", \"start\": 14652797, \"end\": 14654368}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF3.png\", \"start\": 14654368, \"end\": 14655970}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF4.png\", \"start\": 14655970, \"end\": 14657536}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF5.png\", \"start\": 14657536, \"end\": 14658939}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF6.png\", \"start\": 14658939, \"end\": 14660456}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF7.png\", \"start\": 14660456, \"end\": 14662052}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF8.png\", \"start\": 14662052, \"end\": 14663660}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG1.png\", \"start\": 14663660, \"end\": 14665049}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG2.png\", \"start\": 14665049, \"end\": 14666637}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG3.png\", \"start\": 14666637, \"end\": 14668281}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG4.png\", \"start\": 14668281, \"end\": 14669801}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG5.png\", \"start\": 14669801, \"end\": 14671151}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG6.png\", \"start\": 14671151, \"end\": 14672672}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG7.png\", \"start\": 14672672, \"end\": 14674294}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG8.png\", \"start\": 14674294, \"end\": 14675864}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH1.png\", \"start\": 14675864, \"end\": 14677174}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH2.png\", \"start\": 14677174, \"end\": 14678705}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH3.png\", \"start\": 14678705, \"end\": 14680297}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH4.png\", \"start\": 14680297, \"end\": 14681780}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH5.png\", \"start\": 14681780, \"end\": 14683074}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH6.png\", \"start\": 14683074, \"end\": 14684541}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH7.png\", \"start\": 14684541, \"end\": 14686119}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH8.png\", \"start\": 14686119, \"end\": 14687688}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDI0.png\", \"start\": 14687688, \"end\": 14689378}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDJ0.png\", \"start\": 14689378, \"end\": 14691160}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDK0.png\", \"start\": 14691160, \"end\": 14692906}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDL0.png\", \"start\": 14692906, \"end\": 14694626}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDM0.png\", \"start\": 14694626, \"end\": 14696353}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDN0.png\", \"start\": 14696353, \"end\": 14698092}, {\"filename\": \"/edge_defs/textures/FUZZMAP8.png\", \"start\": 14698092, \"end\": 14712892}, {\"filename\": \"/edge_defs/textures/PORTAL7A.jpg\", \"start\": 14712892, \"end\": 14735010}, {\"filename\": \"/edge_defs/textures/PORTAL7B.jpg\", \"start\": 14735010, \"end\": 14753363}, {\"filename\": \"/edge_defs/textures/PORTAL7C.jpg\", \"start\": 14753363, \"end\": 14768854}, {\"filename\": \"/edge_defs/textures/PORTAL7D.jpg\", \"start\": 14768854, \"end\": 14784148}, {\"filename\": \"/edge_defs/textures/PORTAL7E.jpg\", \"start\": 14784148, \"end\": 14799015}, {\"filename\": \"/edge_defs/textures/PORTAL7F.jpg\", \"start\": 14799015, \"end\": 14816016}, {\"filename\": \"/edge_defs/textures/PORTAL7G.jpg\", \"start\": 14816016, \"end\": 14836724}, {\"filename\": \"/edge_defs/ttf/ECFONT01.ttf\", \"start\": 14836724, \"end\": 14874204}, {\"filename\": \"/edge_defs/ttf/ECFONT02.ttf\", \"start\": 14874204, \"end\": 15062696}, {\"filename\": \"/edge_defs/ttf/ECFONT03.ttf\", \"start\": 15062696, \"end\": 15127784}, {\"filename\": \"/edge_defs/version.txt\", \"start\": 15127784, \"end\": 15127788}, {\"filename\": \"/freedm.wad\", \"start\": 15127788, \"end\": 37346584}, {\"filename\": \"/freedoom2.wad\", \"start\": 37346584, \"end\": 66134332}, {\"filename\": \"/soundfont/16-Bit Game Station.sf2\", \"start\": 66134332, \"end\": 70093680}, {\"filename\": \"/soundfont/Apogee.op2\", \"start\": 70093680, \"end\": 70105588}, {\"filename\": \"/soundfont/ChipFreak.sf2\", \"start\": 70105588, \"end\": 70215072}, {\"filename\": \"/soundfont/Default.sf2\", \"start\": 70215072, \"end\": 74406988}, {\"filename\": \"/soundfont/FDDMX.op2\", \"start\": 74406988, \"end\": 74418896}, {\"filename\": \"/soundfont/ProtoSquare!.sf2\", \"start\": 74418896, \"end\": 74783134}], \"remote_package_size\": 55407022, \"package_uuid\": \"sha256-5e3b4c715a5d96e5ae834d091ddc251ebc43fdc9ce84abf8b967cb036592d3d3\"});\r\n\r\n  })();\r\n\r\n\r\n// Sometimes an existing Module object exists with properties\r\n// meant to overwrite the default module functionality. Here\r\n// we collect those properties and reapply _after_ we configure\r\n// the current environment's defaults to avoid having to be so\r\n// defensive during initialization.\r\nvar moduleOverrides = Object.assign({}, Module);\r\n\r\nvar arguments_ = [];\r\nvar thisProgram = './this.program';\r\nvar quit_ = (status, toThrow) => {\r\n  throw toThrow;\r\n};\r\n\r\n// Determine the runtime environment we are in. You can customize this by\r\n// setting the ENVIRONMENT setting at compile time (see settings.js).\r\n\r\nvar ENVIRONMENT_IS_WEB = true;\r\nvar ENVIRONMENT_IS_WORKER = false;\r\nvar ENVIRONMENT_IS_NODE = false;\r\nvar ENVIRONMENT_IS_SHELL = false;\r\n\r\n// `/` should be present at the end if `scriptDirectory` is not empty\r\nvar scriptDirectory = '';\r\nfunction locateFile(path) {\r\n  if (Module['locateFile']) {\r\n    return Module['locateFile'](path, scriptDirectory);\r\n  }\r\n  return scriptDirectory + path;\r\n}\r\n\r\n// Hooks that are implemented differently in different runtime environments.\r\nvar read_,\r\n    readAsync,\r\n    readBinary;\r\n\r\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\r\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\r\n// ENVIRONMENT_IS_NODE.\r\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\r\n    scriptDirectory = self.location.href;\r\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\r\n    scriptDirectory = document.currentScript.src;\r\n  }\r\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\r\n  // is gone, so we saved it, and we use it here instead of any other info.\r\n  if (_scriptDir) {\r\n    scriptDirectory = _scriptDir;\r\n  }\r\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\r\n  // otherwise, slice off the final part of the url to find the script directory.\r\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\r\n  // and scriptDirectory will correctly be replaced with an empty string.\r\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\r\n  // they are removed because they could contain a slash.\r\n  if (scriptDirectory.indexOf('blob:') !== 0) {\r\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\r\n  } else {\r\n    scriptDirectory = '';\r\n  }\r\n\r\n  // Differentiate the Web Worker from the Node Worker case, as reading must\r\n  // be done differently.\r\n  {\r\n// include: web_or_worker_shell_read.js\r\nread_ = (url) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url, false);\r\n    xhr.send(null);\r\n    return xhr.responseText;\r\n  }\r\n\r\n  if (ENVIRONMENT_IS_WORKER) {\r\n    readBinary = (url) => {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, false);\r\n      xhr.responseType = 'arraybuffer';\r\n      xhr.send(null);\r\n      return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\r\n    };\r\n  }\r\n\r\n  readAsync = (url, onload, onerror) => {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url, true);\r\n    xhr.responseType = 'arraybuffer';\r\n    xhr.onload = () => {\r\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n        onload(xhr.response);\r\n        return;\r\n      }\r\n      onerror();\r\n    };\r\n    xhr.onerror = onerror;\r\n    xhr.send(null);\r\n  }\r\n\r\n// end include: web_or_worker_shell_read.js\r\n  }\r\n} else\r\n{\r\n}\r\n\r\nvar out = Module['print'] || console.log.bind(console);\r\nvar err = Module['printErr'] || console.error.bind(console);\r\n\r\n// Merge back in the overrides\r\nObject.assign(Module, moduleOverrides);\r\n// Free the object hierarchy contained in the overrides, this lets the GC\r\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\r\nmoduleOverrides = null;\r\n\r\n// Emit code to handle expected values on the Module object. This applies Module.x\r\n// to the proper local x. This has two benefits: first, we only emit it if it is\r\n// expected to arrive, and second, by using a local everywhere else that can be\r\n// minified.\r\n\r\nif (Module['arguments']) arguments_ = Module['arguments'];\r\n\r\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\r\n\r\nif (Module['quit']) quit_ = Module['quit'];\r\n\r\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\r\n\r\n// end include: shell.js\r\n// include: preamble.js\r\n// === Preamble library stuff ===\r\n\r\n// Documentation for the public APIs defined in this file must be updated in:\r\n//    site/source/docs/api_reference/preamble.js.rst\r\n// A prebuilt local version of the documentation is available at:\r\n//    site/build/text/docs/api_reference/preamble.js.txt\r\n// You can also build docs locally as HTML or other formats in site/\r\n// An online HTML version (which may be of a different version of Emscripten)\r\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\r\n\r\nvar wasmBinary; \r\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\r\n\r\nif (typeof WebAssembly != 'object') {\r\n  abort('no native wasm support detected');\r\n}\r\n\r\n// include: base64Utils.js\r\n// Converts a string of base64 into a byte array (Uint8Array).\r\nfunction intArrayFromBase64(s) {\r\n\r\n  var decoded = atob(s);\r\n  var bytes = new Uint8Array(decoded.length);\r\n  for (var i = 0 ; i < decoded.length ; ++i) {\r\n    bytes[i] = decoded.charCodeAt(i);\r\n  }\r\n  return bytes;\r\n}\r\n\r\n// If filename is a base64 data URI, parses and returns data (Buffer on node,\r\n// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.\r\nfunction tryParseAsDataURI(filename) {\r\n  if (!isDataURI(filename)) {\r\n    return;\r\n  }\r\n\r\n  return intArrayFromBase64(filename.slice(dataURIPrefix.length));\r\n}\r\n// end include: base64Utils.js\r\n// Wasm globals\r\n\r\nvar wasmMemory;\r\n\r\n//========================================\r\n// Runtime essentials\r\n//========================================\r\n\r\n// whether we are quitting the application. no code should run after this.\r\n// set in exit() and abort()\r\nvar ABORT = false;\r\n\r\n// set by exit() and abort().  Passed to 'onExit' handler.\r\n// NOTE: This is also used as the process return code code in shell environments\r\n// but only when noExitRuntime is false.\r\nvar EXITSTATUS;\r\n\r\n// In STRICT mode, we only define assert() when ASSERTIONS is set.  i.e. we\r\n// don't define it at all in release modes.  This matches the behaviour of\r\n// MINIMAL_RUNTIME.\r\n// TODO(sbc): Make this the default even without STRICT enabled.\r\n/** @type {function(*, string=)} */\r\nfunction assert(condition, text) {\r\n  if (!condition) {\r\n    // This build was created without ASSERTIONS defined.  `assert()` should not\r\n    // ever be called in this configuration but in case there are callers in\r\n    // the wild leave this simple abort() implemenation here for now.\r\n    abort(text);\r\n  }\r\n}\r\n\r\n// Memory management\r\n\r\nvar HEAP,\r\n/** @type {!Int8Array} */\r\n  HEAP8,\r\n/** @type {!Uint8Array} */\r\n  HEAPU8,\r\n/** @type {!Int16Array} */\r\n  HEAP16,\r\n/** @type {!Uint16Array} */\r\n  HEAPU16,\r\n/** @type {!Int32Array} */\r\n  HEAP32,\r\n/** @type {!Uint32Array} */\r\n  HEAPU32,\r\n/** @type {!Float32Array} */\r\n  HEAPF32,\r\n/** @type {!Float64Array} */\r\n  HEAPF64;\r\n\r\nfunction updateMemoryViews() {\r\n  var b = wasmMemory.buffer;\r\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\r\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\r\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\r\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\r\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\r\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\r\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\r\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\r\n}\r\n\r\n// include: runtime_stack_check.js\r\n// end include: runtime_stack_check.js\r\n// include: runtime_assertions.js\r\n// end include: runtime_assertions.js\r\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\r\nvar __ATINIT__    = []; // functions called during startup\r\nvar __ATMAIN__    = []; // functions called when main() is to be run\r\nvar __ATEXIT__    = []; // functions called during shutdown\r\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\r\n\r\nvar runtimeInitialized = false;\r\n\r\nfunction preRun() {\r\n  if (Module['preRun']) {\r\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\r\n    while (Module['preRun'].length) {\r\n      addOnPreRun(Module['preRun'].shift());\r\n    }\r\n  }\r\n  callRuntimeCallbacks(__ATPRERUN__);\r\n}\r\n\r\nfunction initRuntime() {\r\n  runtimeInitialized = true;\r\n\r\n  \r\nif (!Module[\"noFSInit\"] && !FS.init.initialized)\r\n  FS.init();\r\nFS.ignorePermissions = false;\r\n\r\nTTY.init();\r\n  callRuntimeCallbacks(__ATINIT__);\r\n}\r\n\r\nfunction preMain() {\r\n  \r\n  callRuntimeCallbacks(__ATMAIN__);\r\n}\r\n\r\nfunction postRun() {\r\n\r\n  if (Module['postRun']) {\r\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\r\n    while (Module['postRun'].length) {\r\n      addOnPostRun(Module['postRun'].shift());\r\n    }\r\n  }\r\n\r\n  callRuntimeCallbacks(__ATPOSTRUN__);\r\n}\r\n\r\nfunction addOnPreRun(cb) {\r\n  __ATPRERUN__.unshift(cb);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n  __ATINIT__.unshift(cb);\r\n}\r\n\r\nfunction addOnPreMain(cb) {\r\n  __ATMAIN__.unshift(cb);\r\n}\r\n\r\nfunction addOnExit(cb) {\r\n}\r\n\r\nfunction addOnPostRun(cb) {\r\n  __ATPOSTRUN__.unshift(cb);\r\n}\r\n\r\n// include: runtime_math.js\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\r\n\r\n// end include: runtime_math.js\r\n// A counter of dependencies for calling run(). If we need to\r\n// do asynchronous work before running, increment this and\r\n// decrement it. Incrementing must happen in a place like\r\n// Module.preRun (used by emcc to add file preloading).\r\n// Note that you can add dependencies in preRun, even though\r\n// it happens right before run - run will be postponed until\r\n// the dependencies are met.\r\nvar runDependencies = 0;\r\nvar runDependencyWatcher = null;\r\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\r\n\r\nfunction getUniqueRunDependency(id) {\r\n  return id;\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n  runDependencies++;\r\n\r\n  Module['monitorRunDependencies']?.(runDependencies);\r\n\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n  runDependencies--;\r\n\r\n  Module['monitorRunDependencies']?.(runDependencies);\r\n\r\n  if (runDependencies == 0) {\r\n    if (runDependencyWatcher !== null) {\r\n      clearInterval(runDependencyWatcher);\r\n      runDependencyWatcher = null;\r\n    }\r\n    if (dependenciesFulfilled) {\r\n      var callback = dependenciesFulfilled;\r\n      dependenciesFulfilled = null;\r\n      callback(); // can add another dependenciesFulfilled\r\n    }\r\n  }\r\n}\r\n\r\n/** @param {string|number=} what */\r\nfunction abort(what) {\r\n  Module['onAbort']?.(what);\r\n\r\n  what = 'Aborted(' + what + ')';\r\n  // TODO(sbc): Should we remove printing and leave it up to whoever\r\n  // catches the exception?\r\n  err(what);\r\n\r\n  ABORT = true;\r\n  EXITSTATUS = 1;\r\n\r\n  what += '. Build with -sASSERTIONS for more info.';\r\n\r\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\r\n  // exception, which means we'd run destructors on it. We need the error to\r\n  // simply make the program stop.\r\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\r\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\r\n  // a trap or not based on a hidden field within the object. So at the moment\r\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\r\n  // allows this in the wasm spec.\r\n\r\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\r\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\r\n  // though it can.\r\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\r\n  /** @suppress {checkTypes} */\r\n  var e = new WebAssembly.RuntimeError(what);\r\n\r\n  readyPromiseReject(e);\r\n  // Throw the error whether or not MODULARIZE is set because abort is used\r\n  // in code paths apart from instantiation where an exception is expected\r\n  // to be thrown when abort is called.\r\n  throw e;\r\n}\r\n\r\n// include: memoryprofiler.js\r\n// end include: memoryprofiler.js\r\n// include: URIUtils.js\r\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\r\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\r\n\r\n/**\r\n * Indicates whether filename is a base64 data URI.\r\n * @noinline\r\n */\r\nvar isDataURI = (filename) => filename.startsWith(dataURIPrefix);\r\n\r\n/**\r\n * Indicates whether filename is delivered via file protocol (as opposed to http/https)\r\n * @noinline\r\n */\r\nvar isFileURI = (filename) => filename.startsWith('file://');\r\n// end include: URIUtils.js\r\n// include: runtime_exceptions.js\r\n// end include: runtime_exceptions.js\r\nvar wasmBinaryFile;\r\n  wasmBinaryFile = 'edge-classic.wasm';\r\n  if (!isDataURI(wasmBinaryFile)) {\r\n    wasmBinaryFile = locateFile(wasmBinaryFile);\r\n  }\r\n\r\nfunction getBinarySync(file) {\r\n  if (file == wasmBinaryFile && wasmBinary) {\r\n    return new Uint8Array(wasmBinary);\r\n  }\r\n  if (readBinary) {\r\n    return readBinary(file);\r\n  }\r\n  throw \"both async and sync fetching of the wasm failed\";\r\n}\r\n\r\nfunction getBinaryPromise(binaryFile) {\r\n  // If we don't have the binary yet, try to load it asynchronously.\r\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\r\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\r\n  // Cordova or Electron apps are typically loaded from a file:// url.\r\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\r\n  if (!wasmBinary\r\n      && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\r\n    if (typeof fetch == 'function'\r\n    ) {\r\n      return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n        if (!response['ok']) {\r\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\r\n        }\r\n        return response['arrayBuffer']();\r\n      }).catch(() => getBinarySync(binaryFile));\r\n    }\r\n  }\r\n\r\n  // Otherwise, getBinarySync should be able to get it synchronously\r\n  return Promise.resolve().then(() => getBinarySync(binaryFile));\r\n}\r\n\r\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\r\n  return getBinaryPromise(binaryFile).then((binary) => {\r\n    return WebAssembly.instantiate(binary, imports);\r\n  }).then((instance) => {\r\n    return instance;\r\n  }).then(receiver, (reason) => {\r\n    err(`failed to asynchronously prepare wasm: ${reason}`);\r\n\r\n    abort(reason);\r\n  });\r\n}\r\n\r\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\r\n  if (!binary &&\r\n      typeof WebAssembly.instantiateStreaming == 'function' &&\r\n      !isDataURI(binaryFile) &&\r\n      typeof fetch == 'function') {\r\n    return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n      // Suppress closure warning here since the upstream definition for\r\n      // instantiateStreaming only allows Promise<Repsponse> rather than\r\n      // an actual Response.\r\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\r\n      /** @suppress {checkTypes} */\r\n      var result = WebAssembly.instantiateStreaming(response, imports);\r\n\r\n      return result.then(\r\n        callback,\r\n        function(reason) {\r\n          // We expect the most common failure cause to be a bad MIME type for the binary,\r\n          // in which case falling back to ArrayBuffer instantiation should work.\r\n          err(`wasm streaming compile failed: ${reason}`);\r\n          err('falling back to ArrayBuffer instantiation');\r\n          return instantiateArrayBuffer(binaryFile, imports, callback);\r\n        });\r\n    });\r\n  }\r\n  return instantiateArrayBuffer(binaryFile, imports, callback);\r\n}\r\n\r\n// Create the wasm instance.\r\n// Receives the wasm imports, returns the exports.\r\nfunction createWasm() {\r\n  // prepare imports\r\n  var info = {\r\n    'env': wasmImports,\r\n    'wasi_snapshot_preview1': wasmImports,\r\n  };\r\n  // Load the wasm module and create an instance of using native support in the JS engine.\r\n  // handle a generated wasm instance, receiving its exports and\r\n  // performing other necessary setup\r\n  /** @param {WebAssembly.Module=} module*/\r\n  function receiveInstance(instance, module) {\r\n    wasmExports = instance.exports;\r\n\r\n    wasmExports = Asyncify.instrumentWasmExports(wasmExports);\r\n\r\n    \r\n\r\n    wasmMemory = wasmExports['memory'];\r\n    \r\n    updateMemoryViews();\r\n\r\n    wasmTable = wasmExports['__indirect_function_table'];\r\n    \r\n\r\n    addOnInit(wasmExports['__wasm_call_ctors']);\r\n\r\n    removeRunDependency('wasm-instantiate');\r\n    return wasmExports;\r\n  }\r\n  // wait for the pthread pool (if any)\r\n  addRunDependency('wasm-instantiate');\r\n\r\n  // Prefer streaming instantiation if available.\r\n  function receiveInstantiationResult(result) {\r\n    // 'result' is a ResultObject object which has both the module and instance.\r\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\r\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\r\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\r\n    receiveInstance(result['instance']);\r\n  }\r\n\r\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\r\n  // to manually instantiate the Wasm module themselves. This allows pages to\r\n  // run the instantiation parallel to any other async startup actions they are\r\n  // performing.\r\n  // Also pthreads and wasm workers initialize the wasm instance through this\r\n  // path.\r\n  if (Module['instantiateWasm']) {\r\n\r\n    try {\r\n      return Module['instantiateWasm'](info, receiveInstance);\r\n    } catch(e) {\r\n      err(`Module.instantiateWasm callback failed with error: ${e}`);\r\n        // If instantiation fails, reject the module ready promise.\r\n        readyPromiseReject(e);\r\n    }\r\n  }\r\n\r\n  // If instantiation fails, reject the module ready promise.\r\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\r\n  return {}; // no exports yet; we'll fill them in later\r\n}\r\n\r\n// Globals used by JS i64 conversions (see makeSetValue)\r\nvar tempDouble;\r\nvar tempI64;\r\n\r\n// include: runtime_debug.js\r\n// end include: runtime_debug.js\r\n// === Body ===\r\n\r\nvar ASM_CONSTS = {\r\n  632144: () => { if (Module.edgePostInit) { Module.edgePostInit(); } },  \r\n 632200: ($0, $1) => { const args = []; for (let i = 0; i < $0; i++) { args.push(UTF8ToString(HEAP32[($1 >> 2) + i])); } console.log(`Edge command line : $ { args }`); const homeIndex = args.indexOf(\"-home\"); if (homeIndex === -1 || homeIndex >= args.length || args[homeIndex + 1].startsWith(\"-\")) { throw \"No home command line option specified\" } const homeDir = args[homeIndex + 1]; if (!FS.analyzePath(homeDir).exists) { FS.mkdirTree(homeDir); } FS.mount(IDBFS, {}, homeDir); FS.syncfs( true, function(err) { if (err) { console.error(`Error mounting home dir $ { err }`); return; } Module._WebMain($0, $1); }); },  \r\n 632795: () => { if (Module.onFullscreen) { Module.onFullscreen(); } },  \r\n 632851: ($0) => { if (Module.edgePreSyncFS) { Module.edgePreSyncFS(); } FS.syncfs( $0, function(err) { if (Module.edgePostSyncFS) { Module.edgePostSyncFS(); } }); },  \r\n 633000: ($0) => { var str = UTF8ToString($0) + '\\n\\n' + 'Abort/Retry/Ignore/AlwaysIgnore? [ariA] :'; var reply = window.prompt(str, \"i\"); if (reply === null) { reply = \"i\"; } return allocate(intArrayFromString(reply), 'i8', ALLOC_NORMAL); },  \r\n 633225: () => { if (typeof(AudioContext) !== 'undefined') { return true; } else if (typeof(webkitAudioContext) !== 'undefined') { return true; } return false; },  \r\n 633372: () => { if ((typeof(navigator.mediaDevices) !== 'undefined') && (typeof(navigator.mediaDevices.getUserMedia) !== 'undefined')) { return true; } else if (typeof(navigator.webkitGetUserMedia) !== 'undefined') { return true; } return false; },  \r\n 633606: ($0) => { if(typeof(Module['SDL2']) === 'undefined') { Module['SDL2'] = {}; } var SDL2 = Module['SDL2']; if (!$0) { SDL2.audio = {}; } else { SDL2.capture = {}; } if (!SDL2.audioContext) { if (typeof(AudioContext) !== 'undefined') { SDL2.audioContext = new AudioContext(); } else if (typeof(webkitAudioContext) !== 'undefined') { SDL2.audioContext = new webkitAudioContext(); } if (SDL2.audioContext) { autoResumeAudioContext(SDL2.audioContext); } } return SDL2.audioContext === undefined ? -1 : 0; },  \r\n 634099: () => { var SDL2 = Module['SDL2']; return SDL2.audioContext.sampleRate; },  \r\n 634167: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; var have_microphone = function(stream) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); SDL2.capture.silenceTimer = undefined; } SDL2.capture.mediaStreamNode = SDL2.audioContext.createMediaStreamSource(stream); SDL2.capture.scriptProcessorNode = SDL2.audioContext.createScriptProcessor($1, $0, 1); SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) { if ((SDL2 === undefined) || (SDL2.capture === undefined)) { return; } audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0); SDL2.capture.currentCaptureBuffer = audioProcessingEvent.inputBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode); SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination); SDL2.capture.stream = stream; }; var no_microphone = function(error) { }; SDL2.capture.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { SDL2.capture.currentCaptureBuffer = SDL2.capture.silenceBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.silenceTimer = setTimeout(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); if ((navigator.mediaDevices !== undefined) && (navigator.mediaDevices.getUserMedia !== undefined)) { navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(have_microphone).catch(no_microphone); } else if (navigator.webkitGetUserMedia !== undefined) { navigator.webkitGetUserMedia({ audio: true, video: false }, have_microphone, no_microphone); } },  \r\n 635819: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; SDL2.audio.scriptProcessorNode = SDL2.audioContext['createScriptProcessor']($1, 0, $0); SDL2.audio.scriptProcessorNode['onaudioprocess'] = function (e) { if ((SDL2 === undefined) || (SDL2.audio === undefined)) { return; } SDL2.audio.currentOutputBuffer = e['outputBuffer']; dynCall('vi', $2, [$3]); }; SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']); },  \r\n 636229: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.capture.currentCaptureBuffer.numberOfChannels; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.capture.currentCaptureBuffer.getChannelData(c); if (channelData.length != $1) { throw 'Web Audio capture buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } if (numChannels == 1) { for (var j = 0; j < $1; ++j) { setValue($0 + (j * 4), channelData[j], 'float'); } } else { for (var j = 0; j < $1; ++j) { setValue($0 + (((j * numChannels) + c) * 4), channelData[j], 'float'); } } } },  \r\n 636834: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.audio.currentOutputBuffer['numberOfChannels']; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.audio.currentOutputBuffer['getChannelData'](c); if (channelData.length != $1) { throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } for (var j = 0; j < $1; ++j) { channelData[j] = HEAPF32[$0 + ((j*numChannels + c) << 2) >> 2]; } } },  \r\n 637314: ($0) => { var SDL2 = Module['SDL2']; if ($0) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); } if (SDL2.capture.stream !== undefined) { var tracks = SDL2.capture.stream.getAudioTracks(); for (var i = 0; i < tracks.length; i++) { SDL2.capture.stream.removeTrack(tracks[i]); } SDL2.capture.stream = undefined; } if (SDL2.capture.scriptProcessorNode !== undefined) { SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) {}; SDL2.capture.scriptProcessorNode.disconnect(); SDL2.capture.scriptProcessorNode = undefined; } if (SDL2.capture.mediaStreamNode !== undefined) { SDL2.capture.mediaStreamNode.disconnect(); SDL2.capture.mediaStreamNode = undefined; } if (SDL2.capture.silenceBuffer !== undefined) { SDL2.capture.silenceBuffer = undefined } SDL2.capture = undefined; } else { if (SDL2.audio.scriptProcessorNode != undefined) { SDL2.audio.scriptProcessorNode.disconnect(); SDL2.audio.scriptProcessorNode = undefined; } SDL2.audio = undefined; } if ((SDL2.audioContext !== undefined) && (SDL2.audio === undefined) && (SDL2.capture === undefined)) { SDL2.audioContext.close(); SDL2.audioContext = undefined; } },  \r\n 638486: ($0) => { window.open(UTF8ToString($0), \"_blank\"); },  \r\n 638531: ($0, $1, $2) => { var w = $0; var h = $1; var pixels = $2; if (!Module['SDL2']) Module['SDL2'] = {}; var SDL2 = Module['SDL2']; if (SDL2.ctxCanvas !== Module['canvas']) { SDL2.ctx = Module['createContext'](Module['canvas'], false, true); SDL2.ctxCanvas = Module['canvas']; } if (SDL2.w !== w || SDL2.h !== h || SDL2.imageCtx !== SDL2.ctx) { SDL2.image = SDL2.ctx.createImageData(w, h); SDL2.w = w; SDL2.h = h; SDL2.imageCtx = SDL2.ctx; } var data = SDL2.image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = 0xff; src++; dst += 4; } } else { if (SDL2.data32Data !== data) { SDL2.data32 = new Int32Array(data.buffer); SDL2.data8 = new Uint8Array(data.buffer); SDL2.data32Data = data; } var data32 = SDL2.data32; num = data32.length; data32.set(HEAP32.subarray(src, src + num)); var data8 = SDL2.data8; var i = 3; var j = i + 4*num; if (num % 8 == 0) { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; } } else { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; } } } SDL2.ctx.putImageData(SDL2.image, 0, 0); },  \r\n 640000: ($0, $1, $2, $3, $4) => { var w = $0; var h = $1; var hot_x = $2; var hot_y = $3; var pixels = $4; var canvas = document.createElement(\"canvas\"); canvas.width = w; canvas.height = h; var ctx = canvas.getContext(\"2d\"); var image = ctx.createImageData(w, h); var data = image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = (val >> 24) & 0xff; src++; dst += 4; } } else { var data32 = new Int32Array(data.buffer); num = data32.length; data32.set(HEAP32.subarray(src, src + num)); } ctx.putImageData(image, 0, 0); var url = hot_x === 0 && hot_y === 0 ? \"url(\" + canvas.toDataURL() + \"), auto\" : \"url(\" + canvas.toDataURL() + \") \" + hot_x + \" \" + hot_y + \", auto\"; var urlBuf = _malloc(url.length + 1); stringToUTF8(url, urlBuf, url.length + 1); return urlBuf; },  \r\n 640989: ($0) => { if (Module['canvas']) { Module['canvas'].style['cursor'] = UTF8ToString($0); } },  \r\n 641072: () => { if (Module['canvas']) { Module['canvas'].style['cursor'] = 'none'; } },  \r\n 641141: () => { return window.innerWidth; },  \r\n 641171: () => { return window.innerHeight; },  \r\n 641202: ($0, $1) => { alert(UTF8ToString($0) + \"\\n\\n\" + UTF8ToString($1)); }\r\n};\r\n\r\n\r\n// end include: preamble.js\r\n\r\n  /** @constructor */\r\n  function ExitStatus(status) {\r\n      this.name = 'ExitStatus';\r\n      this.message = `Program terminated with exit(${status})`;\r\n      this.status = status;\r\n    }\r\n\r\n  var listenOnce = (object, event, func) => {\r\n      object.addEventListener(event, func, { 'once': true });\r\n    };\r\n  /** @param {Object=} elements */\r\n  var autoResumeAudioContext = (ctx, elements) => {\r\n      if (!elements) {\r\n        elements = [document, document.getElementById('canvas')];\r\n      }\r\n      ['keydown', 'mousedown', 'touchstart'].forEach((event) => {\r\n        elements.forEach((element) => {\r\n          if (element) {\r\n            listenOnce(element, event, () => {\r\n              if (ctx.state === 'suspended') ctx.resume();\r\n            });\r\n          }\r\n        });\r\n      });\r\n    };\r\n\r\n  var callRuntimeCallbacks = (callbacks) => {\r\n      while (callbacks.length > 0) {\r\n        // Pass the module as the first argument.\r\n        callbacks.shift()(Module);\r\n      }\r\n    };\r\n\r\n  var dynCallLegacy = (sig, ptr, args) => {\r\n      var f = Module['dynCall_' + sig];\r\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\r\n    };\r\n  \r\n  var wasmTableMirror = [];\r\n  \r\n  var wasmTable;\r\n  var getWasmTableEntry = (funcPtr) => {\r\n      var func = wasmTableMirror[funcPtr];\r\n      if (!func) {\r\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\r\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\r\n      }\r\n      return func;\r\n    };\r\n  /** @param {Object=} args */\r\n  var dynCall = (sig, ptr, args) => {\r\n      var rtn = dynCallLegacy(sig, ptr, args);\r\n      return rtn;\r\n    };\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {string} type\r\n     */\r\n  function getValue(ptr, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': return HEAP8[((ptr)>>0)];\r\n      case 'i8': return HEAP8[((ptr)>>0)];\r\n      case 'i16': return HEAP16[((ptr)>>1)];\r\n      case 'i32': return HEAP32[((ptr)>>2)];\r\n      case 'i64': abort('to do getValue(i64) use WASM_BIGINT');\r\n      case 'float': return HEAPF32[((ptr)>>2)];\r\n      case 'double': return HEAPF64[((ptr)>>3)];\r\n      case '*': return HEAPU32[((ptr)>>2)];\r\n      default: abort(`invalid type for getValue: ${type}`);\r\n    }\r\n  }\r\n\r\n  var noExitRuntime = Module['noExitRuntime'] || true;\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {number} value\r\n     * @param {string} type\r\n     */\r\n  function setValue(ptr, value, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\r\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\r\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\r\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\r\n      case 'i64': abort('to do setValue(i64) use WASM_BIGINT');\r\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\r\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\r\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\r\n      default: abort(`invalid type for setValue: ${type}`);\r\n    }\r\n  }\r\n\r\n  var PATH = {\r\n  isAbs:(path) => path.charAt(0) === '/',\r\n  splitPath:(filename) => {\r\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n        return splitPathRe.exec(filename).slice(1);\r\n      },\r\n  normalizeArray:(parts, allowAboveRoot) => {\r\n        // if the path tries to go above the root, `up` ends up > 0\r\n        var up = 0;\r\n        for (var i = parts.length - 1; i >= 0; i--) {\r\n          var last = parts[i];\r\n          if (last === '.') {\r\n            parts.splice(i, 1);\r\n          } else if (last === '..') {\r\n            parts.splice(i, 1);\r\n            up++;\r\n          } else if (up) {\r\n            parts.splice(i, 1);\r\n            up--;\r\n          }\r\n        }\r\n        // if the path is allowed to go above the root, restore leading ..s\r\n        if (allowAboveRoot) {\r\n          for (; up; up--) {\r\n            parts.unshift('..');\r\n          }\r\n        }\r\n        return parts;\r\n      },\r\n  normalize:(path) => {\r\n        var isAbsolute = PATH.isAbs(path),\r\n            trailingSlash = path.substr(-1) === '/';\r\n        // Normalize the path\r\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\r\n        if (!path && !isAbsolute) {\r\n          path = '.';\r\n        }\r\n        if (path && trailingSlash) {\r\n          path += '/';\r\n        }\r\n        return (isAbsolute ? '/' : '') + path;\r\n      },\r\n  dirname:(path) => {\r\n        var result = PATH.splitPath(path),\r\n            root = result[0],\r\n            dir = result[1];\r\n        if (!root && !dir) {\r\n          // No dirname whatsoever\r\n          return '.';\r\n        }\r\n        if (dir) {\r\n          // It has a dirname, strip trailing slash\r\n          dir = dir.substr(0, dir.length - 1);\r\n        }\r\n        return root + dir;\r\n      },\r\n  basename:(path) => {\r\n        // EMSCRIPTEN return '/'' for '/', not an empty string\r\n        if (path === '/') return '/';\r\n        path = PATH.normalize(path);\r\n        path = path.replace(/\\/$/, \"\");\r\n        var lastSlash = path.lastIndexOf('/');\r\n        if (lastSlash === -1) return path;\r\n        return path.substr(lastSlash+1);\r\n      },\r\n  join:function() {\r\n        var paths = Array.prototype.slice.call(arguments);\r\n        return PATH.normalize(paths.join('/'));\r\n      },\r\n  join2:(l, r) => PATH.normalize(l + '/' + r),\r\n  };\r\n  \r\n  var initRandomFill = () => {\r\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\r\n        // for modern web browsers\r\n        return (view) => crypto.getRandomValues(view);\r\n      } else\r\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\r\n      abort(\"initRandomDevice\");\r\n    };\r\n  var randomFill = (view) => {\r\n      // Lazily init on the first invocation.\r\n      return (randomFill = initRandomFill())(view);\r\n    };\r\n  \r\n  \r\n  \r\n  var PATH_FS = {\r\n  resolve:function() {\r\n        var resolvedPath = '',\r\n          resolvedAbsolute = false;\r\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\r\n          // Skip empty and invalid entries\r\n          if (typeof path != 'string') {\r\n            throw new TypeError('Arguments to path.resolve must be strings');\r\n          } else if (!path) {\r\n            return ''; // an invalid portion invalidates the whole thing\r\n          }\r\n          resolvedPath = path + '/' + resolvedPath;\r\n          resolvedAbsolute = PATH.isAbs(path);\r\n        }\r\n        // At this point the path should be resolved to a full absolute path, but\r\n        // handle relative paths to be safe (might happen when process.cwd() fails)\r\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\r\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n      },\r\n  relative:(from, to) => {\r\n        from = PATH_FS.resolve(from).substr(1);\r\n        to = PATH_FS.resolve(to).substr(1);\r\n        function trim(arr) {\r\n          var start = 0;\r\n          for (; start < arr.length; start++) {\r\n            if (arr[start] !== '') break;\r\n          }\r\n          var end = arr.length - 1;\r\n          for (; end >= 0; end--) {\r\n            if (arr[end] !== '') break;\r\n          }\r\n          if (start > end) return [];\r\n          return arr.slice(start, end - start + 1);\r\n        }\r\n        var fromParts = trim(from.split('/'));\r\n        var toParts = trim(to.split('/'));\r\n        var length = Math.min(fromParts.length, toParts.length);\r\n        var samePartsLength = length;\r\n        for (var i = 0; i < length; i++) {\r\n          if (fromParts[i] !== toParts[i]) {\r\n            samePartsLength = i;\r\n            break;\r\n          }\r\n        }\r\n        var outputParts = [];\r\n        for (var i = samePartsLength; i < fromParts.length; i++) {\r\n          outputParts.push('..');\r\n        }\r\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n        return outputParts.join('/');\r\n      },\r\n  };\r\n  \r\n  \r\n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\r\n  \r\n    /**\r\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\r\n     * array that contains uint8 values, returns a copy of that string as a\r\n     * Javascript String object.\r\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\r\n     * @param {number} idx\r\n     * @param {number=} maxBytesToRead\r\n     * @return {string}\r\n     */\r\n  var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {\r\n      var endIdx = idx + maxBytesToRead;\r\n      var endPtr = idx;\r\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\r\n      // null terminator by itself.  Also, use the length info to avoid running tiny\r\n      // strings through TextDecoder, since .subarray() allocates garbage.\r\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\r\n      // so that undefined means Infinity)\r\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n  \r\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\r\n      }\r\n      var str = '';\r\n      // If building with TextDecoder, we have already computed the string length\r\n      // above, so test loop end condition against that\r\n      while (idx < endPtr) {\r\n        // For UTF8 byte structure, see:\r\n        // http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // https://www.ietf.org/rfc/rfc2279.txt\r\n        // https://tools.ietf.org/html/rfc3629\r\n        var u0 = heapOrArray[idx++];\r\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\r\n        var u1 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\r\n        var u2 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xF0) == 0xE0) {\r\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n        } else {\r\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\r\n        }\r\n  \r\n        if (u0 < 0x10000) {\r\n          str += String.fromCharCode(u0);\r\n        } else {\r\n          var ch = u0 - 0x10000;\r\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n        }\r\n      }\r\n      return str;\r\n    };\r\n  \r\n  var FS_stdin_getChar_buffer = [];\r\n  \r\n  var lengthBytesUTF8 = (str) => {\r\n      var len = 0;\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        var c = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (c <= 0x7F) {\r\n          len++;\r\n        } else if (c <= 0x7FF) {\r\n          len += 2;\r\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\r\n          len += 4; ++i;\r\n        } else {\r\n          len += 3;\r\n        }\r\n      }\r\n      return len;\r\n    };\r\n  \r\n  var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\r\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\r\n      // undefined and false each don't write out any bytes.\r\n      if (!(maxBytesToWrite > 0))\r\n        return 0;\r\n  \r\n      var startIdx = outIdx;\r\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // and https://www.ietf.org/rfc/rfc2279.txt\r\n        // and https://tools.ietf.org/html/rfc3629\r\n        var u = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (u >= 0xD800 && u <= 0xDFFF) {\r\n          var u1 = str.charCodeAt(++i);\r\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\r\n        }\r\n        if (u <= 0x7F) {\r\n          if (outIdx >= endIdx) break;\r\n          heap[outIdx++] = u;\r\n        } else if (u <= 0x7FF) {\r\n          if (outIdx + 1 >= endIdx) break;\r\n          heap[outIdx++] = 0xC0 | (u >> 6);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else if (u <= 0xFFFF) {\r\n          if (outIdx + 2 >= endIdx) break;\r\n          heap[outIdx++] = 0xE0 | (u >> 12);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else {\r\n          if (outIdx + 3 >= endIdx) break;\r\n          heap[outIdx++] = 0xF0 | (u >> 18);\r\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        }\r\n      }\r\n      // Null-terminate the pointer to the buffer.\r\n      heap[outIdx] = 0;\r\n      return outIdx - startIdx;\r\n    };\r\n  /** @type {function(string, boolean=, number=)} */\r\n  function intArrayFromString(stringy, dontAddNull, length) {\r\n    var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\r\n    var u8array = new Array(len);\r\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n    if (dontAddNull) u8array.length = numBytesWritten;\r\n    return u8array;\r\n  }\r\n  var FS_stdin_getChar = () => {\r\n      if (!FS_stdin_getChar_buffer.length) {\r\n        var result = null;\r\n        if (typeof window != 'undefined' &&\r\n          typeof window.prompt == 'function') {\r\n          // Browser.\r\n          result = window.prompt('Input: ');  // returns null on cancel\r\n          if (result !== null) {\r\n            result += '\\n';\r\n          }\r\n        } else if (typeof readline == 'function') {\r\n          // Command line.\r\n          result = readline();\r\n          if (result !== null) {\r\n            result += '\\n';\r\n          }\r\n        }\r\n        if (!result) {\r\n          return null;\r\n        }\r\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\r\n      }\r\n      return FS_stdin_getChar_buffer.shift();\r\n    };\r\n  var TTY = {\r\n  ttys:[],\r\n  init() {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\r\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\r\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\r\n        //   // with text files until FS.init can be refactored.\r\n        //   process.stdin.setEncoding('utf8');\r\n        // }\r\n      },\r\n  shutdown() {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\r\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\r\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\r\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\r\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\r\n        //   process.stdin.pause();\r\n        // }\r\n      },\r\n  register(dev, ops) {\r\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\r\n        FS.registerDevice(dev, TTY.stream_ops);\r\n      },\r\n  stream_ops:{\r\n  open(stream) {\r\n          var tty = TTY.ttys[stream.node.rdev];\r\n          if (!tty) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          stream.tty = tty;\r\n          stream.seekable = false;\r\n        },\r\n  close(stream) {\r\n          // flush any pending line data\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },\r\n  fsync(stream) {\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },\r\n  read(stream, buffer, offset, length, pos /* ignored */) {\r\n          if (!stream.tty || !stream.tty.ops.get_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          var bytesRead = 0;\r\n          for (var i = 0; i < length; i++) {\r\n            var result;\r\n            try {\r\n              result = stream.tty.ops.get_char(stream.tty);\r\n            } catch (e) {\r\n              throw new FS.ErrnoError(29);\r\n            }\r\n            if (result === undefined && bytesRead === 0) {\r\n              throw new FS.ErrnoError(6);\r\n            }\r\n            if (result === null || result === undefined) break;\r\n            bytesRead++;\r\n            buffer[offset+i] = result;\r\n          }\r\n          if (bytesRead) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return bytesRead;\r\n        },\r\n  write(stream, buffer, offset, length, pos) {\r\n          if (!stream.tty || !stream.tty.ops.put_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          try {\r\n            for (var i = 0; i < length; i++) {\r\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\r\n            }\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n          if (length) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return i;\r\n        },\r\n  },\r\n  default_tty_ops:{\r\n  get_char(tty) {\r\n          return FS_stdin_getChar();\r\n        },\r\n  put_char(tty, val) {\r\n          if (val === null || val === 10) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\r\n          }\r\n        },\r\n  fsync(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        },\r\n  ioctl_tcgets(tty) {\r\n          // typical setting\r\n          return {\r\n            c_iflag: 25856,\r\n            c_oflag: 5,\r\n            c_cflag: 191,\r\n            c_lflag: 35387,\r\n            c_cc: [\r\n              0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a, 0x00,\r\n              0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            ]\r\n          };\r\n        },\r\n  ioctl_tcsets(tty, optional_actions, data) {\r\n          // currently just ignore\r\n          return 0;\r\n        },\r\n  ioctl_tiocgwinsz(tty) {\r\n          return [24, 80];\r\n        },\r\n  },\r\n  default_tty1_ops:{\r\n  put_char(tty, val) {\r\n          if (val === null || val === 10) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val);\r\n          }\r\n        },\r\n  fsync(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        },\r\n  },\r\n  };\r\n  \r\n  \r\n  var zeroMemory = (address, size) => {\r\n      HEAPU8.fill(0, address, address + size);\r\n      return address;\r\n    };\r\n  \r\n  var alignMemory = (size, alignment) => {\r\n      return Math.ceil(size / alignment) * alignment;\r\n    };\r\n  var mmapAlloc = (size) => {\r\n      abort();\r\n    };\r\n  var MEMFS = {\r\n  ops_table:null,\r\n  mount(mount) {\r\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\r\n      },\r\n  createNode(parent, name, mode, dev) {\r\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n          // no supported\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        MEMFS.ops_table ||= {\r\n          dir: {\r\n            node: {\r\n              getattr: MEMFS.node_ops.getattr,\r\n              setattr: MEMFS.node_ops.setattr,\r\n              lookup: MEMFS.node_ops.lookup,\r\n              mknod: MEMFS.node_ops.mknod,\r\n              rename: MEMFS.node_ops.rename,\r\n              unlink: MEMFS.node_ops.unlink,\r\n              rmdir: MEMFS.node_ops.rmdir,\r\n              readdir: MEMFS.node_ops.readdir,\r\n              symlink: MEMFS.node_ops.symlink\r\n            },\r\n            stream: {\r\n              llseek: MEMFS.stream_ops.llseek\r\n            }\r\n          },\r\n          file: {\r\n            node: {\r\n              getattr: MEMFS.node_ops.getattr,\r\n              setattr: MEMFS.node_ops.setattr\r\n            },\r\n            stream: {\r\n              llseek: MEMFS.stream_ops.llseek,\r\n              read: MEMFS.stream_ops.read,\r\n              write: MEMFS.stream_ops.write,\r\n              allocate: MEMFS.stream_ops.allocate,\r\n              mmap: MEMFS.stream_ops.mmap,\r\n              msync: MEMFS.stream_ops.msync\r\n            }\r\n          },\r\n          link: {\r\n            node: {\r\n              getattr: MEMFS.node_ops.getattr,\r\n              setattr: MEMFS.node_ops.setattr,\r\n              readlink: MEMFS.node_ops.readlink\r\n            },\r\n            stream: {}\r\n          },\r\n          chrdev: {\r\n            node: {\r\n              getattr: MEMFS.node_ops.getattr,\r\n              setattr: MEMFS.node_ops.setattr\r\n            },\r\n            stream: FS.chrdev_stream_ops\r\n          }\r\n        };\r\n        var node = FS.createNode(parent, name, mode, dev);\r\n        if (FS.isDir(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.dir.node;\r\n          node.stream_ops = MEMFS.ops_table.dir.stream;\r\n          node.contents = {};\r\n        } else if (FS.isFile(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.file.node;\r\n          node.stream_ops = MEMFS.ops_table.file.stream;\r\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\r\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\r\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\r\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\r\n          node.contents = null; \r\n        } else if (FS.isLink(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.link.node;\r\n          node.stream_ops = MEMFS.ops_table.link.stream;\r\n        } else if (FS.isChrdev(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.chrdev.node;\r\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\r\n        }\r\n        node.timestamp = Date.now();\r\n        // add the new node to the parent\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n          parent.timestamp = node.timestamp;\r\n        }\r\n        return node;\r\n      },\r\n  getFileDataAsTypedArray(node) {\r\n        if (!node.contents) return new Uint8Array(0);\r\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\r\n        return new Uint8Array(node.contents);\r\n      },\r\n  expandFileStorage(node, newCapacity) {\r\n        var prevCapacity = node.contents ? node.contents.length : 0;\r\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\r\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\r\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\r\n        // avoid overshooting the allocation cap by a very large margin.\r\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\r\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\r\n        var oldContents = node.contents;\r\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\r\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\r\n      },\r\n  resizeFileStorage(node, newSize) {\r\n        if (node.usedBytes == newSize) return;\r\n        if (newSize == 0) {\r\n          node.contents = null; // Fully decommit when requesting a resize to zero.\r\n          node.usedBytes = 0;\r\n        } else {\r\n          var oldContents = node.contents;\r\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\r\n          if (oldContents) {\r\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\r\n          }\r\n          node.usedBytes = newSize;\r\n        }\r\n      },\r\n  node_ops:{\r\n  getattr(node) {\r\n          var attr = {};\r\n          // device numbers reuse inode numbers.\r\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n          attr.ino = node.id;\r\n          attr.mode = node.mode;\r\n          attr.nlink = 1;\r\n          attr.uid = 0;\r\n          attr.gid = 0;\r\n          attr.rdev = node.rdev;\r\n          if (FS.isDir(node.mode)) {\r\n            attr.size = 4096;\r\n          } else if (FS.isFile(node.mode)) {\r\n            attr.size = node.usedBytes;\r\n          } else if (FS.isLink(node.mode)) {\r\n            attr.size = node.link.length;\r\n          } else {\r\n            attr.size = 0;\r\n          }\r\n          attr.atime = new Date(node.timestamp);\r\n          attr.mtime = new Date(node.timestamp);\r\n          attr.ctime = new Date(node.timestamp);\r\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\r\n          //       but this is not required by the standard.\r\n          attr.blksize = 4096;\r\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n          return attr;\r\n        },\r\n  setattr(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n          if (attr.size !== undefined) {\r\n            MEMFS.resizeFileStorage(node, attr.size);\r\n          }\r\n        },\r\n  lookup(parent, name) {\r\n          throw FS.genericErrors[44];\r\n        },\r\n  mknod(parent, name, mode, dev) {\r\n          return MEMFS.createNode(parent, name, mode, dev);\r\n        },\r\n  rename(old_node, new_dir, new_name) {\r\n          // if we're overwriting a directory at new_name, make sure it's empty.\r\n          if (FS.isDir(old_node.mode)) {\r\n            var new_node;\r\n            try {\r\n              new_node = FS.lookupNode(new_dir, new_name);\r\n            } catch (e) {\r\n            }\r\n            if (new_node) {\r\n              for (var i in new_node.contents) {\r\n                throw new FS.ErrnoError(55);\r\n              }\r\n            }\r\n          }\r\n          // do the internal rewiring\r\n          delete old_node.parent.contents[old_node.name];\r\n          old_node.parent.timestamp = Date.now()\r\n          old_node.name = new_name;\r\n          new_dir.contents[new_name] = old_node;\r\n          new_dir.timestamp = old_node.parent.timestamp;\r\n          old_node.parent = new_dir;\r\n        },\r\n  unlink(parent, name) {\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },\r\n  rmdir(parent, name) {\r\n          var node = FS.lookupNode(parent, name);\r\n          for (var i in node.contents) {\r\n            throw new FS.ErrnoError(55);\r\n          }\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },\r\n  readdir(node) {\r\n          var entries = ['.', '..'];\r\n          for (var key of Object.keys(node.contents)) {\r\n            entries.push(key);\r\n          }\r\n          return entries;\r\n        },\r\n  symlink(parent, newname, oldpath) {\r\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\r\n          node.link = oldpath;\r\n          return node;\r\n        },\r\n  readlink(node) {\r\n          if (!FS.isLink(node.mode)) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return node.link;\r\n        },\r\n  },\r\n  stream_ops:{\r\n  read(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= stream.node.usedBytes) return 0;\r\n          var size = Math.min(stream.node.usedBytes - position, length);\r\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\r\n            buffer.set(contents.subarray(position, position + size), offset);\r\n          } else {\r\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\r\n          }\r\n          return size;\r\n        },\r\n  write(stream, buffer, offset, length, position, canOwn) {\r\n          // If the buffer is located in main memory (HEAP), and if\r\n          // memory can grow, we can't hold on to references of the\r\n          // memory buffer, as they may get invalidated. That means we\r\n          // need to do copy its contents.\r\n          if (buffer.buffer === HEAP8.buffer) {\r\n            canOwn = false;\r\n          }\r\n  \r\n          if (!length) return 0;\r\n          var node = stream.node;\r\n          node.timestamp = Date.now();\r\n  \r\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\r\n            if (canOwn) {\r\n              node.contents = buffer.subarray(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\r\n              node.contents = buffer.slice(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\r\n              node.contents.set(buffer.subarray(offset, offset + length), position);\r\n              return length;\r\n            }\r\n          }\r\n  \r\n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\r\n          MEMFS.expandFileStorage(node, position+length);\r\n          if (node.contents.subarray && buffer.subarray) {\r\n            // Use typed array write which is available.\r\n            node.contents.set(buffer.subarray(offset, offset + length), position);\r\n          } else {\r\n            for (var i = 0; i < length; i++) {\r\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\r\n            }\r\n          }\r\n          node.usedBytes = Math.max(node.usedBytes, position + length);\r\n          return length;\r\n        },\r\n  llseek(stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.usedBytes;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        },\r\n  allocate(stream, offset, length) {\r\n          MEMFS.expandFileStorage(stream.node, offset + length);\r\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\r\n        },\r\n  mmap(stream, length, position, prot, flags) {\r\n          if (!FS.isFile(stream.node.mode)) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          var ptr;\r\n          var allocated;\r\n          var contents = stream.node.contents;\r\n          // Only make a new copy when MAP_PRIVATE is specified.\r\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\r\n            // We can't emulate MAP_SHARED when the file is not backed by the\r\n            // buffer we're mapping to (e.g. the HEAP buffer).\r\n            allocated = false;\r\n            ptr = contents.byteOffset;\r\n          } else {\r\n            // Try to avoid unnecessary slices.\r\n            if (position > 0 || position + length < contents.length) {\r\n              if (contents.subarray) {\r\n                contents = contents.subarray(position, position + length);\r\n              } else {\r\n                contents = Array.prototype.slice.call(contents, position, position + length);\r\n              }\r\n            }\r\n            allocated = true;\r\n            ptr = mmapAlloc(length);\r\n            if (!ptr) {\r\n              throw new FS.ErrnoError(48);\r\n            }\r\n            HEAP8.set(contents, ptr);\r\n          }\r\n          return { ptr, allocated };\r\n        },\r\n  msync(stream, buffer, offset, length, mmapFlags) {\r\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n          // should we check if bytesWritten and length are the same?\r\n          return 0;\r\n        },\r\n  },\r\n  };\r\n  \r\n  /** @param {boolean=} noRunDep */\r\n  var asyncLoad = (url, onload, onerror, noRunDep) => {\r\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : '';\r\n      readAsync(url, (arrayBuffer) => {\r\n        assert(arrayBuffer, `Loading data file \"${url}\" failed (no arrayBuffer).`);\r\n        onload(new Uint8Array(arrayBuffer));\r\n        if (dep) removeRunDependency(dep);\r\n      }, (event) => {\r\n        if (onerror) {\r\n          onerror();\r\n        } else {\r\n          throw `Loading data file \"${url}\" failed.`;\r\n        }\r\n      });\r\n      if (dep) addRunDependency(dep);\r\n    };\r\n  \r\n  \r\n  var FS_createDataFile = (parent, name, fileData, canRead, canWrite, canOwn) => {\r\n      FS.createDataFile(parent, name, fileData, canRead, canWrite, canOwn);\r\n    };\r\n  \r\n  var preloadPlugins = Module['preloadPlugins'] || [];\r\n  var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\r\n      // Ensure plugins are ready.\r\n      if (typeof Browser != 'undefined') Browser.init();\r\n  \r\n      var handled = false;\r\n      preloadPlugins.forEach((plugin) => {\r\n        if (handled) return;\r\n        if (plugin['canHandle'](fullname)) {\r\n          plugin['handle'](byteArray, fullname, finish, onerror);\r\n          handled = true;\r\n        }\r\n      });\r\n      return handled;\r\n    };\r\n  var FS_createPreloadedFile = (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\r\n      // TODO we should allow people to just pass in a complete filename instead\r\n      // of parent and name being that we just join them anyways\r\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\r\n      var dep = getUniqueRunDependency(`cp ${fullname}`); // might have several active requests for the same fullname\r\n      function processData(byteArray) {\r\n        function finish(byteArray) {\r\n          preFinish?.();\r\n          if (!dontCreateFile) {\r\n            FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\r\n          }\r\n          onload?.();\r\n          removeRunDependency(dep);\r\n        }\r\n        if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\r\n          onerror?.();\r\n          removeRunDependency(dep);\r\n        })) {\r\n          return;\r\n        }\r\n        finish(byteArray);\r\n      }\r\n      addRunDependency(dep);\r\n      if (typeof url == 'string') {\r\n        asyncLoad(url, (byteArray) => processData(byteArray), onerror);\r\n      } else {\r\n        processData(url);\r\n      }\r\n    };\r\n  \r\n  var FS_modeStringToFlags = (str) => {\r\n      var flagModes = {\r\n        'r': 0,\r\n        'r+': 2,\r\n        'w': 512 | 64 | 1,\r\n        'w+': 512 | 64 | 2,\r\n        'a': 1024 | 64 | 1,\r\n        'a+': 1024 | 64 | 2,\r\n      };\r\n      var flags = flagModes[str];\r\n      if (typeof flags == 'undefined') {\r\n        throw new Error(`Unknown file open mode: ${str}`);\r\n      }\r\n      return flags;\r\n    };\r\n  \r\n  var FS_getMode = (canRead, canWrite) => {\r\n      var mode = 0;\r\n      if (canRead) mode |= 292 | 73;\r\n      if (canWrite) mode |= 146;\r\n      return mode;\r\n    };\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  var IDBFS = {\r\n  dbs:{\r\n  },\r\n  indexedDB:() => {\r\n        if (typeof indexedDB != 'undefined') return indexedDB;\r\n        var ret = null;\r\n        if (typeof window == 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        assert(ret, 'IDBFS used, but indexedDB not supported');\r\n        return ret;\r\n      },\r\n  DB_VERSION:21,\r\n  DB_STORE_NAME:\"FILE_DATA\",\r\n  mount:function(mount) {\r\n        // reuse all of the core MEMFS functionality\r\n        return MEMFS.mount.apply(null, arguments);\r\n      },\r\n  syncfs:(mount, populate, callback) => {\r\n        IDBFS.getLocalSet(mount, (err, local) => {\r\n          if (err) return callback(err);\r\n  \r\n          IDBFS.getRemoteSet(mount, (err, remote) => {\r\n            if (err) return callback(err);\r\n  \r\n            var src = populate ? remote : local;\r\n            var dst = populate ? local : remote;\r\n  \r\n            IDBFS.reconcile(src, dst, callback);\r\n          });\r\n        });\r\n      },\r\n  quit:() => {\r\n        Object.values(IDBFS.dbs).forEach((value) => value.close());\r\n        IDBFS.dbs = {};\r\n      },\r\n  getDB:(name, callback) => {\r\n        // check the cache first\r\n        var db = IDBFS.dbs[name];\r\n        if (db) {\r\n          return callback(null, db);\r\n        }\r\n  \r\n        var req;\r\n        try {\r\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n        if (!req) {\r\n          return callback(\"Unable to connect to IndexedDB\");\r\n        }\r\n        req.onupgradeneeded = (e) => {\r\n          var db = /** @type {IDBDatabase} */ (e.target.result);\r\n          var transaction = e.target.transaction;\r\n  \r\n          var fileStore;\r\n  \r\n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\r\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n          } else {\r\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\r\n          }\r\n  \r\n          if (!fileStore.indexNames.contains('timestamp')) {\r\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\r\n          }\r\n        };\r\n        req.onsuccess = () => {\r\n          db = /** @type {IDBDatabase} */ (req.result);\r\n  \r\n          // add to the cache\r\n          IDBFS.dbs[name] = db;\r\n          callback(null, db);\r\n        };\r\n        req.onerror = (e) => {\r\n          callback(e.target.error);\r\n          e.preventDefault();\r\n        };\r\n      },\r\n  getLocalSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        function isRealDir(p) {\r\n          return p !== '.' && p !== '..';\r\n        };\r\n        function toAbsolute(root) {\r\n          return (p) => PATH.join2(root, p);\r\n        };\r\n  \r\n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\r\n  \r\n        while (check.length) {\r\n          var path = check.pop();\r\n          var stat;\r\n  \r\n          try {\r\n            stat = FS.stat(path);\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\r\n          }\r\n  \r\n          entries[path] = { 'timestamp': stat.mtime };\r\n        }\r\n  \r\n        return callback(null, { type: 'local', entries: entries });\r\n      },\r\n  getRemoteSet:(mount, callback) => {\r\n        var entries = {};\r\n  \r\n        IDBFS.getDB(mount.mountpoint, (err, db) => {\r\n          if (err) return callback(err);\r\n  \r\n          try {\r\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\r\n            transaction.onerror = (e) => {\r\n              callback(e.target.error);\r\n              e.preventDefault();\r\n            };\r\n  \r\n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n            var index = store.index('timestamp');\r\n  \r\n            index.openKeyCursor().onsuccess = (event) => {\r\n              var cursor = event.target.result;\r\n  \r\n              if (!cursor) {\r\n                return callback(null, { type: 'remote', db, entries });\r\n              }\r\n  \r\n              entries[cursor.primaryKey] = { 'timestamp': cursor.key };\r\n  \r\n              cursor.continue();\r\n            };\r\n          } catch (e) {\r\n            return callback(e);\r\n          }\r\n        });\r\n      },\r\n  loadLocalEntry:(path, callback) => {\r\n        var stat, node;\r\n  \r\n        try {\r\n          var lookup = FS.lookupPath(path);\r\n          node = lookup.node;\r\n          stat = FS.stat(path);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        if (FS.isDir(stat.mode)) {\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode });\r\n        } else if (FS.isFile(stat.mode)) {\r\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\r\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\r\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\r\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode, 'contents': node.contents });\r\n        } else {\r\n          return callback(new Error('node type not supported'));\r\n        }\r\n      },\r\n  storeLocalEntry:(path, entry, callback) => {\r\n        try {\r\n          if (FS.isDir(entry['mode'])) {\r\n            FS.mkdirTree(path, entry['mode']);\r\n          } else if (FS.isFile(entry['mode'])) {\r\n            FS.writeFile(path, entry['contents'], { canOwn: true });\r\n          } else {\r\n            return callback(new Error('node type not supported'));\r\n          }\r\n  \r\n          FS.chmod(path, entry['mode']);\r\n          FS.utime(path, entry['timestamp'], entry['timestamp']);\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },\r\n  removeLocalEntry:(path, callback) => {\r\n        try {\r\n          var stat = FS.stat(path);\r\n  \r\n          if (FS.isDir(stat.mode)) {\r\n            FS.rmdir(path);\r\n          } else if (FS.isFile(stat.mode)) {\r\n            FS.unlink(path);\r\n          }\r\n        } catch (e) {\r\n          return callback(e);\r\n        }\r\n  \r\n        callback(null);\r\n      },\r\n  loadRemoteEntry:(store, path, callback) => {\r\n        var req = store.get(path);\r\n        req.onsuccess = (event) => callback(null, event.target.result);\r\n        req.onerror = (e) => {\r\n          callback(e.target.error);\r\n          e.preventDefault();\r\n        };\r\n      },\r\n  storeRemoteEntry:(store, path, entry, callback) => {\r\n        try {\r\n          var req = store.put(entry, path);\r\n        } catch (e) {\r\n          callback(e);\r\n          return;\r\n        }\r\n        req.onsuccess = (event) => callback();\r\n        req.onerror = (e) => {\r\n          callback(e.target.error);\r\n          e.preventDefault();\r\n        };\r\n      },\r\n  removeRemoteEntry:(store, path, callback) => {\r\n        var req = store.delete(path);\r\n        req.onsuccess = (event) => callback();\r\n        req.onerror = (e) => {\r\n          callback(e.target.error);\r\n          e.preventDefault();\r\n        };\r\n      },\r\n  reconcile:(src, dst, callback) => {\r\n        var total = 0;\r\n  \r\n        var create = [];\r\n        Object.keys(src.entries).forEach(function (key) {\r\n          var e = src.entries[key];\r\n          var e2 = dst.entries[key];\r\n          if (!e2 || e['timestamp'].getTime() != e2['timestamp'].getTime()) {\r\n            create.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        var remove = [];\r\n        Object.keys(dst.entries).forEach(function (key) {\r\n          if (!src.entries[key]) {\r\n            remove.push(key);\r\n            total++;\r\n          }\r\n        });\r\n  \r\n        if (!total) {\r\n          return callback(null);\r\n        }\r\n  \r\n        var errored = false;\r\n        var db = src.type === 'remote' ? src.db : dst.db;\r\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\r\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\r\n  \r\n        function done(err) {\r\n          if (err && !errored) {\r\n            errored = true;\r\n            return callback(err);\r\n          }\r\n        };\r\n  \r\n        transaction.onerror = (e) => {\r\n          done(this.error);\r\n          e.preventDefault();\r\n        };\r\n  \r\n        transaction.oncomplete = (e) => {\r\n          if (!errored) {\r\n            callback(null);\r\n          }\r\n        };\r\n  \r\n        // sort paths in ascending order so directory entries are created\r\n        // before the files inside them\r\n        create.sort().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.loadRemoteEntry(store, path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeLocalEntry(path, entry, done);\r\n            });\r\n          } else {\r\n            IDBFS.loadLocalEntry(path, (err, entry) => {\r\n              if (err) return done(err);\r\n              IDBFS.storeRemoteEntry(store, path, entry, done);\r\n            });\r\n          }\r\n        });\r\n  \r\n        // sort paths in descending order so files are deleted before their\r\n        // parent directories\r\n        remove.sort().reverse().forEach((path) => {\r\n          if (dst.type === 'local') {\r\n            IDBFS.removeLocalEntry(path, done);\r\n          } else {\r\n            IDBFS.removeRemoteEntry(store, path, done);\r\n          }\r\n        });\r\n      },\r\n  };\r\n  \r\n  \r\n  var LZ4 = {\r\n  DIR_MODE:16895,\r\n  FILE_MODE:33279,\r\n  CHUNK_SIZE:-1,\r\n  codec:null,\r\n  init() {\r\n        if (LZ4.codec) return;\r\n        LZ4.codec = (function() {\r\n          /*\r\n  MiniLZ4: Minimal LZ4 block decoding and encoding.\r\n  \r\n  based off of node-lz4, https://github.com/pierrec/node-lz4\r\n  \r\n  ====\r\n  Copyright (c) 2012 Pierre Curto\r\n  \r\n  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  of this software and associated documentation files (the \"Software\"), to deal\r\n  in the Software without restriction, including without limitation the rights\r\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n  copies of the Software, and to permit persons to whom the Software is\r\n  furnished to do so, subject to the following conditions:\r\n  \r\n  The above copyright notice and this permission notice shall be included in\r\n  all copies or substantial portions of the Software.\r\n  \r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n  THE SOFTWARE.\r\n  ====\r\n  \r\n  changes have the same license\r\n  */\r\n  \r\n  var MiniLZ4 = (function() {\r\n  \r\n  var exports = {};\r\n  \r\n  /**\r\n   * Decode a block. Assumptions: input contains all sequences of a \r\n   * chunk, output is large enough to receive the decoded data.\r\n   * If the output buffer is too small, an error will be thrown.\r\n   * If the returned value is negative, an error occured at the returned offset.\r\n   *\r\n   * @param {ArrayBufferView} input input data\r\n   * @param {ArrayBufferView} output output data\r\n   * @param {number=} sIdx\r\n   * @param {number=} eIdx\r\n   * @return {number} number of decoded bytes\r\n   * @private\r\n   */\r\n  exports.uncompress = function (input, output, sIdx, eIdx) {\r\n  \tsIdx = sIdx || 0\r\n  \teIdx = eIdx || (input.length - sIdx)\r\n  \t// Process each sequence in the incoming data\r\n  \tfor (var i = sIdx, n = eIdx, j = 0; i < n;) {\r\n  \t\tvar token = input[i++]\r\n  \r\n  \t\t// Literals\r\n  \t\tvar literals_length = (token >> 4)\r\n  \t\tif (literals_length > 0) {\r\n  \t\t\t// length of literals\r\n  \t\t\tvar l = literals_length + 240\r\n  \t\t\twhile (l === 255) {\r\n  \t\t\t\tl = input[i++]\r\n  \t\t\t\tliterals_length += l\r\n  \t\t\t}\r\n  \r\n  \t\t\t// Copy the literals\r\n  \t\t\tvar end = i + literals_length\r\n  \t\t\twhile (i < end) output[j++] = input[i++]\r\n  \r\n  \t\t\t// End of buffer?\r\n  \t\t\tif (i === n) return j\r\n  \t\t}\r\n  \r\n  \t\t// Match copy\r\n  \t\t// 2 bytes offset (little endian)\r\n  \t\tvar offset = input[i++] | (input[i++] << 8)\r\n  \r\n  \t\t// XXX 0 is an invalid offset value\r\n  \t\tif (offset === 0) return j\r\n  \t\tif (offset > j) return -(i-2)\r\n  \r\n  \t\t// length of match copy\r\n  \t\tvar match_length = (token & 0xf)\r\n  \t\tvar l = match_length + 240\r\n  \t\twhile (l === 255) {\r\n  \t\t\tl = input[i++]\r\n  \t\t\tmatch_length += l\r\n  \t\t}\r\n  \r\n  \t\t// Copy the match\r\n  \t\tvar pos = j - offset // position of the match copy in the current output\r\n  \t\tvar end = j + match_length + 4 // minmatch = 4\r\n  \t\twhile (j < end) output[j++] = output[pos++]\r\n  \t}\r\n  \r\n  \treturn j\r\n  }\r\n  \r\n  var\r\n  \tmaxInputSize\t= 0x7E000000\r\n  ,\tminMatch\t\t= 4\r\n  // uint32() optimization\r\n  ,\thashLog\t\t\t= 16\r\n  ,\thashShift\t\t= (minMatch * 8) - hashLog\r\n  ,\thashSize\t\t= 1 << hashLog\r\n  \r\n  ,\tcopyLength\t\t= 8\r\n  ,\tlastLiterals\t= 5\r\n  ,\tmfLimit\t\t\t= copyLength + minMatch\r\n  ,\tskipStrength\t= 6\r\n  \r\n  ,\tmlBits  \t\t= 4\r\n  ,\tmlMask  \t\t= (1 << mlBits) - 1\r\n  ,\trunBits \t\t= 8 - mlBits\r\n  ,\trunMask \t\t= (1 << runBits) - 1\r\n  \r\n  ,\thasher \t\t\t= /* XXX uint32( */ 2654435761 /* ) */\r\n  \r\n  assert(hashShift === 16);\r\n  var hashTable = new Int16Array(1<<16);\r\n  var empty = new Int16Array(hashTable.length);\r\n  \r\n  // CompressBound returns the maximum length of a lz4 block, given it's uncompressed length\r\n  exports.compressBound = function (isize) {\r\n  \treturn isize > maxInputSize\r\n  \t\t? 0\r\n  \t\t: (isize + (isize/255) + 16) | 0\r\n  }\r\n  \r\n  /** @param {number=} sIdx\r\n  \t@param {number=} eIdx */\r\n  exports.compress = function (src, dst, sIdx, eIdx) {\r\n  \thashTable.set(empty);\r\n  \treturn compressBlock(src, dst, 0, sIdx || 0, eIdx || dst.length)\r\n  }\r\n  \r\n  function compressBlock (src, dst, pos, sIdx, eIdx) {\r\n  \t// XXX var Hash = uint32() // Reusable unsigned 32 bits integer\r\n  \tvar dpos = sIdx\r\n  \tvar dlen = eIdx - sIdx\r\n  \tvar anchor = 0\r\n  \r\n  \tif (src.length >= maxInputSize) throw new Error(\"input too large\")\r\n  \r\n  \t// Minimum of input bytes for compression (LZ4 specs)\r\n  \tif (src.length > mfLimit) {\r\n  \t\tvar n = exports.compressBound(src.length)\r\n  \t\tif ( dlen < n ) throw Error(\"output too small: \" + dlen + \" < \" + n)\r\n  \r\n  \t\tvar \r\n  \t\t\tstep  = 1\r\n  \t\t,\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \t\t// Keep last few bytes incompressible (LZ4 specs):\r\n  \t\t// last 5 bytes must be literals\r\n  \t\t,\tsrcLength = src.length - mfLimit\r\n  \r\n  \t\twhile (pos + minMatch < srcLength) {\r\n  \t\t\t// Find a match\r\n  \t\t\t// min match of 4 bytes aka sequence\r\n  \t\t\tvar sequenceLowBits = src[pos+1]<<8 | src[pos]\r\n  \t\t\tvar sequenceHighBits = src[pos+3]<<8 | src[pos+2]\r\n  \t\t\t// compute hash for the current sequence\r\n  \t\t\tvar hash = Math.imul(sequenceLowBits | (sequenceHighBits << 16), hasher) >>> hashShift;\r\n  \t\t\t/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)\r\n  \t\t\t\t\t\t\t.multiply(hasher)\r\n  \t\t\t\t\t\t\t.shiftr(hashShift)\r\n  \t\t\t\t\t\t\t.toNumber() */\r\n  \t\t\t// get the position of the sequence matching the hash\r\n  \t\t\t// NB. since 2 different sequences may have the same hash\r\n  \t\t\t// it is double-checked below\r\n  \t\t\t// do -1 to distinguish between initialized and uninitialized values\r\n  \t\t\tvar ref = hashTable[hash] - 1\r\n  \t\t\t// save position of current sequence in hash table\r\n  \t\t\thashTable[hash] = pos + 1\r\n  \r\n  \t\t\t// first reference or within 64k limit or current sequence !== hashed one: no match\r\n  \t\t\tif ( ref < 0 ||\r\n  \t\t\t\t((pos - ref) >>> 16) > 0 ||\r\n  \t\t\t\t(\r\n  \t\t\t\t\t((src[ref+3]<<8 | src[ref+2]) != sequenceHighBits) ||\r\n  \t\t\t\t\t((src[ref+1]<<8 | src[ref]) != sequenceLowBits )\r\n  \t\t\t\t)\r\n  \t\t\t) {\r\n  \t\t\t\t// increase step if nothing found within limit\r\n  \t\t\t\tstep = findMatchAttempts++ >> skipStrength\r\n  \t\t\t\tpos += step\r\n  \t\t\t\tcontinue\r\n  \t\t\t}\r\n  \r\n  \t\t\tfindMatchAttempts = (1 << skipStrength) + 3\r\n  \r\n  \t\t\t// got a match\r\n  \t\t\tvar literals_length = pos - anchor\r\n  \t\t\tvar offset = pos - ref\r\n  \r\n  \t\t\t// minMatch already verified\r\n  \t\t\tpos += minMatch\r\n  \t\t\tref += minMatch\r\n  \r\n  \t\t\t// move to the end of the match (>=minMatch)\r\n  \t\t\tvar match_length = pos\r\n  \t\t\twhile (pos < srcLength && src[pos] == src[ref]) {\r\n  \t\t\t\tpos++\r\n  \t\t\t\tref++\r\n  \t\t\t}\r\n  \r\n  \t\t\t// match length\r\n  \t\t\tmatch_length = pos - match_length\r\n  \r\n  \t\t\t// token\r\n  \t\t\tvar token = match_length < mlMask ? match_length : mlMask\r\n  \r\n  \t\t\t// encode literals length\r\n  \t\t\tif (literals_length >= runMask) {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (runMask << mlBits) + token\r\n  \t\t\t\tfor (var len = literals_length - runMask; len > 254; len -= 255) {\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \t\t\t\tdst[dpos++] = len\r\n  \t\t\t} else {\r\n  \t\t\t\t// add match length to the token\r\n  \t\t\t\tdst[dpos++] = (literals_length << mlBits) + token\r\n  \t\t\t}\r\n  \r\n  \t\t\t// write literals\r\n  \t\t\tfor (var i = 0; i < literals_length; i++) {\r\n  \t\t\t\tdst[dpos++] = src[anchor+i]\r\n  \t\t\t}\r\n  \r\n  \t\t\t// encode offset\r\n  \t\t\tdst[dpos++] = offset\r\n  \t\t\tdst[dpos++] = (offset >> 8)\r\n  \r\n  \t\t\t// encode match length\r\n  \t\t\tif (match_length >= mlMask) {\r\n  \t\t\t\tmatch_length -= mlMask\r\n  \t\t\t\twhile (match_length >= 255) {\r\n  \t\t\t\t\tmatch_length -= 255\r\n  \t\t\t\t\tdst[dpos++] = 255\r\n  \t\t\t\t}\r\n  \r\n  \t\t\t\tdst[dpos++] = match_length\r\n  \t\t\t}\r\n  \r\n  \t\t\tanchor = pos\r\n  \t\t}\r\n  \t}\r\n  \r\n  \t// cannot compress input\r\n  \tif (anchor == 0) return 0\r\n  \r\n  \t// Write last literals\r\n  \t// encode literals length\r\n  \tliterals_length = src.length - anchor\r\n  \tif (literals_length >= runMask) {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (runMask << mlBits)\r\n  \t\tfor (var ln = literals_length - runMask; ln > 254; ln -= 255) {\r\n  \t\t\tdst[dpos++] = 255\r\n  \t\t}\r\n  \t\tdst[dpos++] = ln\r\n  \t} else {\r\n  \t\t// add match length to the token\r\n  \t\tdst[dpos++] = (literals_length << mlBits)\r\n  \t}\r\n  \r\n  \t// write literals\r\n  \tpos = anchor\r\n  \twhile (pos < src.length) {\r\n  \t\tdst[dpos++] = src[pos++]\r\n  \t}\r\n  \r\n  \treturn dpos\r\n  }\r\n  \r\n  exports.CHUNK_SIZE = 2048; // musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea\r\n  \r\n  exports.compressPackage = function(data, verify) {\r\n    if (verify) {\r\n      var temp = new Uint8Array(exports.CHUNK_SIZE);\r\n    }\r\n    // compress the data in chunks\r\n    assert(data instanceof ArrayBuffer);\r\n    data = new Uint8Array(data);\r\n    console.log('compressing package of size ' + data.length);\r\n    var compressedChunks = [];\r\n    var successes = [];\r\n    var offset = 0;\r\n    var total = 0;\r\n    while (offset < data.length) {\r\n      var chunk = data.subarray(offset, offset + exports.CHUNK_SIZE);\r\n      //console.log('compress a chunk ' + [offset, total, data.length]);\r\n      offset += exports.CHUNK_SIZE;\r\n      var bound = exports.compressBound(chunk.length);\r\n      var compressed = new Uint8Array(bound);\r\n      var compressedSize = exports.compress(chunk, compressed);\r\n      if (compressedSize > 0) {\r\n        assert(compressedSize <= bound);\r\n        compressed = compressed.subarray(0, compressedSize);\r\n        compressedChunks.push(compressed);\r\n        total += compressedSize;\r\n        successes.push(1);\r\n        if (verify) {\r\n          var back = exports.uncompress(compressed, temp);\r\n          assert(back === chunk.length, [back, chunk.length]);\r\n          for (var i = 0; i < chunk.length; i++) {\r\n            assert(chunk[i] === temp[i]);\r\n          }\r\n        }\r\n      } else {\r\n        assert(compressedSize === 0);\r\n        // failure to compress :(\r\n        compressedChunks.push(chunk);\r\n        total += chunk.length; // last chunk may not be the full exports.CHUNK_SIZE size\r\n        successes.push(0);\r\n      }\r\n    }\r\n    data = null; // XXX null out pack['data'] too?\r\n    var compressedData = {\r\n      'data': new Uint8Array(total + exports.CHUNK_SIZE*2), // store all the compressed data, plus room for two cached decompressed chunk, in one fast array\r\n      'cachedOffset': total,\r\n      'cachedIndexes': [-1, -1], // cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing\r\n      'cachedChunks': [null, null],\r\n      'offsets': [], // chunk# => start in compressed data\r\n      'sizes': [],\r\n      'successes': successes, // 1 if chunk is compressed\r\n    };\r\n    offset = 0;\r\n    for (var i = 0; i < compressedChunks.length; i++) {\r\n      compressedData['data'].set(compressedChunks[i], offset);\r\n      compressedData['offsets'][i] = offset;\r\n      compressedData['sizes'][i] = compressedChunks[i].length\r\n      offset += compressedChunks[i].length;\r\n    }\r\n    console.log('compressed package into ' + [compressedData['data'].length]);\r\n    assert(offset === total);\r\n    return compressedData;\r\n  };\r\n  \r\n  assert(exports.CHUNK_SIZE < (1 << 15)); // we use 16-bit ints as the type of the hash table, chunk size must be smaller\r\n  \r\n  return exports;\r\n  \r\n  })();\r\n  \r\n  ;\r\n          return MiniLZ4;\r\n        })();\r\n        LZ4.CHUNK_SIZE = LZ4.codec.CHUNK_SIZE;\r\n      },\r\n  loadPackage(pack, preloadPlugin) {\r\n        LZ4.init();\r\n        var compressedData = pack['compressedData'];\r\n        if (!compressedData) compressedData = LZ4.codec.compressPackage(pack['data']);\r\n        assert(compressedData['cachedIndexes'].length === compressedData['cachedChunks'].length);\r\n        for (var i = 0; i < compressedData['cachedIndexes'].length; i++) {\r\n          compressedData['cachedIndexes'][i] = -1;\r\n          compressedData['cachedChunks'][i] = compressedData['data'].subarray(compressedData['cachedOffset'] + i*LZ4.CHUNK_SIZE,\r\n                                                                        compressedData['cachedOffset'] + (i+1)*LZ4.CHUNK_SIZE);\r\n          assert(compressedData['cachedChunks'][i].length === LZ4.CHUNK_SIZE);\r\n        }\r\n        pack['metadata'].files.forEach((file) => {\r\n          var dir = PATH.dirname(file.filename);\r\n          var name = PATH.basename(file.filename);\r\n          FS.createPath('', dir, true, true);\r\n          var parent = FS.analyzePath(dir).object;\r\n          LZ4.createNode(parent, name, LZ4.FILE_MODE, 0, {\r\n            compressedData,\r\n            start: file.start,\r\n            end: file.end,\r\n          });\r\n        });\r\n        // Preload files if necessary. This code is largely similar to\r\n        // createPreloadedFile in library_fs.js. However, a main difference here\r\n        // is that we only decompress the file if it can be preloaded.\r\n        // Abstracting out the common parts seems to be more effort than it is\r\n        // worth.\r\n        if (preloadPlugin) {\r\n          Browser.init();\r\n          pack['metadata'].files.forEach((file) => {\r\n            var handled = false;\r\n            var fullname = file.filename;\r\n            preloadPlugins.forEach((plugin) => {\r\n              if (handled) return;\r\n              if (plugin['canHandle'](fullname)) {\r\n                var dep = getUniqueRunDependency('fp ' + fullname);\r\n                addRunDependency(dep);\r\n                var finish = () => removeRunDependency(dep);\r\n                var byteArray = FS.readFile(fullname);\r\n                plugin['handle'](byteArray, fullname, finish, finish);\r\n                handled = true;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      },\r\n  createNode(parent, name, mode, dev, contents, mtime) {\r\n        var node = FS.createNode(parent, name, mode);\r\n        node.mode = mode;\r\n        node.node_ops = LZ4.node_ops;\r\n        node.stream_ops = LZ4.stream_ops;\r\n        node.timestamp = (mtime || new Date).getTime();\r\n        assert(LZ4.FILE_MODE !== LZ4.DIR_MODE);\r\n        if (mode === LZ4.FILE_MODE) {\r\n          node.size = contents.end - contents.start;\r\n          node.contents = contents;\r\n        } else {\r\n          node.size = 4096;\r\n          node.contents = {};\r\n        }\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n        }\r\n        return node;\r\n      },\r\n  node_ops:{\r\n  getattr(node) {\r\n          return {\r\n            dev: 1,\r\n            ino: node.id,\r\n            mode: node.mode,\r\n            nlink: 1,\r\n            uid: 0,\r\n            gid: 0,\r\n            rdev: 0,\r\n            size: node.size,\r\n            atime: new Date(node.timestamp),\r\n            mtime: new Date(node.timestamp),\r\n            ctime: new Date(node.timestamp),\r\n            blksize: 4096,\r\n            blocks: Math.ceil(node.size / 4096),\r\n          };\r\n        },\r\n  setattr(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n        },\r\n  lookup(parent, name) {\r\n          throw new FS.ErrnoError(44);\r\n        },\r\n  mknod(parent, name, mode, dev) {\r\n          throw new FS.ErrnoError(63);\r\n        },\r\n  rename(oldNode, newDir, newName) {\r\n          throw new FS.ErrnoError(63);\r\n        },\r\n  unlink(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },\r\n  rmdir(parent, name) {\r\n          throw new FS.ErrnoError(63);\r\n        },\r\n  readdir(node) {\r\n          throw new FS.ErrnoError(63);\r\n        },\r\n  symlink(parent, newName, oldPath) {\r\n          throw new FS.ErrnoError(63);\r\n        },\r\n  },\r\n  stream_ops:{\r\n  read(stream, buffer, offset, length, position) {\r\n          //out('LZ4 read ' + [offset, length, position]);\r\n          length = Math.min(length, stream.node.size - position);\r\n          if (length <= 0) return 0;\r\n          var contents = stream.node.contents;\r\n          var compressedData = contents.compressedData;\r\n          var written = 0;\r\n          while (written < length) {\r\n            var start = contents.start + position + written; // start index in uncompressed data\r\n            var desired = length - written;\r\n            //out('current read: ' + ['start', start, 'desired', desired]);\r\n            var chunkIndex = Math.floor(start / LZ4.CHUNK_SIZE);\r\n            var compressedStart = compressedData['offsets'][chunkIndex];\r\n            var compressedSize = compressedData['sizes'][chunkIndex];\r\n            var currChunk;\r\n            if (compressedData['successes'][chunkIndex]) {\r\n              var found = compressedData['cachedIndexes'].indexOf(chunkIndex);\r\n              if (found >= 0) {\r\n                currChunk = compressedData['cachedChunks'][found];\r\n              } else {\r\n                // decompress the chunk\r\n                compressedData['cachedIndexes'].pop();\r\n                compressedData['cachedIndexes'].unshift(chunkIndex);\r\n                currChunk = compressedData['cachedChunks'].pop();\r\n                compressedData['cachedChunks'].unshift(currChunk);\r\n                if (compressedData['debug']) {\r\n                  out('decompressing chunk ' + chunkIndex);\r\n                  Module['decompressedChunks'] = (Module['decompressedChunks'] || 0) + 1;\r\n                }\r\n                var compressed = compressedData['data'].subarray(compressedStart, compressedStart + compressedSize);\r\n                //var t = Date.now();\r\n                var originalSize = LZ4.codec.uncompress(compressed, currChunk);\r\n                //out('decompress time: ' + (Date.now() - t));\r\n                if (chunkIndex < compressedData['successes'].length-1) assert(originalSize === LZ4.CHUNK_SIZE); // all but the last chunk must be full-size\r\n              }\r\n            } else {\r\n              // uncompressed\r\n              currChunk = compressedData['data'].subarray(compressedStart, compressedStart + LZ4.CHUNK_SIZE);\r\n            }\r\n            var startInChunk = start % LZ4.CHUNK_SIZE;\r\n            var endInChunk = Math.min(startInChunk + desired, LZ4.CHUNK_SIZE);\r\n            buffer.set(currChunk.subarray(startInChunk, endInChunk), offset + written);\r\n            var currWritten = endInChunk - startInChunk;\r\n            written += currWritten;\r\n          }\r\n          return written;\r\n        },\r\n  write(stream, buffer, offset, length, position) {\r\n          throw new FS.ErrnoError(29);\r\n        },\r\n  llseek(stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.size;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        },\r\n  },\r\n  };\r\n  var FS = {\r\n  root:null,\r\n  mounts:[],\r\n  devices:{\r\n  },\r\n  streams:[],\r\n  nextInode:1,\r\n  nameTable:null,\r\n  currentPath:\"/\",\r\n  initialized:false,\r\n  ignorePermissions:true,\r\n  ErrnoError:null,\r\n  genericErrors:{\r\n  },\r\n  filesystems:null,\r\n  syncFSRequests:0,\r\n  lookupPath(path, opts = {}) {\r\n        path = PATH_FS.resolve(path);\r\n  \r\n        if (!path) return { path: '', node: null };\r\n  \r\n        var defaults = {\r\n          follow_mount: true,\r\n          recurse_count: 0\r\n        };\r\n        opts = Object.assign(defaults, opts)\r\n  \r\n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\r\n          throw new FS.ErrnoError(32);\r\n        }\r\n  \r\n        // split the absolute path\r\n        var parts = path.split('/').filter((p) => !!p);\r\n  \r\n        // start at the root\r\n        var current = FS.root;\r\n        var current_path = '/';\r\n  \r\n        for (var i = 0; i < parts.length; i++) {\r\n          var islast = (i === parts.length-1);\r\n          if (islast && opts.parent) {\r\n            // stop resolving\r\n            break;\r\n          }\r\n  \r\n          current = FS.lookupNode(current, parts[i]);\r\n          current_path = PATH.join2(current_path, parts[i]);\r\n  \r\n          // jump to the mount's root node if this is a mountpoint\r\n          if (FS.isMountpoint(current)) {\r\n            if (!islast || (islast && opts.follow_mount)) {\r\n              current = current.mounted.root;\r\n            }\r\n          }\r\n  \r\n          // by default, lookupPath will not follow a symlink if it is the final path component.\r\n          // setting opts.follow = true will override this behavior.\r\n          if (!islast || opts.follow) {\r\n            var count = 0;\r\n            while (FS.isLink(current.mode)) {\r\n              var link = FS.readlink(current_path);\r\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\r\n  \r\n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\r\n              current = lookup.node;\r\n  \r\n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\r\n                throw new FS.ErrnoError(32);\r\n              }\r\n            }\r\n          }\r\n        }\r\n  \r\n        return { path: current_path, node: current };\r\n      },\r\n  getPath(node) {\r\n        var path;\r\n        while (true) {\r\n          if (FS.isRoot(node)) {\r\n            var mount = node.mount.mountpoint;\r\n            if (!path) return mount;\r\n            return mount[mount.length-1] !== '/' ? `${mount}/${path}` : mount + path;\r\n          }\r\n          path = path ? `${node.name}/${path}` : node.name;\r\n          node = node.parent;\r\n        }\r\n      },\r\n  hashName(parentid, name) {\r\n        var hash = 0;\r\n  \r\n        for (var i = 0; i < name.length; i++) {\r\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\r\n        }\r\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\r\n      },\r\n  hashAddNode(node) {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        node.name_next = FS.nameTable[hash];\r\n        FS.nameTable[hash] = node;\r\n      },\r\n  hashRemoveNode(node) {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        if (FS.nameTable[hash] === node) {\r\n          FS.nameTable[hash] = node.name_next;\r\n        } else {\r\n          var current = FS.nameTable[hash];\r\n          while (current) {\r\n            if (current.name_next === node) {\r\n              current.name_next = node.name_next;\r\n              break;\r\n            }\r\n            current = current.name_next;\r\n          }\r\n        }\r\n      },\r\n  lookupNode(parent, name) {\r\n        var errCode = FS.mayLookup(parent);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode, parent);\r\n        }\r\n        var hash = FS.hashName(parent.id, name);\r\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n          var nodeName = node.name;\r\n          if (node.parent.id === parent.id && nodeName === name) {\r\n            return node;\r\n          }\r\n        }\r\n        // if we failed to find it in the cache, call into the VFS\r\n        return FS.lookup(parent, name);\r\n      },\r\n  createNode(parent, name, mode, rdev) {\r\n        var node = new FS.FSNode(parent, name, mode, rdev);\r\n  \r\n        FS.hashAddNode(node);\r\n  \r\n        return node;\r\n      },\r\n  destroyNode(node) {\r\n        FS.hashRemoveNode(node);\r\n      },\r\n  isRoot(node) {\r\n        return node === node.parent;\r\n      },\r\n  isMountpoint(node) {\r\n        return !!node.mounted;\r\n      },\r\n  isFile(mode) {\r\n        return (mode & 61440) === 32768;\r\n      },\r\n  isDir(mode) {\r\n        return (mode & 61440) === 16384;\r\n      },\r\n  isLink(mode) {\r\n        return (mode & 61440) === 40960;\r\n      },\r\n  isChrdev(mode) {\r\n        return (mode & 61440) === 8192;\r\n      },\r\n  isBlkdev(mode) {\r\n        return (mode & 61440) === 24576;\r\n      },\r\n  isFIFO(mode) {\r\n        return (mode & 61440) === 4096;\r\n      },\r\n  isSocket(mode) {\r\n        return (mode & 49152) === 49152;\r\n      },\r\n  flagsToPermissionString(flag) {\r\n        var perms = ['r', 'w', 'rw'][flag & 3];\r\n        if ((flag & 512)) {\r\n          perms += 'w';\r\n        }\r\n        return perms;\r\n      },\r\n  nodePermissions(node, perms) {\r\n        if (FS.ignorePermissions) {\r\n          return 0;\r\n        }\r\n        // return 0 if any user, group or owner bits are set.\r\n        if (perms.includes('r') && !(node.mode & 292)) {\r\n          return 2;\r\n        } else if (perms.includes('w') && !(node.mode & 146)) {\r\n          return 2;\r\n        } else if (perms.includes('x') && !(node.mode & 73)) {\r\n          return 2;\r\n        }\r\n        return 0;\r\n      },\r\n  mayLookup(dir) {\r\n        var errCode = FS.nodePermissions(dir, 'x');\r\n        if (errCode) return errCode;\r\n        if (!dir.node_ops.lookup) return 2;\r\n        return 0;\r\n      },\r\n  mayCreate(dir, name) {\r\n        try {\r\n          var node = FS.lookupNode(dir, name);\r\n          return 20;\r\n        } catch (e) {\r\n        }\r\n        return FS.nodePermissions(dir, 'wx');\r\n      },\r\n  mayDelete(dir, name, isdir) {\r\n        var node;\r\n        try {\r\n          node = FS.lookupNode(dir, name);\r\n        } catch (e) {\r\n          return e.errno;\r\n        }\r\n        var errCode = FS.nodePermissions(dir, 'wx');\r\n        if (errCode) {\r\n          return errCode;\r\n        }\r\n        if (isdir) {\r\n          if (!FS.isDir(node.mode)) {\r\n            return 54;\r\n          }\r\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n            return 10;\r\n          }\r\n        } else {\r\n          if (FS.isDir(node.mode)) {\r\n            return 31;\r\n          }\r\n        }\r\n        return 0;\r\n      },\r\n  mayOpen(node, flags) {\r\n        if (!node) {\r\n          return 44;\r\n        }\r\n        if (FS.isLink(node.mode)) {\r\n          return 32;\r\n        } else if (FS.isDir(node.mode)) {\r\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\r\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\r\n            return 31;\r\n          }\r\n        }\r\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\r\n      },\r\n  MAX_OPEN_FDS:4096,\r\n  nextfd() {\r\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\r\n          if (!FS.streams[fd]) {\r\n            return fd;\r\n          }\r\n        }\r\n        throw new FS.ErrnoError(33);\r\n      },\r\n  getStreamChecked(fd) {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        return stream;\r\n      },\r\n  getStream:(fd) => FS.streams[fd],\r\n  createStream(stream, fd = -1) {\r\n        if (!FS.FSStream) {\r\n          FS.FSStream = /** @constructor */ function() {\r\n            this.shared = { };\r\n          };\r\n          FS.FSStream.prototype = {};\r\n          Object.defineProperties(FS.FSStream.prototype, {\r\n            object: {\r\n              /** @this {FS.FSStream} */\r\n              get() { return this.node; },\r\n              /** @this {FS.FSStream} */\r\n              set(val) { this.node = val; }\r\n            },\r\n            isRead: {\r\n              /** @this {FS.FSStream} */\r\n              get() { return (this.flags & 2097155) !== 1; }\r\n            },\r\n            isWrite: {\r\n              /** @this {FS.FSStream} */\r\n              get() { return (this.flags & 2097155) !== 0; }\r\n            },\r\n            isAppend: {\r\n              /** @this {FS.FSStream} */\r\n              get() { return (this.flags & 1024); }\r\n            },\r\n            flags: {\r\n              /** @this {FS.FSStream} */\r\n              get() { return this.shared.flags; },\r\n              /** @this {FS.FSStream} */\r\n              set(val) { this.shared.flags = val; },\r\n            },\r\n            position : {\r\n              /** @this {FS.FSStream} */\r\n              get() { return this.shared.position; },\r\n              /** @this {FS.FSStream} */\r\n              set(val) { this.shared.position = val; },\r\n            },\r\n          });\r\n        }\r\n        // clone it, so we can return an instance of FSStream\r\n        stream = Object.assign(new FS.FSStream(), stream);\r\n        if (fd == -1) {\r\n          fd = FS.nextfd();\r\n        }\r\n        stream.fd = fd;\r\n        FS.streams[fd] = stream;\r\n        return stream;\r\n      },\r\n  closeStream(fd) {\r\n        FS.streams[fd] = null;\r\n      },\r\n  chrdev_stream_ops:{\r\n  open(stream) {\r\n          var device = FS.getDevice(stream.node.rdev);\r\n          // override node's stream ops with the device's\r\n          stream.stream_ops = device.stream_ops;\r\n          // forward the open call\r\n          stream.stream_ops.open?.(stream);\r\n        },\r\n  llseek() {\r\n          throw new FS.ErrnoError(70);\r\n        },\r\n  },\r\n  major:(dev) => ((dev) >> 8),\r\n  minor:(dev) => ((dev) & 0xff),\r\n  makedev:(ma, mi) => ((ma) << 8 | (mi)),\r\n  registerDevice(dev, ops) {\r\n        FS.devices[dev] = { stream_ops: ops };\r\n      },\r\n  getDevice:(dev) => FS.devices[dev],\r\n  getMounts(mount) {\r\n        var mounts = [];\r\n        var check = [mount];\r\n  \r\n        while (check.length) {\r\n          var m = check.pop();\r\n  \r\n          mounts.push(m);\r\n  \r\n          check.push.apply(check, m.mounts);\r\n        }\r\n  \r\n        return mounts;\r\n      },\r\n  syncfs(populate, callback) {\r\n        if (typeof populate == 'function') {\r\n          callback = populate;\r\n          populate = false;\r\n        }\r\n  \r\n        FS.syncFSRequests++;\r\n  \r\n        if (FS.syncFSRequests > 1) {\r\n          err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);\r\n        }\r\n  \r\n        var mounts = FS.getMounts(FS.root.mount);\r\n        var completed = 0;\r\n  \r\n        function doCallback(errCode) {\r\n          FS.syncFSRequests--;\r\n          return callback(errCode);\r\n        }\r\n  \r\n        function done(errCode) {\r\n          if (errCode) {\r\n            if (!done.errored) {\r\n              done.errored = true;\r\n              return doCallback(errCode);\r\n            }\r\n            return;\r\n          }\r\n          if (++completed >= mounts.length) {\r\n            doCallback(null);\r\n          }\r\n        };\r\n  \r\n        // sync all mounts\r\n        mounts.forEach((mount) => {\r\n          if (!mount.type.syncfs) {\r\n            return done(null);\r\n          }\r\n          mount.type.syncfs(mount, populate, done);\r\n        });\r\n      },\r\n  mount(type, opts, mountpoint) {\r\n        var root = mountpoint === '/';\r\n        var pseudo = !mountpoint;\r\n        var node;\r\n  \r\n        if (root && FS.root) {\r\n          throw new FS.ErrnoError(10);\r\n        } else if (!root && !pseudo) {\r\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n          mountpoint = lookup.path;  // use the absolute path\r\n          node = lookup.node;\r\n  \r\n          if (FS.isMountpoint(node)) {\r\n            throw new FS.ErrnoError(10);\r\n          }\r\n  \r\n          if (!FS.isDir(node.mode)) {\r\n            throw new FS.ErrnoError(54);\r\n          }\r\n        }\r\n  \r\n        var mount = {\r\n          type,\r\n          opts,\r\n          mountpoint,\r\n          mounts: []\r\n        };\r\n  \r\n        // create a root node for the fs\r\n        var mountRoot = type.mount(mount);\r\n        mountRoot.mount = mount;\r\n        mount.root = mountRoot;\r\n  \r\n        if (root) {\r\n          FS.root = mountRoot;\r\n        } else if (node) {\r\n          // set as a mountpoint\r\n          node.mounted = mount;\r\n  \r\n          // add the new mount to the current mount's children\r\n          if (node.mount) {\r\n            node.mount.mounts.push(mount);\r\n          }\r\n        }\r\n  \r\n        return mountRoot;\r\n      },\r\n  unmount(mountpoint) {\r\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n        if (!FS.isMountpoint(lookup.node)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n  \r\n        // destroy the nodes for this mount, and all its child mounts\r\n        var node = lookup.node;\r\n        var mount = node.mounted;\r\n        var mounts = FS.getMounts(mount);\r\n  \r\n        Object.keys(FS.nameTable).forEach((hash) => {\r\n          var current = FS.nameTable[hash];\r\n  \r\n          while (current) {\r\n            var next = current.name_next;\r\n  \r\n            if (mounts.includes(current.mount)) {\r\n              FS.destroyNode(current);\r\n            }\r\n  \r\n            current = next;\r\n          }\r\n        });\r\n  \r\n        // no longer a mountpoint\r\n        node.mounted = null;\r\n  \r\n        // remove this mount from the child mounts\r\n        var idx = node.mount.mounts.indexOf(mount);\r\n        node.mount.mounts.splice(idx, 1);\r\n      },\r\n  lookup(parent, name) {\r\n        return parent.node_ops.lookup(parent, name);\r\n      },\r\n  mknod(path, mode, dev) {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        if (!name || name === '.' || name === '..') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.mayCreate(parent, name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.mknod) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.mknod(parent, name, mode, dev);\r\n      },\r\n  create(path, mode) {\r\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\r\n        mode &= 4095;\r\n        mode |= 32768;\r\n        return FS.mknod(path, mode, 0);\r\n      },\r\n  mkdir(path, mode) {\r\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\r\n        mode &= 511 | 512;\r\n        mode |= 16384;\r\n        return FS.mknod(path, mode, 0);\r\n      },\r\n  mkdirTree(path, mode) {\r\n        var dirs = path.split('/');\r\n        var d = '';\r\n        for (var i = 0; i < dirs.length; ++i) {\r\n          if (!dirs[i]) continue;\r\n          d += '/' + dirs[i];\r\n          try {\r\n            FS.mkdir(d, mode);\r\n          } catch(e) {\r\n            if (e.errno != 20) throw e;\r\n          }\r\n        }\r\n      },\r\n  mkdev(path, mode, dev) {\r\n        if (typeof dev == 'undefined') {\r\n          dev = mode;\r\n          mode = 438 /* 0666 */;\r\n        }\r\n        mode |= 8192;\r\n        return FS.mknod(path, mode, dev);\r\n      },\r\n  symlink(oldpath, newpath) {\r\n        if (!PATH_FS.resolve(oldpath)) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var lookup = FS.lookupPath(newpath, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var newname = PATH.basename(newpath);\r\n        var errCode = FS.mayCreate(parent, newname);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.symlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.symlink(parent, newname, oldpath);\r\n      },\r\n  rename(old_path, new_path) {\r\n        var old_dirname = PATH.dirname(old_path);\r\n        var new_dirname = PATH.dirname(new_path);\r\n        var old_name = PATH.basename(old_path);\r\n        var new_name = PATH.basename(new_path);\r\n        // parents must exist\r\n        var lookup, old_dir, new_dir;\r\n  \r\n        // let the errors from non existant directories percolate up\r\n        lookup = FS.lookupPath(old_path, { parent: true });\r\n        old_dir = lookup.node;\r\n        lookup = FS.lookupPath(new_path, { parent: true });\r\n        new_dir = lookup.node;\r\n  \r\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\r\n        // need to be part of the same mount\r\n        if (old_dir.mount !== new_dir.mount) {\r\n          throw new FS.ErrnoError(75);\r\n        }\r\n        // source must exist\r\n        var old_node = FS.lookupNode(old_dir, old_name);\r\n        // old path should not be an ancestor of the new path\r\n        var relative = PATH_FS.relative(old_path, new_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        // new path should not be an ancestor of the old path\r\n        relative = PATH_FS.relative(new_path, old_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(55);\r\n        }\r\n        // see if the new path already exists\r\n        var new_node;\r\n        try {\r\n          new_node = FS.lookupNode(new_dir, new_name);\r\n        } catch (e) {\r\n          // not fatal\r\n        }\r\n        // early out if nothing needs to change\r\n        if (old_node === new_node) {\r\n          return;\r\n        }\r\n        // we'll need to delete the old entry\r\n        var isdir = FS.isDir(old_node.mode);\r\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        // need delete permissions if we'll be overwriting.\r\n        // need create permissions if new doesn't already exist.\r\n        errCode = new_node ?\r\n          FS.mayDelete(new_dir, new_name, isdir) :\r\n          FS.mayCreate(new_dir, new_name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!old_dir.node_ops.rename) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        // if we are going to change the parent, check write permissions\r\n        if (new_dir !== old_dir) {\r\n          errCode = FS.nodePermissions(old_dir, 'w');\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // remove the node from the lookup hash\r\n        FS.hashRemoveNode(old_node);\r\n        // do the underlying fs rename\r\n        try {\r\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          // add the node back to the hash (in case node_ops.rename\r\n          // changed its name)\r\n          FS.hashAddNode(old_node);\r\n        }\r\n      },\r\n  rmdir(path) {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, true);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.rmdir) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.rmdir(parent, name);\r\n        FS.destroyNode(node);\r\n      },\r\n  readdir(path) {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        if (!node.node_ops.readdir) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        return node.node_ops.readdir(node);\r\n      },\r\n  unlink(path) {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, false);\r\n        if (errCode) {\r\n          // According to POSIX, we should map EISDIR to EPERM, but\r\n          // we instead do what Linux does (and we must, as we use\r\n          // the musl linux libc).\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.unlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.unlink(parent, name);\r\n        FS.destroyNode(node);\r\n      },\r\n  readlink(path) {\r\n        var lookup = FS.lookupPath(path);\r\n        var link = lookup.node;\r\n        if (!link) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!link.node_ops.readlink) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\r\n      },\r\n  stat(path, dontFollow) {\r\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n        var node = lookup.node;\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!node.node_ops.getattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return node.node_ops.getattr(node);\r\n      },\r\n  lstat(path) {\r\n        return FS.stat(path, true);\r\n      },\r\n  chmod(path, mode, dontFollow) {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          mode: (mode & 4095) | (node.mode & ~4095),\r\n          timestamp: Date.now()\r\n        });\r\n      },\r\n  lchmod(path, mode) {\r\n        FS.chmod(path, mode, true);\r\n      },\r\n  fchmod(fd, mode) {\r\n        var stream = FS.getStreamChecked(fd);\r\n        FS.chmod(stream.node, mode);\r\n      },\r\n  chown(path, uid, gid, dontFollow) {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Date.now()\r\n          // we ignore the uid / gid for now\r\n        });\r\n      },\r\n  lchown(path, uid, gid) {\r\n        FS.chown(path, uid, gid, true);\r\n      },\r\n  fchown(fd, uid, gid) {\r\n        var stream = FS.getStreamChecked(fd);\r\n        FS.chown(stream.node, uid, gid);\r\n      },\r\n  truncate(path, len) {\r\n        if (len < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: true });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!FS.isFile(node.mode)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.nodePermissions(node, 'w');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          size: len,\r\n          timestamp: Date.now()\r\n        });\r\n      },\r\n  ftruncate(fd, len) {\r\n        var stream = FS.getStreamChecked(fd);\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        FS.truncate(stream.node, len);\r\n      },\r\n  utime(path, atime, mtime) {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Math.max(atime, mtime)\r\n        });\r\n      },\r\n  open(path, flags, mode) {\r\n        if (path === \"\") {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;\r\n        mode = typeof mode == 'undefined' ? 438 /* 0666 */ : mode;\r\n        if ((flags & 64)) {\r\n          mode = (mode & 4095) | 32768;\r\n        } else {\r\n          mode = 0;\r\n        }\r\n        var node;\r\n        if (typeof path == 'object') {\r\n          node = path;\r\n        } else {\r\n          path = PATH.normalize(path);\r\n          try {\r\n            var lookup = FS.lookupPath(path, {\r\n              follow: !(flags & 131072)\r\n            });\r\n            node = lookup.node;\r\n          } catch (e) {\r\n            // ignore\r\n          }\r\n        }\r\n        // perhaps we need to create the node\r\n        var created = false;\r\n        if ((flags & 64)) {\r\n          if (node) {\r\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\r\n            if ((flags & 128)) {\r\n              throw new FS.ErrnoError(20);\r\n            }\r\n          } else {\r\n            // node doesn't exist, try to create it\r\n            node = FS.mknod(path, mode, 0);\r\n            created = true;\r\n          }\r\n        }\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        // can't truncate a device\r\n        if (FS.isChrdev(node.mode)) {\r\n          flags &= ~512;\r\n        }\r\n        // if asked only for a directory, then this must be one\r\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        // check permissions, if this is not a file we just created now (it is ok to\r\n        // create and write to a file with read-only permissions; it is read-only\r\n        // for later use)\r\n        if (!created) {\r\n          var errCode = FS.mayOpen(node, flags);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // do truncation if necessary\r\n        if ((flags & 512) && !created) {\r\n          FS.truncate(node, 0);\r\n        }\r\n        // we've already handled these, don't pass down to the underlying vfs\r\n        flags &= ~(128 | 512 | 131072);\r\n  \r\n        // register the stream with the filesystem\r\n        var stream = FS.createStream({\r\n          node,\r\n          path: FS.getPath(node),  // we want the absolute path to the node\r\n          flags,\r\n          seekable: true,\r\n          position: 0,\r\n          stream_ops: node.stream_ops,\r\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\r\n          ungotten: [],\r\n          error: false\r\n        });\r\n        // call the new stream's open function\r\n        if (stream.stream_ops.open) {\r\n          stream.stream_ops.open(stream);\r\n        }\r\n        if (Module['logReadFiles'] && !(flags & 1)) {\r\n          if (!FS.readFiles) FS.readFiles = {};\r\n          if (!(path in FS.readFiles)) {\r\n            FS.readFiles[path] = 1;\r\n          }\r\n        }\r\n        return stream;\r\n      },\r\n  close(stream) {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (stream.getdents) stream.getdents = null; // free readdir state\r\n        try {\r\n          if (stream.stream_ops.close) {\r\n            stream.stream_ops.close(stream);\r\n          }\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          FS.closeStream(stream.fd);\r\n        }\r\n        stream.fd = null;\r\n      },\r\n  isClosed(stream) {\r\n        return stream.fd === null;\r\n      },\r\n  llseek(stream, offset, whence) {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!stream.seekable || !stream.stream_ops.llseek) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        if (whence != 0 && whence != 1 && whence != 2) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n        stream.ungotten = [];\r\n        return stream.position;\r\n      },\r\n  read(stream, buffer, offset, length, position) {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.read) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n        if (!seeking) stream.position += bytesRead;\r\n        return bytesRead;\r\n      },\r\n  write(stream, buffer, offset, length, position, canOwn) {\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.write) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (stream.seekable && stream.flags & 1024) {\r\n          // seek to the end before writing in append mode\r\n          FS.llseek(stream, 0, 2);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n        if (!seeking) stream.position += bytesWritten;\r\n        return bytesWritten;\r\n      },\r\n  allocate(stream, offset, length) {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (offset < 0 || length <= 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (!stream.stream_ops.allocate) {\r\n          throw new FS.ErrnoError(138);\r\n        }\r\n        stream.stream_ops.allocate(stream, offset, length);\r\n      },\r\n  mmap(stream, length, position, prot, flags) {\r\n        // User requests writing to file (prot & PROT_WRITE != 0).\r\n        // Checking if we have permissions to write to the file unless\r\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\r\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\r\n        // as all modifications will be visible only in the memory of\r\n        // the current process.\r\n        if ((prot & 2) !== 0\r\n            && (flags & 2) === 0\r\n            && (stream.flags & 2097155) !== 2) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if (!stream.stream_ops.mmap) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\r\n      },\r\n  msync(stream, buffer, offset, length, mmapFlags) {\r\n        if (!stream.stream_ops.msync) {\r\n          return 0;\r\n        }\r\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\r\n      },\r\n  munmap:(stream) => 0,\r\n  ioctl(stream, cmd, arg) {\r\n        if (!stream.stream_ops.ioctl) {\r\n          throw new FS.ErrnoError(59);\r\n        }\r\n        return stream.stream_ops.ioctl(stream, cmd, arg);\r\n      },\r\n  readFile(path, opts = {}) {\r\n        opts.flags = opts.flags || 0;\r\n        opts.encoding = opts.encoding || 'binary';\r\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\r\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\r\n        }\r\n        var ret;\r\n        var stream = FS.open(path, opts.flags);\r\n        var stat = FS.stat(path);\r\n        var length = stat.size;\r\n        var buf = new Uint8Array(length);\r\n        FS.read(stream, buf, 0, length, 0);\r\n        if (opts.encoding === 'utf8') {\r\n          ret = UTF8ArrayToString(buf, 0);\r\n        } else if (opts.encoding === 'binary') {\r\n          ret = buf;\r\n        }\r\n        FS.close(stream);\r\n        return ret;\r\n      },\r\n  writeFile(path, data, opts = {}) {\r\n        opts.flags = opts.flags || 577;\r\n        var stream = FS.open(path, opts.flags, opts.mode);\r\n        if (typeof data == 'string') {\r\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\r\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\r\n        } else if (ArrayBuffer.isView(data)) {\r\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\r\n        } else {\r\n          throw new Error('Unsupported data type');\r\n        }\r\n        FS.close(stream);\r\n      },\r\n  cwd:() => FS.currentPath,\r\n  chdir(path) {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        if (lookup.node === null) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!FS.isDir(lookup.node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        var errCode = FS.nodePermissions(lookup.node, 'x');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        FS.currentPath = lookup.path;\r\n      },\r\n  createDefaultDirectories() {\r\n        FS.mkdir('/tmp');\r\n        FS.mkdir('/home');\r\n        FS.mkdir('/home/web_user');\r\n      },\r\n  createDefaultDevices() {\r\n        // create /dev\r\n        FS.mkdir('/dev');\r\n        // setup /dev/null\r\n        FS.registerDevice(FS.makedev(1, 3), {\r\n          read: () => 0,\r\n          write: (stream, buffer, offset, length, pos) => length,\r\n        });\r\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\r\n        // setup /dev/tty and /dev/tty1\r\n        // stderr needs to print output using err() rather than out()\r\n        // so we register a second tty just for it.\r\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\r\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\r\n        // setup /dev/[u]random\r\n        // use a buffer to avoid overhead of individual crypto calls per byte\r\n        var randomBuffer = new Uint8Array(1024), randomLeft = 0;\r\n        var randomByte = () => {\r\n          if (randomLeft === 0) {\r\n            randomLeft = randomFill(randomBuffer).byteLength;\r\n          }\r\n          return randomBuffer[--randomLeft];\r\n        };\r\n        FS.createDevice('/dev', 'random', randomByte);\r\n        FS.createDevice('/dev', 'urandom', randomByte);\r\n        // we're not going to emulate the actual shm device,\r\n        // just create the tmp dirs that reside in it commonly\r\n        FS.mkdir('/dev/shm');\r\n        FS.mkdir('/dev/shm/tmp');\r\n      },\r\n  createSpecialDirectories() {\r\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\r\n        // name of the stream for fd 6 (see test_unistd_ttyname)\r\n        FS.mkdir('/proc');\r\n        var proc_self = FS.mkdir('/proc/self');\r\n        FS.mkdir('/proc/self/fd');\r\n        FS.mount({\r\n          mount() {\r\n            var node = FS.createNode(proc_self, 'fd', 16384 | 511 /* 0777 */, 73);\r\n            node.node_ops = {\r\n              lookup(parent, name) {\r\n                var fd = +name;\r\n                var stream = FS.getStreamChecked(fd);\r\n                var ret = {\r\n                  parent: null,\r\n                  mount: { mountpoint: 'fake' },\r\n                  node_ops: { readlink: () => stream.path },\r\n                };\r\n                ret.parent = ret; // make it look like a simple root node\r\n                return ret;\r\n              }\r\n            };\r\n            return node;\r\n          }\r\n        }, {}, '/proc/self/fd');\r\n      },\r\n  createStandardStreams() {\r\n        // TODO deprecate the old functionality of a single\r\n        // input / output callback and that utilizes FS.createDevice\r\n        // and instead require a unique set of stream ops\r\n  \r\n        // by default, we symlink the standard streams to the\r\n        // default tty devices. however, if the standard streams\r\n        // have been overwritten we create a unique device for\r\n        // them instead.\r\n        if (Module['stdin']) {\r\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdin');\r\n        }\r\n        if (Module['stdout']) {\r\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdout');\r\n        }\r\n        if (Module['stderr']) {\r\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\r\n        } else {\r\n          FS.symlink('/dev/tty1', '/dev/stderr');\r\n        }\r\n  \r\n        // open default streams for the stdin, stdout and stderr devices\r\n        var stdin = FS.open('/dev/stdin', 0);\r\n        var stdout = FS.open('/dev/stdout', 1);\r\n        var stderr = FS.open('/dev/stderr', 1);\r\n      },\r\n  ensureErrnoError() {\r\n        if (FS.ErrnoError) return;\r\n        FS.ErrnoError = /** @this{Object} */ function ErrnoError(errno, node) {\r\n          // We set the `name` property to be able to identify `FS.ErrnoError`\r\n          // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\r\n          // - when using PROXYFS, an error can come from an underlying FS\r\n          // as different FS objects have their own FS.ErrnoError each,\r\n          // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\r\n          // we'll use the reliable test `err.name == \"ErrnoError\"` instead\r\n          this.name = 'ErrnoError';\r\n          this.node = node;\r\n          this.setErrno = /** @this{Object} */ function(errno) {\r\n            this.errno = errno;\r\n          };\r\n          this.setErrno(errno);\r\n          this.message = 'FS error';\r\n  \r\n        };\r\n        FS.ErrnoError.prototype = new Error();\r\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\r\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\r\n        [44].forEach((code) => {\r\n          FS.genericErrors[code] = new FS.ErrnoError(code);\r\n          FS.genericErrors[code].stack = '<generic error, no stack>';\r\n        });\r\n      },\r\n  staticInit() {\r\n        FS.ensureErrnoError();\r\n  \r\n        FS.nameTable = new Array(4096);\r\n  \r\n        FS.mount(MEMFS, {}, '/');\r\n  \r\n        FS.createDefaultDirectories();\r\n        FS.createDefaultDevices();\r\n        FS.createSpecialDirectories();\r\n  \r\n        FS.filesystems = {\r\n          'MEMFS': MEMFS,\r\n          'IDBFS': IDBFS,\r\n        };\r\n      },\r\n  init(input, output, error) {\r\n        FS.init.initialized = true;\r\n  \r\n        FS.ensureErrnoError();\r\n  \r\n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\r\n        Module['stdin'] = input || Module['stdin'];\r\n        Module['stdout'] = output || Module['stdout'];\r\n        Module['stderr'] = error || Module['stderr'];\r\n  \r\n        FS.createStandardStreams();\r\n      },\r\n  quit() {\r\n        FS.init.initialized = false;\r\n        // force-flush all streams, so we get musl std streams printed out\r\n        // close all of our streams\r\n        for (var i = 0; i < FS.streams.length; i++) {\r\n          var stream = FS.streams[i];\r\n          if (!stream) {\r\n            continue;\r\n          }\r\n          FS.close(stream);\r\n        }\r\n      },\r\n  findObject(path, dontResolveLastLink) {\r\n        var ret = FS.analyzePath(path, dontResolveLastLink);\r\n        if (!ret.exists) {\r\n          return null;\r\n        }\r\n        return ret.object;\r\n      },\r\n  analyzePath(path, dontResolveLastLink) {\r\n        // operate from within the context of the symlink's target\r\n        try {\r\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          path = lookup.path;\r\n        } catch (e) {\r\n        }\r\n        var ret = {\r\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\r\n          parentExists: false, parentPath: null, parentObject: null\r\n        };\r\n        try {\r\n          var lookup = FS.lookupPath(path, { parent: true });\r\n          ret.parentExists = true;\r\n          ret.parentPath = lookup.path;\r\n          ret.parentObject = lookup.node;\r\n          ret.name = PATH.basename(path);\r\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          ret.exists = true;\r\n          ret.path = lookup.path;\r\n          ret.object = lookup.node;\r\n          ret.name = lookup.node.name;\r\n          ret.isRoot = lookup.path === '/';\r\n        } catch (e) {\r\n          ret.error = e.errno;\r\n        };\r\n        return ret;\r\n      },\r\n  createPath(parent, path, canRead, canWrite) {\r\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n        var parts = path.split('/').reverse();\r\n        while (parts.length) {\r\n          var part = parts.pop();\r\n          if (!part) continue;\r\n          var current = PATH.join2(parent, part);\r\n          try {\r\n            FS.mkdir(current);\r\n          } catch (e) {\r\n            // ignore EEXIST\r\n          }\r\n          parent = current;\r\n        }\r\n        return current;\r\n      },\r\n  createFile(parent, name, properties, canRead, canWrite) {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS_getMode(canRead, canWrite);\r\n        return FS.create(path, mode);\r\n      },\r\n  createDataFile(parent, name, data, canRead, canWrite, canOwn) {\r\n        var path = name;\r\n        if (parent) {\r\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n          path = name ? PATH.join2(parent, name) : parent;\r\n        }\r\n        var mode = FS_getMode(canRead, canWrite);\r\n        var node = FS.create(path, mode);\r\n        if (data) {\r\n          if (typeof data == 'string') {\r\n            var arr = new Array(data.length);\r\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n            data = arr;\r\n          }\r\n          // make sure we can write to the file\r\n          FS.chmod(node, mode | 146);\r\n          var stream = FS.open(node, 577);\r\n          FS.write(stream, data, 0, data.length, 0, canOwn);\r\n          FS.close(stream);\r\n          FS.chmod(node, mode);\r\n        }\r\n      },\r\n  createDevice(parent, name, input, output) {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS_getMode(!!input, !!output);\r\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\r\n        var dev = FS.makedev(FS.createDevice.major++, 0);\r\n        // Create a fake device that a set of stream ops to emulate\r\n        // the old behavior.\r\n        FS.registerDevice(dev, {\r\n          open(stream) {\r\n            stream.seekable = false;\r\n          },\r\n          close(stream) {\r\n            // flush any pending line data\r\n            if (output?.buffer?.length) {\r\n              output(10);\r\n            }\r\n          },\r\n          read(stream, buffer, offset, length, pos /* ignored */) {\r\n            var bytesRead = 0;\r\n            for (var i = 0; i < length; i++) {\r\n              var result;\r\n              try {\r\n                result = input();\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n              if (result === undefined && bytesRead === 0) {\r\n                throw new FS.ErrnoError(6);\r\n              }\r\n              if (result === null || result === undefined) break;\r\n              bytesRead++;\r\n              buffer[offset+i] = result;\r\n            }\r\n            if (bytesRead) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return bytesRead;\r\n          },\r\n          write(stream, buffer, offset, length, pos) {\r\n            for (var i = 0; i < length; i++) {\r\n              try {\r\n                output(buffer[offset+i]);\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n            }\r\n            if (length) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return i;\r\n          }\r\n        });\r\n        return FS.mkdev(path, mode, dev);\r\n      },\r\n  forceLoadFile(obj) {\r\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\r\n        } else if (read_) {\r\n          // Command-line.\r\n          try {\r\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\r\n            //          read() will try to parse UTF8.\r\n            obj.contents = intArrayFromString(read_(obj.url), true);\r\n            obj.usedBytes = obj.contents.length;\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n        } else {\r\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\r\n        }\r\n      },\r\n  createLazyFile(parent, name, url, canRead, canWrite) {\r\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\r\n        /** @constructor */\r\n        function LazyUint8Array() {\r\n          this.lengthKnown = false;\r\n          this.chunks = []; // Loaded chunks. Index is the chunk number\r\n        }\r\n        LazyUint8Array.prototype.get = /** @this{Object} */ function LazyUint8Array_get(idx) {\r\n          if (idx > this.length-1 || idx < 0) {\r\n            return undefined;\r\n          }\r\n          var chunkOffset = idx % this.chunkSize;\r\n          var chunkNum = (idx / this.chunkSize)|0;\r\n          return this.getter(chunkNum)[chunkOffset];\r\n        };\r\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\r\n          this.getter = getter;\r\n        };\r\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\r\n          // Find length\r\n          var xhr = new XMLHttpRequest();\r\n          xhr.open('HEAD', url, false);\r\n          xhr.send(null);\r\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n          var header;\r\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n  \r\n          var chunkSize = 1024*1024; // Chunk size in bytes\r\n  \r\n          if (!hasByteServing) chunkSize = datalength;\r\n  \r\n          // Function to get a range from the remote URL.\r\n          var doXHR = (from, to) => {\r\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n  \r\n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url, false);\r\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n  \r\n            // Some hints to the browser that we want binary data.\r\n            xhr.responseType = 'arraybuffer';\r\n            if (xhr.overrideMimeType) {\r\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\r\n            }\r\n  \r\n            xhr.send(null);\r\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n            if (xhr.response !== undefined) {\r\n              return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\r\n            }\r\n            return intArrayFromString(xhr.responseText || '', true);\r\n          };\r\n          var lazyArray = this;\r\n          lazyArray.setDataGetter((chunkNum) => {\r\n            var start = chunkNum * chunkSize;\r\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\r\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\r\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\r\n            }\r\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\r\n            return lazyArray.chunks[chunkNum];\r\n          });\r\n  \r\n          if (usesGzip || !datalength) {\r\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\r\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\r\n            datalength = this.getter(0).length;\r\n            chunkSize = datalength;\r\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\r\n          }\r\n  \r\n          this._length = datalength;\r\n          this._chunkSize = chunkSize;\r\n          this.lengthKnown = true;\r\n        };\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\r\n          var lazyArray = new LazyUint8Array();\r\n          Object.defineProperties(lazyArray, {\r\n            length: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._length;\r\n              }\r\n            },\r\n            chunkSize: {\r\n              get: /** @this{Object} */ function() {\r\n                if (!this.lengthKnown) {\r\n                  this.cacheLength();\r\n                }\r\n                return this._chunkSize;\r\n              }\r\n            }\r\n          });\r\n  \r\n          var properties = { isDevice: false, contents: lazyArray };\r\n        } else {\r\n          var properties = { isDevice: false, url: url };\r\n        }\r\n  \r\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n        // This is a total hack, but I want to get this lazy file code out of the\r\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\r\n        // be its own thin LAZYFS proxying calls to MEMFS.\r\n        if (properties.contents) {\r\n          node.contents = properties.contents;\r\n        } else if (properties.url) {\r\n          node.contents = null;\r\n          node.url = properties.url;\r\n        }\r\n        // Add a function that defers querying the file size until it is asked the first time.\r\n        Object.defineProperties(node, {\r\n          usedBytes: {\r\n            get: /** @this {FSNode} */ function() { return this.contents.length; }\r\n          }\r\n        });\r\n        // override each stream op with one that tries to force load the lazy file first\r\n        var stream_ops = {};\r\n        var keys = Object.keys(node.stream_ops);\r\n        keys.forEach((key) => {\r\n          var fn = node.stream_ops[key];\r\n          stream_ops[key] = function forceLoadLazyFile() {\r\n            FS.forceLoadFile(node);\r\n            return fn.apply(null, arguments);\r\n          };\r\n        });\r\n        function writeChunks(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= contents.length)\r\n            return 0;\r\n          var size = Math.min(contents.length - position, length);\r\n          if (contents.slice) { // normal array\r\n            for (var i = 0; i < size; i++) {\r\n              buffer[offset + i] = contents[position + i];\r\n            }\r\n          } else {\r\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\r\n              buffer[offset + i] = contents.get(position + i);\r\n            }\r\n          }\r\n          return size;\r\n        }\r\n        // use a custom read function\r\n        stream_ops.read = (stream, buffer, offset, length, position) => {\r\n          FS.forceLoadFile(node);\r\n          return writeChunks(stream, buffer, offset, length, position)\r\n        };\r\n        // use a custom mmap function\r\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\r\n          FS.forceLoadFile(node);\r\n          var ptr = mmapAlloc(length);\r\n          if (!ptr) {\r\n            throw new FS.ErrnoError(48);\r\n          }\r\n          writeChunks(stream, HEAP8, ptr, length, position);\r\n          return { ptr, allocated: true };\r\n        };\r\n        node.stream_ops = stream_ops;\r\n        return node;\r\n      },\r\n  };\r\n  \r\n  \r\n    /**\r\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\r\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\r\n     *\r\n     * @param {number} ptr\r\n     * @param {number=} maxBytesToRead - An optional length that specifies the\r\n     *   maximum number of bytes to read. You can omit this parameter to scan the\r\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\r\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\r\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\r\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\r\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\r\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\r\n     * @return {string}\r\n     */\r\n  var UTF8ToString = (ptr, maxBytesToRead) => {\r\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\r\n    };\r\n  var SYSCALLS = {\r\n  DEFAULT_POLLMASK:5,\r\n  calculateAt(dirfd, path, allowEmpty) {\r\n        if (PATH.isAbs(path)) {\r\n          return path;\r\n        }\r\n        // relative path\r\n        var dir;\r\n        if (dirfd === -100) {\r\n          dir = FS.cwd();\r\n        } else {\r\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\r\n          dir = dirstream.path;\r\n        }\r\n        if (path.length == 0) {\r\n          if (!allowEmpty) {\r\n            throw new FS.ErrnoError(44);;\r\n          }\r\n          return dir;\r\n        }\r\n        return PATH.join2(dir, path);\r\n      },\r\n  doStat(func, path, buf) {\r\n        try {\r\n          var stat = func(path);\r\n        } catch (e) {\r\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\r\n            // an error occurred while trying to look up the path; we should just report ENOTDIR\r\n            return -54;\r\n          }\r\n          throw e;\r\n        }\r\n        HEAP32[((buf)>>2)] = stat.dev;\r\n        HEAP32[(((buf)+(4))>>2)] = stat.mode;\r\n        HEAPU32[(((buf)+(8))>>2)] = stat.nlink;\r\n        HEAP32[(((buf)+(12))>>2)] = stat.uid;\r\n        HEAP32[(((buf)+(16))>>2)] = stat.gid;\r\n        HEAP32[(((buf)+(20))>>2)] = stat.rdev;\r\n        (tempI64 = [stat.size>>>0,(tempDouble = stat.size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(24))>>2)] = tempI64[0],HEAP32[(((buf)+(28))>>2)] = tempI64[1]);\r\n        HEAP32[(((buf)+(32))>>2)] = 4096;\r\n        HEAP32[(((buf)+(36))>>2)] = stat.blocks;\r\n        var atime = stat.atime.getTime();\r\n        var mtime = stat.mtime.getTime();\r\n        var ctime = stat.ctime.getTime();\r\n        (tempI64 = [Math.floor(atime / 1000)>>>0,(tempDouble = Math.floor(atime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(40))>>2)] = tempI64[0],HEAP32[(((buf)+(44))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(48))>>2)] = (atime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(mtime / 1000)>>>0,(tempDouble = Math.floor(mtime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(56))>>2)] = tempI64[0],HEAP32[(((buf)+(60))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(64))>>2)] = (mtime % 1000) * 1000;\r\n        (tempI64 = [Math.floor(ctime / 1000)>>>0,(tempDouble = Math.floor(ctime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(72))>>2)] = tempI64[0],HEAP32[(((buf)+(76))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(80))>>2)] = (ctime % 1000) * 1000;\r\n        (tempI64 = [stat.ino>>>0,(tempDouble = stat.ino,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(88))>>2)] = tempI64[0],HEAP32[(((buf)+(92))>>2)] = tempI64[1]);\r\n        return 0;\r\n      },\r\n  doMsync(addr, stream, len, flags, offset) {\r\n        if (!FS.isFile(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (flags & 2) {\r\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\r\n          return 0;\r\n        }\r\n        var buffer = HEAPU8.slice(addr, addr + len);\r\n        FS.msync(stream, buffer, offset, len, flags);\r\n      },\r\n  varargs:undefined,\r\n  get() {\r\n        // the `+` prepended here is necessary to convince the JSCompiler that varargs is indeed a number.\r\n        var ret = HEAP32[((+SYSCALLS.varargs)>>2)];\r\n        SYSCALLS.varargs += 4;\r\n        return ret;\r\n      },\r\n  getp() { return SYSCALLS.get() },\r\n  getStr(ptr) {\r\n        var ret = UTF8ToString(ptr);\r\n        return ret;\r\n      },\r\n  getStreamFromFD(fd) {\r\n        var stream = FS.getStreamChecked(fd);\r\n        return stream;\r\n      },\r\n  };\r\n  function ___syscall_chdir(path) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.chdir(path);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_dup3(fd, newfd, flags) {\r\n  try {\r\n  \r\n      var old = SYSCALLS.getStreamFromFD(fd);\r\n      if (old.fd === newfd) return -28;\r\n      var existing = FS.getStream(newfd);\r\n      if (existing) FS.close(existing);\r\n      return FS.createStream(old, newfd).fd;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_faccessat(dirfd, path, amode, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      if (amode & ~7) {\r\n        // need a valid mode\r\n        return -28;\r\n      }\r\n      var lookup = FS.lookupPath(path, { follow: true });\r\n      var node = lookup.node;\r\n      if (!node) {\r\n        return -44;\r\n      }\r\n      var perms = '';\r\n      if (amode & 4) perms += 'r';\r\n      if (amode & 2) perms += 'w';\r\n      if (amode & 1) perms += 'x';\r\n      if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {\r\n        return -2;\r\n      }\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  var setErrNo = (value) => {\r\n      HEAP32[((___errno_location())>>2)] = value;\r\n      return value;\r\n    };\r\n  \r\n  function ___syscall_fcntl64(fd, cmd, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (cmd) {\r\n        case 0: {\r\n          var arg = SYSCALLS.get();\r\n          if (arg < 0) {\r\n            return -28;\r\n          }\r\n          while (FS.streams[arg]) {\r\n            arg++;\r\n          }\r\n          var newStream;\r\n          newStream = FS.createStream(stream, arg);\r\n          return newStream.fd;\r\n        }\r\n        case 1:\r\n        case 2:\r\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\r\n        case 3:\r\n          return stream.flags;\r\n        case 4: {\r\n          var arg = SYSCALLS.get();\r\n          stream.flags |= arg;\r\n          return 0;\r\n        }\r\n        case 5: {\r\n          var arg = SYSCALLS.getp();\r\n          var offset = 0;\r\n          // We're always unlocked.\r\n          HEAP16[(((arg)+(offset))>>1)] = 2;\r\n          return 0;\r\n        }\r\n        case 6:\r\n        case 7:\r\n          return 0; // Pretend that the locking is successful.\r\n        case 16:\r\n        case 8:\r\n          return -28; // These are for sockets. We don't have them fully implemented yet.\r\n        case 9:\r\n          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fcntl() returns that, and we set errno ourselves.\r\n          setErrNo(28);\r\n          return -1;\r\n        default: {\r\n          return -28;\r\n        }\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_fstat64(fd, buf) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      return SYSCALLS.doStat(FS.stat, stream.path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\r\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\r\n    };\r\n  \r\n  function ___syscall_getcwd(buf, size) {\r\n  try {\r\n  \r\n      if (size === 0) return -28;\r\n      var cwd = FS.cwd();\r\n      var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\r\n      if (size < cwdLengthInBytes) return -68;\r\n      stringToUTF8(cwd, buf, size);\r\n      return cwdLengthInBytes;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function ___syscall_getdents64(fd, dirp, count) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd)\r\n      stream.getdents ||= FS.readdir(stream.path);\r\n  \r\n      var struct_size = 280;\r\n      var pos = 0;\r\n      var off = FS.llseek(stream, 0, 1);\r\n  \r\n      var idx = Math.floor(off / struct_size);\r\n  \r\n      while (idx < stream.getdents.length && pos + struct_size <= count) {\r\n        var id;\r\n        var type;\r\n        var name = stream.getdents[idx];\r\n        if (name === '.') {\r\n          id = stream.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else if (name === '..') {\r\n          var lookup = FS.lookupPath(stream.path, { parent: true });\r\n          id = lookup.node.id;\r\n          type = 4; // DT_DIR\r\n        }\r\n        else {\r\n          var child = FS.lookupNode(stream.node, name);\r\n          id = child.id;\r\n          type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.\r\n                 FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.\r\n                 FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.\r\n                 8;                             // DT_REG, regular file.\r\n        }\r\n        (tempI64 = [id>>>0,(tempDouble = id,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((dirp + pos)>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(4))>>2)] = tempI64[1]);\r\n        (tempI64 = [(idx + 1) * struct_size>>>0,(tempDouble = (idx + 1) * struct_size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((dirp + pos)+(8))>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(12))>>2)] = tempI64[1]);\r\n        HEAP16[(((dirp + pos)+(16))>>1)] = 280;\r\n        HEAP8[(((dirp + pos)+(18))>>0)] = type;\r\n        stringToUTF8(name, dirp + pos + 19, 256);\r\n        pos += struct_size;\r\n        idx += 1;\r\n      }\r\n      FS.llseek(stream, idx * struct_size, 0);\r\n      return pos;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_ioctl(fd, op, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      switch (op) {\r\n        case 21509: {\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21505: {\r\n          if (!stream.tty) return -59;\r\n          if (stream.tty.ops.ioctl_tcgets) {\r\n            var termios = stream.tty.ops.ioctl_tcgets(stream);\r\n            var argp = SYSCALLS.getp();\r\n            HEAP32[((argp)>>2)] = termios.c_iflag || 0;\r\n            HEAP32[(((argp)+(4))>>2)] = termios.c_oflag || 0;\r\n            HEAP32[(((argp)+(8))>>2)] = termios.c_cflag || 0;\r\n            HEAP32[(((argp)+(12))>>2)] = termios.c_lflag || 0;\r\n            for (var i = 0; i < 32; i++) {\r\n              HEAP8[(((argp + i)+(17))>>0)] = termios.c_cc[i] || 0;\r\n            }\r\n            return 0;\r\n          }\r\n          return 0;\r\n        }\r\n        case 21510:\r\n        case 21511:\r\n        case 21512: {\r\n          if (!stream.tty) return -59;\r\n          return 0; // no-op, not actually adjusting terminal settings\r\n        }\r\n        case 21506:\r\n        case 21507:\r\n        case 21508: {\r\n          if (!stream.tty) return -59;\r\n          if (stream.tty.ops.ioctl_tcsets) {\r\n            var argp = SYSCALLS.getp();\r\n            var c_iflag = HEAP32[((argp)>>2)];\r\n            var c_oflag = HEAP32[(((argp)+(4))>>2)];\r\n            var c_cflag = HEAP32[(((argp)+(8))>>2)];\r\n            var c_lflag = HEAP32[(((argp)+(12))>>2)];\r\n            var c_cc = []\r\n            for (var i = 0; i < 32; i++) {\r\n              c_cc.push(HEAP8[(((argp + i)+(17))>>0)]);\r\n            }\r\n            return stream.tty.ops.ioctl_tcsets(stream.tty, op, { c_iflag, c_oflag, c_cflag, c_lflag, c_cc });\r\n          }\r\n          return 0; // no-op, not actually adjusting terminal settings\r\n        }\r\n        case 21519: {\r\n          if (!stream.tty) return -59;\r\n          var argp = SYSCALLS.getp();\r\n          HEAP32[((argp)>>2)] = 0;\r\n          return 0;\r\n        }\r\n        case 21520: {\r\n          if (!stream.tty) return -59;\r\n          return -28; // not supported\r\n        }\r\n        case 21531: {\r\n          var argp = SYSCALLS.getp();\r\n          return FS.ioctl(stream, op, argp);\r\n        }\r\n        case 21523: {\r\n          // TODO: in theory we should write to the winsize struct that gets\r\n          // passed in, but for now musl doesn't read anything on it\r\n          if (!stream.tty) return -59;\r\n          if (stream.tty.ops.ioctl_tiocgwinsz) {\r\n            var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);\r\n            var argp = SYSCALLS.getp();\r\n            HEAP16[((argp)>>1)] = winsize[0];\r\n            HEAP16[(((argp)+(2))>>1)] = winsize[1];\r\n          }\r\n          return 0;\r\n        }\r\n        case 21524: {\r\n          // TODO: technically, this ioctl call should change the window size.\r\n          // but, since emscripten doesn't have any concept of a terminal window\r\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        case 21515: {\r\n          if (!stream.tty) return -59;\r\n          return 0;\r\n        }\r\n        default: return -28; // not supported\r\n      }\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_lstat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.lstat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_mkdirat(dirfd, path, mode) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      // remove a trailing slash, if one - /a/b/ has basename of '', but\r\n      // we want to create b in the context of this function\r\n      path = PATH.normalize(path);\r\n      if (path[path.length-1] === '/') path = path.substr(0, path.length-1);\r\n      FS.mkdir(path, mode, 0);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_newfstatat(dirfd, path, buf, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      var nofollow = flags & 256;\r\n      var allowEmpty = flags & 4096;\r\n      flags = flags & (~6400);\r\n      path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\r\n      return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_openat(dirfd, path, flags, varargs) {\r\n  SYSCALLS.varargs = varargs;\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      var mode = varargs ? SYSCALLS.get() : 0;\r\n      return FS.open(path, flags, mode).fd;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  \r\n  function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      if (bufsize <= 0) return -28;\r\n      var ret = FS.readlink(path);\r\n  \r\n      var len = Math.min(bufsize, lengthBytesUTF8(ret));\r\n      var endChar = HEAP8[buf+len];\r\n      stringToUTF8(ret, buf, bufsize+1);\r\n      // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)\r\n      // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.\r\n      HEAP8[buf+len] = endChar;\r\n      return len;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_renameat(olddirfd, oldpath, newdirfd, newpath) {\r\n  try {\r\n  \r\n      oldpath = SYSCALLS.getStr(oldpath);\r\n      newpath = SYSCALLS.getStr(newpath);\r\n      oldpath = SYSCALLS.calculateAt(olddirfd, oldpath);\r\n      newpath = SYSCALLS.calculateAt(newdirfd, newpath);\r\n      FS.rename(oldpath, newpath);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_rmdir(path) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      FS.rmdir(path);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_stat64(path, buf) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      return SYSCALLS.doStat(FS.stat, path, buf);\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall_unlinkat(dirfd, path, flags) {\r\n  try {\r\n  \r\n      path = SYSCALLS.getStr(path);\r\n      path = SYSCALLS.calculateAt(dirfd, path);\r\n      if (flags === 0) {\r\n        FS.unlink(path);\r\n      } else if (flags === 512) {\r\n        FS.rmdir(path);\r\n      } else {\r\n        abort('Invalid flags passed to unlinkat');\r\n      }\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  var nowIsMonotonic = 1;\r\n  var __emscripten_get_now_is_monotonic = () => nowIsMonotonic;\r\n\r\n  var __emscripten_throw_longjmp = () => {\r\n      throw Infinity;\r\n    };\r\n\r\n  var convertI32PairToI53Checked = (lo, hi) => {\r\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\r\n    };\r\n  function __gmtime_js(time_low, time_high,tmPtr) {\r\n    var time = convertI32PairToI53Checked(time_low, time_high);;\r\n  \r\n    \r\n      var date = new Date(time * 1000);\r\n      HEAP32[((tmPtr)>>2)] = date.getUTCSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getUTCMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getUTCHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getUTCDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getUTCMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getUTCFullYear()-1900;\r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getUTCDay();\r\n      var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);\r\n      var yday = ((date.getTime() - start) / (1000 * 60 * 60 * 24))|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n    ;\r\n  }\r\n\r\n  var isLeapYear = (year) => year%4 === 0 && (year%100 !== 0 || year%400 === 0);\r\n  \r\n  var MONTH_DAYS_LEAP_CUMULATIVE = [0,31,60,91,121,152,182,213,244,274,305,335];\r\n  \r\n  var MONTH_DAYS_REGULAR_CUMULATIVE = [0,31,59,90,120,151,181,212,243,273,304,334];\r\n  var ydayFromDate = (date) => {\r\n      var leap = isLeapYear(date.getFullYear());\r\n      var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\r\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1; // -1 since it's days since Jan 1\r\n  \r\n      return yday;\r\n    };\r\n  \r\n  function __localtime_js(time_low, time_high,tmPtr) {\r\n    var time = convertI32PairToI53Checked(time_low, time_high);;\r\n  \r\n    \r\n      var date = new Date(time*1000);\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getFullYear()-1900;\r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n  \r\n      var yday = ydayFromDate(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      HEAP32[(((tmPtr)+(36))>>2)] = -(date.getTimezoneOffset() * 60);\r\n  \r\n      // Attention: DST is in December in South, and some regions don't have DST at all.\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\r\n      HEAP32[(((tmPtr)+(32))>>2)] = dst;\r\n    ;\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  var __mktime_js = function(tmPtr) {\r\n  \r\n    var ret = (() => { \r\n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\r\n                          HEAP32[(((tmPtr)+(16))>>2)],\r\n                          HEAP32[(((tmPtr)+(12))>>2)],\r\n                          HEAP32[(((tmPtr)+(8))>>2)],\r\n                          HEAP32[(((tmPtr)+(4))>>2)],\r\n                          HEAP32[((tmPtr)>>2)],\r\n                          0);\r\n  \r\n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\r\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\r\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\r\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\r\n      var guessedOffset = date.getTimezoneOffset();\r\n      var start = new Date(date.getFullYear(), 0, 1);\r\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\r\n      var winterOffset = start.getTimezoneOffset();\r\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\r\n      if (dst < 0) {\r\n        // Attention: some regions don't have DST at all.\r\n        HEAP32[(((tmPtr)+(32))>>2)] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\r\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\r\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\r\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\r\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\r\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\r\n      }\r\n  \r\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\r\n      var yday = ydayFromDate(date)|0;\r\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\r\n      // To match expected behavior, update fields from date\r\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\r\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\r\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\r\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\r\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\r\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getYear();\r\n  \r\n      var timeMs = date.getTime();\r\n      if (isNaN(timeMs)) {\r\n        setErrNo(61);\r\n        return -1;\r\n      }\r\n      // Return time in microseconds\r\n      return timeMs / 1000;\r\n     })();\r\n    return (setTempRet0((tempDouble = ret,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)), ret>>>0);\r\n  };\r\n\r\n  \r\n  \r\n  var stringToNewUTF8 = (str) => {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = _malloc(size);\r\n      if (ret) stringToUTF8(str, ret, size);\r\n      return ret;\r\n    };\r\n  var __tzset_js = (timezone, daylight, tzname) => {\r\n      // TODO: Use (malleable) environment variables instead of system settings.\r\n      var currentYear = new Date().getFullYear();\r\n      var winter = new Date(currentYear, 0, 1);\r\n      var summer = new Date(currentYear, 6, 1);\r\n      var winterOffset = winter.getTimezoneOffset();\r\n      var summerOffset = summer.getTimezoneOffset();\r\n  \r\n      // Local standard timezone offset. Local standard time is not adjusted for daylight savings.\r\n      // This code uses the fact that getTimezoneOffset returns a greater value during Standard Time versus Daylight Saving Time (DST).\r\n      // Thus it determines the expected output during Standard Time, and it compares whether the output of the given date the same (Standard) or less (DST).\r\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\r\n  \r\n      // timezone is specified as seconds west of UTC (\"The external variable\r\n      // `timezone` shall be set to the difference, in seconds, between\r\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\r\n      // as returned by stdTimezoneOffset.\r\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\r\n      HEAPU32[((timezone)>>2)] = stdTimezoneOffset * 60;\r\n  \r\n      HEAP32[((daylight)>>2)] = Number(winterOffset != summerOffset);\r\n  \r\n      function extractZone(date) {\r\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\r\n        return match ? match[1] : \"GMT\";\r\n      };\r\n      var winterName = extractZone(winter);\r\n      var summerName = extractZone(summer);\r\n      var winterNamePtr = stringToNewUTF8(winterName);\r\n      var summerNamePtr = stringToNewUTF8(summerName);\r\n      if (summerOffset < winterOffset) {\r\n        // Northern hemisphere\r\n        HEAPU32[((tzname)>>2)] = winterNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = summerNamePtr;\r\n      } else {\r\n        HEAPU32[((tzname)>>2)] = summerNamePtr;\r\n        HEAPU32[(((tzname)+(4))>>2)] = winterNamePtr;\r\n      }\r\n    };\r\n\r\n  var _abort = () => {\r\n      abort('');\r\n    };\r\n\r\n  var _emscripten_set_main_loop_timing = (mode, value) => {\r\n      Browser.mainLoop.timingMode = mode;\r\n      Browser.mainLoop.timingValue = value;\r\n  \r\n      if (!Browser.mainLoop.func) {\r\n        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.\r\n      }\r\n  \r\n      if (!Browser.mainLoop.running) {\r\n        \r\n        Browser.mainLoop.running = true;\r\n      }\r\n      if (mode == 0) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {\r\n          var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now())|0;\r\n          setTimeout(Browser.mainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop\r\n        };\r\n        Browser.mainLoop.method = 'timeout';\r\n      } else if (mode == 1) {\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {\r\n          Browser.requestAnimationFrame(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'rAF';\r\n      } else if (mode == 2) {\r\n        if (typeof Browser.setImmediate == 'undefined') {\r\n          if (typeof setImmediate == 'undefined') {\r\n            // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)\r\n            var setImmediates = [];\r\n            var emscriptenMainLoopMessageId = 'setimmediate';\r\n            /** @param {Event} event */\r\n            var Browser_setImmediate_messageHandler = (event) => {\r\n              // When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,\r\n              // so check for both cases.\r\n              if (event.data === emscriptenMainLoopMessageId || event.data.target === emscriptenMainLoopMessageId) {\r\n                event.stopPropagation();\r\n                setImmediates.shift()();\r\n              }\r\n            };\r\n            addEventListener(\"message\", Browser_setImmediate_messageHandler, true);\r\n            Browser.setImmediate = /** @type{function(function(): ?, ...?): number} */(function Browser_emulated_setImmediate(func) {\r\n              setImmediates.push(func);\r\n              if (ENVIRONMENT_IS_WORKER) {\r\n                if (Module['setImmediates'] === undefined) Module['setImmediates'] = [];\r\n                Module['setImmediates'].push(func);\r\n                postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js\r\n              } else postMessage(emscriptenMainLoopMessageId, \"*\"); // On the main thread, can just send the message to itself.\r\n            });\r\n          } else {\r\n            Browser.setImmediate = setImmediate;\r\n          }\r\n        }\r\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {\r\n          Browser.setImmediate(Browser.mainLoop.runner);\r\n        };\r\n        Browser.mainLoop.method = 'immediate';\r\n      }\r\n      return 0;\r\n    };\r\n  \r\n  var _emscripten_get_now;\r\n      // Modern environment where performance.now() is supported:\r\n      // N.B. a shorter form \"_emscripten_get_now = performance.now;\" is\r\n      // unfortunately not allowed even in current browsers (e.g. FF Nightly 75).\r\n      _emscripten_get_now = () => performance.now();\r\n  ;\r\n  \r\n  \r\n    /**\r\n     * @param {number=} arg\r\n     * @param {boolean=} noSetTiming\r\n     */\r\n  var setMainLoop = (browserIterationFunc, fps, simulateInfiniteLoop, arg, noSetTiming) => {\r\n      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');\r\n  \r\n      Browser.mainLoop.func = browserIterationFunc;\r\n      Browser.mainLoop.arg = arg;\r\n  \r\n      // Closure compiler bug(?): Closure does not see that the assignment\r\n      //   var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop\r\n      // is a value copy of a number (even with the JSDoc @type annotation)\r\n      // but optimizeis the code as if the assignment was a reference assignment,\r\n      // which results in Browser.mainLoop.pause() not working. Hence use a\r\n      // workaround to make Closure believe this is a value copy that should occur:\r\n      // (TODO: Minimize this down to a small test case and report - was unable\r\n      // to reproduce in a small written test case)\r\n      /** @type{number} */\r\n      var thisMainLoopId = (() => Browser.mainLoop.currentlyRunningMainloop)();\r\n      function checkIsRunning() {\r\n        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) {\r\n          \r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n  \r\n      // We create the loop runner here but it is not actually running until\r\n      // _emscripten_set_main_loop_timing is called (which might happen a\r\n      // later time).  This member signifies that the current runner has not\r\n      // yet been started so that we can call runtimeKeepalivePush when it\r\n      // gets it timing set for the first time.\r\n      Browser.mainLoop.running = false;\r\n      Browser.mainLoop.runner = function Browser_mainLoop_runner() {\r\n        if (ABORT) return;\r\n        if (Browser.mainLoop.queue.length > 0) {\r\n          var start = Date.now();\r\n          var blocker = Browser.mainLoop.queue.shift();\r\n          blocker.func(blocker.arg);\r\n          if (Browser.mainLoop.remainingBlockers) {\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);\r\n            if (blocker.counted) {\r\n              Browser.mainLoop.remainingBlockers = next;\r\n            } else {\r\n              // not counted, but move the progress along a tiny bit\r\n              next = next + 0.5; // do not steal all the next one's progress\r\n              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;\r\n            }\r\n          }\r\n          Browser.mainLoop.updateStatus();\r\n  \r\n          // catches pause/resume main loop from blocker execution\r\n          if (!checkIsRunning()) return;\r\n  \r\n          setTimeout(Browser.mainLoop.runner, 0);\r\n          return;\r\n        }\r\n  \r\n        // catch pauses from non-main loop sources\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Implement very basic swap interval control\r\n        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;\r\n        if (Browser.mainLoop.timingMode == 1 && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {\r\n          // Not the scheduled time to render this frame - skip.\r\n          Browser.mainLoop.scheduler();\r\n          return;\r\n        } else if (Browser.mainLoop.timingMode == 0) {\r\n          Browser.mainLoop.tickStartTime = _emscripten_get_now();\r\n        }\r\n  \r\n        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize\r\n        // VBO double-buffering and reduce GPU stalls.\r\n        GL.newRenderingFrameStarted();\r\n  \r\n        Browser.mainLoop.runIter(browserIterationFunc);\r\n  \r\n        // catch pauses from the main loop itself\r\n        if (!checkIsRunning()) return;\r\n  \r\n        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able\r\n        // to queue the newest produced audio samples.\r\n        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()\r\n        //       do not need to be hardcoded into this function, but can be more generic.\r\n        if (typeof SDL == 'object') SDL.audio?.queueNewAudioData?.();\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (!noSetTiming) {\r\n        if (fps && fps > 0) {\r\n          _emscripten_set_main_loop_timing(0, 1000.0 / fps);\r\n        } else {\r\n          // Do rAF by rendering each frame (no decimating)\r\n          _emscripten_set_main_loop_timing(1, 1);\r\n        }\r\n  \r\n        Browser.mainLoop.scheduler();\r\n      }\r\n  \r\n      if (simulateInfiniteLoop) {\r\n        throw 'unwind';\r\n      }\r\n    };\r\n  \r\n  var handleException = (e) => {\r\n      // Certain exception types we do not treat as errors since they are used for\r\n      // internal control flow.\r\n      // 1. ExitStatus, which is thrown by exit()\r\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\r\n      //    that wish to return to JS event loop.\r\n      if (e instanceof ExitStatus || e == 'unwind') {\r\n        return EXITSTATUS;\r\n      }\r\n      quit_(1, e);\r\n    };\r\n  \r\n  \r\n  var runtimeKeepaliveCounter = 0;\r\n  var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\r\n  \r\n  var _proc_exit = (code) => {\r\n      EXITSTATUS = code;\r\n      if (!keepRuntimeAlive()) {\r\n        Module['onExit']?.(code);\r\n        ABORT = true;\r\n      }\r\n      quit_(code, new ExitStatus(code));\r\n    };\r\n  /** @suppress {duplicate } */\r\n  /** @param {boolean|number=} implicit */\r\n  var exitJS = (status, implicit) => {\r\n      EXITSTATUS = status;\r\n  \r\n      _proc_exit(status);\r\n    };\r\n  var _exit = exitJS;\r\n  \r\n  \r\n  var maybeExit = () => {\r\n      if (!keepRuntimeAlive()) {\r\n        try {\r\n          _exit(EXITSTATUS);\r\n        } catch (e) {\r\n          handleException(e);\r\n        }\r\n      }\r\n    };\r\n  var callUserCallback = (func) => {\r\n      if (ABORT) {\r\n        return;\r\n      }\r\n      try {\r\n        func();\r\n        maybeExit();\r\n      } catch (e) {\r\n        handleException(e);\r\n      }\r\n    };\r\n  \r\n  /** @param {number=} timeout */\r\n  var safeSetTimeout = (func, timeout) => {\r\n      \r\n      return setTimeout(() => {\r\n        \r\n        callUserCallback(func);\r\n      }, timeout);\r\n    };\r\n  \r\n  var warnOnce = (text) => {\r\n      warnOnce.shown ||= {};\r\n      if (!warnOnce.shown[text]) {\r\n        warnOnce.shown[text] = 1;\r\n        err(text);\r\n      }\r\n    };\r\n  \r\n  \r\n  \r\n  var Browser = {\r\n  mainLoop:{\r\n  running:false,\r\n  scheduler:null,\r\n  method:\"\",\r\n  currentlyRunningMainloop:0,\r\n  func:null,\r\n  arg:0,\r\n  timingMode:0,\r\n  timingValue:0,\r\n  currentFrameNumber:0,\r\n  queue:[],\r\n  pause() {\r\n          Browser.mainLoop.scheduler = null;\r\n          // Incrementing this signals the previous main loop that it's now become old, and it must return.\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n        },\r\n  resume() {\r\n          Browser.mainLoop.currentlyRunningMainloop++;\r\n          var timingMode = Browser.mainLoop.timingMode;\r\n          var timingValue = Browser.mainLoop.timingValue;\r\n          var func = Browser.mainLoop.func;\r\n          Browser.mainLoop.func = null;\r\n          // do not set timing and call scheduler, we will do it on the next lines\r\n          setMainLoop(func, 0, false, Browser.mainLoop.arg, true);\r\n          _emscripten_set_main_loop_timing(timingMode, timingValue);\r\n          Browser.mainLoop.scheduler();\r\n        },\r\n  updateStatus() {\r\n          if (Module['setStatus']) {\r\n            var message = Module['statusMessage'] || 'Please wait...';\r\n            var remaining = Browser.mainLoop.remainingBlockers;\r\n            var expected = Browser.mainLoop.expectedBlockers;\r\n            if (remaining) {\r\n              if (remaining < expected) {\r\n                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');\r\n              } else {\r\n                Module['setStatus'](message);\r\n              }\r\n            } else {\r\n              Module['setStatus']('');\r\n            }\r\n          }\r\n        },\r\n  runIter(func) {\r\n          if (ABORT) return;\r\n          if (Module['preMainLoop']) {\r\n            var preRet = Module['preMainLoop']();\r\n            if (preRet === false) {\r\n              return; // |return false| skips a frame\r\n            }\r\n          }\r\n          callUserCallback(func);\r\n          Module['postMainLoop']?.();\r\n        },\r\n  },\r\n  isFullscreen:false,\r\n  pointerLock:false,\r\n  moduleContextCreatedCallbacks:[],\r\n  workers:[],\r\n  init() {\r\n        if (Browser.initted) return;\r\n        Browser.initted = true;\r\n  \r\n        // Support for plugins that can process preloaded files. You can add more of these to\r\n        // your app by creating and appending to preloadPlugins.\r\n        //\r\n        // Each plugin is asked if it can handle a file based on the file's name. If it can,\r\n        // it is given the file's raw data. When it is done, it calls a callback with the file's\r\n        // (possibly modified) data. For example, a plugin might decompress a file, or it\r\n        // might create some side data structure for use later (like an Image element, etc.).\r\n  \r\n        var imagePlugin = {};\r\n        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {\r\n          return !Module.noImageDecoding && /\\.(jpg|jpeg|png|bmp)$/i.test(name);\r\n        };\r\n        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {\r\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n          if (b.size !== byteArray.length) { // Safari bug #118630\r\n            // Safari's Blob can only take an ArrayBuffer\r\n            b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });\r\n          }\r\n          var url = URL.createObjectURL(b);\r\n          var img = new Image();\r\n          img.onload = () => {\r\n            assert(img.complete, `Image ${name} could not be decoded`);\r\n            var canvas = /** @type {!HTMLCanvasElement} */ (document.createElement('canvas'));\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            var ctx = canvas.getContext('2d');\r\n            ctx.drawImage(img, 0, 0);\r\n            preloadedImages[name] = canvas;\r\n            URL.revokeObjectURL(url);\r\n            onload?.(byteArray);\r\n          };\r\n          img.onerror = (event) => {\r\n            err(`Image ${url} could not be decoded`);\r\n            onerror?.();\r\n          };\r\n          img.src = url;\r\n        };\r\n        preloadPlugins.push(imagePlugin);\r\n  \r\n        var audioPlugin = {};\r\n        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {\r\n          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };\r\n        };\r\n        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {\r\n          var done = false;\r\n          function finish(audio) {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = audio;\r\n            onload?.(byteArray);\r\n          }\r\n          function fail() {\r\n            if (done) return;\r\n            done = true;\r\n            preloadedAudios[name] = new Audio(); // empty shim\r\n            onerror?.();\r\n          }\r\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\r\n          var url = URL.createObjectURL(b); // XXX we never revoke this!\r\n          var audio = new Audio();\r\n          audio.addEventListener('canplaythrough', () => finish(audio), false); // use addEventListener due to chromium bug 124926\r\n          audio.onerror = function audio_onerror(event) {\r\n            if (done) return;\r\n            err(`warning: browser could not fully decode audio ${name}, trying slower base64 approach`);\r\n            function encode64(data) {\r\n              var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n              var PAD = '=';\r\n              var ret = '';\r\n              var leftchar = 0;\r\n              var leftbits = 0;\r\n              for (var i = 0; i < data.length; i++) {\r\n                leftchar = (leftchar << 8) | data[i];\r\n                leftbits += 8;\r\n                while (leftbits >= 6) {\r\n                  var curr = (leftchar >> (leftbits-6)) & 0x3f;\r\n                  leftbits -= 6;\r\n                  ret += BASE[curr];\r\n                }\r\n              }\r\n              if (leftbits == 2) {\r\n                ret += BASE[(leftchar&3) << 4];\r\n                ret += PAD + PAD;\r\n              } else if (leftbits == 4) {\r\n                ret += BASE[(leftchar&0xf) << 2];\r\n                ret += PAD;\r\n              }\r\n              return ret;\r\n            }\r\n            audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);\r\n            finish(audio); // we don't wait for confirmation this worked - but it's worth trying\r\n          };\r\n          audio.src = url;\r\n          // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror\r\n          safeSetTimeout(() => {\r\n            finish(audio); // try to use it even though it is not necessarily ready to play\r\n          }, 10000);\r\n        };\r\n        preloadPlugins.push(audioPlugin);\r\n  \r\n        // Canvas event setup\r\n  \r\n        function pointerLockChange() {\r\n          Browser.pointerLock = document['pointerLockElement'] === Module['canvas'] ||\r\n                                document['mozPointerLockElement'] === Module['canvas'] ||\r\n                                document['webkitPointerLockElement'] === Module['canvas'] ||\r\n                                document['msPointerLockElement'] === Module['canvas'];\r\n        }\r\n        var canvas = Module['canvas'];\r\n        if (canvas) {\r\n          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module\r\n          // Module['forcedAspectRatio'] = 4 / 3;\r\n  \r\n          canvas.requestPointerLock = canvas['requestPointerLock'] ||\r\n                                      canvas['mozRequestPointerLock'] ||\r\n                                      canvas['webkitRequestPointerLock'] ||\r\n                                      canvas['msRequestPointerLock'] ||\r\n                                      (() => {});\r\n          canvas.exitPointerLock = document['exitPointerLock'] ||\r\n                                   document['mozExitPointerLock'] ||\r\n                                   document['webkitExitPointerLock'] ||\r\n                                   document['msExitPointerLock'] ||\r\n                                   (() => {}); // no-op if function does not exist\r\n          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\r\n  \r\n          document.addEventListener('pointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mozpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);\r\n          document.addEventListener('mspointerlockchange', pointerLockChange, false);\r\n  \r\n          if (Module['elementPointerLock']) {\r\n            canvas.addEventListener(\"click\", (ev) => {\r\n              if (!Browser.pointerLock && Module['canvas'].requestPointerLock) {\r\n                Module['canvas'].requestPointerLock();\r\n                ev.preventDefault();\r\n              }\r\n            }, false);\r\n          }\r\n        }\r\n      },\r\n  createContext(/** @type {HTMLCanvasElement} */ canvas, useWebGL, setInModule, webGLContextAttributes) {\r\n        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.\r\n  \r\n        var ctx;\r\n        var contextHandle;\r\n        if (useWebGL) {\r\n          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.\r\n          var contextAttributes = {\r\n            antialias: false,\r\n            alpha: false,\r\n            majorVersion: (typeof WebGL2RenderingContext != 'undefined') ? 2 : 1,\r\n          };\r\n  \r\n          if (webGLContextAttributes) {\r\n            for (var attribute in webGLContextAttributes) {\r\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\r\n            }\r\n          }\r\n  \r\n          // This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not\r\n          // actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function\r\n          // Browser.createContext() should not even be emitted.\r\n          if (typeof GL != 'undefined') {\r\n            contextHandle = GL.createContext(canvas, contextAttributes);\r\n            if (contextHandle) {\r\n              ctx = GL.getContext(contextHandle).GLctx;\r\n            }\r\n          }\r\n        } else {\r\n          ctx = canvas.getContext('2d');\r\n        }\r\n  \r\n        if (!ctx) return null;\r\n  \r\n        if (setInModule) {\r\n          if (!useWebGL) assert(typeof GLctx == 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');\r\n  \r\n          Module.ctx = ctx;\r\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\r\n          Module.useWebGL = useWebGL;\r\n          Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\r\n          Browser.init();\r\n        }\r\n        return ctx;\r\n      },\r\n  destroyContext(canvas, useWebGL, setInModule) {},\r\n  fullscreenHandlersInstalled:false,\r\n  lockPointer:undefined,\r\n  resizeCanvas:undefined,\r\n  requestFullscreen(lockPointer, resizeCanvas) {\r\n        Browser.lockPointer = lockPointer;\r\n        Browser.resizeCanvas = resizeCanvas;\r\n        if (typeof Browser.lockPointer == 'undefined') Browser.lockPointer = true;\r\n        if (typeof Browser.resizeCanvas == 'undefined') Browser.resizeCanvas = false;\r\n  \r\n        var canvas = Module['canvas'];\r\n        function fullscreenChange() {\r\n          Browser.isFullscreen = false;\r\n          var canvasContainer = canvas.parentNode;\r\n          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n               document['webkitCurrentFullScreenElement']) === canvasContainer) {\r\n            canvas.exitFullscreen = Browser.exitFullscreen;\r\n            if (Browser.lockPointer) canvas.requestPointerLock();\r\n            Browser.isFullscreen = true;\r\n            if (Browser.resizeCanvas) {\r\n              Browser.setFullscreenCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          } else {\r\n            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen\r\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\r\n            canvasContainer.parentNode.removeChild(canvasContainer);\r\n  \r\n            if (Browser.resizeCanvas) {\r\n              Browser.setWindowedCanvasSize();\r\n            } else {\r\n              Browser.updateCanvasDimensions(canvas);\r\n            }\r\n          }\r\n          Module['onFullScreen']?.(Browser.isFullscreen);\r\n          Module['onFullscreen']?.(Browser.isFullscreen);\r\n        }\r\n  \r\n        if (!Browser.fullscreenHandlersInstalled) {\r\n          Browser.fullscreenHandlersInstalled = true;\r\n          document.addEventListener('fullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('mozfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);\r\n          document.addEventListener('MSFullscreenChange', fullscreenChange, false);\r\n        }\r\n  \r\n        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root\r\n        var canvasContainer = document.createElement(\"div\");\r\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\r\n        canvasContainer.appendChild(canvas);\r\n  \r\n        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)\r\n        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||\r\n                                            canvasContainer['mozRequestFullScreen'] ||\r\n                                            canvasContainer['msRequestFullscreen'] ||\r\n                                           (canvasContainer['webkitRequestFullscreen'] ? () => canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) : null) ||\r\n                                           (canvasContainer['webkitRequestFullScreen'] ? () => canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) : null);\r\n  \r\n        canvasContainer.requestFullscreen();\r\n      },\r\n  exitFullscreen() {\r\n        // This is workaround for chrome. Trying to exit from fullscreen\r\n        // not in fullscreen state will cause \"TypeError: Document not active\"\r\n        // in chrome. See https://github.com/emscripten-core/emscripten/pull/8236\r\n        if (!Browser.isFullscreen) {\r\n          return false;\r\n        }\r\n  \r\n        var CFS = document['exitFullscreen'] ||\r\n                  document['cancelFullScreen'] ||\r\n                  document['mozCancelFullScreen'] ||\r\n                  document['msExitFullscreen'] ||\r\n                  document['webkitCancelFullScreen'] ||\r\n            (() => {});\r\n        CFS.apply(document, []);\r\n        return true;\r\n      },\r\n  nextRAF:0,\r\n  fakeRequestAnimationFrame(func) {\r\n        // try to keep 60fps between calls to here\r\n        var now = Date.now();\r\n        if (Browser.nextRAF === 0) {\r\n          Browser.nextRAF = now + 1000/60;\r\n        } else {\r\n          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0\r\n            Browser.nextRAF += 1000/60;\r\n          }\r\n        }\r\n        var delay = Math.max(Browser.nextRAF - now, 0);\r\n        setTimeout(func, delay);\r\n      },\r\n  requestAnimationFrame(func) {\r\n        if (typeof requestAnimationFrame == 'function') {\r\n          requestAnimationFrame(func);\r\n          return;\r\n        }\r\n        var RAF = Browser.fakeRequestAnimationFrame;\r\n        RAF(func);\r\n      },\r\n  safeSetTimeout(func, timeout) {\r\n        // Legacy function, this is used by the SDL2 port so we need to keep it\r\n        // around at least until that is updated.\r\n        // See https://github.com/libsdl-org/SDL/pull/6304\r\n        return safeSetTimeout(func, timeout);\r\n      },\r\n  safeRequestAnimationFrame(func) {\r\n        \r\n        return Browser.requestAnimationFrame(() => {\r\n          \r\n          callUserCallback(func);\r\n        });\r\n      },\r\n  getMimetype(name) {\r\n        return {\r\n          'jpg': 'image/jpeg',\r\n          'jpeg': 'image/jpeg',\r\n          'png': 'image/png',\r\n          'bmp': 'image/bmp',\r\n          'ogg': 'audio/ogg',\r\n          'wav': 'audio/wav',\r\n          'mp3': 'audio/mpeg'\r\n        }[name.substr(name.lastIndexOf('.')+1)];\r\n      },\r\n  getUserMedia(func) {\r\n        window.getUserMedia ||= navigator['getUserMedia'] ||\r\n                                navigator['mozGetUserMedia'];\r\n        window.getUserMedia(func);\r\n      },\r\n  getMovementX(event) {\r\n        return event['movementX'] ||\r\n               event['mozMovementX'] ||\r\n               event['webkitMovementX'] ||\r\n               0;\r\n      },\r\n  getMovementY(event) {\r\n        return event['movementY'] ||\r\n               event['mozMovementY'] ||\r\n               event['webkitMovementY'] ||\r\n               0;\r\n      },\r\n  getMouseWheelDelta(event) {\r\n        var delta = 0;\r\n        switch (event.type) {\r\n          case 'DOMMouseScroll':\r\n            // 3 lines make up a step\r\n            delta = event.detail / 3;\r\n            break;\r\n          case 'mousewheel':\r\n            // 120 units make up a step\r\n            delta = event.wheelDelta / 120;\r\n            break;\r\n          case 'wheel':\r\n            delta = event.deltaY\r\n            switch (event.deltaMode) {\r\n              case 0:\r\n                // DOM_DELTA_PIXEL: 100 pixels make up a step\r\n                delta /= 100;\r\n                break;\r\n              case 1:\r\n                // DOM_DELTA_LINE: 3 lines make up a step\r\n                delta /= 3;\r\n                break;\r\n              case 2:\r\n                // DOM_DELTA_PAGE: A page makes up 80 steps\r\n                delta *= 80;\r\n                break;\r\n              default:\r\n                throw 'unrecognized mouse wheel delta mode: ' + event.deltaMode;\r\n            }\r\n            break;\r\n          default:\r\n            throw 'unrecognized mouse wheel event: ' + event.type;\r\n        }\r\n        return delta;\r\n      },\r\n  mouseX:0,\r\n  mouseY:0,\r\n  mouseMovementX:0,\r\n  mouseMovementY:0,\r\n  touches:{\r\n  },\r\n  lastTouches:{\r\n  },\r\n  calculateMouseCoords(pageX, pageY) {\r\n        // Calculate the movement based on the changes\r\n        // in the coordinates.\r\n        var rect = Module[\"canvas\"].getBoundingClientRect();\r\n        var cw = Module[\"canvas\"].width;\r\n        var ch = Module[\"canvas\"].height;\r\n  \r\n        // Neither .scrollX or .pageXOffset are defined in a spec, but\r\n        // we prefer .scrollX because it is currently in a spec draft.\r\n        // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)\r\n        var scrollX = ((typeof window.scrollX != 'undefined') ? window.scrollX : window.pageXOffset);\r\n        var scrollY = ((typeof window.scrollY != 'undefined') ? window.scrollY : window.pageYOffset);\r\n        var adjustedX = pageX - (scrollX + rect.left);\r\n        var adjustedY = pageY - (scrollY + rect.top);\r\n  \r\n        // the canvas might be CSS-scaled compared to its backbuffer;\r\n        // SDL-using content will want mouse coordinates in terms\r\n        // of backbuffer units.\r\n        adjustedX = adjustedX * (cw / rect.width);\r\n        adjustedY = adjustedY * (ch / rect.height);\r\n  \r\n        return { x: adjustedX, y: adjustedY };\r\n      },\r\n  setMouseCoords(pageX, pageY) {\r\n        const {x, y} = Browser.calculateMouseCoords(pageX, pageY);\r\n        Browser.mouseMovementX = x - Browser.mouseX;\r\n        Browser.mouseMovementY = y - Browser.mouseY;\r\n        Browser.mouseX = x;\r\n        Browser.mouseY = y;\r\n      },\r\n  calculateMouseEvent(event) { // event should be mousemove, mousedown or mouseup\r\n        if (Browser.pointerLock) {\r\n          // When the pointer is locked, calculate the coordinates\r\n          // based on the movement of the mouse.\r\n          // Workaround for Firefox bug 764498\r\n          if (event.type != 'mousemove' &&\r\n              ('mozMovementX' in event)) {\r\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\r\n          } else {\r\n            Browser.mouseMovementX = Browser.getMovementX(event);\r\n            Browser.mouseMovementY = Browser.getMovementY(event);\r\n          }\r\n  \r\n          // check if SDL is available\r\n          if (typeof SDL != \"undefined\") {\r\n            Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;\r\n            Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;\r\n          } else {\r\n            // just add the mouse delta to the current absolut mouse position\r\n            // FIXME: ideally this should be clamped against the canvas size and zero\r\n            Browser.mouseX += Browser.mouseMovementX;\r\n            Browser.mouseY += Browser.mouseMovementY;\r\n          }\r\n        } else {\r\n          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {\r\n            var touch = event.touch;\r\n            if (touch === undefined) {\r\n              return; // the \"touch\" property is only defined in SDL\r\n  \r\n            }\r\n            var coords = Browser.calculateMouseCoords(touch.pageX, touch.pageY);\r\n  \r\n            if (event.type === 'touchstart') {\r\n              Browser.lastTouches[touch.identifier] = coords;\r\n              Browser.touches[touch.identifier] = coords;\r\n            } else if (event.type === 'touchend' || event.type === 'touchmove') {\r\n              var last = Browser.touches[touch.identifier];\r\n              last ||= coords;\r\n              Browser.lastTouches[touch.identifier] = last;\r\n              Browser.touches[touch.identifier] = coords;\r\n            }\r\n            return;\r\n          }\r\n  \r\n          Browser.setMouseCoords(event.pageX, event.pageY);\r\n        }\r\n      },\r\n  resizeListeners:[],\r\n  updateResizeListeners() {\r\n        var canvas = Module['canvas'];\r\n        Browser.resizeListeners.forEach((listener) => listener(canvas.width, canvas.height));\r\n      },\r\n  setCanvasSize(width, height, noUpdates) {\r\n        var canvas = Module['canvas'];\r\n        Browser.updateCanvasDimensions(canvas, width, height);\r\n        if (!noUpdates) Browser.updateResizeListeners();\r\n      },\r\n  windowedWidth:0,\r\n  windowedHeight:0,\r\n  setFullscreenCanvasSize() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags | 0x00800000; // set SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },\r\n  setWindowedCanvasSize() {\r\n        // check if SDL is available\r\n        if (typeof SDL != \"undefined\") {\r\n          var flags = HEAPU32[((SDL.screen)>>2)];\r\n          flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag\r\n          HEAP32[((SDL.screen)>>2)] = flags;\r\n        }\r\n        Browser.updateCanvasDimensions(Module['canvas']);\r\n        Browser.updateResizeListeners();\r\n      },\r\n  updateCanvasDimensions(canvas, wNative, hNative) {\r\n        if (wNative && hNative) {\r\n          canvas.widthNative = wNative;\r\n          canvas.heightNative = hNative;\r\n        } else {\r\n          wNative = canvas.widthNative;\r\n          hNative = canvas.heightNative;\r\n        }\r\n        var w = wNative;\r\n        var h = hNative;\r\n        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {\r\n          if (w/h < Module['forcedAspectRatio']) {\r\n            w = Math.round(h * Module['forcedAspectRatio']);\r\n          } else {\r\n            h = Math.round(w / Module['forcedAspectRatio']);\r\n          }\r\n        }\r\n        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||\r\n             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\r\n             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {\r\n           var factor = Math.min(screen.width / w, screen.height / h);\r\n           w = Math.round(w * factor);\r\n           h = Math.round(h * factor);\r\n        }\r\n        if (Browser.resizeCanvas) {\r\n          if (canvas.width  != w) canvas.width  = w;\r\n          if (canvas.height != h) canvas.height = h;\r\n          if (typeof canvas.style != 'undefined') {\r\n            canvas.style.removeProperty( \"width\");\r\n            canvas.style.removeProperty(\"height\");\r\n          }\r\n        } else {\r\n          if (canvas.width  != wNative) canvas.width  = wNative;\r\n          if (canvas.height != hNative) canvas.height = hNative;\r\n          if (typeof canvas.style != 'undefined') {\r\n            if (w != wNative || h != hNative) {\r\n              canvas.style.setProperty( \"width\", w + \"px\", \"important\");\r\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\r\n            } else {\r\n              canvas.style.removeProperty( \"width\");\r\n              canvas.style.removeProperty(\"height\");\r\n            }\r\n          }\r\n        }\r\n      },\r\n  };\r\n  \r\n  var EGL = {\r\n  errorCode:12288,\r\n  defaultDisplayInitialized:false,\r\n  currentContext:0,\r\n  currentReadSurface:0,\r\n  currentDrawSurface:0,\r\n  contextAttributes:{\r\n  alpha:false,\r\n  depth:false,\r\n  stencil:false,\r\n  antialias:false,\r\n  },\r\n  stringCache:{\r\n  },\r\n  setErrorCode(code) {\r\n        EGL.errorCode = code;\r\n      },\r\n  chooseConfig(display, attribList, config, config_size, numConfigs) {\r\n        if (display != 62000) {\r\n          EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n          return 0;\r\n        }\r\n  \r\n        if (attribList) {\r\n          // read attribList if it is non-null\r\n          for (;;) {\r\n            var param = HEAP32[((attribList)>>2)];\r\n            if (param == 0x3021 /*EGL_ALPHA_SIZE*/) {\r\n              var alphaSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.alpha = (alphaSize > 0);\r\n            } else if (param == 0x3025 /*EGL_DEPTH_SIZE*/) {\r\n              var depthSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.depth = (depthSize > 0);\r\n            } else if (param == 0x3026 /*EGL_STENCIL_SIZE*/) {\r\n              var stencilSize = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.stencil = (stencilSize > 0);\r\n            } else if (param == 0x3031 /*EGL_SAMPLES*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples > 0);\r\n            } else if (param == 0x3032 /*EGL_SAMPLE_BUFFERS*/) {\r\n              var samples = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.antialias = (samples == 1);\r\n            } else if (param == 0x3100 /*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/) {\r\n              var requestedPriority = HEAP32[(((attribList)+(4))>>2)];\r\n              EGL.contextAttributes.lowLatency = (requestedPriority != 0x3103 /*EGL_CONTEXT_PRIORITY_LOW_IMG*/);\r\n            } else if (param == 0x3038 /*EGL_NONE*/) {\r\n                break;\r\n            }\r\n            attribList += 8;\r\n          }\r\n        }\r\n  \r\n        if ((!config || !config_size) && !numConfigs) {\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n        }\r\n        if (numConfigs) {\r\n          HEAP32[((numConfigs)>>2)] = 1; // Total number of supported configs: 1.\r\n        }\r\n        if (config && config_size > 0) {\r\n          HEAPU32[((config)>>2)] = 62002;\r\n        }\r\n  \r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      },\r\n  };\r\n  var _eglBindAPI = (api) => {\r\n      if (api == 0x30A0 /* EGL_OPENGL_ES_API */) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1;\r\n      }\r\n      // if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {\r\n      EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n      return 0;\r\n    };\r\n\r\n  var _eglChooseConfig = (display, attrib_list, configs, config_size, numConfigs) => {\r\n      return EGL.chooseConfig(display, attrib_list, configs, config_size, numConfigs);\r\n    };\r\n\r\n  var webgl_enable_ANGLE_instanced_arrays = (ctx) => {\r\n      // Extension available in WebGL 1 from Firefox 26 and Google Chrome 30 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('ANGLE_instanced_arrays');\r\n      if (ext) {\r\n        ctx['vertexAttribDivisor'] = (index, divisor) => ext['vertexAttribDivisorANGLE'](index, divisor);\r\n        ctx['drawArraysInstanced'] = (mode, first, count, primcount) => ext['drawArraysInstancedANGLE'](mode, first, count, primcount);\r\n        ctx['drawElementsInstanced'] = (mode, count, type, indices, primcount) => ext['drawElementsInstancedANGLE'](mode, count, type, indices, primcount);\r\n        return 1;\r\n      }\r\n    };\r\n  \r\n  var webgl_enable_OES_vertex_array_object = (ctx) => {\r\n      // Extension available in WebGL 1 from Firefox 25 and WebKit 536.28/desktop Safari 6.0.3 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('OES_vertex_array_object');\r\n      if (ext) {\r\n        ctx['createVertexArray'] = () => ext['createVertexArrayOES']();\r\n        ctx['deleteVertexArray'] = (vao) => ext['deleteVertexArrayOES'](vao);\r\n        ctx['bindVertexArray'] = (vao) => ext['bindVertexArrayOES'](vao);\r\n        ctx['isVertexArray'] = (vao) => ext['isVertexArrayOES'](vao);\r\n        return 1;\r\n      }\r\n    };\r\n  \r\n  var webgl_enable_WEBGL_draw_buffers = (ctx) => {\r\n      // Extension available in WebGL 1 from Firefox 28 onwards. Core feature in WebGL 2.\r\n      var ext = ctx.getExtension('WEBGL_draw_buffers');\r\n      if (ext) {\r\n        ctx['drawBuffers'] = (n, bufs) => ext['drawBuffersWEBGL'](n, bufs);\r\n        return 1;\r\n      }\r\n    };\r\n  \r\n  var webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance = (ctx) =>\r\n      // Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.\r\n      !!(ctx.dibvbi = ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance'));\r\n  \r\n  var webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance = (ctx) => {\r\n      // Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.\r\n      return !!(ctx.mdibvbi = ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));\r\n    };\r\n  \r\n  var webgl_enable_WEBGL_multi_draw = (ctx) => {\r\n      // Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.\r\n      return !!(ctx.multiDrawWebgl = ctx.getExtension('WEBGL_multi_draw'));\r\n    };\r\n  \r\n  \r\n  var GL = {\r\n  counter:1,\r\n  buffers:[],\r\n  programs:[],\r\n  framebuffers:[],\r\n  renderbuffers:[],\r\n  textures:[],\r\n  shaders:[],\r\n  vaos:[],\r\n  contexts:[],\r\n  offscreenCanvases:{\r\n  },\r\n  queries:[],\r\n  samplers:[],\r\n  transformFeedbacks:[],\r\n  syncs:[],\r\n  byteSizeByTypeRoot:5120,\r\n  byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],\r\n  stringCache:{\r\n  },\r\n  stringiCache:{\r\n  },\r\n  unpackAlignment:4,\r\n  recordError:function recordError(errorCode) {\r\n        if (!GL.lastError) {\r\n          GL.lastError = errorCode;\r\n        }\r\n      },\r\n  getNewId:(table) => {\r\n        var ret = GL.counter++;\r\n        for (var i = table.length; i < ret; i++) {\r\n          table[i] = null;\r\n        }\r\n        return ret;\r\n      },\r\n  MAX_TEMP_BUFFER_SIZE:16777216,\r\n  numTempVertexBuffersPerSize:64,\r\n  log2ceilLookup:(i) => 32 - Math.clz32(i === 0 ? 0 : i - 1),\r\n  generateTempBuffers:(quads, context) => {\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        context.tempVertexBufferCounters1 = [];\r\n        context.tempVertexBufferCounters2 = [];\r\n        context.tempVertexBufferCounters1.length = context.tempVertexBufferCounters2.length = largestIndex+1;\r\n        context.tempVertexBuffers1 = [];\r\n        context.tempVertexBuffers2 = [];\r\n        context.tempVertexBuffers1.length = context.tempVertexBuffers2.length = largestIndex+1;\r\n        context.tempIndexBuffers = [];\r\n        context.tempIndexBuffers.length = largestIndex+1;\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          context.tempIndexBuffers[i] = null; // Created on-demand\r\n          context.tempVertexBufferCounters1[i] = context.tempVertexBufferCounters2[i] = 0;\r\n          var ringbufferLength = GL.numTempVertexBuffersPerSize;\r\n          context.tempVertexBuffers1[i] = [];\r\n          context.tempVertexBuffers2[i] = [];\r\n          var ringbuffer1 = context.tempVertexBuffers1[i];\r\n          var ringbuffer2 = context.tempVertexBuffers2[i];\r\n          ringbuffer1.length = ringbuffer2.length = ringbufferLength;\r\n          for (var j = 0; j < ringbufferLength; ++j) {\r\n            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand\r\n          }\r\n        }\r\n  \r\n        if (quads) {\r\n          // GL_QUAD indexes can be precalculated\r\n          context.tempQuadIndexBuffer = GLctx.createBuffer();\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, context.tempQuadIndexBuffer);\r\n          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;\r\n          var quadIndexes = new Uint16Array(numIndexes);\r\n          var i = 0, v = 0;\r\n          while (1) {\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+1;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+2;\r\n            if (i >= numIndexes) break;\r\n            quadIndexes[i++] = v+3;\r\n            if (i >= numIndexes) break;\r\n            v += 4;\r\n          }\r\n          context.GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, quadIndexes, 0x88E4 /*GL_STATIC_DRAW*/);\r\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n        }\r\n      },\r\n  getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ringbuffer = GL.currentContext.tempVertexBuffers1[idx];\r\n        var nextFreeBufferIndex = GL.currentContext.tempVertexBufferCounters1[idx];\r\n        GL.currentContext.tempVertexBufferCounters1[idx] = (GL.currentContext.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);\r\n        var vbo = ringbuffer[nextFreeBufferIndex];\r\n        if (vbo) {\r\n          return vbo;\r\n        }\r\n        var prevVBO = GLctx.getParameter(0x8894 /*GL_ARRAY_BUFFER_BINDING*/);\r\n        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, ringbuffer[nextFreeBufferIndex]);\r\n        GLctx.bufferData(0x8892 /*GL_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, prevVBO);\r\n        return ringbuffer[nextFreeBufferIndex];\r\n      },\r\n  getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {\r\n        var idx = GL.log2ceilLookup(sizeBytes);\r\n        var ibo = GL.currentContext.tempIndexBuffers[idx];\r\n        if (ibo) {\r\n          return ibo;\r\n        }\r\n        var prevIBO = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n        GL.currentContext.tempIndexBuffers[idx] = GLctx.createBuffer();\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, GL.currentContext.tempIndexBuffers[idx]);\r\n        GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, prevIBO);\r\n        return GL.currentContext.tempIndexBuffers[idx];\r\n      },\r\n  newRenderingFrameStarted:function newRenderingFrameStarted() {\r\n        if (!GL.currentContext) {\r\n          return;\r\n        }\r\n        var vb = GL.currentContext.tempVertexBuffers1;\r\n        GL.currentContext.tempVertexBuffers1 = GL.currentContext.tempVertexBuffers2;\r\n        GL.currentContext.tempVertexBuffers2 = vb;\r\n        vb = GL.currentContext.tempVertexBufferCounters1;\r\n        GL.currentContext.tempVertexBufferCounters1 = GL.currentContext.tempVertexBufferCounters2;\r\n        GL.currentContext.tempVertexBufferCounters2 = vb;\r\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\r\n        for (var i = 0; i <= largestIndex; ++i) {\r\n          GL.currentContext.tempVertexBufferCounters1[i] = 0;\r\n        }\r\n      },\r\n  getSource:(shader, count, string, length) => {\r\n        var source = '';\r\n        for (var i = 0; i < count; ++i) {\r\n          var len = length ? HEAP32[(((length)+(i*4))>>2)] : -1;\r\n          source += UTF8ToString(HEAP32[(((string)+(i*4))>>2)], len < 0 ? undefined : len);\r\n        }\r\n        return source;\r\n      },\r\n  calcBufLength:function calcBufLength(size, type, stride, count) {\r\n        if (stride > 0) {\r\n          return count * stride;  // XXXvlad this is not exactly correct I don't think\r\n        }\r\n        var typeSize = GL.byteSizeByType[type - GL.byteSizeByTypeRoot];\r\n        return size * typeSize * count;\r\n      },\r\n  usedTempBuffers:[],\r\n  preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count) {\r\n        GL.resetBufferBinding = false;\r\n  \r\n        // TODO: initial pass to detect ranges we need to upload, might not need\r\n        // an upload per attrib\r\n        for (var i = 0; i < GL.currentContext.maxVertexAttribs; ++i) {\r\n          var cb = GL.currentContext.clientBuffers[i];\r\n          if (!cb.clientside || !cb.enabled) continue;\r\n  \r\n          GL.resetBufferBinding = true;\r\n  \r\n          var size = GL.calcBufLength(cb.size, cb.type, cb.stride, count);\r\n          var buf = GL.getTempVertexBuffer(size);\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, buf);\r\n          GLctx.bufferSubData(0x8892 /*GL_ARRAY_BUFFER*/,\r\n                                   0,\r\n                                   HEAPU8.subarray(cb.ptr, cb.ptr + size));\r\n          cb.vertexAttribPointerAdaptor.call(GLctx, i, cb.size, cb.type, cb.normalized, cb.stride, 0);\r\n        }\r\n      },\r\n  postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings() {\r\n        if (GL.resetBufferBinding) {\r\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, GL.buffers[GLctx.currentArrayBufferBinding]);\r\n        }\r\n      },\r\n  createContext:(/** @type {HTMLCanvasElement} */ canvas, webGLContextAttributes) => {\r\n  \r\n        // BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL\r\n        // context on a canvas, calling .getContext() will always return that\r\n        // context independent of which 'webgl' or 'webgl2'\r\n        // context version was passed. See:\r\n        //   https://bugs.webkit.org/show_bug.cgi?id=222758\r\n        // and:\r\n        //   https://github.com/emscripten-core/emscripten/issues/13295.\r\n        // TODO: Once the bug is fixed and shipped in Safari, adjust the Safari\r\n        // version field in above check.\r\n        if (!canvas.getContextSafariWebGL2Fixed) {\r\n          canvas.getContextSafariWebGL2Fixed = canvas.getContext;\r\n          /** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */\r\n          function fixedGetContext(ver, attrs) {\r\n            var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\r\n            return ((ver == 'webgl') == (gl instanceof WebGLRenderingContext)) ? gl : null;\r\n          }\r\n          canvas.getContext = fixedGetContext;\r\n        }\r\n  \r\n        var ctx =\r\n          (webGLContextAttributes.majorVersion > 1)\r\n          ?\r\n            canvas.getContext(\"webgl2\", webGLContextAttributes)\r\n          :\r\n          (canvas.getContext(\"webgl\", webGLContextAttributes)\r\n            // https://caniuse.com/#feat=webgl\r\n            );\r\n  \r\n        if (!ctx) return 0;\r\n  \r\n        var handle = GL.registerContext(ctx, webGLContextAttributes);\r\n  \r\n        // If end user enables *glGetProcAddress() functionality, then we must filter out\r\n        // all future WebGL extensions from being passed to the user, and only restrict to advertising\r\n        // extensions that the *glGetProcAddress() function knows to handle.\r\n        var _allSupportedExtensions = ctx.getSupportedExtensions;\r\n        var supportedExtensionsForGetProcAddress = [\r\n          // WebGL 1 extensions\r\n          'ANGLE_instanced_arrays',\r\n          'EXT_blend_minmax',\r\n          'EXT_disjoint_timer_query',\r\n          'EXT_frag_depth',\r\n          'EXT_shader_texture_lod',\r\n          'EXT_sRGB',\r\n          'OES_element_index_uint',\r\n          'OES_fbo_render_mipmap',\r\n          'OES_standard_derivatives',\r\n          'OES_texture_float',\r\n          'OES_texture_half_float',\r\n          'OES_texture_half_float_linear',\r\n          'OES_vertex_array_object',\r\n          'WEBGL_color_buffer_float',\r\n          'WEBGL_depth_texture',\r\n          'WEBGL_draw_buffers',\r\n          // WebGL 2 extensions\r\n          'EXT_color_buffer_float',\r\n          'EXT_disjoint_timer_query_webgl2',\r\n          'EXT_texture_norm16',\r\n          'WEBGL_clip_cull_distance',\r\n          // WebGL 1 and WebGL 2 extensions\r\n          'EXT_color_buffer_half_float',\r\n          'EXT_float_blend',\r\n          'EXT_texture_compression_bptc',\r\n          'EXT_texture_compression_rgtc',\r\n          'EXT_texture_filter_anisotropic',\r\n          'KHR_parallel_shader_compile',\r\n          'OES_texture_float_linear',\r\n          'WEBGL_compressed_texture_s3tc',\r\n          'WEBGL_compressed_texture_s3tc_srgb',\r\n          'WEBGL_debug_renderer_info',\r\n          'WEBGL_debug_shaders',\r\n          'WEBGL_lose_context',\r\n          'WEBGL_multi_draw',\r\n        ];\r\n        ctx.getSupportedExtensions = function() {\r\n          return (_allSupportedExtensions.apply(this) || []).filter(ext => supportedExtensionsForGetProcAddress.includes(ext));\r\n        }\r\n  \r\n        return handle;\r\n      },\r\n  registerContext:(ctx, webGLContextAttributes) => {\r\n        // without pthreads a context is just an integer ID\r\n        var handle = GL.getNewId(GL.contexts);\r\n  \r\n        var context = {\r\n          handle,\r\n          attributes: webGLContextAttributes,\r\n          version: webGLContextAttributes.majorVersion,\r\n          GLctx: ctx\r\n        };\r\n  \r\n        // Store the created context object so that we can access the context\r\n        // given a canvas without having to pass the parameters again.\r\n        if (ctx.canvas) ctx.canvas.GLctxObject = context;\r\n        GL.contexts[handle] = context;\r\n        if (typeof webGLContextAttributes.enableExtensionsByDefault == 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {\r\n          GL.initExtensions(context);\r\n        }\r\n  \r\n        context.maxVertexAttribs = context.GLctx.getParameter(0x8869 /*GL_MAX_VERTEX_ATTRIBS*/);\r\n        context.clientBuffers = [];\r\n        for (var i = 0; i < context.maxVertexAttribs; i++) {\r\n          context.clientBuffers[i] = {\r\n            enabled: false,\r\n            clientside: false,\r\n            size: 0,\r\n            type: 0,\r\n            normalized: 0,\r\n            stride: 0,\r\n            ptr: 0,\r\n            vertexAttribPointerAdaptor: null,\r\n          };\r\n        }\r\n  \r\n        GL.generateTempBuffers(false, context);\r\n  \r\n        return handle;\r\n      },\r\n  makeContextCurrent:(contextHandle) => {\r\n  \r\n        // Active Emscripten GL layer context object.\r\n        GL.currentContext = GL.contexts[contextHandle];\r\n        // Active WebGL context object.\r\n        Module.ctx = GLctx = GL.currentContext?.GLctx;\r\n        return !(contextHandle && !GLctx);\r\n      },\r\n  getContext:(contextHandle) => {\r\n        return GL.contexts[contextHandle];\r\n      },\r\n  deleteContext:(contextHandle) => {\r\n        if (GL.currentContext === GL.contexts[contextHandle]) {\r\n          GL.currentContext = null;\r\n        }\r\n        if (typeof JSEvents == 'object') {\r\n          // Release all JS event handlers on the DOM element that the GL context is\r\n          // associated with since the context is now deleted.\r\n          JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);\r\n        }\r\n        // Make sure the canvas object no longer refers to the context object so\r\n        // there are no GC surprises.\r\n        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) {\r\n          GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined;\r\n        }\r\n        GL.contexts[contextHandle] = null;\r\n      },\r\n  initExtensions:(context) => {\r\n        // If this function is called without a specific context object, init the\r\n        // extensions of the currently active context.\r\n        context ||= GL.currentContext;\r\n  \r\n        if (context.initExtensionsDone) return;\r\n        context.initExtensionsDone = true;\r\n  \r\n        var GLctx = context.GLctx;\r\n  \r\n        // Detect the presence of a few extensions manually, ction GL interop\r\n        // layer itself will need to know if they exist.\r\n  \r\n        // Extensions that are only available in WebGL 1 (the calls will be no-ops\r\n        // if called on a WebGL 2 context active)\r\n        webgl_enable_ANGLE_instanced_arrays(GLctx);\r\n        webgl_enable_OES_vertex_array_object(GLctx);\r\n        webgl_enable_WEBGL_draw_buffers(GLctx);\r\n        // Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)\r\n        webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);\r\n        webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);\r\n  \r\n        // On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative\r\n        // that's based on core APIs, and exposes only the queryCounterEXT()\r\n        // entrypoint.\r\n        if (context.version >= 2) {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\");\r\n        }\r\n  \r\n        // However, Firefox exposes the WebGL 1 version on WebGL 2 as well and\r\n        // thus we look for the WebGL 1 version again if the WebGL 2 version\r\n        // isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882\r\n        if (context.version < 2 || !GLctx.disjointTimerQueryExt)\r\n        {\r\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query\");\r\n        }\r\n  \r\n        webgl_enable_WEBGL_multi_draw(GLctx);\r\n  \r\n        // .getSupportedExtensions() can return null if context is lost, so coerce\r\n        // to empty array.\r\n        var exts = GLctx.getSupportedExtensions() || [];\r\n        exts.forEach((ext) => {\r\n          // WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders\r\n          // are not enabled by default.\r\n          if (!ext.includes('lose_context') && !ext.includes('debug')) {\r\n            // Call .getExtension() to enable that extension permanently.\r\n            GLctx.getExtension(ext);\r\n          }\r\n        });\r\n      },\r\n  getExtensions() {\r\n        // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n        var exts = GLctx.getSupportedExtensions() || [];\r\n        exts = exts.concat(exts.map((e) => \"GL_\" + e));\r\n        return exts;\r\n      },\r\n  };\r\n  \r\n  var _eglCreateContext = (display, config, hmm, contextAttribs) => {\r\n      if (display != 62000) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n  \r\n      // EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.\r\n      // So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.\r\n      var glesContextVersion = 1;\r\n      for (;;) {\r\n        var param = HEAP32[((contextAttribs)>>2)];\r\n        if (param == 0x3098 /*EGL_CONTEXT_CLIENT_VERSION*/) {\r\n          glesContextVersion = HEAP32[(((contextAttribs)+(4))>>2)];\r\n        } else if (param == 0x3038 /*EGL_NONE*/) {\r\n          break;\r\n        } else {\r\n          /* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */\r\n          EGL.setErrorCode(0x3004 /*EGL_BAD_ATTRIBUTE*/);\r\n          return 0;\r\n        }\r\n        contextAttribs += 8;\r\n      }\r\n      if (glesContextVersion < 2 || glesContextVersion > 3) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n  \r\n      EGL.contextAttributes.majorVersion = glesContextVersion - 1; // WebGL 1 is GLES 2, WebGL2 is GLES3\r\n      EGL.contextAttributes.minorVersion = 0;\r\n  \r\n      EGL.context = GL.createContext(Module['canvas'], EGL.contextAttributes);\r\n  \r\n      if (EGL.context != 0) {\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n  \r\n        // Run callbacks so that GL emulation works\r\n        GL.makeContextCurrent(EGL.context);\r\n        Module.useWebGL = true;\r\n        Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });\r\n  \r\n        // Note: This function only creates a context, but it shall not make it active.\r\n        GL.makeContextCurrent(null);\r\n        return 62004;\r\n      } else {\r\n        EGL.setErrorCode(0x3009 /* EGL_BAD_MATCH */); // By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.\r\n        return 0; /* EGL_NO_CONTEXT */\r\n      }\r\n    };\r\n\r\n  var _eglCreateWindowSurface = (display, config, win, attrib_list) => {\r\n      if (display != 62000) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      // TODO: Examine attrib_list! Parameters that can be present there are:\r\n      // - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)\r\n      // - EGL_VG_COLORSPACE (can't be set)\r\n      // - EGL_VG_ALPHA_FORMAT (can't be set)\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 62006; /* Magic ID for Emscripten 'default surface' */\r\n    };\r\n\r\n  \r\n  var _eglDestroyContext = (display, context) => {\r\n      if (display != 62000) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (context != 62004) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.deleteContext(EGL.context);\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.currentContext == context) {\r\n        EGL.currentContext = 0;\r\n      }\r\n      return 1 /* EGL_TRUE */;\r\n    };\r\n\r\n  var _eglDestroySurface = (display, surface) => {\r\n      if (display != 62000) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (surface != 62006 /* Magic ID for the only EGLSurface supported by Emscripten */) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 1;\r\n      }\r\n      if (EGL.currentReadSurface == surface) {\r\n        EGL.currentReadSurface = 0;\r\n      }\r\n      if (EGL.currentDrawSurface == surface) {\r\n        EGL.currentDrawSurface = 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1; /* Magic ID for Emscripten 'default surface' */\r\n    };\r\n\r\n  var _eglGetConfigAttrib = (display, config, attribute, value) => {\r\n      if (display != 62000) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (config != 62002) {\r\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\r\n        return 0;\r\n      }\r\n      if (!value) {\r\n        EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n        return 0;\r\n      }\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      switch (attribute) {\r\n      case 0x3020: // EGL_BUFFER_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 32 : 24;\r\n        return 1;\r\n      case 0x3021: // EGL_ALPHA_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 8 : 0;\r\n        return 1;\r\n      case 0x3022: // EGL_BLUE_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3023: // EGL_GREEN_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3024: // EGL_RED_SIZE\r\n        HEAP32[((value)>>2)] = 8;\r\n        return 1;\r\n      case 0x3025: // EGL_DEPTH_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.depth ? 24 : 0;\r\n        return 1;\r\n      case 0x3026: // EGL_STENCIL_SIZE\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.stencil ? 8 : 0;\r\n        return 1;\r\n      case 0x3027: // EGL_CONFIG_CAVEAT\r\n        // We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3028: // EGL_CONFIG_ID\r\n        HEAP32[((value)>>2)] = 62002;\r\n        return 1;\r\n      case 0x3029: // EGL_LEVEL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302A: // EGL_MAX_PBUFFER_HEIGHT\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302B: // EGL_MAX_PBUFFER_PIXELS\r\n        HEAP32[((value)>>2)] = 16777216;\r\n        return 1;\r\n      case 0x302C: // EGL_MAX_PBUFFER_WIDTH\r\n        HEAP32[((value)>>2)] = 4096;\r\n        return 1;\r\n      case 0x302D: // EGL_NATIVE_RENDERABLE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302E: // EGL_NATIVE_VISUAL_ID\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x302F: // EGL_NATIVE_VISUAL_TYPE\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3031: // EGL_SAMPLES\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 4 : 0;\r\n        return 1;\r\n      case 0x3032: // EGL_SAMPLE_BUFFERS\r\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 1 : 0;\r\n        return 1;\r\n      case 0x3033: // EGL_SURFACE_TYPE\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3034: // EGL_TRANSPARENT_TYPE\r\n        // If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.\r\n        HEAP32[((value)>>2)] = 0x3038;\r\n        return 1;\r\n      case 0x3035: // EGL_TRANSPARENT_BLUE_VALUE\r\n      case 0x3036: // EGL_TRANSPARENT_GREEN_VALUE\r\n      case 0x3037: // EGL_TRANSPARENT_RED_VALUE\r\n        // \"If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined.\"\r\n        HEAP32[((value)>>2)] = -1;\r\n        return 1;\r\n      case 0x3039: // EGL_BIND_TO_TEXTURE_RGB\r\n      case 0x303A: // EGL_BIND_TO_TEXTURE_RGBA\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303B: // EGL_MIN_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303C: // EGL_MAX_SWAP_INTERVAL\r\n        HEAP32[((value)>>2)] = 1;\r\n        return 1;\r\n      case 0x303D: // EGL_LUMINANCE_SIZE\r\n      case 0x303E: // EGL_ALPHA_MASK_SIZE\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      case 0x303F: // EGL_COLOR_BUFFER_TYPE\r\n        // EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.\r\n        HEAP32[((value)>>2)] = 0x308E;\r\n        return 1;\r\n      case 0x3040: // EGL_RENDERABLE_TYPE\r\n        // A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.\r\n        HEAP32[((value)>>2)] = 0x4;\r\n        return 1;\r\n      case 0x3042: // EGL_CONFORMANT\r\n        // \"EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API.\"\r\n        HEAP32[((value)>>2)] = 0;\r\n        return 1;\r\n      default:\r\n        EGL.setErrorCode(0x3004 /* EGL_BAD_ATTRIBUTE */);\r\n        return 0;\r\n      }\r\n    };\r\n\r\n  var _eglGetDisplay = (nativeDisplayType) => {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      // Emscripten EGL implementation \"emulates\" X11, and eglGetDisplay is\r\n      // expected to accept/receive a pointer to an X11 Display object (or\r\n      // EGL_DEFAULT_DISPLAY).\r\n      if (nativeDisplayType != 0 /* EGL_DEFAULT_DISPLAY */ && nativeDisplayType != 1 /* see library_xlib.js */) {\r\n        return 0; // EGL_NO_DISPLAY\r\n      }\r\n      return 62000;\r\n    };\r\n\r\n  var _eglGetError = () => EGL.errorCode;\r\n\r\n  var _eglInitialize = (display, majorVersion, minorVersion) => {\r\n      if (display != 62000) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (majorVersion) {\r\n        HEAP32[((majorVersion)>>2)] = 1; // Advertise EGL Major version: '1'\r\n      }\r\n      if (minorVersion) {\r\n        HEAP32[((minorVersion)>>2)] = 4; // Advertise EGL Minor version: '4'\r\n      }\r\n      EGL.defaultDisplayInitialized = true;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    };\r\n\r\n  \r\n  var _eglMakeCurrent = (display, draw, read, context) => {\r\n      if (display != 62000) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0 /* EGL_FALSE */;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      if (context != 0 && context != 62004) {\r\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\r\n        return 0;\r\n      }\r\n      if ((read != 0 && read != 62006) || (draw != 0 && draw != 62006 /* Magic ID for Emscripten 'default surface' */)) {\r\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\r\n        return 0;\r\n      }\r\n  \r\n      GL.makeContextCurrent(context ? EGL.context : null);\r\n  \r\n      EGL.currentContext = context;\r\n      EGL.currentDrawSurface = draw;\r\n      EGL.currentReadSurface = read;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1 /* EGL_TRUE */;\r\n    };\r\n\r\n  \r\n  var _eglQueryString = (display, name) => {\r\n      if (display != 62000) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      if (EGL.stringCache[name]) return EGL.stringCache[name];\r\n      var ret;\r\n      switch (name) {\r\n        case 0x3053 /* EGL_VENDOR */: ret = stringToNewUTF8(\"Emscripten\"); break;\r\n        case 0x3054 /* EGL_VERSION */: ret = stringToNewUTF8(\"1.4 Emscripten EGL\"); break;\r\n        case 0x3055 /* EGL_EXTENSIONS */:  ret = stringToNewUTF8(\"\"); break; // Currently not supporting any EGL extensions.\r\n        case 0x308D /* EGL_CLIENT_APIS */: ret = stringToNewUTF8(\"OpenGL_ES\"); break;\r\n        default:\r\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\r\n          return 0;\r\n      }\r\n      EGL.stringCache[name] = ret;\r\n      return ret;\r\n    };\r\n\r\n  var _eglSwapBuffers = (dpy, surface) => {\r\n  \r\n      if (!EGL.defaultDisplayInitialized) {\r\n        EGL.setErrorCode(0x3001 /* EGL_NOT_INITIALIZED */);\r\n      } else if (!Module.ctx) {\r\n        EGL.setErrorCode(0x3002 /* EGL_BAD_ACCESS */);\r\n      } else if (Module.ctx.isContextLost()) {\r\n        EGL.setErrorCode(0x300E /* EGL_CONTEXT_LOST */);\r\n      } else {\r\n        // According to documentation this does an implicit flush.\r\n        // Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871\r\n        // the flush was removed since this _may_ result in slowing code down.\r\n        //_glFlush();\r\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n        return 1 /* EGL_TRUE */;\r\n      }\r\n      return 0 /* EGL_FALSE */;\r\n    };\r\n\r\n  \r\n  var _eglSwapInterval = (display, interval) => {\r\n      if (display != 62000) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      if (interval == 0) _emscripten_set_main_loop_timing(0, 0);\r\n      else _emscripten_set_main_loop_timing(1, interval);\r\n  \r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    };\r\n\r\n  var _eglTerminate = (display) => {\r\n      if (display != 62000) {\r\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\r\n        return 0;\r\n      }\r\n      EGL.currentContext = 0;\r\n      EGL.currentReadSurface = 0;\r\n      EGL.currentDrawSurface = 0;\r\n      EGL.defaultDisplayInitialized = false;\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    };\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _eglWaitClient = () => {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    };\r\n  var _eglWaitGL = _eglWaitClient;\r\n\r\n  var _eglWaitNative = (nativeEngineId) => {\r\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\r\n      return 1;\r\n    };\r\n\r\n  var readEmAsmArgsArray = [];\r\n  var readEmAsmArgs = (sigPtr, buf) => {\r\n      readEmAsmArgsArray.length = 0;\r\n      var ch;\r\n      // Most arguments are i32s, so shift the buffer pointer so it is a plain\r\n      // index into HEAP32.\r\n      while (ch = HEAPU8[sigPtr++]) {\r\n        // Floats are always passed as doubles, so all types except for 'i'\r\n        // are 8 bytes and require alignment.\r\n        var wide = (ch != 105);\r\n        wide &= (ch != 112);\r\n        buf += wide && (buf % 8) ? 4 : 0;\r\n        readEmAsmArgsArray.push(\r\n          // Special case for pointers under wasm64 or CAN_ADDRESS_2GB mode.\r\n          ch == 112 ? HEAPU32[((buf)>>2)] :\r\n          ch == 105 ?\r\n            HEAP32[((buf)>>2)] :\r\n            HEAPF64[((buf)>>3)]\r\n        );\r\n        buf += wide ? 8 : 4;\r\n      }\r\n      return readEmAsmArgsArray;\r\n    };\r\n  var runEmAsmFunction = (code, sigPtr, argbuf) => {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    };\r\n  var _emscripten_asm_const_int = (code, sigPtr, argbuf) => {\r\n      return runEmAsmFunction(code, sigPtr, argbuf);\r\n    };\r\n\r\n  var runMainThreadEmAsm = (code, sigPtr, argbuf, sync) => {\r\n      var args = readEmAsmArgs(sigPtr, argbuf);\r\n      return ASM_CONSTS[code].apply(null, args);\r\n    };\r\n  var _emscripten_asm_const_int_sync_on_main_thread = (code, sigPtr, argbuf) => {\r\n      return runMainThreadEmAsm(code, sigPtr, argbuf, 1);\r\n    };\r\n\r\n  var _emscripten_date_now = () => Date.now();\r\n\r\n  var withStackSave = (f) => {\r\n      var stack = stackSave();\r\n      var ret = f();\r\n      stackRestore(stack);\r\n      return ret;\r\n    };\r\n  var JSEvents = {\r\n  inEventHandler:0,\r\n  removeAllEventListeners() {\r\n        for (var i = JSEvents.eventHandlers.length-1; i >= 0; --i) {\r\n          JSEvents._removeHandler(i);\r\n        }\r\n        JSEvents.eventHandlers = [];\r\n        JSEvents.deferredCalls = [];\r\n      },\r\n  registerRemoveEventListeners() {\r\n        if (!JSEvents.removeEventListenersRegistered) {\r\n          __ATEXIT__.push(JSEvents.removeAllEventListeners);\r\n          JSEvents.removeEventListenersRegistered = true;\r\n        }\r\n      },\r\n  deferredCalls:[],\r\n  deferCall(targetFunction, precedence, argsList) {\r\n        function arraysHaveEqualContent(arrA, arrB) {\r\n          if (arrA.length != arrB.length) return false;\r\n  \r\n          for (var i in arrA) {\r\n            if (arrA[i] != arrB[i]) return false;\r\n          }\r\n          return true;\r\n        }\r\n        // Test if the given call was already queued, and if so, don't add it again.\r\n        for (var i in JSEvents.deferredCalls) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\r\n            return;\r\n          }\r\n        }\r\n        JSEvents.deferredCalls.push({\r\n          targetFunction,\r\n          precedence,\r\n          argsList\r\n        });\r\n  \r\n        JSEvents.deferredCalls.sort((x,y) => x.precedence < y.precedence);\r\n      },\r\n  removeDeferredCalls(targetFunction) {\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\r\n            JSEvents.deferredCalls.splice(i, 1);\r\n            --i;\r\n          }\r\n        }\r\n      },\r\n  canPerformEventHandlerRequests() {\r\n        if (navigator.userActivation) {\r\n          // Verify against transient activation status from UserActivation API\r\n          // whether it is possible to perform a request here without needing to defer. See\r\n          // https://developer.mozilla.org/en-US/docs/Web/Security/User_activation#transient_activation\r\n          // and https://caniuse.com/mdn-api_useractivation\r\n          // At the time of writing, Firefox does not support this API: https://bugzilla.mozilla.org/show_bug.cgi?id=1791079\r\n          return navigator.userActivation.isActive;\r\n        }\r\n  \r\n        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\r\n      },\r\n  runDeferredCalls() {\r\n        if (!JSEvents.canPerformEventHandlerRequests()) {\r\n          return;\r\n        }\r\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\r\n          var call = JSEvents.deferredCalls[i];\r\n          JSEvents.deferredCalls.splice(i, 1);\r\n          --i;\r\n          call.targetFunction.apply(null, call.argsList);\r\n        }\r\n      },\r\n  eventHandlers:[],\r\n  removeAllHandlersOnTarget:(target, eventTypeString) => {\r\n        for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n          if (JSEvents.eventHandlers[i].target == target &&\r\n            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\r\n             JSEvents._removeHandler(i--);\r\n           }\r\n        }\r\n      },\r\n  _removeHandler(i) {\r\n        var h = JSEvents.eventHandlers[i];\r\n        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\r\n        JSEvents.eventHandlers.splice(i, 1);\r\n      },\r\n  registerOrRemoveHandler(eventHandler) {\r\n        if (!eventHandler.target) {\r\n          return -4;\r\n        }\r\n        var jsEventHandler = function jsEventHandler(event) {\r\n          // Increment nesting count for the event handler.\r\n          ++JSEvents.inEventHandler;\r\n          JSEvents.currentEventHandler = eventHandler;\r\n          // Process any old deferred calls the user has placed.\r\n          JSEvents.runDeferredCalls();\r\n          // Process the actual event, calls back to user C code handler.\r\n          eventHandler.handlerFunc(event);\r\n          // Process any new deferred calls that were placed right now from this event handler.\r\n          JSEvents.runDeferredCalls();\r\n          // Out of event handler - restore nesting count.\r\n          --JSEvents.inEventHandler;\r\n        };\r\n  \r\n        if (eventHandler.callbackfunc) {\r\n          eventHandler.eventListenerFunc = jsEventHandler;\r\n          eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\r\n          JSEvents.eventHandlers.push(eventHandler);\r\n          JSEvents.registerRemoveEventListeners();\r\n        } else {\r\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\r\n            if (JSEvents.eventHandlers[i].target == eventHandler.target\r\n             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\r\n               JSEvents._removeHandler(i--);\r\n             }\r\n          }\r\n        }\r\n        return 0;\r\n      },\r\n  getNodeNameForTarget(target) {\r\n        if (!target) return '';\r\n        if (target == window) return '#window';\r\n        if (target == screen) return '#screen';\r\n        return target?.nodeName || '';\r\n      },\r\n  fullscreenEnabled() {\r\n        return document.fullscreenEnabled\r\n        // Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.\r\n        // TODO: If Safari at some point ships with unprefixed version, update the version check above.\r\n        || document.webkitFullscreenEnabled\r\n         ;\r\n      },\r\n  };\r\n  \r\n  var setLetterbox = (element, topBottom, leftRight) => {\r\n      // Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.\r\n      element.style.paddingLeft = element.style.paddingRight = leftRight + 'px';\r\n      element.style.paddingTop = element.style.paddingBottom = topBottom + 'px';\r\n    };\r\n  \r\n  var hideEverythingExceptGivenElement = (onlyVisibleElement) => {\r\n      var child = onlyVisibleElement;\r\n      var parent = child.parentNode;\r\n      var hiddenElements = [];\r\n      while (child != document.body) {\r\n        var children = parent.children;\r\n        for (var i = 0; i < children.length; ++i) {\r\n          if (children[i] != child) {\r\n            hiddenElements.push({ node: children[i], displayState: children[i].style.display });\r\n            children[i].style.display = 'none';\r\n          }\r\n        }\r\n        child = parent;\r\n        parent = parent.parentNode;\r\n      }\r\n      return hiddenElements;\r\n    };\r\n  \r\n  var restoreOldWindowedStyle = null;\r\n  \r\n  \r\n  \r\n  var maybeCStringToJsString = (cString) => {\r\n      // \"cString > 2\" checks if the input is a number, and isn't of the special\r\n      // values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).\r\n      // In other words, if cString > 2 then it's a pointer to a valid place in\r\n      // memory, and points to a C string.\r\n      return cString > 2 ? UTF8ToString(cString) : cString;\r\n    };\r\n  \r\n  var specialHTMLTargets = [0, document, window];\r\n  var findEventTarget = (target) => {\r\n      target = maybeCStringToJsString(target);\r\n      var domElement = specialHTMLTargets[target] || document.querySelector(target);\r\n      return domElement;\r\n    };\r\n  var findCanvasEventTarget = (target) => findEventTarget(target);\r\n  var _emscripten_get_canvas_element_size = (target, width, height) => {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      HEAP32[((width)>>2)] = canvas.width;\r\n      HEAP32[((height)>>2)] = canvas.height;\r\n    };\r\n  \r\n  \r\n  \r\n  var stringToUTF8OnStack = (str) => {\r\n      var size = lengthBytesUTF8(str) + 1;\r\n      var ret = stackAlloc(size);\r\n      stringToUTF8(str, ret, size);\r\n      return ret;\r\n    };\r\n  var getCanvasElementSize = (target) => withStackSave(() => {\r\n      var w = stackAlloc(8);\r\n      var h = w + 4;\r\n  \r\n      var targetInt = stringToUTF8OnStack(target.id);\r\n      var ret = _emscripten_get_canvas_element_size(targetInt, w, h);\r\n      var size = [HEAP32[((w)>>2)], HEAP32[((h)>>2)]];\r\n      return size;\r\n    });\r\n  \r\n  \r\n  var _emscripten_set_canvas_element_size = (target, width, height) => {\r\n      var canvas = findCanvasEventTarget(target);\r\n      if (!canvas) return -4;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      return 0;\r\n    };\r\n  \r\n  \r\n  var setCanvasElementSize = (target, width, height) => {\r\n      if (!target.controlTransferredOffscreen) {\r\n        target.width = width;\r\n        target.height = height;\r\n      } else {\r\n        // This function is being called from high-level JavaScript code instead of asm.js/Wasm,\r\n        // and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.\r\n        withStackSave(() => {\r\n          var targetInt = stringToUTF8OnStack(target.id);\r\n          _emscripten_set_canvas_element_size(targetInt, width, height);\r\n        });\r\n      }\r\n    };\r\n  var registerRestoreOldStyle = (canvas) => {\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var oldWidth = canvasSize[0];\r\n      var oldHeight = canvasSize[1];\r\n      var oldCssWidth = canvas.style.width;\r\n      var oldCssHeight = canvas.style.height;\r\n      var oldBackgroundColor = canvas.style.backgroundColor; // Chrome reads color from here.\r\n      var oldDocumentBackgroundColor = document.body.style.backgroundColor; // IE11 reads color from here.\r\n      // Firefox always has black background color.\r\n      var oldPaddingLeft = canvas.style.paddingLeft; // Chrome, FF, Safari\r\n      var oldPaddingRight = canvas.style.paddingRight;\r\n      var oldPaddingTop = canvas.style.paddingTop;\r\n      var oldPaddingBottom = canvas.style.paddingBottom;\r\n      var oldMarginLeft = canvas.style.marginLeft; // IE11\r\n      var oldMarginRight = canvas.style.marginRight;\r\n      var oldMarginTop = canvas.style.marginTop;\r\n      var oldMarginBottom = canvas.style.marginBottom;\r\n      var oldDocumentBodyMargin = document.body.style.margin;\r\n      var oldDocumentOverflow = document.documentElement.style.overflow; // Chrome, Firefox\r\n      var oldDocumentScroll = document.body.scroll; // IE\r\n      var oldImageRendering = canvas.style.imageRendering;\r\n  \r\n      function restoreOldStyle() {\r\n        var fullscreenElement = document.fullscreenElement\r\n          || document.webkitFullscreenElement\r\n          ;\r\n        if (!fullscreenElement) {\r\n          document.removeEventListener('fullscreenchange', restoreOldStyle);\r\n  \r\n          // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n          // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n          document.removeEventListener('webkitfullscreenchange', restoreOldStyle);\r\n  \r\n          setCanvasElementSize(canvas, oldWidth, oldHeight);\r\n  \r\n          canvas.style.width = oldCssWidth;\r\n          canvas.style.height = oldCssHeight;\r\n          canvas.style.backgroundColor = oldBackgroundColor; // Chrome\r\n          // IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color\r\n          // before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user\r\n          // had explicitly set so subsequent fullscreen transitions would not set background color properly.\r\n          if (!oldDocumentBackgroundColor) document.body.style.backgroundColor = 'white';\r\n          document.body.style.backgroundColor = oldDocumentBackgroundColor; // IE11\r\n          canvas.style.paddingLeft = oldPaddingLeft; // Chrome, FF, Safari\r\n          canvas.style.paddingRight = oldPaddingRight;\r\n          canvas.style.paddingTop = oldPaddingTop;\r\n          canvas.style.paddingBottom = oldPaddingBottom;\r\n          canvas.style.marginLeft = oldMarginLeft; // IE11\r\n          canvas.style.marginRight = oldMarginRight;\r\n          canvas.style.marginTop = oldMarginTop;\r\n          canvas.style.marginBottom = oldMarginBottom;\r\n          document.body.style.margin = oldDocumentBodyMargin;\r\n          document.documentElement.style.overflow = oldDocumentOverflow; // Chrome, Firefox\r\n          document.body.scroll = oldDocumentScroll; // IE\r\n          canvas.style.imageRendering = oldImageRendering;\r\n          if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, oldWidth, oldHeight);\r\n  \r\n          if (currentFullscreenStrategy.canvasResizedCallback) {\r\n            ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n          }\r\n        }\r\n      }\r\n      document.addEventListener('fullscreenchange', restoreOldStyle);\r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      document.addEventListener('webkitfullscreenchange', restoreOldStyle);\r\n      return restoreOldStyle;\r\n    };\r\n  \r\n  var restoreHiddenElements = (hiddenElements) => {\r\n      for (var i = 0; i < hiddenElements.length; ++i) {\r\n        hiddenElements[i].node.style.display = hiddenElements[i].displayState;\r\n      }\r\n    };\r\n  \r\n  var currentFullscreenStrategy = {\r\n  };\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  /** @suppress {checkTypes} */\r\n  var jstoi_q = (str) => parseInt(str);\r\n  var softFullscreenResizeWebGLRenderTarget = () => {\r\n      var dpr = devicePixelRatio;\r\n      var inHiDPIFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode == 2;\r\n      var inAspectRatioFixedFullscreenMode = currentFullscreenStrategy.scaleMode == 2;\r\n      var inPixelPerfectFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode != 0;\r\n      var inCenteredWithoutScalingFullscreenMode = currentFullscreenStrategy.scaleMode == 3;\r\n      var screenWidth = inHiDPIFullscreenMode ? Math.round(innerWidth*dpr) : innerWidth;\r\n      var screenHeight = inHiDPIFullscreenMode ? Math.round(innerHeight*dpr) : innerHeight;\r\n      var w = screenWidth;\r\n      var h = screenHeight;\r\n      var canvas = currentFullscreenStrategy.target;\r\n      var canvasSize = getCanvasElementSize(canvas);\r\n      var x = canvasSize[0];\r\n      var y = canvasSize[1];\r\n      var topMargin;\r\n  \r\n      if (inAspectRatioFixedFullscreenMode) {\r\n        if (w*y < x*h) h = (w * y / x) | 0;\r\n        else if (w*y > x*h) w = (h * x / y) | 0;\r\n        topMargin = ((screenHeight - h) / 2) | 0;\r\n      }\r\n  \r\n      if (inPixelPerfectFullscreenMode) {\r\n        setCanvasElementSize(canvas, w, h);\r\n        if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, w, h);\r\n      }\r\n  \r\n      // Back to CSS pixels.\r\n      if (inHiDPIFullscreenMode) {\r\n        topMargin /= dpr;\r\n        w /= dpr;\r\n        h /= dpr;\r\n        // Round to nearest 4 digits of precision.\r\n        w = Math.round(w*1e4)/1e4;\r\n        h = Math.round(h*1e4)/1e4;\r\n        topMargin = Math.round(topMargin*1e4)/1e4;\r\n      }\r\n  \r\n      if (inCenteredWithoutScalingFullscreenMode) {\r\n        var t = (innerHeight - jstoi_q(canvas.style.height)) / 2;\r\n        var b = (innerWidth - jstoi_q(canvas.style.width)) / 2;\r\n        setLetterbox(canvas, t, b);\r\n      } else {\r\n        canvas.style.width = w + 'px';\r\n        canvas.style.height = h + 'px';\r\n        var b = (innerWidth - w) / 2;\r\n        setLetterbox(canvas, topMargin, b);\r\n      }\r\n  \r\n      if (!inCenteredWithoutScalingFullscreenMode && currentFullscreenStrategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\r\n      }\r\n    };\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  var getBoundingClientRect = (e) => specialHTMLTargets.indexOf(e) < 0 ? e.getBoundingClientRect() : {'left':0,'top':0};\r\n  var JSEvents_resizeCanvasForFullscreen = (target, strategy) => {\r\n      var restoreOldStyle = registerRestoreOldStyle(target);\r\n      var cssWidth = strategy.softFullscreen ? innerWidth : screen.width;\r\n      var cssHeight = strategy.softFullscreen ? innerHeight : screen.height;\r\n      var rect = getBoundingClientRect(target);\r\n      var windowedCssWidth = rect.width;\r\n      var windowedCssHeight = rect.height;\r\n      var canvasSize = getCanvasElementSize(target);\r\n      var windowedRttWidth = canvasSize[0];\r\n      var windowedRttHeight = canvasSize[1];\r\n  \r\n      if (strategy.scaleMode == 3) {\r\n        setLetterbox(target, (cssHeight - windowedCssHeight) / 2, (cssWidth - windowedCssWidth) / 2);\r\n        cssWidth = windowedCssWidth;\r\n        cssHeight = windowedCssHeight;\r\n      } else if (strategy.scaleMode == 2) {\r\n        if (cssWidth*windowedRttHeight < windowedRttWidth*cssHeight) {\r\n          var desiredCssHeight = windowedRttHeight * cssWidth / windowedRttWidth;\r\n          setLetterbox(target, (cssHeight - desiredCssHeight) / 2, 0);\r\n          cssHeight = desiredCssHeight;\r\n        } else {\r\n          var desiredCssWidth = windowedRttWidth * cssHeight / windowedRttHeight;\r\n          setLetterbox(target, 0, (cssWidth - desiredCssWidth) / 2);\r\n          cssWidth = desiredCssWidth;\r\n        }\r\n      }\r\n  \r\n      // If we are adding padding, must choose a background color or otherwise Chrome will give the\r\n      // padding a default white color. Do it only if user has not customized their own background color.\r\n      if (!target.style.backgroundColor) target.style.backgroundColor = 'black';\r\n      // IE11 does the same, but requires the color to be set in the document body.\r\n      if (!document.body.style.backgroundColor) document.body.style.backgroundColor = 'black'; // IE11\r\n      // Firefox always shows black letterboxes independent of style color.\r\n  \r\n      target.style.width = cssWidth + 'px';\r\n      target.style.height = cssHeight + 'px';\r\n  \r\n      if (strategy.filteringMode == 1) {\r\n        target.style.imageRendering = 'optimizeSpeed';\r\n        target.style.imageRendering = '-moz-crisp-edges';\r\n        target.style.imageRendering = '-o-crisp-edges';\r\n        target.style.imageRendering = '-webkit-optimize-contrast';\r\n        target.style.imageRendering = 'optimize-contrast';\r\n        target.style.imageRendering = 'crisp-edges';\r\n        target.style.imageRendering = 'pixelated';\r\n      }\r\n  \r\n      var dpiScale = (strategy.canvasResolutionScaleMode == 2) ? devicePixelRatio : 1;\r\n      if (strategy.canvasResolutionScaleMode != 0) {\r\n        var newWidth = (cssWidth * dpiScale)|0;\r\n        var newHeight = (cssHeight * dpiScale)|0;\r\n        setCanvasElementSize(target, newWidth, newHeight);\r\n        if (target.GLctxObject) target.GLctxObject.GLctx.viewport(0, 0, newWidth, newHeight);\r\n      }\r\n      return restoreOldStyle;\r\n    };\r\n  \r\n  var _emscripten_enter_soft_fullscreen = (target, fullscreenStrategy) => {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var strategy = {\r\n          scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n          canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n          filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n          canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n          canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)],\r\n          target,\r\n          softFullscreen: true\r\n      };\r\n  \r\n      var restoreOldStyle = JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n  \r\n      document.documentElement.style.overflow = 'hidden';  // Firefox, Chrome\r\n      document.body.scroll = \"no\"; // IE11\r\n      document.body.style.margin = '0px'; // Override default document margin area on all browsers.\r\n  \r\n      var hiddenElements = hideEverythingExceptGivenElement(target);\r\n  \r\n      function restoreWindowedState() {\r\n        restoreOldStyle();\r\n        restoreHiddenElements(hiddenElements);\r\n        removeEventListener('resize', softFullscreenResizeWebGLRenderTarget);\r\n        if (strategy.canvasResizedCallback) {\r\n          ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n        }\r\n        currentFullscreenStrategy = 0;\r\n      }\r\n      restoreOldWindowedStyle = restoreWindowedState;\r\n      currentFullscreenStrategy = strategy;\r\n      addEventListener('resize', softFullscreenResizeWebGLRenderTarget);\r\n  \r\n      // Inform the caller that the canvas size has changed.\r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    };\r\n\r\n  \r\n  \r\n  \r\n  var JSEvents_requestFullscreen = (target, strategy) => {\r\n      // EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.\r\n      if (strategy.scaleMode != 0 || strategy.canvasResolutionScaleMode != 0) {\r\n        JSEvents_resizeCanvasForFullscreen(target, strategy);\r\n      }\r\n  \r\n      if (target.requestFullscreen) {\r\n        target.requestFullscreen();\r\n      } else if (target.webkitRequestFullscreen) {\r\n        target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n      } else {\r\n        return JSEvents.fullscreenEnabled() ? -3 : -1;\r\n      }\r\n  \r\n      currentFullscreenStrategy = strategy;\r\n  \r\n      if (strategy.canvasResizedCallback) {\r\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\r\n      }\r\n  \r\n      return 0;\r\n    };\r\n  \r\n  var _emscripten_exit_fullscreen = () => {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);\r\n  \r\n      var d = specialHTMLTargets[1];\r\n      if (d.exitFullscreen) {\r\n        d.fullscreenElement && d.exitFullscreen();\r\n      } else if (d.webkitExitFullscreen) {\r\n        d.webkitFullscreenElement && d.webkitExitFullscreen();\r\n      } else {\r\n        return -1;\r\n      }\r\n  \r\n      return 0;\r\n    };\r\n\r\n  \r\n  var requestPointerLock = (target) => {\r\n      if (target.requestPointerLock) {\r\n        target.requestPointerLock();\r\n      } else {\r\n        // document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,\r\n        // or if the whole browser just doesn't support the feature.\r\n        if (document.body.requestPointerLock\r\n          ) {\r\n          return -3;\r\n        }\r\n        return -1;\r\n      }\r\n      return 0;\r\n    };\r\n  var _emscripten_exit_pointerlock = () => {\r\n      // Make sure no queued up calls will fire after this.\r\n      JSEvents.removeDeferredCalls(requestPointerLock);\r\n  \r\n      if (document.exitPointerLock) {\r\n        document.exitPointerLock();\r\n      } else {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    };\r\n\r\n  var _emscripten_exit_soft_fullscreen = () => {\r\n      restoreOldWindowedStyle?.();\r\n      restoreOldWindowedStyle = null;\r\n  \r\n      return 0;\r\n    };\r\n\r\n  var _emscripten_get_device_pixel_ratio = () => {\r\n      return devicePixelRatio;\r\n    };\r\n\r\n  \r\n  \r\n  var _emscripten_get_element_css_size = (target, width, height) => {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAPF64[((width)>>3)] = rect.width;\r\n      HEAPF64[((height)>>3)] = rect.height;\r\n  \r\n      return 0;\r\n    };\r\n\r\n  \r\n  var fillGamepadEventData = (eventStruct, e) => {\r\n      HEAPF64[((eventStruct)>>3)] = e.timestamp;\r\n      for (var i = 0; i < e.axes.length; ++i) {\r\n        HEAPF64[(((eventStruct+i*8)+(16))>>3)] = e.axes[i];\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i].value;\r\n        } else {\r\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i];\r\n        }\r\n      }\r\n      for (var i = 0; i < e.buttons.length; ++i) {\r\n        if (typeof e.buttons[i] == 'object') {\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i].pressed;\r\n        } else {\r\n          // Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:\r\n          /** @suppress {checkTypes} */\r\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i] == 1;\r\n        }\r\n      }\r\n      HEAP32[(((eventStruct)+(1296))>>2)] = e.connected;\r\n      HEAP32[(((eventStruct)+(1300))>>2)] = e.index;\r\n      HEAP32[(((eventStruct)+(8))>>2)] = e.axes.length;\r\n      HEAP32[(((eventStruct)+(12))>>2)] = e.buttons.length;\r\n      stringToUTF8(e.id, eventStruct + 1304, 64);\r\n      stringToUTF8(e.mapping, eventStruct + 1368, 64);\r\n    };\r\n  var _emscripten_get_gamepad_status = (index, gamepadState) => {\r\n      // INVALID_PARAM is returned on a Gamepad index that never was there.\r\n      if (index < 0 || index >= JSEvents.lastGamepadState.length) return -5;\r\n  \r\n      // NO_DATA is returned on a Gamepad index that was removed.\r\n      // For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.\r\n      // This is because gamepads must keep their original position in the array.\r\n      // For example, removing the first of two gamepads produces [null/undefined/false, gamepad].\r\n      if (!JSEvents.lastGamepadState[index]) return -7;\r\n  \r\n      fillGamepadEventData(gamepadState, JSEvents.lastGamepadState[index]);\r\n      return 0;\r\n    };\r\n\r\n\r\n  var _emscripten_get_num_gamepads = () => {\r\n      // N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.\r\n      // Otherwise the following line will throw an exception.\r\n      return JSEvents.lastGamepadState.length;\r\n    };\r\n\r\n  var _emscripten_get_screen_size = (width, height) => {\r\n      HEAP32[((width)>>2)] = screen.width;\r\n      HEAP32[((height)>>2)] = screen.height;\r\n    };\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }\r\n  var _emscripten_glActiveTexture = _glActiveTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glAttachShader = (program, shader) => {\r\n      GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\r\n    };\r\n  var _emscripten_glAttachShader = _glAttachShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glBeginQuery = (target, id) => {\r\n      GLctx.beginQuery(target, GL.queries[id]);\r\n    };\r\n  var _emscripten_glBeginQuery = _glBeginQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glBeginQueryEXT = (target, id) => {\r\n      GLctx.disjointTimerQueryExt['beginQueryEXT'](target, GL.queries[id]);\r\n    };\r\n  var _emscripten_glBeginQueryEXT = _glBeginQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBeginTransformFeedback(x0) { GLctx.beginTransformFeedback(x0) }\r\n  var _emscripten_glBeginTransformFeedback = _glBeginTransformFeedback;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glBindAttribLocation = (program, index, name) => {\r\n      GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\r\n    };\r\n  var _emscripten_glBindAttribLocation = _glBindAttribLocation;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glBindBuffer = (target, buffer) => {\r\n      if (target == 0x8892 /*GL_ARRAY_BUFFER*/) {\r\n        GLctx.currentArrayBufferBinding = buffer;\r\n      } else if (target == 0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/) {\r\n        GLctx.currentElementArrayBufferBinding = buffer;\r\n      }\r\n  \r\n      if (target == 0x88EB /*GL_PIXEL_PACK_BUFFER*/) {\r\n        // In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2\r\n        // API function call when a buffer is bound to\r\n        // GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that\r\n        // binding point is non-null to know what is the proper API function to\r\n        // call.\r\n        GLctx.currentPixelPackBufferBinding = buffer;\r\n      } else if (target == 0x88EC /*GL_PIXEL_UNPACK_BUFFER*/) {\r\n        // In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to\r\n        // use a different WebGL 2 API function call when a buffer is bound to\r\n        // GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that\r\n        // binding point is non-null to know what is the proper API function to\r\n        // call.\r\n        GLctx.currentPixelUnpackBufferBinding = buffer;\r\n      }\r\n      GLctx.bindBuffer(target, GL.buffers[buffer]);\r\n    };\r\n  var _emscripten_glBindBuffer = _glBindBuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glBindBufferBase = (target, index, buffer) => {\r\n      GLctx.bindBufferBase(target, index, GL.buffers[buffer]);\r\n    };\r\n  var _emscripten_glBindBufferBase = _glBindBufferBase;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glBindBufferRange = (target, index, buffer, offset, ptrsize) => {\r\n      GLctx.bindBufferRange(target, index, GL.buffers[buffer], offset, ptrsize);\r\n    };\r\n  var _emscripten_glBindBufferRange = _glBindBufferRange;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glBindFramebuffer = (target, framebuffer) => {\r\n  \r\n      GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\r\n  \r\n    };\r\n  var _emscripten_glBindFramebuffer = _glBindFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glBindRenderbuffer = (target, renderbuffer) => {\r\n      GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\r\n    };\r\n  var _emscripten_glBindRenderbuffer = _glBindRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glBindSampler = (unit, sampler) => {\r\n      GLctx.bindSampler(unit, GL.samplers[sampler]);\r\n    };\r\n  var _emscripten_glBindSampler = _glBindSampler;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glBindTexture = (target, texture) => {\r\n      GLctx.bindTexture(target, GL.textures[texture]);\r\n    };\r\n  var _emscripten_glBindTexture = _glBindTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glBindTransformFeedback = (target, id) => {\r\n      GLctx.bindTransformFeedback(target, GL.transformFeedbacks[id]);\r\n    };\r\n  var _emscripten_glBindTransformFeedback = _glBindTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glBindVertexArray = (vao) => {\r\n      GLctx.bindVertexArray(GL.vaos[vao]);\r\n      var ibo = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\r\n      GLctx.currentElementArrayBufferBinding = ibo ? (ibo.name | 0) : 0;\r\n    };\r\n  var _emscripten_glBindVertexArray = _glBindVertexArray;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glBindVertexArrayOES = _glBindVertexArray;\r\n  var _emscripten_glBindVertexArrayOES = _glBindVertexArrayOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendColor(x0, x1, x2, x3) { GLctx.blendColor(x0, x1, x2, x3) }\r\n  var _emscripten_glBlendColor = _glBlendColor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendEquation(x0) { GLctx.blendEquation(x0) }\r\n  var _emscripten_glBlendEquation = _glBlendEquation;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendEquationSeparate(x0, x1) { GLctx.blendEquationSeparate(x0, x1) }\r\n  var _emscripten_glBlendEquationSeparate = _glBlendEquationSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }\r\n  var _emscripten_glBlendFunc = _glBlendFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlendFuncSeparate(x0, x1, x2, x3) { GLctx.blendFuncSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glBlendFuncSeparate = _glBlendFuncSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glBlitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) { GLctx.blitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) }\r\n  var _emscripten_glBlitFramebuffer = _glBlitFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glBufferData = (target, size, data, usage) => {\r\n  \r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\r\n        // those always when possible.  If size is zero, WebGL would interpret\r\n        // uploading the whole input arraybuffer (starting from given offset),\r\n        // which would not make sense in WebAssembly, so avoid uploading if size\r\n        // is zero. However we must still call bufferData to establish a backing\r\n        // storage of zero bytes.\r\n        if (data && size) {\r\n          GLctx.bufferData(target, HEAPU8, usage, data, size);\r\n        } else {\r\n          GLctx.bufferData(target, size, usage);\r\n        }\r\n      } else {\r\n        // N.b. here first form specifies a heap subarray, second form an integer\r\n        // size, so the ?: code here is polymorphic. It is advised to avoid\r\n        // randomly mixing both uses in calling code, to avoid any potential JS\r\n        // engine JIT issues.\r\n        GLctx.bufferData(target, data ? HEAPU8.subarray(data, data+size) : size, usage);\r\n      }\r\n    };\r\n  var _emscripten_glBufferData = _glBufferData;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glBufferSubData = (target, offset, size, data) => {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\r\n        // those always when possible.\r\n        size && GLctx.bufferSubData(target, offset, HEAPU8, data, size);\r\n        return;\r\n      }\r\n      GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));\r\n    };\r\n  var _emscripten_glBufferSubData = _glBufferSubData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCheckFramebufferStatus(x0) { return GLctx.checkFramebufferStatus(x0) }\r\n  var _emscripten_glCheckFramebufferStatus = _glCheckFramebufferStatus;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClear(x0) { GLctx.clear(x0) }\r\n  var _emscripten_glClear = _glClear;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearBufferfi(x0, x1, x2, x3) { GLctx.clearBufferfi(x0, x1, x2, x3) }\r\n  var _emscripten_glClearBufferfi = _glClearBufferfi;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glClearBufferfv = (buffer, drawbuffer, value) => {\r\n  \r\n      GLctx.clearBufferfv(buffer, drawbuffer, HEAPF32, value>>2);\r\n    };\r\n  var _emscripten_glClearBufferfv = _glClearBufferfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glClearBufferiv = (buffer, drawbuffer, value) => {\r\n  \r\n      GLctx.clearBufferiv(buffer, drawbuffer, HEAP32, value>>2);\r\n    };\r\n  var _emscripten_glClearBufferiv = _glClearBufferiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glClearBufferuiv = (buffer, drawbuffer, value) => {\r\n  \r\n      GLctx.clearBufferuiv(buffer, drawbuffer, HEAPU32, value>>2);\r\n    };\r\n  var _emscripten_glClearBufferuiv = _glClearBufferuiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }\r\n  var _emscripten_glClearColor = _glClearColor;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearDepthf(x0) { GLctx.clearDepth(x0) }\r\n  var _emscripten_glClearDepthf = _glClearDepthf;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glClearStencil(x0) { GLctx.clearStencil(x0) }\r\n  var _emscripten_glClearStencil = _glClearStencil;\r\n\r\n  var convertI32PairToI53 = (lo, hi) => {\r\n      return (lo >>> 0) + hi * 4294967296;\r\n    };\r\n  /** @suppress {duplicate } */\r\n  var _glClientWaitSync = (sync, flags, timeout_low, timeout_high) => {\r\n      // WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.\r\n      // In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.\r\n      // Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)\r\n      // See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      return GLctx.clientWaitSync(GL.syncs[sync], flags, timeout);\r\n    };\r\n  var _emscripten_glClientWaitSync = _glClientWaitSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glColorMask = (red, green, blue, alpha) => {\r\n      GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\r\n    };\r\n  var _emscripten_glColorMask = _glColorMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glCompileShader = (shader) => {\r\n      GLctx.compileShader(GL.shaders[shader]);\r\n    };\r\n  var _emscripten_glCompileShader = _glCompileShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glCompressedTexImage2D = (target, level, internalFormat, width, height, border, imageSize, data) => {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\r\n        // those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data);\r\n        } else {\r\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    };\r\n  var _emscripten_glCompressedTexImage2D = _glCompressedTexImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glCompressedTexImage3D = (target, level, internalFormat, width, height, depth, border, imageSize, data) => {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data);\r\n      } else {\r\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, HEAPU8, data, imageSize);\r\n      }\r\n    };\r\n  var _emscripten_glCompressedTexImage3D = _glCompressedTexImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glCompressedTexSubImage2D = (target, level, xoffset, yoffset, width, height, format, imageSize, data) => {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\r\n        // those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\r\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\r\n        } else {\r\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, HEAPU8, data, imageSize);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\r\n    };\r\n  var _emscripten_glCompressedTexSubImage2D = _glCompressedTexSubImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glCompressedTexSubImage3D = (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) => {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\r\n      } else {\r\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, HEAPU8, data, imageSize);\r\n      }\r\n    };\r\n  var _emscripten_glCompressedTexSubImage3D = _glCompressedTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyBufferSubData(x0, x1, x2, x3, x4) { GLctx.copyBufferSubData(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glCopyBufferSubData = _glCopyBufferSubData;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\r\n  var _emscripten_glCopyTexImage2D = _glCopyTexImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\r\n  var _emscripten_glCopyTexSubImage2D = _glCopyTexSubImage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCopyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) { GLctx.copyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) }\r\n  var _emscripten_glCopyTexSubImage3D = _glCopyTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glCreateProgram = () => {\r\n      var id = GL.getNewId(GL.programs);\r\n      var program = GLctx.createProgram();\r\n      // Store additional information needed for each shader program:\r\n      program.name = id;\r\n      // Lazy cache results of\r\n      // glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)\r\n      program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\r\n      program.uniformIdCounter = 1;\r\n      GL.programs[id] = program;\r\n      return id;\r\n    };\r\n  var _emscripten_glCreateProgram = _glCreateProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glCreateShader = (shaderType) => {\r\n      var id = GL.getNewId(GL.shaders);\r\n      GL.shaders[id] = GLctx.createShader(shaderType);\r\n  \r\n      return id;\r\n    };\r\n  var _emscripten_glCreateShader = _glCreateShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glCullFace(x0) { GLctx.cullFace(x0) }\r\n  var _emscripten_glCullFace = _glCullFace;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDeleteBuffers = (n, buffers) => {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((buffers)+(i*4))>>2)];\r\n        var buffer = GL.buffers[id];\r\n  \r\n        // From spec: \"glDeleteBuffers silently ignores 0's and names that do not\r\n        // correspond to existing buffer objects.\"\r\n        if (!buffer) continue;\r\n  \r\n        GLctx.deleteBuffer(buffer);\r\n        buffer.name = 0;\r\n        GL.buffers[id] = null;\r\n  \r\n        if (id == GLctx.currentArrayBufferBinding) GLctx.currentArrayBufferBinding = 0;\r\n        if (id == GLctx.currentElementArrayBufferBinding) GLctx.currentElementArrayBufferBinding = 0;\r\n        if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\r\n        if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\r\n      }\r\n    };\r\n  var _emscripten_glDeleteBuffers = _glDeleteBuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDeleteFramebuffers = (n, framebuffers) => {\r\n      for (var i = 0; i < n; ++i) {\r\n        var id = HEAP32[(((framebuffers)+(i*4))>>2)];\r\n        var framebuffer = GL.framebuffers[id];\r\n        if (!framebuffer) continue; // GL spec: \"glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects\".\r\n        GLctx.deleteFramebuffer(framebuffer);\r\n        framebuffer.name = 0;\r\n        GL.framebuffers[id] = null;\r\n      }\r\n    };\r\n  var _emscripten_glDeleteFramebuffers = _glDeleteFramebuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDeleteProgram = (id) => {\r\n      if (!id) return;\r\n      var program = GL.programs[id];\r\n      if (!program) {\r\n        // glDeleteProgram actually signals an error when deleting a nonexisting\r\n        // object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteProgram(program);\r\n      program.name = 0;\r\n      GL.programs[id] = null;\r\n    };\r\n  var _emscripten_glDeleteProgram = _glDeleteProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDeleteQueries = (n, ids) => {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.deleteQuery(query);\r\n        GL.queries[id] = null;\r\n      }\r\n    };\r\n  var _emscripten_glDeleteQueries = _glDeleteQueries;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDeleteQueriesEXT = (n, ids) => {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var query = GL.queries[id];\r\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);\r\n        GL.queries[id] = null;\r\n      }\r\n    };\r\n  var _emscripten_glDeleteQueriesEXT = _glDeleteQueriesEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDeleteRenderbuffers = (n, renderbuffers) => {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];\r\n        var renderbuffer = GL.renderbuffers[id];\r\n        if (!renderbuffer) continue; // GL spec: \"glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects\".\r\n        GLctx.deleteRenderbuffer(renderbuffer);\r\n        renderbuffer.name = 0;\r\n        GL.renderbuffers[id] = null;\r\n      }\r\n    };\r\n  var _emscripten_glDeleteRenderbuffers = _glDeleteRenderbuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDeleteSamplers = (n, samplers) => {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((samplers)+(i*4))>>2)];\r\n        var sampler = GL.samplers[id];\r\n        if (!sampler) continue;\r\n        GLctx.deleteSampler(sampler);\r\n        sampler.name = 0;\r\n        GL.samplers[id] = null;\r\n      }\r\n    };\r\n  var _emscripten_glDeleteSamplers = _glDeleteSamplers;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDeleteShader = (id) => {\r\n      if (!id) return;\r\n      var shader = GL.shaders[id];\r\n      if (!shader) {\r\n        // glDeleteShader actually signals an error when deleting a nonexisting\r\n        // object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteShader(shader);\r\n      GL.shaders[id] = null;\r\n    };\r\n  var _emscripten_glDeleteShader = _glDeleteShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDeleteSync = (id) => {\r\n      if (!id) return;\r\n      var sync = GL.syncs[id];\r\n      if (!sync) { // glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      GLctx.deleteSync(sync);\r\n      sync.name = 0;\r\n      GL.syncs[id] = null;\r\n    };\r\n  var _emscripten_glDeleteSync = _glDeleteSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDeleteTextures = (n, textures) => {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((textures)+(i*4))>>2)];\r\n        var texture = GL.textures[id];\r\n        // GL spec: \"glDeleteTextures silently ignores 0s and names that do not\r\n        // correspond to existing textures\".\r\n        if (!texture) continue;\r\n        GLctx.deleteTexture(texture);\r\n        texture.name = 0;\r\n        GL.textures[id] = null;\r\n      }\r\n    };\r\n  var _emscripten_glDeleteTextures = _glDeleteTextures;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDeleteTransformFeedbacks = (n, ids) => {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((ids)+(i*4))>>2)];\r\n        var transformFeedback = GL.transformFeedbacks[id];\r\n        if (!transformFeedback) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\r\n        GLctx.deleteTransformFeedback(transformFeedback);\r\n        transformFeedback.name = 0;\r\n        GL.transformFeedbacks[id] = null;\r\n      }\r\n    };\r\n  var _emscripten_glDeleteTransformFeedbacks = _glDeleteTransformFeedbacks;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDeleteVertexArrays = (n, vaos) => {\r\n      for (var i = 0; i < n; i++) {\r\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\r\n        GLctx.deleteVertexArray(GL.vaos[id]);\r\n        GL.vaos[id] = null;\r\n      }\r\n    };\r\n  var _emscripten_glDeleteVertexArrays = _glDeleteVertexArrays;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDeleteVertexArraysOES = _glDeleteVertexArrays;\r\n  var _emscripten_glDeleteVertexArraysOES = _glDeleteVertexArraysOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthFunc(x0) { GLctx.depthFunc(x0) }\r\n  var _emscripten_glDepthFunc = _glDepthFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDepthMask = (flag) => {\r\n      GLctx.depthMask(!!flag);\r\n    };\r\n  var _emscripten_glDepthMask = _glDepthMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDepthRangef(x0, x1) { GLctx.depthRange(x0, x1) }\r\n  var _emscripten_glDepthRangef = _glDepthRangef;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDetachShader = (program, shader) => {\r\n      GLctx.detachShader(GL.programs[program], GL.shaders[shader]);\r\n    };\r\n  var _emscripten_glDetachShader = _glDetachShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glDisable(x0) { GLctx.disable(x0) }\r\n  var _emscripten_glDisable = _glDisable;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDisableVertexAttribArray = (index) => {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = false;\r\n      GLctx.disableVertexAttribArray(index);\r\n    };\r\n  var _emscripten_glDisableVertexAttribArray = _glDisableVertexAttribArray;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDrawArrays = (mode, first, count) => {\r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(first + count);\r\n  \r\n      GLctx.drawArrays(mode, first, count);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings();\r\n    };\r\n  var _emscripten_glDrawArrays = _glDrawArrays;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstanced = (mode, first, count, primcount) => {\r\n      GLctx.drawArraysInstanced(mode, first, count, primcount);\r\n    };\r\n  var _emscripten_glDrawArraysInstanced = _glDrawArraysInstanced;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedANGLE = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedANGLE = _glDrawArraysInstancedANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedARB = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedARB = _glDrawArraysInstancedARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedEXT = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedEXT = _glDrawArraysInstancedEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawArraysInstancedNV = _glDrawArraysInstanced;\r\n  var _emscripten_glDrawArraysInstancedNV = _glDrawArraysInstancedNV;\r\n\r\n  var tempFixedLengthArray = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffers = (n, bufs) => {\r\n  \r\n      var bufArray = tempFixedLengthArray[n];\r\n      for (var i = 0; i < n; i++) {\r\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.drawBuffers(bufArray);\r\n    };\r\n  var _emscripten_glDrawBuffers = _glDrawBuffers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffersEXT = _glDrawBuffers;\r\n  var _emscripten_glDrawBuffersEXT = _glDrawBuffersEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawBuffersWEBGL = _glDrawBuffers;\r\n  var _emscripten_glDrawBuffersWEBGL = _glDrawBuffersWEBGL;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDrawElements = (mode, count, type, indices) => {\r\n      var buf;\r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        var size = GL.calcBufLength(1, type, 0, count);\r\n        buf = GL.getTempIndexBuffer(size);\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, buf);\r\n        GLctx.bufferSubData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/,\r\n                                 0,\r\n                                 HEAPU8.subarray(indices, indices + size));\r\n        // the index is now 0\r\n        indices = 0;\r\n      }\r\n  \r\n      // bind any client-side buffers\r\n      GL.preDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      GLctx.drawElements(mode, count, type, indices);\r\n  \r\n      GL.postDrawHandleClientVertexAttribBindings(count);\r\n  \r\n      if (!GLctx.currentElementArrayBufferBinding) {\r\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\r\n      }\r\n    };\r\n  var _emscripten_glDrawElements = _glDrawElements;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstanced = (mode, count, type, indices, primcount) => {\r\n      GLctx.drawElementsInstanced(mode, count, type, indices, primcount);\r\n    };\r\n  var _emscripten_glDrawElementsInstanced = _glDrawElementsInstanced;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedANGLE = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedANGLE = _glDrawElementsInstancedANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedARB = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedARB = _glDrawElementsInstancedARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedEXT = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedEXT = _glDrawElementsInstancedEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glDrawElementsInstancedNV = _glDrawElementsInstanced;\r\n  var _emscripten_glDrawElementsInstancedNV = _glDrawElementsInstancedNV;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glDrawRangeElements = (mode, start, end, count, type, indices) => {\r\n      // TODO: This should be a trivial pass-though function registered at the bottom of this page as\r\n      // glFuncs[6][1] += ' drawRangeElements';\r\n      // but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,\r\n      // we work around by ignoring the range.\r\n      _glDrawElements(mode, count, type, indices);\r\n    };\r\n  var _emscripten_glDrawRangeElements = _glDrawRangeElements;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEnable(x0) { GLctx.enable(x0) }\r\n  var _emscripten_glEnable = _glEnable;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glEnableVertexAttribArray = (index) => {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      cb.enabled = true;\r\n      GLctx.enableVertexAttribArray(index);\r\n    };\r\n  var _emscripten_glEnableVertexAttribArray = _glEnableVertexAttribArray;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndQuery(x0) { GLctx.endQuery(x0) }\r\n  var _emscripten_glEndQuery = _glEndQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glEndQueryEXT = (target) => {\r\n      GLctx.disjointTimerQueryExt['endQueryEXT'](target);\r\n    };\r\n  var _emscripten_glEndQueryEXT = _glEndQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glEndTransformFeedback() { GLctx.endTransformFeedback() }\r\n  var _emscripten_glEndTransformFeedback = _glEndTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glFenceSync = (condition, flags) => {\r\n      var sync = GLctx.fenceSync(condition, flags);\r\n      if (sync) {\r\n        var id = GL.getNewId(GL.syncs);\r\n        sync.name = id;\r\n        GL.syncs[id] = sync;\r\n        return id;\r\n      }\r\n      return 0; // Failed to create a sync object\r\n    };\r\n  var _emscripten_glFenceSync = _glFenceSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFinish() { GLctx.finish() }\r\n  var _emscripten_glFinish = _glFinish;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFlush() { GLctx.flush() }\r\n  var _emscripten_glFlush = _glFlush;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glFramebufferRenderbuffer = (target, attachment, renderbuffertarget, renderbuffer) => {\r\n      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,\r\n                                         GL.renderbuffers[renderbuffer]);\r\n    };\r\n  var _emscripten_glFramebufferRenderbuffer = _glFramebufferRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glFramebufferTexture2D = (target, attachment, textarget, texture, level) => {\r\n      GLctx.framebufferTexture2D(target, attachment, textarget,\r\n                                      GL.textures[texture], level);\r\n    };\r\n  var _emscripten_glFramebufferTexture2D = _glFramebufferTexture2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glFramebufferTextureLayer = (target, attachment, texture, level, layer) => {\r\n      GLctx.framebufferTextureLayer(target, attachment, GL.textures[texture], level, layer);\r\n    };\r\n  var _emscripten_glFramebufferTextureLayer = _glFramebufferTextureLayer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glFrontFace(x0) { GLctx.frontFace(x0) }\r\n  var _emscripten_glFrontFace = _glFrontFace;\r\n\r\n  var __glGenObject = (n, buffers, createFunction, objectTable\r\n      ) => {\r\n      for (var i = 0; i < n; i++) {\r\n        var buffer = GLctx[createFunction]();\r\n        var id = buffer && GL.getNewId(objectTable);\r\n        if (buffer) {\r\n          buffer.name = id;\r\n          objectTable[id] = buffer;\r\n        } else {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n        }\r\n        HEAP32[(((buffers)+(i*4))>>2)] = id;\r\n      }\r\n    };\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGenBuffers = (n, buffers) => {\r\n      __glGenObject(n, buffers, 'createBuffer', GL.buffers\r\n        );\r\n    };\r\n  var _emscripten_glGenBuffers = _glGenBuffers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGenFramebuffers = (n, ids) => {\r\n      __glGenObject(n, ids, 'createFramebuffer', GL.framebuffers\r\n        );\r\n    };\r\n  var _emscripten_glGenFramebuffers = _glGenFramebuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGenQueries = (n, ids) => {\r\n      __glGenObject(n, ids, 'createQuery', GL.queries\r\n        );\r\n    };\r\n  var _emscripten_glGenQueries = _glGenQueries;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGenQueriesEXT = (n, ids) => {\r\n      for (var i = 0; i < n; i++) {\r\n        var query = GLctx.disjointTimerQueryExt['createQueryEXT']();\r\n        if (!query) {\r\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n          while (i < n) HEAP32[(((ids)+(i++*4))>>2)] = 0;\r\n          return;\r\n        }\r\n        var id = GL.getNewId(GL.queries);\r\n        query.name = id;\r\n        GL.queries[id] = query;\r\n        HEAP32[(((ids)+(i*4))>>2)] = id;\r\n      }\r\n    };\r\n  var _emscripten_glGenQueriesEXT = _glGenQueriesEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGenRenderbuffers = (n, renderbuffers) => {\r\n      __glGenObject(n, renderbuffers, 'createRenderbuffer', GL.renderbuffers\r\n        );\r\n    };\r\n  var _emscripten_glGenRenderbuffers = _glGenRenderbuffers;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGenSamplers = (n, samplers) => {\r\n      __glGenObject(n, samplers, 'createSampler', GL.samplers\r\n        );\r\n    };\r\n  var _emscripten_glGenSamplers = _glGenSamplers;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGenTextures = (n, textures) => {\r\n      __glGenObject(n, textures, 'createTexture', GL.textures\r\n        );\r\n    };\r\n  var _emscripten_glGenTextures = _glGenTextures;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGenTransformFeedbacks = (n, ids) => {\r\n      __glGenObject(n, ids, 'createTransformFeedback', GL.transformFeedbacks\r\n        );\r\n    };\r\n  var _emscripten_glGenTransformFeedbacks = _glGenTransformFeedbacks;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  function _glGenVertexArrays(n, arrays) {\r\n      __glGenObject(n, arrays, 'createVertexArray', GL.vaos\r\n        );\r\n    }\r\n  var _emscripten_glGenVertexArrays = _glGenVertexArrays;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGenVertexArraysOES = _glGenVertexArrays;\r\n  var _emscripten_glGenVertexArraysOES = _glGenVertexArraysOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glGenerateMipmap(x0) { GLctx.generateMipmap(x0) }\r\n  var _emscripten_glGenerateMipmap = _glGenerateMipmap;\r\n\r\n  \r\n  var __glGetActiveAttribOrUniform = (funcName, program, index, bufSize, length, size, type, name) => {\r\n      program = GL.programs[program];\r\n      var info = GLctx[funcName](program, index);\r\n      if (info) {\r\n        // If an error occurs, nothing will be written to length, size and type and name.\r\n        var numBytesWrittenExclNull = name && stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n        if (size) HEAP32[((size)>>2)] = info.size;\r\n        if (type) HEAP32[((type)>>2)] = info.type;\r\n      }\r\n    };\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetActiveAttrib = (program, index, bufSize, length, size, type, name) => {\r\n      __glGetActiveAttribOrUniform('getActiveAttrib', program, index, bufSize, length, size, type, name);\r\n    };\r\n  var _emscripten_glGetActiveAttrib = _glGetActiveAttrib;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetActiveUniform = (program, index, bufSize, length, size, type, name) => {\r\n      __glGetActiveAttribOrUniform('getActiveUniform', program, index, bufSize, length, size, type, name);\r\n    };\r\n  var _emscripten_glGetActiveUniform = _glGetActiveUniform;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetActiveUniformBlockName = (program, uniformBlockIndex, bufSize, length, uniformBlockName) => {\r\n      program = GL.programs[program];\r\n  \r\n      var result = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\r\n      if (!result) return; // If an error occurs, nothing will be written to uniformBlockName or length.\r\n      if (uniformBlockName && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(result, uniformBlockName, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n    };\r\n  var _emscripten_glGetActiveUniformBlockName = _glGetActiveUniformBlockName;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetActiveUniformBlockiv = (program, uniformBlockIndex, pname, params) => {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8A41 /* GL_UNIFORM_BLOCK_NAME_LENGTH */) {\r\n        var name = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\r\n        HEAP32[((params)>>2)] = name.length+1;\r\n        return;\r\n      }\r\n  \r\n      var result = GLctx.getActiveUniformBlockParameter(program, uniformBlockIndex, pname);\r\n      if (result === null) return; // If an error occurs, nothing should be written to params.\r\n      if (pname == 0x8A43 /*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/) {\r\n        for (var i = 0; i < result.length; i++) {\r\n          HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n        }\r\n      } else {\r\n        HEAP32[((params)>>2)] = result;\r\n      }\r\n    };\r\n  var _emscripten_glGetActiveUniformBlockiv = _glGetActiveUniformBlockiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetActiveUniformsiv = (program, uniformCount, uniformIndices, pname, params) => {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && uniformIndices == 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var ids = [];\r\n      for (var i = 0; i < uniformCount; i++) {\r\n        ids.push(HEAP32[(((uniformIndices)+(i*4))>>2)]);\r\n      }\r\n  \r\n      var result = GLctx.getActiveUniforms(program, ids, pname);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to params.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((params)+(i*4))>>2)] = result[i];\r\n      }\r\n    };\r\n  var _emscripten_glGetActiveUniformsiv = _glGetActiveUniformsiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetAttachedShaders = (program, maxCount, count, shaders) => {\r\n      var result = GLctx.getAttachedShaders(GL.programs[program]);\r\n      var len = result.length;\r\n      if (len > maxCount) {\r\n        len = maxCount;\r\n      }\r\n      HEAP32[((count)>>2)] = len;\r\n      for (var i = 0; i < len; ++i) {\r\n        var id = GL.shaders.indexOf(result[i]);\r\n        HEAP32[(((shaders)+(i*4))>>2)] = id;\r\n      }\r\n    };\r\n  var _emscripten_glGetAttachedShaders = _glGetAttachedShaders;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetAttribLocation = (program, name) => {\r\n      return GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\r\n    };\r\n  var _emscripten_glGetAttribLocation = _glGetAttribLocation;\r\n\r\n  var writeI53ToI64 = (ptr, num) => {\r\n      HEAPU32[((ptr)>>2)] = num;\r\n      var lower = HEAPU32[((ptr)>>2)];\r\n      HEAPU32[(((ptr)+(4))>>2)] = (num - lower)/4294967296;\r\n    };\r\n  \r\n  var emscriptenWebGLGet = (name_, p, type) => {\r\n      // Guard against user passing a null pointer.\r\n      // Note that GLES2 spec does not say anything about how passing a null\r\n      // pointer should be treated.  Testing on desktop core GL 3, the application\r\n      // crashes on glGetIntegerv to a null pointer, but better to report an error\r\n      // instead of doing anything random.\r\n      if (!p) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = undefined;\r\n      switch (name_) { // Handle a few trivial GLES values\r\n        case 0x8DFA: // GL_SHADER_COMPILER\r\n          ret = 1;\r\n          break;\r\n        case 0x8DF8: // GL_SHADER_BINARY_FORMATS\r\n          if (type != 0 && type != 1) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n          }\r\n          // Do not write anything to the out pointer, since no binary formats are\r\n          // supported.\r\n          return;\r\n        case 0x87FE: // GL_NUM_PROGRAM_BINARY_FORMATS\r\n        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS\r\n          ret = 0;\r\n          break;\r\n        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS\r\n          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete\r\n          // since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be\r\n          // queried for length), so implement it ourselves to allow C++ GLES2\r\n          // code get the length.\r\n          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);\r\n          ret = formats ? formats.length : 0;\r\n          break;\r\n  \r\n        case 0x821D: // GL_NUM_EXTENSIONS\r\n          if (GL.currentContext.version < 2) {\r\n            // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */);\r\n            return;\r\n          }\r\n          // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\r\n          var exts = GLctx.getSupportedExtensions() || [];\r\n          // each extension is duplicated, first in unprefixed WebGL form, and\r\n          // then a second time with \"GL_\" prefix.\r\n          ret = 2 * exts.length;\r\n          break;\r\n        case 0x821B: // GL_MAJOR_VERSION\r\n        case 0x821C: // GL_MINOR_VERSION\r\n          if (GL.currentContext.version < 2) {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          ret = name_ == 0x821B ? 3 : 0; // return version 3.0\r\n          break;\r\n      }\r\n  \r\n      if (ret === undefined) {\r\n        var result = GLctx.getParameter(name_);\r\n        switch (typeof result) {\r\n          case \"number\":\r\n            ret = result;\r\n            break;\r\n          case \"boolean\":\r\n            ret = result ? 1 : 0;\r\n            break;\r\n          case \"string\":\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          case \"object\":\r\n            if (result === null) {\r\n              // null is a valid result for some (e.g., which buffer is bound -\r\n              // perhaps nothing is bound), but otherwise can mean an invalid\r\n              // name_, which we need to report as an error\r\n              switch (name_) {\r\n                case 0x8894: // ARRAY_BUFFER_BINDING\r\n                case 0x8B8D: // CURRENT_PROGRAM\r\n                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING\r\n                case 0x8CA6: // FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING\r\n                case 0x8CA7: // RENDERBUFFER_BINDING\r\n                case 0x8069: // TEXTURE_BINDING_2D\r\n                case 0x85B5: // WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES\r\n                case 0x8F36: // COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER\r\n                case 0x8F37: // COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER\r\n                case 0x88ED: // PIXEL_PACK_BUFFER_BINDING\r\n                case 0x88EF: // PIXEL_UNPACK_BUFFER_BINDING\r\n                case 0x8CAA: // READ_FRAMEBUFFER_BINDING\r\n                case 0x8919: // SAMPLER_BINDING\r\n                case 0x8C1D: // TEXTURE_BINDING_2D_ARRAY\r\n                case 0x806A: // TEXTURE_BINDING_3D\r\n                case 0x8E25: // TRANSFORM_FEEDBACK_BINDING\r\n                case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n                case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP\r\n                  ret = 0;\r\n                  break;\r\n                }\r\n                default: {\r\n                  GL.recordError(0x500); // GL_INVALID_ENUM\r\n                  return;\r\n                }\r\n              }\r\n            } else if (result instanceof Float32Array ||\r\n                       result instanceof Uint32Array ||\r\n                       result instanceof Int32Array ||\r\n                       result instanceof Array) {\r\n              for (var i = 0; i < result.length; ++i) {\r\n                switch (type) {\r\n                  case 0: HEAP32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 2: HEAPF32[(((p)+(i*4))>>2)] = result[i]; break;\r\n                  case 4: HEAP8[(((p)+(i))>>0)] = result[i] ? 1 : 0; break;\r\n                }\r\n              }\r\n              return;\r\n            } else {\r\n              try {\r\n                ret = result.name | 0;\r\n              } catch(e) {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                err(`GL_INVALID_ENUM in glGet${type}v: Unknown object returned from WebGL getParameter(${name_})! (error: ${e})`);\r\n                return;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            err(`GL_INVALID_ENUM in glGet${type}v: Native code calling glGet${type}v(${name_}) and it returns ${result} of type ${typeof(result)}!`);\r\n            return;\r\n        }\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(p, ret); break;\r\n        case 0: HEAP32[((p)>>2)] = ret; break;\r\n        case 2:   HEAPF32[((p)>>2)] = ret; break;\r\n        case 4: HEAP8[((p)>>0)] = ret ? 1 : 0; break;\r\n      }\r\n    };\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetBooleanv = (name_, p) => emscriptenWebGLGet(name_, p, 4);\r\n  var _emscripten_glGetBooleanv = _glGetBooleanv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetBufferParameteri64v = (target, value, data) => {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      writeI53ToI64(data, GLctx.getBufferParameter(target, value));\r\n    };\r\n  var _emscripten_glGetBufferParameteri64v = _glGetBufferParameteri64v;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetBufferParameteriv = (target, value, data) => {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null\r\n        // pointer. Since calling this function does not make sense if data ==\r\n        // null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((data)>>2)] = GLctx.getBufferParameter(target, value);\r\n    };\r\n  var _emscripten_glGetBufferParameteriv = _glGetBufferParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetError = () => {\r\n      var error = GLctx.getError() || GL.lastError;\r\n      GL.lastError = 0/*GL_NO_ERROR*/;\r\n      return error;\r\n    };\r\n  var _emscripten_glGetError = _glGetError;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetFloatv = (name_, p) => emscriptenWebGLGet(name_, p, 2);\r\n  var _emscripten_glGetFloatv = _glGetFloatv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetFragDataLocation = (program, name) => {\r\n      return GLctx.getFragDataLocation(GL.programs[program], UTF8ToString(name));\r\n    };\r\n  var _emscripten_glGetFragDataLocation = _glGetFragDataLocation;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetFramebufferAttachmentParameteriv = (target, attachment, pname, params) => {\r\n      var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\r\n      if (result instanceof WebGLRenderbuffer ||\r\n          result instanceof WebGLTexture) {\r\n        result = result.name | 0;\r\n      }\r\n      HEAP32[((params)>>2)] = result;\r\n    };\r\n  var _emscripten_glGetFramebufferAttachmentParameteriv = _glGetFramebufferAttachmentParameteriv;\r\n\r\n  var emscriptenWebGLGetIndexed = (target, index, data, type) => {\r\n      if (!data) {\r\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\r\n        // if data == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var result = GLctx.getIndexedParameter(target, index);\r\n      var ret;\r\n      switch (typeof result) {\r\n        case 'boolean':\r\n          ret = result ? 1 : 0;\r\n          break;\r\n        case 'number':\r\n          ret = result;\r\n          break;\r\n        case 'object':\r\n          if (result === null) {\r\n            switch (target) {\r\n              case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\r\n              case 0x8A28: // UNIFORM_BUFFER_BINDING\r\n                ret = 0;\r\n                break;\r\n              default: {\r\n                GL.recordError(0x500); // GL_INVALID_ENUM\r\n                return;\r\n              }\r\n            }\r\n          } else if (result instanceof WebGLBuffer) {\r\n            ret = result.name | 0;\r\n          } else {\r\n            GL.recordError(0x500); // GL_INVALID_ENUM\r\n            return;\r\n          }\r\n          break;\r\n        default:\r\n          GL.recordError(0x500); // GL_INVALID_ENUM\r\n          return;\r\n      }\r\n  \r\n      switch (type) {\r\n        case 1: writeI53ToI64(data, ret); break;\r\n        case 0: HEAP32[((data)>>2)] = ret; break;\r\n        case 2: HEAPF32[((data)>>2)] = ret; break;\r\n        case 4: HEAP8[((data)>>0)] = ret ? 1 : 0; break;\r\n        default: throw 'internal emscriptenWebGLGetIndexed() error, bad type: ' + type;\r\n      }\r\n    };\r\n  /** @suppress {duplicate } */\r\n  var _glGetInteger64i_v = (target, index, data) =>\r\n      emscriptenWebGLGetIndexed(target, index, data, 1);\r\n  var _emscripten_glGetInteger64i_v = _glGetInteger64i_v;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetInteger64v = (name_, p) => {\r\n      emscriptenWebGLGet(name_, p, 1);\r\n    };\r\n  var _emscripten_glGetInteger64v = _glGetInteger64v;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetIntegeri_v = (target, index, data) =>\r\n      emscriptenWebGLGetIndexed(target, index, data, 0);\r\n  var _emscripten_glGetIntegeri_v = _glGetIntegeri_v;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetIntegerv = (name_, p) => emscriptenWebGLGet(name_, p, 0);\r\n  var _emscripten_glGetIntegerv = _glGetIntegerv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetInternalformativ = (target, internalformat, pname, bufSize, params) => {\r\n      if (bufSize < 0) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getInternalformatParameter(target, internalformat, pname);\r\n      if (ret === null) return;\r\n      for (var i = 0; i < ret.length && i < bufSize; ++i) {\r\n        HEAP32[(((params)+(i*4))>>2)] = ret[i];\r\n      }\r\n    };\r\n  var _emscripten_glGetInternalformativ = _glGetInternalformativ;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetProgramBinary = (program, bufSize, length, binaryFormat, binary) => {\r\n      GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n    };\r\n  var _emscripten_glGetProgramBinary = _glGetProgramBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetProgramInfoLog = (program, maxLength, length, infoLog) => {\r\n      var log = GLctx.getProgramInfoLog(GL.programs[program]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    };\r\n  var _emscripten_glGetProgramInfoLog = _glGetProgramInfoLog;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetProgramiv = (program, pname, p) => {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null\r\n        // pointer. Since calling this function does not make sense if p == null,\r\n        // issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      if (program >= GL.counter) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n  \r\n      program = GL.programs[program];\r\n  \r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getProgramInfoLog(program);\r\n        if (log === null) log = '(unknown error)';\r\n        HEAP32[((p)>>2)] = log.length + 1;\r\n      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\r\n        if (!program.maxUniformLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n            program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformLength;\r\n      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\r\n        if (!program.maxAttributeLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/); ++i) {\r\n            program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxAttributeLength;\r\n      } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\r\n        if (!program.maxUniformBlockNameLength) {\r\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/); ++i) {\r\n            program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\r\n          }\r\n        }\r\n        HEAP32[((p)>>2)] = program.maxUniformBlockNameLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getProgramParameter(program, pname);\r\n      }\r\n    };\r\n  var _emscripten_glGetProgramiv = _glGetProgramiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjecti64vEXT = (id, pname, params) => {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param;\r\n      if (GL.currentContext.version < 2)\r\n      {\r\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      }\r\n      else {\r\n        param = GLctx.getQueryParameter(query, pname);\r\n      }\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      writeI53ToI64(params, ret);\r\n    };\r\n  var _emscripten_glGetQueryObjecti64vEXT = _glGetQueryObjecti64vEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectivEXT = (id, pname, params) => {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    };\r\n  var _emscripten_glGetQueryObjectivEXT = _glGetQueryObjectivEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectui64vEXT = _glGetQueryObjecti64vEXT;\r\n  var _emscripten_glGetQueryObjectui64vEXT = _glGetQueryObjectui64vEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectuiv = (id, pname, params) => {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var query = GL.queries[id];\r\n      var param = GLctx.getQueryParameter(query, pname);\r\n      var ret;\r\n      if (typeof param == 'boolean') {\r\n        ret = param ? 1 : 0;\r\n      } else {\r\n        ret = param;\r\n      }\r\n      HEAP32[((params)>>2)] = ret;\r\n    };\r\n  var _emscripten_glGetQueryObjectuiv = _glGetQueryObjectuiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryObjectuivEXT = _glGetQueryObjectivEXT;\r\n  var _emscripten_glGetQueryObjectuivEXT = _glGetQueryObjectuivEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryiv = (target, pname, params) => {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getQuery(target, pname);\r\n    };\r\n  var _emscripten_glGetQueryiv = _glGetQueryiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetQueryivEXT = (target, pname, params) => {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.disjointTimerQueryExt['getQueryEXT'](target, pname);\r\n    };\r\n  var _emscripten_glGetQueryivEXT = _glGetQueryivEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetRenderbufferParameteriv = (target, pname, params) => {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if params == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getRenderbufferParameter(target, pname);\r\n    };\r\n  var _emscripten_glGetRenderbufferParameteriv = _glGetRenderbufferParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetSamplerParameterfv = (sampler, pname, params) => {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\r\n    };\r\n  var _emscripten_glGetSamplerParameterfv = _glGetSamplerParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetSamplerParameteriv = (sampler, pname, params) => {\r\n      if (!params) {\r\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\r\n        // if p == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\r\n    };\r\n  var _emscripten_glGetSamplerParameteriv = _glGetSamplerParameteriv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetShaderInfoLog = (shader, maxLength, length, infoLog) => {\r\n      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n      if (log === null) log = '(unknown error)';\r\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    };\r\n  var _emscripten_glGetShaderInfoLog = _glGetShaderInfoLog;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetShaderPrecisionFormat = (shaderType, precisionType, range, precision) => {\r\n      var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\r\n      HEAP32[((range)>>2)] = result.rangeMin;\r\n      HEAP32[(((range)+(4))>>2)] = result.rangeMax;\r\n      HEAP32[((precision)>>2)] = result.precision;\r\n    };\r\n  var _emscripten_glGetShaderPrecisionFormat = _glGetShaderPrecisionFormat;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetShaderSource = (shader, bufSize, length, source) => {\r\n      var result = GLctx.getShaderSource(GL.shaders[shader]);\r\n      if (!result) return; // If an error occurs, nothing will be written to length or source.\r\n      var numBytesWrittenExclNull = (bufSize > 0 && source) ? stringToUTF8(result, source, bufSize) : 0;\r\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n    };\r\n  var _emscripten_glGetShaderSource = _glGetShaderSource;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetShaderiv = (shader, pname, p) => {\r\n      if (!p) {\r\n        // GLES2 specification does not specify how to behave if p is a null\r\n        // pointer. Since calling this function does not make sense if p == null,\r\n        // issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\r\n        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\r\n        if (log === null) log = '(unknown error)';\r\n        // The GLES2 specification says that if the shader has an empty info log,\r\n        // a value of 0 is returned. Otherwise the log has a null char appended.\r\n        // (An empty string is falsey, so we can just check that instead of\r\n        // looking at log.length.)\r\n        var logLength = log ? log.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = logLength;\r\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\r\n        var source = GLctx.getShaderSource(GL.shaders[shader]);\r\n        // source may be a null, or the empty string, both of which are falsey\r\n        // values that we report a 0 length for.\r\n        var sourceLength = source ? source.length + 1 : 0;\r\n        HEAP32[((p)>>2)] = sourceLength;\r\n      } else {\r\n        HEAP32[((p)>>2)] = GLctx.getShaderParameter(GL.shaders[shader], pname);\r\n      }\r\n    };\r\n  var _emscripten_glGetShaderiv = _glGetShaderiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetString = (name_) => {\r\n      var ret = GL.stringCache[name_];\r\n      if (!ret) {\r\n        switch (name_) {\r\n          case 0x1F03 /* GL_EXTENSIONS */:\r\n            ret = stringToNewUTF8(GL.getExtensions().join(' '));\r\n            break;\r\n          case 0x1F00 /* GL_VENDOR */:\r\n          case 0x1F01 /* GL_RENDERER */:\r\n          case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\r\n          case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\r\n            var s = GLctx.getParameter(name_);\r\n            if (!s) {\r\n              GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            }\r\n            ret = s ? stringToNewUTF8(s) : 0;\r\n            break;\r\n  \r\n          case 0x1F02 /* GL_VERSION */:\r\n            var glVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\r\n            // return GLES version string corresponding to the version of the WebGL context\r\n            if (GL.currentContext.version >= 2) glVersion = `OpenGL ES 3.0 (${glVersion})`;\r\n            else\r\n            {\r\n              glVersion = `OpenGL ES 2.0 (${glVersion})`;\r\n            }\r\n            ret = stringToNewUTF8(glVersion);\r\n            break;\r\n          case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\r\n            var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\r\n            // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\r\n            var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\r\n            var ver_num = glslVersion.match(ver_re);\r\n            if (ver_num !== null) {\r\n              if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\r\n              glslVersion = `OpenGL ES GLSL ES ${ver_num[1]} (${glslVersion})`;\r\n            }\r\n            ret = stringToNewUTF8(glslVersion);\r\n            break;\r\n          default:\r\n            GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n            // fall through\r\n        }\r\n        GL.stringCache[name_] = ret;\r\n      }\r\n      return ret;\r\n    };\r\n  var _emscripten_glGetString = _glGetString;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetStringi = (name, index) => {\r\n      if (GL.currentContext.version < 2) {\r\n        GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\r\n        return 0;\r\n      }\r\n      var stringiCache = GL.stringiCache[name];\r\n      if (stringiCache) {\r\n        if (index < 0 || index >= stringiCache.length) {\r\n          GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n          return 0;\r\n        }\r\n        return stringiCache[index];\r\n      }\r\n      switch (name) {\r\n        case 0x1F03 /* GL_EXTENSIONS */:\r\n          var exts = GL.getExtensions().map((e) => stringToNewUTF8(e));\r\n          stringiCache = GL.stringiCache[name] = exts;\r\n          if (index < 0 || index >= stringiCache.length) {\r\n            GL.recordError(0x501/*GL_INVALID_VALUE*/);\r\n            return 0;\r\n          }\r\n          return stringiCache[index];\r\n        default:\r\n          GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n          return 0;\r\n      }\r\n    };\r\n  var _emscripten_glGetStringi = _glGetStringi;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetSynciv = (sync, pname, bufSize, length, values) => {\r\n      if (bufSize < 0) {\r\n        // GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,\r\n        // so raise GL_INVALID_VALUE here as well.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (!values) {\r\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\r\n        // if values == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      var ret = GLctx.getSyncParameter(GL.syncs[sync], pname);\r\n      if (ret !== null) {\r\n        HEAP32[((values)>>2)] = ret;\r\n        if (length) HEAP32[((length)>>2)] = 1; // Report a single value outputted.\r\n      }\r\n    };\r\n  var _emscripten_glGetSynciv = _glGetSynciv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetTexParameterfv = (target, pname, params) => {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null\r\n        // pointer. Since calling this function does not make sense if p == null,\r\n        // issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAPF32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    };\r\n  var _emscripten_glGetTexParameterfv = _glGetTexParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetTexParameteriv = (target, pname, params) => {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null\r\n        // pointer. Since calling this function does not make sense if p == null,\r\n        // issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      HEAP32[((params)>>2)] = GLctx.getTexParameter(target, pname);\r\n    };\r\n  var _emscripten_glGetTexParameteriv = _glGetTexParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetTransformFeedbackVarying = (program, index, bufSize, length, size, type, name) => {\r\n      program = GL.programs[program];\r\n      var info = GLctx.getTransformFeedbackVarying(program, index);\r\n      if (!info) return; // If an error occurred, the return parameters length, size, type and name will be unmodified.\r\n  \r\n      if (name && bufSize > 0) {\r\n        var numBytesWrittenExclNull = stringToUTF8(info.name, name, bufSize);\r\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\r\n      } else {\r\n        if (length) HEAP32[((length)>>2)] = 0;\r\n      }\r\n  \r\n      if (size) HEAP32[((size)>>2)] = info.size;\r\n      if (type) HEAP32[((type)>>2)] = info.type;\r\n    };\r\n  var _emscripten_glGetTransformFeedbackVarying = _glGetTransformFeedbackVarying;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetUniformBlockIndex = (program, uniformBlockName) => {\r\n      return GLctx.getUniformBlockIndex(GL.programs[program], UTF8ToString(uniformBlockName));\r\n    };\r\n  var _emscripten_glGetUniformBlockIndex = _glGetUniformBlockIndex;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetUniformIndices = (program, uniformCount, uniformNames, uniformIndices) => {\r\n      if (!uniformIndices) {\r\n        // GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense\r\n        // if uniformIndices == null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (uniformCount > 0 && (uniformNames == 0 || uniformIndices == 0)) {\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      var names = [];\r\n      for (var i = 0; i < uniformCount; i++)\r\n        names.push(UTF8ToString(HEAP32[(((uniformNames)+(i*4))>>2)]));\r\n  \r\n      var result = GLctx.getUniformIndices(program, names);\r\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to uniformIndices.\r\n  \r\n      var len = result.length;\r\n      for (var i = 0; i < len; i++) {\r\n        HEAP32[(((uniformIndices)+(i*4))>>2)] = result[i];\r\n      }\r\n    };\r\n  var _emscripten_glGetUniformIndices = _glGetUniformIndices;\r\n\r\n  \r\n  /** @noinline */\r\n  var webglGetLeftBracePos = (name) => name.slice(-1) == ']' && name.lastIndexOf('[');\r\n  \r\n  var webglPrepareUniformLocationsBeforeFirstUse = (program) => {\r\n      var uniformLocsById = program.uniformLocsById, // Maps GLuint -> WebGLUniformLocation\r\n        uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, // Maps name -> [uniform array length, GLuint]\r\n        i, j;\r\n  \r\n      // On the first time invocation of glGetUniformLocation on this shader program:\r\n      // initialize cache data structures and discover which uniforms are arrays.\r\n      if (!uniformLocsById) {\r\n        // maps GLint integer locations to WebGLUniformLocations\r\n        program.uniformLocsById = uniformLocsById = {};\r\n        // maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations\r\n        program.uniformArrayNamesById = {};\r\n  \r\n        for (i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\r\n          var u = GLctx.getActiveUniform(program, i);\r\n          var nm = u.name;\r\n          var sz = u.size;\r\n          var lb = webglGetLeftBracePos(nm);\r\n          var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\r\n  \r\n          // Assign a new location.\r\n          var id = program.uniformIdCounter;\r\n          program.uniformIdCounter += sz;\r\n          // Eagerly get the location of the uniformArray[0] base element.\r\n          // The remaining indices >0 will be left for lazy evaluation to\r\n          // improve performance. Those may never be needed to fetch, if the\r\n          // application fills arrays always in full starting from the first\r\n          // element of the array.\r\n          uniformSizeAndIdsByName[arrayName] = [sz, id];\r\n  \r\n          // Store placeholder integers in place that highlight that these\r\n          // >0 index locations are array indices pending population.\r\n          for (j = 0; j < sz; ++j) {\r\n            uniformLocsById[id] = j;\r\n            program.uniformArrayNamesById[id++] = arrayName;\r\n          }\r\n        }\r\n      }\r\n    };\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetUniformLocation = (program, name) => {\r\n  \r\n      name = UTF8ToString(name);\r\n  \r\n      if (program = GL.programs[program]) {\r\n        webglPrepareUniformLocationsBeforeFirstUse(program);\r\n        var uniformLocsById = program.uniformLocsById; // Maps GLuint -> WebGLUniformLocation\r\n        var arrayIndex = 0;\r\n        var uniformBaseName = name;\r\n  \r\n        // Invariant: when populating integer IDs for uniform locations, we must\r\n        // maintain the precondition that arrays reside in contiguous addresses,\r\n        // i.e. for a 'vec4 colors[10];', colors[4] must be at location\r\n        // colors[0]+4.  However, user might call glGetUniformLocation(program,\r\n        // \"colors\") for an array, so we cannot discover based on the user input\r\n        // arguments whether the uniform we are dealing with is an array. The only\r\n        // way to discover which uniforms are arrays is to enumerate over all the\r\n        // active uniforms in the program.\r\n        var leftBrace = webglGetLeftBracePos(name);\r\n  \r\n        // If user passed an array accessor \"[index]\", parse the array index off the accessor.\r\n        if (leftBrace > 0) {\r\n          arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0; // \"index]\", coerce parseInt(']') with >>>0 to treat \"foo[]\" as \"foo[0]\" and foo[-1] as unsigned out-of-bounds.\r\n          uniformBaseName = name.slice(0, leftBrace);\r\n        }\r\n  \r\n        // Have we cached the location of this uniform before?\r\n        // A pair [array length, GLint of the uniform location]\r\n        var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName];\r\n  \r\n        // If an uniform with this name exists, and if its index is within the\r\n        // array limits (if it's even an array), query the WebGLlocation, or\r\n        // return an existing cached location.\r\n        if (sizeAndId && arrayIndex < sizeAndId[0]) {\r\n          arrayIndex += sizeAndId[1]; // Add the base location of the uniform to the array index offset.\r\n          if ((uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name))) {\r\n            return arrayIndex;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // N.b. we are currently unable to distinguish between GL program IDs that\r\n        // never existed vs GL program IDs that have been deleted, so report\r\n        // GL_INVALID_VALUE in both cases.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n      }\r\n      return -1;\r\n    };\r\n  var _emscripten_glGetUniformLocation = _glGetUniformLocation;\r\n\r\n  var webglGetUniformLocation = (location) => {\r\n      var p = GLctx.currentProgram;\r\n  \r\n      if (p) {\r\n        var webglLoc = p.uniformLocsById[location];\r\n        // p.uniformLocsById[location] stores either an integer, or a\r\n        // WebGLUniformLocation.\r\n        // If an integer, we have not yet bound the location, so do it now. The\r\n        // integer value specifies the array index we should bind to.\r\n        if (typeof webglLoc == 'number') {\r\n          p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? `[${webglLoc}]` : ''));\r\n        }\r\n        // Else an already cached WebGLUniformLocation, return it.\r\n        return webglLoc;\r\n      } else {\r\n        GL.recordError(0x502/*GL_INVALID_OPERATION*/);\r\n      }\r\n    };\r\n  \r\n  \r\n  /** @suppress{checkTypes} */\r\n  var emscriptenWebGLGetUniform = (program, location, params, type) => {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null\r\n        // pointer. Since calling this function does not make sense if params ==\r\n        // null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      program = GL.programs[program];\r\n      webglPrepareUniformLocationsBeforeFirstUse(program);\r\n      var data = GLctx.getUniform(program, webglGetUniformLocation(location));\r\n      if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n          }\r\n        }\r\n      }\r\n    };\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetUniformfv = (program, location, params) => {\r\n      emscriptenWebGLGetUniform(program, location, params, 2);\r\n    };\r\n  var _emscripten_glGetUniformfv = _glGetUniformfv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetUniformiv = (program, location, params) => {\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n    };\r\n  var _emscripten_glGetUniformiv = _glGetUniformiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetUniformuiv = (program, location, params) =>\r\n      emscriptenWebGLGetUniform(program, location, params, 0);\r\n  var _emscripten_glGetUniformuiv = _glGetUniformuiv;\r\n\r\n  /** @suppress{checkTypes} */\r\n  var emscriptenWebGLGetVertexAttrib = (index, pname, params, type) => {\r\n      if (!params) {\r\n        // GLES2 specification does not specify how to behave if params is a null\r\n        // pointer. Since calling this function does not make sense if params ==\r\n        // null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttrib*v on client-side array: not supported, bad data returned\");\r\n      }\r\n      var data = GLctx.getVertexAttrib(index, pname);\r\n      if (pname == 0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/) {\r\n        HEAP32[((params)>>2)] = data && data[\"name\"];\r\n      } else if (typeof data == 'number' || typeof data == 'boolean') {\r\n        switch (type) {\r\n          case 0: HEAP32[((params)>>2)] = data; break;\r\n          case 2: HEAPF32[((params)>>2)] = data; break;\r\n          case 5: HEAP32[((params)>>2)] = Math.fround(data); break;\r\n        }\r\n      } else {\r\n        for (var i = 0; i < data.length; i++) {\r\n          switch (type) {\r\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\r\n            case 5: HEAP32[(((params)+(i*4))>>2)] = Math.fround(data[i]); break;\r\n          }\r\n        }\r\n      }\r\n    };\r\n  /** @suppress {duplicate } */\r\n  var _glGetVertexAttribIiv = (index, pname, params) => {\r\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\r\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\r\n    };\r\n  var _emscripten_glGetVertexAttribIiv = _glGetVertexAttribIiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetVertexAttribIuiv = _glGetVertexAttribIiv;\r\n  var _emscripten_glGetVertexAttribIuiv = _glGetVertexAttribIuiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glGetVertexAttribPointerv = (index, pname, pointer) => {\r\n      if (!pointer) {\r\n        // GLES2 specification does not specify how to behave if pointer is a null\r\n        // pointer. Since calling this function does not make sense if pointer ==\r\n        // null, issue a GL error to notify user about it.\r\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\r\n        return;\r\n      }\r\n      if (GL.currentContext.clientBuffers[index].enabled) {\r\n        err(\"glGetVertexAttribPointer on client-side array: not supported, bad data returned\");\r\n      }\r\n      HEAP32[((pointer)>>2)] = GLctx.getVertexAttribOffset(index, pname);\r\n    };\r\n  var _emscripten_glGetVertexAttribPointerv = _glGetVertexAttribPointerv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetVertexAttribfv = (index, pname, params) => {\r\n      // N.B. This function may only be called if the vertex attribute was\r\n      // specified using the function glVertexAttrib*f(), otherwise the results\r\n      // are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2);\r\n    };\r\n  var _emscripten_glGetVertexAttribfv = _glGetVertexAttribfv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glGetVertexAttribiv = (index, pname, params) => {\r\n      // N.B. This function may only be called if the vertex attribute was\r\n      // specified using the function glVertexAttrib*f(), otherwise the results\r\n      // are undefined. (GLES3 spec 6.1.12)\r\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5);\r\n    };\r\n  var _emscripten_glGetVertexAttribiv = _glGetVertexAttribiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glHint(x0, x1) { GLctx.hint(x0, x1) }\r\n  var _emscripten_glHint = _glHint;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glInvalidateFramebuffer = (target, numAttachments, attachments) => {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.invalidateFramebuffer(target, list);\r\n    };\r\n  var _emscripten_glInvalidateFramebuffer = _glInvalidateFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glInvalidateSubFramebuffer = (target, numAttachments, attachments, x, y, width, height) => {\r\n      var list = tempFixedLengthArray[numAttachments];\r\n      for (var i = 0; i < numAttachments; i++) {\r\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\r\n      }\r\n  \r\n      GLctx.invalidateSubFramebuffer(target, list, x, y, width, height);\r\n    };\r\n  var _emscripten_glInvalidateSubFramebuffer = _glInvalidateSubFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glIsBuffer = (buffer) => {\r\n      var b = GL.buffers[buffer];\r\n      if (!b) return 0;\r\n      return GLctx.isBuffer(b);\r\n    };\r\n  var _emscripten_glIsBuffer = _glIsBuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glIsEnabled(x0) { return GLctx.isEnabled(x0) }\r\n  var _emscripten_glIsEnabled = _glIsEnabled;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glIsFramebuffer = (framebuffer) => {\r\n      var fb = GL.framebuffers[framebuffer];\r\n      if (!fb) return 0;\r\n      return GLctx.isFramebuffer(fb);\r\n    };\r\n  var _emscripten_glIsFramebuffer = _glIsFramebuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glIsProgram = (program) => {\r\n      program = GL.programs[program];\r\n      if (!program) return 0;\r\n      return GLctx.isProgram(program);\r\n    };\r\n  var _emscripten_glIsProgram = _glIsProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glIsQuery = (id) => {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.isQuery(query);\r\n    };\r\n  var _emscripten_glIsQuery = _glIsQuery;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glIsQueryEXT = (id) => {\r\n      var query = GL.queries[id];\r\n      if (!query) return 0;\r\n      return GLctx.disjointTimerQueryExt['isQueryEXT'](query);\r\n    };\r\n  var _emscripten_glIsQueryEXT = _glIsQueryEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glIsRenderbuffer = (renderbuffer) => {\r\n      var rb = GL.renderbuffers[renderbuffer];\r\n      if (!rb) return 0;\r\n      return GLctx.isRenderbuffer(rb);\r\n    };\r\n  var _emscripten_glIsRenderbuffer = _glIsRenderbuffer;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glIsSampler = (id) => {\r\n      var sampler = GL.samplers[id];\r\n      if (!sampler) return 0;\r\n      return GLctx.isSampler(sampler);\r\n    };\r\n  var _emscripten_glIsSampler = _glIsSampler;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glIsShader = (shader) => {\r\n      var s = GL.shaders[shader];\r\n      if (!s) return 0;\r\n      return GLctx.isShader(s);\r\n    };\r\n  var _emscripten_glIsShader = _glIsShader;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glIsSync = (sync) => GLctx.isSync(GL.syncs[sync]);\r\n  var _emscripten_glIsSync = _glIsSync;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glIsTexture = (id) => {\r\n      var texture = GL.textures[id];\r\n      if (!texture) return 0;\r\n      return GLctx.isTexture(texture);\r\n    };\r\n  var _emscripten_glIsTexture = _glIsTexture;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glIsTransformFeedback = (id) => GLctx.isTransformFeedback(GL.transformFeedbacks[id]);\r\n  var _emscripten_glIsTransformFeedback = _glIsTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glIsVertexArray = (array) => {\r\n  \r\n      var vao = GL.vaos[array];\r\n      if (!vao) return 0;\r\n      return GLctx.isVertexArray(vao);\r\n    };\r\n  var _emscripten_glIsVertexArray = _glIsVertexArray;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glIsVertexArrayOES = _glIsVertexArray;\r\n  var _emscripten_glIsVertexArrayOES = _glIsVertexArrayOES;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glLineWidth(x0) { GLctx.lineWidth(x0) }\r\n  var _emscripten_glLineWidth = _glLineWidth;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glLinkProgram = (program) => {\r\n      program = GL.programs[program];\r\n      GLctx.linkProgram(program);\r\n      // Invalidate earlier computed uniform->ID mappings, those have now become stale\r\n      program.uniformLocsById = 0; // Mark as null-like so that glGetUniformLocation() knows to populate this again.\r\n      program.uniformSizeAndIdsByName = {};\r\n  \r\n    };\r\n  var _emscripten_glLinkProgram = _glLinkProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPauseTransformFeedback() { GLctx.pauseTransformFeedback() }\r\n  var _emscripten_glPauseTransformFeedback = _glPauseTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glPixelStorei = (pname, param) => {\r\n      if (pname == 0xCF5 /* GL_UNPACK_ALIGNMENT */) {\r\n        GL.unpackAlignment = param;\r\n      }\r\n      GLctx.pixelStorei(pname, param);\r\n    };\r\n  var _emscripten_glPixelStorei = _glPixelStorei;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glPolygonOffset(x0, x1) { GLctx.polygonOffset(x0, x1) }\r\n  var _emscripten_glPolygonOffset = _glPolygonOffset;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glProgramBinary = (program, binaryFormat, binary, length) => {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    };\r\n  var _emscripten_glProgramBinary = _glProgramBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glProgramParameteri = (program, pname, value) => {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    };\r\n  var _emscripten_glProgramParameteri = _glProgramParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glQueryCounterEXT = (id, target) => {\r\n      GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id], target);\r\n    };\r\n  var _emscripten_glQueryCounterEXT = _glQueryCounterEXT;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glReadBuffer(x0) { GLctx.readBuffer(x0) }\r\n  var _emscripten_glReadBuffer = _glReadBuffer;\r\n\r\n  var computeUnpackAlignedImageSize = (width, height, sizePerPixel, alignment) => {\r\n      function roundedToNextMultipleOf(x, y) {\r\n        return (x + y - 1) & -y;\r\n      }\r\n      var plainRowSize = width * sizePerPixel;\r\n      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);\r\n      return height * alignedRowSize;\r\n    };\r\n  \r\n  var colorChannelsInGlTextureFormat = (format) => {\r\n      // Micro-optimizations for size: map format to size by subtracting smallest\r\n      // enum value (0x1902) from all values first.  Also omit the most common\r\n      // size value (1) from the list, which is assumed by formats not on the\r\n      // list.\r\n      var colorChannels = {\r\n        // 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,\r\n        // 0x1906 /* GL_ALPHA */ - 0x1902: 1,\r\n        5: 3,\r\n        6: 4,\r\n        // 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,\r\n        8: 2,\r\n        29502: 3,\r\n        29504: 4,\r\n        // 0x1903 /* GL_RED */ - 0x1902: 1,\r\n        26917: 2,\r\n        26918: 2,\r\n        // 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,\r\n        29846: 3,\r\n        29847: 4\r\n      };\r\n      return colorChannels[format - 0x1902]||1;\r\n    };\r\n  \r\n  var heapObjectForWebGLType = (type) => {\r\n      // Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare\r\n      // smaller values for the heap, for shorter generated code size.\r\n      // Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.\r\n      // (since most types are HEAPU16)\r\n      type -= 0x1400;\r\n      if (type == 0) return HEAP8;\r\n  \r\n      if (type == 1) return HEAPU8;\r\n  \r\n      if (type == 2) return HEAP16;\r\n  \r\n      if (type == 4) return HEAP32;\r\n  \r\n      if (type == 6) return HEAPF32;\r\n  \r\n      if (type == 5\r\n        || type == 28922\r\n        || type == 28520\r\n        || type == 30779\r\n        || type == 30782\r\n        )\r\n        return HEAPU32;\r\n  \r\n      return HEAPU16;\r\n    };\r\n  \r\n  var heapAccessShiftForWebGLHeap = (heap) => 31 - Math.clz32(heap.BYTES_PER_ELEMENT);\r\n  \r\n  var emscriptenWebGLGetTexPixelData = (type, format, width, height, pixels, internalFormat) => {\r\n      var heap = heapObjectForWebGLType(type);\r\n      var shift = heapAccessShiftForWebGLHeap(heap);\r\n      var byteSize = 1<<shift;\r\n      var sizePerPixel = colorChannelsInGlTextureFormat(format) * byteSize;\r\n      var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel, GL.unpackAlignment);\r\n      return heap.subarray(pixels >> shift, pixels + bytes >> shift);\r\n    };\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glReadPixels = (x, y, width, height, format, type, pixels) => {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\r\n        // those always when possible.\r\n        if (GLctx.currentPixelPackBufferBinding) {\r\n          GLctx.readPixels(x, y, width, height, format, type, pixels);\r\n        } else {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.readPixels(x, y, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);\r\n      if (!pixelData) {\r\n        GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n        return;\r\n      }\r\n      GLctx.readPixels(x, y, width, height, format, type, pixelData);\r\n    };\r\n  var _emscripten_glReadPixels = _glReadPixels;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glReleaseShaderCompiler = () => {\r\n      // NOP (as allowed by GLES 2.0 spec)\r\n    };\r\n  var _emscripten_glReleaseShaderCompiler = _glReleaseShaderCompiler;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glRenderbufferStorage(x0, x1, x2, x3) { GLctx.renderbufferStorage(x0, x1, x2, x3) }\r\n  var _emscripten_glRenderbufferStorage = _glRenderbufferStorage;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glRenderbufferStorageMultisample(x0, x1, x2, x3, x4) { GLctx.renderbufferStorageMultisample(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glRenderbufferStorageMultisample = _glRenderbufferStorageMultisample;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glResumeTransformFeedback() { GLctx.resumeTransformFeedback() }\r\n  var _emscripten_glResumeTransformFeedback = _glResumeTransformFeedback;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glSampleCoverage = (value, invert) => {\r\n      GLctx.sampleCoverage(value, !!invert);\r\n    };\r\n  var _emscripten_glSampleCoverage = _glSampleCoverage;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glSamplerParameterf = (sampler, pname, param) => {\r\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\r\n    };\r\n  var _emscripten_glSamplerParameterf = _glSamplerParameterf;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glSamplerParameterfv = (sampler, pname, params) => {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\r\n    };\r\n  var _emscripten_glSamplerParameterfv = _glSamplerParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glSamplerParameteri = (sampler, pname, param) => {\r\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\r\n    };\r\n  var _emscripten_glSamplerParameteri = _glSamplerParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glSamplerParameteriv = (sampler, pname, params) => {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\r\n    };\r\n  var _emscripten_glSamplerParameteriv = _glSamplerParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glScissor(x0, x1, x2, x3) { GLctx.scissor(x0, x1, x2, x3) }\r\n  var _emscripten_glScissor = _glScissor;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glShaderBinary = (count, shaders, binaryformat, binary, length) => {\r\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\r\n    };\r\n  var _emscripten_glShaderBinary = _glShaderBinary;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glShaderSource = (shader, count, string, length) => {\r\n      var source = GL.getSource(shader, count, string, length);\r\n  \r\n      GLctx.shaderSource(GL.shaders[shader], source);\r\n    };\r\n  var _emscripten_glShaderSource = _glShaderSource;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilFunc(x0, x1, x2) { GLctx.stencilFunc(x0, x1, x2) }\r\n  var _emscripten_glStencilFunc = _glStencilFunc;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilFuncSeparate(x0, x1, x2, x3) { GLctx.stencilFuncSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glStencilFuncSeparate = _glStencilFuncSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilMask(x0) { GLctx.stencilMask(x0) }\r\n  var _emscripten_glStencilMask = _glStencilMask;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilMaskSeparate(x0, x1) { GLctx.stencilMaskSeparate(x0, x1) }\r\n  var _emscripten_glStencilMaskSeparate = _glStencilMaskSeparate;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilOp(x0, x1, x2) { GLctx.stencilOp(x0, x1, x2) }\r\n  var _emscripten_glStencilOp = _glStencilOp;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glStencilOpSeparate(x0, x1, x2, x3) { GLctx.stencilOpSeparate(x0, x1, x2, x3) }\r\n  var _emscripten_glStencilOpSeparate = _glStencilOpSeparate;\r\n\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glTexImage2D = (target, level, internalFormat, width, height, border, format, type, pixels) => {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\r\n        // those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null);\r\n    };\r\n  var _emscripten_glTexImage2D = _glTexImage2D;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glTexImage3D = (target, level, internalFormat, width, height, depth, border, format, type, pixels) => {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, null);\r\n      }\r\n    };\r\n  var _emscripten_glTexImage3D = _glTexImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameterf(x0, x1, x2) { GLctx.texParameterf(x0, x1, x2) }\r\n  var _emscripten_glTexParameterf = _glTexParameterf;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glTexParameterfv = (target, pname, params) => {\r\n      var param = HEAPF32[((params)>>2)];\r\n      GLctx.texParameterf(target, pname, param);\r\n    };\r\n  var _emscripten_glTexParameterfv = _glTexParameterfv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }\r\n  var _emscripten_glTexParameteri = _glTexParameteri;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glTexParameteriv = (target, pname, params) => {\r\n      var param = HEAP32[((params)>>2)];\r\n      GLctx.texParameteri(target, pname, param);\r\n    };\r\n  var _emscripten_glTexParameteriv = _glTexParameteriv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexStorage2D(x0, x1, x2, x3, x4) { GLctx.texStorage2D(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glTexStorage2D = _glTexStorage2D;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glTexStorage3D(x0, x1, x2, x3, x4, x5) { GLctx.texStorage3D(x0, x1, x2, x3, x4, x5) }\r\n  var _emscripten_glTexStorage3D = _glTexStorage3D;\r\n\r\n  \r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glTexSubImage2D = (target, level, xoffset, yoffset, width, height, format, type, pixels) => {\r\n      if (GL.currentContext.version >= 2) {\r\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\r\n        // those always when possible.\r\n        if (GLctx.currentPixelUnpackBufferBinding) {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\r\n        } else if (pixels) {\r\n          var heap = heapObjectForWebGLType(type);\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n        } else {\r\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, null);\r\n        }\r\n        return;\r\n      }\r\n      var pixelData = null;\r\n      if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0);\r\n      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\r\n    };\r\n  var _emscripten_glTexSubImage2D = _glTexSubImage2D;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glTexSubImage3D = (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) => {\r\n      if (GLctx.currentPixelUnpackBufferBinding) {\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);\r\n      } else if (pixels) {\r\n        var heap = heapObjectForWebGLType(type);\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\r\n      } else {\r\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, null);\r\n      }\r\n    };\r\n  var _emscripten_glTexSubImage3D = _glTexSubImage3D;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glTransformFeedbackVaryings = (program, count, varyings, bufferMode) => {\r\n      program = GL.programs[program];\r\n      var vars = [];\r\n      for (var i = 0; i < count; i++)\r\n        vars.push(UTF8ToString(HEAP32[(((varyings)+(i*4))>>2)]));\r\n  \r\n      GLctx.transformFeedbackVaryings(program, vars, bufferMode);\r\n    };\r\n  var _emscripten_glTransformFeedbackVaryings = _glTransformFeedbackVaryings;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform1f = (location, v0) => {\r\n      GLctx.uniform1f(webglGetUniformLocation(location), v0);\r\n    };\r\n  var _emscripten_glUniform1f = _glUniform1f;\r\n\r\n  \r\n  var miniTempWebGLFloatBuffers = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform1fv = (location, count, value) => {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1fv(webglGetUniformLocation(location), view);\r\n    };\r\n  var _emscripten_glUniform1fv = _glUniform1fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform1i = (location, v0) => {\r\n      GLctx.uniform1i(webglGetUniformLocation(location), v0);\r\n    };\r\n  var _emscripten_glUniform1i = _glUniform1i;\r\n\r\n  \r\n  var miniTempWebGLIntBuffers = [];\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform1iv = (location, count, value) => {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, value>>2, count);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 288) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[count-1];\r\n        for (var i = 0; i < count; ++i) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*4)>>2);\r\n      }\r\n      GLctx.uniform1iv(webglGetUniformLocation(location), view);\r\n    };\r\n  var _emscripten_glUniform1iv = _glUniform1iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniform1ui = (location, v0) => {\r\n      GLctx.uniform1ui(webglGetUniformLocation(location), v0);\r\n    };\r\n  var _emscripten_glUniform1ui = _glUniform1ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniform1uiv = (location, count, value) => {\r\n      count && GLctx.uniform1uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count);\r\n    };\r\n  var _emscripten_glUniform1uiv = _glUniform1uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform2f = (location, v0, v1) => {\r\n      GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\r\n    };\r\n  var _emscripten_glUniform2f = _glUniform2f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform2fv = (location, count, value) => {\r\n  \r\n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\r\n      // those always when possible.\r\n      if (GL.currentContext.version >= 2) {\r\n        count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2fv(webglGetUniformLocation(location), view);\r\n    };\r\n  var _emscripten_glUniform2fv = _glUniform2fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform2i = (location, v0, v1) => {\r\n      GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\r\n    };\r\n  var _emscripten_glUniform2i = _glUniform2i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform2iv = (location, count, value) => {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, value>>2, count*2);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 144) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[2*count-1];\r\n        for (var i = 0; i < 2*count; i += 2) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*8)>>2);\r\n      }\r\n      GLctx.uniform2iv(webglGetUniformLocation(location), view);\r\n    };\r\n  var _emscripten_glUniform2iv = _glUniform2iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniform2ui = (location, v0, v1) => {\r\n      GLctx.uniform2ui(webglGetUniformLocation(location), v0, v1);\r\n    };\r\n  var _emscripten_glUniform2ui = _glUniform2ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniform2uiv = (location, count, value) => {\r\n      count && GLctx.uniform2uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*2);\r\n    };\r\n  var _emscripten_glUniform2uiv = _glUniform2uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform3f = (location, v0, v1, v2) => {\r\n      GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\r\n    };\r\n  var _emscripten_glUniform3f = _glUniform3f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform3fv = (location, count, value) => {\r\n  \r\n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\r\n      // those always when possible.\r\n      if (GL.currentContext.version >= 2) {\r\n        count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3fv(webglGetUniformLocation(location), view);\r\n    };\r\n  var _emscripten_glUniform3fv = _glUniform3fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform3i = (location, v0, v1, v2) => {\r\n      GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\r\n    };\r\n  var _emscripten_glUniform3i = _glUniform3i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform3iv = (location, count, value) => {\r\n  \r\n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\r\n        count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, value>>2, count*3);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 96) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[3*count-1];\r\n        for (var i = 0; i < 3*count; i += 3) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*12)>>2);\r\n      }\r\n      GLctx.uniform3iv(webglGetUniformLocation(location), view);\r\n    };\r\n  var _emscripten_glUniform3iv = _glUniform3iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniform3ui = (location, v0, v1, v2) => {\r\n      GLctx.uniform3ui(webglGetUniformLocation(location), v0, v1, v2);\r\n    };\r\n  var _emscripten_glUniform3ui = _glUniform3ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniform3uiv = (location, count, value) => {\r\n      count && GLctx.uniform3uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*3);\r\n    };\r\n  var _emscripten_glUniform3uiv = _glUniform3uiv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform4f = (location, v0, v1, v2, v3) => {\r\n      GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    };\r\n  var _emscripten_glUniform4f = _glUniform4f;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform4fv = (location, count, value) => {\r\n  \r\n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\r\n      // those always when possible.\r\n      if (GL.currentContext.version >= 2) {\r\n        count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 4 * count; i += 4) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4fv(webglGetUniformLocation(location), view);\r\n    };\r\n  var _emscripten_glUniform4fv = _glUniform4fv;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform4i = (location, v0, v1, v2, v3) => {\r\n      GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    };\r\n  var _emscripten_glUniform4i = _glUniform4i;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniform4iv = (location, count, value) => {\r\n  \r\n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\r\n      // those always when possible.\r\n      if (GL.currentContext.version >= 2) {\r\n        count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLIntBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAP32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAP32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniform4iv(webglGetUniformLocation(location), view);\r\n    };\r\n  var _emscripten_glUniform4iv = _glUniform4iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniform4ui = (location, v0, v1, v2, v3) => {\r\n      GLctx.uniform4ui(webglGetUniformLocation(location), v0, v1, v2, v3);\r\n    };\r\n  var _emscripten_glUniform4ui = _glUniform4ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniform4uiv = (location, count, value) => {\r\n      count && GLctx.uniform4uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*4);\r\n    };\r\n  var _emscripten_glUniform4uiv = _glUniform4uiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniformBlockBinding = (program, uniformBlockIndex, uniformBlockBinding) => {\r\n      program = GL.programs[program];\r\n  \r\n      GLctx.uniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding);\r\n    };\r\n  var _emscripten_glUniformBlockBinding = _glUniformBlockBinding;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniformMatrix2fv = (location, count, transpose, value) => {\r\n  \r\n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\r\n      // those always when possible.\r\n      if (GL.currentContext.version >= 2) {\r\n        count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*4);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 72) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[4*count-1];\r\n        for (var i = 0; i < 4*count; i += 4) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\r\n      }\r\n      GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, view);\r\n    };\r\n  var _emscripten_glUniformMatrix2fv = _glUniformMatrix2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniformMatrix2x3fv = (location, count, transpose, value) => {\r\n      count && GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    };\r\n  var _emscripten_glUniformMatrix2x3fv = _glUniformMatrix2x3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniformMatrix2x4fv = (location, count, transpose, value) => {\r\n      count && GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    };\r\n  var _emscripten_glUniformMatrix2x4fv = _glUniformMatrix2x4fv;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniformMatrix3fv = (location, count, transpose, value) => {\r\n  \r\n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\r\n      // those always when possible.\r\n      if (GL.currentContext.version >= 2) {\r\n        count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*9);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 32) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[9*count-1];\r\n        for (var i = 0; i < 9*count; i += 9) {\r\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\r\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\r\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\r\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\r\n          view[i+4] = HEAPF32[(((value)+(4*i+16))>>2)];\r\n          view[i+5] = HEAPF32[(((value)+(4*i+20))>>2)];\r\n          view[i+6] = HEAPF32[(((value)+(4*i+24))>>2)];\r\n          view[i+7] = HEAPF32[(((value)+(4*i+28))>>2)];\r\n          view[i+8] = HEAPF32[(((value)+(4*i+32))>>2)];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*36)>>2);\r\n      }\r\n      GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, view);\r\n    };\r\n  var _emscripten_glUniformMatrix3fv = _glUniformMatrix3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniformMatrix3x2fv = (location, count, transpose, value) => {\r\n      count && GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\r\n    };\r\n  var _emscripten_glUniformMatrix3x2fv = _glUniformMatrix3x2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniformMatrix3x4fv = (location, count, transpose, value) => {\r\n      count && GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    };\r\n  var _emscripten_glUniformMatrix3x4fv = _glUniformMatrix3x4fv;\r\n\r\n  \r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glUniformMatrix4fv = (location, count, transpose, value) => {\r\n  \r\n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\r\n      // those always when possible.\r\n      if (GL.currentContext.version >= 2) {\r\n        count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*16);\r\n        return;\r\n      }\r\n  \r\n      if (count <= 18) {\r\n        // avoid allocation when uploading few enough uniforms\r\n        var view = miniTempWebGLFloatBuffers[16*count-1];\r\n        // hoist the heap out of the loop for size and for pthreads+growth.\r\n        var heap = HEAPF32;\r\n        value >>= 2;\r\n        for (var i = 0; i < 16 * count; i += 16) {\r\n          var dst = value + i;\r\n          view[i] = heap[dst];\r\n          view[i + 1] = heap[dst + 1];\r\n          view[i + 2] = heap[dst + 2];\r\n          view[i + 3] = heap[dst + 3];\r\n          view[i + 4] = heap[dst + 4];\r\n          view[i + 5] = heap[dst + 5];\r\n          view[i + 6] = heap[dst + 6];\r\n          view[i + 7] = heap[dst + 7];\r\n          view[i + 8] = heap[dst + 8];\r\n          view[i + 9] = heap[dst + 9];\r\n          view[i + 10] = heap[dst + 10];\r\n          view[i + 11] = heap[dst + 11];\r\n          view[i + 12] = heap[dst + 12];\r\n          view[i + 13] = heap[dst + 13];\r\n          view[i + 14] = heap[dst + 14];\r\n          view[i + 15] = heap[dst + 15];\r\n        }\r\n      } else\r\n      {\r\n        var view = HEAPF32.subarray((value)>>2, (value+count*64)>>2);\r\n      }\r\n      GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, view);\r\n    };\r\n  var _emscripten_glUniformMatrix4fv = _glUniformMatrix4fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniformMatrix4x2fv = (location, count, transpose, value) => {\r\n      count && GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\r\n    };\r\n  var _emscripten_glUniformMatrix4x2fv = _glUniformMatrix4x2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUniformMatrix4x3fv = (location, count, transpose, value) => {\r\n      count && GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\r\n    };\r\n  var _emscripten_glUniformMatrix4x3fv = _glUniformMatrix4x3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glUseProgram = (program) => {\r\n      program = GL.programs[program];\r\n      GLctx.useProgram(program);\r\n      // Record the currently active program so that we can access the uniform\r\n      // mapping table of that program.\r\n      GLctx.currentProgram = program;\r\n    };\r\n  var _emscripten_glUseProgram = _glUseProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glValidateProgram = (program) => {\r\n      GLctx.validateProgram(GL.programs[program]);\r\n    };\r\n  var _emscripten_glValidateProgram = _glValidateProgram;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib1f(x0, x1) { GLctx.vertexAttrib1f(x0, x1) }\r\n  var _emscripten_glVertexAttrib1f = _glVertexAttrib1f;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttrib1fv = (index, v) => {\r\n  \r\n      GLctx.vertexAttrib1f(index, HEAPF32[v>>2]);\r\n    };\r\n  var _emscripten_glVertexAttrib1fv = _glVertexAttrib1fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib2f(x0, x1, x2) { GLctx.vertexAttrib2f(x0, x1, x2) }\r\n  var _emscripten_glVertexAttrib2f = _glVertexAttrib2f;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttrib2fv = (index, v) => {\r\n  \r\n      GLctx.vertexAttrib2f(index, HEAPF32[v>>2], HEAPF32[v+4>>2]);\r\n    };\r\n  var _emscripten_glVertexAttrib2fv = _glVertexAttrib2fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib3f(x0, x1, x2, x3) { GLctx.vertexAttrib3f(x0, x1, x2, x3) }\r\n  var _emscripten_glVertexAttrib3f = _glVertexAttrib3f;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttrib3fv = (index, v) => {\r\n  \r\n      GLctx.vertexAttrib3f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2]);\r\n    };\r\n  var _emscripten_glVertexAttrib3fv = _glVertexAttrib3fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttrib4f(x0, x1, x2, x3, x4) { GLctx.vertexAttrib4f(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttrib4f = _glVertexAttrib4f;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttrib4fv = (index, v) => {\r\n  \r\n      GLctx.vertexAttrib4f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2], HEAPF32[v+12>>2]);\r\n    };\r\n  var _emscripten_glVertexAttrib4fv = _glVertexAttrib4fv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisor = (index, divisor) => {\r\n      GLctx.vertexAttribDivisor(index, divisor);\r\n    };\r\n  var _emscripten_glVertexAttribDivisor = _glVertexAttribDivisor;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorANGLE = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorANGLE = _glVertexAttribDivisorANGLE;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorARB = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorARB = _glVertexAttribDivisorARB;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorEXT = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorEXT = _glVertexAttribDivisorEXT;\r\n\r\n  \r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribDivisorNV = _glVertexAttribDivisor;\r\n  var _emscripten_glVertexAttribDivisorNV = _glVertexAttribDivisorNV;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4i(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4i(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttribI4i = _glVertexAttribI4i;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribI4iv = (index, v) => {\r\n      GLctx.vertexAttribI4i(index, HEAP32[v>>2], HEAP32[v+4>>2], HEAP32[v+8>>2], HEAP32[v+12>>2]);\r\n    };\r\n  var _emscripten_glVertexAttribI4iv = _glVertexAttribI4iv;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glVertexAttribI4ui(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4ui(x0, x1, x2, x3, x4) }\r\n  var _emscripten_glVertexAttribI4ui = _glVertexAttribI4ui;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribI4uiv = (index, v) => {\r\n      GLctx.vertexAttribI4ui(index, HEAPU32[v>>2], HEAPU32[v+4>>2], HEAPU32[v+8>>2], HEAPU32[v+12>>2]);\r\n    };\r\n  var _emscripten_glVertexAttribI4uiv = _glVertexAttribI4uiv;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribIPointer = (index, size, type, stride, ptr) => {\r\n      GLctx.vertexAttribIPointer(index, size, type, stride, ptr);\r\n    };\r\n  var _emscripten_glVertexAttribIPointer = _glVertexAttribIPointer;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glVertexAttribPointer = (index, size, type, normalized, stride, ptr) => {\r\n      var cb = GL.currentContext.clientBuffers[index];\r\n      if (!GLctx.currentArrayBufferBinding) {\r\n        cb.size = size;\r\n        cb.type = type;\r\n        cb.normalized = normalized;\r\n        cb.stride = stride;\r\n        cb.ptr = ptr;\r\n        cb.clientside = true;\r\n        cb.vertexAttribPointerAdaptor = function(index, size, type, normalized, stride, ptr) {\r\n          this.vertexAttribPointer(index, size, type, normalized, stride, ptr);\r\n        };\r\n        return;\r\n      }\r\n      cb.clientside = false;\r\n      GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\r\n    };\r\n  var _emscripten_glVertexAttribPointer = _glVertexAttribPointer;\r\n\r\n  /** @suppress {duplicate } */\r\n  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }\r\n  var _emscripten_glViewport = _glViewport;\r\n\r\n  /** @suppress {duplicate } */\r\n  var _glWaitSync = (sync, flags, timeout_low, timeout_high) => {\r\n      // See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)\r\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\r\n      GLctx.waitSync(GL.syncs[sync], flags, timeout);\r\n    };\r\n  var _emscripten_glWaitSync = _glWaitSync;\r\n\r\n  var _emscripten_has_asyncify = () => 1;\r\n\r\n  var _emscripten_memcpy_js = (dest, src, num) => HEAPU8.copyWithin(dest, src, src + num);\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  var doRequestFullscreen = (target, strategy) => {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      if (!target.requestFullscreen\r\n        && !target.webkitRequestFullscreen\r\n        ) {\r\n        return -3;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (strategy.deferUntilInEventHandler) {\r\n          JSEvents.deferCall(JSEvents_requestFullscreen, 1 /* priority over pointer lock */, [target, strategy]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return JSEvents_requestFullscreen(target, strategy);\r\n    };\r\n  \r\n  \r\n  var _emscripten_request_fullscreen_strategy = (target, deferUntilInEventHandler, fullscreenStrategy) => {\r\n      var strategy = {\r\n        scaleMode: HEAP32[((fullscreenStrategy)>>2)],\r\n        canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\r\n        filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\r\n        deferUntilInEventHandler,\r\n        canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\r\n        canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)]\r\n      };\r\n  \r\n      return doRequestFullscreen(target, strategy);\r\n    };\r\n\r\n  \r\n  \r\n  var _emscripten_request_pointerlock = (target, deferUntilInEventHandler) => {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      if (!target.requestPointerLock\r\n        ) {\r\n        return -1;\r\n      }\r\n  \r\n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\r\n  \r\n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\r\n      if (!canPerformRequests) {\r\n        if (deferUntilInEventHandler) {\r\n          JSEvents.deferCall(requestPointerLock, 2 /* priority below fullscreen */, [target]);\r\n          return 1;\r\n        }\r\n        return -2;\r\n      }\r\n  \r\n      return requestPointerLock(target);\r\n    };\r\n\r\n  var getHeapMax = () =>\r\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\r\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\r\n      // for any code that deals with heap sizes, which would require special\r\n      // casing all heap size related code to treat 0 specially.\r\n      2147483648;\r\n  \r\n  var growMemory = (size) => {\r\n      var b = wasmMemory.buffer;\r\n      var pages = (size - b.byteLength + 65535) / 65536;\r\n      try {\r\n        // round size grow request up to wasm page size (fixed 64KB per spec)\r\n        wasmMemory.grow(pages); // .grow() takes a delta compared to the previous size\r\n        updateMemoryViews();\r\n        return 1 /*success*/;\r\n      } catch(e) {\r\n      }\r\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\r\n      // anyhow)\r\n    };\r\n  var _emscripten_resize_heap = (requestedSize) => {\r\n      var oldSize = HEAPU8.length;\r\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\r\n      requestedSize >>>= 0;\r\n      // With multithreaded builds, races can happen (another thread might increase the size\r\n      // in between), so return a failure, and let the caller retry.\r\n  \r\n      // Memory resize rules:\r\n      // 1.  Always increase heap size to at least the requested size, rounded up\r\n      //     to next page multiple.\r\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\r\n      //     geometrically: increase the heap size according to\r\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\r\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\r\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\r\n      //     linearly: increase the heap size by at least\r\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\r\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\r\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\r\n      // 4.  If we were unable to allocate as much memory, it may be due to\r\n      //     over-eager decision to excessively reserve due to (3) above.\r\n      //     Hence if an allocation fails, cut down on the amount of excess\r\n      //     growth, in an attempt to succeed to perform a smaller allocation.\r\n  \r\n      // A limit is set for how much we can grow. We should not exceed that\r\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\r\n      var maxHeapSize = getHeapMax();\r\n      if (requestedSize > maxHeapSize) {\r\n        return false;\r\n      }\r\n  \r\n      var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\r\n  \r\n      // Loop through potential heap size increases. If we attempt a too eager\r\n      // reservation that fails, cut down on the attempted size and reserve a\r\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\r\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\r\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\r\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\r\n  \r\n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\r\n  \r\n        var replacement = growMemory(newSize);\r\n        if (replacement) {\r\n  \r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    };\r\n\r\n  \r\n  /** @suppress {checkTypes} */\r\n  var disableGamepadApiIfItThrows = () => {\r\n      try {\r\n        navigator.getGamepads();\r\n      } catch(e) {\r\n        navigator.getGamepads = null; // Disable getGamepads() so that other functions will not attempt to use it.\r\n        return 1;\r\n      }\r\n    };\r\n  var _emscripten_sample_gamepad_data = () => {\r\n      if (!navigator.getGamepads || disableGamepadApiIfItThrows()) return -1;\r\n      return (JSEvents.lastGamepadState = navigator.getGamepads())\r\n        ? 0 : -1;\r\n    };\r\n\r\n  \r\n  \r\n  var registerBeforeUnloadEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) => {\r\n      var beforeUnloadEventHandlerFunc = (e = event) => {\r\n        // Note: This is always called on the main browser thread, since it needs synchronously return a value!\r\n        var confirmationMessage = ((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, 0, userData);\r\n  \r\n        if (confirmationMessage) {\r\n          confirmationMessage = UTF8ToString(confirmationMessage);\r\n        }\r\n        if (confirmationMessage) {\r\n          e.preventDefault();\r\n          e.returnValue = confirmationMessage;\r\n          return confirmationMessage;\r\n        }\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString,\r\n        callbackfunc,\r\n        handlerFunc: beforeUnloadEventHandlerFunc,\r\n        useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    };\r\n  var _emscripten_set_beforeunload_callback_on_thread = (userData, callbackfunc, targetThread) => {\r\n      if (typeof onbeforeunload == 'undefined') return -1;\r\n      // beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,\r\n      // and there is no time to start proxying it anywhere.\r\n      if (targetThread !== 1) return -5;\r\n      return registerBeforeUnloadEventCallback(2, userData, true, callbackfunc, 28, \"beforeunload\");\r\n    };\r\n\r\n  \r\n  \r\n  \r\n  var registerFocusEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\r\n      if (!JSEvents.focusEvent) JSEvents.focusEvent = _malloc(256);\r\n  \r\n      var focusEventHandlerFunc = (e = event) => {\r\n        var nodeName = JSEvents.getNodeNameForTarget(e.target);\r\n        var id = e.target.id ? e.target.id : '';\r\n  \r\n        var focusEvent = JSEvents.focusEvent;\r\n        stringToUTF8(nodeName, focusEvent + 0, 128);\r\n        stringToUTF8(id, focusEvent + 128, 128);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, focusEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString,\r\n        callbackfunc,\r\n        handlerFunc: focusEventHandlerFunc,\r\n        useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    };\r\n  var _emscripten_set_blur_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\r\n      return registerFocusEventCallback(target, userData, useCapture, callbackfunc, 12, \"blur\", targetThread);\r\n    };\r\n\r\n\r\n  \r\n  var _emscripten_set_element_css_size = (target, width, height) => {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      target.style.width = width + \"px\";\r\n      target.style.height = height + \"px\";\r\n  \r\n      return 0;\r\n    };\r\n\r\n  var _emscripten_set_focus_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\r\n      return registerFocusEventCallback(target, userData, useCapture, callbackfunc, 13, \"focus\", targetThread);\r\n    };\r\n\r\n  \r\n  \r\n  \r\n  var fillFullscreenChangeEventData = (eventStruct) => {\r\n      var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\r\n      var isFullscreen = !!fullscreenElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isFullscreen;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = JSEvents.fullscreenEnabled();\r\n      // If transitioning to fullscreen, report info about the element that is now fullscreen.\r\n      // If transitioning to windowed mode, report info about the element that just was fullscreen.\r\n      var reportedElement = isFullscreen ? fullscreenElement : JSEvents.previousFullscreenElement;\r\n      var nodeName = JSEvents.getNodeNameForTarget(reportedElement);\r\n      var id = reportedElement?.id || '';\r\n      stringToUTF8(nodeName, eventStruct + 8, 128);\r\n      stringToUTF8(id, eventStruct + 136, 128);\r\n      HEAP32[(((eventStruct)+(264))>>2)] = reportedElement ? reportedElement.clientWidth : 0;\r\n      HEAP32[(((eventStruct)+(268))>>2)] = reportedElement ? reportedElement.clientHeight : 0;\r\n      HEAP32[(((eventStruct)+(272))>>2)] = screen.width;\r\n      HEAP32[(((eventStruct)+(276))>>2)] = screen.height;\r\n      if (isFullscreen) {\r\n        JSEvents.previousFullscreenElement = fullscreenElement;\r\n      }\r\n    };\r\n  \r\n  \r\n  var registerFullscreenChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\r\n      if (!JSEvents.fullscreenChangeEvent) JSEvents.fullscreenChangeEvent = _malloc(280);\r\n  \r\n      var fullscreenChangeEventhandlerFunc = (e = event) => {\r\n        var fullscreenChangeEvent = JSEvents.fullscreenChangeEvent;\r\n  \r\n        fillFullscreenChangeEventData(fullscreenChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, fullscreenChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target,\r\n        eventTypeString,\r\n        callbackfunc,\r\n        handlerFunc: fullscreenChangeEventhandlerFunc,\r\n        useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    };\r\n  \r\n  \r\n  var _emscripten_set_fullscreenchange_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\r\n      if (!JSEvents.fullscreenEnabled()) return -1;\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n  \r\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\r\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\r\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"webkitfullscreenchange\", targetThread);\r\n  \r\n      return registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"fullscreenchange\", targetThread);\r\n    };\r\n\r\n  \r\n  \r\n  \r\n  var registerGamepadEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\r\n      if (!JSEvents.gamepadEvent) JSEvents.gamepadEvent = _malloc(1432);\r\n  \r\n      var gamepadEventHandlerFunc = (e = event) => {\r\n        var gamepadEvent = JSEvents.gamepadEvent;\r\n        fillGamepadEventData(gamepadEvent, e[\"gamepad\"]);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, gamepadEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        allowsDeferredCalls: true,\r\n        eventTypeString,\r\n        callbackfunc,\r\n        handlerFunc: gamepadEventHandlerFunc,\r\n        useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    };\r\n  \r\n  var _emscripten_set_gamepadconnected_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\r\n      if (!navigator.getGamepads || disableGamepadApiIfItThrows()) return -1;\r\n      return registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 26, \"gamepadconnected\", targetThread);\r\n    };\r\n\r\n  \r\n  var _emscripten_set_gamepaddisconnected_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\r\n      if (!navigator.getGamepads || disableGamepadApiIfItThrows()) return -1;\r\n      return registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 27, \"gamepaddisconnected\", targetThread);\r\n    };\r\n\r\n  \r\n  \r\n  \r\n  var registerKeyEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\r\n      if (!JSEvents.keyEvent) JSEvents.keyEvent = _malloc(176);\r\n  \r\n      var keyEventHandlerFunc = (e) => {\r\n  \r\n        var keyEventData = JSEvents.keyEvent;\r\n        HEAPF64[((keyEventData)>>3)] = e.timeStamp;\r\n  \r\n        var idx =((keyEventData)>>2);\r\n  \r\n        HEAP32[idx + 2] = e.location;\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        HEAP32[idx + 7] = e.repeat;\r\n        HEAP32[idx + 8] = e.charCode;\r\n        HEAP32[idx + 9] = e.keyCode;\r\n        HEAP32[idx + 10] = e.which;\r\n        stringToUTF8(e.key || '', keyEventData + 44, 32);\r\n        stringToUTF8(e.code || '', keyEventData + 76, 32);\r\n        stringToUTF8(e.char || '', keyEventData + 108, 32);\r\n        stringToUTF8(e.locale || '', keyEventData + 140, 32);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, keyEventData, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target: findEventTarget(target),\r\n        eventTypeString,\r\n        callbackfunc,\r\n        handlerFunc: keyEventHandlerFunc,\r\n        useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    };\r\n  var _emscripten_set_keydown_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 2, \"keydown\", targetThread);\r\n\r\n  var _emscripten_set_keypress_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 1, \"keypress\", targetThread);\r\n\r\n  var _emscripten_set_keyup_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\r\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 3, \"keyup\", targetThread);\r\n\r\n  \r\n  var _emscripten_set_main_loop = (func, fps, simulateInfiniteLoop) => {\r\n      var browserIterationFunc = (() => dynCall_v.call(null, func));\r\n      setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop);\r\n    };\r\n\r\n  \r\n  \r\n  \r\n  var fillMouseEventData = (eventStruct, e, target) => {\r\n      HEAPF64[((eventStruct)>>3)] = e.timeStamp;\r\n      var idx = ((eventStruct)>>2);\r\n      HEAP32[idx + 2] = e.screenX;\r\n      HEAP32[idx + 3] = e.screenY;\r\n      HEAP32[idx + 4] = e.clientX;\r\n      HEAP32[idx + 5] = e.clientY;\r\n      HEAP32[idx + 6] = e.ctrlKey;\r\n      HEAP32[idx + 7] = e.shiftKey;\r\n      HEAP32[idx + 8] = e.altKey;\r\n      HEAP32[idx + 9] = e.metaKey;\r\n      HEAP16[idx*2 + 20] = e.button;\r\n      HEAP16[idx*2 + 21] = e.buttons;\r\n  \r\n      HEAP32[idx + 11] = e[\"movementX\"]\r\n        ;\r\n  \r\n      HEAP32[idx + 12] = e[\"movementY\"]\r\n        ;\r\n  \r\n      var rect = getBoundingClientRect(target);\r\n      HEAP32[idx + 13] = e.clientX - rect.left;\r\n      HEAP32[idx + 14] = e.clientY - rect.top;\r\n  \r\n    };\r\n  \r\n  \r\n  var registerMouseEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\r\n      if (!JSEvents.mouseEvent) JSEvents.mouseEvent = _malloc(72);\r\n      target = findEventTarget(target);\r\n  \r\n      var mouseEventHandlerFunc = (e = event) => {\r\n        // TODO: Make this access thread safe, or this could update live while app is reading it.\r\n        fillMouseEventData(JSEvents.mouseEvent, e, target);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, JSEvents.mouseEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target,\r\n        allowsDeferredCalls: eventTypeString != 'mousemove' && eventTypeString != 'mouseenter' && eventTypeString != 'mouseleave', // Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!\r\n        eventTypeString,\r\n        callbackfunc,\r\n        handlerFunc: mouseEventHandlerFunc,\r\n        useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    };\r\n  var _emscripten_set_mousedown_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 5, \"mousedown\", targetThread);\r\n\r\n  var _emscripten_set_mouseenter_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 33, \"mouseenter\", targetThread);\r\n\r\n  var _emscripten_set_mouseleave_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 34, \"mouseleave\", targetThread);\r\n\r\n  var _emscripten_set_mousemove_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 8, \"mousemove\", targetThread);\r\n\r\n  var _emscripten_set_mouseup_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\r\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 6, \"mouseup\", targetThread);\r\n\r\n  \r\n  \r\n  \r\n  var fillPointerlockChangeEventData = (eventStruct) => {\r\n      var pointerLockElement = document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement || document.msPointerLockElement;\r\n      var isPointerlocked = !!pointerLockElement;\r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = isPointerlocked;\r\n      var nodeName = JSEvents.getNodeNameForTarget(pointerLockElement);\r\n      var id = pointerLockElement?.id || '';\r\n      stringToUTF8(nodeName, eventStruct + 4, 128);\r\n      stringToUTF8(id, eventStruct + 132, 128);\r\n    };\r\n  \r\n  \r\n  var registerPointerlockChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\r\n      if (!JSEvents.pointerlockChangeEvent) JSEvents.pointerlockChangeEvent = _malloc(260);\r\n  \r\n      var pointerlockChangeEventHandlerFunc = (e = event) => {\r\n        var pointerlockChangeEvent = JSEvents.pointerlockChangeEvent;\r\n        fillPointerlockChangeEventData(pointerlockChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, pointerlockChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target,\r\n        eventTypeString,\r\n        callbackfunc,\r\n        handlerFunc: pointerlockChangeEventHandlerFunc,\r\n        useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    };\r\n  \r\n  \r\n  /** @suppress {missingProperties} */\r\n  var _emscripten_set_pointerlockchange_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\r\n      // TODO: Currently not supported in pthreads or in --proxy-to-worker mode. (In pthreads mode, document object is not defined)\r\n      if (!document || !document.body || (!document.body.requestPointerLock && !document.body.mozRequestPointerLock && !document.body.webkitRequestPointerLock && !document.body.msRequestPointerLock)) {\r\n        return -1;\r\n      }\r\n  \r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mozpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"webkitpointerlockchange\", targetThread);\r\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mspointerlockchange\", targetThread);\r\n      return registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"pointerlockchange\", targetThread);\r\n    };\r\n\r\n  \r\n  \r\n  var registerUiEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\r\n      if (!JSEvents.uiEvent) JSEvents.uiEvent = _malloc(36);\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var uiEventHandlerFunc = (e = event) => {\r\n        if (e.target != target) {\r\n          // Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that\r\n          // was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log\r\n          // message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,\r\n          // causing a new scroll, etc..\r\n          return;\r\n        }\r\n        var b = document.body; // Take document.body to a variable, Closure compiler does not outline access to it on its own.\r\n        if (!b) {\r\n          // During a page unload 'body' can be null, with \"Cannot read property 'clientWidth' of null\" being thrown\r\n          return;\r\n        }\r\n        var uiEvent = JSEvents.uiEvent;\r\n        HEAP32[((uiEvent)>>2)] = e.detail;\r\n        HEAP32[(((uiEvent)+(4))>>2)] = b.clientWidth;\r\n        HEAP32[(((uiEvent)+(8))>>2)] = b.clientHeight;\r\n        HEAP32[(((uiEvent)+(12))>>2)] = innerWidth;\r\n        HEAP32[(((uiEvent)+(16))>>2)] = innerHeight;\r\n        HEAP32[(((uiEvent)+(20))>>2)] = outerWidth;\r\n        HEAP32[(((uiEvent)+(24))>>2)] = outerHeight;\r\n        HEAP32[(((uiEvent)+(28))>>2)] = pageXOffset;\r\n        HEAP32[(((uiEvent)+(32))>>2)] = pageYOffset;\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, uiEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target,\r\n        eventTypeString,\r\n        callbackfunc,\r\n        handlerFunc: uiEventHandlerFunc,\r\n        useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    };\r\n  var _emscripten_set_resize_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\r\n      registerUiEventCallback(target, userData, useCapture, callbackfunc, 10, \"resize\", targetThread);\r\n\r\n  \r\n  \r\n  \r\n  var registerTouchEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\r\n      if (!JSEvents.touchEvent) JSEvents.touchEvent = _malloc(1696);\r\n  \r\n      target = findEventTarget(target);\r\n  \r\n      var touchEventHandlerFunc = (e) => {\r\n        var t, touches = {}, et = e.touches;\r\n        // To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches,\r\n        // only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in\r\n        // each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.\r\n  \r\n        for (var i = 0; i < et.length; ++i) {\r\n          t = et[i];\r\n          // Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any\r\n          // changed/target states we may have set from previous frame.\r\n          t.isChanged = t.onTarget = 0;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the changedTouches list.\r\n        for (var i = 0; i < e.changedTouches.length; ++i) {\r\n          t = e.changedTouches[i];\r\n          t.isChanged = 1;\r\n          touches[t.identifier] = t;\r\n        }\r\n        // Mark which touches are part of the targetTouches list.\r\n        for (var i = 0; i < e.targetTouches.length; ++i) {\r\n          touches[e.targetTouches[i].identifier].onTarget = 1;\r\n        }\r\n  \r\n        var touchEvent = JSEvents.touchEvent;\r\n        HEAPF64[((touchEvent)>>3)] = e.timeStamp;\r\n        var idx =((touchEvent)>>2);// Pre-shift the ptr to index to HEAP32 to save code size\r\n        HEAP32[idx + 3] = e.ctrlKey;\r\n        HEAP32[idx + 4] = e.shiftKey;\r\n        HEAP32[idx + 5] = e.altKey;\r\n        HEAP32[idx + 6] = e.metaKey;\r\n        idx += 7; // Advance to the start of the touch array.\r\n        var targetRect = getBoundingClientRect(target);\r\n        var numTouches = 0;\r\n        for (var i in touches) {\r\n          t = touches[i];\r\n          HEAP32[idx + 0] = t.identifier;\r\n          HEAP32[idx + 1] = t.screenX;\r\n          HEAP32[idx + 2] = t.screenY;\r\n          HEAP32[idx + 3] = t.clientX;\r\n          HEAP32[idx + 4] = t.clientY;\r\n          HEAP32[idx + 5] = t.pageX;\r\n          HEAP32[idx + 6] = t.pageY;\r\n          HEAP32[idx + 7] = t.isChanged;\r\n          HEAP32[idx + 8] = t.onTarget;\r\n          HEAP32[idx + 9] = t.clientX - targetRect.left;\r\n          HEAP32[idx + 10] = t.clientY - targetRect.top;\r\n  \r\n          idx += 13;\r\n  \r\n          if (++numTouches > 31) {\r\n            break;\r\n          }\r\n        }\r\n        HEAP32[(((touchEvent)+(8))>>2)] = numTouches;\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, touchEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target,\r\n        allowsDeferredCalls: eventTypeString == 'touchstart' || eventTypeString == 'touchend',\r\n        eventTypeString,\r\n        callbackfunc,\r\n        handlerFunc: touchEventHandlerFunc,\r\n        useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    };\r\n  var _emscripten_set_touchcancel_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 25, \"touchcancel\", targetThread);\r\n\r\n  var _emscripten_set_touchend_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 23, \"touchend\", targetThread);\r\n\r\n  var _emscripten_set_touchmove_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 24, \"touchmove\", targetThread);\r\n\r\n  var _emscripten_set_touchstart_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\r\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 22, \"touchstart\", targetThread);\r\n\r\n  \r\n  var fillVisibilityChangeEventData = (eventStruct) => {\r\n      var visibilityStates = [ \"hidden\", \"visible\", \"prerender\", \"unloaded\" ];\r\n      var visibilityState = visibilityStates.indexOf(document.visibilityState);\r\n  \r\n      // Assigning a boolean to HEAP32 with expected type coercion.\r\n      /** @suppress{checkTypes} */\r\n      HEAP32[((eventStruct)>>2)] = document.hidden;\r\n      HEAP32[(((eventStruct)+(4))>>2)] = visibilityState;\r\n    };\r\n  \r\n  \r\n  var registerVisibilityChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\r\n      if (!JSEvents.visibilityChangeEvent) JSEvents.visibilityChangeEvent = _malloc(8);\r\n  \r\n      var visibilityChangeEventHandlerFunc = (e = event) => {\r\n        var visibilityChangeEvent = JSEvents.visibilityChangeEvent;\r\n  \r\n        fillVisibilityChangeEventData(visibilityChangeEvent);\r\n  \r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, visibilityChangeEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target,\r\n        eventTypeString,\r\n        callbackfunc,\r\n        handlerFunc: visibilityChangeEventHandlerFunc,\r\n        useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    };\r\n  \r\n  var _emscripten_set_visibilitychange_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\r\n      return registerVisibilityChangeEventCallback(specialHTMLTargets[1], userData, useCapture, callbackfunc, 21, \"visibilitychange\", targetThread);\r\n    };\r\n\r\n  \r\n  \r\n  \r\n  \r\n  var registerWheelEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\r\n      if (!JSEvents.wheelEvent) JSEvents.wheelEvent = _malloc(104);\r\n  \r\n      // The DOM Level 3 events spec event 'wheel'\r\n      var wheelHandlerFunc = (e = event) => {\r\n        var wheelEvent = JSEvents.wheelEvent;\r\n        fillMouseEventData(wheelEvent, e, target);\r\n        HEAPF64[(((wheelEvent)+(72))>>3)] = e[\"deltaX\"];\r\n        HEAPF64[(((wheelEvent)+(80))>>3)] = e[\"deltaY\"];\r\n        HEAPF64[(((wheelEvent)+(88))>>3)] = e[\"deltaZ\"];\r\n        HEAP32[(((wheelEvent)+(96))>>2)] = e[\"deltaMode\"];\r\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, wheelEvent, userData)) e.preventDefault();\r\n      };\r\n  \r\n      var eventHandler = {\r\n        target,\r\n        allowsDeferredCalls: true,\r\n        eventTypeString,\r\n        callbackfunc,\r\n        handlerFunc: wheelHandlerFunc,\r\n        useCapture\r\n      };\r\n      return JSEvents.registerOrRemoveHandler(eventHandler);\r\n    };\r\n  \r\n  var _emscripten_set_wheel_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\r\n      target = findEventTarget(target);\r\n      if (!target) return -4;\r\n      if (typeof target.onwheel != 'undefined') {\r\n        return registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, \"wheel\", targetThread);\r\n      } else {\r\n        return -1;\r\n      }\r\n    };\r\n\r\n  \r\n  var _emscripten_set_window_title = (title) => document.title = UTF8ToString(title);\r\n\r\n  var _emscripten_sleep = (ms) => {\r\n      // emscripten_sleep() does not return a value, but we still need a |return|\r\n      // here for stack switching support (ASYNCIFY=2). In that mode this function\r\n      // returns a Promise instead of nothing, and that Promise is what tells the\r\n      // wasm VM to pause the stack.\r\n      return Asyncify.handleSleep((wakeUp) => safeSetTimeout(wakeUp, ms));\r\n    };\r\n  _emscripten_sleep.isAsync = true;\r\n\r\n  var ENV = {\r\n  };\r\n  \r\n  var getExecutableName = () => {\r\n      return thisProgram || './this.program';\r\n    };\r\n  var getEnvStrings = () => {\r\n      if (!getEnvStrings.strings) {\r\n        // Default values.\r\n        // Browser language detection #8751\r\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\r\n        var env = {\r\n          'USER': 'web_user',\r\n          'LOGNAME': 'web_user',\r\n          'PATH': '/',\r\n          'PWD': '/',\r\n          'HOME': '/home/web_user',\r\n          'LANG': lang,\r\n          '_': getExecutableName()\r\n        };\r\n        // Apply the user-provided values, if any.\r\n        for (var x in ENV) {\r\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\r\n          // explicitly set to be so. We allow user code to do that to\r\n          // force variables with default values to remain unset.\r\n          if (ENV[x] === undefined) delete env[x];\r\n          else env[x] = ENV[x];\r\n        }\r\n        var strings = [];\r\n        for (var x in env) {\r\n          strings.push(`${x}=${env[x]}`);\r\n        }\r\n        getEnvStrings.strings = strings;\r\n      }\r\n      return getEnvStrings.strings;\r\n    };\r\n  \r\n  var stringToAscii = (str, buffer) => {\r\n      for (var i = 0; i < str.length; ++i) {\r\n        HEAP8[((buffer++)>>0)] = str.charCodeAt(i);\r\n      }\r\n      // Null-terminate the string\r\n      HEAP8[((buffer)>>0)] = 0;\r\n    };\r\n  \r\n  var _environ_get = (__environ, environ_buf) => {\r\n      var bufSize = 0;\r\n      getEnvStrings().forEach((string, i) => {\r\n        var ptr = environ_buf + bufSize;\r\n        HEAPU32[(((__environ)+(i*4))>>2)] = ptr;\r\n        stringToAscii(string, ptr);\r\n        bufSize += string.length + 1;\r\n      });\r\n      return 0;\r\n    };\r\n\r\n  \r\n  var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\r\n      var strings = getEnvStrings();\r\n      HEAPU32[((penviron_count)>>2)] = strings.length;\r\n      var bufSize = 0;\r\n      strings.forEach((string) => bufSize += string.length + 1);\r\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\r\n      return 0;\r\n    };\r\n\r\n\r\n  function _fd_close(fd) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.close(stream);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  var doReadv = (stream, iov, iovcnt, offset) => {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (curr < len) break; // nothing more to read\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    };\r\n  \r\n  function _fd_read(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doReadv(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function _fd_seek(fd,offset_low, offset_high,whence,newOffset) {\r\n    var offset = convertI32PairToI53Checked(offset_low, offset_high);;\r\n  \r\n    \r\n  try {\r\n  \r\n      if (isNaN(offset)) return 61;\r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.llseek(stream, offset, whence);\r\n      (tempI64 = [stream.position>>>0,(tempDouble = stream.position,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((newOffset)>>2)] = tempI64[0],HEAP32[(((newOffset)+(4))>>2)] = tempI64[1]);\r\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  ;\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  var doWritev = (stream, iov, iovcnt, offset) => {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (typeof offset !== 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    };\r\n  \r\n  function _fd_write(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doWritev(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n\r\n  \r\n  var arraySum = (array, index) => {\r\n      var sum = 0;\r\n      for (var i = 0; i <= index; sum += array[i++]) {\r\n        // no-op\r\n      }\r\n      return sum;\r\n    };\r\n  \r\n  \r\n  var MONTH_DAYS_LEAP = [31,29,31,30,31,30,31,31,30,31,30,31];\r\n  \r\n  var MONTH_DAYS_REGULAR = [31,28,31,30,31,30,31,31,30,31,30,31];\r\n  var addDays = (date, days) => {\r\n      var newDate = new Date(date.getTime());\r\n      while (days > 0) {\r\n        var leap = isLeapYear(newDate.getFullYear());\r\n        var currentMonth = newDate.getMonth();\r\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\r\n  \r\n        if (days > daysInCurrentMonth-newDate.getDate()) {\r\n          // we spill over to next month\r\n          days -= (daysInCurrentMonth-newDate.getDate()+1);\r\n          newDate.setDate(1);\r\n          if (currentMonth < 11) {\r\n            newDate.setMonth(currentMonth+1)\r\n          } else {\r\n            newDate.setMonth(0);\r\n            newDate.setFullYear(newDate.getFullYear()+1);\r\n          }\r\n        } else {\r\n          // we stay in current month\r\n          newDate.setDate(newDate.getDate()+days);\r\n          return newDate;\r\n        }\r\n      }\r\n  \r\n      return newDate;\r\n    };\r\n  \r\n  \r\n  \r\n  \r\n  var writeArrayToMemory = (array, buffer) => {\r\n      HEAP8.set(array, buffer);\r\n    };\r\n  \r\n  var _strftime = (s, maxsize, format, tm) => {\r\n      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);\r\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html\r\n  \r\n      var tm_zone = HEAPU32[(((tm)+(40))>>2)];\r\n  \r\n      var date = {\r\n        tm_sec: HEAP32[((tm)>>2)],\r\n        tm_min: HEAP32[(((tm)+(4))>>2)],\r\n        tm_hour: HEAP32[(((tm)+(8))>>2)],\r\n        tm_mday: HEAP32[(((tm)+(12))>>2)],\r\n        tm_mon: HEAP32[(((tm)+(16))>>2)],\r\n        tm_year: HEAP32[(((tm)+(20))>>2)],\r\n        tm_wday: HEAP32[(((tm)+(24))>>2)],\r\n        tm_yday: HEAP32[(((tm)+(28))>>2)],\r\n        tm_isdst: HEAP32[(((tm)+(32))>>2)],\r\n        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],\r\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''\r\n      };\r\n      \r\n  \r\n      var pattern = UTF8ToString(format);\r\n  \r\n      // expand format\r\n      var EXPANSION_RULES_1 = {\r\n        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013\r\n        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y\r\n        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d\r\n        '%h': '%b',                       // Equivalent to %b\r\n        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation\r\n        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation\r\n        '%T': '%H:%M:%S',                 // Replaced by the time\r\n        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation\r\n        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation\r\n        // Modified Conversion Specifiers\r\n        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.\r\n        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.\r\n        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.\r\n        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.\r\n        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.\r\n        '%EY': '%Y',                      // Replaced by the full alternative year representation.\r\n        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.\r\n        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.\r\n        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.\r\n        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.\r\n        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.\r\n        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.\r\n        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.\r\n        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).\r\n        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.\r\n        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.\r\n        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.\r\n        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.\r\n        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.\r\n      };\r\n      for (var rule in EXPANSION_RULES_1) {\r\n        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\r\n      }\r\n  \r\n      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  \r\n      function leadingSomething(value, digits, character) {\r\n        var str = typeof value == 'number' ? value.toString() : (value || '');\r\n        while (str.length < digits) {\r\n          str = character[0]+str;\r\n        }\r\n        return str;\r\n      }\r\n  \r\n      function leadingNulls(value, digits) {\r\n        return leadingSomething(value, digits, '0');\r\n      }\r\n  \r\n      function compareByDay(date1, date2) {\r\n        function sgn(value) {\r\n          return value < 0 ? -1 : (value > 0 ? 1 : 0);\r\n        }\r\n  \r\n        var compare;\r\n        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {\r\n          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {\r\n            compare = sgn(date1.getDate()-date2.getDate());\r\n          }\r\n        }\r\n        return compare;\r\n      }\r\n  \r\n      function getFirstWeekStartDate(janFourth) {\r\n          switch (janFourth.getDay()) {\r\n            case 0: // Sunday\r\n              return new Date(janFourth.getFullYear()-1, 11, 29);\r\n            case 1: // Monday\r\n              return janFourth;\r\n            case 2: // Tuesday\r\n              return new Date(janFourth.getFullYear(), 0, 3);\r\n            case 3: // Wednesday\r\n              return new Date(janFourth.getFullYear(), 0, 2);\r\n            case 4: // Thursday\r\n              return new Date(janFourth.getFullYear(), 0, 1);\r\n            case 5: // Friday\r\n              return new Date(janFourth.getFullYear()-1, 11, 31);\r\n            case 6: // Saturday\r\n              return new Date(janFourth.getFullYear()-1, 11, 30);\r\n          }\r\n      }\r\n  \r\n      function getWeekBasedYear(date) {\r\n          var thisDate = addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);\r\n  \r\n          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\r\n          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);\r\n  \r\n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\r\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\r\n  \r\n          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\r\n            // this date is after the start of the first week of this year\r\n            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\r\n              return thisDate.getFullYear()+1;\r\n            }\r\n            return thisDate.getFullYear();\r\n          }\r\n          return thisDate.getFullYear()-1;\r\n      }\r\n  \r\n      var EXPANSION_RULES_2 = {\r\n        '%a': (date) => WEEKDAYS[date.tm_wday].substring(0,3) ,\r\n        '%A': (date) => WEEKDAYS[date.tm_wday],\r\n        '%b': (date) => MONTHS[date.tm_mon].substring(0,3),\r\n        '%B': (date) => MONTHS[date.tm_mon],\r\n        '%C': (date) => {\r\n          var year = date.tm_year+1900;\r\n          return leadingNulls((year/100)|0,2);\r\n        },\r\n        '%d': (date) => leadingNulls(date.tm_mday, 2),\r\n        '%e': (date) => leadingSomething(date.tm_mday, 2, ' '),\r\n        '%g': (date) => {\r\n          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.\r\n          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes\r\n          // January 4th, which is also the week that includes the first Thursday of the year, and\r\n          // is also the first week that contains at least four days in the year.\r\n          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of\r\n          // the last week of the preceding year; thus, for Saturday 2nd January 1999,\r\n          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,\r\n          // or 31st is a Monday, it and any following days are part of week 1 of the following year.\r\n          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.\r\n  \r\n          return getWeekBasedYear(date).toString().substring(2);\r\n        },\r\n        '%G': (date) => getWeekBasedYear(date),\r\n        '%H': (date) => leadingNulls(date.tm_hour, 2),\r\n        '%I': (date) => {\r\n          var twelveHour = date.tm_hour;\r\n          if (twelveHour == 0) twelveHour = 12;\r\n          else if (twelveHour > 12) twelveHour -= 12;\r\n          return leadingNulls(twelveHour, 2);\r\n        },\r\n        '%j': (date) => {\r\n          // Day of the year (001-366)\r\n          return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year+1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon-1), 3);\r\n        },\r\n        '%m': (date) => leadingNulls(date.tm_mon+1, 2),\r\n        '%M': (date) => leadingNulls(date.tm_min, 2),\r\n        '%n': () => '\\n',\r\n        '%p': (date) => {\r\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\r\n            return 'AM';\r\n          }\r\n          return 'PM';\r\n        },\r\n        '%S': (date) => leadingNulls(date.tm_sec, 2),\r\n        '%t': () => '\\t',\r\n        '%u': (date) => date.tm_wday || 7,\r\n        '%U': (date) => {\r\n          var days = date.tm_yday + 7 - date.tm_wday;\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%V': (date) => {\r\n          // Replaced by the week number of the year (Monday as the first day of the week)\r\n          // as a decimal number [01,53]. If the week containing 1 January has four\r\n          // or more days in the new year, then it is considered week 1.\r\n          // Otherwise, it is the last week of the previous year, and the next week is week 1.\r\n          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]\r\n          var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7 ) / 7);\r\n          // If 1 Jan is just 1-3 days past Monday, the previous week\r\n          // is also in this year.\r\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\r\n            val++;\r\n          }\r\n          if (!val) {\r\n            val = 52;\r\n            // If 31 December of prev year a Thursday, or Friday of a\r\n            // leap year, then the prev year has 53 weeks.\r\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\r\n            if (dec31 == 4 || (dec31 == 5 && isLeapYear(date.tm_year%400-1))) {\r\n              val++;\r\n            }\r\n          } else if (val == 53) {\r\n            // If 1 January is not a Thursday, and not a Wednesday of a\r\n            // leap year, then this year has only 52 weeks.\r\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\r\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year)))\r\n              val = 1;\r\n          }\r\n          return leadingNulls(val, 2);\r\n        },\r\n        '%w': (date) => date.tm_wday,\r\n        '%W': (date) => {\r\n          var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\r\n          return leadingNulls(Math.floor(days / 7), 2);\r\n        },\r\n        '%y': (date) => {\r\n          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]\r\n          return (date.tm_year+1900).toString().substring(2);\r\n        },\r\n        // Replaced by the year as a decimal number (for example, 1997). [ tm_year]\r\n        '%Y': (date) => date.tm_year+1900,\r\n        '%z': (date) => {\r\n          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).\r\n          // For example, \"-0430\" means 4 hours 30 minutes behind UTC (west of Greenwich).\r\n          var off = date.tm_gmtoff;\r\n          var ahead = off >= 0;\r\n          off = Math.abs(off) / 60;\r\n          // convert from minutes into hhmm format (which means 60 minutes = 100 units)\r\n          off = (off / 60)*100 + (off % 60);\r\n          return (ahead ? '+' : '-') + String(\"0000\" + off).slice(-4);\r\n        },\r\n        '%Z': (date) => date.tm_zone,\r\n        '%%': () => '%'\r\n      };\r\n  \r\n      // Replace %% with a pair of NULLs (which cannot occur in a C string), then\r\n      // re-inject them after processing.\r\n      pattern = pattern.replace(/%%/g, '\\0\\0')\r\n      for (var rule in EXPANSION_RULES_2) {\r\n        if (pattern.includes(rule)) {\r\n          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\r\n        }\r\n      }\r\n      pattern = pattern.replace(/\\0\\0/g, '%')\r\n  \r\n      var bytes = intArrayFromString(pattern, false);\r\n      if (bytes.length > maxsize) {\r\n        return 0;\r\n      }\r\n  \r\n      writeArrayToMemory(bytes, s);\r\n      return bytes.length-1;\r\n    };\r\n\r\n  var _system = (command) => {\r\n      // int system(const char *command);\r\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/system.html\r\n      // Can't call external programs.\r\n      if (!command) return 0; // no shell available\r\n      setErrNo(52);\r\n      return -1;\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n  var runAndAbortIfError = (func) => {\r\n      try {\r\n        return func();\r\n      } catch (e) {\r\n        abort(e);\r\n      }\r\n    };\r\n  \r\n  \r\n  var sigToWasmTypes = (sig) => {\r\n      var typeNames = {\r\n        'i': 'i32',\r\n        'j': 'i64',\r\n        'f': 'f32',\r\n        'd': 'f64',\r\n        'e': 'externref',\r\n        'p': 'i32',\r\n      };\r\n      var type = {\r\n        parameters: [],\r\n        results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\r\n      };\r\n      for (var i = 1; i < sig.length; ++i) {\r\n        type.parameters.push(typeNames[sig[i]]);\r\n      }\r\n      return type;\r\n    };\r\n  \r\n  var runtimeKeepalivePush = () => {\r\n      runtimeKeepaliveCounter += 1;\r\n    };\r\n  \r\n  var runtimeKeepalivePop = () => {\r\n      runtimeKeepaliveCounter -= 1;\r\n    };\r\n  \r\n  \r\n  var Asyncify = {\r\n  instrumentWasmImports(imports) {\r\n        var importPattern = /^(invoke_.*|__asyncjs__.*)$/;\r\n  \r\n        for (let [x, original] of Object.entries(imports)) {\r\n          let sig = original.sig;\r\n          if (typeof original == 'function') {\r\n            let isAsyncifyImport = original.isAsync || importPattern.test(x);\r\n          }\r\n        }\r\n      },\r\n  instrumentWasmExports(exports) {\r\n        var ret = {};\r\n        for (let [x, original] of Object.entries(exports)) {\r\n          if (typeof original == 'function') {\r\n            ret[x] = function() {\r\n              Asyncify.exportCallStack.push(x);\r\n              try {\r\n                return original.apply(null, arguments);\r\n              } finally {\r\n                if (!ABORT) {\r\n                  var y = Asyncify.exportCallStack.pop();\r\n                  Asyncify.maybeStopUnwind();\r\n                }\r\n              }\r\n            };\r\n          } else {\r\n            ret[x] = original;\r\n          }\r\n        }\r\n        return ret;\r\n      },\r\n  State:{\r\n  Normal:0,\r\n  Unwinding:1,\r\n  Rewinding:2,\r\n  Disabled:3,\r\n  },\r\n  state:0,\r\n  StackSize:4096,\r\n  currData:null,\r\n  handleSleepReturnValue:0,\r\n  exportCallStack:[],\r\n  callStackNameToId:{\r\n  },\r\n  callStackIdToName:{\r\n  },\r\n  callStackId:0,\r\n  asyncPromiseHandlers:null,\r\n  sleepCallbacks:[],\r\n  getCallStackId(funcName) {\r\n        var id = Asyncify.callStackNameToId[funcName];\r\n        if (id === undefined) {\r\n          id = Asyncify.callStackId++;\r\n          Asyncify.callStackNameToId[funcName] = id;\r\n          Asyncify.callStackIdToName[id] = funcName;\r\n        }\r\n        return id;\r\n      },\r\n  maybeStopUnwind() {\r\n        if (Asyncify.currData &&\r\n            Asyncify.state === Asyncify.State.Unwinding &&\r\n            Asyncify.exportCallStack.length === 0) {\r\n          // We just finished unwinding.\r\n          // Be sure to set the state before calling any other functions to avoid\r\n          // possible infinite recursion here (For example in debug pthread builds\r\n          // the dbg() function itself can call back into WebAssembly to get the\r\n          // current pthread_self() pointer).\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          \r\n          // Keep the runtime alive so that a re-wind can be done later.\r\n          runAndAbortIfError(_asyncify_stop_unwind);\r\n          if (typeof Fibers != 'undefined') {\r\n            Fibers.trampoline();\r\n          }\r\n        }\r\n      },\r\n  whenDone() {\r\n        return new Promise((resolve, reject) => {\r\n          Asyncify.asyncPromiseHandlers = { resolve, reject };\r\n        });\r\n      },\r\n  allocateData() {\r\n        // An asyncify data structure has three fields:\r\n        //  0  current stack pos\r\n        //  4  max stack pos\r\n        //  8  id of function at bottom of the call stack (callStackIdToName[id] == name of js function)\r\n        //\r\n        // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\r\n        // We also embed a stack in the same memory region here, right next to the structure.\r\n        // This struct is also defined as asyncify_data_t in emscripten/fiber.h\r\n        var ptr = _malloc(12 + Asyncify.StackSize);\r\n        Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\r\n        Asyncify.setDataRewindFunc(ptr);\r\n        return ptr;\r\n      },\r\n  setDataHeader(ptr, stack, stackSize) {\r\n        HEAPU32[((ptr)>>2)] = stack;\r\n        HEAPU32[(((ptr)+(4))>>2)] = stack + stackSize;\r\n      },\r\n  setDataRewindFunc(ptr) {\r\n        var bottomOfCallStack = Asyncify.exportCallStack[0];\r\n        var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\r\n        HEAP32[(((ptr)+(8))>>2)] = rewindId;\r\n      },\r\n  getDataRewindFunc(ptr) {\r\n        var id = HEAP32[(((ptr)+(8))>>2)];\r\n        var name = Asyncify.callStackIdToName[id];\r\n        var func = wasmExports[name];\r\n        return func;\r\n      },\r\n  doRewind(ptr) {\r\n        var start = Asyncify.getDataRewindFunc(ptr);\r\n        // Once we have rewound and the stack we no longer need to artificially\r\n        // keep the runtime alive.\r\n        \r\n        return start();\r\n      },\r\n  handleSleep(startAsync) {\r\n        if (ABORT) return;\r\n        if (Asyncify.state === Asyncify.State.Normal) {\r\n          // Prepare to sleep. Call startAsync, and see what happens:\r\n          // if the code decided to call our callback synchronously,\r\n          // then no async operation was in fact begun, and we don't\r\n          // need to do anything.\r\n          var reachedCallback = false;\r\n          var reachedAfterCallback = false;\r\n          startAsync((handleSleepReturnValue = 0) => {\r\n            if (ABORT) return;\r\n            Asyncify.handleSleepReturnValue = handleSleepReturnValue;\r\n            reachedCallback = true;\r\n            if (!reachedAfterCallback) {\r\n              // We are happening synchronously, so no need for async.\r\n              return;\r\n            }\r\n            Asyncify.state = Asyncify.State.Rewinding;\r\n            runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.resume();\r\n            }\r\n            var asyncWasmReturnValue, isError = false;\r\n            try {\r\n              asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\r\n            } catch (err) {\r\n              asyncWasmReturnValue = err;\r\n              isError = true;\r\n            }\r\n            // Track whether the return value was handled by any promise handlers.\r\n            var handled = false;\r\n            if (!Asyncify.currData) {\r\n              // All asynchronous execution has finished.\r\n              // `asyncWasmReturnValue` now contains the final\r\n              // return value of the exported async WASM function.\r\n              //\r\n              // Note: `asyncWasmReturnValue` is distinct from\r\n              // `Asyncify.handleSleepReturnValue`.\r\n              // `Asyncify.handleSleepReturnValue` contains the return\r\n              // value of the last C function to have executed\r\n              // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\r\n              // contains the return value of the exported WASM function\r\n              // that may have called C functions that\r\n              // call `Asyncify.handleSleep()`.\r\n              var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\r\n              if (asyncPromiseHandlers) {\r\n                Asyncify.asyncPromiseHandlers = null;\r\n                (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\r\n                handled = true;\r\n              }\r\n            }\r\n            if (isError && !handled) {\r\n              // If there was an error and it was not handled by now, we have no choice but to\r\n              // rethrow that error into the global scope where it can be caught only by\r\n              // `onerror` or `onunhandledpromiserejection`.\r\n              throw asyncWasmReturnValue;\r\n            }\r\n          });\r\n          reachedAfterCallback = true;\r\n          if (!reachedCallback) {\r\n            // A true async operation was begun; start a sleep.\r\n            Asyncify.state = Asyncify.State.Unwinding;\r\n            // TODO: reuse, don't alloc/free every sleep\r\n            Asyncify.currData = Asyncify.allocateData();\r\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\r\n              Browser.mainLoop.pause();\r\n            }\r\n            runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\r\n          }\r\n        } else if (Asyncify.state === Asyncify.State.Rewinding) {\r\n          // Stop a resume.\r\n          Asyncify.state = Asyncify.State.Normal;\r\n          runAndAbortIfError(_asyncify_stop_rewind);\r\n          _free(Asyncify.currData);\r\n          Asyncify.currData = null;\r\n          // Call all sleep callbacks now that the sleep-resume is all done.\r\n          Asyncify.sleepCallbacks.forEach((func) => callUserCallback(func));\r\n        } else {\r\n          abort(`invalid state: ${Asyncify.state}`);\r\n        }\r\n        return Asyncify.handleSleepReturnValue;\r\n      },\r\n  handleAsync(startAsync) {\r\n        return Asyncify.handleSleep((wakeUp) => {\r\n          // TODO: add error handling as a second param when handleSleep implements it.\r\n          startAsync().then(wakeUp);\r\n        });\r\n      },\r\n  };\r\n\r\n\r\n\r\n\r\n  var FS_unlink = (path) => FS.unlink(path);\r\n\r\n  var FSNode = /** @constructor */ function(parent, name, mode, rdev) {\r\n    if (!parent) {\r\n      parent = this;  // root node sets parent to itself\r\n    }\r\n    this.parent = parent;\r\n    this.mount = parent.mount;\r\n    this.mounted = null;\r\n    this.id = FS.nextInode++;\r\n    this.name = name;\r\n    this.mode = mode;\r\n    this.node_ops = {};\r\n    this.stream_ops = {};\r\n    this.rdev = rdev;\r\n  };\r\n  var readMode = 292/*292*/ | 73/*73*/;\r\n  var writeMode = 146/*146*/;\r\n  Object.defineProperties(FSNode.prototype, {\r\n   read: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & readMode) === readMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= readMode : this.mode &= ~readMode;\r\n    }\r\n   },\r\n   write: {\r\n    get: /** @this{FSNode} */function() {\r\n     return (this.mode & writeMode) === writeMode;\r\n    },\r\n    set: /** @this{FSNode} */function(val) {\r\n     val ? this.mode |= writeMode : this.mode &= ~writeMode;\r\n    }\r\n   },\r\n   isFolder: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isDir(this.mode);\r\n    }\r\n   },\r\n   isDevice: {\r\n    get: /** @this{FSNode} */function() {\r\n     return FS.isChrdev(this.mode);\r\n    }\r\n   }\r\n  });\r\n  FS.FSNode = FSNode;\r\n  FS.createPreloadedFile = FS_createPreloadedFile;\r\n  FS.staticInit();Module[\"FS_createPath\"] = FS.createPath;Module[\"FS_createDataFile\"] = FS.createDataFile;Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;Module[\"FS_unlink\"] = FS.unlink;Module[\"FS_createLazyFile\"] = FS.createLazyFile;Module[\"FS_createDevice\"] = FS.createDevice;;\r\n\r\n      // exports\r\n      Module[\"requestFullscreen\"] = Browser.requestFullscreen;\r\n      Module[\"requestAnimationFrame\"] = Browser.requestAnimationFrame;\r\n      Module[\"setCanvasSize\"] = Browser.setCanvasSize;\r\n      Module[\"pauseMainLoop\"] = Browser.mainLoop.pause;\r\n      Module[\"resumeMainLoop\"] = Browser.mainLoop.resume;\r\n      Module[\"getUserMedia\"] = Browser.getUserMedia;\r\n      Module[\"createContext\"] = Browser.createContext;\r\n      var preloadedImages = {};\r\n      var preloadedAudios = {};;\r\nvar GLctx;;\r\nfor (var i = 0; i < 32; ++i) tempFixedLengthArray.push(new Array(i));;\r\nvar miniTempWebGLFloatBuffersStorage = new Float32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n    miniTempWebGLFloatBuffers[i] = miniTempWebGLFloatBuffersStorage.subarray(0, i+1);\r\n  };\r\nvar miniTempWebGLIntBuffersStorage = new Int32Array(288);\r\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\r\n    miniTempWebGLIntBuffers[i] = miniTempWebGLIntBuffersStorage.subarray(0, i+1);\r\n  };\r\nvar wasmImports = {\r\n  /** @export */\r\n  __syscall_chdir: ___syscall_chdir,\r\n  /** @export */\r\n  __syscall_dup3: ___syscall_dup3,\r\n  /** @export */\r\n  __syscall_faccessat: ___syscall_faccessat,\r\n  /** @export */\r\n  __syscall_fcntl64: ___syscall_fcntl64,\r\n  /** @export */\r\n  __syscall_fstat64: ___syscall_fstat64,\r\n  /** @export */\r\n  __syscall_getcwd: ___syscall_getcwd,\r\n  /** @export */\r\n  __syscall_getdents64: ___syscall_getdents64,\r\n  /** @export */\r\n  __syscall_ioctl: ___syscall_ioctl,\r\n  /** @export */\r\n  __syscall_lstat64: ___syscall_lstat64,\r\n  /** @export */\r\n  __syscall_mkdirat: ___syscall_mkdirat,\r\n  /** @export */\r\n  __syscall_newfstatat: ___syscall_newfstatat,\r\n  /** @export */\r\n  __syscall_openat: ___syscall_openat,\r\n  /** @export */\r\n  __syscall_readlinkat: ___syscall_readlinkat,\r\n  /** @export */\r\n  __syscall_renameat: ___syscall_renameat,\r\n  /** @export */\r\n  __syscall_rmdir: ___syscall_rmdir,\r\n  /** @export */\r\n  __syscall_stat64: ___syscall_stat64,\r\n  /** @export */\r\n  __syscall_unlinkat: ___syscall_unlinkat,\r\n  /** @export */\r\n  _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\r\n  /** @export */\r\n  _emscripten_throw_longjmp: __emscripten_throw_longjmp,\r\n  /** @export */\r\n  _gmtime_js: __gmtime_js,\r\n  /** @export */\r\n  _localtime_js: __localtime_js,\r\n  /** @export */\r\n  _mktime_js: __mktime_js,\r\n  /** @export */\r\n  _tzset_js: __tzset_js,\r\n  /** @export */\r\n  abort: _abort,\r\n  /** @export */\r\n  eglBindAPI: _eglBindAPI,\r\n  /** @export */\r\n  eglChooseConfig: _eglChooseConfig,\r\n  /** @export */\r\n  eglCreateContext: _eglCreateContext,\r\n  /** @export */\r\n  eglCreateWindowSurface: _eglCreateWindowSurface,\r\n  /** @export */\r\n  eglDestroyContext: _eglDestroyContext,\r\n  /** @export */\r\n  eglDestroySurface: _eglDestroySurface,\r\n  /** @export */\r\n  eglGetConfigAttrib: _eglGetConfigAttrib,\r\n  /** @export */\r\n  eglGetDisplay: _eglGetDisplay,\r\n  /** @export */\r\n  eglGetError: _eglGetError,\r\n  /** @export */\r\n  eglInitialize: _eglInitialize,\r\n  /** @export */\r\n  eglMakeCurrent: _eglMakeCurrent,\r\n  /** @export */\r\n  eglQueryString: _eglQueryString,\r\n  /** @export */\r\n  eglSwapBuffers: _eglSwapBuffers,\r\n  /** @export */\r\n  eglSwapInterval: _eglSwapInterval,\r\n  /** @export */\r\n  eglTerminate: _eglTerminate,\r\n  /** @export */\r\n  eglWaitGL: _eglWaitGL,\r\n  /** @export */\r\n  eglWaitNative: _eglWaitNative,\r\n  /** @export */\r\n  emscripten_asm_const_int: _emscripten_asm_const_int,\r\n  /** @export */\r\n  emscripten_asm_const_int_sync_on_main_thread: _emscripten_asm_const_int_sync_on_main_thread,\r\n  /** @export */\r\n  emscripten_date_now: _emscripten_date_now,\r\n  /** @export */\r\n  emscripten_enter_soft_fullscreen: _emscripten_enter_soft_fullscreen,\r\n  /** @export */\r\n  emscripten_exit_fullscreen: _emscripten_exit_fullscreen,\r\n  /** @export */\r\n  emscripten_exit_pointerlock: _emscripten_exit_pointerlock,\r\n  /** @export */\r\n  emscripten_exit_soft_fullscreen: _emscripten_exit_soft_fullscreen,\r\n  /** @export */\r\n  emscripten_get_device_pixel_ratio: _emscripten_get_device_pixel_ratio,\r\n  /** @export */\r\n  emscripten_get_element_css_size: _emscripten_get_element_css_size,\r\n  /** @export */\r\n  emscripten_get_gamepad_status: _emscripten_get_gamepad_status,\r\n  /** @export */\r\n  emscripten_get_now: _emscripten_get_now,\r\n  /** @export */\r\n  emscripten_get_num_gamepads: _emscripten_get_num_gamepads,\r\n  /** @export */\r\n  emscripten_get_screen_size: _emscripten_get_screen_size,\r\n  /** @export */\r\n  emscripten_glActiveTexture: _emscripten_glActiveTexture,\r\n  /** @export */\r\n  emscripten_glAttachShader: _emscripten_glAttachShader,\r\n  /** @export */\r\n  emscripten_glBeginQuery: _emscripten_glBeginQuery,\r\n  /** @export */\r\n  emscripten_glBeginQueryEXT: _emscripten_glBeginQueryEXT,\r\n  /** @export */\r\n  emscripten_glBeginTransformFeedback: _emscripten_glBeginTransformFeedback,\r\n  /** @export */\r\n  emscripten_glBindAttribLocation: _emscripten_glBindAttribLocation,\r\n  /** @export */\r\n  emscripten_glBindBuffer: _emscripten_glBindBuffer,\r\n  /** @export */\r\n  emscripten_glBindBufferBase: _emscripten_glBindBufferBase,\r\n  /** @export */\r\n  emscripten_glBindBufferRange: _emscripten_glBindBufferRange,\r\n  /** @export */\r\n  emscripten_glBindFramebuffer: _emscripten_glBindFramebuffer,\r\n  /** @export */\r\n  emscripten_glBindRenderbuffer: _emscripten_glBindRenderbuffer,\r\n  /** @export */\r\n  emscripten_glBindSampler: _emscripten_glBindSampler,\r\n  /** @export */\r\n  emscripten_glBindTexture: _emscripten_glBindTexture,\r\n  /** @export */\r\n  emscripten_glBindTransformFeedback: _emscripten_glBindTransformFeedback,\r\n  /** @export */\r\n  emscripten_glBindVertexArray: _emscripten_glBindVertexArray,\r\n  /** @export */\r\n  emscripten_glBindVertexArrayOES: _emscripten_glBindVertexArrayOES,\r\n  /** @export */\r\n  emscripten_glBlendColor: _emscripten_glBlendColor,\r\n  /** @export */\r\n  emscripten_glBlendEquation: _emscripten_glBlendEquation,\r\n  /** @export */\r\n  emscripten_glBlendEquationSeparate: _emscripten_glBlendEquationSeparate,\r\n  /** @export */\r\n  emscripten_glBlendFunc: _emscripten_glBlendFunc,\r\n  /** @export */\r\n  emscripten_glBlendFuncSeparate: _emscripten_glBlendFuncSeparate,\r\n  /** @export */\r\n  emscripten_glBlitFramebuffer: _emscripten_glBlitFramebuffer,\r\n  /** @export */\r\n  emscripten_glBufferData: _emscripten_glBufferData,\r\n  /** @export */\r\n  emscripten_glBufferSubData: _emscripten_glBufferSubData,\r\n  /** @export */\r\n  emscripten_glCheckFramebufferStatus: _emscripten_glCheckFramebufferStatus,\r\n  /** @export */\r\n  emscripten_glClear: _emscripten_glClear,\r\n  /** @export */\r\n  emscripten_glClearBufferfi: _emscripten_glClearBufferfi,\r\n  /** @export */\r\n  emscripten_glClearBufferfv: _emscripten_glClearBufferfv,\r\n  /** @export */\r\n  emscripten_glClearBufferiv: _emscripten_glClearBufferiv,\r\n  /** @export */\r\n  emscripten_glClearBufferuiv: _emscripten_glClearBufferuiv,\r\n  /** @export */\r\n  emscripten_glClearColor: _emscripten_glClearColor,\r\n  /** @export */\r\n  emscripten_glClearDepthf: _emscripten_glClearDepthf,\r\n  /** @export */\r\n  emscripten_glClearStencil: _emscripten_glClearStencil,\r\n  /** @export */\r\n  emscripten_glClientWaitSync: _emscripten_glClientWaitSync,\r\n  /** @export */\r\n  emscripten_glColorMask: _emscripten_glColorMask,\r\n  /** @export */\r\n  emscripten_glCompileShader: _emscripten_glCompileShader,\r\n  /** @export */\r\n  emscripten_glCompressedTexImage2D: _emscripten_glCompressedTexImage2D,\r\n  /** @export */\r\n  emscripten_glCompressedTexImage3D: _emscripten_glCompressedTexImage3D,\r\n  /** @export */\r\n  emscripten_glCompressedTexSubImage2D: _emscripten_glCompressedTexSubImage2D,\r\n  /** @export */\r\n  emscripten_glCompressedTexSubImage3D: _emscripten_glCompressedTexSubImage3D,\r\n  /** @export */\r\n  emscripten_glCopyBufferSubData: _emscripten_glCopyBufferSubData,\r\n  /** @export */\r\n  emscripten_glCopyTexImage2D: _emscripten_glCopyTexImage2D,\r\n  /** @export */\r\n  emscripten_glCopyTexSubImage2D: _emscripten_glCopyTexSubImage2D,\r\n  /** @export */\r\n  emscripten_glCopyTexSubImage3D: _emscripten_glCopyTexSubImage3D,\r\n  /** @export */\r\n  emscripten_glCreateProgram: _emscripten_glCreateProgram,\r\n  /** @export */\r\n  emscripten_glCreateShader: _emscripten_glCreateShader,\r\n  /** @export */\r\n  emscripten_glCullFace: _emscripten_glCullFace,\r\n  /** @export */\r\n  emscripten_glDeleteBuffers: _emscripten_glDeleteBuffers,\r\n  /** @export */\r\n  emscripten_glDeleteFramebuffers: _emscripten_glDeleteFramebuffers,\r\n  /** @export */\r\n  emscripten_glDeleteProgram: _emscripten_glDeleteProgram,\r\n  /** @export */\r\n  emscripten_glDeleteQueries: _emscripten_glDeleteQueries,\r\n  /** @export */\r\n  emscripten_glDeleteQueriesEXT: _emscripten_glDeleteQueriesEXT,\r\n  /** @export */\r\n  emscripten_glDeleteRenderbuffers: _emscripten_glDeleteRenderbuffers,\r\n  /** @export */\r\n  emscripten_glDeleteSamplers: _emscripten_glDeleteSamplers,\r\n  /** @export */\r\n  emscripten_glDeleteShader: _emscripten_glDeleteShader,\r\n  /** @export */\r\n  emscripten_glDeleteSync: _emscripten_glDeleteSync,\r\n  /** @export */\r\n  emscripten_glDeleteTextures: _emscripten_glDeleteTextures,\r\n  /** @export */\r\n  emscripten_glDeleteTransformFeedbacks: _emscripten_glDeleteTransformFeedbacks,\r\n  /** @export */\r\n  emscripten_glDeleteVertexArrays: _emscripten_glDeleteVertexArrays,\r\n  /** @export */\r\n  emscripten_glDeleteVertexArraysOES: _emscripten_glDeleteVertexArraysOES,\r\n  /** @export */\r\n  emscripten_glDepthFunc: _emscripten_glDepthFunc,\r\n  /** @export */\r\n  emscripten_glDepthMask: _emscripten_glDepthMask,\r\n  /** @export */\r\n  emscripten_glDepthRangef: _emscripten_glDepthRangef,\r\n  /** @export */\r\n  emscripten_glDetachShader: _emscripten_glDetachShader,\r\n  /** @export */\r\n  emscripten_glDisable: _emscripten_glDisable,\r\n  /** @export */\r\n  emscripten_glDisableVertexAttribArray: _emscripten_glDisableVertexAttribArray,\r\n  /** @export */\r\n  emscripten_glDrawArrays: _emscripten_glDrawArrays,\r\n  /** @export */\r\n  emscripten_glDrawArraysInstanced: _emscripten_glDrawArraysInstanced,\r\n  /** @export */\r\n  emscripten_glDrawArraysInstancedANGLE: _emscripten_glDrawArraysInstancedANGLE,\r\n  /** @export */\r\n  emscripten_glDrawArraysInstancedARB: _emscripten_glDrawArraysInstancedARB,\r\n  /** @export */\r\n  emscripten_glDrawArraysInstancedEXT: _emscripten_glDrawArraysInstancedEXT,\r\n  /** @export */\r\n  emscripten_glDrawArraysInstancedNV: _emscripten_glDrawArraysInstancedNV,\r\n  /** @export */\r\n  emscripten_glDrawBuffers: _emscripten_glDrawBuffers,\r\n  /** @export */\r\n  emscripten_glDrawBuffersEXT: _emscripten_glDrawBuffersEXT,\r\n  /** @export */\r\n  emscripten_glDrawBuffersWEBGL: _emscripten_glDrawBuffersWEBGL,\r\n  /** @export */\r\n  emscripten_glDrawElements: _emscripten_glDrawElements,\r\n  /** @export */\r\n  emscripten_glDrawElementsInstanced: _emscripten_glDrawElementsInstanced,\r\n  /** @export */\r\n  emscripten_glDrawElementsInstancedANGLE: _emscripten_glDrawElementsInstancedANGLE,\r\n  /** @export */\r\n  emscripten_glDrawElementsInstancedARB: _emscripten_glDrawElementsInstancedARB,\r\n  /** @export */\r\n  emscripten_glDrawElementsInstancedEXT: _emscripten_glDrawElementsInstancedEXT,\r\n  /** @export */\r\n  emscripten_glDrawElementsInstancedNV: _emscripten_glDrawElementsInstancedNV,\r\n  /** @export */\r\n  emscripten_glDrawRangeElements: _emscripten_glDrawRangeElements,\r\n  /** @export */\r\n  emscripten_glEnable: _emscripten_glEnable,\r\n  /** @export */\r\n  emscripten_glEnableVertexAttribArray: _emscripten_glEnableVertexAttribArray,\r\n  /** @export */\r\n  emscripten_glEndQuery: _emscripten_glEndQuery,\r\n  /** @export */\r\n  emscripten_glEndQueryEXT: _emscripten_glEndQueryEXT,\r\n  /** @export */\r\n  emscripten_glEndTransformFeedback: _emscripten_glEndTransformFeedback,\r\n  /** @export */\r\n  emscripten_glFenceSync: _emscripten_glFenceSync,\r\n  /** @export */\r\n  emscripten_glFinish: _emscripten_glFinish,\r\n  /** @export */\r\n  emscripten_glFlush: _emscripten_glFlush,\r\n  /** @export */\r\n  emscripten_glFramebufferRenderbuffer: _emscripten_glFramebufferRenderbuffer,\r\n  /** @export */\r\n  emscripten_glFramebufferTexture2D: _emscripten_glFramebufferTexture2D,\r\n  /** @export */\r\n  emscripten_glFramebufferTextureLayer: _emscripten_glFramebufferTextureLayer,\r\n  /** @export */\r\n  emscripten_glFrontFace: _emscripten_glFrontFace,\r\n  /** @export */\r\n  emscripten_glGenBuffers: _emscripten_glGenBuffers,\r\n  /** @export */\r\n  emscripten_glGenFramebuffers: _emscripten_glGenFramebuffers,\r\n  /** @export */\r\n  emscripten_glGenQueries: _emscripten_glGenQueries,\r\n  /** @export */\r\n  emscripten_glGenQueriesEXT: _emscripten_glGenQueriesEXT,\r\n  /** @export */\r\n  emscripten_glGenRenderbuffers: _emscripten_glGenRenderbuffers,\r\n  /** @export */\r\n  emscripten_glGenSamplers: _emscripten_glGenSamplers,\r\n  /** @export */\r\n  emscripten_glGenTextures: _emscripten_glGenTextures,\r\n  /** @export */\r\n  emscripten_glGenTransformFeedbacks: _emscripten_glGenTransformFeedbacks,\r\n  /** @export */\r\n  emscripten_glGenVertexArrays: _emscripten_glGenVertexArrays,\r\n  /** @export */\r\n  emscripten_glGenVertexArraysOES: _emscripten_glGenVertexArraysOES,\r\n  /** @export */\r\n  emscripten_glGenerateMipmap: _emscripten_glGenerateMipmap,\r\n  /** @export */\r\n  emscripten_glGetActiveAttrib: _emscripten_glGetActiveAttrib,\r\n  /** @export */\r\n  emscripten_glGetActiveUniform: _emscripten_glGetActiveUniform,\r\n  /** @export */\r\n  emscripten_glGetActiveUniformBlockName: _emscripten_glGetActiveUniformBlockName,\r\n  /** @export */\r\n  emscripten_glGetActiveUniformBlockiv: _emscripten_glGetActiveUniformBlockiv,\r\n  /** @export */\r\n  emscripten_glGetActiveUniformsiv: _emscripten_glGetActiveUniformsiv,\r\n  /** @export */\r\n  emscripten_glGetAttachedShaders: _emscripten_glGetAttachedShaders,\r\n  /** @export */\r\n  emscripten_glGetAttribLocation: _emscripten_glGetAttribLocation,\r\n  /** @export */\r\n  emscripten_glGetBooleanv: _emscripten_glGetBooleanv,\r\n  /** @export */\r\n  emscripten_glGetBufferParameteri64v: _emscripten_glGetBufferParameteri64v,\r\n  /** @export */\r\n  emscripten_glGetBufferParameteriv: _emscripten_glGetBufferParameteriv,\r\n  /** @export */\r\n  emscripten_glGetError: _emscripten_glGetError,\r\n  /** @export */\r\n  emscripten_glGetFloatv: _emscripten_glGetFloatv,\r\n  /** @export */\r\n  emscripten_glGetFragDataLocation: _emscripten_glGetFragDataLocation,\r\n  /** @export */\r\n  emscripten_glGetFramebufferAttachmentParameteriv: _emscripten_glGetFramebufferAttachmentParameteriv,\r\n  /** @export */\r\n  emscripten_glGetInteger64i_v: _emscripten_glGetInteger64i_v,\r\n  /** @export */\r\n  emscripten_glGetInteger64v: _emscripten_glGetInteger64v,\r\n  /** @export */\r\n  emscripten_glGetIntegeri_v: _emscripten_glGetIntegeri_v,\r\n  /** @export */\r\n  emscripten_glGetIntegerv: _emscripten_glGetIntegerv,\r\n  /** @export */\r\n  emscripten_glGetInternalformativ: _emscripten_glGetInternalformativ,\r\n  /** @export */\r\n  emscripten_glGetProgramBinary: _emscripten_glGetProgramBinary,\r\n  /** @export */\r\n  emscripten_glGetProgramInfoLog: _emscripten_glGetProgramInfoLog,\r\n  /** @export */\r\n  emscripten_glGetProgramiv: _emscripten_glGetProgramiv,\r\n  /** @export */\r\n  emscripten_glGetQueryObjecti64vEXT: _emscripten_glGetQueryObjecti64vEXT,\r\n  /** @export */\r\n  emscripten_glGetQueryObjectivEXT: _emscripten_glGetQueryObjectivEXT,\r\n  /** @export */\r\n  emscripten_glGetQueryObjectui64vEXT: _emscripten_glGetQueryObjectui64vEXT,\r\n  /** @export */\r\n  emscripten_glGetQueryObjectuiv: _emscripten_glGetQueryObjectuiv,\r\n  /** @export */\r\n  emscripten_glGetQueryObjectuivEXT: _emscripten_glGetQueryObjectuivEXT,\r\n  /** @export */\r\n  emscripten_glGetQueryiv: _emscripten_glGetQueryiv,\r\n  /** @export */\r\n  emscripten_glGetQueryivEXT: _emscripten_glGetQueryivEXT,\r\n  /** @export */\r\n  emscripten_glGetRenderbufferParameteriv: _emscripten_glGetRenderbufferParameteriv,\r\n  /** @export */\r\n  emscripten_glGetSamplerParameterfv: _emscripten_glGetSamplerParameterfv,\r\n  /** @export */\r\n  emscripten_glGetSamplerParameteriv: _emscripten_glGetSamplerParameteriv,\r\n  /** @export */\r\n  emscripten_glGetShaderInfoLog: _emscripten_glGetShaderInfoLog,\r\n  /** @export */\r\n  emscripten_glGetShaderPrecisionFormat: _emscripten_glGetShaderPrecisionFormat,\r\n  /** @export */\r\n  emscripten_glGetShaderSource: _emscripten_glGetShaderSource,\r\n  /** @export */\r\n  emscripten_glGetShaderiv: _emscripten_glGetShaderiv,\r\n  /** @export */\r\n  emscripten_glGetString: _emscripten_glGetString,\r\n  /** @export */\r\n  emscripten_glGetStringi: _emscripten_glGetStringi,\r\n  /** @export */\r\n  emscripten_glGetSynciv: _emscripten_glGetSynciv,\r\n  /** @export */\r\n  emscripten_glGetTexParameterfv: _emscripten_glGetTexParameterfv,\r\n  /** @export */\r\n  emscripten_glGetTexParameteriv: _emscripten_glGetTexParameteriv,\r\n  /** @export */\r\n  emscripten_glGetTransformFeedbackVarying: _emscripten_glGetTransformFeedbackVarying,\r\n  /** @export */\r\n  emscripten_glGetUniformBlockIndex: _emscripten_glGetUniformBlockIndex,\r\n  /** @export */\r\n  emscripten_glGetUniformIndices: _emscripten_glGetUniformIndices,\r\n  /** @export */\r\n  emscripten_glGetUniformLocation: _emscripten_glGetUniformLocation,\r\n  /** @export */\r\n  emscripten_glGetUniformfv: _emscripten_glGetUniformfv,\r\n  /** @export */\r\n  emscripten_glGetUniformiv: _emscripten_glGetUniformiv,\r\n  /** @export */\r\n  emscripten_glGetUniformuiv: _emscripten_glGetUniformuiv,\r\n  /** @export */\r\n  emscripten_glGetVertexAttribIiv: _emscripten_glGetVertexAttribIiv,\r\n  /** @export */\r\n  emscripten_glGetVertexAttribIuiv: _emscripten_glGetVertexAttribIuiv,\r\n  /** @export */\r\n  emscripten_glGetVertexAttribPointerv: _emscripten_glGetVertexAttribPointerv,\r\n  /** @export */\r\n  emscripten_glGetVertexAttribfv: _emscripten_glGetVertexAttribfv,\r\n  /** @export */\r\n  emscripten_glGetVertexAttribiv: _emscripten_glGetVertexAttribiv,\r\n  /** @export */\r\n  emscripten_glHint: _emscripten_glHint,\r\n  /** @export */\r\n  emscripten_glInvalidateFramebuffer: _emscripten_glInvalidateFramebuffer,\r\n  /** @export */\r\n  emscripten_glInvalidateSubFramebuffer: _emscripten_glInvalidateSubFramebuffer,\r\n  /** @export */\r\n  emscripten_glIsBuffer: _emscripten_glIsBuffer,\r\n  /** @export */\r\n  emscripten_glIsEnabled: _emscripten_glIsEnabled,\r\n  /** @export */\r\n  emscripten_glIsFramebuffer: _emscripten_glIsFramebuffer,\r\n  /** @export */\r\n  emscripten_glIsProgram: _emscripten_glIsProgram,\r\n  /** @export */\r\n  emscripten_glIsQuery: _emscripten_glIsQuery,\r\n  /** @export */\r\n  emscripten_glIsQueryEXT: _emscripten_glIsQueryEXT,\r\n  /** @export */\r\n  emscripten_glIsRenderbuffer: _emscripten_glIsRenderbuffer,\r\n  /** @export */\r\n  emscripten_glIsSampler: _emscripten_glIsSampler,\r\n  /** @export */\r\n  emscripten_glIsShader: _emscripten_glIsShader,\r\n  /** @export */\r\n  emscripten_glIsSync: _emscripten_glIsSync,\r\n  /** @export */\r\n  emscripten_glIsTexture: _emscripten_glIsTexture,\r\n  /** @export */\r\n  emscripten_glIsTransformFeedback: _emscripten_glIsTransformFeedback,\r\n  /** @export */\r\n  emscripten_glIsVertexArray: _emscripten_glIsVertexArray,\r\n  /** @export */\r\n  emscripten_glIsVertexArrayOES: _emscripten_glIsVertexArrayOES,\r\n  /** @export */\r\n  emscripten_glLineWidth: _emscripten_glLineWidth,\r\n  /** @export */\r\n  emscripten_glLinkProgram: _emscripten_glLinkProgram,\r\n  /** @export */\r\n  emscripten_glPauseTransformFeedback: _emscripten_glPauseTransformFeedback,\r\n  /** @export */\r\n  emscripten_glPixelStorei: _emscripten_glPixelStorei,\r\n  /** @export */\r\n  emscripten_glPolygonOffset: _emscripten_glPolygonOffset,\r\n  /** @export */\r\n  emscripten_glProgramBinary: _emscripten_glProgramBinary,\r\n  /** @export */\r\n  emscripten_glProgramParameteri: _emscripten_glProgramParameteri,\r\n  /** @export */\r\n  emscripten_glQueryCounterEXT: _emscripten_glQueryCounterEXT,\r\n  /** @export */\r\n  emscripten_glReadBuffer: _emscripten_glReadBuffer,\r\n  /** @export */\r\n  emscripten_glReadPixels: _emscripten_glReadPixels,\r\n  /** @export */\r\n  emscripten_glReleaseShaderCompiler: _emscripten_glReleaseShaderCompiler,\r\n  /** @export */\r\n  emscripten_glRenderbufferStorage: _emscripten_glRenderbufferStorage,\r\n  /** @export */\r\n  emscripten_glRenderbufferStorageMultisample: _emscripten_glRenderbufferStorageMultisample,\r\n  /** @export */\r\n  emscripten_glResumeTransformFeedback: _emscripten_glResumeTransformFeedback,\r\n  /** @export */\r\n  emscripten_glSampleCoverage: _emscripten_glSampleCoverage,\r\n  /** @export */\r\n  emscripten_glSamplerParameterf: _emscripten_glSamplerParameterf,\r\n  /** @export */\r\n  emscripten_glSamplerParameterfv: _emscripten_glSamplerParameterfv,\r\n  /** @export */\r\n  emscripten_glSamplerParameteri: _emscripten_glSamplerParameteri,\r\n  /** @export */\r\n  emscripten_glSamplerParameteriv: _emscripten_glSamplerParameteriv,\r\n  /** @export */\r\n  emscripten_glScissor: _emscripten_glScissor,\r\n  /** @export */\r\n  emscripten_glShaderBinary: _emscripten_glShaderBinary,\r\n  /** @export */\r\n  emscripten_glShaderSource: _emscripten_glShaderSource,\r\n  /** @export */\r\n  emscripten_glStencilFunc: _emscripten_glStencilFunc,\r\n  /** @export */\r\n  emscripten_glStencilFuncSeparate: _emscripten_glStencilFuncSeparate,\r\n  /** @export */\r\n  emscripten_glStencilMask: _emscripten_glStencilMask,\r\n  /** @export */\r\n  emscripten_glStencilMaskSeparate: _emscripten_glStencilMaskSeparate,\r\n  /** @export */\r\n  emscripten_glStencilOp: _emscripten_glStencilOp,\r\n  /** @export */\r\n  emscripten_glStencilOpSeparate: _emscripten_glStencilOpSeparate,\r\n  /** @export */\r\n  emscripten_glTexImage2D: _emscripten_glTexImage2D,\r\n  /** @export */\r\n  emscripten_glTexImage3D: _emscripten_glTexImage3D,\r\n  /** @export */\r\n  emscripten_glTexParameterf: _emscripten_glTexParameterf,\r\n  /** @export */\r\n  emscripten_glTexParameterfv: _emscripten_glTexParameterfv,\r\n  /** @export */\r\n  emscripten_glTexParameteri: _emscripten_glTexParameteri,\r\n  /** @export */\r\n  emscripten_glTexParameteriv: _emscripten_glTexParameteriv,\r\n  /** @export */\r\n  emscripten_glTexStorage2D: _emscripten_glTexStorage2D,\r\n  /** @export */\r\n  emscripten_glTexStorage3D: _emscripten_glTexStorage3D,\r\n  /** @export */\r\n  emscripten_glTexSubImage2D: _emscripten_glTexSubImage2D,\r\n  /** @export */\r\n  emscripten_glTexSubImage3D: _emscripten_glTexSubImage3D,\r\n  /** @export */\r\n  emscripten_glTransformFeedbackVaryings: _emscripten_glTransformFeedbackVaryings,\r\n  /** @export */\r\n  emscripten_glUniform1f: _emscripten_glUniform1f,\r\n  /** @export */\r\n  emscripten_glUniform1fv: _emscripten_glUniform1fv,\r\n  /** @export */\r\n  emscripten_glUniform1i: _emscripten_glUniform1i,\r\n  /** @export */\r\n  emscripten_glUniform1iv: _emscripten_glUniform1iv,\r\n  /** @export */\r\n  emscripten_glUniform1ui: _emscripten_glUniform1ui,\r\n  /** @export */\r\n  emscripten_glUniform1uiv: _emscripten_glUniform1uiv,\r\n  /** @export */\r\n  emscripten_glUniform2f: _emscripten_glUniform2f,\r\n  /** @export */\r\n  emscripten_glUniform2fv: _emscripten_glUniform2fv,\r\n  /** @export */\r\n  emscripten_glUniform2i: _emscripten_glUniform2i,\r\n  /** @export */\r\n  emscripten_glUniform2iv: _emscripten_glUniform2iv,\r\n  /** @export */\r\n  emscripten_glUniform2ui: _emscripten_glUniform2ui,\r\n  /** @export */\r\n  emscripten_glUniform2uiv: _emscripten_glUniform2uiv,\r\n  /** @export */\r\n  emscripten_glUniform3f: _emscripten_glUniform3f,\r\n  /** @export */\r\n  emscripten_glUniform3fv: _emscripten_glUniform3fv,\r\n  /** @export */\r\n  emscripten_glUniform3i: _emscripten_glUniform3i,\r\n  /** @export */\r\n  emscripten_glUniform3iv: _emscripten_glUniform3iv,\r\n  /** @export */\r\n  emscripten_glUniform3ui: _emscripten_glUniform3ui,\r\n  /** @export */\r\n  emscripten_glUniform3uiv: _emscripten_glUniform3uiv,\r\n  /** @export */\r\n  emscripten_glUniform4f: _emscripten_glUniform4f,\r\n  /** @export */\r\n  emscripten_glUniform4fv: _emscripten_glUniform4fv,\r\n  /** @export */\r\n  emscripten_glUniform4i: _emscripten_glUniform4i,\r\n  /** @export */\r\n  emscripten_glUniform4iv: _emscripten_glUniform4iv,\r\n  /** @export */\r\n  emscripten_glUniform4ui: _emscripten_glUniform4ui,\r\n  /** @export */\r\n  emscripten_glUniform4uiv: _emscripten_glUniform4uiv,\r\n  /** @export */\r\n  emscripten_glUniformBlockBinding: _emscripten_glUniformBlockBinding,\r\n  /** @export */\r\n  emscripten_glUniformMatrix2fv: _emscripten_glUniformMatrix2fv,\r\n  /** @export */\r\n  emscripten_glUniformMatrix2x3fv: _emscripten_glUniformMatrix2x3fv,\r\n  /** @export */\r\n  emscripten_glUniformMatrix2x4fv: _emscripten_glUniformMatrix2x4fv,\r\n  /** @export */\r\n  emscripten_glUniformMatrix3fv: _emscripten_glUniformMatrix3fv,\r\n  /** @export */\r\n  emscripten_glUniformMatrix3x2fv: _emscripten_glUniformMatrix3x2fv,\r\n  /** @export */\r\n  emscripten_glUniformMatrix3x4fv: _emscripten_glUniformMatrix3x4fv,\r\n  /** @export */\r\n  emscripten_glUniformMatrix4fv: _emscripten_glUniformMatrix4fv,\r\n  /** @export */\r\n  emscripten_glUniformMatrix4x2fv: _emscripten_glUniformMatrix4x2fv,\r\n  /** @export */\r\n  emscripten_glUniformMatrix4x3fv: _emscripten_glUniformMatrix4x3fv,\r\n  /** @export */\r\n  emscripten_glUseProgram: _emscripten_glUseProgram,\r\n  /** @export */\r\n  emscripten_glValidateProgram: _emscripten_glValidateProgram,\r\n  /** @export */\r\n  emscripten_glVertexAttrib1f: _emscripten_glVertexAttrib1f,\r\n  /** @export */\r\n  emscripten_glVertexAttrib1fv: _emscripten_glVertexAttrib1fv,\r\n  /** @export */\r\n  emscripten_glVertexAttrib2f: _emscripten_glVertexAttrib2f,\r\n  /** @export */\r\n  emscripten_glVertexAttrib2fv: _emscripten_glVertexAttrib2fv,\r\n  /** @export */\r\n  emscripten_glVertexAttrib3f: _emscripten_glVertexAttrib3f,\r\n  /** @export */\r\n  emscripten_glVertexAttrib3fv: _emscripten_glVertexAttrib3fv,\r\n  /** @export */\r\n  emscripten_glVertexAttrib4f: _emscripten_glVertexAttrib4f,\r\n  /** @export */\r\n  emscripten_glVertexAttrib4fv: _emscripten_glVertexAttrib4fv,\r\n  /** @export */\r\n  emscripten_glVertexAttribDivisor: _emscripten_glVertexAttribDivisor,\r\n  /** @export */\r\n  emscripten_glVertexAttribDivisorANGLE: _emscripten_glVertexAttribDivisorANGLE,\r\n  /** @export */\r\n  emscripten_glVertexAttribDivisorARB: _emscripten_glVertexAttribDivisorARB,\r\n  /** @export */\r\n  emscripten_glVertexAttribDivisorEXT: _emscripten_glVertexAttribDivisorEXT,\r\n  /** @export */\r\n  emscripten_glVertexAttribDivisorNV: _emscripten_glVertexAttribDivisorNV,\r\n  /** @export */\r\n  emscripten_glVertexAttribI4i: _emscripten_glVertexAttribI4i,\r\n  /** @export */\r\n  emscripten_glVertexAttribI4iv: _emscripten_glVertexAttribI4iv,\r\n  /** @export */\r\n  emscripten_glVertexAttribI4ui: _emscripten_glVertexAttribI4ui,\r\n  /** @export */\r\n  emscripten_glVertexAttribI4uiv: _emscripten_glVertexAttribI4uiv,\r\n  /** @export */\r\n  emscripten_glVertexAttribIPointer: _emscripten_glVertexAttribIPointer,\r\n  /** @export */\r\n  emscripten_glVertexAttribPointer: _emscripten_glVertexAttribPointer,\r\n  /** @export */\r\n  emscripten_glViewport: _emscripten_glViewport,\r\n  /** @export */\r\n  emscripten_glWaitSync: _emscripten_glWaitSync,\r\n  /** @export */\r\n  emscripten_has_asyncify: _emscripten_has_asyncify,\r\n  /** @export */\r\n  emscripten_memcpy_js: _emscripten_memcpy_js,\r\n  /** @export */\r\n  emscripten_request_fullscreen_strategy: _emscripten_request_fullscreen_strategy,\r\n  /** @export */\r\n  emscripten_request_pointerlock: _emscripten_request_pointerlock,\r\n  /** @export */\r\n  emscripten_resize_heap: _emscripten_resize_heap,\r\n  /** @export */\r\n  emscripten_sample_gamepad_data: _emscripten_sample_gamepad_data,\r\n  /** @export */\r\n  emscripten_set_beforeunload_callback_on_thread: _emscripten_set_beforeunload_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_blur_callback_on_thread: _emscripten_set_blur_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_canvas_element_size: _emscripten_set_canvas_element_size,\r\n  /** @export */\r\n  emscripten_set_element_css_size: _emscripten_set_element_css_size,\r\n  /** @export */\r\n  emscripten_set_focus_callback_on_thread: _emscripten_set_focus_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_fullscreenchange_callback_on_thread: _emscripten_set_fullscreenchange_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_gamepadconnected_callback_on_thread: _emscripten_set_gamepadconnected_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_gamepaddisconnected_callback_on_thread: _emscripten_set_gamepaddisconnected_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_keydown_callback_on_thread: _emscripten_set_keydown_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_keypress_callback_on_thread: _emscripten_set_keypress_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_keyup_callback_on_thread: _emscripten_set_keyup_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_main_loop: _emscripten_set_main_loop,\r\n  /** @export */\r\n  emscripten_set_mousedown_callback_on_thread: _emscripten_set_mousedown_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_mouseenter_callback_on_thread: _emscripten_set_mouseenter_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_mouseleave_callback_on_thread: _emscripten_set_mouseleave_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_mousemove_callback_on_thread: _emscripten_set_mousemove_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_mouseup_callback_on_thread: _emscripten_set_mouseup_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_pointerlockchange_callback_on_thread: _emscripten_set_pointerlockchange_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_resize_callback_on_thread: _emscripten_set_resize_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_touchcancel_callback_on_thread: _emscripten_set_touchcancel_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_touchend_callback_on_thread: _emscripten_set_touchend_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_touchmove_callback_on_thread: _emscripten_set_touchmove_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_touchstart_callback_on_thread: _emscripten_set_touchstart_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_visibilitychange_callback_on_thread: _emscripten_set_visibilitychange_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_wheel_callback_on_thread: _emscripten_set_wheel_callback_on_thread,\r\n  /** @export */\r\n  emscripten_set_window_title: _emscripten_set_window_title,\r\n  /** @export */\r\n  emscripten_sleep: _emscripten_sleep,\r\n  /** @export */\r\n  environ_get: _environ_get,\r\n  /** @export */\r\n  environ_sizes_get: _environ_sizes_get,\r\n  /** @export */\r\n  exit: _exit,\r\n  /** @export */\r\n  fd_close: _fd_close,\r\n  /** @export */\r\n  fd_read: _fd_read,\r\n  /** @export */\r\n  fd_seek: _fd_seek,\r\n  /** @export */\r\n  fd_write: _fd_write,\r\n  /** @export */\r\n  glGetFloatv: _glGetFloatv,\r\n  /** @export */\r\n  invoke_vii: invoke_vii,\r\n  /** @export */\r\n  strftime: _strftime,\r\n  /** @export */\r\n  system: _system\r\n};\r\nvar wasmExports = createWasm();\r\nvar ___wasm_call_ctors = () => (___wasm_call_ctors = wasmExports['__wasm_call_ctors'])();\r\nvar _malloc = (a0) => (_malloc = wasmExports['malloc'])(a0);\r\nvar _free = (a0) => (_free = wasmExports['free'])(a0);\r\nvar ___errno_location = () => (___errno_location = wasmExports['__errno_location'])();\r\nvar _WebSetFullscreen = Module['_WebSetFullscreen'] = (a0) => (_WebSetFullscreen = Module['_WebSetFullscreen'] = wasmExports['WebSetFullscreen'])(a0);\r\nvar _WebOpenGameMenu = Module['_WebOpenGameMenu'] = (a0) => (_WebOpenGameMenu = Module['_WebOpenGameMenu'] = wasmExports['WebOpenGameMenu'])(a0);\r\nvar _WebSyncScreenSize = Module['_WebSyncScreenSize'] = () => (_WebSyncScreenSize = Module['_WebSyncScreenSize'] = wasmExports['WebSyncScreenSize'])();\r\nvar _WebMain = Module['_WebMain'] = (a0, a1) => (_WebMain = Module['_WebMain'] = wasmExports['WebMain'])(a0, a1);\r\nvar _main = Module['_main'] = (a0, a1) => (_main = Module['_main'] = wasmExports['__main_argc_argv'])(a0, a1);\r\nvar setTempRet0 = (a0) => (setTempRet0 = wasmExports['setTempRet0'])(a0);\r\nvar _setThrew = (a0, a1) => (_setThrew = wasmExports['setThrew'])(a0, a1);\r\nvar stackSave = () => (stackSave = wasmExports['stackSave'])();\r\nvar stackRestore = (a0) => (stackRestore = wasmExports['stackRestore'])(a0);\r\nvar stackAlloc = (a0) => (stackAlloc = wasmExports['stackAlloc'])(a0);\r\nvar dynCall_vii = Module['dynCall_vii'] = (a0, a1, a2) => (dynCall_vii = Module['dynCall_vii'] = wasmExports['dynCall_vii'])(a0, a1, a2);\r\nvar dynCall_viii = Module['dynCall_viii'] = (a0, a1, a2, a3) => (dynCall_viii = Module['dynCall_viii'] = wasmExports['dynCall_viii'])(a0, a1, a2, a3);\r\nvar dynCall_vi = Module['dynCall_vi'] = (a0, a1) => (dynCall_vi = Module['dynCall_vi'] = wasmExports['dynCall_vi'])(a0, a1);\r\nvar dynCall_iii = Module['dynCall_iii'] = (a0, a1, a2) => (dynCall_iii = Module['dynCall_iii'] = wasmExports['dynCall_iii'])(a0, a1, a2);\r\nvar dynCall_iiiiii = Module['dynCall_iiiiii'] = (a0, a1, a2, a3, a4, a5) => (dynCall_iiiiii = Module['dynCall_iiiiii'] = wasmExports['dynCall_iiiiii'])(a0, a1, a2, a3, a4, a5);\r\nvar dynCall_viiiiii = Module['dynCall_viiiiii'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viiiiii = Module['dynCall_viiiiii'] = wasmExports['dynCall_viiiiii'])(a0, a1, a2, a3, a4, a5, a6);\r\nvar dynCall_v = Module['dynCall_v'] = (a0) => (dynCall_v = Module['dynCall_v'] = wasmExports['dynCall_v'])(a0);\r\nvar dynCall_ii = Module['dynCall_ii'] = (a0, a1) => (dynCall_ii = Module['dynCall_ii'] = wasmExports['dynCall_ii'])(a0, a1);\r\nvar dynCall_viifff = Module['dynCall_viifff'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viifff = Module['dynCall_viifff'] = wasmExports['dynCall_viifff'])(a0, a1, a2, a3, a4, a5);\r\nvar dynCall_viifffii = Module['dynCall_viifffii'] = (a0, a1, a2, a3, a4, a5, a6, a7) => (dynCall_viifffii = Module['dynCall_viifffii'] = wasmExports['dynCall_viifffii'])(a0, a1, a2, a3, a4, a5, a6, a7);\r\nvar dynCall_viiiifiiiii = Module['dynCall_viiiifiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) => (dynCall_viiiifiiiii = Module['dynCall_viiiifiiiii'] = wasmExports['dynCall_viiiifiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\r\nvar dynCall_viiiiiii = Module['dynCall_viiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7) => (dynCall_viiiiiii = Module['dynCall_viiiiiii'] = wasmExports['dynCall_viiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7);\r\nvar dynCall_iiii = Module['dynCall_iiii'] = (a0, a1, a2, a3) => (dynCall_iiii = Module['dynCall_iiii'] = wasmExports['dynCall_iiii'])(a0, a1, a2, a3);\r\nvar dynCall_iiiii = Module['dynCall_iiiii'] = (a0, a1, a2, a3, a4) => (dynCall_iiiii = Module['dynCall_iiiii'] = wasmExports['dynCall_iiiii'])(a0, a1, a2, a3, a4);\r\nvar dynCall_iiji = Module['dynCall_iiji'] = (a0, a1, a2, a3, a4) => (dynCall_iiji = Module['dynCall_iiji'] = wasmExports['dynCall_iiji'])(a0, a1, a2, a3, a4);\r\nvar dynCall_iiiiiiiii = Module['dynCall_iiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_iiiiiiiii = Module['dynCall_iiiiiiiii'] = wasmExports['dynCall_iiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\r\nvar dynCall_viiii = Module['dynCall_viiii'] = (a0, a1, a2, a3, a4) => (dynCall_viiii = Module['dynCall_viiii'] = wasmExports['dynCall_viiii'])(a0, a1, a2, a3, a4);\r\nvar dynCall_i = Module['dynCall_i'] = (a0) => (dynCall_i = Module['dynCall_i'] = wasmExports['dynCall_i'])(a0);\r\nvar dynCall_viiffi = Module['dynCall_viiffi'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viiffi = Module['dynCall_viiffi'] = wasmExports['dynCall_viiffi'])(a0, a1, a2, a3, a4, a5);\r\nvar dynCall_iiid = Module['dynCall_iiid'] = (a0, a1, a2, a3) => (dynCall_iiid = Module['dynCall_iiid'] = wasmExports['dynCall_iiid'])(a0, a1, a2, a3);\r\nvar dynCall_iijii = Module['dynCall_iijii'] = (a0, a1, a2, a3, a4, a5) => (dynCall_iijii = Module['dynCall_iijii'] = wasmExports['dynCall_iijii'])(a0, a1, a2, a3, a4, a5);\r\nvar dynCall_diii = Module['dynCall_diii'] = (a0, a1, a2, a3) => (dynCall_diii = Module['dynCall_diii'] = wasmExports['dynCall_diii'])(a0, a1, a2, a3);\r\nvar dynCall_viiid = Module['dynCall_viiid'] = (a0, a1, a2, a3, a4) => (dynCall_viiid = Module['dynCall_viiid'] = wasmExports['dynCall_viiid'])(a0, a1, a2, a3, a4);\r\nvar dynCall_viiiddd = Module['dynCall_viiiddd'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viiiddd = Module['dynCall_viiiddd'] = wasmExports['dynCall_viiiddd'])(a0, a1, a2, a3, a4, a5, a6);\r\nvar dynCall_vid = Module['dynCall_vid'] = (a0, a1, a2) => (dynCall_vid = Module['dynCall_vid'] = wasmExports['dynCall_vid'])(a0, a1, a2);\r\nvar dynCall_vff = Module['dynCall_vff'] = (a0, a1, a2) => (dynCall_vff = Module['dynCall_vff'] = wasmExports['dynCall_vff'])(a0, a1, a2);\r\nvar dynCall_vf = Module['dynCall_vf'] = (a0, a1) => (dynCall_vf = Module['dynCall_vf'] = wasmExports['dynCall_vf'])(a0, a1);\r\nvar dynCall_viffff = Module['dynCall_viffff'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viffff = Module['dynCall_viffff'] = wasmExports['dynCall_viffff'])(a0, a1, a2, a3, a4, a5);\r\nvar dynCall_vffff = Module['dynCall_vffff'] = (a0, a1, a2, a3, a4) => (dynCall_vffff = Module['dynCall_vffff'] = wasmExports['dynCall_vffff'])(a0, a1, a2, a3, a4);\r\nvar dynCall_vfff = Module['dynCall_vfff'] = (a0, a1, a2, a3) => (dynCall_vfff = Module['dynCall_vfff'] = wasmExports['dynCall_vfff'])(a0, a1, a2, a3);\r\nvar dynCall_vif = Module['dynCall_vif'] = (a0, a1, a2) => (dynCall_vif = Module['dynCall_vif'] = wasmExports['dynCall_vif'])(a0, a1, a2);\r\nvar dynCall_viif = Module['dynCall_viif'] = (a0, a1, a2, a3) => (dynCall_viif = Module['dynCall_viif'] = wasmExports['dynCall_viif'])(a0, a1, a2, a3);\r\nvar dynCall_viiiiiiiii = Module['dynCall_viiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) => (dynCall_viiiiiiiii = Module['dynCall_viiiiiiiii'] = wasmExports['dynCall_viiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\r\nvar dynCall_jiji = Module['dynCall_jiji'] = (a0, a1, a2, a3, a4) => (dynCall_jiji = Module['dynCall_jiji'] = wasmExports['dynCall_jiji'])(a0, a1, a2, a3, a4);\r\nvar dynCall_ji = Module['dynCall_ji'] = (a0, a1) => (dynCall_ji = Module['dynCall_ji'] = wasmExports['dynCall_ji'])(a0, a1);\r\nvar dynCall_viiiii = Module['dynCall_viiiii'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viiiii = Module['dynCall_viiiii'] = wasmExports['dynCall_viiiii'])(a0, a1, a2, a3, a4, a5);\r\nvar dynCall_viiiiiiii = Module['dynCall_viiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_viiiiiiii = Module['dynCall_viiiiiiii'] = wasmExports['dynCall_viiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\r\nvar dynCall_vfi = Module['dynCall_vfi'] = (a0, a1, a2) => (dynCall_vfi = Module['dynCall_vfi'] = wasmExports['dynCall_vfi'])(a0, a1, a2);\r\nvar dynCall_viff = Module['dynCall_viff'] = (a0, a1, a2, a3) => (dynCall_viff = Module['dynCall_viff'] = wasmExports['dynCall_viff'])(a0, a1, a2, a3);\r\nvar dynCall_vifff = Module['dynCall_vifff'] = (a0, a1, a2, a3, a4) => (dynCall_vifff = Module['dynCall_vifff'] = wasmExports['dynCall_vifff'])(a0, a1, a2, a3, a4);\r\nvar dynCall_viiiiiiiiii = Module['dynCall_viiiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) => (dynCall_viiiiiiiiii = Module['dynCall_viiiiiiiiii'] = wasmExports['dynCall_viiiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\r\nvar dynCall_viiiiiiiiiii = Module['dynCall_viiiiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) => (dynCall_viiiiiiiiiii = Module['dynCall_viiiiiiiiiii'] = wasmExports['dynCall_viiiiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\r\nvar dynCall_viifi = Module['dynCall_viifi'] = (a0, a1, a2, a3, a4) => (dynCall_viifi = Module['dynCall_viifi'] = wasmExports['dynCall_viifi'])(a0, a1, a2, a3, a4);\r\nvar dynCall_iidiiii = Module['dynCall_iidiiii'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_iidiiii = Module['dynCall_iidiiii'] = wasmExports['dynCall_iidiiii'])(a0, a1, a2, a3, a4, a5, a6);\r\nvar _asyncify_start_unwind = (a0) => (_asyncify_start_unwind = wasmExports['asyncify_start_unwind'])(a0);\r\nvar _asyncify_stop_unwind = () => (_asyncify_stop_unwind = wasmExports['asyncify_stop_unwind'])();\r\nvar _asyncify_start_rewind = (a0) => (_asyncify_start_rewind = wasmExports['asyncify_start_rewind'])(a0);\r\nvar _asyncify_stop_rewind = () => (_asyncify_stop_rewind = wasmExports['asyncify_stop_rewind'])();\r\n\r\nfunction invoke_vii(index,a1,a2) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_vii(index,a1,a2);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0) throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\n\r\n// include: postamble.js\r\n// === Auto-generated postamble setup entry stuff ===\r\n\r\nModule['addRunDependency'] = addRunDependency;\r\nModule['removeRunDependency'] = removeRunDependency;\r\nModule['FS_createPath'] = FS.createPath;\r\nModule['FS_createLazyFile'] = FS.createLazyFile;\r\nModule['FS_createDevice'] = FS.createDevice;\r\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\r\nModule['FS_createDataFile'] = FS.createDataFile;\r\nModule['FS_unlink'] = FS.unlink;\r\nModule['LZ4'] = LZ4;\r\n\r\n\r\nvar calledRun;\r\n\r\ndependenciesFulfilled = function runCaller() {\r\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\r\n  if (!calledRun) run();\r\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\r\n};\r\n\r\nfunction callMain(args = []) {\r\n\r\n  var entryFunction = _main;\r\n\r\n  args.unshift(thisProgram);\r\n\r\n  var argc = args.length;\r\n  var argv = stackAlloc((argc + 1) * 4);\r\n  var argv_ptr = argv;\r\n  args.forEach((arg) => {\r\n    HEAPU32[((argv_ptr)>>2)] = stringToUTF8OnStack(arg);\r\n    argv_ptr += 4;\r\n  });\r\n  HEAPU32[((argv_ptr)>>2)] = 0;\r\n\r\n  try {\r\n\r\n    var ret = entryFunction(argc, argv);\r\n\r\n    // if we're not running an evented main loop, it's time to exit\r\n    exitJS(ret, /* implicit = */ true);\r\n    return ret;\r\n  }\r\n  catch (e) {\r\n    return handleException(e);\r\n  }\r\n}\r\n\r\nfunction run(args = arguments_) {\r\n\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  preRun();\r\n\r\n  // a preRun added a dependency, run will be called later\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  function doRun() {\r\n    // run may have just been called through dependencies being fulfilled just in this very frame,\r\n    // or while the async setStatus time below was happening\r\n    if (calledRun) return;\r\n    calledRun = true;\r\n    Module['calledRun'] = true;\r\n\r\n    if (ABORT) return;\r\n\r\n    initRuntime();\r\n\r\n    preMain();\r\n\r\n    readyPromiseResolve(Module);\r\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\r\n\r\n    if (shouldRunNow) callMain(args);\r\n\r\n    postRun();\r\n  }\r\n\r\n  if (Module['setStatus']) {\r\n    Module['setStatus']('Running...');\r\n    setTimeout(function() {\r\n      setTimeout(function() {\r\n        Module['setStatus']('');\r\n      }, 1);\r\n      doRun();\r\n    }, 1);\r\n  } else\r\n  {\r\n    doRun();\r\n  }\r\n}\r\n\r\nif (Module['preInit']) {\r\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\r\n  while (Module['preInit'].length > 0) {\r\n    Module['preInit'].pop()();\r\n  }\r\n}\r\n\r\n// shouldRunNow refers to calling main(), not run().\r\nvar shouldRunNow = true;\r\n\r\nif (Module['noInitialRun']) shouldRunNow = false;\r\n\r\nrun();\r\n\r\n\r\n// end include: postamble.js\r\n\r\n\r\n  return moduleArg.ready\r\n}\r\n);\r\n})();\r\n;\r\nexport default createEdgeModule;","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal__bCOJk\",\"modal_content\":\"modal_content__O8DzT\",\"animatetop\":\"animatetop__1b7Bz\",\"close\":\"close__jJbSs\",\"modal_header\":\"modal_header__7dLiC\",\"modal_body\":\"modal_body__8R0ze\",\"modal_footer\":\"modal_footer__P6GcC\"};","import { FunctionComponent, h } from 'preact';\r\nimport style from './style.css';\r\n\r\nconst LicenseModal: FunctionComponent<{ onClose: () => void }> = ({ onClose }) => (\r\n    <div id=\"myModal\" class={style.modal}>\r\n        <div class={style.modal_content}>\r\n            <div class={style.modal_header}>\r\n                <span class={style.close} onClick={() => onClose()}>&times;</span>\r\n                <h2>EDGE-Classic Licenses</h2>\r\n            </div>\r\n            <div class={style.modal_body}>\r\n                <div style={{ overflowY: \"scroll\", overflowX: \"hidden\", height: \"512px\" }}>\r\n                    <div style={{ fontFamily: \"monospace\", whiteSpace: \"pre\", fontSize: 11 }}>{license}</div>\r\n                </div>\r\n            </div>\r\n            <div class={style.modal_footer}>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n);\r\n\r\nconst license = `===========================================================================================\r\nBSD 2-Clause License\r\n===========================================================================================\r\n\r\nminiz library (gzip support) - Copyright (c) 2015 Wojciech Adam Koszek\r\n\r\n===========================================================================================\r\nBSD 3-Clause License\r\n===========================================================================================\r\n\r\nBlasphemer (various assets) - Copyright (c) 2021 Contributors to the Blasphemer project\r\n\r\nFMMIDI library - Copyright (c) 2003-2006 yuno\r\n\r\nFreedoom (various assets) - Copyright (c) 2001-2019 Contributors to the Freedoom project\r\n\r\nYMFM library - Copyright (c) 2021 Aaron Giles\r\n\r\nYMFMIDI library - Copyright (c) 2021-2022 Devin Acker\r\n\r\nMod4Play library - Copyright (c) 2022 Olav Sørensen\r\n\r\nminivorbis library - Copyright (c) 2020 Eduardo Bart\r\n                     Copyright (c) 2002-2020 Xiph.org Foundation\r\n\r\n===========================================================================================\r\nCC 1.0 Universal License\r\n===========================================================================================\r\n\r\nminimp3 library - lieff\r\n\r\n\"ProtoSquare!\" soundfont - Yingchun Soul\r\n\r\n===========================================================================================\r\nCC-BY-3.0 Unported License\r\n===========================================================================================\r\n\r\nGerman Shepherd Dog Sprites - Copyright (c) 2017 Nash Muhandes\r\n\r\n===========================================================================================\r\nCC-BY-NC-4.0 International License\r\n===========================================================================================\r\n\r\nREKKR (various assets) - Copyright (c) 2021 Mockingbird Softworks\r\n\r\n===========================================================================================\r\nCC-BY-SA-4.0 International License\r\n===========================================================================================\r\n\r\n\"Bonkers for Bits\" soundfont - Copyright (c) Marcel J. Therrien\r\n\r\n\"DMXOPL\" and \"DMXPOL3\" instrument banks - Copyright (c) ConSiGno\r\n\r\n===========================================================================================\r\nGPL2 License\r\n===========================================================================================\r\n\r\n\"Adplug\" instrument bank - Copyright (C) 1999, 2000, 2001 Simon Peter, et al.\r\n\r\nAJBSP - Copyright (c) 2000-2023 Andrew Apted, et al\r\n        Copyright (c) 1994-1998 Colin Reed\r\n        Copyright (c) 1997-1998 Lee Killough\r\n\r\nCOAL -  Copyright (c) 2009-2023 Andrew Apted, et al\r\n        Copyright (c) 1996-1997 Id Software, Inc.\r\n\r\nDDF library - Copyright (c) 1999-2023 The EDGE Team\r\n\r\nDEHACKED library (formerly DEH_EDGE) - Copyright (c) 2004-2023 The EDGE Team\r\n\r\nEC_VOXELIB library - Copyright (c) 2022-2023 The EDGE Team\r\n\r\nEDGE-Classic - Copyright (c) 1999-2023 The EDGE Team\r\n\r\nEPI library - Copyright (c) 2002-2023 The EDGE Team\r\n\r\nFluidlite library - Copyright (c) 2016 Robin Lobel\r\n\r\nGame Music Emu - Copyright (c) 2003-2009 Shay Green\r\n\r\nSuperFastHash - Copyright (c) 2004-2010 Paul Hsieh\r\n\r\nXMIDI library - Copyright (c) 2015-2022 Vitaly Novichkov\r\n                Copyright (c) 2015-2016 WildMIDI Developers\r\n                Copyright (c) 2014 Bret Curtis\r\n                Copyright (c) 2001 Ryan Nunn\r\n\r\n===========================================================================================\r\nMIT License\r\n===========================================================================================\r\n\r\n\"16-Bit Game Station\" soundfont - Copyright (c) 2022 Yingchun Soul\r\n\r\nBW_Midi_Sequencer library - Copyright (c) 2015-2022 Vitaly Novichkov\r\n\r\ngl4es library - Copyright (c) 2016-2018 Sebastien Chevalier\r\n\t\t\t\tCopyright (c) 2013-2016 Ryan Hileman\r\n\r\nglad library - Copyright (c) 2013-2022 David Herberth\r\n\r\nminiz library - Copyright (c) 2013-2014 RAD Game Tools and Valve Software\r\n\t\t\t\tCopyright (c) 2010-2014 Rich Geldreich and Tenacious Software LLC\r\n\r\nPNPOLY algorithm - Copyright (c) 1970-2003 Wm. Randolph Franklin\r\n\r\n\"WadSmoosh\" instrument bank - Copyright (c) 2016-2020 JP LeBreton\r\n\r\n\"C++ implementation of a fast Gaussian blur algorithm by Ivan Kutskir - Integer Version\"\r\n    - Copyright (C) 2017 Basile Fraboni\r\n    - Copyright (C) 2014 Ivan Kutskir\r\n\r\n\r\n===========================================================================================\r\nPublic Domain\r\n===========================================================================================\r\n\r\nFraction.hpp - Bisqwit\r\n\r\n\"GMGSx\" soundfont (renamed to default.sf2) - Kenneth Rundt\r\n\r\ndr_wav and dr_flac libraries - David Reid\r\n\r\nstb_image, stb_image_write, stb_rect_pack and stb_truetype libraries - Sean Barrett\r\n\r\n\"Unicode Processing with C++0x\" Conversion Classes - Andrew Choi\r\n\r\n===========================================================================================\r\nWidePix License\r\n===========================================================================================\r\n\r\nWidePix (various assets) - Copyright (c) 2020-2021 Nash Muhandes\r\n\r\n===========================================================================================\r\nWTF License\r\n===========================================================================================\r\n\r\ncrsid library - Copyright (c) 2022 Hermit (Mihaly Horvath)\r\n\r\n===========================================================================================\r\nzlib License\r\n===========================================================================================\r\n\r\nSDL2 library - Copyright (c) 1997-2020 Sam Lantinga\r\n`\r\n\r\nexport default LicenseModal;\r\n","import './style/index.css';\r\nimport App from './components/app';\r\n\r\nexport default App;\r\n","import { h } from 'preact';\r\n\r\nimport Player from './player';\r\n\r\nconst App = () => (\r\n\t<div id=\"app\">\r\n\t\t<main>\r\n\t\t\t<Player/>\r\n\t\t</main>\r\n\t</div>\r\n);\r\n\r\nexport default App;\r\n"],"sourceRoot":""}