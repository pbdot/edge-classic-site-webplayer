{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/preact-cli/src/lib/entry.js","webpack:///../node_modules/preact/src/util.js","webpack:///../node_modules/preact/src/create-element.js","webpack:///../node_modules/preact/src/component.js","webpack:///../node_modules/preact/src/diff/children.js","webpack:///../node_modules/preact/src/diff/props.js","webpack:///../node_modules/preact/src/diff/index.js","webpack:///../node_modules/preact/src/render.js","webpack:///../node_modules/preact/src/options.js","webpack:///../node_modules/preact/src/constants.js","webpack:///../node_modules/preact/src/diff/catch-error.js","webpack:///../node_modules/preact/hooks/src/index.js","webpack:///../node_modules/@preact/signals-core/src/index.ts","webpack:///../node_modules/@preact/signals/src/index.ts","webpack:///./components/player/index.tsx","webpack:///./components/player/style.css","webpack:///./edge-classic.js","webpack:///./components/licenses/style.css","webpack:///./components/licenses/index.tsx","webpack:///./index.ts","webpack:///./components/app.tsx"],"names":["__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","h","Preact","render","hydrate","interopDefault","default","normalizeURL","url","length","navigator","serviceWorker","register","__webpack_public_path__","require","root","document","getElementById","body","firstElementChild","app","preRenderData","inlineDataElement","querySelector","JSON","parse","decodeURI","innerHTML","CLI_DATA","currentURL","location","pathname","init","u","v","parentNode","removeChild","y","f","arguments","children","defaultProps","type","props","ref","__k","__","__b","__e","__d","__c","__h","constructor","__v","vnode","_","k","this","context","b","indexOf","g","base","push","w","__r","debounceRendering","e","sort","shift","__P","L","__n","ownerSVGElement","M","x","a","Array","isArray","A","C","$","nextSibling","S","O","appendChild","insertBefore","I","setProperty","test","T","style","cssText","replace","toLowerCase","slice","addEventListener","z","j","removeEventListener","removeAttribute","setAttribute","event","P","H","contextType","__E","q","sub","state","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","N","diffed","some","localName","nodeType","createTextNode","createElementNS","createElement","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","checked","current","unmount","componentWillUnmount","B","firstChild","D","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Promise","then","resolve","setTimeout","__H","__V","__N","filter","every","F","clearTimeout","cancelAnimationFrame","requestAnimationFrame","Error","U","useSignal","__$f","__$u","peek","getCookie","cname","ca","window","cookie","split","charAt","substring","subscribe","valueOf","toString","set","displayName","defineProperties","configurable","__np","_scriptDir","createEdgeModule","currentScript","src","undefined","assert","condition","text","abort","updateMemoryViews","wasmMemory","buffer","Module","HEAP8","Int8Array","HEAP16","Int16Array","HEAPU8","Uint8Array","HEAPU16","Uint16Array","HEAP32","Int32Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","addRunDependency","_Module$monitorRunDep","_Module","runDependencies","removeRunDependency","_Module$monitorRunDep2","_Module2","runDependencyWatcher","clearInterval","dependenciesFulfilled","callback","what","_Module$onAbort","_Module3","err","ABORT","EXITSTATUS","WebAssembly","RuntimeError","readyPromiseReject","getBinarySync","file","wasmBinaryFile","wasmBinary","readBinary","instantiateArrayBuffer","binaryFile","imports","receiver","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","fetch","credentials","response","catch","getBinaryPromise","binary","instantiate","instance","reason","concat","ExitStatus","status","message","setValue","ptr","endsWith","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","set_adjusted_ptr","adjustedPtr","get_adjusted_ptr","get_exception_ptr","___cxa_is_pointer_type","adjusted","intArrayFromString","stringy","dontAddNull","len","lengthBytesUTF8","u8array","numBytesWritten","stringToUTF8Array","_glGenVertexArrays","arrays","__glGenObject","GL","vaos","run","doRun","calledRun","FS","initialized","ignorePermissions","TTY","callRuntimeCallbacks","__ATINIT__","__ATMAIN__","readyPromiseResolve","shouldRunNow","args","entryFunction","_main","unshift","thisProgram","argc","argv","stackAlloc","argv_ptr","arg","stringToUTF8OnStack","ret","exitJS","handleException","callMain","cb","__ATPOSTRUN__","postRun","arguments_","__ATPRERUN__","preRun","_this","moduleArg","reject","expectedDataFileDownloads","metadata","fetchRemotePackage","packageName","packageSize","xhr","XMLHttpRequest","open","responseType","onprogress","size","total","loaded","addedTotal","dataFileDownloads","num","download","Math","ceil","onerror","onload","statusText","responseURL","send","runWithFS","check","msg","stack","processPackageData","arrayBuffer","ArrayBuffer","byteArray","compressedData","_typeof","loadPackage","preloadFallback","error","console","REMOTE_PACKAGE_NAME","REMOTE_PACKAGE_SIZE","indexedDB","PACKAGE_UUID","mozIndexedDB","webkitIndexedDB","msIndexedDB","self","IDB_RO","IDB_RW","DB_NAME","DB_VERSION","METADATA_STORE_NAME","PACKAGE_STORE_NAME","CHUNK_SIZE","preloadResults","errback","openRequest","onupgradeneeded","db","target","result","objectStoreNames","contains","deleteObjectStore","createObjectStore","onsuccess","openDatabase","getRequest","transaction","objectStore","checkCachedPackage","PACKAGE_PATH","PACKAGE_NAME","useCached","fromCache","packages","chunksDone","totalSize","chunkCount","chunks","chunkId","byteLength","tempTyped","byteOffset","fetchCachedPackage","packageData","packageMeta","chunkSliceStart","nextChunkSliceStart","finishedChunks","putPackageRequest","put","putMetadataRequest","uuid","cacheRemotePackage","lastIndexOf","process","encodeURIComponent","REMOTE_PACKAGE_BASE","read_","readAsync","moduleOverrides","_extends","quit_","toThrow","scriptDirectory","href","substr","responseText","out","log","path","tempDouble","tempI64","__ATEXIT__","dataURIPrefix","isDataURI","filename","startsWith","_emscripten_get_now","ASM_CONSTS","edgePostInit","$0","$1","UTF8ToString","homeIndex","homeDir","analyzePath","exists","mkdirTree","mount","IDBFS","syncfs","_I_WebMain","onFullscreen","edgePreSyncFS","edgePostSyncFS","str","reply","prompt","allocate","ALLOC_NORMAL","AudioContext","webkitAudioContext","mediaDevices","getUserMedia","webkitGetUserMedia","SDL2","capture","audio","audioContext","autoResumeAudioContext","sampleRate","$2","$3","have_microphone","stream","silenceTimer","mediaStreamNode","createMediaStreamSource","scriptProcessorNode","createScriptProcessor","onaudioprocess","audioProcessingEvent","outputBuffer","getChannelData","fill","currentCaptureBuffer","inputBuffer","dynCall","connect","destination","no_microphone","silenceBuffer","createBuffer","video","currentOutputBuffer","numChannels","numberOfChannels","channelData","tracks","getAudioTracks","removeTrack","disconnect","close","pixels","ctxCanvas","ctx","imageCtx","image","createImageData","dst","CanvasPixelArray","val","data32Data","data32","data8","subarray","putImageData","$4","hot_x","hot_y","canvas","width","height","getContext","toDataURL","urlBuf","_malloc","stringToUTF8","innerWidth","innerHeight","alert","elements","element","func","listenOnce","resume","callbacks","sig","rtn","apply","dynCallLegacy","noExitRuntime","PATH","isAbs","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","normalize","isAbsolute","trailingSlash","join","dirname","dir","basename","lastSlash","paths","join2","randomFill","view","crypto","getRandomValues","initRandomFill","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","min","samePartsLength","outputParts","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","decode","u0","u1","u2","String","fromCharCode","ch","FS_stdin_getChar_buffer","charCodeAt","heap","outIdx","maxBytesToWrite","startIdx","ttys","shutdown","dev","ops","input","output","registerDevice","stream_ops","tty","node","rdev","ErrnoError","seekable","fsync","read","offset","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","readline","FS_stdin_getChar","ioctl_tcgets","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","ioctl_tcsets","ioctl_tiocgwinsz","default_tty1_ops","mmapAlloc","MEMFS","ops_table","createNode","parent","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","resizeFileStorage","newSize","attr","id","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","_i2","_Object$keys","keys","newname","oldpath","position","canOwn","whence","prot","flags","allocated","preloadPlugins","FS_getMode","canRead","canWrite","dbs","_indexedDB","DB_STORE_NAME","populate","getLocalSet","local","getRemoteSet","remote","reconcile","quit","values","getDB","req","fileStore","indexNames","createIndex","unique","preventDefault","isRealDir","toAbsolute","mountpoint","map","stat","pop","index","openKeyCursor","cursor","primaryKey","continue","loadLocalEntry","lookupPath","storeLocalEntry","entry","writeFile","chmod","utime","removeLocalEntry","loadRemoteEntry","store","storeRemoteEntry","removeRemoteEntry","delete","done","errored","e2","getTime","remove","oncomplete","reverse","LZ4","DIR_MODE","FILE_MODE","codec","MiniLZ4","sIdx","eIdx","token","literals_length","match_length","pos","maxInputSize","minMatch","hashShift","mfLimit","skipStrength","mlBits","mlMask","runMask","hasher","hashTable","empty","compressBound","isize","compress","dpos","dlen","anchor","findMatchAttempts","srcLength","sequenceLowBits","sequenceHighBits","hash","imul","ln","compressBlock","compressPackage","verify","temp","compressedChunks","successes","chunk","bound","compressed","compressedSize","back","uncompress","pack","preloadPlugin","files","createPath","Browser","handled","fullname","plugin","finish","readFile","written","currChunk","desired","chunkIndex","floor","compressedStart","found","originalSize","startInChunk","endInChunk","mounts","devices","streams","nextInode","nameTable","currentPath","filesystems","syncFSRequests","opts","follow_mount","recurse_count","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","hashName","parentid","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","FSNode","destroyNode","isSocket","flagsToPermissionString","flag","perms","nodePermissions","includes","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd","getStreamChecked","getStream","createStream","FSStream","shared","isRead","isWrite","isAppend","closeStream","_stream$stream_ops$op","_stream$stream_ops","device","getDevice","major","minor","makedev","ma","mi","getMounts","doCallback","completed","pseudo","mountRoot","next","mkdir","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","dontFollow","lstat","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","FS_modeStringToFlags","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","mmapFlags","munmap","ioctl","cmd","encoding","buf","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","code","staticInit","findObject","dontResolveLastLink","parentExists","parentPath","parentObject","part","createFile","properties","createDataFile","_output$buffer","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","writeChunks","chunkOffset","chunkSize","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","chunkNum","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","fn","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","abs","doMsync","addr","varargs","getp","getStr","setErrNo","___errno_location","convertI32PairToI53Checked","lo","hi","NaN","outPtr","isLeapYear","year","MONTH_DAYS_LEAP_CUMULATIVE","MONTH_DAYS_REGULAR_CUMULATIVE","ydayFromDate","date","getFullYear","getMonth","getDate","stringToNewUTF8","_emscripten_set_main_loop_timing","mainLoop","timingMode","timingValue","running","scheduler","timeUntilNextTick","tickStartTime","runner","method","setImmediate","setImmediates","emscriptenMainLoopMessageId","stopPropagation","postMessage","performance","setMainLoop","browserIterationFunc","fps","simulateInfiniteLoop","noSetTiming","checkIsRunning","thisMainLoopId","currentlyRunningMainloop","_SDL$audio","_SDL$audio$queueNewAu","queue","blocker","remainingBlockers","remaining","counted","updateStatus","currentFrameNumber","newRenderingFrameStarted","runIter","SDL","queueNewAudioData","runtimeKeepaliveCounter","keepRuntimeAlive","_Module$onExit","_Module4","_exit","callUserCallback","maybeExit","safeSetTimeout","timeout","pause","expected","expectedBlockers","_Module$postMainLoop","_Module5","isFullscreen","pointerLock","moduleContextCreatedCallbacks","workers","pointerLockChange","initted","imagePlugin","noImageDecoding","Blob","getMimetype","URL","createObjectURL","img","Image","complete","drawImage","preloadedImages","revokeObjectURL","audioPlugin","noAudioDecoding","preloadedAudios","Audio","BASE","leftchar","leftbits","curr","PAD","encode64","requestPointerLock","exitPointerLock","ev","createContext","useWebGL","setInModule","webGLContextAttributes","contextHandle","contextAttributes","antialias","alpha","majorVersion","WebGL2RenderingContext","attribute","GLctx","makeContextCurrent","destroyContext","fullscreenHandlersInstalled","lockPointer","resizeCanvas","requestFullscreen","fullscreenChange","_Module$onFullScreen","_Module6","_Module$onFullscreen","_Module7","canvasContainer","exitFullscreen","setFullscreenCanvasSize","updateCanvasDimensions","setWindowedCanvasSize","Element","nextRAF","fakeRequestAnimationFrame","delay","_requestAnimationFrame","_x","RAF","safeRequestAnimationFrame","_window","getMovementX","getMovementY","getMouseWheelDelta","delta","detail","wheelDelta","deltaY","deltaMode","mouseX","mouseY","mouseMovementX","mouseMovementY","touches","lastTouches","calculateMouseCoords","pageX","pageY","rect","getBoundingClientRect","scrollX","pageXOffset","scrollY","pageYOffset","adjustedX","left","adjustedY","top","setMouseCoords","_Browser$calculateMou","calculateMouseEvent","touch","coords","identifier","resizeListeners","updateResizeListeners","listener","setCanvasSize","noUpdates","windowedWidth","windowedHeight","screen","wNative","hNative","widthNative","heightNative","round","factor","removeProperty","EGL","errorCode","defaultDisplayInitialized","currentContext","currentReadSurface","currentDrawSurface","depth","stencil","stringCache","setErrorCode","chooseConfig","display","attribList","config","config_size","numConfigs","param","lowLatency","counter","buffers","programs","framebuffers","renderbuffers","textures","shaders","contexts","offscreenCanvases","queries","samplers","transformFeedbacks","syncs","byteSizeByTypeRoot","byteSizeByType","stringiCache","unpackAlignment","recordError","lastError","getNewId","table","MAX_TEMP_BUFFER_SIZE","numTempVertexBuffersPerSize","log2ceilLookup","clz32","generateTempBuffers","quads","largestIndex","tempVertexBufferCounters1","tempVertexBufferCounters2","tempVertexBuffers1","tempVertexBuffers2","tempIndexBuffers","ringbufferLength","ringbuffer1","ringbuffer2","tempQuadIndexBuffer","bindBuffer","numIndexes","quadIndexes","bufferData","getTempVertexBuffer","sizeBytes","ringbuffer","nextFreeBufferIndex","vbo","prevVBO","getParameter","getTempIndexBuffer","ibo","prevIBO","vb","getSource","shader","string","source","calcBufLength","stride","usedTempBuffers","preDrawHandleClientVertexAttribBindings","resetBufferBinding","maxVertexAttribs","clientBuffers","clientside","enabled","bufferSubData","vertexAttribPointerAdaptor","normalized","postDrawHandleClientVertexAttribBindings","currentArrayBufferBinding","getContextSafariWebGL2Fixed","ver","attrs","gl","WebGLRenderingContext","handle","registerContext","_allSupportedExtensions","getSupportedExtensions","supportedExtensionsForGetProcAddress","ext","version","GLctxObject","enableExtensionsByDefault","initExtensions","_GL$currentContext","deleteContext","JSEvents","removeAllHandlersOnTarget","initExtensionsDone","getExtension","divisor","first","primcount","indices","webgl_enable_ANGLE_instanced_arrays","vao","webgl_enable_OES_vertex_array_object","bufs","webgl_enable_WEBGL_draw_buffers","dibvbi","mdibvbi","webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance","disjointTimerQueryExt","multiDrawWebgl","webgl_enable_WEBGL_multi_draw","getExtensions","exts","_eglWaitGL","readEmAsmArgsArray","readEmAsmArgs","sigPtr","wide","withStackSave","stackSave","stackRestore","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","argsList","arraysHaveEqualContent","arrA","arrB","removeDeferredCalls","canPerformEventHandlerRequests","userActivation","isActive","currentEventHandler","allowsDeferredCalls","runDeferredCalls","eventTypeString","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","jsEventHandler","handlerFunc","callbackfunc","getNodeNameForTarget","nodeName","fullscreenEnabled","webkitFullscreenEnabled","setLetterbox","topBottom","leftRight","paddingLeft","paddingRight","paddingTop","paddingBottom","restoreOldWindowedStyle","specialHTMLTargets","findEventTarget","cString","findCanvasEventTarget","getCanvasElementSize","_emscripten_get_canvas_element_size","_emscripten_set_canvas_element_size","setCanvasElementSize","controlTransferredOffscreen","targetInt","currentFullscreenStrategy","jstoi_q","parseInt","softFullscreenResizeWebGLRenderTarget","topMargin","dpr","devicePixelRatio","inHiDPIFullscreenMode","canvasResolutionScaleMode","inAspectRatioFixedFullscreenMode","scaleMode","inPixelPerfectFullscreenMode","inCenteredWithoutScalingFullscreenMode","screenWidth","screenHeight","canvasSize","viewport","canvasResizedCallback","dynCall_iiii","canvasResizedCallbackUserData","JSEvents_resizeCanvasForFullscreen","strategy","restoreOldStyle","fullscreenElement","webkitFullscreenElement","oldWidth","oldHeight","oldCssWidth","oldCssHeight","backgroundColor","oldBackgroundColor","oldDocumentBackgroundColor","oldPaddingLeft","oldPaddingRight","oldPaddingTop","oldPaddingBottom","marginLeft","oldMarginLeft","marginRight","oldMarginRight","marginTop","oldMarginTop","marginBottom","oldMarginBottom","margin","oldDocumentBodyMargin","documentElement","overflow","oldDocumentOverflow","scroll","oldDocumentScroll","imageRendering","oldImageRendering","registerRestoreOldStyle","cssWidth","softFullscreen","cssHeight","windowedCssWidth","windowedCssHeight","windowedRttWidth","windowedRttHeight","desiredCssHeight","desiredCssWidth","filteringMode","dpiScale","newWidth","newHeight","JSEvents_requestFullscreen","webkitRequestFullscreen","ALLOW_KEYBOARD_INPUT","fillGamepadEventData","eventStruct","axes","buttons","pressed","connected","mapping","_emscripten_glActiveTexture","x0","activeTexture","_emscripten_glAttachShader","program","attachShader","_emscripten_glBeginQuery","beginQuery","_emscripten_glBeginQueryEXT","_emscripten_glBeginTransformFeedback","beginTransformFeedback","_emscripten_glBindAttribLocation","bindAttribLocation","_emscripten_glBindBuffer","currentElementArrayBufferBinding","currentPixelPackBufferBinding","currentPixelUnpackBufferBinding","_emscripten_glBindBufferBase","bindBufferBase","_emscripten_glBindBufferRange","ptrsize","bindBufferRange","_emscripten_glBindFramebuffer","framebuffer","bindFramebuffer","_emscripten_glBindRenderbuffer","renderbuffer","bindRenderbuffer","_emscripten_glBindSampler","unit","sampler","bindSampler","_emscripten_glBindTexture","texture","bindTexture","_emscripten_glBindTransformFeedback","bindTransformFeedback","_glBindVertexArray","bindVertexArray","_emscripten_glBindVertexArray","_glBindVertexArrayOES","_emscripten_glBindVertexArrayOES","_emscripten_glBlendColor","x1","x2","x3","blendColor","_emscripten_glBlendEquation","blendEquation","_emscripten_glBlendEquationSeparate","blendEquationSeparate","_emscripten_glBlendFunc","blendFunc","_emscripten_glBlendFuncSeparate","blendFuncSeparate","_emscripten_glBlitFramebuffer","x4","x5","x6","x7","x8","x9","blitFramebuffer","_emscripten_glBufferData","usage","_emscripten_glBufferSubData","_emscripten_glCheckFramebufferStatus","checkFramebufferStatus","_emscripten_glClear","clear","_emscripten_glClearBufferfi","clearBufferfi","_emscripten_glClearBufferfv","drawbuffer","clearBufferfv","_emscripten_glClearBufferiv","clearBufferiv","_emscripten_glClearBufferuiv","clearBufferuiv","_emscripten_glClearColor","clearColor","_emscripten_glClearDepthf","clearDepth","_emscripten_glClearStencil","clearStencil","convertI32PairToI53","_emscripten_glClientWaitSync","sync","timeout_low","timeout_high","clientWaitSync","_emscripten_glColorMask","red","green","blue","colorMask","_emscripten_glCompileShader","compileShader","_emscripten_glCompressedTexImage2D","level","internalFormat","border","imageSize","compressedTexImage2D","_emscripten_glCompressedTexImage3D","compressedTexImage3D","_emscripten_glCompressedTexSubImage2D","xoffset","yoffset","format","compressedTexSubImage2D","_emscripten_glCompressedTexSubImage3D","zoffset","compressedTexSubImage3D","_emscripten_glCopyBufferSubData","copyBufferSubData","_emscripten_glCopyTexImage2D","copyTexImage2D","_emscripten_glCopyTexSubImage2D","copyTexSubImage2D","_emscripten_glCopyTexSubImage3D","copyTexSubImage3D","_emscripten_glCreateProgram","createProgram","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","uniformIdCounter","_emscripten_glCreateShader","shaderType","createShader","_emscripten_glCullFace","cullFace","_emscripten_glDeleteBuffers","deleteBuffer","_emscripten_glDeleteFramebuffers","deleteFramebuffer","_emscripten_glDeleteProgram","deleteProgram","_emscripten_glDeleteQueries","ids","query","deleteQuery","_emscripten_glDeleteQueriesEXT","_emscripten_glDeleteRenderbuffers","deleteRenderbuffer","_emscripten_glDeleteSamplers","deleteSampler","_emscripten_glDeleteShader","deleteShader","_emscripten_glDeleteSync","deleteSync","_emscripten_glDeleteTextures","deleteTexture","_emscripten_glDeleteTransformFeedbacks","transformFeedback","deleteTransformFeedback","_glDeleteVertexArrays","deleteVertexArray","_emscripten_glDeleteVertexArrays","_glDeleteVertexArraysOES","_emscripten_glDeleteVertexArraysOES","_emscripten_glDepthFunc","depthFunc","_emscripten_glDepthMask","depthMask","_emscripten_glDepthRangef","depthRange","_emscripten_glDetachShader","detachShader","_emscripten_glDisable","disable","_emscripten_glDisableVertexAttribArray","disableVertexAttribArray","_emscripten_glDrawArrays","drawArrays","_glDrawArraysInstanced","drawArraysInstanced","_emscripten_glDrawArraysInstanced","_glDrawArraysInstancedANGLE","_emscripten_glDrawArraysInstancedANGLE","_glDrawArraysInstancedARB","_emscripten_glDrawArraysInstancedARB","_glDrawArraysInstancedEXT","_emscripten_glDrawArraysInstancedEXT","_glDrawArraysInstancedNV","_emscripten_glDrawArraysInstancedNV","tempFixedLengthArray","_glDrawBuffers","bufArray","drawBuffers","_emscripten_glDrawBuffers","_glDrawBuffersEXT","_emscripten_glDrawBuffersEXT","_glDrawBuffersWEBGL","_emscripten_glDrawBuffersWEBGL","_glDrawElements","drawElements","_emscripten_glDrawElements","_glDrawElementsInstanced","drawElementsInstanced","_emscripten_glDrawElementsInstanced","_glDrawElementsInstancedANGLE","_emscripten_glDrawElementsInstancedANGLE","_glDrawElementsInstancedARB","_emscripten_glDrawElementsInstancedARB","_glDrawElementsInstancedEXT","_emscripten_glDrawElementsInstancedEXT","_glDrawElementsInstancedNV","_emscripten_glDrawElementsInstancedNV","_emscripten_glDrawRangeElements","_emscripten_glEnable","enable","_emscripten_glEnableVertexAttribArray","enableVertexAttribArray","_emscripten_glEndQuery","endQuery","_emscripten_glEndQueryEXT","_emscripten_glEndTransformFeedback","endTransformFeedback","_emscripten_glFenceSync","fenceSync","_emscripten_glFinish","_emscripten_glFlush","flush","_emscripten_glFramebufferRenderbuffer","attachment","renderbuffertarget","framebufferRenderbuffer","_emscripten_glFramebufferTexture2D","textarget","framebufferTexture2D","_emscripten_glFramebufferTextureLayer","layer","framebufferTextureLayer","_emscripten_glFrontFace","frontFace","createFunction","objectTable","_emscripten_glGenBuffers","_emscripten_glGenFramebuffers","_emscripten_glGenQueries","_emscripten_glGenQueriesEXT","_emscripten_glGenRenderbuffers","_emscripten_glGenSamplers","_emscripten_glGenTextures","_emscripten_glGenTransformFeedbacks","_emscripten_glGenVertexArrays","_glGenVertexArraysOES","_emscripten_glGenVertexArraysOES","_emscripten_glGenerateMipmap","generateMipmap","__glGetActiveAttribOrUniform","funcName","bufSize","info","numBytesWrittenExclNull","_emscripten_glGetActiveAttrib","_emscripten_glGetActiveUniform","_emscripten_glGetActiveUniformBlockName","uniformBlockIndex","uniformBlockName","getActiveUniformBlockName","_emscripten_glGetActiveUniformBlockiv","pname","params","getActiveUniformBlockParameter","_emscripten_glGetActiveUniformsiv","uniformCount","uniformIndices","getActiveUniforms","_emscripten_glGetAttachedShaders","maxCount","getAttachedShaders","_emscripten_glGetAttribLocation","getAttribLocation","writeI53ToI64","emscriptenWebGLGet","name_","formats","_emscripten_glGetBooleanv","_emscripten_glGetBufferParameteri64v","getBufferParameter","_emscripten_glGetBufferParameteriv","_emscripten_glGetError","getError","_glGetFloatv","_emscripten_glGetFloatv","_emscripten_glGetFragDataLocation","getFragDataLocation","_emscripten_glGetFramebufferAttachmentParameteriv","getFramebufferAttachmentParameter","WebGLRenderbuffer","WebGLTexture","emscriptenWebGLGetIndexed","getIndexedParameter","WebGLBuffer","_emscripten_glGetInteger64i_v","_emscripten_glGetInteger64v","_emscripten_glGetIntegeri_v","_emscripten_glGetIntegerv","_emscripten_glGetInternalformativ","internalformat","getInternalformatParameter","_emscripten_glGetProgramBinary","_emscripten_glGetProgramInfoLog","maxLength","infoLog","getProgramInfoLog","_emscripten_glGetProgramiv","getProgramParameter","getActiveUniform","getActiveAttrib","_glGetQueryObjecti64vEXT","getQueryParameter","_emscripten_glGetQueryObjecti64vEXT","_glGetQueryObjectivEXT","_emscripten_glGetQueryObjectivEXT","_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectui64vEXT","_emscripten_glGetQueryObjectuiv","_glGetQueryObjectuivEXT","_emscripten_glGetQueryObjectuivEXT","_emscripten_glGetQueryiv","getQuery","_emscripten_glGetQueryivEXT","_emscripten_glGetRenderbufferParameteriv","getRenderbufferParameter","_emscripten_glGetSamplerParameterfv","getSamplerParameter","_emscripten_glGetSamplerParameteriv","_emscripten_glGetShaderInfoLog","getShaderInfoLog","_emscripten_glGetShaderPrecisionFormat","precisionType","range","precision","getShaderPrecisionFormat","rangeMin","rangeMax","_emscripten_glGetShaderSource","getShaderSource","_emscripten_glGetShaderiv","getShaderParameter","_emscripten_glGetString","glVersion","glslVersion","ver_num","match","_emscripten_glGetStringi","_emscripten_glGetSynciv","getSyncParameter","_emscripten_glGetTexParameterfv","getTexParameter","_emscripten_glGetTexParameteriv","_emscripten_glGetTransformFeedbackVarying","getTransformFeedbackVarying","_emscripten_glGetUniformBlockIndex","getUniformBlockIndex","_emscripten_glGetUniformIndices","uniformNames","names","getUniformIndices","webglGetLeftBracePos","webglPrepareUniformLocationsBeforeFirstUse","uniformLocsById","uniformSizeAndIdsByName","uniformArrayNamesById","nm","sz","lb","arrayName","_emscripten_glGetUniformLocation","arrayIndex","uniformBaseName","leftBrace","sizeAndId","getUniformLocation","webglGetUniformLocation","currentProgram","webglLoc","emscriptenWebGLGetUniform","getUniform","_emscripten_glGetUniformfv","_emscripten_glGetUniformiv","_emscripten_glGetUniformuiv","emscriptenWebGLGetVertexAttrib","getVertexAttrib","fround","_glGetVertexAttribIiv","_emscripten_glGetVertexAttribIiv","_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribIuiv","_emscripten_glGetVertexAttribPointerv","pointer","getVertexAttribOffset","_emscripten_glGetVertexAttribfv","_emscripten_glGetVertexAttribiv","_emscripten_glHint","hint","_emscripten_glInvalidateFramebuffer","numAttachments","attachments","list","invalidateFramebuffer","_emscripten_glInvalidateSubFramebuffer","invalidateSubFramebuffer","_emscripten_glIsBuffer","isBuffer","_emscripten_glIsEnabled","isEnabled","_emscripten_glIsFramebuffer","fb","isFramebuffer","_emscripten_glIsProgram","isProgram","_emscripten_glIsQuery","isQuery","_emscripten_glIsQueryEXT","_emscripten_glIsRenderbuffer","rb","isRenderbuffer","_emscripten_glIsSampler","isSampler","_emscripten_glIsShader","isShader","_emscripten_glIsSync","isSync","_emscripten_glIsTexture","isTexture","_emscripten_glIsTransformFeedback","isTransformFeedback","_glIsVertexArray","array","isVertexArray","_emscripten_glIsVertexArray","_glIsVertexArrayOES","_emscripten_glIsVertexArrayOES","_emscripten_glLineWidth","lineWidth","_emscripten_glLinkProgram","linkProgram","_emscripten_glPauseTransformFeedback","pauseTransformFeedback","_emscripten_glPixelStorei","pixelStorei","_emscripten_glPolygonOffset","polygonOffset","_emscripten_glProgramBinary","_emscripten_glProgramParameteri","_emscripten_glQueryCounterEXT","_emscripten_glReadBuffer","readBuffer","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","BYTES_PER_ELEMENT","emscriptenWebGLGetTexPixelData","byteSize","sizePerPixel","colorChannelsInGlTextureFormat","bytes","alignment","alignedRowSize","roundedToNextMultipleOf","computeUnpackAlignedImageSize","_emscripten_glReadPixels","readPixels","pixelData","_emscripten_glReleaseShaderCompiler","_emscripten_glRenderbufferStorage","renderbufferStorage","_emscripten_glRenderbufferStorageMultisample","renderbufferStorageMultisample","_emscripten_glResumeTransformFeedback","resumeTransformFeedback","_emscripten_glSampleCoverage","invert","sampleCoverage","_emscripten_glSamplerParameterf","samplerParameterf","_emscripten_glSamplerParameterfv","_emscripten_glSamplerParameteri","samplerParameteri","_emscripten_glSamplerParameteriv","_emscripten_glScissor","scissor","_emscripten_glShaderBinary","_emscripten_glShaderSource","shaderSource","_emscripten_glStencilFunc","stencilFunc","_emscripten_glStencilFuncSeparate","stencilFuncSeparate","_emscripten_glStencilMask","stencilMask","_emscripten_glStencilMaskSeparate","stencilMaskSeparate","_emscripten_glStencilOp","stencilOp","_emscripten_glStencilOpSeparate","stencilOpSeparate","_emscripten_glTexImage2D","texImage2D","_emscripten_glTexImage3D","texImage3D","_emscripten_glTexParameterf","texParameterf","_emscripten_glTexParameterfv","_emscripten_glTexParameteri","texParameteri","_emscripten_glTexParameteriv","_emscripten_glTexStorage2D","texStorage2D","_emscripten_glTexStorage3D","texStorage3D","_emscripten_glTexSubImage2D","texSubImage2D","_emscripten_glTexSubImage3D","texSubImage3D","_emscripten_glTransformFeedbackVaryings","varyings","bufferMode","vars","transformFeedbackVaryings","_emscripten_glUniform1f","v0","uniform1f","miniTempWebGLFloatBuffers","_emscripten_glUniform1fv","uniform1fv","_emscripten_glUniform1i","uniform1i","miniTempWebGLIntBuffers","_emscripten_glUniform1iv","uniform1iv","_emscripten_glUniform1ui","uniform1ui","_emscripten_glUniform1uiv","uniform1uiv","_emscripten_glUniform2f","v1","uniform2f","_emscripten_glUniform2fv","uniform2fv","_emscripten_glUniform2i","uniform2i","_emscripten_glUniform2iv","uniform2iv","_emscripten_glUniform2ui","uniform2ui","_emscripten_glUniform2uiv","uniform2uiv","_emscripten_glUniform3f","v2","uniform3f","_emscripten_glUniform3fv","uniform3fv","_emscripten_glUniform3i","uniform3i","_emscripten_glUniform3iv","uniform3iv","_emscripten_glUniform3ui","uniform3ui","_emscripten_glUniform3uiv","uniform3uiv","_emscripten_glUniform4f","v3","uniform4f","_emscripten_glUniform4fv","uniform4fv","_emscripten_glUniform4i","uniform4i","_emscripten_glUniform4iv","uniform4iv","_emscripten_glUniform4ui","uniform4ui","_emscripten_glUniform4uiv","uniform4uiv","_emscripten_glUniformBlockBinding","uniformBlockBinding","_emscripten_glUniformMatrix2fv","transpose","uniformMatrix2fv","_emscripten_glUniformMatrix2x3fv","uniformMatrix2x3fv","_emscripten_glUniformMatrix2x4fv","uniformMatrix2x4fv","_emscripten_glUniformMatrix3fv","uniformMatrix3fv","_emscripten_glUniformMatrix3x2fv","uniformMatrix3x2fv","_emscripten_glUniformMatrix3x4fv","uniformMatrix3x4fv","_emscripten_glUniformMatrix4fv","uniformMatrix4fv","_emscripten_glUniformMatrix4x2fv","uniformMatrix4x2fv","_emscripten_glUniformMatrix4x3fv","uniformMatrix4x3fv","_emscripten_glUseProgram","useProgram","_emscripten_glValidateProgram","validateProgram","_emscripten_glVertexAttrib1f","vertexAttrib1f","_emscripten_glVertexAttrib1fv","_emscripten_glVertexAttrib2f","vertexAttrib2f","_emscripten_glVertexAttrib2fv","_emscripten_glVertexAttrib3f","vertexAttrib3f","_emscripten_glVertexAttrib3fv","_emscripten_glVertexAttrib4f","vertexAttrib4f","_emscripten_glVertexAttrib4fv","_glVertexAttribDivisor","vertexAttribDivisor","_emscripten_glVertexAttribDivisor","_emscripten_glVertexAttribDivisorANGLE","_emscripten_glVertexAttribDivisorARB","_emscripten_glVertexAttribDivisorEXT","_emscripten_glVertexAttribDivisorNV","_emscripten_glVertexAttribI4i","vertexAttribI4i","_emscripten_glVertexAttribI4iv","_emscripten_glVertexAttribI4ui","vertexAttribI4ui","_emscripten_glVertexAttribI4uiv","_emscripten_glVertexAttribIPointer","vertexAttribIPointer","_emscripten_glVertexAttribPointer","vertexAttribPointer","_emscripten_glViewport","_emscripten_glWaitSync","waitSync","growMemory","pages","grow","disableGamepadApiIfItThrows","getGamepads","registerFocusEventCallback","userData","eventTypeId","focusEvent","registerFullscreenChangeEventCallback","fullscreenChangeEvent","mozFullScreenElement","msFullscreenElement","reportedElement","previousFullscreenElement","clientWidth","clientHeight","fillFullscreenChangeEventData","registerGamepadEventCallback","gamepadEvent","registerKeyEventCallback","keyEvent","keyEventData","timeStamp","ctrlKey","shiftKey","altKey","metaKey","repeat","charCode","keyCode","which","char","locale","fillMouseEventData","screenX","screenY","clientX","clientY","button","registerMouseEventCallback","mouseEvent","registerPointerlockChangeEventCallback","pointerlockChangeEvent","pointerLockElement","mozPointerLockElement","webkitPointerLockElement","msPointerLockElement","fillPointerlockChangeEventData","registerTouchEventCallback","touchEvent","et","isChanged","onTarget","changedTouches","targetTouches","targetRect","numTouches","registerVisibilityChangeEventCallback","visibilityChangeEvent","visibilityState","hidden","_emscripten_sleep","ms","Asyncify","handleSleep","wakeUp","isAsync","ENV","getEnvStrings","strings","env","languages","doReadv","iov","iovcnt","doWritev","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR","_strftime","maxsize","tm","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","days","newDate","leap","currentMonth","daysInCurrentMonth","setDate","setMonth","setFullYear","addDays","tm_year","tm_yday","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_wday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","EXPANSION_RULES_2","twelveHour","sum","arraySum","jan1","dec31","off","ahead","runAndAbortIfError","instrumentWasmImports","importPattern","_i3","_Object$entries","_Object$entries$_i","_slicedToArray","original","instrumentWasmExports","_loop","_Object$entries2$_i","_Object$entries2","_i4","exportCallStack","maybeStopUnwind","State","Normal","Unwinding","Rewinding","Disabled","StackSize","currData","handleSleepReturnValue","callStackNameToId","callStackIdToName","callStackId","asyncPromiseHandlers","sleepCallbacks","getCallStackId","_asyncify_stop_unwind","Fibers","trampoline","whenDone","allocateData","setDataHeader","setDataRewindFunc","stackSize","rewindId","getDataRewindFunc","wasmExports","doRewind","startAsync","reachedCallback","reachedAfterCallback","_asyncify_start_rewind","asyncWasmReturnValue","isError","_asyncify_start_unwind","_asyncify_stop_rewind","_free","handleAsync","readMode","writeMode","createPreloadedFile","dontCreateFile","preFinish","processData","fileData","FS_createDataFile","FS_handledByPreloadPlugin","noRunDep","dep","asyncLoad","miniTempWebGLFloatBuffersStorage","miniTempWebGLIntBuffersStorage","wasmImports","__cxa_throw","__syscall_chmod","__syscall_dup3","newfd","old","existing","__syscall_fchmod","__syscall_fcntl64","__syscall_fstat64","__syscall_ftruncate64","length_low","length_high","isNaN","__syscall_getcwd","cwdLengthInBytes","__syscall_getdents64","dirp","struct_size","child","__syscall_ioctl","op","termios","argp","winsize","__syscall_lstat64","__syscall_mkdirat","__syscall_newfstatat","nofollow","__syscall_openat","__syscall_readlinkat","bufsize","endChar","__syscall_renameat","olddirfd","newdirfd","__syscall_rmdir","__syscall_stat64","__syscall_unlinkat","_emscripten_get_now_is_monotonic","_emscripten_throw_longjmp","Infinity","_gmtime_js","time_low","time_high","tmPtr","time","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","yday","_localtime_js","getSeconds","getMinutes","getHours","getTimezoneOffset","summerOffset","winterOffset","_mktime_js","guessedOffset","dstOffset","nonDstOffset","trueOffset","setTime","getYear","timeMs","setTempRet0","_tzset_js","timezone","daylight","tzname","extractZone","toTimeString","currentYear","winter","summer","stdTimezoneOffset","winterName","summerName","winterNamePtr","summerNamePtr","eglBindAPI","api","eglChooseConfig","attrib_list","configs","eglCreateContext","hmm","contextAttribs","glesContextVersion","minorVersion","eglCreateWindowSurface","eglDestroyContext","eglDestroySurface","surface","eglGetConfigAttrib","eglGetDisplay","nativeDisplayType","eglGetError","eglInitialize","eglMakeCurrent","draw","eglQueryString","eglSwapBuffers","isContextLost","eglSwapInterval","interval","eglTerminate","eglWaitGL","eglWaitNative","emscripten_asm_const_int","argbuf","runEmAsmFunction","emscripten_asm_const_int_sync_on_main_thread","runMainThreadEmAsm","emscripten_date_now","emscripten_enter_soft_fullscreen","fullscreenStrategy","hiddenElements","onlyVisibleElement","displayState","hideEverythingExceptGivenElement","restoreHiddenElements","emscripten_exit_fullscreen","webkitExitFullscreen","emscripten_exit_pointerlock","emscripten_exit_soft_fullscreen","_restoreOldWindowedSt","emscripten_get_device_pixel_ratio","emscripten_get_element_css_size","emscripten_get_gamepad_status","gamepadState","lastGamepadState","emscripten_get_now","emscripten_get_num_gamepads","emscripten_get_screen_size","emscripten_glActiveTexture","emscripten_glAttachShader","emscripten_glBeginQuery","emscripten_glBeginQueryEXT","emscripten_glBeginTransformFeedback","emscripten_glBindAttribLocation","emscripten_glBindBuffer","emscripten_glBindBufferBase","emscripten_glBindBufferRange","emscripten_glBindFramebuffer","emscripten_glBindRenderbuffer","emscripten_glBindSampler","emscripten_glBindTexture","emscripten_glBindTransformFeedback","emscripten_glBindVertexArray","emscripten_glBindVertexArrayOES","emscripten_glBlendColor","emscripten_glBlendEquation","emscripten_glBlendEquationSeparate","emscripten_glBlendFunc","emscripten_glBlendFuncSeparate","emscripten_glBlitFramebuffer","emscripten_glBufferData","emscripten_glBufferSubData","emscripten_glCheckFramebufferStatus","emscripten_glClear","emscripten_glClearBufferfi","emscripten_glClearBufferfv","emscripten_glClearBufferiv","emscripten_glClearBufferuiv","emscripten_glClearColor","emscripten_glClearDepthf","emscripten_glClearStencil","emscripten_glClientWaitSync","emscripten_glColorMask","emscripten_glCompileShader","emscripten_glCompressedTexImage2D","emscripten_glCompressedTexImage3D","emscripten_glCompressedTexSubImage2D","emscripten_glCompressedTexSubImage3D","emscripten_glCopyBufferSubData","emscripten_glCopyTexImage2D","emscripten_glCopyTexSubImage2D","emscripten_glCopyTexSubImage3D","emscripten_glCreateProgram","emscripten_glCreateShader","emscripten_glCullFace","emscripten_glDeleteBuffers","emscripten_glDeleteFramebuffers","emscripten_glDeleteProgram","emscripten_glDeleteQueries","emscripten_glDeleteQueriesEXT","emscripten_glDeleteRenderbuffers","emscripten_glDeleteSamplers","emscripten_glDeleteShader","emscripten_glDeleteSync","emscripten_glDeleteTextures","emscripten_glDeleteTransformFeedbacks","emscripten_glDeleteVertexArrays","emscripten_glDeleteVertexArraysOES","emscripten_glDepthFunc","emscripten_glDepthMask","emscripten_glDepthRangef","emscripten_glDetachShader","emscripten_glDisable","emscripten_glDisableVertexAttribArray","emscripten_glDrawArrays","emscripten_glDrawArraysInstanced","emscripten_glDrawArraysInstancedANGLE","emscripten_glDrawArraysInstancedARB","emscripten_glDrawArraysInstancedEXT","emscripten_glDrawArraysInstancedNV","emscripten_glDrawBuffers","emscripten_glDrawBuffersEXT","emscripten_glDrawBuffersWEBGL","emscripten_glDrawElements","emscripten_glDrawElementsInstanced","emscripten_glDrawElementsInstancedANGLE","emscripten_glDrawElementsInstancedARB","emscripten_glDrawElementsInstancedEXT","emscripten_glDrawElementsInstancedNV","emscripten_glDrawRangeElements","emscripten_glEnable","emscripten_glEnableVertexAttribArray","emscripten_glEndQuery","emscripten_glEndQueryEXT","emscripten_glEndTransformFeedback","emscripten_glFenceSync","emscripten_glFinish","emscripten_glFlush","emscripten_glFramebufferRenderbuffer","emscripten_glFramebufferTexture2D","emscripten_glFramebufferTextureLayer","emscripten_glFrontFace","emscripten_glGenBuffers","emscripten_glGenFramebuffers","emscripten_glGenQueries","emscripten_glGenQueriesEXT","emscripten_glGenRenderbuffers","emscripten_glGenSamplers","emscripten_glGenTextures","emscripten_glGenTransformFeedbacks","emscripten_glGenVertexArrays","emscripten_glGenVertexArraysOES","emscripten_glGenerateMipmap","emscripten_glGetActiveAttrib","emscripten_glGetActiveUniform","emscripten_glGetActiveUniformBlockName","emscripten_glGetActiveUniformBlockiv","emscripten_glGetActiveUniformsiv","emscripten_glGetAttachedShaders","emscripten_glGetAttribLocation","emscripten_glGetBooleanv","emscripten_glGetBufferParameteri64v","emscripten_glGetBufferParameteriv","emscripten_glGetError","emscripten_glGetFloatv","emscripten_glGetFragDataLocation","emscripten_glGetFramebufferAttachmentParameteriv","emscripten_glGetInteger64i_v","emscripten_glGetInteger64v","emscripten_glGetIntegeri_v","emscripten_glGetIntegerv","emscripten_glGetInternalformativ","emscripten_glGetProgramBinary","emscripten_glGetProgramInfoLog","emscripten_glGetProgramiv","emscripten_glGetQueryObjecti64vEXT","emscripten_glGetQueryObjectivEXT","emscripten_glGetQueryObjectui64vEXT","emscripten_glGetQueryObjectuiv","emscripten_glGetQueryObjectuivEXT","emscripten_glGetQueryiv","emscripten_glGetQueryivEXT","emscripten_glGetRenderbufferParameteriv","emscripten_glGetSamplerParameterfv","emscripten_glGetSamplerParameteriv","emscripten_glGetShaderInfoLog","emscripten_glGetShaderPrecisionFormat","emscripten_glGetShaderSource","emscripten_glGetShaderiv","emscripten_glGetString","emscripten_glGetStringi","emscripten_glGetSynciv","emscripten_glGetTexParameterfv","emscripten_glGetTexParameteriv","emscripten_glGetTransformFeedbackVarying","emscripten_glGetUniformBlockIndex","emscripten_glGetUniformIndices","emscripten_glGetUniformLocation","emscripten_glGetUniformfv","emscripten_glGetUniformiv","emscripten_glGetUniformuiv","emscripten_glGetVertexAttribIiv","emscripten_glGetVertexAttribIuiv","emscripten_glGetVertexAttribPointerv","emscripten_glGetVertexAttribfv","emscripten_glGetVertexAttribiv","emscripten_glHint","emscripten_glInvalidateFramebuffer","emscripten_glInvalidateSubFramebuffer","emscripten_glIsBuffer","emscripten_glIsEnabled","emscripten_glIsFramebuffer","emscripten_glIsProgram","emscripten_glIsQuery","emscripten_glIsQueryEXT","emscripten_glIsRenderbuffer","emscripten_glIsSampler","emscripten_glIsShader","emscripten_glIsSync","emscripten_glIsTexture","emscripten_glIsTransformFeedback","emscripten_glIsVertexArray","emscripten_glIsVertexArrayOES","emscripten_glLineWidth","emscripten_glLinkProgram","emscripten_glPauseTransformFeedback","emscripten_glPixelStorei","emscripten_glPolygonOffset","emscripten_glProgramBinary","emscripten_glProgramParameteri","emscripten_glQueryCounterEXT","emscripten_glReadBuffer","emscripten_glReadPixels","emscripten_glReleaseShaderCompiler","emscripten_glRenderbufferStorage","emscripten_glRenderbufferStorageMultisample","emscripten_glResumeTransformFeedback","emscripten_glSampleCoverage","emscripten_glSamplerParameterf","emscripten_glSamplerParameterfv","emscripten_glSamplerParameteri","emscripten_glSamplerParameteriv","emscripten_glScissor","emscripten_glShaderBinary","emscripten_glShaderSource","emscripten_glStencilFunc","emscripten_glStencilFuncSeparate","emscripten_glStencilMask","emscripten_glStencilMaskSeparate","emscripten_glStencilOp","emscripten_glStencilOpSeparate","emscripten_glTexImage2D","emscripten_glTexImage3D","emscripten_glTexParameterf","emscripten_glTexParameterfv","emscripten_glTexParameteri","emscripten_glTexParameteriv","emscripten_glTexStorage2D","emscripten_glTexStorage3D","emscripten_glTexSubImage2D","emscripten_glTexSubImage3D","emscripten_glTransformFeedbackVaryings","emscripten_glUniform1f","emscripten_glUniform1fv","emscripten_glUniform1i","emscripten_glUniform1iv","emscripten_glUniform1ui","emscripten_glUniform1uiv","emscripten_glUniform2f","emscripten_glUniform2fv","emscripten_glUniform2i","emscripten_glUniform2iv","emscripten_glUniform2ui","emscripten_glUniform2uiv","emscripten_glUniform3f","emscripten_glUniform3fv","emscripten_glUniform3i","emscripten_glUniform3iv","emscripten_glUniform3ui","emscripten_glUniform3uiv","emscripten_glUniform4f","emscripten_glUniform4fv","emscripten_glUniform4i","emscripten_glUniform4iv","emscripten_glUniform4ui","emscripten_glUniform4uiv","emscripten_glUniformBlockBinding","emscripten_glUniformMatrix2fv","emscripten_glUniformMatrix2x3fv","emscripten_glUniformMatrix2x4fv","emscripten_glUniformMatrix3fv","emscripten_glUniformMatrix3x2fv","emscripten_glUniformMatrix3x4fv","emscripten_glUniformMatrix4fv","emscripten_glUniformMatrix4x2fv","emscripten_glUniformMatrix4x3fv","emscripten_glUseProgram","emscripten_glValidateProgram","emscripten_glVertexAttrib1f","emscripten_glVertexAttrib1fv","emscripten_glVertexAttrib2f","emscripten_glVertexAttrib2fv","emscripten_glVertexAttrib3f","emscripten_glVertexAttrib3fv","emscripten_glVertexAttrib4f","emscripten_glVertexAttrib4fv","emscripten_glVertexAttribDivisor","emscripten_glVertexAttribDivisorANGLE","emscripten_glVertexAttribDivisorARB","emscripten_glVertexAttribDivisorEXT","emscripten_glVertexAttribDivisorNV","emscripten_glVertexAttribI4i","emscripten_glVertexAttribI4iv","emscripten_glVertexAttribI4ui","emscripten_glVertexAttribI4uiv","emscripten_glVertexAttribIPointer","emscripten_glVertexAttribPointer","emscripten_glViewport","emscripten_glWaitSync","emscripten_has_asyncify","emscripten_memcpy_js","dest","copyWithin","emscripten_request_fullscreen_strategy","deferUntilInEventHandler","doRequestFullscreen","emscripten_request_pointerlock","emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","alignUp","multiple","cutDown","overGrownHeapSize","emscripten_sample_gamepad_data","emscripten_set_beforeunload_callback_on_thread","targetThread","onbeforeunload","confirmationMessage","returnValue","registerBeforeUnloadEventCallback","emscripten_set_blur_callback_on_thread","emscripten_set_canvas_element_size","emscripten_set_element_css_size","emscripten_set_focus_callback_on_thread","emscripten_set_fullscreenchange_callback_on_thread","emscripten_set_gamepadconnected_callback_on_thread","emscripten_set_gamepaddisconnected_callback_on_thread","emscripten_set_keydown_callback_on_thread","emscripten_set_keypress_callback_on_thread","emscripten_set_keyup_callback_on_thread","emscripten_set_main_loop","dynCall_v","emscripten_set_mousedown_callback_on_thread","emscripten_set_mouseenter_callback_on_thread","emscripten_set_mouseleave_callback_on_thread","emscripten_set_mousemove_callback_on_thread","emscripten_set_mouseup_callback_on_thread","emscripten_set_pointerlockchange_callback_on_thread","mozRequestPointerLock","webkitRequestPointerLock","msRequestPointerLock","emscripten_set_resize_callback_on_thread","uiEvent","outerWidth","outerHeight","registerUiEventCallback","emscripten_set_touchcancel_callback_on_thread","emscripten_set_touchend_callback_on_thread","emscripten_set_touchmove_callback_on_thread","emscripten_set_touchstart_callback_on_thread","emscripten_set_visibilitychange_callback_on_thread","emscripten_set_wheel_callback_on_thread","onwheel","wheelEvent","registerWheelEventCallback","emscripten_set_window_title","title","emscripten_sleep","environ_get","__environ","environ_buf","stringToAscii","environ_sizes_get","penviron_count","penviron_buf_size","exit","fd_close","fd_fdstat_get","pbuf","rightsBase","rightsInheriting","fd_read","pnum","fd_seek","offset_low","offset_high","newOffset","fd_write","glGetFloatv","invoke_vii","a1","a2","sp","dynCall_vii","_setThrew","strftime","strftime_l","system","command","receiveInstance","instantiateStreaming","createWasm","a0","a3","a4","a5","a6","a7","a8","a9","a10","a11","runCaller","ready","license","LicenseModal","_ref","onClose","class","onClick","overflowY","overflowX","fontFamily","whiteSpace","fontSize","defaultIWad","deathmatchIWad","indexDBName","WadHandler","_defineProperty","signal","_openDatabase","_uploadWads","trace","wads","wadState","_asyncToGenerator","database","_database","upload","reader","FileReader","readAsArrayBuffer","iwad","trans","wadName","isIWAD","_database2","wad","_database3","_ret","setWads","_this2","dbrequest","projects","WadChooser","_getCookie$trim","_getCookie","_useState2","useState","showLicense","setShowLicense","pelements","flex","fontWeight","flexGrow","maxWidth","padding","flexDirection","justifyContent","alignItems","singleton","click","placeholder","spellcheck","onChange","_ev$target","_ev$target$value","_ev$target2","badFile","find","uploadWads","flexShrink","EdgeClassic","canvasRef","useRef","canvasContainerRef","_useState4","loading","useEffect","syncCanvasSize","offsetWidth","offsetHeight","doSyncTimeout","canvasSync","_I_WebSyncScreenSize","iwadPath","customCommandLine","_toConsumableArray","_I_WebOpenGameMenu","_objectSpread","preEdgeSyncFS","postEdgeSyncFS","preInit","print","printErr","setStatus","monitorRunDependencies","globalThis","visibility","_ref2","_canvasRef$current","_x2","Player","App"],"mappings":"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AAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,OAAQ,IAAO,QAAS,CAAC,SAAY,iDAAkD,MAAS,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AA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,yCAA0C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,4CAA6C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0CAA2C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,2CAA4C,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,MAAS,QAAS,IAAO,SAAU,CAAC,SAAY,0DAA2D,M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S,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+C,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,8CAA+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SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,+BAAgC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,iCAAkC,MAAS,SAAU,IAAO,SAAU,MAAS,GAAI,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,kCAAmC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,gCAAiC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO,UAAW,CAAC,SAAY,wCAAyC,MAAS,SAAU,IAAO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","file":"bundle.20c3f.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"Pq/i\");\n","/* global __webpack_public_path__ */\n\nimport * as Preact from 'preact';\nconst { h, render, hydrate } = Preact;\n\nconst interopDefault = m => (m && m.default ? m.default : m);\n\nconst normalizeURL = url => (url[url.length - 1] === '/' ? url : url + '/');\n\nif (process.env.NODE_ENV === 'development') {\n\t// enable preact devtools\n\trequire('preact/debug');\n\n\t// only add a debug sw if webpack service worker is not requested.\n\tif (process.env.ADD_SW === undefined && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) + 'sw-debug.js'\n\t\t);\n\t} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register(\n\t\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t\t);\n\t}\n} else if (process.env.ADD_SW && 'serviceWorker' in navigator) {\n\tnavigator.serviceWorker.register(\n\t\tnormalizeURL(__webpack_public_path__) +\n\t\t\t(process.env.ES_BUILD ? 'sw-esm.js' : 'sw.js')\n\t);\n}\n\nlet app = interopDefault(require('preact-cli-entrypoint'));\n\nif (typeof app === 'function') {\n\tlet root =\n\t\tdocument.getElementById('preact_root') || document.body.firstElementChild;\n\n\tlet init = () => {\n\t\tlet app = interopDefault(require('preact-cli-entrypoint'));\n\t\tlet preRenderData = {};\n\t\tconst inlineDataElement = document.querySelector(\n\t\t\t'[type=\"__PREACT_CLI_DATA__\"]'\n\t\t);\n\t\tif (inlineDataElement) {\n\t\t\tpreRenderData =\n\t\t\t\tJSON.parse(decodeURI(inlineDataElement.innerHTML)).preRenderData ||\n\t\t\t\tpreRenderData;\n\t\t}\n\t\t/* An object named CLI_DATA is passed as a prop,\n\t\t * this keeps us future proof if in case we decide,\n\t\t * to send other data like at some point in time.\n\t\t */\n\t\tconst CLI_DATA = { preRenderData };\n\t\tconst currentURL = preRenderData.url ? normalizeURL(preRenderData.url) : '';\n\t\tconst canHydrate =\n\t\t\tprocess.env.PRERENDER &&\n\t\t\tprocess.env.NODE_ENV === 'production' &&\n\t\t\thydrate &&\n\t\t\tcurrentURL === normalizeURL(location.pathname);\n\t\tconst doRender = canHydrate ? hydrate : render;\n\t\tdoRender(h(app, { CLI_DATA }), document.body, root);\n\t};\n\n\tif (module.hot) module.hot.accept('preact-cli-entrypoint', init);\n\n\tinit();\n}\n","import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function(p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","function cycleDetected(): never {\n\tthrow new Error(\"Cycle detected\");\n}\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\nfunction batch<T>(callback: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn callback();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn callback();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\tpeek(): T;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\n/** @internal */\nfunction Signal(this: Signal, value?: unknown) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n}\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tif (this._targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = this._targets;\n\t\tif (this._targets !== undefined) {\n\t\t\tthis._targets._prevTarget = node;\n\t\t}\n\t\tthis._targets = node;\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\tconst signal = this;\n\treturn effect(function (this: Effect) {\n\t\tconst value = signal.value;\n\t\tconst flag = this._flags & TRACKING;\n\t\tthis._flags &= ~TRACKING;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tthis._flags |= flag;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.peek = function () {\n\treturn this._value;\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget() {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tcycleDetected();\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\nfunction signal<T>(value: T): Signal<T> {\n\treturn new Signal(value);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\t// If there's a new version of the dependency before or after refreshing,\n\t\t// or the dependency has something blocking it from refreshing at all (e.g. a\n\t\t// dependency cycle), then we need to recompute.\n\t\tif (\n\t\t\tnode._source._version !== node._version ||\n\t\t\t!node._source._refresh() ||\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_compute: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(compute: () => T);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, compute: () => unknown) {\n\tSignal.call(this, undefined);\n\n\tthis._compute = compute;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._compute();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when the it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nComputed.prototype.peek = function () {\n\tif (!this._refresh()) {\n\t\tcycleDetected();\n\t}\n\tif (this._flags & HAS_ERROR) {\n\t\tthrow this._value;\n\t}\n\treturn this._value;\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget() {\n\t\tif (this._flags & RUNNING) {\n\t\t\tcycleDetected();\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\ninterface ReadonlySignal<T = any> extends Signal<T> {\n\treadonly value: T;\n}\n\nfunction computed<T>(compute: () => T): ReadonlySignal<T> {\n\treturn new Computed(compute);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._compute = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ndeclare class Effect {\n\t_compute?: () => unknown;\n\t_cleanup?: unknown;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(compute: () => void);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n}\n\nfunction Effect(this: Effect, compute: () => void) {\n\tthis._compute = compute;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (!(this._flags & DISPOSED) && this._compute !== undefined) {\n\t\t\tthis._cleanup = this._compute();\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tcycleDetected();\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nfunction effect(compute: () => unknown): () => void {\n\tconst effect = new Effect(compute);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { signal, computed, effect, batch, Signal, ReadonlySignal };\n","import { options, Component } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport { signal, computed, batch, effect, Signal, type ReadonlySignal };\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction Text(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst s = useMemo(() => {\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Replace this component's vdom updater with a direct text one:\n\t\tthis._updater!._callback = () => {\n\t\t\t(this.base as Text).data = s.peek();\n\t\t};\n\n\t\treturn computed(() => {\n\t\t\tlet data = currentSignal.value;\n\t\t\tlet s = data.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\t}, []);\n\n\treturn s.value;\n}\nText.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: Text },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(() => {\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// let reason;\n\t// if (!hasSignals && !hasComputeds.has(this)) {\n\t// \treason = \"no signals or computeds\";\n\t// } else if (hasPendingUpdate.has(this)) {\n\t// \treason = \"has pending update\";\n\t// } else if (hasHookState.has(this)) {\n\t// \treason = \"has hook state\";\n\t// }\n\t// if (reason) {\n\t// \tif (!this) reason += \" (`this` bug)\";\n\t// \tconsole.log(\"not optimizing\", this?.constructor?.name, \": \", reason, {\n\t// \t\tdetails: {\n\t// \t\t\thasSignals,\n\t// \t\t\thasComputeds: hasComputeds.has(this),\n\t// \t\t\thasPendingUpdate: hasPendingUpdate.has(this),\n\t// \t\t\thasHookState: hasHookState.has(this),\n\t// \t\t\tdeps: Array.from(updater._deps),\n\t// \t\t\tupdater,\n\t// \t\t},\n\t// \t});\n\t// }\n\n\t// if this component used no signals or computeds, update:\n\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t// if there is a pending re-render triggered from Signals,\n\t// or if there is hook or class state, update:\n\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T) {\n\treturn useMemo(() => signal<T>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(() => callback.current());\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n","import { Signal, signal } from '@preact/signals';\r\nimport { h } from 'preact';\r\nimport style from './style.css';\r\nimport { useEffect, useRef, useState } from 'preact/hooks';\r\nimport createEdgeModule from '../../edge-classic';\r\nimport LicenseModal from '../licenses';\r\n\r\nconst defaultIWad = \"freedoom2.wad\"\r\nconst deathmatchIWad = \"freedm.wad\";\r\n\r\ntype PlayerConfig = {\r\n\tindexDBName: string;\r\n}\r\n\r\ntype WadState = {\r\n\terror?: string;\r\n\twadName?: string;\r\n\tisIWAD?: boolean;\r\n}\r\n\r\nconst config: PlayerConfig = {\r\n\tindexDBName: '/edge-classic'\r\n}\r\n\r\nfunction getCookie(cname: string): string {\r\n\tlet name = cname + \"=\";\r\n\tlet ca;\r\n\t// prerender guard\r\n\tif (typeof window !== 'undefined') {\r\n\t\tca = document.cookie.split(';');\r\n\t}\r\n\tif (!ca) {\r\n\t\treturn \"\";\r\n\t}\r\n\tfor (let i = 0; i < ca.length; i++) {\r\n\t\tlet c = ca[i];\r\n\t\twhile (c.charAt(0) == ' ') {\r\n\t\t\tc = c.substring(1);\r\n\t\t}\r\n\t\tif (c.indexOf(name) == 0) {\r\n\t\t\treturn c.substring(name.length, c.length);\r\n\t\t}\r\n\t}\r\n\treturn \"\";\r\n}\r\n\r\nclass WadHandler {\r\n\r\n\tconstructor(config: PlayerConfig) {\r\n\t\tthis.config = config;\r\n\t}\r\n\r\n\tprivate error(message: string) {\r\n\t\talert(message);\r\n\t\tconsole.error(message);\r\n\t\tconsole.trace();\r\n\t}\r\n\r\n\tsetWads(wads: WadState[] | undefined) {\r\n\t\tthis.wadState.value = wads;\r\n\t}\r\n\r\n\tasync uploadWads(files: File[]) {\r\n\r\n\t\tconst wads: WadState[] = [];\r\n\r\n\t\tfor (let i = 0; i < files.length; i++) {\r\n\r\n\t\t\tconst file = files[i];\r\n\r\n\t\t\tlet database: IDBDatabase | undefined;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tdatabase = await this.openDatabase();\r\n\t\t\t\tif (!database) {\r\n\t\t\t\t\tthis.error(\"Unable to open database\")\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.error(e);\r\n\t\t\t\tdatabase?.close();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst upload = new Promise<WadState>((resolve, reject) => {\r\n\r\n\t\t\t\tvar reader = new FileReader();\r\n\t\t\t\treader.readAsArrayBuffer(file);\r\n\r\n\t\t\t\treader.onload = (e) => {\r\n\r\n\t\t\t\t\tconst bits = e.target.result;\r\n\t\t\t\t\tconst contents = new Uint8Array(bits as ArrayBuffer);\r\n\r\n\t\t\t\t\tconst iwad = contents[0] === 73;\r\n\r\n\t\t\t\t\tconst trans = database.transaction(['FILE_DATA'], 'readwrite');\r\n\t\t\t\t\tconst path = `${this.config.indexDBName}/${file.name}`;\r\n\t\t\t\t\tconst addReq = trans.objectStore('FILE_DATA').put({ timestamp: new Date(), mode: 33206, contents: contents }, path);\r\n\r\n\t\t\t\t\taddReq.onerror = (e) => {\r\n\t\t\t\t\t\treject(\"Error storing wad data\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttrans.oncomplete = (e) => {\r\n\t\t\t\t\t\tresolve({ wadName: file.name, isIWAD: iwad });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treader.onerror = (e) => {\r\n\t\t\t\t\treject(\"Error reading wad\");\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst wad = await upload;\r\n\t\t\t\tdatabase?.close();\r\n\t\t\t\tdatabase = undefined;\r\n\t\t\t\twads.push(wad)\r\n\t\t\t} catch (e) {\r\n\t\t\t\tthis.error(e);\r\n\t\t\t} finally {\r\n\t\t\t\tdatabase?.close();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setWads(wads.length ? wads : undefined);\r\n\r\n\t}\r\n\r\n\tprivate async openDatabase() {\r\n\r\n\t\treturn new Promise<IDBDatabase | undefined>((resolve, reject) => {\r\n\r\n\t\t\t// build pre-render guard\r\n\t\t\tif (typeof window !== 'undefined') {\r\n\t\t\t\tconst dbrequest = window.indexedDB.open(this.config.indexDBName);\r\n\r\n\t\t\t\tdbrequest.onerror = (e) => {\r\n\t\t\t\t\treject(`unable to load database ${this.config.indexDBName}`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdbrequest.onupgradeneeded = (e) => {\r\n\r\n\t\t\t\t\tconsole.log(\"upgrade needed\");\r\n\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tif (!db.objectStoreNames.contains(\"FILE_DATA\")) {\r\n\t\t\t\t\t\tconsole.log(\"Creating FILE_DATA object store\");\r\n\t\t\t\t\t\tconst store = db.createObjectStore(\"FILE_DATA\", {});\r\n\t\t\t\t\t\tstore.createIndex(\"timestamp\", \"timestamp\", { unique: false });\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\tdbrequest.onsuccess = (e) => {\r\n\t\t\t\t\tconsole.log(\"db open\");\r\n\t\t\t\t\tconst db = (e.target as IDBOpenDBRequest).result as IDBDatabase;\r\n\t\t\t\t\tresolve(db);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\twadState: Signal<WadState[] | undefined> = signal(undefined);\r\n\r\n\tconfig: PlayerConfig;\r\n\r\n\tstatic get singleton(): WadHandler {\r\n\t\tif (!WadHandler.instance) {\r\n\t\t\tWadHandler.instance = new WadHandler(config);\r\n\t\t}\r\n\t\treturn WadHandler.instance;\r\n\t}\r\n\r\n\tprivate static instance?: WadHandler;\r\n}\r\n\r\ntype Project = {\r\n\tname: string;\r\n\timage: string;\r\n\tlink: string;\r\n}\r\n\r\nconst projects: Project[] = [\r\n\r\n\t{ name: \"Operation: Arctic Wolf Revisited\", image: \"./assets/images/articwolf.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/arctic-wolf-revisited\" },\r\n\t{ name: \"Astral Pathfinder\", image: \"./assets/images/astralpathfinder.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/astral-pathfinder1\" },\r\n\t{ name: \"Aliens: Stranded\", image: \"./assets/images/aliensstranded.png\", link: \"https://www.moddb.com/mods/edge-classic-add-ons/downloads/aliens-stranded\" }\r\n]\r\n\r\nconst WadChooser = () => {\r\n\r\n\tconst [showLicense, setShowLicense] = useState(false);\r\n\r\n\tconst pelements = projects.map(p => {\r\n\t\treturn <a href={p.link} target=\"_blank\" style=\"display:flex;flex:1;flex-direction:column;height:100%;align-items:flex-end\">\r\n\t\t\t<div style={{ display: \"flex\", flex: 0 }}>\r\n\t\t\t\t<div style={{ paddingTop: 12, paddingBottom: 4, fontSize: 14, whiteSpace: \"pre\", fontWeight: \"normal\" }}>{p.name}</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", position: \"relative\", flexGrow: 1, width: \"100%\" }} >\r\n\t\t\t\t<img style=\"width:100%;height:100%;object-fit:cover;position:absolute\" src={p.image} />\r\n\t\t\t</div>\r\n\t\t</a>\r\n\t});\r\n\r\n\treturn <div style={{ display: \"flex\", width: \"100%\", maxWidth: \"1440px\", padding: 24, paddingLeft: 42 }}>\r\n\t\t{showLicense && <LicenseModal onClose={() => setShowLicense(false)} />}\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1 }}>\r\n\t\t\t<div style={{ display: \"flex\", width: \"80%\" }}>\r\n\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"start\" }}>\r\n\t\t\t\t\t<div style={{ display: \"flex\" }}>\r\n\t\t\t\t\t\t<div style={{ fontSize: 18, fontWeight: \"normal\", paddingBottom: 24, width: 800 }}>Play EDGE-Classic in your browser by selecting an option below:\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWads([{ wadName: defaultIWad, isIWAD: true }])\r\n\t\t\t\t\t\t}}>Play Freedoom</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tWadHandler.singleton.setWads([{ wadName: deathmatchIWad, isIWAD: true }])\r\n\t\t\t\t\t\t}}>Play Bot Death Match</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tdocument.getElementById('getWadFile').click()\r\n\t\t\t\t\t\t}}>Play Wad, EPK, or Zip files</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ paddingTop: 24 }} />\r\n\r\n\t\t\t\t\t<textarea style=\"font-size:12px;width:292px;height:48px\" placeholder=\"Enter custom command line\" spellcheck={false} onChange={(ev: any) => {\r\n\r\n\t\t\t\t\t\tconst value = (ev?.target?.value?.length ? ev?.target?.value : undefined)?.trim().replace(\"\\n\", \" \");\r\n\t\t\t\t\t\tif (value?.length) {\r\n\t\t\t\t\t\t\tdocument.cookie = `customCommandLineCookie=${value}; SameSite=None; Secure`;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdocument.cookie = `customCommandLineCookie=; SameSite=None; Secure`;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}}>{getCookie(\"customCommandLineCookie\")?.trim() ?? \"\"}</textarea>\r\n\r\n\r\n\t\t\t\t\t<div style={{ paddingTop: 128 }} />\r\n\t\t\t\t\t<div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n\t\t\t\t\t\t<button style=\"font-size:18px;width:292px;height:48px;padding:12px\" onClick={() => {\r\n\t\t\t\t\t\t\tsetShowLicense(true);\r\n\t\t\t\t\t\t}}>Show Licenses</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<input id=\"getWadFile\" style=\"display:none\" type=\"file\" multiple onChange={(e) => {\r\n\t\t\t\t\tconst files = Array.from((e.target as any).files as File[]);\r\n\t\t\t\t\tif (files.length === 0) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst badFile = files.find(f => {\r\n\t\t\t\t\t\tconst check = f.name.toLowerCase();\r\n\t\t\t\t\t\tif (!check.endsWith(\".wad\") && !check.endsWith(\".zip\") && !check.endsWith(\".epk\") && !check.endsWith(\".7z\")) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tif (badFile) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\talert(`Please select wad, epk, or zip files, ${badFile.name} is invalid`);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst wadHandler = WadHandler.singleton;\r\n\t\t\t\t\twadHandler.uploadWads(files);\r\n\r\n\t\t\t\t}} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div style={{ display: \"flex\", flexGrow: 1, width: \"50%\", flexDirection: \"column\" }}>\r\n\t\t\t<div style={{ display: \"flex\", flex: \"0 0 24px\", position: \"relative\" }}>\r\n\t\t\t\t<div style={{ position: \"absolute\", fontSize: 18, fontWeight: 400, whiteSpace: \"pre\" }}>Suggested Projects</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ display: \"flex\", flexShrink: 0, flexGrow: 1, flexDirection: \"column\" }}>\r\n\t\t\t\t{pelements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n}\r\n\r\nconst EdgeClassic = () => {\r\n\r\n\tconst canvasRef = useRef<HTMLCanvasElement>(null);\r\n\tconst canvasContainerRef = useRef<HTMLDivElement>(null);\r\n\tconst [state, setState] = useState<{ loading: boolean }>({ loading: true });\r\n\tconst wadState = WadHandler.singleton.wadState.value;\r\n\r\n\r\n\tconst pointerLockChange = () => {\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst lock = canvas === document.pointerLockElement;\r\n\r\n\t\t// disabled for embedded classic site\r\n\t\t//Module._I_WebSetFullscreen(lock ? 1 : 0);\r\n\r\n\t\t/*\r\n\t\t// It feels good to open the menu when releasing pointer lock\r\n\t\t// though, it makes the interaction tricky to close the menu\r\n\t\tif (!lock) {\r\n\t\t\tModule._I_WebOpenGameMenu(1);\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tconst canvas = canvasRef?.current;\r\n\t\tconst canvasContainer = canvasContainerRef?.current;\r\n\r\n\t\tlet iwad = wadState?.find(w => w.isIWAD);\r\n\r\n\t\tif (!iwad) {\r\n\t\t\tiwad = { wadName: defaultIWad, isIWAD: true };\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(\"WadState\", wadState);\r\n\r\n\t\t/*\r\n\t\tlet iwad = defaultIWad;\r\n\t\tif (wadState.wadName === deathmatchIWad) {\r\n\t\t\tiwad = deathmatchIWad;\r\n\t\t}\r\n\r\n\t\tif (wadState.wadName !== iwad && wadState.isIWAD) {\r\n\t\t\tiwad = `edge-classic/${wadName}`;\r\n\t\t}\r\n\t\t*/\r\n\r\n\t\tif (!iwad) {\r\n\t\t\tthrow \"Unable to get iwad\";\r\n\t\t}\r\n\r\n\r\n\t\tif (!canvasContainer) {\r\n\t\t\tthrow \"Unable to get canvas container\";\r\n\t\t}\r\n\r\n\t\tif (!canvas) {\r\n\t\t\tthrow \"Unable to get canvas\";\r\n\t\t}\r\n\r\n\t\tconst syncCanvasSize = () => {\r\n\t\t\tconst w = Math.floor(canvasContainer.offsetWidth);\r\n\t\t\tconst h = Math.floor(canvasContainer.offsetHeight);\r\n\t\t\tconsole.log(\"Setting canvas size\", w, h);\r\n\t\t\tcanvas.style.width = `${w}px`;\r\n\t\t\tcanvas.style.height = `${h}px`;\r\n\t\t\tcanvas.width = w;\r\n\t\t\tcanvas.height = h;\r\n\t\t}\r\n\r\n\t\t// initial update\r\n\t\tsyncCanvasSize();\r\n\r\n\t\tconst canvasSync = () => {\r\n\t\t\tsyncCanvasSize();\r\n\t\t\tModule._I_WebSyncScreenSize();\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"pointerlockchange\", pointerLockChange, false);\r\n\r\n\t\tlet doSyncTimeout;\r\n\t\twindow.addEventListener(\"resize\", (ev) => {\r\n\r\n\t\t\tclearTimeout(doSyncTimeout);\r\n\t\t\tdoSyncTimeout = setTimeout(canvasSync, 250);\r\n\r\n\t\t});\r\n\r\n\t\tcanvas.addEventListener(\"webglcontextlost\", function (e) { alert('FIXME: WebGL context lost, please reload the page'); e.preventDefault(); }, false);\r\n\r\n\t\tlet iwadPath = iwad.wadName!;\r\n\t\tif (iwadPath !== defaultIWad && iwadPath !== deathmatchIWad) {\r\n\t\t\tiwadPath = `edge-classic/${iwadPath}`;\r\n\t\t}\r\n\r\n\t\tconst args = [\"-home\", \"edge-classic\", \"-windowed\", \"-width\", canvas.offsetWidth.toString(), \"-height\", canvas.offsetHeight.toString(), \"-iwad\", iwadPath];\r\n\r\n\t\twadState.forEach(w => {\r\n\t\t\tif (w.isIWAD) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\targs.push(\"-file\")\r\n\t\t\targs.push(`edge-classic/${w.wadName}`);\r\n\t\t})\r\n\r\n\t\tlet customCommandLine = getCookie(\"customCommandLineCookie\");\r\n\t\tif (!customCommandLine?.length) {\r\n\t\t\tif (iwad.wadName === deathmatchIWad) {\r\n\t\t\t\targs.push(...[\"-deathmatch\", \"1\", \"-nomonsters\", \"-skill\", \"2\", \"-bots\", \"1\", \"-warp\", \"map03\"])\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\targs.push(...customCommandLine.split(\" \"));\r\n\t\t}\r\n\r\n\r\n\r\n\t\tcreateEdgeModule({\r\n\t\t\tedgePostInit: () => {\r\n\t\t\t\tconsole.log(\"Post-Init!\");\r\n\t\t\t\t// jump\r\n\t\t\t\tif (!args.find(a => a.startsWith(\"-warp\"))) {\r\n\t\t\t\t\tModule._I_WebOpenGameMenu(1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetState({ ...state, loading: false });\r\n\t\t\t},\r\n\t\t\tonFullscreen: () => {\r\n\t\t\t\t/*\r\n\t\t\t\tconsole.log(\"On fullscreen\");\r\n\t\t\t\tconst elements = document.querySelectorAll(\".playercontrols\");\r\n\t\t\t\telements?.forEach(e => {\r\n\t\t\t\t\t(e as any).style.display = \"flex\";\r\n\t\t\t\t});\r\n\t\t\t\t*/\r\n\t\t\t},\r\n\t\t\tpreEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\tpostEdgeSyncFS: () => {\r\n\t\t\t},\r\n\t\t\targuments: args,\r\n\t\t\tpreInit: () => {\r\n\t\t\t\tconsole.log(\"Pre-Init\");\r\n\t\t\t},\r\n\t\t\tpreRun: [],\r\n\t\t\tpostRun: [],\r\n\t\t\tprint: (function () {\r\n\t\t\t\treturn function (text) {\r\n\t\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\t\tconsole.log(text);\r\n\t\t\t\t};\r\n\t\t\t})(),\r\n\t\t\tprintErr: function (text) {\r\n\t\t\t\ttext = Array.prototype.slice.call(arguments).join(' ');\r\n\t\t\t\tconsole.error(text);\r\n\t\t\t},\r\n\t\t\tcanvas: canvas,\r\n\t\t\tsetStatus: function (text) { console.log(\"status\", text) },\r\n\t\t\tmonitorRunDependencies: function (left) { console.log(left) },\r\n\t\t}).then(module => {\r\n\t\t\tglobalThis.Module = module;\r\n\t\t\tmodule.canvas = canvas;\r\n\t\t});\r\n\r\n\r\n\t\treturn () => {\r\n\r\n\t\t};\r\n\r\n\t}, []);\r\n\r\n\r\n\treturn <div id=\"canvas-container\" ref={canvasContainerRef} style={{ display: \"flex\", width: \"100%\", height: \"100%\", position: \"relative\" }}>\r\n\t\t<canvas id=\"canvas\" ref={canvasRef} style={{ visibility: state.loading ? \"hidden\" : \"visible\" }}\r\n\t\t\tonClick={async (ev) => {\r\n\t\t\t\tconst lock = canvasRef.current === document.pointerLockElement;\r\n\t\t\t\tif (!lock) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait canvasRef.current?.requestPointerLock();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}} />\r\n\r\n\t\t{!!state.loading && <div style={{ position: \"absolute\", display: \"flex\", width: \"100%\", height: \"100%\", justifyContent: \"center\", alignItems: \"center\" }}>\r\n\t\t\t<div class={style.loading}>\r\n\t\t\t\t<span style=\"--i:1\">L</span>\r\n\t\t\t\t<span style=\"--i:2\">O</span>\r\n\t\t\t\t<span style=\"--i:3\">A</span>\r\n\t\t\t\t<span style=\"--i:4\">D</span>\r\n\t\t\t\t<span style=\"--i:5\">I</span>\r\n\t\t\t\t<span style=\"--i:6\">N</span>\r\n\t\t\t\t<span style=\"--i:7\">G</span>\r\n\t\t\t\t<span style=\"--i:8\">.</span>\r\n\t\t\t\t<span style=\"--i:9\">.</span>\r\n\t\t\t\t<span style=\"--i:10\">.</span>\r\n\t\t\t</div>\r\n\t\t</div>}\r\n\r\n\t</div>\r\n}\r\n// floating player controls, not currently used\r\n// {!state.loading && <PlayerControls />}\r\n\r\nconst PlayerControls = () => {\r\n\tconst [fullscreen, setFullscreen] = useState(false);\r\n\treturn <div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\", padding: \"24px\", zIndex: 1, position: \"absolute\" }}>\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", width: \"100%\" }} />\r\n\t\t<div className=\"playercontrols\" style={{ display: \"flex\", flexShrink: 1, paddingRight: \"48px\" }}>\r\n\t\t\t<button style={{ opacity: 1 }} className=\"playercontrols\" onClick={() => { Module._I_WebSetFullscreen(fullscreen ? 0 : 1, setFullscreen(!fullscreen)) }}>{fullscreen ? \"Minimize\" : \"Maximize\"}</button>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst Player = () => {\r\n\r\n\tconst wadHandler = WadHandler.singleton;\r\n\tconst wadState = wadHandler.wadState.value;\r\n\r\n\treturn (\r\n\t\t<div style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\r\n\t\t\t{!wadState?.length && <WadChooser />}\r\n\t\t\t{!!wadState?.length && <EdgeClassic />}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Player;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"loading__O14bA\"};","\nvar createEdgeModule = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(moduleArg = {}) {\n\n// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = moduleArg;\n\n// Set up the promise that indicates the Module is initialized\nvar readyPromiseResolve, readyPromiseReject;\nModule['ready'] = new Promise((resolve, reject) => {\n  readyPromiseResolve = resolve;\n  readyPromiseReject = reject;\n});\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n  var Module = typeof Module !== 'undefined' ? Module : {};\n\n  if (!Module.expectedDataFileDownloads) {\n    Module.expectedDataFileDownloads = 0;\n  }\n\n  Module.expectedDataFileDownloads++;\n  (function() {\n    // Do not attempt to redownload the virtual filesystem data when in a pthread or a Wasm Worker context.\n    if (Module['ENVIRONMENT_IS_PTHREAD'] || Module['$ww']) return;\n    var loadPackage = function(metadata) {\n\n      var PACKAGE_PATH = '';\n      if (typeof window === 'object') {\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');\n      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {\n        // web worker\n        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');\n      }\n      var PACKAGE_NAME = '/home/jenge/Dev_WSL/EDGE-classic/web/site/edge-classic.data';\n      var REMOTE_PACKAGE_BASE = 'edge-classic.data';\n      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {\n        Module['locateFile'] = Module['locateFilePackage'];\n        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');\n      }\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\nvar REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\n\n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\n        \n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', packageName, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.onprogress = function(event) {\n          var url = packageName;\n          var size = packageSize;\n          if (event.total) size = event.total;\n          if (event.loaded) {\n            if (!xhr.addedTotal) {\n              xhr.addedTotal = true;\n              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};\n              Module.dataFileDownloads[url] = {\n                loaded: event.loaded,\n                total: size\n              };\n            } else {\n              Module.dataFileDownloads[url].loaded = event.loaded;\n            }\n            var total = 0;\n            var loaded = 0;\n            var num = 0;\n            for (var download in Module.dataFileDownloads) {\n            var data = Module.dataFileDownloads[download];\n              total += data.total;\n              loaded += data.loaded;\n              num++;\n            }\n            total = Math.ceil(total * Module.expectedDataFileDownloads/num);\n            if (Module['setStatus']) Module['setStatus'](`Downloading data... (${loaded}/${total})`);\n          } else if (!Module.dataFileDownloads) {\n            if (Module['setStatus']) Module['setStatus']('Downloading data...');\n          }\n        };\n        xhr.onerror = function(event) {\n          throw new Error(\"NetworkError for: \" + packageName);\n        }\n        xhr.onload = function(event) {\n          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n            var packageData = xhr.response;\n            callback(packageData);\n          } else {\n            throw new Error(xhr.statusText + \" : \" + xhr.responseURL);\n          }\n        };\n        xhr.send(null);\n      };\n\n      function handleError(error) {\n        console.error('package error:', error);\n      };\n\n    function runWithFS() {\n\n      function assert(check, msg) {\n        if (!check) throw msg + new Error().stack;\n      }\nModule['FS_createPath'](\"/\", \"edge_base\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"blasphemer\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer/graphics\", \"tome\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/blasphemer/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"chex\", true, true);\nModule['FS_createPath'](\"/edge_base/chex\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/chex/graphics\", \"chex_font\", true, true);\nModule['FS_createPath'](\"/edge_base/chex\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom1\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom1\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"doom2\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/doom2\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"freedoom1\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1/graphics\", \"freedoom_font\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom1\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"freedoom2\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2/graphics\", \"freedoom_font\", true, true);\nModule['FS_createPath'](\"/edge_base/freedoom2\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"hacx\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/hacx\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"harmony\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base/harmony\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"heretic\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"skull\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"tome\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/graphics\", \"wings\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_base/heretic\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"plutonia\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/plutonia\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"rekkr\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/rekkr\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"strife\", true, true);\nModule['FS_createPath'](\"/edge_base\", \"tnt\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_base/tnt\", \"textures\", true, true);\nModule['FS_createPath'](\"/\", \"edge_defs\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"colormaps\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"graphics\", true, true);\nModule['FS_createPath'](\"/edge_defs/graphics\", \"crosshairs\", true, true);\nModule['FS_createPath'](\"/edge_defs/graphics\", \"edge1_font\", true, true);\nModule['FS_createPath'](\"/edge_defs/graphics\", \"overlays\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"movies\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"scripts\", true, true);\nModule['FS_createPath'](\"/edge_defs/scripts\", \"lua\", true, true);\nModule['FS_createPath'](\"/edge_defs/scripts/lua\", \"core\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"sounds\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"sprites\", true, true);\nModule['FS_createPath'](\"/edge_defs/sprites\", \"mbf_dog\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"textures\", true, true);\nModule['FS_createPath'](\"/edge_defs\", \"ttf\", true, true);\nModule['FS_createPath'](\"/\", \"soundfont\", true, true);\n\n        var PACKAGE_UUID = metadata['package_uuid'];\n        var indexedDB;\n        if (typeof window === 'object') {\n          indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        } else if (typeof location !== 'undefined') {\n          // worker\n          indexedDB = self.indexedDB;\n        } else {\n          throw 'using IndexedDB to cache data can only be done on a web page or in a web worker';\n        }\n        var IDB_RO = \"readonly\";\n        var IDB_RW = \"readwrite\";\n        var DB_NAME = \"EM_PRELOAD_CACHE\";\n        var DB_VERSION = 1;\n        var METADATA_STORE_NAME = 'METADATA';\n        var PACKAGE_STORE_NAME = 'PACKAGES';\n        function openDatabase(callback, errback) {\n          try {\n            var openRequest = indexedDB.open(DB_NAME, DB_VERSION);\n          } catch (e) {\n            return errback(e);\n          }\n          openRequest.onupgradeneeded = function(event) {\n            var db = /** @type {IDBDatabase} */ (event.target.result);\n\n            if (db.objectStoreNames.contains(PACKAGE_STORE_NAME)) {\n              db.deleteObjectStore(PACKAGE_STORE_NAME);\n            }\n            var packages = db.createObjectStore(PACKAGE_STORE_NAME);\n\n            if (db.objectStoreNames.contains(METADATA_STORE_NAME)) {\n              db.deleteObjectStore(METADATA_STORE_NAME);\n            }\n            var metadata = db.createObjectStore(METADATA_STORE_NAME);\n          };\n          openRequest.onsuccess = function(event) {\n            var db = /** @type {IDBDatabase} */ (event.target.result);\n            callback(db);\n          };\n          openRequest.onerror = function(error) {\n            errback(error);\n          };\n        };\n\n        // This is needed as chromium has a limit on per-entry files in IndexedDB\n        // https://cs.chromium.org/chromium/src/content/renderer/indexed_db/webidbdatabase_impl.cc?type=cs&sq=package:chromium&g=0&l=177\n        // https://cs.chromium.org/chromium/src/out/Debug/gen/third_party/blink/public/mojom/indexeddb/indexeddb.mojom.h?type=cs&sq=package:chromium&g=0&l=60\n        // We set the chunk size to 64MB to stay well-below the limit\n        var CHUNK_SIZE = 64 * 1024 * 1024;\n\n        function cacheRemotePackage(\n          db,\n          packageName,\n          packageData,\n          packageMeta,\n          callback,\n          errback\n        ) {\n          var transactionPackages = db.transaction([PACKAGE_STORE_NAME], IDB_RW);\n          var packages = transactionPackages.objectStore(PACKAGE_STORE_NAME);\n          var chunkSliceStart = 0;\n          var nextChunkSliceStart = 0;\n          var chunkCount = Math.ceil(packageData.byteLength / CHUNK_SIZE);\n          var finishedChunks = 0;\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\n            nextChunkSliceStart += CHUNK_SIZE;\n            var putPackageRequest = packages.put(\n              packageData.slice(chunkSliceStart, nextChunkSliceStart),\n              `package/${packageName}/${chunkId}`\n            );\n            chunkSliceStart = nextChunkSliceStart;\n            putPackageRequest.onsuccess = function(event) {\n              finishedChunks++;\n              if (finishedChunks == chunkCount) {\n                var transaction_metadata = db.transaction(\n                  [METADATA_STORE_NAME],\n                  IDB_RW\n                );\n                var metadata = transaction_metadata.objectStore(METADATA_STORE_NAME);\n                var putMetadataRequest = metadata.put(\n                  {\n                    'uuid': packageMeta.uuid,\n                    'chunkCount': chunkCount\n                  },\n                  `metadata/${packageName}`\n                );\n                putMetadataRequest.onsuccess = function(event) {\n                  callback(packageData);\n                };\n                putMetadataRequest.onerror = function(error) {\n                  errback(error);\n                };\n              }\n            };\n            putPackageRequest.onerror = function(error) {\n              errback(error);\n            };\n          }\n        }\n\n        /* Check if there's a cached package, and if so whether it's the latest available */\n        function checkCachedPackage(db, packageName, callback, errback) {\n          var transaction = db.transaction([METADATA_STORE_NAME], IDB_RO);\n          var metadata = transaction.objectStore(METADATA_STORE_NAME);\n          var getRequest = metadata.get(`metadata/${packageName}`);\n          getRequest.onsuccess = function(event) {\n            var result = event.target.result;\n            if (!result) {\n              return callback(false, null);\n            } else {\n              return callback(PACKAGE_UUID === result['uuid'], result);\n            }\n          };\n          getRequest.onerror = function(error) {\n            errback(error);\n          };\n        }\n\n        function fetchCachedPackage(db, packageName, metadata, callback, errback) {\n          var transaction = db.transaction([PACKAGE_STORE_NAME], IDB_RO);\n          var packages = transaction.objectStore(PACKAGE_STORE_NAME);\n\n          var chunksDone = 0;\n          var totalSize = 0;\n          var chunkCount = metadata['chunkCount'];\n          var chunks = new Array(chunkCount);\n\n          for (var chunkId = 0; chunkId < chunkCount; chunkId++) {\n            var getRequest = packages.get(`package/${packageName}/${chunkId}`);\n            getRequest.onsuccess = function(event) {\n              // If there's only 1 chunk, there's nothing to concatenate it with so we can just return it now\n              if (chunkCount == 1) {\n                callback(event.target.result);\n              } else {\n                chunksDone++;\n                totalSize += event.target.result.byteLength;\n                chunks.push(event.target.result);\n                if (chunksDone == chunkCount) {\n                  if (chunksDone == 1) {\n                    callback(event.target.result);\n                  } else {\n                    var tempTyped = new Uint8Array(totalSize);\n                    var byteOffset = 0;\n                    for (var chunkId in chunks) {\n                      var buffer = chunks[chunkId];\n                      tempTyped.set(new Uint8Array(buffer), byteOffset);\n                      byteOffset += buffer.byteLength;\n                      buffer = undefined;\n                    }\n                    chunks = undefined;\n                    callback(tempTyped.buffer);\n                    tempTyped = undefined;\n                  }\n                }\n              }\n            };\n            getRequest.onerror = function(error) {\n              errback(error);\n            };\n          }\n        }\n\n      function processPackageData(arrayBuffer) {\n        assert(arrayBuffer, 'Loading data file failed.');\n        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');\n        var byteArray = new Uint8Array(arrayBuffer);\n        var curr;\n        var compressedData = {\"data\":null,\"cachedOffset\":54047123,\"cachedIndexes\":[-1,-1],\"cachedChunks\":[null,null],\"offsets\":[0,1547,2815,4214,5880,7928,9976,12005,13715,15652,17448,19214,20934,21881,22594,23354,24168,25098,26102,26889,27830,28720,29670,30523,31444,32269,33137,34033,34818,35652,36484,37363,38416,39501,40388,41325,42640,43951,45213,46669,47199,47726,48216,48797,49350,50287,51244,52163,53209,54052,54770,55755,56674,57749,58816,59786,60903,61613,62244,62758,63464,64017,64714,65621,66660,67111,68003,68612,69350,70039,70765,71858,72823,73878,74921,75443,76073,76577,77128,77741,78445,79107,79981,80622,81401,82159,83057,84287,85046,85928,86944,87916,88958,89882,90807,91774,92459,93417,94377,95344,96244,96763,97218,98026,98814,99693,100139,100735,101708,102329,102996,103634,104299,105100,105863,106756,107432,108150,108871,109647,111697,113530,114370,115326,116621,117885,118670,119949,121014,122187,123126,124093,125391,126596,128198,129786,131246,132803,134495,134539,134584,134669,134716,134826,134870,134978,135206,135552,135996,136559,137178,137779,138445,139235,139902,140942,142339,143816,145287,146674,148339,149968,151519,153150,154768,156446,158130,159843,161612,163304,164941,166516,168215,169894,171416,172975,174465,175866,176835,177689,178427,179098,179705,180341,180899,181458,182007,182429,182783,183041,183208,183285,183332,183377,183423,183561,185609,185745,185792,185837,185881,185926,185976,186023,186068,186112,186157,186227,186469,187235,188707,189965,191454,192912,194310,195589,196636,197748,198614,199270,200019,200924,201687,202511,203348,204272,205253,206170,207017,207761,208512,209405,210374,211199,211997,212805,213632,214381,215060,215598,216134,216328,216377,216424,216469,216515,216563,216612,216660,216705,216751,216799,216848,216895,218574,220231,221639,223023,224354,225674,227008,228333,229625,230934,232248,233622,234850,236050,237380,238548,239572,240607,241553,242475,243436,244223,244994,246008,247129,248243,249574,250974,252591,254259,255856,257477,259127,260525,261937,263139,264306,265534,266868,268356,269799,271195,272221,273211,274302,275498,276681,277952,279146,280425,281673,282931,284244,285593,286907,288238,289566,290895,292699,293857,293906,293953,293998,294042,294090,294306,294866,295719,296657,297789,299275,300953,302672,304465,306202,307918,309627,311386,313138,314947,316800,318576,320322,321786,323148,324544,325890,327639,329488,331283,333178,335082,336996,338938,340845,342679,344574,346435,348243,350018,351763,353423,355244,357131,358867,360198,361599,362873,363583,363760,363809,363854,363899,363944,363992,364041,364616,365471,366494,367710,368930,370039,370538,371658,372647,373558,374472,375773,377743,379178,380618,382112,383636,385176,386714,388227,389731,391249,392804,394478,396311,398192,400168,402173,404169,406179,408192,410212,412220,414152,416009,417776,419636,421524,423416,425335,427353,429349,431209,433072,434927,436695,438390,440143,441911,443738,445609,447550,449497,451510,453530,455520,457472,459234,460824,462339,463852,465353,466862,468373,469878,471377,472842,474282,475726,477231,479279,480609,481904,483192,484492,485803,487049,488411,489712,490943,492231,493547,494717,496072,497434,498880,500274,501735,503175,504566,506014,507534,509080,510583,512140,513676,515246,516904,518480,520091,521661,523251,524794,526310,527786,529411,531121,532756,534428,536108,537557,538926,540320,541680,542911,544181,545394,546630,547901,549085,550281,551494,552641,553870,555070,556344,557641,558887,560865,562227,563319,564442,565537,566600,567595,568669,569778,570837,571976,573105,574283,575466,576815,578163,579655,581185,582784,584355,585868,587522,589078,590484,591946,593550,595095,596607,598139,599528,600989,602334,603663,604980,606325,607584,609001,610431,611989,613524,615006,616488,617797,619012,620161,621175,622222,623241,624380,625529,626695,627668,628589,629608,630578,631474,632451,633492,635136,636948,638489,640083,641617,643246,644858,646517,648167,649711,651302,652955,654663,656140,657605,659193,660804,662361,664093,665774,667311,668964,670519,671973,673454,674927,676548,678082,679548,681040,682593,684136,685691,687194,688752,690307,691932,693586,695283,696957,698484,700010,701692,703319,704837,706215,707410,708902,710451,711997,713424,714984,716594,718267,719990,721683,723190,724754,726541,728389,729370,730364,731357,732408,733473,734567,735655,736755,737804,738809,739976,741119,742271,743380,744462,745646,746752,748001,749250,750462,751714,753030,754368,755604,756706,757808,758832,759909,760938,761909,762969,764019,764934,765882,766780,767740,768691,769767,770829,771819,772836,773814,774826,775801,776761,777744,778732,779789,780868,781932,783067,784147,785320,786360,787255,788132,789066,791114,792432,793711,794986,796276,797592,798844,800207,801484,802723,804019,805349,806476,807728,808967,810361,811703,813045,814395,815719,817146,818712,820327,821948,823431,824758,826106,827645,829193,830869,832596,834267,835786,837117,838428,839807,841326,842793,844334,845806,847220,848601,849991,851345,852572,853832,855050,856285,857535,858725,859906,861117,862268,863507,864714,865991,867288,868557,870550,872247,873812,875435,877006,878586,880165,881693,883316,884870,886422,888030,889701,891443,893231,895028,896842,898379,900040,901640,903388,905221,907060,908813,910636,912505,914363,916210,918118,919823,921635,923318,925064,926812,928522,930202,931944,933548,935368,937285,938984,940661,941992,943339,944669,945948,947452,948945,950418,951908,953459,954973,956484,958069,959544,961004,962455,963955,965789,967208,968044,968774,969624,970568,971399,972087,972947,973848,974655,975497,976242,977182,978231,979418,980688,981893,983191,984477,985917,987435,988979,990493,992119,993727,995372,996912,998539,1000139,1001760,1003382,1004935,1006402,1007837,1009343,1010862,1012397,1013876,1015333,1016790,1018198,1019508,1020790,1021902,1023192,1024358,1025541,1026553,1027576,1028588,1029673,1030672,1031655,1032683,1033636,1034655,1035439,1036598,1038599,1040358,1042194,1044081,1045929,1047724,1049560,1051410,1053261,1054971,1056641,1058197,1059660,1061186,1063233,1064885,1066722,1068617,1070496,1072366,1074243,1076161,1078049,1079752,1081461,1083044,1084544,1086023,1088050,1089766,1091620,1093506,1095395,1097307,1099121,1100895,1102508,1103983,1105443,1107011,1108650,1110284,1112206,1113891,1115767,1117778,1119432,1121431,1123334,1125044,1127061,1128844,1130132,1131633,1133245,1134727,1136281,1138237,1139664,1141055,1142706,1144264,1145741,1147584,1149315,1150589,1152191,1153790,1155372,1156964,1159020,1160674,1162350,1164040,1165803,1167578,1169318,1171038,1172830,1174605,1176446,1178263,1180158,1181912,1183651,1185437,1187212,1189052,1190886,1192715,1194523,1196381,1198189,1199965,1201743,1203506,1205255,1207027,1208701,1210477,1212255,1213996,1215733,1217537,1219353,1221104,1222871,1224620,1226336,1228054,1229764,1231509,1233241,1234963,1236657,1238293,1240152,1242022,1243895,1245740,1247567,1249382,1251265,1253144,1254959,1256684,1258361,1259922,1261964,1263960,1265904,1267796,1269732,1271705,1273609,1275503,1277418,1279323,1281209,1283059,1284956,1286825,1288660,1290417,1292186,1293926,1295753,1297575,1299357,1301204,1302985,1304856,1306690,1308496,1310255,1312012,1313717,1315318,1316876,1318480,1320177,1321972,1323750,1325476,1327238,1328917,1330624,1332349,1334044,1335793,1337580,1339381,1341176,1342871,1344765,1346668,1348597,1350495,1352302,1354143,1356030,1357938,1359854,1361750,1363669,1365543,1367546,1369573,1371525,1373488,1375504,1377497,1379492,1381498,1383475,1385419,1387336,1389269,1391244,1393249,1395208,1397149,1399047,1401030,1402984,1404963,1406901,1408928,1410941,1412937,1414849,1416777,1418657,1420607,1422475,1424148,1425937,1427711,1429591,1431494,1433428,1435400,1437370,1439349,1441333,1443284,1445188,1447176,1449126,1451006,1452851,1454700,1456557,1458403,1460210,1462020,1463820,1465646,1467476,1469246,1470957,1472578,1474163,1475591,1476963,1478010,1480058,1482106,1484154,1486202,1488250,1490298,1492346,1494394,1496442,1498490,1500538,1502586,1504634,1506682,1508730,1510778,1512826,1514874,1516922,1518970,1521018,1523066,1525114,1527162,1529210,1531258,1533306,1535354,1537402,1539459,1541507,1543555,1545603,1547651,1549699,1551747,1553795,1555843,1557891,1559939,1561987,1564035,1566083,1568131,1570179,1572227,1574275,1576323,1578371,1580419,1582467,1584515,1586563,1588611,1590659,1592707,1594755,1596803,1598851,1600899,1602947,1604995,1607043,1609091,1611139,1613187,1615235,1617283,1619331,1621379,1623427,1625475,1627523,1629571,1631619,1633667,1635715,1637763,1639811,1641859,1643907,1645955,1648003,1650051,1652099,1654147,1656195,1658243,1660291,1662339,1664387,1666435,1668483,1670531,1672579,1674627,1676684,1678732,1680780,1682837,1684885,1686933,1688981,1691029,1693077,1695125,1697173,1699221,1701269,1703317,1705365,1707413,1709461,1711509,1713557,1715605,1717653,1719701,1721749,1723797,1725845,1727893,1729941,1731989,1734037,1736085,1738133,1740181,1742229,1744277,1746325,1748373,1750421,1752478,1754526,1756574,1758622,1760670,1762718,1764766,1766814,1768862,1770910,1772967,1775015,1777063,1779111,1781159,1783207,1785255,1787303,1789351,1791399,1793447,1795495,1797543,1799591,1801639,1803687,1805735,1807783,1809831,1811879,1813927,1815975,1818023,1820071,1822119,1824167,1826215,1828263,1830311,1832359,1834407,1836455,1838503,1840551,1842599,1844647,1846695,1848743,1850791,1852839,1854887,1856944,1858992,1861040,1863088,1865136,1867184,1869232,1871280,1873328,1875376,1877424,1879472,1881520,1883568,1885616,1887664,1889712,1891760,1893808,1895856,1897904,1899952,1902000,1904048,1906096,1908144,1910192,1912240,1914288,1916336,1918384,1920432,1922480,1924528,1926576,1928624,1930672,1932720,1934768,1936816,1938864,1940912,1942960,1945008,1947056,1949104,1951152,1953200,1955248,1957296,1959344,1961392,1963440,1965488,1967536,1969584,1971632,1973680,1975728,1977776,1979824,1981872,1983920,1985968,1988016,1990064,1992112,1994160,1996208,1998256,2000304,2002166,2003642,2004985,2006407,2007947,2009531,2011008,2012474,2013936,2015128,2016382,2017866,2019388,2020627,2021843,2023253,2024745,2026219,2027689,2029165,2030546,2031943,2033314,2034823,2036245,2037739,2039224,2040696,2042222,2043649,2045192,2046710,2048291,2049744,2051260,2052840,2054353,2055879,2057388,2058794,2060346,2061943,2063460,2064864,2066322,2067776,2069434,2071071,2072708,2074367,2075898,2077452,2079161,2080836,2082321,2083952,2085565,2087171,2089173,2090226,2091326,2092498,2093618,2094638,2095561,2096630,2097764,2098874,2100036,2101139,2102382,2103566,2104922,2106336,2107826,2109362,2110980,2112537,2114098,2115716,2117191,2118575,2120113,2121701,2123223,2124799,2126314,2127672,2129146,2130427,2131765,2133157,2134403,2135712,2137165,2138640,2140168,2141671,2143154,2144599,2145876,2147054,2148125,2149158,2150204,2151238,2152380,2153569,2154672,2155531,2156574,2157640,2158551,2159483,2160455,2161531,2163557,2164783,2165829,2167023,2168118,2169153,2170152,2171219,2172329,2173397,2174549,2175754,2177082,2178304,2179639,2181228,2182740,2184175,2185718,2187185,2188672,2190267,2191808,2193263,2194834,2196424,2197971,2199481,2200951,2202453,2204093,2205734,2207510,2209387,2211279,2212966,2214653,2216464,2218243,2219888,2221468,2222994,2224329,2225656,2226835,2227777,2228931,2229972,2231132,2232302,2233444,2234380,2235346,2236383,2237319,2238241,2239240,2240305,2242085,2243840,2245362,2246882,2248414,2249969,2251490,2252981,2254522,2256037,2257517,2259056,2260671,2262380,2264138,2265912,2267662,2269263,2270876,2272442,2274187,2275973,2277799,2279488,2281255,2283043,2284911,2286644,2288489,2290016,2291802,2293519,2295256,2296946,2298633,2300231,2301841,2303439,2305221,2307110,2308787,2310552,2311821,2313145,2314469,2315727,2317145,2318596,2320070,2321501,2322964,2324433,2325863,2327342,2328807,2330195,2331586,2333035,2334800,2336773,2338444,2340113,2341810,2343584,2345324,2347064,2348799,2350590,2352404,2354212,2356057,2357942,2359680,2361429,2363206,2365008,2366844,2368678,2370479,2372342,2374168,2375961,2377720,2379480,2381238,2383024,2384765,2386494,2388290,2390028,2391773,2393511,2395346,2397126,2398905,2400662,2402413,2404122,2405831,2407556,2409305,2411036,2412740,2414402,2416111,2417973,2419860,2421715,2423554,2425356,2427197,2429099,2430960,2432744,2434456,2436098,2437579,2438616,2440664,2442712,2444760,2446808,2448856,2450904,2452952,2455000,2457048,2459096,2461144,2463192,2465240,2467288,2469336,2471384,2473432,2475480,2477528,2479576,2481624,2483672,2485720,2487768,2489816,2491864,2493912,2495960,2498008,2500065,2502113,2504161,2506209,2508257,2510305,2512353,2514401,2516449,2518497,2520545,2522593,2524641,2526689,2528737,2530785,2532833,2534881,2536929,2538977,2541025,2543073,2545121,2547169,2549217,2551265,2553313,2555361,2557409,2559457,2561505,2563553,2565601,2567649,2569697,2571745,2573780,2574990,2576334,2577673,2579135,2580604,2582132,2583616,2585042,2586477,2587960,2589437,2590867,2592320,2593668,2595049,2596003,2596756,2597837,2599141,2600685,2602335,2604128,2605966,2607826,2609717,2611562,2613320,2615096,2616378,2618152,2619913,2621762,2623645,2625485,2627300,2629087,2630876,2632546,2633977,2635156,2636141,2637249,2638618,2639771,2641022,2642349,2643491,2644732,2645966,2647365,2648830,2650288,2651808,2653216,2654630,2656029,2657369,2659425,2660889,2662294,2663770,2665306,2666818,2668282,2669832,2671312,2672775,2674281,2675895,2677508,2678927,2680522,2682202,2683852,2685538,2687313,2689045,2690691,2692414,2693986,2695556,2697065,2698628,2700210,2701817,2703392,2705000,2706634,2708230,2709775,2711323,2712945,2714545,2716181,2717767,2719395,2720945,2722532,2724137,2725788,2727409,2728972,2730263,2731463,2732946,2734436,2735875,2737208,2738682,2740202,2741801,2743425,2744862,2746239,2747745,2749690,2751276,2752733,2754109,2755535,2756961,2758305,2759772,2761246,2762618,2764034,2765515,2767036,2768159,2769620,2771160,2772699,2774238,2775959,2777596,2779138,2780760,2782265,2783728,2785153,2786721,2788264,2789816,2791252,2792774,2794300,2795847,2797279,2798768,2800365,2801881,2803447,2805019,2806594,2808203,2809752,2811255,2812819,2814305,2815704,2816917,2817815,2819113,2820481,2821851,2823122,2824556,2826018,2827533,2829092,2830501,2831828,2833211,2834951,2836860,2838491,2840171,2841810,2843603,2845375,2847120,2848860,2850469,2852165,2853930,2855761,2857321,2858820,2860462,2862116,2863744,2865509,2867283,2868917,2870626,2872275,2873796,2875313,2876827,2878502,2880162,2881645,2883201,2884804,2886445,2888102,2889698,2891367,2893077,2894773,2896500,2898256,2900000,2901611,2903191,2904910,2906563,2908147,2909574,2910832,2912460,2914156,2915857,2917409,2919077,2920784,2922555,2924384,2926198,2927826,2929466,2931255,2933071,2933648,2934268,2934869,2935521,2936200,2936912,2937748,2938751,2939766,2940827,2941704,2943033,2944482,2946056,2947694,2949097,2950318,2951850,2953447,2955119,2956922,2958571,2960153,2961883,2963549,2965170,2966942,2968569,2970151,2971938,2973609,2975315,2977113,2978795,2980399,2982056,2983812,2985564,2987347,2989067,2990454,2991916,2993293,2994478,2995665,2997088,2998435,2999654,3000926,3002189,3003550,3005053,3006621,3008135,3009678,3011267,3012887,3013865,3015913,3017961,3020009,3022057,3024105,3026153,3028201,3030249,3032297,3034345,3036393,3038441,3040489,3042537,3044585,3046633,3048681,3050729,3052777,3054825,3056873,3058921,3060969,3063017,3065065,3067113,3069161,3071209,3073257,3075305,3077353,3079401,3081449,3083497,3085545,3087593,3089641,3091689,3093737,3095785,3097833,3099881,3101929,3103977,3106025,3108073,3110121,3112169,3114217,3116265,3118313,3120361,3122409,3124457,3126505,3128553,3130601,3132649,3134697,3136745,3138793,3140841,3142889,3144937,3146985,3149033,3151081,3153129,3155177,3157225,3159273,3161321,3163369,3165417,3167465,3169513,3171561,3173609,3175657,3177705,3179753,3181801,3183849,3185897,3187945,3189993,3192041,3194089,3196137,3198185,3200233,3202281,3204329,3206377,3208425,3210473,3212521,3214569,3216617,3218665,3220713,3222761,3224809,3226857,3228905,3230953,3233001,3235049,3237097,3239145,3241193,3243241,3245289,3247337,3249385,3251433,3253481,3255529,3257577,3259625,3261673,3263721,3265769,3267817,3269865,3271913,3273961,3276009,3278057,3280105,3282153,3284201,3286249,3288297,3290345,3292393,3294441,3296489,3298537,3300585,3302633,3304681,3306729,3308777,3310825,3312873,3314921,3316969,3319017,3321065,3323113,3325161,3327209,3329257,3331305,3333353,3335401,3337449,3339497,3341545,3343593,3345641,3347689,3349737,3351792,3353840,3355888,3357936,3359984,3362032,3364080,3366128,3368176,3370224,3372272,3374320,3376368,3378416,3380464,3382512,3384560,3386608,3388656,3390704,3392760,3394802,3396806,3398843,3400895,3402951,3404999,3407047,3409097,3411145,3413193,3415241,3417289,3419337,3421385,3423433,3425481,3427529,3429577,3431625,3433673,3435721,3437769,3439817,3441865,3443913,3445961,3448009,3450057,3452105,3454153,3456201,3458249,3460297,3462345,3464393,3466441,3468489,3470537,3472585,3474633,3476681,3478729,3480777,3482825,3484873,3486921,3488969,3491018,3493035,3495058,3497108,3499164,3501219,3503267,3505324,3507370,3509418,3511466,3513514,3515562,3517610,3519658,3521706,3523754,3525802,3527850,3529898,3531946,3533994,3536042,3538090,3540138,3542186,3544234,3546282,3548330,3550378,3552426,3554474,3556522,3558570,3560618,3562666,3564714,3566762,3568810,3570858,3572906,3574962,3577010,3579058,3581106,3583154,3585202,3587250,3589300,3591335,3593335,3595383,3597435,3599483,3601531,3603588,3605635,3607683,3609731,3611779,3613827,3615875,3617923,3619971,3622019,3624067,3626115,3628163,3630211,3632259,3634307,3636355,3638403,3640451,3642499,3644547,3646595,3648643,3650691,3652739,3654787,3656835,3658883,3660931,3662979,3665027,3667075,3669123,3671171,3673219,3675267,3677315,3679363,3681411,3683459,3685507,3687555,3689603,3691651,3693699,3695747,3697795,3699843,3701891,3703939,3705995,3708043,3710091,3712139,3714187,3716235,3718283,3720331,3722379,3724427,3726475,3728523,3730571,3732619,3734667,3736715,3738763,3740811,3742859,3744907,3746955,3749003,3751051,3753099,3755147,3757195,3759243,3761291,3763339,3765387,3767435,3769483,3771531,3773579,3775627,3777675,3779723,3781771,3783819,3785867,3787915,3789963,3792011,3794059,3796107,3798155,3800203,3802251,3804299,3806347,3808395,3810443,3812491,3814539,3816587,3818635,3820683,3822731,3824779,3826827,3828875,3830923,3832971,3835019,3837067,3839115,3841163,3843211,3845259,3847307,3849355,3851403,3853451,3855499,3857547,3859595,3861643,3863691,3865739,3867787,3869844,3871900,3873936,3875944,3877982,3880034,3882082,3884130,3886178,3888228,3890276,3892324,3894372,3896420,3898468,3900516,3902564,3904612,3906660,3908708,3910756,3912804,3914852,3916900,3918948,3920996,3923044,3924587,3926035,3927405,3928688,3929800,3930786,3931866,3932972,3934072,3935244,3936325,3937502,3938739,3939847,3941026,3942040,3943195,3944259,3945485,3946654,3947830,3948976,3950037,3950982,3951925,3952733,3953718,3954712,3955315,3956301,3957095,3957922,3958848,3959200,3959551,3959915,3961176,3962436,3963954,3965428,3966924,3968403,3969203,3970257,3971296,3972184,3973055,3973930,3975333,3976778,3978095,3979363,3980440,3981486,3982646,3983749,3984727,3986005,3987094,3988195,3989352,3990445,3991715,3992718,3993863,3994966,3996105,3997330,3998623,3999668,4000808,4001724,4002687,4003507,4004513,4005537,4006106,4007084,4007856,4008632,4009536,4009887,4010240,4010601,4011854,4013159,4014678,4016126,4017609,4018976,4019976,4021153,4022038,4022929,4023742,4024888,4026862,4026910,4026957,4027002,4027060,4027161,4027288,4027466,4027648,4027811,4028044,4028277,4028541,4029019,4029894,4030914,4031921,4033016,4034399,4035986,4037555,4039203,4040840,4042564,4044319,4046074,4047731,4049272,4050852,4052442,4054147,4055783,4057518,4059297,4061004,4062626,4064256,4065861,4067503,4069120,4070358,4071299,4072306,4073162,4073771,4074101,4074322,4074474,4074591,4074696,4074863,4075015,4075084,4075150,4075196,4075244,4075293,4075340,4075938,4076657,4078626,4079075,4079250,4079469,4079648,4079899,4080214,4080655,4081024,4081392,4081804,4082126,4082463,4083113,4083895,4084846,4085756,4086877,4088063,4089591,4091273,4093047,4094835,4096613,4098487,4100296,4102079,4103713,4105405,4107100,4108926,4110778,4112640,4114510,4116337,4118093,4119990,4121850,4123735,4125570,4127192,4128165,4129076,4130010,4130741,4131300,4131746,4132081,4132426,4132751,4133143,4133542,4133803,4133965,4134114,4134306,4134520,4134676,4136188,4137830,4139072,4140476,4141724,4142984,4144373,4145796,4147156,4148540,4149852,4151259,4152770,4154215,4155585,4157044,4158518,4159949,4161424,4162825,4164400,4165789,4167136,4168512,4169923,4171262,4172392,4173577,4174941,4176272,4177633,4179010,4180397,4181626,4182984,4184417,4185764,4187048,4188400,4189882,4191391,4192792,4194308,4195646,4197029,4198460,4199915,4201338,4202839,4204248,4205576,4206955,4208221,4209637,4211037,4212293,4213500,4214701,4216133,4216902,4217964,4219013,4221027,4221074,4221119,4221163,4221253,4222274,4223251,4224256,4225495,4226889,4228483,4229767,4231522,4233345,4235115,4236771,4238463,4239960,4240730,4242121,4243743,4245520,4247332,4249065,4250857,4252682,4254471,4256141,4257760,4259420,4261130,4263039,4264872,4266769,4268621,4270421,4272235,4274136,4275993,4277866,4279783,4281437,4283019,4284565,4286206,4287884,4289243,4290463,4291844,4293022,4294241,4295331,4296080,4297004,4297167,4297216,4297262,4297307,4298107,4299119,4299989,4300668,4301485,4302631,4303965,4305306,4306660,4307237,4307855,4308809,4309911,4310894,4311541,4312213,4312914,4313591,4314286,4315146,4316047,4316956,4317851,4318807,4319759,4320663,4321586,4322399,4323293,4324195,4325168,4326081,4327040,4327661,4328475,4329120,4329878,4330615,4331436,4332306,4333118,4334135,4334774,4335545,4336360,4337160,4338005,4338871,4339666,4340656,4341555,4342393,4343245,4344088,4344887,4345918,4346689,4347539,4349167,4350670,4352156,4353616,4355305,4356897,4358411,4360017,4361570,4363075,4364612,4366222,4367820,4369373,4370856,4372554,4373847,4375330,4376890,4378514,4380105,4381523,4383127,4384571,4386246,4387873,4389467,4390966,4392326,4393482,4394664,4395941,4397325,4398566,4399622,4400816,4401941,4403033,4404240,4405471,4406814,4407962,4408867,4409648,4410368,4412095,4413559,4415044,4416492,4417917,4419255,4420566,4421856,4423035,4424391,4425750,4427055,4428188,4429150,4430095,4430830,4431560,4433340,4434863,4436406,4437846,4439307,4440649,4441938,4443203,4444350,4445668,4447000,4448252,4449314,4450124,4450890,4451519,4453025,4454649,4456162,4457585,4459067,4460476,4461728,4463134,4464317,4465546,4466930,4468293,4469539,4470679,4471612,4472538,4473214,4474001,4475831,4477292,4478760,4480164,4481611,4483117,4484617,4486087,4487312,4488372,4489209,4489968,4490793,4491699,4492573,4493850,4495532,4497059,4498474,4499903,4501295,4502504,4503904,4505069,4506344,4507705,4509008,4510222,4511289,4512244,4513120,4513762,4514930,4516772,4518303,4519702,4520979,4522109,4523493,4524945,4526391,4527409,4528348,4529576,4531260,4532883,4534499,4535981,4537241,4538383,4539842,4541300,4542581,4543687,4544896,4546211,4547469,4548599,4549489,4551232,4552921,4554752,4556555,4558320,4560050,4561346,4563078,4564980,4566835,4568541,4570368,4572338,4573922,4575022,4576352,4577692,4579049,4580355,4582296,4583914,4585129,4586457,4587811,4589194,4590502,4592282,4593235,4594102,4595071,4596863,4598083,4598907,4599813,4601243,4602955,4604177,4605740,4607444,4608954,4610614,4612370,4614259,4615546,4616902,4618578,4620150,4621680,4623490,4625379,4627168,4628365,4629884,4631608,4633150,4634822,4636720,4638540,4640311,4641500,4643067,4644815,4646423,4648152,4650050,4651926,4653549,4654790,4656381,4658136,4659712,4661338,4663206,4665075,4666741,4668051,4669654,4671392,4672898,4674503,4676346,4678212,4679801,4681036,4682614,4684315,4685822,4687496,4689282,4691157,4692431,4693828,4695511,4697060,4698612,4700357,4702054,4703823,4705000,4706555,4708292,4709808,4711459,4713238,4715094,4716522,4717837,4719499,4721164,4722683,4724427,4726276,4727967,4729586,4731158,4732868,4734337,4735922,4737545,4739120,4740696,4742259,4743831,4745320,4746928,4748484,4750017,4751620,4753061,4754556,4756026,4757360,4759023,4760491,4761779,4762877,4763994,4765297,4766660,4767795,4769033,4770621,4772168,4773538,4774839,4776129,4777489,4778991,4780201,4781496,4782741,4784044,4785726,4786324,4786369,4786410,4786455,4786503,4786566,4786873,4787471,4788222,4789046,4789947,4790953,4791889,4792922,4793900,4794951,4796163,4797376,4798704,4799933,4801164,4802509,4803700,4804880,4806085,4807057,4808268,4809368,4810450,4811617,4812695,4813674,4814626,4815469,4816077,4816799,4817532,4817971,4818057,4818105,4818152,4818197,4818241,4818804,4820202,4820946,4821636,4822679,4823832,4825247,4826331,4827248,4828325,4829266,4830154,4830828,4831601,4832529,4833498,4834515,4835701,4836836,4838029,4839278,4840582,4841769,4843072,4844461,4845768,4847145,4848455,4849804,4851073,4852039,4852897,4853566,4854082,4854566,4855220,4856097,4856971,4857768,4858595,4859507,4860569,4861434,4862367,4863403,4864494,4865541,4866524,4867562,4868632,4869964,4870622,4872007,4872710,4873631,4874852,4876188,4876886,4877714,4878691,4880665,4881799,4883022,4884412,4885759,4887272,4888708,4890294,4891974,4893760,4895583,4897401,4899204,4900917,4902666,4904340,4905955,4907737,4909372,4911021,4912595,4914242,4915845,4917325,4918950,4920626,4922290,4923806,4925391,4926946,4928539,4930036,4931327,4932388,4933606,4935238,4936773,4938361,4939924,4941468,4942813,4944174,4945627,4947410,4948628,4949306,4950301,4951399,4952524,4953795,4955133,4956514,4957800,4959263,4960745,4962075,4963026,4963848,4964896,4966165,4967551,4968819,4970067,4971348,4972452,4973643,4974793,4976019,4977333,4978549,4979765,4981160,4982520,4983762,4985078,4986442,4987760,4989093,4990351,4991601,4992804,4993895,4994870,4995951,4997104,4998354,4999540,5000888,5001666,5002666,5003833,5005024,5005806,5006898,5008902,5009888,5010892,5011700,5013478,5014356,5015259,5015988,5017041,5018089,5019123,5020110,5021144,5022316,5023587,5025053,5026704,5028340,5030002,5031560,5032891,5034305,5035787,5037399,5039020,5040676,5042319,5043985,5045592,5047179,5048646,5050183,5051658,5053477,5055312,5057188,5059034,5060796,5062573,5064146,5065584,5066922,5068301,5069631,5070927,5072066,5072772,5073604,5074768,5075849,5076954,5077949,5078913,5079996,5080660,5081822,5082879,5083585,5084504,5085772,5087158,5088290,5088927,5089497,5090166,5090740,5091298,5091903,5092456,5093355,5094424,5095528,5096662,5097654,5098455,5099246,5100079,5100864,5101668,5102714,5103639,5104484,5105433,5106323,5107157,5108049,5108825,5109725,5110711,5111661,5112582,5113590,5114187,5114924,5115585,5116291,5117017,5117964,5118861,5119670,5120608,5121448,5122295,5123169,5124048,5124820,5125918,5127439,5129248,5130458,5132268,5134269,5136139,5137907,5139600,5141367,5143084,5144827,5146608,5148502,5150461,5152242,5152292,5152339,5152384,5152428,5152473,5152523,5152570,5152615,5152659,5152704,5152754,5152801,5153237,5153998,5155300,5156730,5158181,5159715,5161247,5162701,5164190,5165741,5167408,5169100,5170814,5172563,5174306,5175966,5177678,5179317,5180906,5182541,5184172,5185787,5187360,5188663,5189993,5191204,5192398,5193502,5194112,5194517,5194784,5194948,5195080,5195129,5195176,5195221,5195267,5195315,5195364,5195412,5195457,5195503,5195551,5195600,5195653,5197701,5199749,5201797,5203845,5205893,5207941,5209989,5212037,5214085,5216133,5218181,5220229,5222277,5224325,5226373,5228421,5230469,5232517,5234565,5236613,5238661,5240709,5242757,5244805,5246853,5248901,5250949,5252997,5254863,5256204,5257338,5258503,5259766,5260906,5262057,5263263,5264386,5265614,5266876,5268178,5269500,5270777,5272178,5273488,5275072,5276729,5278244,5279716,5281096,5282485,5284026,5285610,5286998,5288389,5290069,5291661,5293165,5294664,5296078,5297723,5299061,5300433,5301852,5303349,5304814,5306237,5307404,5308686,5310000,5311254,5312516,5313552,5314600,5315479,5316576,5317642,5318706,5319584,5320330,5321005,5321851,5322624,5323196,5323837,5324477,5325389,5327405,5328827,5329931,5331000,5332128,5333194,5334429,5335799,5336975,5338215,5339419,5340607,5341881,5343172,5344508,5346068,5347723,5349459,5351225,5353000,5354784,5356424,5358130,5359458,5361051,5362439,5363989,5365607,5367168,5368507,5370129,5371772,5373390,5375044,5376569,5378215,5379744,5381075,5382413,5383771,5384964,5386056,5387128,5388138,5389133,5390124,5391017,5392046,5393075,5394117,5395134,5396026,5396824,5397507,5397895,5398388,5398782,5399120,5401141,5401989,5402672,5403345,5403974,5404673,5405351,5406033,5406723,5407389,5408037,5408734,5409419,5410237,5411606,5413241,5414743,5416321,5417910,5419590,5421154,5422696,5424197,5425534,5426485,5427269,5428842,5430225,5431722,5433264,5434772,5436248,5437760,5439105,5440366,5441493,5442465,5443734,5445202,5446715,5448150,5449663,5451097,5452425,5453602,5454414,5455115,5455826,5456476,5457109,5457777,5458485,5459172,5459830,5460459,5461154,5461810,5462497,5464197,5465390,5466021,5466718,5467372,5468065,5468738,5469404,5470077,5470775,5471463,5472099,5472764,5473460,5474430,5476033,5477626,5479247,5480933,5482653,5484270,5485832,5487297,5488745,5490149,5491434,5492775,5494085,5495389,5496647,5497920,5499274,5500576,5501816,5503124,5504778,5506471,5508073,5509709,5511370,5512939,5514406,5515682,5516776,5517675,5518456,5519150,5519811,5520477,5521164,5521830,5522503,5523177,5523835,5524539,5525223,5525838,5526499,5527812,5529818,5530121,5530585,5531118,5531751,5532435,5533242,5534151,5535053,5536064,5537172,5538208,5539401,5540802,5542322,5543900,5545479,5547084,5548592,5550068,5551502,5552934,5554412,5555813,5557239,5558774,5560191,5561689,5563073,5564394,5565684,5567119,5568530,5570005,5571618,5573183,5574670,5576100,5577339,5578452,5579656,5580936,5582213,5583491,5584658,5585830,5586942,5587947,5588928,5589950,5590976,5591977,5592946,5593822,5594599,5595325,5595895,5596228,5598094,5598709,5599053,5599547,5600154,5600834,5601570,5602384,5603306,5604223,5605233,5606307,5607483,5608744,5610146,5611731,5613401,5615097,5616786,5618455,5620067,5621496,5622952,5624261,5625571,5626903,5628340,5629768,5631167,5632626,5634103,5635560,5636959,5638395,5639866,5641324,5642772,5644378,5646056,5647673,5649169,5650445,5651729,5652934,5654189,5655405,5656546,5657773,5658948,5660027,5661078,5662125,5663083,5663928,5664739,5665417,5666000,5666444,5667927,5669013,5669378,5669906,5670533,5671190,5671902,5672757,5673631,5674552,5675652,5676696,5677797,5679261,5680812,5682292,5683798,5685354,5686838,5688275,5689513,5690816,5692164,5693522,5694901,5696282,5697699,5699119,5700437,5701720,5703092,5704449,5705841,5707182,5708523,5709841,5711126,5712608,5714136,5715698,5717295,5718714,5720120,5721532,5722836,5724052,5725255,5726491,5727663,5728734,5729808,5730816,5731809,5732689,5733541,5734201,5734887,5735336,5736332,5738029,5739743,5741229,5742941,5744793,5746841,5748889,5750937,5752985,5755033,5757081,5759129,5761177,5763225,5765273,5767321,5769369,5771417,5773465,5775513,5777561,5779609,5781657,5783705,5785753,5787801,5789849,5791897,5793945,5795993,5797991,5800013,5802026,5804032,5806080,5808062,5810046,5812094,5814077,5816125,5818129,5820177,5822044,5823982,5826030,5827813,5829866,5831782,5833751,5835724,5837710,5839684,5841648,5843624,5845598,5847117,5848029,5848815,5849592,5850427,5851373,5852300,5853499,5854428,5855296,5856177,5857118,5858078,5858942,5859834,5860552,5861425,5862358,5863165,5863984,5864844,5865641,5866851,5868068,5868772,5869346,5870472,5871729,5873030,5874287,5875655,5876192,5876646,5877225,5877823,5878372,5879014,5879970,5880954,5882026,5883045,5883705,5884634,5885359,5886305,5887303,5888322,5889293,5890168,5890937,5891471,5892039,5892777,5893427,5894141,5895376,5895847,5896668,5897305,5898008,5898749,5899382,5900536,5901416,5902444,5903523,5904310,5904987,5905516,5906062,5906610,5907298,5908026,5908911,5909606,5910320,5910974,5911806,5912968,5913880,5914758,5915663,5916640,5917641,5918433,5919455,5920201,5921144,5922242,5923158,5924014,5924759,5925739,5926009,5926649,5927518,5928517,5928913,5929482,5930440,5931104,5931818,5932396,5932995,5933696,5934623,5935574,5936448,5937058,5937740,5938486,5939371,5941276,5942936,5944538,5945992,5947418,5948801,5950287,5951840,5953804,5955559,5957336,5958940,5960395,5961809,5963204,5964694,5966226,5968282,5969942,5971546,5973260,5974922,5976545,5978177,5979903,5981650,5983442,5985186,5986917,5988645,5990110,5991359,5992590,5993828,5995440,5997050,5998711,6000497,6002258,6003990,6005697,6007386,6009162,6010883,6012560,6014262,6015957,6017713,6019457,6021205,6022910,6024678,6026442,6028213,6029917,6031703,6033450,6035050,6036617,6038160,6039484,6040795,6042077,6043526,6045024,6046552,6048208,6049839,6051444,6053149,6054680,6056227,6057879,6059503,6061089,6063062,6064701,6066134,6067629,6069144,6070681,6072127,6073663,6075157,6076590,6078092,6079675,6081306,6082727,6084270,6085951,6087621,6089309,6091104,6092866,6094520,6096259,6097838,6099411,6100972,6102492,6104089,6105703,6107296,6108919,6110532,6112131,6113717,6115261,6116838,6118447,6120121,6121701,6123359,6124927,6126489,6128079,6129746,6131362,6132956,6134343,6135500,6136945,6138450,6139916,6141282,6142753,6144272,6145846,6147450,6148962,6150359,6151826,6153624,6155417,6156647,6157860,6159100,6160334,6161571,6162846,6164095,6165379,6166614,6167898,6169193,6170761,6172071,6173349,6174637,6175961,6177290,6178622,6179918,6181142,6182403,6183695,6184976,6186197,6187477,6188715,6189963,6191234,6192481,6193704,6194930,6196131,6197367,6198589,6199811,6201050,6202292,6203535,6204784,6206030,6207284,6208556,6209852,6211131,6212625,6213968,6215257,6216542,6217842,6219156,6220466,6221773,6222996,6224285,6225554,6226807,6228247,6230297,6232041,6233805,6235597,6237364,6239159,6240967,6242752,6244521,6246280,6248081,6249825,6251563,6253244,6254962,6256631,6258275,6259930,6261503,6263123,6264792,6266442,6268082,6269691,6271395,6273128,6274842,6276630,6278337,6280114,6281860,6283656,6285390,6287128,6288892,6290524,6292198,6293893,6295525,6297232,6298861,6300550,6302263,6303945,6305651,6307358,6309139,6310841,6312594,6314347,6316120,6317873,6319617,6321358,6323100,6324878,6326655,6328411,6329246,6330636,6332496,6334544,6336592,6338640,6340688,6342736,6344784,6346832,6348880,6350928,6352976,6355024,6357072,6359120,6361168,6363216,6365264,6367312,6369360,6371408,6373456,6375504,6377552,6379600,6381648,6383696,6385744,6387792,6389840,6391888,6393936,6395984,6398032,6400080,6402128,6404185,6406233,6408281,6410329,6412377,6414425,6416473,6418521,6420569,6422617,6424665,6426713,6428761,6430809,6432857,6434905,6436953,6439001,6441049,6443097,6445145,6447193,6449241,6451289,6453337,6455385,6457433,6459481,6461529,6463577,6465625,6467673,6469721,6471769,6473817,6475865,6477913,6479961,6482009,6484057,6486105,6488153,6490201,6492249,6494297,6496345,6498393,6500441,6502489,6504537,6506585,6508633,6510690,6512738,6514786,6516834,6518882,6520930,6522978,6525026,6527074,6529122,6531170,6533218,6535266,6537314,6539362,6541410,6543458,6545506,6547554,6549602,6551650,6553698,6555746,6557794,6559842,6561890,6563938,6565986,6568034,6570082,6572130,6574178,6576226,6578274,6580322,6582370,6584418,6586466,6588514,6590562,6592610,6594658,6596706,6598754,6600802,6602850,6604898,6606946,6608994,6611042,6613090,6615138,6617186,6619234,6621282,6623330,6625378,6627426,6629474,6631522,6633570,6635618,6637666,6639714,6641762,6643810,6645858,6647906,6649954,6652002,6654050,6656098,6658146,6660194,6662242,6664290,6666338,6668386,6670434,6672482,6674530,6676578,6678626,6680674,6682722,6684770,6686818,6688866,6690914,6692962,6695010,6697058,6699106,6701154,6703202,6705250,6707298,6709346,6711394,6713442,6715490,6717538,6719586,6721634,6723682,6725730,6727778,6729826,6731874,6733922,6735970,6738018,6740066,6742114,6744162,6746210,6748258,6750306,6752354,6754402,6756450,6758498,6760546,6762594,6764642,6766690,6768738,6770786,6772834,6774882,6776930,6778978,6781026,6783074,6785122,6787170,6789218,6791266,6793314,6795362,6797410,6799458,6801506,6803554,6805602,6807650,6809698,6811746,6813794,6815842,6817890,6819938,6821986,6824034,6826082,6828130,6830178,6832226,6834274,6836322,6838370,6840418,6842466,6844514,6846562,6848610,6850658,6852706,6854754,6856802,6858850,6860898,6862946,6864994,6867042,6869090,6871138,6873186,6875234,6877282,6879330,6881378,6883426,6885474,6887522,6889570,6891618,6893666,6895714,6897762,6899810,6901858,6903906,6905954,6908002,6910050,6912098,6914146,6916194,6918242,6920290,6922338,6924386,6926434,6928482,6930530,6932578,6934626,6936674,6938722,6940770,6942818,6944866,6946914,6948962,6951010,6953058,6955106,6957154,6959202,6961250,6963298,6965346,6967394,6969442,6971490,6973538,6975586,6977634,6979682,6981730,6983778,6985826,6987874,6989922,6991970,6994018,6996066,6998114,7000162,7002210,7004258,7006306,7008354,7010402,7012450,7014498,7016546,7018594,7020642,7022690,7024738,7026786,7028834,7030882,7032930,7034978,7037026,7039074,7041122,7043170,7045218,7047266,7049314,7051362,7053410,7055458,7057506,7059554,7061602,7063650,7065698,7067746,7069794,7071842,7073890,7075938,7077986,7080034,7082082,7084130,7086178,7088226,7090274,7092322,7094370,7096418,7098466,7100514,7102562,7104610,7106658,7108706,7110754,7112802,7114850,7116898,7118946,7120994,7123042,7125090,7127138,7129186,7131234,7133282,7135330,7137378,7139426,7141474,7143522,7145570,7147618,7149666,7151714,7153762,7155810,7157858,7159906,7161954,7164002,7166050,7168098,7170155,7172203,7174251,7176299,7178347,7180395,7182443,7184491,7186539,7188587,7190635,7192683,7194731,7196779,7198827,7200875,7202923,7204971,7207019,7209067,7211115,7213163,7215211,7217259,7219307,7221355,7223403,7225451,7227499,7229547,7231595,7233643,7235691,7237739,7239787,7241835,7243883,7245931,7247979,7250027,7252075,7254123,7256171,7258219,7260267,7262315,7264363,7266411,7267538,7268244,7268897,7269495,7270085,7270688,7271317,7271974,7272639,7273187,7273765,7274425,7275863,7276342,7276885,7277522,7278087,7278545,7278927,7279337,7280305,7281937,7283575,7284689,7285727,7287073,7288338,7289394,7290951,7292094,7293195,7294913,7296395,7297298,7298206,7299447,7299803,7300251,7300745,7301214,7301734,7302199,7302713,7303058,7303410,7303672,7303965,7304280,7305218,7307096,7308704,7310517,7312111,7313836,7315216,7316354,7317483,7318509,7319716,7320899,7321916,7323068,7323922,7325111,7326214,7326761,7327969,7329147,7330237,7331313,7332507,7333314,7334466,7335479,7336433,7337607,7338503,7339671,7340410,7341360,7342371,7343281,7344570,7345324,7346539,7347445,7348563,7349644,7350734,7352066,7352932,7354034,7355119,7356003,7357157,7357882,7359121,7359436,7359751,7360069,7361207,7362221,7363313,7364180,7365689,7366592,7368422,7369355,7370873,7372375,7374241,7375735,7377242,7378800,7380399,7381999,7383623,7385231,7386907,7388561,7390180,7391817,7393502,7395123,7396761,7398406,7399997,7401626,7403278,7405009,7406706,7408393,7410169,7411937,7413727,7415376,7417084,7418860,7420667,7422488,7424292,7426165,7428053,7429950,7431836,7433726,7435591,7437355,7439166,7440994,7442809,7444634,7446399,7448211,7450032,7451791,7453508,7455057,7456649,7458262,7459879,7461430,7462874,7464431,7466038,7467658,7469355,7471103,7473107,7474553,7475962,7477448,7478988,7480448,7481936,7483491,7484953,7486423,7487967,7489599,7491141,7492587,7494241,7495933,7497586,7499320,7501103,7502803,7504477,7506158,7507732,7509319,7510818,7512401,7514024,7515616,7517182,7518806,7520465,7522039,7523605,7525161,7526815,7528437,7530080,7531706,7533323,7534898,7536441,7538044,7539693,7541281,7542830,7544057,7545327,7546802,7548323,7549720,7551092,7552589,7554156,7555785,7557387,7558820,7560219,7561710,7563765,7564453,7565101,7565781,7566313,7566975,7567679,7568477,7569277,7570336,7571310,7572379,7573315,7574547,7575799,7577058,7578298,7579597,7581002,7582414,7583770,7585204,7586604,7588031,7589420,7590876,7592442,7593817,7595255,7596705,7597979,7598974,7599991,7600894,7602210,7603452,7604716,7605942,7606985,7608070,7609044,7610055,7611038,7611875,7612823,7613773,7614574,7615332,7616164,7617098,7617884,7618326,7619029,7619811,7620506,7621218,7621750,7622275,7623930,7625132,7625841,7626619,7627539,7628519,7629590,7630618,7631715,7632879,7634036,7635093,7635985,7636802,7637525,7638586,7639938,7641288,7642722,7644171,7645669,7647128,7648663,7649967,7651497,7653017,7654621,7656149,7657701,7659294,7660958,7662666,7664357,7665874,7667382,7668905,7670478,7671981,7673477,7674926,7676185,7677478,7678707,7679706,7680686,7681743,7682798,7683889,7684960,7686128,7687339,7688585,7689636,7690589,7691400,7692159,7693020,7693833,7694783,7695797,7697437,7699462,7701510,7703558,7705606,7707654,7709702,7711750,7713798,7715846,7717894,7719942,7721990,7724038,7726086,7728142,7730190,7732238,7734286,7736334,7738382,7740430,7742478,7744526,7746574,7748622,7750670,7752718,7754766,7756814,7758862,7760910,7762958,7765006,7767054,7769102,7771150,7773198,7775246,7777294,7779342,7781390,7783438,7785486,7787534,7789582,7791630,7793678,7795726,7797774,7799822,7801870,7803925,7805973,7808021,7810069,7812117,7814165,7816213,7818261,7820309,7822357,7824405,7826453,7828501,7830549,7832597,7834645,7836693,7838741,7840798,7842846,7844894,7846951,7848999,7851047,7853095,7855143,7857191,7859239,7861287,7863335,7865383,7867431,7869479,7871527,7873575,7875623,7877671,7879719,7881767,7883815,7885863,7887911,7889959,7892007,7894055,7896103,7898151,7900199,7902247,7904295,7906343,7908391,7910439,7912487,7914535,7916583,7918631,7920679,7922727,7924731,7925917,7927228,7928414,7929272,7929892,7930277,7931570,7932219,7933291,7934373,7935449,7936237,7936793,7938277,7939836,7941248,7942640,7944053,7945420,7946764,7947899,7949050,7950250,7951395,7952593,7954078,7955395,7956745,7957967,7959180,7960358,7961560,7962715,7964070,7965531,7966939,7968298,7969594,7970813,7972098,7973478,7974973,7976585,7978221,7979783,7981318,7982913,7984477,7986028,7987576,7989060,7990598,7992080,7993513,7994903,7996292,7997655,7999595,8001643,8003691,8005739,8007787,8009844,8011892,8013947,8015995,8018043,8020091,8022139,8024187,8026235,8028283,8030331,8032379,8034427,8036475,8038523,8040571,8042619,8044667,8046715,8048763,8050811,8052859,8054907,8056955,8059003,8061051,8063099,8065147,8067195,8069243,8071291,8073339,8075387,8077435,8079483,8081531,8083579,8085627,8087675,8089723,8091771,8093819,8095867,8097915,8099963,8102011,8104059,8106107,8108155,8110203,8112251,8114299,8116347,8118395,8120443,8122491,8124539,8126587,8128635,8130683,8132731,8134779,8136827,8138875,8140923,8142971,8145019,8147067,8149115,8151163,8153211,8155259,8157307,8159355,8161403,8163451,8165499,8167547,8169595,8171643,8173691,8175739,8177787,8179835,8181718,8183035,8184430,8185861,8187243,8188625,8190002,8191501,8192945,8194570,8196246,8197852,8199284,8200733,8202096,8203477,8205082,8206786,8208543,8210261,8211878,8213409,8214878,8216336,8217973,8219615,8221273,8222912,8224541,8226111,8227652,8229125,8230837,8232883,8234939,8236979,8239020,8241068,8243074,8245088,8247103,8249140,8251188,8253198,8255246,8257280,8259316,8261364,8263418,8265465,8267522,8269570,8271613,8273670,8275430,8277478,8279531,8281579,8283334,8284649,8286291,8287929,8289475,8291096,8292121,8292335,8292548,8292788,8292995,8293233,8293950,8294164,8294378,8294620,8294841,8295070,8295459,8297141,8298705,8300073,8301324,8302570,8303940,8305013,8306182,8307394,8308583,8309825,8311117,8312270,8313406,8314779,8316827,8318171,8318763,8320459,8322419,8323266,8324168,8326071,8327809,8328551,8329822,8331870,8333103,8333702,8334268,8334719,8335175,8336992,8338229,8340204,8342246,8344291,8346339,8347324,8348761,8350809,8352857,8354905,8356953,8359001,8361049,8362020,8363459,8365507,8367555,8369603,8371651,8373699,8375747,8377795,8378747,8380191,8382239,8384287,8386335,8388383,8390431,8392479,8393341,8394838,8396886,8398934,8400982,8403030,8405086,8407134,8409191,8411239,8413287,8415335,8416459,8417947,8418634,8418717,8419686,8421704,8423752,8425800,8427848,8429896,8431944,8433992,8436040,8438088,8440139,8442195,8444243,8446291,8448339,8450387,8452443,8454491,8456547,8458595,8460643,8462680,8464728,8466785,8468833,8470881,8472929,8474830,8476878,8478926,8480974,8483022,8485070,8487118,8489166,8491214,8493262,8495277,8497325,8499373,8501421,8503469,8505517,8507565,8509605,8511653,8513701,8515749,8517784,8519832,8521880,8523928,8525976,8528012,8530060,8532108,8534136,8536184,8538232,8540280,8542328,8544376,8546417,8548451,8550499,8552547,8554580,8556628,8558671,8560719,8562767,8564732,8566780,8568828,8570860,8572916,8574964,8577012,8579045,8581093,8583141,8585189,8587237,8589293,8591341,8593398,8595455,8597503,8598901,8600334,8602382,8604433,8606481,8607352,8608796,8610743,8612800,8614817,8616865,8618913,8620961,8623009,8625057,8627105,8629153,8631210,8633258,8635306,8637354,8639402,8641459,8643507,8645555,8647583,8649635,8651692,8653740,8655797,8657853,8659858,8661906,8663954,8665951,8667996,8670053,8672093,8674141,8676177,8678167,8680215,8682247,8684295,8686332,8688380,8690317,8692365,8694405,8696453,8698501,8700549,8702593,8704576,8706624,8708659,8710707,8712739,8714787,8716693,8718749,8720770,8722827,8724859,8726916,8728853,8730901,8732938,8734986,8737022,8739070,8741082,8743130,8745178,8747226,8749274,8751322,8753370,8755418,8757474,8759522,8761527,8763563,8765611,8767644,8769692,8771740,8773788,8775792,8777840,8779888,8781936,8783980,8786028,8788076,8790124,8792172,8794220,8796268,8798324,8800376,8802413,8804461,8806509,8808557,8810605,8812656,8814676,8816724,8818705,8820739,8822783,8824831,8826862,8828910,8830911,8832914,8834971,8836984,8839032,8841080,8843114,8845084,8847139,8849172,8851229,8853260,8855308,8857213,8859261,8861298,8863346,8865379,8867427,8869358,8871406,8873454,8875502,8877538,8879586,8881618,8883611,8885659,8887672,8889720,8891768,8893795,8895763,8897820,8899865,8901913,8903946,8906002,8907912,8908775,8908909,8909045,8910484,8912522,8913754,8913896,8915333,8917368,8918269,8919933,8921865,8923880,8925923,8927961,8930012,8931585,8931723,8933169,8935217,8936081,8937576,8939610,8940758,8940893,8942332,8944313,8945115,8945260,8945405,8945843,8945981,8947425,8949467,8949599,8949741,8949877,8950318,8950465,8951089,8952047,8953042,8953948,8954740,8955672,8956633,8957261,8958306,8959163,8960084,8961008,8961836,8962836,8964038,8964931,8965921,8966842,8967652,8968671,8969689,8970730,8971756,8972756,8973551,8974593,8975706,8976956,8978161,8978986,8979786,8980189,8980582,8981558,8982622,8983596,8984546,8985065,8985415,8985761,8986160,8986542,8986929,8987486,8988036,8989262,8990407,8991393,8992510,8993892,8995340,8996912,8998377,8999718,9000964,9002189,9003622,9005067,9006356,9007621,9008767,9010219,9011719,9013243,9014780,9015911,9017078,9018209,9019471,9020962,9022400,9023993,9025530,9026618,9027814,9028998,9030331,9031805,9033274,9034875,9036277,9037362,9038523,9039708,9041236,9042665,9044222,9045766,9046883,9047950,9049131,9050467,9051961,9053493,9055002,9056301,9057477,9058654,9059969,9061383,9062761,9063818,9064398,9064961,9065545,9066149,9066763,9067385,9067977,9069049,9069910,9070820,9071434,9072402,9073233,9074055,9074763,9075725,9076576,9077438,9078018,9078654,9079414,9080019,9080712,9081548,9082294,9083116,9083816,9084708,9085249,9086063,9086591,9087056,9087752,9088386,9089238,9089800,9090751,9091295,9091863,9092526,9093290,9093992,9094514,9094986,9095639,9096089,9096583,9097202,9097724,9098409,9099286,9099726,9100274,9101797,9102893,9104265,9105707,9107242,9108560,9109622,9110842,9111919,9113108,9114300,9115659,9116935,9118167,9119648,9120766,9122036,9123083,9124304,9125614,9126486,9127995,9128952,9129802,9130761,9132254,9133248,9134084,9135060,9136059,9137077,9138196,9139049,9140052,9141131,9142166,9143039,9143866,9144854,9145685,9146534,9147529,9148342,9149400,9150449,9151390,9152432,9153376,9154133,9154955,9156071,9157060,9158137,9159068,9159961,9161048,9162034,9162647,9163148,9163609,9164229,9165031,9165613,9166643,9167322,9167949,9168581,9169232,9170341,9171339,9172523,9173506,9174016,9174826,9175628,9176353,9177133,9177788,9178482,9179341,9179704,9180057,9180652,9181404,9182099,9183025,9183842,9184955,9185568,9186427,9187250,9188070,9188970,9189858,9190683,9191572,9192439,9193312,9194138,9194964,9195916,9196650,9197487,9198328,9199244,9200033,9201004,9201676,9202519,9203696,9204505,9205328,9205933,9206735,9207641,9208469,9209273,9210107,9210824,9211621,9212481,9213315,9214173,9214983,9215801,9216409,9217156,9217715,9218443,9218989,9219826,9220183,9221185,9222109,9222873,9224014,9225754,9227537,9229326,9231202,9233101,9235149,9237197,9239245,9241239,9242699,9244102,9245991,9247829,9249877,9251791,9253540,9255590,9257605,9259500,9261342,9263390,9265438,9267486,9269344,9271128,9273176,9275039,9276835,9278883,9280800,9282675,9284251,9285433,9286402,9286838,9287484,9288687,9290680,9292724,9294554,9296003,9297268,9298466,9299523,9301357,9303321,9304812,9305962,9307232,9308008,9309851,9311155,9312686,9314079,9314776,9315023,9315134,9316549,9318597,9320645,9322693,9324741,9326789,9328837,9330885,9332942,9334990,9337038,9339095,9341143,9343198,9345150,9346846,9348548,9350596,9352644,9354692,9356749,9358797,9360845,9362893,9364529,9364554,9365678,9367668,9369716,9371764,9373813,9375526,9377145,9378996,9381044,9383072,9384926,9386974,9389022,9391070,9393118,9395153,9397005,9399053,9401101,9402981,9405029,9407078,9409058,9411106,9413154,9415192,9417243,9419278,9421248,9422791,9424329,9426126,9428169,9430217,9432265,9434313,9436361,9438409,9440457,9442513,9444498,9446348,9447800,9448863,9449861,9451159,9452339,9453665,9454714,9456304,9457813,9459001,9460155,9461475,9462689,9463717,9464858,9465908,9466941,9468135,9469414,9471289,9473217,9475102,9476964,9478901,9480233,9482000,9483734,9485370,9487059,9488429,9489840,9490887,9491882,9493083,9494186,9495189,9496232,9497328,9498338,9499916,9501022,9502010,9503165,9504387,9505718,9506924,9508703,9510682,9512730,9514787,9516765,9518818,9520860,9522837,9524873,9526927,9528974,9531022,9532995,9535043,9537032,9539080,9541118,9543090,9545138,9547113,9549161,9551197,9553169,9555226,9557262,9559234,9561271,9563319,9565291,9567339,9569342,9571384,9573415,9575428,9577475,9579523,9581494,9583550,9585589,9587624,9589672,9591720,9593750,9595798,9597825,9599796,9601828,9603876,9605853,9607901,9609953,9612001,9614057,9616105,9618153,9620201,9622249,9624304,9626360,9628408,9630303,9632351,9634408,9636456,9638504,9640552,9642600,9644648,9646696,9648744,9650792,9652684,9654732,9656780,9658828,9660876,9662924,9664972,9667029,9669077,9670970,9673018,9675066,9677114,9679162,9681210,9683258,9685155,9687203,9689251,9691299,9693347,9695395,9697443,9699491,9701382,9703430,9705478,9707526,9709574,9711622,9713670,9715568,9717616,9719664,9721712,9723760,9725808,9727856,9729904,9731805,9733853,9735901,9737949,9739997,9742045,9744093,9746141,9748189,9750237,9752279,9753980,9755475,9756998,9758635,9760078,9761511,9763325,9765101,9766888,9768689,9770147,9771662,9773241,9774686,9776418,9778203,9779907,9781554,9783258,9785104,9787135,9788357,9789831,9791465,9792591,9793698,9794802,9796382,9797974,9799687,9801405,9803171,9804789,9806511,9808396,9810442,9812490,9814288,9815444,9816665,9817856,9818936,9820209,9821324,9822461,9823603,9825210,9826725,9828151,9829580,9830915,9832388,9833777,9835316,9836838,9838609,9840200,9841857,9843455,9845024,9846536,9848096,9849913,9851791,9853679,9855383,9857174,9859071,9860869,9862717,9864437,9866227,9868075,9869641,9871110,9872982,9874901,9875935,9876960,9878779,9880476,9881876,9883229,9884989,9886677,9888013,9889404,9891253,9892713,9894520,9896140,9897873,9899007,9899636,9900823,9902204,9903318,9904571,9905961,9907525,9909329,9910875,9912342,9913827,9915527,9916766,9918400,9920027,9921999,9923998,9925689,9927147,9928959,9930785,9932544,9934376,9936149,9937949,9939701,9941490,9943210,9944886,9946684,9948408,9950114,9951650,9953150,9954462,9956034,9957199,9958496,9959858,9961243,9962907,9964515,9966292,9967722,9969387,9971079,9972375,9974002,9975573,9977096,9978590,9980076,9981541,9982309,9982990,9983700,9984403,9985106,9985771,9986473,9987110,9987547,9988130,9988679,9989726,9991633,9993319,9995021,9996706,9998407,10000235,10001981,10003743,10005491,10006900,10007602,10009465,10011102,10012684,10014151,10015641,10016671,10017269,10017504,10017948,10018386,10018876,10019164,10019739,10021214,10022959,10024649,10026332,10028094,10029918,10031736,10033433,10034759,10036437,10037901,10039376,10040886,10041707,10042158,10042659,10043184,10043649,10044015,10044468,10045004,10045572,10046311,10048213,10049881,10051546,10053229,10054896,10056816,10058598,10060326,10061727,10063190,10064922,10066405,10067885,10069370,10070858,10071872,10072503,10073132,10073703,10074281,10074776,10075385,10075794,10076480,10076924,10077474,10078028,10078410,10079032,10081033,10082731,10084410,10086099,10087763,10089463,10091244,10093162,10094877,10096571,10098341,10099630,10100842,10102563,10104298,10105814,10107299,10108781,10110090,10110662,10111233,10111810,10112399,10112935,10113552,10114141,10114683,10115296,10115824,10116366,10117494,10119439,10121109,10122792,10124454,10126150,10127821,10129755,10131463,10133184,10134878,10136214,10136993,10138790,10140450,10142002,10143494,10144990,10146489,10147075,10147668,10148184,10148729,10149149,10149697,10150301,10150882,10151416,10151864,10152290,10153232,10155104,10156785,10158480,10160150,10161791,10163597,10165383,10167131,10168848,10170416,10171248,10173040,10174695,10176238,10177717,10179069,10179495,10180008,10180467,10180835,10181377,10181866,10182244,10182728,10184582,10186236,10187928,10189578,10191419,10193078,10194787,10196452,10197622,10199221,10200703,10202181,10203648,10205129,10206614,10208089,10208714,10209380,10209868,10210463,10211096,10211688,10212235,10212928,10213433,10214050,10214738,10215431,10215998,10216779,10217449,10218077,10218711,10219312,10219994,10220520,10221088,10223084,10224890,10226552,10228269,10229942,10231613,10233299,10235023,10236723,10238425,10240238,10242147,10243870,10245603,10247283,10249099,10250940,10252733,10253831,10254499,10255329,10257095,10258926,10260608,10262401,10264024,10265502,10266977,10268450,10269910,10270921,10271396,10271844,10272393,10272960,10273545,10274150,10274706,10275200,10275671,10276205,10276705,10277266,10277838,10278481,10280507,10282230,10283933,10285625,10287319,10289002,10290690,10292537,10294341,10296106,10297889,10299664,10301234,10301909,10302915,10304933,10306672,10308371,10309925,10311410,10312894,10314380,10315853,10316617,10317275,10317937,10318583,10319190,10319767,10320271,10320825,10321444,10322079,10322520,10323027,10323530,10324000,10324510,10326074,10327936,10329634,10331314,10333007,10334707,10336407,10338114,10340130,10341825,10343525,10345291,10347091,10348772,10349545,10350825,10352796,10354507,10356121,10357602,10359092,10360581,10362063,10362754,10363247,10363887,10364507,10365125,10365690,10366235,10366529,10366776,10366957,10367192,10367429,10367598,10368858,10370869,10372595,10374279,10375989,10377695,10379418,10381134,10383106,10384916,10386639,10388417,10390187,10391946,10393151,10394703,10396319,10397934,10399383,10400581,10401242,10401867,10402544,10403169,10404643,10406308,10408021,10409765,10410966,10412629,10414088,10415556,10416914,10417455,10418032,10418618,10419135,10419616,10420121,10420589,10421064,10421923,10423782,10425439,10427117,10428774,10430632,10432317,10434020,10435110,10436537,10438282,10439760,10441228,10442694,10444139,10444713,10445296,10445873,10446464,10446993,10447556,10448147,10448582,10449131,10449759,10450302,10451845,10453607,10455293,10456968,10458652,10460336,10462218,10463871,10465629,10467378,10468304,10469648,10471502,10473128,10474595,10476056,10477421,10478017,10478602,10478965,10479438,10480003,10480433,10480769,10481077,10481413,10481924,10483549,10485309,10486997,10488658,10490280,10491957,10493821,10495529,10497223,10498833,10499603,10501353,10503092,10504577,10506025,10507465,10508567,10508833,10509103,10509477,10509872,10510369,10510818,10511156,10511509,10511978,10512450,10512764,10514238,10515958,10517572,10519218,10520887,10522554,10524402,10526135,10527783,10529499,10530497,10532161,10533723,10535205,10536705,10537462,10537949,10538434,10538950,10539577,10540213,10540798,10541466,10542004,10543108,10544914,10546595,10548251,10549920,10551799,10553432,10555108,10556856,10557809,10559579,10561247,10562713,10564201,10565681,10567164,10567833,10568376,10568937,10569452,10570063,10570648,10571255,10571706,10572149,10572681,10573169,10573631,10574103,10575795,10577570,10579232,10580922,10582587,10584265,10585933,10587871,10589543,10591184,10592908,10594656,10595448,10596735,10598556,10600295,10601755,10603228,10604713,10606195,10607669,10609174,10610661,10612158,10613635,10614679,10615338,10616073,10616773,10617310,10617979,10618428,10619172,10619787,10620380,10620883,10621543,10622206,10622856,10623469,10624127,10624715,10625343,10625636,10626345,10626982,10627674,10628219,10628588,10629214,10629784,10630100,10630372,10630780,10632808,10634834,10636640,10638367,10640075,10641777,10643474,10645161,10646843,10648529,10650199,10651864,10653564,10655252,10657213,10659183,10660876,10662605,10664283,10665922,10667602,10669339,10671041,10672718,10674397,10675205,10675990,10677257,10679142,10680990,10681901,10682412,10683450,10683649,10685249,10686913,10688591,10690110,10691609,10693110,10694626,10696136,10697640,10699129,10700612,10702095,10703579,10704742,10705432,10706241,10707062,10707599,10708326,10708996,10709711,10710479,10711192,10711775,10712495,10713120,10713737,10714434,10715095,10715851,10716521,10717214,10717813,10718311,10718833,10719351,10719730,10719959,10720276,10720785,10721330,10721736,10722049,10722313,10722435,10723338,10725389,10727347,10729207,10730902,10732608,10734304,10735977,10737649,10739345,10741058,10742712,10744398,10746046,10747706,10749397,10751092,10752919,10754967,10756896,10758660,10760395,10762116,10763828,10765499,10767209,10768873,10770475,10772176,10773893,10775355,10776336,10777104,10778930,10780819,10782536,10784302,10786114,10787747,10789232,10790721,10792193,10793690,10794368,10794879,10795438,10795991,10796490,10797051,10797453,10797934,10798332,10798876,10798955,10799485,10800045,10800906,10802879,10804539,10806234,10807886,10809572,10811269,10813079,10814878,10816602,10818296,10820023,10821458,10822343,10824156,10825914,10827417,10828854,10830317,10831793,10833301,10834793,10836285,10837752,10839248,10839905,10840595,10841164,10841831,10842353,10843002,10843717,10844426,10845039,10845740,10846248,10846870,10847520,10848206,10848766,10849478,10850146,10850554,10851166,10851800,10852415,10852887,10853351,10853960,10855049,10857072,10858963,10860651,10862321,10863996,10865688,10867399,10869105,10870795,10872444,10874142,10875878,10877926,10879676,10881348,10883006,10884704,10886427,10888130,10889877,10891629,10892530,10893489,10895261,10896940,10898470,10900105,10901747,10903288,10904761,10906227,10907715,10909194,10910684,10911492,10912035,10912531,10913042,10913707,10914344,10915016,10915640,10916269,10916939,10917519,10917940,10918521,10919222,10919882,10920363,10920781,10922015,10924038,10925697,10927367,10929039,10930717,10932424,10934116,10935774,10937627,10939484,10941179,10942883,10944683,10946411,10948154,10949386,10950722,10952482,10954336,10955944,10957433,10958931,10960408,10961912,10963415,10964894,10966376,10967876,10969368,10970880,10972390,10973895,10974814,10975417,10976127,10976727,10977346,10977971,10978526,10979128,10979750,10980425,10981035,10981600,10982209,10982836,10983418,10983936,10984584,10985163,10985614,10986217,10986853,10987244,10987856,10988451,10989069,10989657,10990215,10990724,10991324,10991900,10992442,10993059,10993676,10994166,10994740,10995164,10995626,10996148,10996706,10997261,10998328,11000361,11002402,11004411,11006126,11007840,11009563,11011262,11012980,11014680,11016399,11018103,11019821,11021536,11023258,11024963,11026668,11028362,11030082,11031803,11033507,11035386,11037434,11039364,11041031,11042766,11044486,11046180,11047864,11049611,11051333,11052990,11054750,11056487,11058282,11059902,11060812,11061700,11062551,11063451,11065032,11066785,11068436,11069970,11071535,11073099,11074691,11075635,11076301,11077947,11079718,11081493,11083213,11084679,11086148,11087630,11089114,11090521,11091162,11091837,11092446,11093092,11093539,11093865,11094272,11094725,11094980,11095409,11095948,11096378,11096895,11098886,11100651,11102336,11104013,11105695,11107381,11109061,11111005,11112742,11114471,11116209,11117923,11119038,11120550,11122306,11123881,11125346,11126816,11127846,11128379,11128840,11129266,11129709,11130013,11130386,11130817,11131312,11133204,11134887,11136565,11138237,11140120,11141839,11143550,11145167,11146481,11148147,11149613,11151089,11152555,11154027,11155190,11155764,11156330,11156950,11157574,11158101,11158654,11159262,11159919,11160337,11160785,11161170,11161689,11162032,11163208,11165077,11166713,11168378,11170051,11171724,11173410,11175081,11177013,11178667,11180380,11182054,11183516,11183984,11184958,11186411,11187668,11189285,11190819,11192302,11193773,11194289,11194419,11194851,11195192,11195517,11195781,11196121,11196513,11198112,11199763,11201400,11203053,11204867,11206519,11208129,11209030,11210573,11212088,11213532,11214996,11215729,11216301,11216734,11217155,11217703,11218186,11218779,11220607,11222271,11223929,11225721,11227477,11228619,11230261,11231781,11233281,11234772,11236243,11237697,11239171,11240656,11241645,11242258,11242895,11243543,11244172,11244671,11245148,11245670,11246266,11246664,11247163,11247571,11248140,11248589,11249060,11249464,11249876,11250326,11250570,11251274,11253211,11255065,11256718,11258404,11260100,11261803,11263491,11265153,11266805,11268462,11270424,11272166,11273890,11275654,11277357,11279047,11280703,11281918,11282736,11284110,11285808,11287230,11288895,11290573,11292103,11293577,11295068,11296548,11297453,11297936,11298287,11298809,11299284,11299754,11299968,11300438,11300974,11301389,11301831,11302154,11302534,11303009,11304771,11306519,11308178,11309842,11311503,11313147,11314823,11316732,11318380,11320060,11321729,11323399,11324100,11325037,11326579,11328263,11329826,11331306,11332709,11333236,11333754,11334158,11334288,11334799,11335259,11335564,11337398,11339109,11340806,11342660,11344436,11346188,11347374,11348986,11350927,11352983,11355040,11357087,11359142,11360978,11362588,11364161,11365633,11366676,11367478,11368297,11369048,11369858,11370788,11371992,11373994,11376042,11378005,11379923,11381653,11382865,11384077,11385497,11386843,11388242,11388960,11390378,11391151,11391889,11393038,11394138,11395277,11396281,11397249,11398404,11399433,11400427,11401336,11402355,11403493,11404585,11405669,11406483,11407414,11408379,11409286,11410203,11411131,11411937,11412866,11413834,11414703,11415762,11416803,11417724,11418874,11419861,11420862,11421762,11422631,11423590,11424570,11425413,11426453,11427451,11428364,11429317,11430190,11431154,11432179,11433187,11434241,11435096,11436043,11437176,11438201,11439274,11440260,11441300,11442354,11443438,11444538,11445710,11446850,11447975,11449041,11450201,11451243,11452355,11453522,11454733,11455716,11456833,11457867,11458526,11459627,11460867,11461947,11462911,11463980,11465112,11466256,11467305,11468454,11469496,11470542,11471659,11472615,11473933,11475072,11476107,11477182,11478310,11479453,11480525,11481706,11482821,11483943,11485121,11486088,11487244,11488448,11489547,11490764,11491830,11493017,11494241,11495379,11496432,11497613,11498743,11499952,11502000,11503682,11504700,11505773,11506810,11507788,11508746,11509854,11510865,11511868,11512781,11513922,11515117,11516021,11517110,11518118,11519087,11520100,11520781,11521667,11522414,11523245,11524145,11525563,11526991,11528553,11529953,11531853,11533901,11535958,11537948,11539446,11541283,11543325,11545373,11547421,11549469,11551200,11553257,11555065,11556841,11558894,11560942,11562990,11565038,11567086,11569134,11571182,11573239,11575265,11577299,11579320,11581372,11583412,11585450,11587425,11589283,11591016,11592842,11594890,11596938,11598986,11601034,11603082,11605130,11607178,11609226,11611274,11613322,11615370,11617406,11619344,11621218,11623042,11624593,11626023,11628004,11629981,11631741,11633575,11635615,11637668,11639716,11641772,11643820,11645868,11647916,11649964,11652012,11654060,11656108,11658156,11660204,11662252,11664298,11665991,11666977,11668891,11670948,11672996,11675044,11677092,11679140,11681188,11683236,11685284,11687332,11689380,11691428,11693476,11695524,11697572,11699620,11701668,11703716,11705764,11707821,11709663,11711426,11713474,11715522,11717570,11719511,11721188,11722634,11723905,11724960,11725851,11726375,11727829,11729877,11731925,11733973,11736029,11738077,11740125,11742173,11744221,11746278,11748247,11749780,11750851,11752445,11754493,11756527,11758492,11760396,11762152,11763717,11765048,11765989,11766683,11767021,11767139,11768704,11770759,11772807,11774855,11776910,11778958,11781006,11783054,11785102,11787150,11789198,11791255,11793293,11795325,11797183,11798861,11800396,11801584,11803532,11805586,11807634,11809682,11811730,11813778,11815835,11817889,11819937,11821985,11824041,11826095,11828128,11830110,11831861,11833433,11834579,11835480,11837309,11839156,11841161,11843209,11845265,11847321,11849333,11851098,11852567,11853312,11855266,11857314,11859362,11861399,11863166,11865214,11867262,11869164,11870217,11870242,11870470,11870517,11870679,11872727,11874775,11876832,11878880,11880931,11882979,11885027,11887067,11889059,11891062,11893110,11895158,11897206,11899226,11901274,11903322,11905370,11907418,11909466,11911514,11913562,11915610,11917667,11919686,11921337,11923152,11925174,11926689,11928423,11930381,11932428,11934175,11935584,11936989,11938783,11940804,11942848,11944896,11946944,11948997,11951043,11952978,11954609,11955346,11955794,11957842,11959899,11961947,11963995,11966049,11968106,11970162,11972210,11974258,11976309,11978327,11980239,11982076,11984023,11985720,11987498,11989546,11991594,11993642,11995690,11997738,11999786,12001834,12003882,12005773,12007821,12009878,12011935,12013983,12016031,12018079,12020127,12022175,12023766,12025804,12027756,12029708,12030748,12032761,12034816,12036854,12038754,12040373,12042421,12044469,12046517,12048565,12050616,12052664,12054712,12056760,12058808,12060774,12062230,12063685,12065591,12067531,12069540,12071593,12073648,12075674,12077712,12079761,12081811,12083863,12085917,12087951,12090005,12092001,12094030,12096011,12098059,12100107,12102161,12104196,12106239,12108264,12110297,12112340,12114380,12116436,12118472,12120505,12122476,12124290,12125940,12127344,12128686,12129871,12131095,12132259,12133360,12134359,12135498,12136483,12137506,12138525,12139336,12140206,12140979,12141699,12142317,12142748,12143042,12143250,12143384,12143451,12143503,12144802,12146832,12148871,12150919,12152954,12154926,12156675,12158391,12159741,12160513,12162386,12164434,12166482,12168530,12170473,12172516,12174564,12176612,12178605,12180651,12182699,12184747,12186795,12188789,12190837,12192894,12194942,12196988,12199030,12201085,12203141,12205197,12207241,12209281,12211327,12213331,12215252,12217119,12218859,12220619,12222333,12224087,12226138,12228195,12230231,12232279,12234335,12236381,12238384,12240219,12242270,12244318,12246366,12248419,12250476,12252526,12254574,12256480,12258537,12260585,12262529,12264284,12265941,12267989,12270044,12271777,12273399,12275456,12277504,12279552,12281600,12283648,12285696,12287752,12289806,12291842,12293817,12295562,12297087,12298603,12299926,12301131,12302356,12304404,12306452,12308500,12310556,12312596,12314534,12316330,12317646,12318048,12318785,12320179,12321807,12323656,12325615,12327547,12329464,12331445,12333409,12335216,12336845,12338263,12339474,12340227,12340661,12341813,12343791,12345823,12347545,12348716,12349970,12352018,12354066,12356114,12358162,12360210,12362258,12364306,12366354,12368306,12370332,12372383,12374328,12375937,12377144,12378240,12380288,12382256,12383780,12385268,12387316,12389364,12391412,12393463,12395511,12397560,12399612,12401663,12403658,12405605,12407122,12409158,12411072,12412505,12413196,12415226,12417274,12419322,12421370,12423418,12425466,12427514,12429454,12431254,12433302,12435350,12437398,12439446,12441494,12443542,12445572,12446776,12448065,12449821,12451833,12453888,12455936,12457984,12459691,12460961,12462957,12464815,12466871,12468919,12470967,12473015,12475066,12477006,12478450,12479620,12480380,12481002,12481368,12481701,12481811,12483104,12485152,12487200,12489248,12491296,12493344,12495392,12497440,12499488,12501536,12503584,12505632,12507680,12509728,12511776,12513824,12515872,12517929,12519485,12521306,12523354,12525402,12527450,12529498,12531546,12533594,12535642,12537197,12537403,12538450,12540092,12541975,12544025,12546073,12548121,12550169,12552217,12554265,12556313,12558361,12560409,12562457,12564399,12566090,12567641,12569038,12570310,12571383,12572364,12573346,12574087,12574862,12575794,12576721,12577376,12578851,12580856,12582913,12584961,12587009,12589057,12591105,12593153,12595201,12597249,12599297,12601345,12603393,12605441,12607470,12608884,12609738,12610409,12611542,12613599,12615647,12617695,12619751,12621514,12622965,12625013,12626846,12628276,12629391,12630016,12630802,12631460,12633517,12635495,12636934,12637316,12638954,12640832,12642779,12644810,12646854,12648902,12650958,12652997,12655035,12656668,12658395,12660195,12662203,12664090,12666143,12668191,12670239,12672287,12674344,12676401,12678458,12680508,12682540,12684342,12685889,12686939,12687617,12689044,12691062,12693110,12695167,12697215,12699263,12701311,12703368,12705416,12707472,12709490,12711295,12712833,12714039,12714960,12715405,12715679,12717415,12719470,12721498,12723444,12725289,12726990,12728662,12730690,12732745,12734585,12736130,12737447,12739227,12740962,12742917,12744972,12746949,12748978,12750135,12752051,12753818,12755677,12757438,12759486,12761222,12763123,12764680,12766102,12767258,12768672,12770677,12772623,12774631,12776507,12778479,12780434,12782345,12784401,12786458,12788504,12790364,12791534,12792570,12794618,12796666,12798714,12800762,12802810,12804416,12805114,12807168,12809216,12811270,12813318,12815135,12815654,12817048,12819096,12821145,12823193,12825241,12827298,12829346,12831388,12833369,12835417,12836997,12838939,12840987,12842730,12844787,12846835,12848452,12850481,12852533,12854111,12855364,12857034,12858851,12859428,12861374,12863431,12865487,12867540,12869166,12869421,12869535,12870552,12872532,12874588,12876645,12878693,12880750,12882798,12884850,12886758,12888806,12890854,12892842,12894845,12896901,12898859,12900907,12902940,12904994,12907050,12909081,12911129,12912973,12914958,12916630,12918558,12919992,12921853,12923072,12924692,12926358,12928024,12929314,12930578,12932446,12934435,12936199,12938128,12940176,12942224,12944281,12946323,12947927,12949050,12949838,12950967,12952964,12954279,12955757,12957654,12959702,12961750,12963798,12965846,12967894,12969942,12971990,12974038,12976095,12978152,12980118,12981966,12983604,12985036,12986282,12987205,12988259,12990316,12992364,12994412,12996460,12998517,13000358,13000781,13002746,13004789,13006845,13008863,13010771,13012776,13014823,13016871,13018919,13020967,13023015,13025063,13027115,13029150,13030991,13032487,13033481,13034052,13036103,13038151,13040199,13042247,13043928,13044284,13044895,13046878,13048926,13050974,13053022,13055070,13057127,13059175,13061223,13063243,13064912,13065395,13065792,13066996,13068846,13070899,13072947,13074995,13077043,13079091,13081139,13083187,13085235,13087283,13089331,13091365,13093332,13095146,13096931,13098673,13100266,13101714,13102981,13104230,13105459,13106584,13107403,13108002,13108548,13109061,13109557,13109991,13110480,13110843,13111323,13111745,13112240,13112779,13113291,13113612,13113906,13114644,13115841,13117056,13118314,13119440,13120500,13121520,13122352,13123094,13123679,13123986,13124148,13124280,13125069,13126664,13128484,13130520,13132568,13134616,13136649,13138670,13140678,13142502,13144461,13146239,13148244,13150161,13151981,13153380,13155413,13157461,13159509,13161533,13163563,13165588,13167643,13169681,13171696,13173710,13175685,13177733,13179642,13181586,13183636,13185684,13187732,13189524,13191272,13193319,13195102,13196911,13198965,13200891,13202166,13203784,13205728,13207775,13209824,13211678,13213617,13215609,13217394,13219364,13221314,13223362,13225410,13227465,13229329,13231363,13233404,13235166,13236650,13238298,13239710,13240919,13241453,13241980,13242452,13242784,13243544,13244159,13245106,13246722,13248154,13249591,13250980,13252248,13253639,13255230,13256984,13258759,13260571,13262488,13264454,13266476,13268513,13270567,13272623,13274671,13276724,13278772,13280827,13282884,13284930,13286936,13288900,13290899,13292878,13294807,13296588,13298289,13299999,13301665,13303364,13304920,13306397,13307841,13309287,13310731,13312103,13313383,13314590,13315777,13316989,13318169,13319259,13320232,13321175,13322139,13323437,13324970,13326466,13327929,13329380,13330832,13332347,13333868,13335423,13336926,13338451,13340014,13341583,13343266,13344905,13346463,13348037,13349589,13351128,13352847,13354515,13356357,13358077,13359810,13361627,13363520,13365441,13367268,13369241,13371209,13373142,13375186,13377225,13379273,13381321,13383378,13385426,13387477,13389496,13391470,13393276,13394930,13396230,13397263,13399114,13400970,13403018,13405074,13407128,13408903,13409197,13409745,13411798,13413846,13415894,13417282,13419336,13420889,13422507,13424558,13426421,13427704,13429751,13431799,13433847,13435895,13437473,13439500,13441509,13443222,13444489,13446403,13448451,13450499,13452547,13454595,13456652,13458681,13460664,13462712,13464760,13466808,13468856,13470904,13472952,13475000,13477056,13479104,13481152,13483209,13485205,13487258,13489314,13491362,13493410,13495458,13497506,13499453,13501460,13503504,13505561,13507609,13509645,13511693,13513741,13515789,13517837,13519885,13521933,13523840,13524993,13527049,13529097,13531145,13533202,13535250,13537283,13539339,13541331,13543229,13545144,13546744,13548343,13549843,13551474,13553294,13554989,13556486,13557888,13559074,13560090,13560648,13561646,13563694,13565751,13567799,13569855,13571872,13573637,13575043,13575304,13575996,13577792,13579840,13581879,13583578,13585128,13586752,13588633,13589888,13590178,13590601,13591538,13592052,13592333,13592736,13593125,13593650,13594047,13594395,13594644,13595420,13596264,13597134,13598035,13598593,13599140,13599711,13600158,13600969,13601531,13602086,13602883,13603361,13603980,13604626,13605384,13606344,13606627,13607011,13607651,13607904,13608370,13609255,13610184,13610756,13611271,13611616,13612331,13613273,13614155,13614913,13615700,13616762,13617626,13618379,13619685,13620861,13621902,13622606,13623018,13623460,13623727,13624009,13624375,13624595,13624994,13625556,13626328,13626572,13626792,13627046,13627365,13627497,13627737,13628052,13628283,13628500,13628790,13629079,13629472,13629761,13629947,13630056,13630223,13630468,13630584,13630825,13631582,13632270,13632792,13633203,13633720,13634598,13635537,13636104,13637004,13638155,13639136,13639978,13640709,13641163,13641454,13641978,13642307,13642672,13642911,13643211,13643744,13644111,13644429,13644980,13645994,13646532,13647804,13648554,13649488,13650350,13651453,13651877,13652345,13652897,13653275,13653644,13655495,13657201,13658250,13659333,13660708,13662114,13663532,13664685,13665644,13666510,13667402,13668341,13669672,13670115,13671331,13672204,13673139,13673759,13674629,13675034,13675554,13676270,13676551,13677164,13677614,13678011,13678855,13679679,13680272,13680896,13681488,13681934,13682476,13683594,13684728,13685721,13686771,13687816,13688959,13689929,13690960,13692105,13693712,13694921,13696043,13696684,13698024,13698901,13700390,13701364,13702603,13703247,13704644,13705417,13706364,13707305,13708312,13709373,13710147,13711072,13711705,13712053,13712423,13712766,13713237,13713440,13713717,13713806,13714045,13714371,13714894,13715411,13715993,13716402,13716978,13717584,13718323,13719162,13720103,13720963,13721503,13722711,13724116,13725208,13726514,13727737,13728864,13729647,13730844,13731516,13731948,13732465,13733468,13734844,13735445,13736364,13736908,13737255,13737776,13738237,13738726,13739662,13740714,13742035,13742399,13742941,13743505,13743774,13744484,13745057,13745478,13746058,13746422,13747001,13747256,13747736,13748101,13748631,13748997,13749498,13750074,13750681,13751476,13751716,13752874,13753439,13754058,13754599,13755026,13755533,13756051,13756525,13756708,13757271,13757440,13757876,13758328,13758818,13759433,13760399,13761292,13762337,13763095,13763642,13764225,13764858,13764968,13765283,13765768,13766179,13766685,13766988,13767475,13767778,13768325,13768642,13769341,13769739,13770161,13770565,13771205,13771420,13771752,13772053,13772374,13772645,13772929,13773112,13773330,13773568,13773818,13774034,13774140,13774254,13774458,13774568,13774684,13774804,13774914,13775030,13775246,13775525,13776035,13776304,13776475,13777188,13778014,13778813,13779537,13780334,13781068,13781376,13782074,13782517,13783128,13783375,13784772,13785991,13787211,13788329,13789425,13790621,13792133,13793837,13795464,13796699,13797872,13798954,13799865,13800738,13802117,13803745,13805391,13806699,13808159,13809513,13810669,13811573,13812042,13812656,13813425,13813750,13814364,13814935,13815677,13816388,13816833,13817257,13817521,13818045,13818406,13818773,13819116,13819746,13819944,13820300,13820715,13821213,13821609,13821926,13822166,13822420,13822488,13822764,13822886,13823377,13823859,13824901,13826018,13826743,13827059,13827479,13827933,13828422,13829175,13829603,13830143,13830606,13830856,13831252,13831851,13832795,13833765,13834419,13835057,13835590,13835996,13836753,13837094,13837613,13837993,13838661,13839211,13839730,13840388,13841135,13841624,13841988,13842402,13842753,13843121,13843492,13843733,13843775,13843816,13843858,13844069,13844282,13844516,13844752,13844933,13845151,13845308,13845476,13845612,13846023,13846314,13846601,13847037,13847250,13847313,13847979,13848961,13850346,13851503,13852505,13853775,13854707,13856018,13856746,13857057,13857447,13858600,13859519,13860334,13861176,13863072,13864539,13865982,13867449,13869058,13870429,13872001,13873415,13874877,13876350,13877894,13879287,13880781,13882209,13883823,13885333,13886825,13888216,13889720,13891147,13892494,13893841,13895341,13896846,13898441,13899921,13901435,13903071,13904648,13906298,13907948,13909652,13911363,13912977,13914075,13915012,13916098,13917140,13918342,13920185,13921890,13923651,13925410,13927066,13928789,13930509,13932227,13933930,13935678,13937380,13939107,13940859,13942619,13944385,13946100,13947815,13949338,13951032,13952672,13954362,13956065,13957761,13959482,13961169,13962896,13964546,13966195,13967846,13969508,13971111,13972673,13974334,13976144,13977801,13979501,13981195,13982777,13984439,13986088,13987813,13989539,13991329,13993183,13994993,13996795,13998613,14000409,14002142,14003886,14005547,14007300,14009110,14010963,14012739,14014411,14016099,14017943,14019667,14021410,14023186,14024926,14026641,14028325,14029956,14031608,14033174,14034998,14036622,14038270,14039867,14041448,14043110,14044745,14046392,14048118,14049806,14051508,14053183,14054910,14056613,14058348,14060061,14061699,14063423,14065174,14066864,14068568,14070245,14071883,14073561,14075237,14076863,14078528,14080134,14081739,14083266,14084795,14086311,14087804,14089617,14090703,14091820,14092690,14093441,14094109,14095418,14096819,14098299,14099692,14100860,14101946,14103142,14104263,14105567,14106986,14108269,14109572,14110846,14112104,14113297,14114329,14115221,14115954,14116852,14117737,14118516,14119133,14119909,14120910,14122066,14123101,14124292,14125708,14127372,14128803,14130306,14131643,14133199,14134640,14136085,14137634,14139095,14140570,14141897,14143211,14144449,14145359,14145578,14145793,14146005,14146248,14146464,14147326,14148950,14150574,14151880,14153271,14154853,14156197,14157178,14158512,14159767,14160501,14161873,14163309,14164369,14165926,14167612,14168848,14170493,14171916,14173499,14175110,14176636,14178018,14179592,14181182,14182484,14184195,14185724,14187242,14188838,14189912,14191523,14192867,14194383,14195758,14197402,14199078,14200746,14202429,14203847,14205454,14207225,14208387,14210020,14211364,14213047,14214385,14215738,14217345,14218934,14220596,14222115,14223441,14225036,14226383,14228024,14229676,14231232,14232817,14234397,14235601,14237194,14238846,14240469,14242068,14243573,14244900,14246477,14248173,14249413,14251036,14252061,14253677,14255049,14256599,14257748,14259387,14260956,14262480,14264161,14265648,14267001,14268550,14269734,14271144,14272304,14273689,14275131,14276779,14277857,14279327,14280847,14282122,14283565,14285017,14286489,14288112,14289666,14291316,14292978,14294390,14295702,14297294,14298892,14300408,14302080,14303240,14304937,14306416,14307983,14309421,14310848,14312514,14314090,14315688,14317549,14318750,14320539,14322111,14323888,14325577,14326987,14328471,14330169,14331462,14333059,14334808,14336085,14337809,14339351,14340656,14342263,14343992,14345522,14347074,14348618,14350131,14351876,14353502,14355113,14356509,14358197,14359618,14361267,14362908,14364365,14365988,14367527,14369360,14371226,14373144,14375071,14377124,14379148,14381193,14383237,14385260,14387280,14389312,14391347,14393371,14395401,14397452,14399495,14401545,14403593,14405589,14407619,14409585,14411598,14413615,14415643,14417693,14419746,14421799,14423843,14425886,14427910,14429921,14431932,14433978,14436026,14438046,14440084,14442138,14444165,14446183,14448197,14450121,14452114,14454122,14456156,14458203,14460243,14462271,14464296,14466346,14468378,14470367,14472333,14474326,14476337,14478344,14480334,14482382,14484409,14486432,14488486,14490521,14492514,14494469,14496482,14498489,14500472,14502484,14504509,14506529,14508548,14510598,14512625,14514621,14516597,14518602,14520593,14522570,14524590,14526618,14528665,14530714,14532760,14534798,14536750,14538792,14540814,14542830,14544843,14546877,14548928,14550975,14553011,14555062,14557109,14559155,14561191,14563229,14565238,14567275,14569251,14571290,14573295,14575216,14577215,14579185,14581174,14583142,14585134,14587122,14589109,14591090,14593084,14595044,14597024,14599000,14600998,14602972,14604899,14606885,14608875,14610836,14612803,14614799,14616766,14618753,14620747,14622721,14624675,14626675,14628665,14630663,14632631,14634570,14636576,14638545,14640542,14642495,14644445,14646436,14648450,14650447,14652458,14654461,14656416,14658426,14660407,14662402,14664313,14666280,14668239,14670246,14672233,14674229,14676199,14678136,14680127,14682117,14684103,14686068,14688067,14690076,14692058,14694057,14696056,14698060,14700079,14702070,14704050,14706054,14708040,14709970,14711996,14713994,14715951,14717865,14719873,14721898,14723883,14725839,14727850,14729881,14731892,14733867,14735886,14737906,14739865,14741898,14743892,14745902,14747928,14749963,14751969,14753991,14756009,14758018,14760009,14761992,14763966,14765974,14767998,14769985,14771946,14773825,14775774,14777826,14779876,14781917,14783870,14785793,14787718,14789608,14791420,14793274,14795167,14797112,14798921,14800788,14802593,14804584,14806587,14808576,14810457,14812369,14814285,14816173,14817995,14819849,14821839,14823774,14825728,14827678,14829626,14831497,14833445,14835326,14837259,14839194,14841156,14843091,14845072,14846881,14848905,14850683,14852622,14854443,14856392,14858319,14860270,14862213,14864211,14866181,14868101,14869955,14871842,14873731,14875671,14877601,14879522,14881449,14883392,14885375,14887329,14889373,14891071,14893061,14894770,14896775,14898737,14900651,14902605,14904465,14906438,14908352,14910358,14912203,14914179,14916127,14918166,14919887,14921627,14923480,14925264,14927091,14928976,14930838,14932701,14934482,14936403,14938237,14940173,14942070,14943983,14945919,14947849,14949691,14951649,14953541,14955454,14957336,14959296,14961150,14963078,14965014,14966983,14968904,14970814,14972716,14974635,14976524,14978365,14980272,14982080,14983969,14985891,14987721,14989590,14991234,14992965,14994451,14996090,14997871,14999684,15001489,15003426,15005374,15007361,15009324,15011332,15013321,15015213,15017201,15019196,15021138,15023109,15025107,15026999,15028428,15029844,15031236,15032676,15034123,15035612,15037186,15038630,15040210,15041625,15043117,15044758,15046531,15048206,15049727,15051548,15053551,15055552,15057451,15059459,15061410,15063277,15065200,15067093,15069081,15071083,15073058,15074987,15076951,15078919,15080751,15082622,15084556,15086572,15088578,15090511,15092513,15094426,15096418,15098250,15100162,15102122,15104093,15106117,15108018,15110032,15111963,15113935,15115777,15117642,15119644,15121573,15123604,15125505,15127498,15129332,15131288,15133168,15135038,15137022,15138961,15140982,15142874,15144854,15146782,15148715,15150593,15152466,15154469,15156465,15158478,15160410,15162389,15164302,15166185,15168094,15170010,15171960,15173956,15175857,15177828,15179725,15181685,15183629,15185552,15187454,15189212,15190936,15192618,15194256,15195930,15197626,15199352,15201066,15202808,15204466,15206131,15207892,15209611,15211346,15213059,15214712,15216346,15218044,15219739,15221449,15223151,15224834,15226520,15228136,15229800,15231523,15233267,15235007,15236747,15238360,15239960,15241573,15243321,15245115,15246719,15248376,15250001,15251603,15253297,15255056,15256772,15258463,15260149,15261770,15263398,15265146,15266927,15268714,15270340,15271976,15273601,15275387,15277249,15279059,15280874,15282607,15284373,15286132,15287973,15289841,15291739,15293535,15295334,15297176,15298931,15300703,15302452,15304140,15305809,15307469,15309247,15310913,15312499,15314151,15315931,15317629,15319307,15321076,15322802,15324434,15326172,15327928,15329522,15331111,15332957,15334535,15336213,15337965,15339766,15341472,15343141,15344925,15346760,15348486,15350169,15351918,15353662,15355432,15357134,15358908,15360626,15362604,15364541,15366504,15368513,15370503,15372447,15374359,15376305,15378253,15380253,15382230,15384207,15386216,15388193,15390158,15392152,15394143,15396128,15398094,15400074,15402033,15404042,15406040,15408033,15410023,15411982,15413987,15415932,15417899,15419892,15421873,15423877,15425872,15427835,15429812,15431779,15433761,15435723,15437691,15439647,15441629,15443598,15445575,15447550,15449524,15451516,15453471,15455438,15457396,15459372,15461335,15463316,15465267,15467244,15469195,15471146,15473110,15475063,15477030,15478988,15480940,15482894,15484842,15486796,15488744,15490697,15492645,15494601,15496547,15498504,15500450,15502407,15504349,15506306,15508248,15510204,15512097,15514004,15515908,15517822,15519714,15521643,15523539,15525448,15527377,15529279,15531185,15533104,15535015,15536924,15538861,15540748,15542660,15544550,15546414,15548366,15550209,15552058,15554018,15555871,15557696,15559655,15561498,15563308,15565282,15567113,15568934,15570905,15572735,15574573,15576542,15578362,15580199,15582161,15584006,15585830,15587794,15589669,15591490,15593386,15595193,15597036,15598923,15600732,15602553,15604436,15606226,15608059,15609953,15611726,15613570,15615460,15617208,15619080,15620980,15622738,15624619,15626508,15628286,15630169,15632026,15633838,15635743,15637600,15639440,15641349,15643165,15645043,15646947,15648754,15650661,15652508,15654372,15656287,15658101,15659982,15661896,15663704,15665601,15667447,15669328,15671241,15673086,15674996,15676839,15678710,15680620,15682471,15684346,15686250,15688103,15689973,15691877,15693723,15695595,15697506,15699350,15701218,15703129,15704983,15706850,15708761,15710613,15712479,15714393,15716245,15718118,15720041,15721920,15723775,15725708,15727566,15729426,15731354,15733217,15735085,15737007,15738869,15740740,15742648,15744504,15746360,15748284,15750134,15751967,15753897,15755752,15757601,15759523,15761387,15763241,15765151,15767076,15768982,15770895,15772814,15774739,15776658,15778570,15780491,15782424,15784339,15786248,15788161,15790064,15791988,15793907,15795822,15797733,15799714,15801712,15803696,15805674,15807667,15809661,15811646,15813617,15815613,15817590,15819607,15821508,15823487,15825398,15827291,15829180,15831099,15833022,15834929,15836789,15838714,15840596,15842524,15844468,15846396,15848376,15850323,15852285,15854255,15856223,15858177,15860143,15862105,15864044,15866030,15867953,15869940,15871872,15873851,15875734,15877726,15879561,15881521,15883391,15885301,15887191,15889068,15890986,15892838,15894806,15896632,15898621,15900462,15902402,15904281,15906182,15908070,15909921,15911806,15913622,15915554,15917341,15919241,15921111,15922947,15924813,15926619,15928530,15930331,15932267,15934083,15935958,15937812,15939655,15941531,15943533,15945573,15947596,15949616,15951637,15953643,15955657,15957673,15959686,15961733,15963747,15965784,15967827,15969869,15971889,15973901,15975784,15977790,15979795,15981821,15983858,15985915,15987948,15989975,15992007,15994038,15996044,15998059,16000084,16002111,16004151,16006204,16008237,16010277,16012325,16014350,16016319,16018162,16020181,16022187,16024218,16026261,16028294,16030312,16032324,16034299,16036300,16038296,16040264,16042243,16044258,16046299,16048311,16050326,16052344,16054344,16056319,16058323,16060321,16062290,16064267,16066297,16068334,16070343,16072380,16074399,16076394,16078378,16080396,16082393,16084345,16086323,16088350,16090386,16092404,16094454,16096499,16098526,16100561,16102572,16104586,16106582,16108564,16110575,16112614,16114662,16116712,16118764,16120817,16122865,16124903,16126909,16128930,16130969,16132992,16135044,16137093,16139116,16141138,16143121,16145110,16147105,16149137,16151094,16153091,16155099,16157046,16159034,16161026,16162977,16164933,16166912,16168911,16170899,16172872,16174865,16176884,16178827,16180745,16182763,16184682,16186497,16188349,16190357,16192358,16194320,16196335,16198317,16200295,16202290,16204239,16206246,16208232,16210145,16212055,16213943,16215873,16217872,16219811,16221695,16223636,16225625,16227574,16229498,16231337,16233239,16235238,16237216,16239146,16240985,16242901,16244874,16246812,16248685,16250532,16252447,16254269,16256159,16258085,16260023,16261957,16263935,16265774,16267660,16269503,16271383,16273351,16275263,16277241,16279200,16281095,16282975,16284841,16286739,16288705,16290674,16292626,16294535,16296377,16298224,16300067,16301989,16303987,16305911,16307781,16309615,16311405,16313329,16315277,16317180,16319074,16320972,16322827,16324700,16326606,16328482,16330327,16332215,16334114,16335944,16337824,16339639,16341430,16343439,16345377,16347307,16349245,16351149,16352985,16354832,16356706,16358562,16360321,16362240,16364219,16366139,16368058,16370010,16371857,16373735,16375682,16377648,16379630,16381648,16383664,16385633,16387394,16389380,16391368,16393383,16395351,16397363,16399292,16401333,16403351,16405322,16407312,16409276,16411283,16413291,16415297,16417269,16419230,16421239,16423247,16425233,16427209,16429139,16431147,16433132,16435167,16437161,16439140,16441113,16443094,16445052,16447069,16449045,16451046,16453082,16455105,16457083,16459094,16461030,16463065,16465061,16467053,16469069,16471049,16473064,16475099,16476977,16478767,16480571,16482448,16484440,16486444,16488412,16490422,16492410,16494408,16496391,16498304,16500274,16502224,16504135,16506053,16508041,16510009,16511925,16513916,16515904,16517926,16519901,16521904,16523884,16525802,16527808,16529789,16531770,16533624,16535572,16537509,16539467,16541384,16543227,16545212,16547157,16549075,16550960,16552925,16554903,16556911,16558899,16560901,16562909,16564894,16566919,16568858,16570789,16572727,16574684,16576388,16578315,16580272,16582200,16584151,16586072,16588022,16590027,16592050,16594076,16596050,16598032,16600007,16602023,16604012,16606003,16607970,16609952,16611891,16613860,16615778,16617751,16619693,16621674,16623643,16625613,16627627,16629647,16631634,16633617,16635606,16637579,16639584,16641551,16643496,16645487,16647450,16649407,16651388,16653317,16655318,16657282,16659268,16661233,16663170,16665153,16667191,16669177,16671131,16673085,16675070,16677075,16679050,16681026,16683037,16685008,16687010,16689026,16690966,16692993,16694970,16696949,16698967,16700871,16702918,16704900,16706830,16708825,16710774,16712751,16714754,16716741,16718698,16720579,16722544,16724533,16726464,16728426,16730418,16732376,16734285,16736243,16738236,16740227,16742229,16744188,16746142,16748124,16750074,16752019,16753954,16755892,16757846,16759697,16761556,16763519,16765485,16767395,16769282,16771229,16773129,16775102,16777049,16778957,16780929,16782926,16784851,16786823,16788837,16790740,16792743,16794639,16796648,16798624,16800574,16802576,16804598,16806599,16808650,16810693,16812564,16814579,16816584,16818535,16820560,16822594,16824641,16826685,16828730,16830684,16832700,16834723,16836692,16838715,16840749,16842770,16844799,16846833,16848819,16850866,16852875,16854878,16856909,16858947,16860986,16863032,16865072,16867021,16869027,16871049,16873024,16875068,16877095,16879148,16881198,16883242,16885218,16887234,16889252,16891227,16893271,16895301,16897348,16899383,16901422,16903379,16905375,16907330,16909345,16911155,16913143,16915110,16917095,16919089,16921086,16923121,16925137,16927110,16929072,16931071,16933076,16934918,16936922,16938839,16940812,16942778,16944786,16946796,16948684,16950694,16952612,16954580,16956561,16958572,16960222,16962089,16963905,16965614,16967231,16968898,16970417,16972144,16973555,16975087,16976586,16978068,16979663,16980907,16982394,16983844,16985088,16986490,16987771,16989100,16990421,16991583,16993079,16994204,16995612,16996822,16997673,16999302,17000628,17001881,17003071,17004311,17005874,17006719,17007998,17009423,17010556,17012148,17013234,17014591,17015829,17017201,17018672,17019814,17021299,17022813,17024051,17025635,17027046,17028565,17030131,17031539,17033159,17034439,17035935,17037476,17038686,17040284,17041477,17042875,17044128,17045509,17046934,17048232,17049639,17050748,17051728,17053375,17054775,17055937,17057159,17058381,17059983,17060851,17062100,17063586,17064816,17066369,17067442,17068760,17069907,17071514,17072719,17074115,17075560,17077025,17078339,17079904,17081450,17082891,17084488,17085873,17087345,17088695,17090213,17091682,17092914,17094518,17095746,17097092,17098237,17099840,17101051,17102366,17103764,17104859,17105963,17107482,17108942,17110054,17111309,17112640,17114022,17114922,17116183,17117633,17118795,17120339,17121458,17122855,17124017,17125664,17126894,17128331,17129766,17131177,17132511,17134019,17135588,17137028,17138600,17140092,17141359,17142816,17144263,17145574,17146740,17148366,17149663,17151060,17152224,17153834,17154966,17156391,17157705,17158679,17159990,17161394,17162743,17163857,17165165,17166755,17167696,17168785,17170153,17171383,17172777,17173930,17175276,17176656,17177811,17179352,17180483,17181953,17183460,17184722,17186343,17187779,17189301,17190841,17192227,17193867,17195121,17196609,17198092,17199431,17200951,17202237,17203572,17204944,17206076,17207655,17208859,17210353,17211548,17212409,17214028,17215410,17216661,17217861,17219185,17220811,17221618,17222863,17224312,17225547,17227169,17228247,17229569,17230768,17232239,17233594,17234935,17236398,17237887,17239101,17240697,17242188,17243628,17245212,17246571,17248122,17249438,17250957,17252522,17253735,17255372,17256536,17257972,17259184,17260723,17261940,17263295,17264614,17265658,17266729,17268246,17269714,17270846,17272095,17273500,17274810,17275766,17277078,17278487,17279666,17281255,17282382,17283747,17284918,17286520,17287753,17289139,17290638,17292113,17293361,17294895,17296489,17298004,17299589,17301041,17302455,17303893,17305444,17306921,17307998,17309652,17310823,17312154,17313316,17314874,17316070,17317327,17318732,17319832,17320738,17322321,17323801,17324929,17326175,17327592,17328878,17329822,17331115,17332440,17333542,17335082,17336156,17337546,17338753,17340399,17341502,17342791,17344281,17345774,17347061,17348676,17350276,17351782,17353340,17354861,17356335,17357730,17359292,17360763,17361862,17363523,17364781,17366141,17367371,17368776,17370131,17371326,17372746,17373938,17374793,17376377,17377772,17379020,17380223,17381462,17383053,17383862,17385132,17386570,17387709,17389286,17390336,17391649,17392993,17394422,17395881,17397055,17398604,17400176,17401570,17403194,17404630,17406123,17407651,17409107,17410823,17412059,17413568,17415075,17416368,17417780,17419233,17420535,17421919,17423040,17424670,17425857,17427347,17428599,17429429,17431093,17432358,17433668,17434848,17436056,17437674,17438585,17439761,17441167,17442472,17443942,17445203,17446506,17447777,17449015,17450678,17451938,17453416,17454908,17456158,17457825,17459287,17460848,17462415,17463850,17465558,17466829,17468381,17469907,17471182,17472642,17474066,17475445,17476828,17477963,17479591,17480781,17482299,17483583,17484455,17486110,17487367,17488701,17489856,17491105,17492639,17493709,17494771,17496156,17497590,17498871,17500382,17501556,17502999,17504245,17505900,17507116,17508622,17510164,17511515,17513029,17514581,17516279,17517809,17519415,17520877,17522439,17523646,17524861,17526139,17527549,17529024,17530750,17532200,17533563,17534773,17536218,17537737,17539179,17540805,17542464,17543867,17545148,17546479,17548001,17549393,17550979,17552634,17554110,17555519,17556751,17558217,17559670,17561022,17562544,17564315,17565854,17567367,17568613,17569955,17571358,17572572,17573975,17575568,17577021,17578077,17579388,17580641,17582351,17583797,17585028,17586509,17588144,17589238,17590956,17592642,17594482,17596351,17598292,17599914,17601853,17603671,17605420,17607210,17609101,17610933,17612746,17614635,17616010,17617737,17619463,17621218,17622915,17624616,17626279,17627798,17628822,17629951,17631910,17633885,17635747,17637552,17638765,17639804,17641609,17643185,17644947,17646663,17648647,17650312,17652197,17654062,17655919,17657688,17659398,17661302,17663202,17665089,17666744,17668537,17670374,17671806,17673770,17675716,17677594,17679598,17681564,17683513,17685280,17687143,17688822,17690661,17692477,17694339,17696234,17698065,17699724,17701420,17703015,17704546,17706390,17708016,17709625,17711316,17712863,17714342,17715936,17717661,17719691,17721706,17723690,17725558,17727555,17729581,17731582,17733523,17735531,17737558,17739578,17741525,17743518,17745557,17747552,17749513,17751446,17753443,17755329,17757290,17759223,17761200,17763092,17765111,17767110,17769118,17771116,17773141,17775171,17777170,17779139,17781020,17782969,17785024,17787075,17789121,17791115,17793062,17794951,17796667,17798653,17800523,17802461,17804402,17806290,17808260,17810115,17812035,17813907,17815809,17817715,17819574,17821492,17823454,17825340,17827277,17829192,17831081,17832964,17834301,17835694,17837617,17839307,17840882,17842412,17843707,17845147,17846961,17848569,17850180,17851964,17853568,17855127,17856716,17858296,17859851,17861382,17862879,17864581,17866202,17867490,17868696,17870349,17872032,17873336,17874542,17876580,17878430,17880227,17881983,17883773,17885507,17887245,17889093,17890858,17892541,17894213,17895915,17897605,17899179,17900998,17902761,17904041,17905579,17907162,17908696,17910193,17911457,17912754,17914538,17916009,17917320,17918489,17919793,17921624,17923188,17924774,17926670,17928713,17930678,17932665,17934651,17936571,17938419,17940061,17941982,17943907,17945758,17947391,17949222,17951189,17953110,17954971,17956864,17958698,17960638,17962542,17964152,17966099,17967684,17969119,17970754,17972309,17973755,17975149,17976894,17978338,17979977,17981469,17983117,17984704,17986384,17987973,17989784,17991353,17992989,17994681,17996370,17997887,17999322,18000859,18002466,18004286,18005552,18006798,18008383,18009885,18011716,18013540,18015312,18016849,18018327,18019841,18021636,18023181,18024674,18026329,18027878,18029618,18031313,18032774,18034376,18036063,18037614,18039119,18040544,18042056,18043684,18045312,18046871,18048338,18049920,18051535,18053124,18054720,18055809,18057391,18058891,18060317,18061598,18062937,18064228,18065491,18066900,18068311,18069702,18070842,18072252,18073682,18074941,18076412,18077747,18079013,18080603,18082195,18083684,18085490,18087163,18088608,18090519,18092369,18094260,18096068,18097613,18099521,18101435,18103061,18104831,18106424,18108093,18109339,18111168,18113123,18114607,18116311,18118011,18119701,18121410,18123014,18124436,18126082,18127509,18129137,18130679,18132183,18133788,18135284,18136841,18138251,18139844,18141329,18142932,18144375,18145977,18147407,18149206,18151069,18152724,18154630,18156452,18158320,18159855,18161364,18162867,18164432,18166153,18168143,18170031,18171958,18173795,18175694,18177598,18179477,18180771,18181269,18181818,18182319,18183001,18183709,18184332,18184768,18185493,18187110,18189094,18191072,18193042,18194966,18196943,18198900,18200854,18202786,18204532,18206188,18207818,18209481,18211256,18212841,18214609,18216141,18217706,18219307,18220919,18222627,18224098,18225604,18227060,18228458,18229957,18231312,18232884,18234415,18235738,18236870,18238222,18239633,18241140,18242624,18244050,18245380,18247016,18248447,18250050,18251482,18252925,18254312,18255723,18257169,18258577,18259939,18261354,18263180,18264936,18266741,18268616,18270490,18272385,18274192,18275924,18277764,18279444,18281141,18282911,18284710,18286552,18288292,18290029,18291722,18292995,18293822,18294658,18295517,18296818,18298514,18300263,18301878,18303530,18305227,18306802,18308304,18309954,18311718,18313385,18315030,18316732,18318392,18320202,18321991,18323864,18325505,18327293,18328842,18330442,18332227,18333954,18335607,18337083,18339007,18340541,18342401,18344214,18346078,18347649,18349495,18351304,18353196,18354258,18355331,18356295,18357364,18358449,18359515,18360538,18361608,18363194,18364760,18366335,18367837,18369425,18370990,18372546,18374076,18375748,18377196,18378680,18380354,18381975,18383362,18384405,18385435,18386492,18387785,18389200,18390647,18392415,18394134,18395634,18396769,18398125,18399649,18400867,18401985,18403532,18405156,18406515,18408104,18409718,18411246,18412813,18414437,18416026,18417307,18418420,18419183,18420255,18420833,18421810,18422513,18423324,18424818,18426244,18427245,18427751,18428664,18429199,18429980,18430506,18431053,18432000,18432687,18433567,18434065,18434914,18435539,18436274,18436913,18437432,18438344,18439005,18439912,18440424,18441208,18441939,18442656,18443424,18443902,18444718,18445340,18446166,18446452,18446811,18447140,18447342,18447946,18448220,18448869,18449064,18449578,18449807,18449996,18450468,18450626,18451135,18451167,18451679,18451872,18452263,18452546,18452792,18454127,18455549,18457033,18458207,18459439,18460646,18462041,18463006,18463994,18464984,18465972,18466934,18467886,18468875,18469844,18471326,18472717,18474093,18475513,18477002,18478504,18479881,18481234,18482776,18484249,18485747,18487242,18488842,18490444,18491958,18493488,18494982,18496578,18497989,18499417,18500802,18502224,18503654,18505073,18506513,18507985,18509439,18510814,18512208,18513601,18514822,18515744,18516680,18517621,18518723,18519678,18520612,18521537,18522584,18523507,18524425,18525378,18526295,18527731,18529127,18530557,18531947,18533187,18534108,18535033,18535971,18537233,18538839,18540439,18542033,18543650,18545121,18546686,18548257,18549859,18551508,18552860,18554207,18555525,18556794,18558095,18559398,18560712,18562195,18563738,18565234,18566664,18568092,18569207,18570554,18571807,18573355,18574987,18576694,18578284,18579789,18581353,18583190,18584940,18586730,18588214,18589500,18590722,18592197,18593616,18595153,18596348,18597513,18599003,18600449,18602079,18603498,18604991,18606417,18607848,18609591,18611272,18612906,18614586,18616107,18617776,18619405,18621067,18622837,18624394,18626102,18627748,18629391,18630960,18632610,18634267,18635786,18637462,18639123,18640740,18642399,18643928,18645547,18647187,18648849,18650470,18652078,18653779,18655469,18657138,18658696,18660375,18662039,18663610,18665384,18667021,18668661,18670299,18671997,18673819,18675433,18677060,18678682,18680515,18682208,18683877,18685563,18687249,18689033,18690673,18692366,18693974,18695348,18696298,18697262,18698214,18699454,18700960,18702486,18704016,18705567,18706967,18708277,18709605,18710954,18712222,18713400,18714632,18715831,18717261,18718470,18719370,18720361,18721627,18722841,18724025,18725111,18726163,18727449,18728453,18729381,18730264,18731850,18733350,18734865,18736400,18737942,18739445,18740954,18742503,18744093,18745630,18747034,18748407,18749806,18751161,18752544,18753901,18755287,18756961,18758507,18760032,18761584,18763167,18764705,18766226,18767765,18769304,18771076,18772681,18774271,18775918,18777552,18779147,18780743,18782405,18784186,18785645,18787079,18788479,18789855,18791325,18792769,18794179,18795606,18797463,18799216,18800938,18802619,18804370,18806107,18807807,18809504,18811392,18813142,18814857,18816548,18818211,18819938,18821618,18823300,18824972,18826507,18827531,18828762,18829815,18830936,18832030,18833178,18834388,18835552,18836622,18837572,18838456,18839136,18839816,18840487,18841864,18843547,18845272,18846994,18848667,18850424,18852135,18853888,18855557,18857441,18859196,18860890,18862520,18864236,18865895,18867648,18869363,18871218,18873015,18874777,18876565,18878282,18880086,18881839,18883644,18885372,18887246,18888960,18890676,18892297,18893970,18895641,18897347,18899015,18900788,18902192,18903702,18905104,18906601,18907828,18908830,18909843,18910877,18912607,18914434,18916248,18918065,18919729,18921598,18923375,18925212,18927041,18928556,18929732,18930955,18932407,18934033,18935060,18936105,18937219,18938986,18940633,18942251,18943848,18945401,18947077,18948693,18950276,18951902,18953554,18955023,18956447,18957867,18959260,18960740,18962167,18963578,18965049,18966766,18968229,18969872,18971378,18972820,18974277,18975741,18977167,18978848,18980470,18982074,18983671,18985230,18986844,18988473,18990071,18991833,18993353,18994810,18996266,18997734,18999176,19000629,19002052,19003539,19005186,19007010,19008840,19010664,19012347,19014198,19015983,19017816,19019662,19021342,19022987,19024605,19026292,19027820,19029474,19031065,19032708,19034377,19035839,19037295,19038737,19040119,19041682,19043159,19044623,19046035,19047909,19049724,19051576,19053448,19055130,19056985,19058793,19060676,19062374,19064051,19065695,19067297,19068908,19070564,19072201,19073809,19075500,19077090,19078544,19079981,19081440,19082841,19084332,19085764,19087230,19088787,19090625,19092405,19094297,19096126,19097886,19099709,19101536,19103407,19104860,19105661,19107454,19108237,19108929,19110120,19110789,19111634,19112627,19113313,19114583,19115879,19116520,19117247,19118200,19119552,19120551,19121828,19123218,19124465,19125120,19126295,19127619,19128731,19130092,19131203,19132913,19134031,19135239,19136222,19137660,19139308,19140863,19142602,19144258,19146023,19147559,19149222,19150769,19152391,19153493,19154285,19155728,19157240,19158796,19159819,19160835,19161842,19162824,19164196,19165304,19166351,19167455,19168779,19170501,19172532,19174564,19176584,19178590,19180606,19182611,19184600,19186613,19188640,19190674,19192674,19194672,19196682,19198677,19200700,19202661,19204686,19206708,19208734,19210741,19212742,19214751,19216760,19218715,19220744,19222778,19224810,19226806,19228812,19230826,19232838,19234847,19236795,19238835,19240875,19242777,19244694,19246584,19248491,19250426,19252263,19254112,19256001,19257900,19259793,19261685,19263520,19265397,19267214,19269094,19270990,19272777,19274438,19276115,19277780,19279450,19281108,19282755,19284361,19286134,19287796,19289465,19291130,19292773,19294416,19296073,19297714,19299295,19300971,19302397,19303830,19305275,19306710,19308154,19309545,19310918,19312432,19314009,19315479,19316888,19318492,19319809,19321405,19322854,19324545,19325922,19327398,19328890,19330546,19331997,19333485,19335043,19336639,19338101,19339385,19340920,19342298,19344278,19346032,19347498,19349150,19350788,19352328,19353860,19355415,19357129,19358671,19360230,19361851,19363501,19365268,19366927,19368516,19370060,19371725,19373275,19374854,19376407,19377944,19379480,19381064,19382588,19384083,19385734,19387194,19388886,19390466,19392029,19393624,19395350,19396949,19398603,19400351,19402124,19403619,19405216,19407151,19409046,19410753,19412449,19414303,19416266,19418192,19420133,19422106,19424040,19425990,19427923,19429851,19431659,19433507,19435370,19437299,19439225,19441077,19442933,19444766,19446572,19448354,19450124,19451882,19453855,19455821,19457783,19459757,19461659,19463578,19465462,19467364,19469312,19471281,19473158,19475064,19476911,19478724,19480541,19482381,19484155,19486117,19488108,19490091,19492056,19494008,19495947,19497875,19499790,19501732,19503697,19505526,19507348,19509100,19510889,19512650,19514435,19516177,19518030,19519866,19521730,19523494,19525312,19527149,19528954,19530772,19532553,19534330,19535782,19537228,19538696,19540098,19541542,19542951,19544378,19545841,19547818,19549768,19551692,19553704,19555652,19557565,19559466,19561379,19563282,19565163,19567073,19569079,19571017,19572978,19574894,19576787,19578670,19580602,19582485,19584415,19586228,19587719,19589254,19590854,19592454,19594043,19595639,19597146,19598857,19600690,19602506,19604290,19606019,19607806,19609555,19611298,19613018,19614715,19616047,19617346,19618642,19620028,19621324,19622702,19624067,19625486,19627056,19628533,19630013,19631554,19633141,19634621,19636100,19637578,19639204,19640892,19642380,19644040,19645651,19647283,19648799,19650408,19651786,19653114,19654448,19655647,19656966,19658094,19659354,19660951,19662845,19664710,19666556,19668461,19670363,19672266,19674116,19676004,19677973,19679890,19681767,19683649,19685532,19687405,19689294,19691166,19693078,19694558,19695982,19697383,19698757,19700210,19701698,19703148,19704628,19706348,19707983,19709687,19711420,19713142,19714739,19716335,19717888,19719461,19721104,19722657,19724235,19725849,19727528,19729272,19730979,19732629,19734377,19735830,19737284,19738767,19740237,19741622,19742995,19744407,19745845,19747515,19748969,19750466,19752021,19752972,19754523,19756014,19757492,19759128,19760627,19762120,19763624,19765119,19766558,19768050,19769562,19771083,19773023,19774995,19776928,19778750,19780164,19781579,19783004,19784082,19785480,19786892,19788293,19789815,19791100,19792259,19793388,19794536,19795370,19796466,19797665,19798815,19800287,19801702,19803179,19804940,19806833,19808715,19810624,19812510,19814405,19816302,19818189,19819964,19821547,19823102,19824516,19826040,19827572,19828430,19829326,19830129,19830966,19831879,19832623,19833457,19834198,19835204,19836134,19837039,19837851,19838810,19839770,19840798,19841748,19843071,19844335,19845669,19846892,19848021,19848292,19848823,19849339,19849859,19850078,19850623,19851026,19852319,19853421,19854197,19855061,19855979,19857332,19858058,19859397,19860407,19860604,19860825,19861297,19861649,19862775,19864063,19865642,19867181,19869089,19870826,19872623,19874458,19876262,19878048,19879813,19881563,19883362,19884984,19886638,19888248,19889863,19891432,19893087,19894724,19896255,19897790,19899123,19900460,19901774,19903301,19904965,19906654,19908286,19909940,19911624,19913307,19914990,19916662,19918329,19919990,19921631,19922878,19924398,19926198,19928068,19929861,19931627,19933468,19935313,19937140,19938892,19940589,19942045,19943507,19944949,19946507,19948379,19950224,19952099,19953973,19955829,19957709,19959545,19961416,19963242,19964511,19966267,19967725,19968867,19970049,19971125,19972105,19974154,19976167,19978163,19980091,19982030,19983994,19985915,19987816,19989699,19991650,19993606,19995567,19997476,19999407,20001313,20003234,20005219,20007092,20008757,20010508,20012287,20014130,20015904,20017634,20019235,20020994,20023045,20025095,20027148,20029192,20031238,20033274,20035328,20037372,20039420,20041468,20043514,20045555,20047603,20049640,20051691,20053730,20055784,20057687,20059590,20061467,20063284,20065108,20066958,20068778,20070637,20072593,20074493,20076388,20078236,20080093,20081919,20083796,20085618,20087502,20088961,20090529,20091327,20092099,20092870,20093612,20094396,20094767,20095608,20096482,20097320,20097783,20098292,20099090,20100000,20100792,20101185,20101860,20102622,20103495,20104158,20104563,20105318,20106156,20107031,20107537,20108080,20109273,20110307,20111544,20112137,20112634,20113868,20114920,20116050,20116577,20117212,20118390,20119477,20120550,20120932,20121788,20122937,20123964,20124906,20126081,20127306,20128868,20130154,20131828,20133472,20134474,20135631,20136782,20137905,20139085,20140202,20141281,20142400,20143543,20144685,20145842,20147029,20148150,20149233,20150260,20151371,20153013,20154100,20155201,20156388,20157484,20158513,20159615,20160655,20161714,20162717,20163587,20164597,20165642,20166576,20167467,20168212,20169085,20170495,20170935,20171463,20171967,20172500,20173061,20173552,20174110,20174666,20175136,20175623,20176103,20176624,20177149,20177664,20178215,20178758,20180057,20181520,20183018,20184526,20186076,20187565,20189077,20190591,20192054,20193288,20194255,20195229,20196495,20198207,20199626,20201009,20202347,20203667,20205120,20206831,20208463,20210101,20211768,20213374,20214989,20216648,20218301,20219969,20221697,20223167,20224640,20226166,20227649,20229135,20230638,20232117,20233748,20234770,20235891,20237129,20238452,20239790,20241093,20242416,20243518,20244869,20246290,20247719,20249171,20250680,20252179,20253732,20255254,20256870,20258392,20259349,20260479,20261639,20262784,20263972,20265067,20266186,20267264,20268418,20269581,20270747,20271928,20273058,20274136,20275200,20276295,20277913,20279016,20280108,20281303,20282391,20283458,20284538,20285586,20286620,20287640,20288518,20289521,20290559,20291431,20292304,20293066,20293961,20295368,20295807,20296344,20296848,20297382,20297960,20298445,20299017,20299588,20300034,20300527,20300996,20301519,20302025,20302551,20303121,20303639,20305160,20306948,20308727,20310534,20312323,20314120,20315864,20317740,20319132,20320548,20321911,20323291,20324930,20326247,20327444,20328658,20330028,20331592,20332912,20334186,20335693,20337119,20338141,20339214,20340188,20341540,20343198,20344797,20346499,20348125,20349524,20350707,20351847,20352969,20354458,20355637,20357391,20359070,20360682,20362374,20364064,20365724,20367333,20368982,20370711,20371956,20373205,20374774,20376142,20378054,20379688,20381706,20383448,20385199,20386806,20388517,20390233,20391880,20393619,20395366,20397121,20398732,20400208,20401760,20403306,20404858,20406354,20407956,20409383,20411007,20412629,20414219,20415804,20417399,20418972,20420531,20422137,20423873,20425359,20427096,20428924,20430493,20431841,20433572,20435362,20437000,20438749,20439807,20440850,20441974,20443144,20444272,20445442,20446477,20447615,20448707,20449857,20450999,20452187,20453343,20454420,20455472,20456578,20457921,20458827,20460088,20461216,20462190,20462689,20463853,20465105,20466331,20467279,20468132,20469289,20470412,20471422,20471830,20473052,20474249,20475404,20476385,20477093,20478222,20479369,20480465,20480891,20482053,20483232,20484374,20485294,20486109,20487243,20488478,20489625,20490045,20491125,20492315,20493495,20494403,20495368,20496526,20497763,20498982,20499345,20500361,20501622,20502728,20503618,20505226,20506324,20507421,20508595,20509671,20510739,20511821,20512872,20513903,20514926,20515797,20516814,20517849,20518733,20519617,20520387,20521286,20522433,20523576,20524772,20525919,20526488,20527325,20528541,20529658,20530666,20531850,20533026,20534172,20535393,20536557,20537858,20538986,20540220,20541379,20542606,20543796,20544911,20546140,20547324,20548633,20549750,20550883,20552064,20553255,20554509,20555710,20556787,20557769,20558818,20560153,20561347,20562372,20563391,20564521,20565830,20566924,20567938,20568943,20570075,20571427,20572513,20573500,20574560,20575864,20576896,20577326,20577897,20579003,20580474,20582233,20584081,20585941,20587794,20589437,20590833,20591552,20592046,20592555,20593075,20593667,20594255,20595745,20596815,20598045,20599539,20600774,20601809,20603129,20604648,20605737,20606958,20608448,20609698,20610716,20612012,20613883,20615628,20617370,20619183,20620966,20622773,20624595,20626421,20628097,20630005,20631717,20633564,20635346,20637106,20638985,20640755,20642585,20644382,20646180,20647929,20649744,20651636,20653343,20655083,20656971,20658677,20660574,20662341,20664094,20666001,20667764,20669485,20671278,20673179,20674916,20676724,20678575,20680264,20682176,20683851,20685689,20687468,20689265,20691013,20692801,20694626,20696404,20698231,20700067,20701817,20703717,20705446,20707191,20709091,20710802,20712647,20714430,20716186,20718166,20720030,20721763,20723477,20725407,20727101,20728932,20730821,20732515,20734399,20736142,20737979,20739729,20741583,20743335,20745126,20746984,20748753,20750504,20752127,20753251,20754498,20755670,20756934,20758134,20759345,20760535,20761737,20762127,20762946,20763853,20764696,20765136,20765686,20766494,20767370,20768166,20768556,20769245,20770047,20770914,20771546,20771954,20772697,20773532,20774430,20774898,20776512,20777493,20778624,20779763,20780890,20782078,20783187,20784275,20785399,20786541,20787675,20788816,20789969,20791113,20792241,20793275,20794364,20795900,20797348,20799014,20800100,20801187,20802340,20803477,20804557,20805627,20806739,20807770,20808783,20809647,20810646,20811726,20812705,20813552,20814332,20815196,20816539,20817970,20819373,20820872,20821300,20821825,20822332,20822862,20823444,20823927,20824498,20825072,20825519,20826026,20826502,20827012,20827525,20828052,20828621,20829126,20830574,20832218,20833861,20835460,20837131,20838817,20840429,20842093,20843762,20845464,20847246,20848906,20850515,20852114,20853757,20855400,20856726,20857082,20857922,20858867,20859284,20859596,20860355,20861137,20863147,20865179,20867188,20869210,20871231,20873212,20875213,20877164,20879190,20881206,20883233,20885239,20887241,20889262,20891273,20893259,20895269,20896722,20898152,20899722,20901322,20902610,20903632,20905063,20906190,20907311,20908431,20909547,20910666,20911790,20912839,20912937,20913375,20915375,20917411,20919271,20921151,20923062,20924928,20926761,20928637,20930536,20932401,20934349,20936275,20938214,20940169,20942056,20943968,20945882,20947824,20949706,20951435,20953449,20955374,20957274,20959165,20961093,20962988,20964751,20966546,20968337,20970176,20972076,20973969,20975860,20977696,20979593,20981481,20983360,20985228,20987194,20989033,20990884,20992725,20994617,20996519,20998295,20999915,21000035,21000644,21001183,21001850,21002493,21003057,21003666,21004392,21005138,21005810,21006539,21007389,21008300,21008935,21009794,21010176,21011111,21011573,21011981,21013386,21014116,21015172,21015440,21015778,21016149,21016707,21018403,21019864,21021427,21023064,21024651,21026217,21027696,21029188,21030783,21032417,21034033,21035652,21037147,21038718,21040276,21041833,21043445,21045242,21046830,21048335,21049935,21051615,21053520,21055306,21057055,21058869,21060737,21062576,21064433,21066296,21068124,21069437,21070720,21072059,21073442,21074764,21076096,21077441,21078688,21080343,21081792,21083239,21084691,21086178,21087647,21089097,21090513,21092116,21093593,21095045,21096491,21097959,21099454,21100894,21102340,21103766,21105394,21106837,21108276,21109706,21111225,21112684,21114117,21115552,21117145,21118613,21120034,21121444,21122890,21124397,21125845,21127277,21128685,21130301,21131714,21133085,21134520,21136004,21137469,21138888,21140312,21141818,21143311,21144692,21146036,21147510,21148972,21150408,21151825,21153248,21154863,21156264,21157651,21159081,21160529,21162015,21163449,21164847,21166293,21167906,21169274,21170710,21172205,21173685,21175165,21176613,21178031,21179666,21181132,21182548,21184006,21185483,21186951,21188419,21189860,21191247,21192826,21194184,21195491,21196835,21198182,21199530,21200838,21202096,21203646,21205010,21206328,21207644,21209043,21210393,21211778,21213124,21214396,21215965,21217280,21218556,21219914,21221273,21222600,21223880,21225206,21226622,21228119,21229565,21231009,21232489,21233952,21235436,21236889,21238279,21239929,21241351,21242731,21244198,21245676,21247172,21248606,21250017,21251483,21253053,21254417,21255807,21257253,21258688,21260130,21261527,21262919,21264543,21265963,21267342,21268761,21270230,21271690,21273114,21274519,21275918,21277527,21278894,21280306,21281715,21283219,21284683,21286095,21287515,21289135,21290602,21292027,21293436,21294889,21296390,21297848,21299286,21300693,21302467,21304167,21306009,21307712,21309629,21311234,21312977,21314778,21316598,21318421,21320192,21321879,21323541,21325344,21327107,21328825,21330597,21332454,21334245,21336136,21337970,21339863,21341705,21343606,21345456,21347301,21349226,21351049,21352807,21354621,21356444,21358238,21360004,21361813,21363768,21365553,21367349,21369052,21370828,21372561,21374300,21376001,21377756,21379655,21381470,21383251,21384992,21386774,21388535,21390272,21392026,21393952,21395829,21397688,21399519,21401338,21403130,21404998,21406794,21408598,21410510,21412230,21414013,21415743,21417487,21419211,21420972,21422733,21424613,21426328,21428238,21430086,21431916,21433755,21435537,21437306,21439100,21440885,21442739,21444420,21446172,21447873,21449431,21451186,21452916,21454535,21456296,21458155,21459861,21461637,21463317,21464937,21466607,21468247,21470066,21471993,21473626,21475258,21476907,21478543,21480238,21481910,21483609,21485236,21486998,21488695,21490310,21491964,21493680,21495379,21497084,21498753,21500543,21502327,21504115,21505870,21507665,21509501,21511270,21513092,21514861,21516708,21518510,21520216,21521952,21523728,21525534,21527301,21529076,21530872,21532677,21534487,21536374,21538240,21540092,21542038,21543982,21545779,21547594,21549268,21550933,21552691,21554450,21556183,21557988,21559697,21561437,21563245,21564906,21566704,21568507,21570303,21572130,21573989,21575693,21577489,21578940,21580459,21581973,21583503,21585007,21586504,21587995,21589507,21591528,21593501,21595433,21597405,21599420,21601356,21603340,21605311,21607220,21609172,21611167,21613189,21615156,21617078,21619061,21621047,21623059,21624784,21625529,21625567,21625607,21625645,21625963,21626003,21626041,21626081,21626408,21628320,21630100,21631935,21633776,21635609,21637434,21639219,21641032,21642871,21644318,21645785,21647231,21648688,21650126,21651580,21653004,21654489,21656379,21658211,21660022,21661782,21663566,21665332,21667117,21668913,21670350,21671234,21671274,21671312,21671352,21671392,21671705,21671745,21671783,21671823,21672701,21673778,21675455,21677175,21678897,21680653,21682413,21684144,21685855,21687605,21689361,21691179,21692281,21693492,21694941,21696347,21697016,21698579,21700073,21701416,21702314,21704094,21705773,21707413,21708195,21708233,21708273,21708311,21708629,21708669,21708707,21708747,21709068,21710418,21711886,21713043,21714261,21715922,21717580,21719197,21720873,21722553,21724232,21725884,21727491,21729131,21729346,21729384,21729424,21729464,21730511,21731117,21731197,21732113,21733964,21735928,21737741,21739421,21741039,21742672,21744336,21746022,21747743,21749489,21751186,21752922,21754666,21756396,21758137,21759867,21761574,21763253,21764924,21766089,21767061,21767780,21768531,21770345,21772114,21773846,21775558,21777290,21779078,21780764,21782504,21784386,21786224,21788009,21789889,21791715,21793600,21795421,21797310,21799117,21800966,21802658,21804331,21806143,21807773,21809581,21811326,21813026,21814896,21816673,21818628,21820464,21822386,21824249,21826136,21828052,21829888,21831922,21833207,21834387,21835531,21836544,21837667,21839092,21840444,21841822,21843176,21844577,21845802,21846952,21848053,21849205,21850355,21851606,21853175,21853977,21854792,21855706,21856717,21858012,21859729,21861028,21861764,21862416,21863202,21864524,21866130,21867870,21869537,21870414,21871662,21873184,21874684,21875908,21876908,21877692,21878662,21879472,21879985,21880874,21882059,21883433,21884649,21885814,21887176,21888552,21889958,21891275,21892634,21894473,21896371,21898236,21900148,21901993,21903842,21905745,21907633,21909464,21911363,21913293,21915227,21917105,21918994,21920870,21922810,21924223,21925159,21926071,21927011,21928403,21930350,21932209,21934004,21935995,21937165,21938325,21939550,21940743,21942676,21944700,21946664,21948697,21950662,21952566,21954458,21956373,21958269,21960304,21962350,21964390,21966424,21968245,21970056,21971837,21973684,21975469,21977294,21979009,21980830,21982663,21984612,21986551,21988483,21990417,21992083,21993357,21994658,21996283,21997713,21998923,22000183,22001453,22002822,22004004,22005267,22006487,22007982,22009587,22010792,22012010,22013617,22015356,22016222,22016953,22018378,22019798,22020759,22021514,22022573,22024017,22025366,22026106,22027013,22028785,22030459,22031796,22033191,22034845,22036710,22038442,22040228,22042020,22043849,22045604,22047456,22049308,22051135,22052795,22054472,22056173,22057840,22059664,22061436,22063252,22065012,22066671,22068096,22069503,22070943,22072536,22073979,22075369,22076828,22078398,22079921,22081387,22082836,22084383,22086008,22087533,22088955,22090472,22092331,22094308,22096276,22098205,22100199,22102159,22104146,22106122,22108113,22109941,22111699,22113456,22115200,22117020,22118610,22120167,22121747,22123577,22125492,22127322,22129198,22131137,22132897,22134741,22136510,22138352,22140336,22142206,22144044,22145951,22147859,22149659,22151461,22153265,22155128,22156707,22158295,22159882,22161522,22162714,22163938,22165495,22166946,22168108,22169374,22170555,22172138,22173425,22174621,22175907,22177612,22179363,22181153,22182914,22184688,22186604,22188399,22190184,22191962,22193820,22195649,22197468,22199290,22200929,22201748,22202614,22203475,22204250,22205454,22206633,22207779,22208959,22210241,22211434,22212616,22213807,22215144,22216506,22217918,22219236,22220714,22222545,22224394,22226256,22228100,22229973,22231785,22233643,22235485,22237433,22239322,22241255,22243183,22245120,22247040,22248967,22250924,22252871,22254642,22256486,22258316,22260096,22261913,22263769,22265489,22267092,22268768,22270506,22272387,22274212,22276112,22277988,22279808,22281684,22283550,22285128,22286603,22288022,22289514,22291072,22292611,22294374,22295997,22297562,22299163,22300806,22302535,22304190,22305945,22307755,22309493,22311310,22313188,22315232,22317281,22319286,22321221,22323203,22325188,22327152,22329115,22331054,22333003,22334931,22336803,22338101,22339342,22340800,22341858,22343474,22345267,22347009,22348766,22350503,22352034,22353634,22355115,22356689,22358500,22360256,22362056,22363781,22365636,22367443,22369245,22371031,22372832,22374548,22376253,22377952,22379658,22381276,22383081,22384889,22386512,22387908,22388903,22390002,22391039,22392475,22393417,22394290,22395168,22396469,22397449,22398634,22399600,22400810,22401398,22402060,22402567,22403167,22404040,22404818,22405587,22406249,22407063,22408153,22409449,22410630,22411608,22412891,22414215,22415713,22417078,22418433,22419924,22421444,22423142,22424498,22425864,22427506,22429057,22430499,22432174,22433786,22435465,22437030,22437411,22437645,22437841,22438056,22438973,22439459,22439903,22440356,22441831,22443874,22445913,22447965,22450003,22452030,22454081,22456119,22458139,22460148,22462082,22464003,22465969,22467844,22469755,22471682,22473591,22475369,22476797,22478176,22479648,22481118,22482253,22483441,22484595,22485629,22487038,22488462,22489885,22491337,22492959,22494819,22496623,22498432,22500300,22502162,22503971,22505757,22507626,22509464,22511203,22512952,22514693,22516413,22518147,22519915,22521620,22523252,22524638,22526093,22527597,22529069,22530447,22531934,22533486,22534961,22536703,22538571,22540460,22542332,22544033,22545265,22546505,22547695,22549177,22551017,22552820,22554603,22556452,22557916,22559402,22560817,22562293,22564106,22566121,22568153,22570182,22572220,22574224,22576220,22578199,22580209,22581738,22583235,22584710,22586211,22587999,22589672,22591328,22593007,22594913,22596907,22598889,22600882,22602902,22604616,22606307,22608042,22609770,22611818,22613871,22615925,22617982,22619620,22620855,22622076,22622604,22623141,22623664,22624297,22625479,22626897,22628307,22629543,22630677,22632158,22633547,22635058,22636271,22637773,22639333,22640965,22642418,22643825,22645448,22647275,22648946,22650809,22652477,22653719,22655021,22656289,22657643,22658603,22659600,22660615,22661571,22662748,22663724,22664753,22665590,22666634,22668606,22670591,22672547,22674495,22676518,22678537,22680519,22682513,22684511,22686147,22687624,22689214,22690883,22692621,22694273,22695999,22697613,22699412,22700921,22702462,22704091,22705872,22707473,22709202,22710902,22712589,22714051,22715760,22717360,22718805,22720293,22721879,22723436,22724863,22726646,22728584,22730450,22732300,22734182,22736070,22737943,22739793,22741686,22743433,22744938,22746369,22747960,22749913,22751896,22753864,22755853,22757837,22759652,22761449,22763271,22765099,22766957,22768871,22770786,22772615,22774132,22775577,22777002,22778390,22779885,22781373,22782897,22784373,22785886,22787415,22789144,22790832,22792447,22793967,22795577,22797098,22798584,22800306,22802033,22803645,22805402,22807119,22808819,22810472,22812244,22813961,22815640,22817293,22818851,22820530,22822178,22823830,22825355,22827046,22828696,22830237,22831751,22833295,22834797,22836553,22837869,22839605,22841326,22842803,22844293,22845810,22847332,22848805,22850348,22852003,22853661,22855076,22856388,22857633,22859179,22860774,22862530,22864013,22865550,22867244,22868672,22870358,22872123,22873860,22875436,22877049,22878320,22879538,22880737,22882024,22883354,22884616,22885839,22887451,22888924,22890430,22891720,22893104,22894249,22895406,22896595,22897871,22899113,22900530,22901969,22903311,22904697,22906286,22907567,22908810,22910266,22912046,22913920,22915610,22917043,22918233,22919239,22920199,22921098,22922167,22923270,22924480,22925757,22927138,22928769,22930344,22931988,22933784,22935437,22936609,22937596,22938588,22939553,22940333,22941004,22942363,22943377,22944744,22945943,22947204,22948466,22949953,22951584,22953314,22955172,22957098,22958813,22960587,22962345,22963833,22965058,22966283,22967621,22968894,22970200,22971481,22972789,22974017,22975270,22976570,22977849,22979145,22980877,22982468,22984134,22985759,22987298,22988698,22990314,22992041,22993670,22995146,22996384,22997566,22998851,23000124,23001384,23002757,23004256,23006075,23007554,23008827,23010191,23011403,23012664,23013753,23015004,23016445,23017930,23019663,23021321,23022960,23024447,23025822,23027335,23028649,23030393,23031862,23033347,23034578,23035842,23037091,23038259,23039505,23040865,23042448,23044195,23045879,23047595,23049094,23050707,23052454,23054003,23055620,23057164,23058366,23058635,23059431,23061028,23062281,23062543,23063313,23064880,23066109,23066371,23067138,23068692,23069927,23070188,23070930,23072474,23073732,23074006,23074721,23076242,23077508,23077770,23078396,23079655,23080859,23082165,23083483,23084877,23086119,23087486,23088735,23090183,23091450,23092756,23094065,23095460,23096771,23098081,23099419,23100784,23102116,23103606,23104880,23106093,23107389,23108653,23109904,23111140,23112388,23113934,23115168,23116350,23117568,23118831,23119983,23121205,23122447,23123653,23125149,23126409,23127644,23128898,23130161,23131409,23132668,23133917,23135416,23137225,23138974,23140731,23142401,23144043,23145726,23147633,23149618,23150827,23152142,23153443,23154839,23156153,23157586,23158874,23160212,23161598,23162922,23164327,23165650,23167048,23168445,23169862,23171255,23173016,23174688,23176295,23177874,23179533,23181088,23182647,23184165,23185459,23186874,23188216,23189636,23191177,23192666,23194161,23195674,23197339,23199219,23200912,23202526,23204130,23205770,23207346,23208950,23210441,23211727,23213096,23214449,23215829,23217368,23218864,23220383,23221870,23223494,23225335,23227083,23228711,23230322,23231900,23233492,23235097,23236568,23237893,23239250,23240627,23242020,23243555,23245069,23246604,23248051,23249654,23251444,23253283,23254920,23256511,23258102,23259720,23261336,23262837,23264221,23265529,23266901,23268314,23269807,23271324,23272881,23274301,23275880,23277613,23279246,23280448,23281646,23282664,23283490,23284390,23285473,23286454,23287544,23288662,23289920,23291124,23292202,23293076,23294109,23295129,23296191,23297785,23298960,23300164,23301204,23302053,23302924,23303973,23304968,23306007,23307124,23308406,23309624,23310753,23311652,23312669,23313686,23314746,23316597,23318535,23320419,23322377,23324333,23326317,23328239,23330189,23332075,23333923,23335707,23337508,23339407,23341298,23343252,23345185,23347121,23348595,23350557,23352489,23354447,23356433,23358416,23360402,23362340,23364304,23366248,23368012,23369763,23371524,23373288,23375061,23376871,23378684,23380421,23382243,23384010,23385784,23387553,23389326,23390955,23392934,23394899,23396817,23398714,23400605,23402585,23404212,23404897,23405672,23407600,23409555,23411558,23413538,23415510,23417462,23419454,23421404,23423393,23425354,23427311,23429277,23431258,23433206,23435175,23437116,23439096,23440953,23442536,23444097,23445659,23447213,23448799,23450338,23451911,23453552,23455321,23456947,23458641,23460275,23461894,23463754,23465566,23467401,23469204,23470958,23472463,23474032,23475504,23477168,23478819,23480575,23482176,23483839,23485496,23487162,23488892,23490620,23492477,23494297,23496119,23498003,23499859,23501504,23503249,23504835,23506572,23508404,23510205,23512059,23513907,23515545,23517141,23518716,23520253,23521918,23523590,23525351,23526980,23528745,23530441,23532235,23533972,23535753,23537350,23538901,23540638,23542335,23544036,23545558,23547425,23549104,23550834,23552466,23554286,23555970,23557653,23559273,23560914,23562627,23564136,23565718,23567416,23569106,23570746,23572331,23573825,23575750,23577585,23578581,23580373,23582293,23584122,23586017,23587589,23589613,23591614,23593625,23595313,23596904,23598303,23599490,23600781,23601938,23603429,23605029,23606631,23608130,23609584,23611060,23612549,23614048,23615568,23617110,23618327,23619314,23620190,23621188,23622494,23623606,23624546,23625651,23626719,23628402,23630219,23632091,23633985,23635739,23637611,23639359,23641181,23643124,23644950,23646537,23648178,23649828,23651530,23653327,23655099,23656748,23658615,23660468,23662304,23664179,23665927,23667832,23669603,23671424,23673307,23675158,23676807,23678450,23680135,23681827,23683631,23685391,23687100,23688959,23690722,23692641,23694413,23696334,23698100,23700019,23701871,23703761,23705719,23707629,23709625,23711603,23713492,23715460,23717423,23719383,23721387,23723256,23724956,23726681,23728479,23730262,23732104,23733991,23735794,23737515,23739132,23740471,23741748,23743444,23745000,23746716,23747969,23749066,23750181,23751151,23751786,23752076,23753212,23754468,23755772,23757077,23758399,23759872,23761163,23762482,23763813,23765131,23766596,23767894,23769232,23770527,23771939,23773277,23774619,23775968,23777309,23778763,23780263,23781621,23782884,23784413,23786120,23788020,23789979,23792009,23794048,23796048,23798054,23800028,23801967,23803620,23805265,23806783,23808284,23810011,23811587,23813307,23815025,23816711,23818472,23820261,23821886,23823646,23825244,23826810,23828424,23830067,23831637,23833391,23835283,23837211,23839060,23840695,23842409,23844195,23846175,23848124,23849986,23851719,23853450,23855306,23857233,23859074,23860846,23862376,23864180,23866125,23868012,23869907,23871548,23873244,23875144,23877136,23879107,23881029,23882796,23884461,23886318,23888193,23890060,23891878,23893287,23894279,23895285,23896251,23897578,23899036,23900627,23902236,23903882,23905514,23907185,23908837,23910464,23911977,23913888,23915572,23917295,23919013,23920610,23922331,23923958,23925589,23927281,23928965,23930868,23932633,23934353,23936118,23937860,23939575,23941321,23942928,23944612,23946298,23948033,23949742,23951349,23953022,23954663,23956208,23958161,23960039,23961897,23963837,23965785,23967707,23969593,23971318,23973065,23974728,23976407,23978136,23980087,23981965,23983880,23985769,23987669,23989661,23991573,23993535,23995483,23997419,23999252,24001048,24002845,24004625,24006487,24008458,24010329,24012235,24014118,24016028,24017885,24019760,24021508,24022831,24023929,24025292,24027011,24028619,24030305,24031927,24033808,24035679,24037518,24039369,24041200,24043060,24044878,24046729,24048653,24050492,24052402,24054296,24055409,24056086,24056678,24057405,24058605,24059555,24060899,24062155,24063415,24064338,24066182,24067894,24069530,24071092,24072841,24074430,24076082,24077770,24079411,24080821,24082498,24084008,24085386,24086526,24088114,24089744,24091465,24093209,24094895,24096608,24098362,24099972,24101604,24103013,24104337,24105879,24107351,24108894,24110367,24111882,24113326,24114752,24116221,24117611,24119101,24120833,24122645,24124456,24126311,24128176,24130033,24131891,24133712,24135612,24137410,24139232,24141065,24142997,24144904,24146771,24148620,24150508,24152492,24154511,24156472,24158376,24160263,24162161,24164097,24166026,24167946,24169860,24171795,24173696,24175572,24177437,24179286,24181184,24183073,24184859,24186401,24187879,24189355,24191070,24192685,24194283,24195948,24197573,24199201,24200853,24202472,24204214,24205849,24207495,24209162,24210798,24212426,24214080,24215700,24217332,24219105,24220781,24222415,24224053,24225691,24227323,24228973,24230645,24232498,24234375,24236252,24238090,24239969,24241828,24243675,24245540,24247377,24249317,24251174,24253013,24254852,24256705,24258546,24260370,24262223,24264175,24266046,24267894,24269738,24271611,24273472,24275303,24277163,24279043,24280749,24282126,24283549,24284996,24286336,24287779,24289206,24290809,24292200,24293528,24294987,24296494,24297917,24299355,24301104,24302973,24304811,24306643,24308420,24310219,24312034,24313948,24315854,24317557,24319284,24321001,24322684,24324364,24326053,24327798,24329446,24331151,24332701,24334489,24336204,24337888,24339643,24341404,24343103,24344707,24346414,24348260,24350099,24351909,24353802,24355413,24357173,24359033,24360925,24362781,24364623,24366342,24368030,24369804,24371575,24373352,24375114,24376624,24378359,24380047,24381696,24383527,24385179,24386850,24388631,24390466,24392247,24394000,24395755,24397399,24399093,24400731,24402380,24404146,24405576,24406735,24408006,24409240,24410490,24411782,24412995,24414281,24415955,24417494,24418981,24420616,24422306,24423870,24425417,24426997,24428573,24430106,24431703,24433245,24435100,24436932,24438861,24440736,24442583,24443858,24445583,24447010,24448511,24450254,24452064,24453839,24455557,24457314,24458800,24460273,24461956,24463708,24465428,24467020,24468357,24469741,24471617,24473487,24475134,24476493,24478123,24479552,24481028,24482712,24484104,24485796,24487294,24488742,24490252,24491789,24493303,24494889,24496338,24497772,24499299,24500809,24502409,24503921,24505417,24506946,24508548,24510111,24511583,24513155,24514522,24516001,24517435,24518923,24520803,24522637,24524500,24526296,24528124,24529936,24531713,24533456,24535163,24536665,24538484,24540191,24541944,24543735,24545359,24547141,24548922,24550549,24552402,24554337,24556213,24558086,24559983,24561710,24563622,24565330,24567111,24568857,24570471,24572224,24573945,24575723,24577372,24579090,24580829,24582606,24584319,24586070,24587791,24589526,24591253,24592906,24594597,24596200,24598035,24599685,24601479,24603139,24604817,24606559,24608253,24609944,24611663,24613347,24615085,24616739,24618540,24620124,24621570,24623134,24624877,24626613,24628283,24630029,24631668,24633092,24634625,24636143,24637677,24639083,24640575,24642106,24643618,24645271,24647067,24648753,24650473,24652240,24653893,24655609,24657342,24659056,24660664,24662345,24663997,24665683,24667283,24668893,24670505,24672210,24673835,24675512,24677118,24678750,24680482,24682113,24683772,24685400,24687135,24688760,24690412,24692042,24693729,24695357,24697008,24698645,24700367,24702003,24703658,24705322,24706975,24708683,24710304,24711909,24713502,24715272,24716888,24718579,24720253,24722044,24723686,24725340,24726954,24728591,24730314,24731926,24733608,24735271,24737069,24738683,24740293,24741930,24743622,24745273,24747129,24748921,24750591,24752197,24753990,24755804,24757424,24759151,24760927,24762740,24764471,24766344,24768243,24770121,24772051,24774062,24776004,24777947,24779906,24781870,24783642,24785505,24787425,24789403,24791437,24793444,24795444,24797282,24799197,24801061,24802889,24804773,24806784,24808821,24810844,24812835,24814821,24816805,24818716,24820616,24822500,24824415,24826327,24828244,24830205,24832220,24833953,24835842,24837746,24839660,24841514,24843297,24844900,24846517,24848428,24850215,24852025,24853610,24855241,24856853,24858477,24860086,24861902,24863302,24864693,24866025,24867341,24868773,24870291,24871777,24873163,24874603,24876122,24877603,24879066,24880465,24881906,24883480,24884973,24886324,24888021,24889738,24891548,24893249,24894949,24896654,24898370,24900119,24901782,24903490,24905191,24906948,24908629,24910300,24911961,24913673,24915301,24917013,24918674,24920353,24922000,24923762,24925431,24927084,24928721,24930455,24932104,24933753,24935404,24937070,24939037,24940912,24942798,24944751,24946646,24948565,24950454,24952363,24954303,24956078,24957864,24959662,24961533,24963537,24965522,24967561,24969615,24971650,24973686,24975706,24977723,24979741,24981782,24983814,24985853,24987906,24989947,24991990,24994031,24996070,24997971,24999820,25001697,25003624,25005561,25007449,25009327,25011197,25012978,25014452,25015964,25017342,25018973,25020645,25022277,25023816,25025397,25027042,25028565,25030192,25031729,25033194,25034713,25036327,25037901,25039408,25041039,25042540,25043958,25045520,25046981,25048701,25050503,25052361,25054080,25055749,25057385,25059149,25061062,25062920,25064783,25066588,25068373,25070043,25071862,25073701,25075555,25077101,25079131,25081094,25083112,25085026,25086928,25088856,25090454,25092213,25093898,25095664,25097374,25099161,25100960,25102706,25104381,25106161,25107859,25109540,25111225,25112954,25114387,25115898,25117409,25118925,25120492,25122018,25123537,25125051,25126519,25128096,25129608,25131139,25132622,25134177,25135683,25137195,25138706,25140199,25141482,25142806,25144078,25145261,25147216,25149145,25151060,25152953,25154872,25156844,25158778,25160699,25162646,25164030,25165284,25166555,25167893,25169204,25170518,25171784,25173237,25174902,25176346,25177788,25179372,25181053,25182525,25184098,25185692,25187356,25189075,25190724,25192415,25194082,25195744,25197377,25199042,25200738,25202466,25203694,25204948,25206212,25207445,25208714,25209955,25211153,25212431,25213812,25214911,25215912,25217056,25218212,25219469,25220487,25221795,25223280,25224535,25225835,25227092,25228286,25229577,25230834,25232224,25233475,25235122,25236456,25237753,25239095,25240456,25241781,25243062,25244358,25246006,25247706,25249263,25250970,25252703,25254344,25255870,25257233,25258936,25260911,25262527,25263542,25264829,25265962,25267283,25268447,25269896,25271869,25273794,25275392,25277144,25278973,25280792,25282554,25284099,25286039,25287401,25287810,25288405,25288873,25289319,25289860,25290352,25290862,25291488,25292140,25293137,25294468,25295948,25297255,25298439,25299598,25300176,25301090,25301558,25302938,25304351,25305877,25307391,25308768,25309961,25310397,25312033,25313004,25314389,25315547,25317072,25318436,25319653,25320827,25322584,25324384,25326107,25327859,25329661,25330234,25330314,25331312,25331986,25332709,25333318,25333869,25334352,25335174,25335734,25336333,25337507,25338396,25339285,25340732,25342144,25343527,25344955,25346340,25347849,25349477,25351197,25352805,25354441,25356003,25357579,25359413,25361056,25362234,25363347,25364521,25365733,25367037,25368307,25369619,25370881,25372330,25373841,25375435,25377063,25378722,25380348,25381743,25383082,25384487,25385510,25385535,25385565,25385590,25385894,25386652,25387761,25388632,25389960,25391584,25393249,25394860,25396470,25397772,25399346,25400885,25402505,25404036,25405676,25407573,25409500,25411420,25413350,25415242,25417070,25417898,25418966,25420450,25421859,25422754,25423692,25424923,25426222,25427631,25429081,25430577,25432086,25433628,25435207,25436949,25438722,25440254,25441862,25443351,25444917,25446495,25447994,25449554,25451212,25453263,25455320,25457371,25459403,25461289,25463198,25465223,25467220,25468963,25470834,25472699,25474634,25476626,25478658,25480657,25482686,25484676,25486701,25488684,25490701,25492756,25494782,25496493,25498287,25500293,25502289,25504286,25506256,25507930,25509550,25510790,25511986,25513172,25514504,25516479,25518443,25520135,25521873,25523762,25525646,25527408,25529205,25530977,25532779,25534727,25536684,25538660,25540625,25542589,25544558,25546584,25548502,25550031,25551569,25553114,25554644,25556185,25557728,25559269,25560811,25562164,25563568,25564879,25566206,25567473,25568755,25570085,25571547,25573559,25575576,25577567,25579542,25581549,25583513,25585443,25587363,25589370,25591256,25592960,25594659,25596300,25598014,25599651,25601135,25601336,25601656,25602865,25604227,25605573,25606612,25607619,25608590,25609690,25610809,25612433,25614156,25615727,25617432,25619138,25620836,25622348,25623908,25625475,25627081,25628606,25630198,25631696,25633182,25634476,25635894,25636962,25638076,25639358,25640716,25641951,25643253,25644689,25646138,25647711,25649328,25650777,25652269,25653632,25654994,25655895,25656919,25658516,25660064,25660907,25662013,25663267,25664641,25666119,25667572,25669047,25670558,25671724,25672982,25674420,25675897,25677561,25679248,25681090,25682941,25684704,25686516,25688101,25689703,25691304,25692950,25694517,25696131,25697631,25699194,25700708,25702188,25703425,25704779,25706321,25707891,25709247,25710618,25711997,25713404,25714766,25716133,25716649,25717287,25717712,25718296,25719728,25721267,25722829,25724400,25725812,25727289,25728823,25730310,25731717,25733101,25734279,25735414,25736707,25738056,25739573,25741015,25742104,25742965,25743304,25744003,25745775,25747661,25749448,25751224,25752763,25754237,25755211,25756298,25757855,25759415,25760978,25762542,25764129,25765726,25767293,25768949,25770747,25772572,25774334,25776144,25777959,25779820,25781624,25783426,25784792,25786189,25787541,25788957,25790369,25791845,25793516,25795224,25796773,25798321,25799819,25801295,25802858,25804406,25805893,25807501,25809387,25811262,25812816,25814193,25814890,25815571,25816405,25817535,25818861,25820451,25822129,25823868,25825338,25826890,25828290,25829631,25830819,25831804,25832413,25833214,25834034,25834911,25835519,25836276,25837767,25839087,25839575,25840103,25840583,25841347,25843094,25844862,25845943,25847080,25848108,25849228,25850587,25851947,25853083,25854096,25855007,25856014,25857465,25858935,25860386,25861842,25863261,25864785,25866487,25868235,25869895,25871640,25873503,25875384,25876945,25878397,25879370,25880428,25881570,25882780,25883709,25884697,25885567,25886583,25887579,25888669,25889897,25891088,25891553,25892064,25892672,25893312,25893795,25894318,25894931,25895579,25896052,25896571,25897201,25897878,25898370,25898916,25899522,25900174,25900604,25901063,25901622,25902474,25904363,25906127,25907162,25908264,25909290,25910390,25911415,25912526,25913605,25914841,25916638,25918327,25920012,25921727,25923361,25925020,25926747,25928348,25929485,25930756,25932417,25934074,25935751,25937506,25939403,25941038,25941225,25941484,25941770,25942121,25942300,25942532,25942804,25943140,25943187,25943443,25943468,25943629,25943771,25943976,25944216,25944462,25944661,25945153,25946572,25948083,25949670,25951216,25952293,25953397,25954481,25955658,25956867,25958116,25959600,25961114,25962583,25964163,25966020,25967891,25969579,25971283,25972710,25974261,25975878,25977542,25978903,25980351,25981619,25982890,25984423,25986035,25987647,25988792,25990452,25991895,25993378,25994861,25996300,25997519,25998940,26000408,26001804,26003331,26004854,26006368,26007733,26008785,26010120,26011471,26012848,26014008,26015346,26016479,26017632,26018689,26020095,26021635,26023139,26024619,26026143,26027679,26029200,26030722,26031853,26032640,26033303,26033819,26034568,26035272,26036021,26036693,26037322,26037836,26038343,26039058,26039728,26040460,26041113,26041808,26042544,26043225,26043975,26044779,26045546,26046270,26046815,26047303,26048032,26050047,26052045,26053804,26055557,26057252,26058940,26060626,26062333,26064053,26065767,26067460,26069161,26070998,26072961,26074794,26076561,26078241,26079910,26081680,26083411,26085169,26086287,26087294,26088484,26090317,26091851,26093472,26095358,26096911,26098411,26099876,26101361,26102844,26104309,26105788,26107270,26108762,26110157,26110729,26111319,26111841,26112474,26113080,26113513,26114099,26114695,26115281,26115839,26116458,26117060,26117622,26118140,26118458,26118884,26119409,26119858,26120013,26120507,26121112,26121494,26121831,26122288,26122591,26123086,26124156,26126114,26127984,26129647,26131296,26132969,26134654,26136332,26137989,26139661,26141356,26143035,26144729,26146406,26148246,26150158,26151822,26153553,26155202,26156969,26158743,26160392,26162069,26163246,26163963,26164716,26165888,26167818,26169478,26171222,26172808,26174514,26176342,26177962,26179477,26180944,26182471,26183963,26185452,26186952,26188462,26189960,26191449,26192954,26194459,26195949,26197429,26198945,26200415,26201916,26203417,26204916,26206381,26207873,26208571,26208944,26209474,26210029,26210722,26211253,26211817,26212510,26213108,26213490,26214001,26214445,26214939,26215407,26215830,26216149,26216529,26217129,26217764,26218372,26219032,26219763,26220306,26220980,26221645,26222249,26222819,26223305,26223825,26224193,26224671,26225210,26225575,26225948,26226372,26226868,26227354,26227768,26228379,26228772,26229241,26229705,26230319,26230844,26231410,26231995,26232316,26232877,26233363,26233818,26234281,26234735,26235032,26235555,26236033,26236524,26237086,26237344,26237680,26238187,26239912,26241894,26243919,26245933,26247932,26249975,26251726,26253411,26255114,26256793,26258494,26260207,26261924,26263602,26265291,26266965,26268637,26270348,26272037,26273722,26275414,26277112,26278812,26280507,26282239,26283953,26285653,26287347,26289035,26290759,26292428,26294130,26295805,26297700,26299748,26301796,26303695,26305312,26307000,26308711,26310426,26312147,26313911,26315577,26317214,26318974,26320690,26322356,26324021,26325677,26327473,26329251,26330941,26332605,26334282,26335991,26337666,26338604,26339482,26340443,26341254,26341979,26342839,26343855,26344893,26345937,26347118,26348317,26349487,26350491,26351577,26352501,26353568,26354433,26355323,26356592,26357215,26359203,26361171,26363080,26364863,26366431,26367926,26369458,26370943,26372454,26373977,26375474,26376943,26378427,26379936,26381420,26382910,26383496,26384098,26384459,26384904,26385305,26385671,26386208,26386571,26387233,26387881,26388427,26388980,26389496,26390060,26390599,26390787,26391096,26391225,26391530,26392025,26392701,26393197,26393724,26394171,26394694,26395059,26395613,26396064,26396205,26396572,26398081,26400130,26402095,26403789,26405506,26407176,26408875,26410574,26412278,26413972,26415668,26417337,26419122,26420861,26422526,26424210,26426238,26428179,26429923,26431593,26433314,26435039,26436755,26438444,26440178,26442021,26443685,26445312,26446300,26447414,26448984,26450203,26452140,26453901,26455324,26456903,26458416,26459914,26461406,26462883,26464374,26465857,26467341,26468795,26470285,26470790,26470984,26471260,26471343,26471871,26472371,26472552,26472820,26473195,26473607,26473831,26474263,26474636,26474977,26475097,26475236,26475408,26475800,26476112,26476540,26477058,26477392,26477638,26477975,26478497,26479036,26479409,26479671,26480962,26482973,26485004,26486711,26488404,26490123,26491797,26493499,26495189,26496853,26498522,26500206,26501909,26503632,26505354,26507179,26509227,26511094,26512916,26514731,26516489,26518231,26519850,26521535,26523358,26525184,26527054,26528601,26529222,26529717,26530568,26531597,26532461,26533826,26535413,26537112,26538872,26540328,26541853,26543358,26544854,26546341,26547817,26548783,26549211,26549592,26549908,26550281,26550788,26551017,26551409,26551895,26552363,26552707,26553109,26553512,26553791,26554039,26554396,26554867,26555899,26557862,26559686,26561373,26563071,26564734,26566407,26568104,26569775,26571490,26573417,26575306,26577078,26578725,26580438,26582190,26584004,26585853,26586879,26587930,26589440,26590860,26592526,26594085,26595583,26597078,26598567,26599164,26599775,26600164,26600595,26601147,26601636,26602216,26602750,26603206,26603517,26603831,26604508,26606487,26608149,26609803,26611455,26613125,26614782,26616750,26618379,26620058,26621755,26623318,26624427,26626126,26627753,26629321,26630762,26632265,26633766,26635273,26636768,26638254,26639749,26641231,26642715,26644234,26645767,26647233,26648733,26650230,26651734,26653266,26653808,26654279,26654741,26655059,26655390,26655878,26656349,26656683,26657040,26657510,26658033,26658567,26658968,26659359,26659809,26660184,26660686,26661102,26661559,26661891,26662100,26662263,26662663,26662928,26663272,26663484,26663682,26663972,26664317,26664603,26664936,26665271,26665615,26665897,26666207,26666635,26667000,26667389,26667768,26668093,26668447,26668911,26669288,26669659,26670012,26670292,26670587,26670987,26671210,26671630,26672159,26672596,26673056,26675036,26676980,26678924,26680891,26682875,26684541,26686223,26687887,26689551,26691235,26692923,26694596,26696273,26697977,26699701,26701384,26703066,26704734,26706406,26708075,26709754,26711427,26713112,26714784,26716457,26718118,26719807,26721486,26723334,26725382,26727430,26729071,26730702,26732319,26733945,26735590,26737247,26739053,26740722,26742438,26744115,26745810,26747421,26749033,26750672,26752353,26754054,26755678,26756804,26757432,26758092,26758650,26759295,26759780,26760838,26762063,26763529,26764686,26765897,26766876,26768248,26769810,26771247,26772622,26774136,26775596,26776919,26778785,26780591,26782430,26784247,26785820,26787400,26788889,26790358,26791833,26793329,26794819,26796313,26797819,26799314,26800816,26802322,26803647,26804132,26804696,26805273,26805967,26806505,26807074,26807469,26807968,26808269,26808491,26808989,26809267,26809698,26810188,26810810,26811271,26811628,26812023,26812588,26813145,26813812,26814446,26815044,26815324,26815931,26816244,26816565,26817092,26817776,26818423,26819118,26819607,26819858,26820271,26820789,26821137,26821310,26822334,26824319,26826294,26828312,26830018,26831725,26833400,26835107,26836810,26838507,26840169,26841883,26843595,26845279,26846975,26848730,26850432,26852154,26853844,26855558,26857537,26859585,26861446,26863207,26864927,26866687,26868483,26870284,26872021,26873802,26875521,26877278,26879072,26880824,26882586,26884279,26885206,26886136,26887179,26888581,26890226,26891660,26893151,26895123,26896938,26898534,26900121,26901779,26903389,26904866,26906351,26907852,26909346,26910833,26912331,26913825,26915311,26916795,26918292,26919798,26921289,26922778,26924242,26925723,26927191,26928667,26930146,26931646,26933161,26934628,26935228,26935895,26936521,26937114,26937661,26938225,26938780,26939415,26940008,26940528,26941088,26941468,26941848,26942459,26943006,26943482,26943923,26944331,26944908,26945360,26946042,26946480,26947010,26947607,26948065,26948480,26948979,26949498,26949996,26950571,26950917,26951444,26951866,26952328,26952753,26953316,26953644,26953799,26954337,26954754,26955220,26955749,26956294,26956714,26956918,26957365,26957874,26958161,26958538,26958999,26959142,26959461,26959813,26960291,26960737,26961249,26961698,26961921,26962470,26962973,26963354,26963557,26963943,26964453,26964890,26965222,26965454,26965934,26966518,26966902,26967379,26967814,26968207,26968726,26969330,26969917,26971797,26973849,26975898,26977955,26980005,26982051,26984099,26985847,26987567,26989306,26991047,26992817,26994588,26996348,26998057,26999807,27001536,27003268,27005002,27006713,27008427,27010183,27011943,27013692,27015436,27017193,27018958,27020703,27022465,27024191,27025914,27027637,27029396,27031149,27032932,27034682,27036424,27038176,27039932,27041674,27043420,27045189,27047237,27049285,27051333,27053381,27055358,27057119,27058916,27060741,27062581,27064477,27066289,27068046,27069842,27071638,27073449,27075165,27076917,27078741,27080549,27082356,27084198,27085978,27087789,27089623,27091480,27093301,27095028,27096833,27098704,27100551,27102404,27104203,27106066,27107913,27109766,27111636,27113432,27115016,27115873,27116741,27117595,27118301,27119177,27120539,27121752,27123329,27124358,27125618,27127087,27128377,27129397,27130265,27130986,27132262,27133610,27135019,27136189,27138175,27140127,27142019,27143795,27145465,27146925,27148544,27150150,27151720,27153274,27154772,27156259,27157762,27159274,27160795,27162288,27163741,27165207,27166693,27168194,27169667,27171145,27172630,27174152,27175675,27177165,27178648,27180156,27181640,27183132,27184159,27184675,27185350,27185931,27186383,27186885,27187280,27187782,27188357,27188986,27189657,27190263,27190883,27191576,27192115,27192573,27193093,27193654,27194272,27194789,27195111,27195572,27196102,27196647,27197188,27197624,27198163,27198634,27199004,27199544,27200073,27200264,27200489,27200843,27201289,27201746,27202070,27202484,27202751,27203134,27203562,27204030,27204418,27204686,27205145,27205525,27206053,27206391,27206700,27206907,27207290,27207707,27208087,27208246,27208466,27208650,27208985,27209228,27209762,27210272,27210743,27211296,27211759,27212172,27212739,27214486,27216489,27218413,27220390,27222379,27224365,27226006,27227682,27229368,27231048,27232714,27234402,27236115,27237813,27239504,27241183,27242835,27244471,27246155,27247851,27249556,27251230,27252940,27254649,27256336,27258038,27259708,27261410,27263085,27264759,27266442,27268103,27269772,27271427,27273472,27275520,27277568,27279116,27280801,27282506,27284251,27286006,27287812,27289433,27291103,27292757,27294550,27296279,27298084,27299790,27301517,27303264,27304983,27306717,27308381,27310065,27311823,27313415,27314252,27315029,27315575,27316154,27316912,27317602,27318545,27319543,27320555,27321227,27322011,27322582,27323313,27324014,27324741,27325441,27326096,27326845,27327433,27327770,27328476,27329118,27330168,27330870,27331451,27331937,27332533,27334181,27334734,27336239,27337906,27339670,27341447,27343229,27344911,27346587,27348154,27349749,27351346,27352907,27354379,27355865,27357350,27358832,27360306,27361783,27363270,27364748,27366223,27367679,27369173,27370642,27372118,27373585,27375056,27376535,27378013,27379495,27380952,27382423,27383914,27385401,27386881,27388357,27389849,27391348,27392811,27394284,27395727,27397218,27398657,27400131,27401584,27403042,27404515,27406000,27407460,27408912,27410385,27411841,27413340,27414820,27416309,27417775,27419227,27420710,27422181,27423627,27425090,27426511,27427928,27429349,27430819,27432303,27433798,27435235,27436669,27438154,27439610,27441080,27442537,27444031,27445511,27446979,27448464,27449898,27451365,27452835,27454310,27455793,27457266,27458740,27460194,27461620,27462223,27462813,27463143,27463727,27464237,27464744,27465015,27465456,27465960,27466324,27466552,27467135,27467737,27468157,27468785,27469202,27469672,27470283,27470937,27471451,27472147,27472659,27473242,27473789,27474198,27474676,27475259,27475838,27476424,27476930,27477339,27477809,27478298,27478839,27479380,27479788,27480247,27480820,27481341,27481883,27482503,27483128,27483731,27484322,27484612,27484940,27485380,27485918,27486414,27486958,27487523,27488214,27488765,27489309,27489885,27490340,27490920,27491349,27491735,27492232,27492752,27493153,27493555,27494086,27494657,27495027,27495472,27495983,27496362,27496970,27497414,27497915,27498260,27498864,27499431,27499999,27500664,27501263,27501862,27502420,27502932,27503516,27503980,27504576,27505147,27505446,27505898,27506215,27506729,27507195,27507713,27508241,27508648,27508926,27509386,27509876,27510128,27510593,27511063,27511563,27512007,27512285,27512848,27513439,27513898,27514445,27514982,27515394,27515656,27516069,27516544,27516756,27516984,27517331,27517840,27518375,27518945,27519353,27519697,27520159,27520497,27520858,27521159,27521528,27521855,27522412,27522857,27523291,27523813,27524284,27524871,27525433,27526019,27526517,27527027,27527607,27528090,27528533,27528952,27529406,27529955,27530572,27531069,27531569,27532067,27532591,27533078,27533473,27533720,27534111,27534651,27535081,27535589,27536117,27536622,27537212,27537702,27537986,27538305,27538867,27539357,27539835,27540303,27540742,27541205,27541638,27542066,27542672,27543292,27543773,27544258,27544730,27545210,27545689,27546202,27546827,27547367,27547754,27548155,27548613,27549097,27549490,27549992,27550666,27551061,27551412,27551838,27552155,27552445,27552735,27553177,27553590,27553871,27554282,27554511,27555006,27555492,27556110,27556711,27557123,27557451,27557848,27558412,27558926,27559471,27559888,27560426,27560988,27561434,27561935,27562394,27562815,27563322,27563705,27563964,27564365,27564778,27565355,27565960,27566520,27566973,27567369,27567920,27568454,27568839,27569411,27569987,27570509,27571006,27571480,27571934,27572494,27573046,27573421,27573922,27574441,27574696,27574820,27575281,27575851,27576398,27576959,27577420,27577952,27578496,27578990,27579480,27579897,27580327,27582226,27584151,27586092,27588012,27589937,27591872,27593863,27595834,27597798,27599796,27601743,27603729,27605694,27607621,27609628,27611587,27613525,27615510,27617560,27619551,27621220,27622846,27624484,27626138,27627832,27629539,27631252,27632967,27634653,27636324,27638008,27639681,27641382,27643051,27644742,27646412,27648099,27649781,27651463,27653139,27654816,27656509,27658197,27659892,27661575,27663266,27664943,27666637,27668311,27669974,27671664,27673351,27675034,27676722,27678407,27680065,27681758,27683420,27685102,27686804,27688465,27690125,27691773,27693450,27695146,27696803,27698491,27700150,27701826,27703473,27705120,27706803,27708490,27710145,27711819,27713527,27715228,27716906,27718592,27720279,27721949,27723614,27725309,27726961,27728599,27730298,27732008,27733715,27735395,27737045,27738698,27740357,27742054,27743714,27745364,27747021,27748673,27750313,27751977,27753649,27755341,27757004,27758683,27760352,27762017,27763684,27765397,27767082,27768800,27770485,27772165,27773889,27775564,27777224,27778915,27780645,27782329,27784022,27785703,27787384,27789063,27790731,27792401,27794109,27795781,27797435,27799261,27801309,27803357,27805405,27807453,27809501,27811549,27813597,27815645,27817693,27819741,27821639,27823308,27824864,27826550,27828298,27830075,27831854,27833596,27835293,27837021,27838701,27840360,27842001,27843678,27845406,27847067,27848807,27850543,27852253,27853968,27855684,27857420,27859161,27860906,27862573,27864198,27865922,27867629,27869351,27871008,27872711,27874333,27876004,27877667,27879377,27881042,27882633,27884361,27886063,27887804,27889553,27891331,27893035,27894743,27896464,27898166,27899835,27901584,27903304,27904975,27906632,27908302,27910070,27911806,27913323,27914788,27916347,27917953,27919672,27921416,27923020,27924793,27926609,27928334,27930072,27931817,27933458,27935219,27937030,27938771,27940393,27942141,27943878,27945643,27947457,27949202,27950897,27952081,27952953,27953767,27954633,27955453,27956169,27956932,27957709,27958359,27959064,27959593,27960167,27960833,27961464,27961814,27962087,27962806,27963436,27964176,27964913,27965794,27966369,27967020,27967638,27968449,27969192,27970019,27970725,27971511,27972320,27973043,27973764,27974668,27975551,27976326,27977081,27978000,27978706,27979369,27980123,27980787,27981541,27982146,27982847,27983596,27984240,27985144,27985853,27986600,27987380,27987965,27988547,27988916,27989291,27989754,27990507,27991283,27991848,27992382,27992994,27993673,27994438,27995296,27996174,27997031,27997662,27998064,27998598,27999238,27999903,28000689,28001302,28001885,28002562,28003033,28003574,28004150,28004758,28005458,28006251,28006975,28007690,28008584,28009212,28009730,28010623,28011267,28011892,28012336,28013295,28014084,28015044,28015706,28016455,28017177,28017815,28018551,28019089,28019871,28020645,28021234,28021852,28022555,28023102,28023883,28024430,28024992,28025555,28025949,28026598,28027426,28028269,28029188,28029879,28030628,28031352,28032143,28032512,28033231,28034056,28034873,28035551,28036190,28036978,28037686,28038218,28038875,28039654,28040387,28040963,28041660,28042219,28042832,28043530,28044260,28044859,28045235,28045562,28045859,28046179,28046473,28046841,28047250,28047551,28047846,28048172,28048454,28048743,28049128,28049610,28050139,28050805,28051390,28051702,28052254,28052897,28053418,28054168,28054847,28055424,28056073,28056910,28057519,28058229,28058893,28059898,28060574,28061010,28061379,28061883,28062413,28062755,28063191,28063569,28063768,28064261,28064619,28064914,28065176,28065435,28065629,28066190,28066808,28067242,28067932,28068668,28069462,28069841,28070096,28070297,28070552,28070803,28070971,28071143,28071357,28071853,28072994,28074870,28076177,28078100,28080003,28081920,28083847,28085788,28087685,28089655,28091568,28093507,28095453,28097404,28099315,28101208,28102991,28104893,28106762,28108604,28110192,28111741,28113211,28114686,28116176,28117666,28119142,28120625,28122110,28123617,28125113,28125588,28126138,28126567,28127140,28127569,28127909,28128446,28128944,28129390,28129694,28130099,28130513,28131040,28131460,28131946,28132564,28132889,28133247,28133721,28133993,28134354,28134734,28135107,28135436,28135895,28136219,28136631,28136965,28137214,28137594,28137980,28138423,28140384,28142313,28144352,28146014,28147702,28149408,28151111,28152803,28154527,28156198,28157919,28159631,28161323,28163017,28164681,28166363,28168026,28169747,28171795,28173742,28175477,28177194,28178967,28180721,28182478,28184212,28186001,28187773,28189515,28191251,28192931,28194361,28195151,28195959,28196865,28198364,28199809,28201181,28202294,28203827,28205466,28207216,28208808,28210296,28211793,28213287,28214768,28216200,28217705,28219189,28220686,28222180,28223677,28224243,28224483,28224964,28225428,28225800,28226416,28227008,28227581,28228104,28228735,28229228,28229694,28230132,28230491,28230821,28231175,28231635,28231987,28232306,28232748,28233106,28233477,28234027,28234415,28234680,28235211,28235518,28235752,28236619,28238642,28240675,28242469,28244155,28245854,28247556,28249276,28250997,28252706,28254387,28256094,28257794,28259485,28261193,28262880,28264689,28266737,28268574,28270170,28271938,28273792,28275633,28277394,28279147,28280921,28282744,28284512,28286294,28288064,28289223,28289825,28290665,28291808,28292728,28294006,28295371,28296923,28298581,28300338,28301908,28303541,28305118,28306608,28308095,28309575,28311071,28312547,28314051,28315546,28317043,28318515,28319986,28321449,28322945,28324418,28325882,28327368,28328853,28330343,28331826,28333304,28334795,28336250,28337727,28339201,28340688,28342165,28343637,28345117,28346600,28348080,28349558,28351033,28352528,28354021,28355518,28356984,28358485,28359465,28360030,28360588,28361184,28361851,28362540,28363162,28363740,28364273,28364887,28365438,28366058,28366675,28367287,28367872,28368484,28369103,28369713,28370308,28370813,28371467,28372150,28372730,28373337,28373861,28374505,28375116,28375704,28376314,28376914,28377445,28377840,28378417,28379072,28379696,28380223,28380757,28381290,28381821,28382362,28382902,28383434,28383955,28384567,28385131,28385591,28385973,28386229,28386487,28386944,28387363,28387837,28388325,28388737,28389182,28389639,28390347,28390906,28391323,28391537,28391739,28392127,28392246,28392400,28392643,28393237,28393645,28394180,28394685,28395152,28395823,28396320,28396883,28397535,28398102,28398709,28399291,28399715,28400234,28400637,28401202,28401706,28402415,28402965,28403607,28403901,28404359,28404876,28405375,28405883,28406243,28406522,28406813,28407373,28407915,28408609,28409151,28409646,28410011,28410553,28411152,28411674,28412234,28412761,28413427,28413982,28414623,28415014,28415605,28416939,28418941,28420944,28422927,28424904,28426823,28428779,28430726,28432700,28434746,28436459,28438173,28439890,28441600,28443305,28445017,28446721,28448417,28450122,28451803,28453523,28455218,28456884,28458597,28460314,28462009,28463693,28465383,28467070,28468771,28470433,28472085,28473746,28475371,28477051,28478722,28480404,28482081,28483777,28485456,28487135,28488813,28490505,28492182,28493897,28495579,28497251,28498914,28500581,28502274,28503952,28505612,28507267,28508956,28510610,28512262,28514193,28516241,28518289,28520337,28522385,28524125,28525894,28527609,28529329,28530952,28532684,28534388,28536209,28537923,28539709,28541459,28543153,28544875,28546575,28548254,28549969,28551562,28553272,28554988,28556713,28558466,28560138,28561872,28563631,28565344,28566956,28568572,28570269,28572001,28573704,28575441,28577076,28578285,28579189,28580070,28580937,28581763,28582496,28583372,28584159,28585061,28585761,28586814,28587845,28588775,28589460,28590525,28591318,28592626,28593846,28595060,28596247,28597275,28598336,28599523,28600670,28601792,28603009,28604452,28605877,28607292,28608277,28609324,28610616,28611500,28612375,28613120,28613595,28614392,28614909,28615340,28615985,28616906,28617923,28619039,28620055,28621296,28622045,28622674,28623246,28624040,28625216,28626396,28627187,28628245,28629765,28631478,28633338,28635177,28637059,28638945,28640882,28642789,28644742,28646613,28648198,28649769,28651249,28652738,28654221,28655711,28657199,28658682,28660142,28661629,28663122,28664606,28665720,28666200,28666429,28666822,28667340,28667772,28668156,28668656,28669182,28669551,28669726,28669891,28670098,28670353,28670667,28671017,28671518,28671887,28672324,28672787,28673063,28673394,28673754,28674258,28674611,28674925,28675310,28675636,28675959,28676431,28676684,28677035,28677396,28677781,28678378,28680352,28682335,28684365,28686086,28687784,28689432,28691130,28692827,28694507,28696201,28697902,28699604,28701308,28703014,28704712,28706409,28708101,28709783,28711815,28713825,28715508,28717205,28718981,28720703,28722445,28724201,28725990,28727794,28729493,28731236,28732915,28734611,28735385,28736101,28737338,28738884,28739772,28740384,28741410,28742926,28744774,28746586,28748213,28749811,28751297,28752781,28754283,28755772,28757273,28758783,28759648,28760109,28760672,28761294,28761776,28762239,28762761,28763203,28763588,28764028,28764527,28764946,28765110,28765362,28765734,28766197,28766619,28766969,28767333,28767717,28768147,28768366,28768794,28770740,28772744,28774432,28776146,28777879,28779562,28781259,28782946,28784606,28786299,28787988,28789703,28791683,28793539,28795302,28797117,28798851,28800613,28802347,28804122,28805912,28807650,28808414,28809168,28810760,28812387,28813863,28815263,28816822,28818477,28819979,28821457,28822848,28824296,28825769,28827248,28828756,28830224,28831691,28833166,28834646,28836155,28837669,28839159,28840648,28842136,28843543,28844178,28844583,28845108,28845720,28846251,28846759,28847227,28847723,28848208,28848707,28849229,28849857,28850441,28851034,28851335,28851712,28852160,28852480,28852900,28853303,28853889,28854315,28854737,28855105,28855367,28855581,28856121,28856737,28857403,28857957,28858563,28859116,28859526,28860112,28860542,28860898,28861489,28861798,28862423,28863018,28863458,28863941,28864517,28864836,28865435,28867165,28869132,28871167,28873179,28874912,28876633,28878343,28880034,28881732,28883412,28885093,28886770,28888462,28890190,28891864,28893543,28895209,28896927,28898655,28900375,28902100,28903836,28905559,28907273,28909187,28911235,28913216,28914944,28916656,28918374,28920061,28921799,28923448,28925154,28926827,28928459,28930175,28931938,28933725,28935448,28937216,28938996,28940346,28941292,28942101,28943025,28944495,28946155,28947498,28948977,28950434,28952010,28953504,28955241,28957098,28958856,28960497,28961974,28963374,28964861,28966370,28967851,28969318,28970808,28972288,28973772,28975242,28976712,28978194,28979688,28981177,28982644,28984131,28984725,28985235,28985894,28986428,28986898,28987314,28987836,28988454,28989024,28989404,28989844,28990346,28990682,28991054,28991345,28991719,28992209,28992784,28993270,28993726,28994244,28994767,28995258,28995678,28995981,28996173,28996385,28996809,28997276,28997673,28997854,28997945,28998111,28998455,28998753,28998985,28999345,28999851,29000291,29000643,29001115,29001364,29001679,29001984,29002227,29003689,29005674,29007555,29009564,29011380,29013070,29014746,29016428,29018109,29019790,29021491,29023175,29024872,29026533,29028198,29029862,29031573,29033251,29034916,29036596,29038259,29039936,29041628,29043313,29045169,29047217,29049265,29050981,29052686,29054374,29056152,29057865,29059584,29061347,29063030,29064690,29066406,29068002,29069754,29071406,29073109,29074892,29076458,29077123,29077935,29078361,29079230,29080113,29080840,29081655,29082439,29083293,29084143,29084674,29085588,29086912,29088678,29090409,29092010,29093670,29095307,29096860,29098332,29099827,29101337,29102845,29104341,29105832,29107273,29108745,29110250,29111739,29113237,29114766,29116238,29117751,29119246,29120745,29122202,29123652,29125150,29126677,29128184,29129007,29129505,29130138,29130516,29130914,29131454,29131904,29132492,29133013,29133507,29133908,29134302,29134814,29135394,29135470,29135970,29136593,29137102,29137569,29138015,29138426,29138795,29138984,29139169,29139564,29140155,29140689,29141189,29141742,29142268,29142743,29143175,29143521,29143882,29144393,29144932,29145490,29146027,29146277,29146622,29147127,29147432,29147772,29148074,29148222,29148407,29148973,29149544,29149897,29150445,29150860,29151198,29151666,29152093,29152548,29152876,29153226,29153415,29153706,29154099,29154513,29154918,29155382,29155858,29156324,29156582,29157072,29157453,29157942,29158365,29159367,29161383,29163427,29165394,29167391,29169440,29171394,29173093,29174793,29176468,29178138,29179811,29181534,29183183,29184857,29186579,29188268,29189963,29191660,29193335,29195026,29196711,29198395,29200085,29201783,29203485,29205179,29206869,29208548,29210222,29211885,29213602,29215305,29216982,29218670,29220371,29222078,29223788,29225744,29227792,29229840,29231888,29233537,29235258,29236830,29238483,29240239,29241822,29243573,29245334,29247092,29248868,29250582,29252269,29254024,29255714,29257428,29259179,29260864,29262614,29264296,29266021,29267874,29269500,29271223,29272987,29274830,29276112,29276778,29277342,29277981,29278616,29279209,29280058,29280749,29281532,29281996,29282218,29282624,29283345,29284043,29284490,29284993,29285416,29285833,29286234,29286689,29287090,29287327,29287570,29288512,29289880,29290319,29291894,29293531,29295287,29297106,29298817,29300606,29302210,29303594,29305080,29306567,29308088,29309593,29310969,29311437,29311710,29311940,29312165,29312626,29312944,29313110,29313353,29313610,29313810,29314261,29314698,29315084,29315442,29315886,29316415,29317687,29319676,29321369,29323053,29324753,29326467,29328135,29329804,29331478,29333285,29335167,29336937,29338696,29340492,29342206,29343832,29345008,29345763,29346797,29348109,29349747,29351452,29353080,29354592,29356099,29357608,29359112,29360582,29362084,29363575,29365059,29366561,29368036,29369513,29371002,29372498,29373994,29375482,29376962,29378447,29379948,29380868,29381479,29382072,29382692,29383186,29383720,29384213,29384769,29385323,29385861,29386383,29386955,29387412,29388011,29388588,29389125,29389702,29390126,29390587,29391172,29391767,29392297,29392810,29393370,29393968,29394348,29394815,29395412,29395995,29396345,29396739,29397249,29397670,29398172,29398690,29399116,29399551,29400023,29400530,29400969,29401366,29401991,29402353,29402942,29403557,29404166,29404800,29405245,29405622,29406208,29406719,29407198,29407645,29408282,29408658,29409231,29409781,29410364,29410979,29411584,29412749,29414790,29416815,29418861,29420898,29422815,29424523,29426239,29427946,29429653,29431342,29433050,29434757,29436465,29438169,29439839,29441518,29443192,29444885,29446591,29448294,29449995,29451702,29453409,29455084,29456754,29458426,29460084,29461807,29463516,29465235,29466971,29469019,29471067,29472948,29474730,29476486,29478249,29480004,29481657,29483397,29485039,29486821,29488577,29490381,29492210,29494037,29495767,29497426,29499153,29500949,29502761,29504359,29505034,29505785,29506636,29507362,29508166,29509750,29511451,29512706,29514001,29515689,29517434,29518929,29520277,29521304,29523013,29524867,29526732,29528466,29530316,29531943,29533533,29534990,29536524,29538003,29539496,29540977,29542454,29543935,29545420,29546894,29548365,29549879,29551363,29552832,29554316,29555807,29557311,29558822,29560314,29561812,29563303,29564799,29566326,29566862,29567037,29567296,29567432,29567904,29568459,29568937,29569389,29569848,29570369,29570928,29571563,29571829,29572174,29572650,29573022,29573491,29573778,29574331,29574904,29575501,29575826,29576230,29576427,29576742,29577152,29577340,29577844,29578237,29578815,29579390,29579846,29580405,29580830,29581366,29581736,29582046,29582544,29582979,29583425,29584012,29584604,29585136,29585675,29585934,29586152,29586595,29586901,29587350,29587825,29588269,29588790,29589411,29589899,29590550,29591151,29591615,29592128,29592621,29592949,29593321,29593781,29594064,29594179,29594551,29594878,29595345,29595714,29595998,29597330,29599345,29601395,29603423,29605458,29607508,29609176,29610864,29612550,29614252,29615909,29617595,29619265,29620922,29622585,29624291,29625970,29627646,29629326,29631003,29632719,29634408,29636119,29637782,29639474,29641177,29642873,29644569,29646268,29647975,29649682,29651368,29653060,29654760,29656399,29658114,29660153,29662201,29664249,29666076,29667793,29669538,29671287,29673009,29674756,29676344,29678094,29679855,29681529,29683243,29685055,29686819,29688637,29690332,29692069,29693812,29695484,29697214,29698943,29700623,29702207,29703872,29705132,29705931,29706671,29707465,29708177,29708948,29709721,29710347,29710866,29711611,29712340,29713305,29714305,29715379,29716218,29716902,29717790,29718550,29719726,29720738,29721620,29722631,29723593,29724597,29725295,29726313,29727225,29727833,29728324,29729118,29729253,29729717,29730972,29732290,29734007,29735876,29737687,29739545,29741345,29742993,29744495,29746030,29747537,29749032,29750514,29752009,29753513,29755011,29756495,29757995,29759507,29760656,29761043,29761473,29761677,29762015,29762488,29763081,29763429,29763945,29764307,29764848,29765284,29765726,29766000,29766476,29766844,29767191,29767722,29768066,29768437,29768758,29769276,29769708,29770045,29770457,29770862,29771091,29771427,29771627,29771929,29772289,29772771,29773126,29773316,29773610,29773813,29775175,29777173,29779160,29781037,29782733,29784405,29786096,29787777,29789408,29791098,29792770,29794458,29796125,29797790,29799480,29801166,29802877,29804576,29806260,29808252,29810300,29812056,29813811,29815550,29817315,29818961,29820739,29822408,29824045,29825682,29827442,29829162,29830916,29832590,29833921,29834473,29835158,29835839,29837015,29838163,29839163,29840171,29841868,29843755,29845653,29847332,29848855,29850397,29851873,29853380,29854878,29856368,29857869,29859378,29860875,29862375,29863876,29865378,29866876,29868384,29869908,29871400,29872884,29874366,29875860,29877358,29878864,29880350,29881834,29883338,29884826,29886304,29887816,29889340,29890853,29892312,29893836,29895342,29896835,29898297,29899134,29899605,29900162,29900730,29901122,29901673,29902235,29902837,29903470,29904044,29904673,29905209,29905656,29906088,29906639,29907063,29907522,29908039,29908595,29909203,29909818,29910429,29910971,29911501,29912006,29912425,29912911,29913430,29914030,29914603,29914887,29915420,29915835,29916377,29916915,29917408,29917864,29918353,29918822,29919387,29919834,29920285,29920916,29921278,29921640,29921982,29922278,29922747,29923123,29923497,29923775,29924257,29924706,29925011,29925551,29925933,29926481,29927023,29927549,29927796,29928367,29928952,29929568,29930188,29930766,29931306,29931691,29932284,29932741,29933250,29933766,29934160,29934679,29935144,29935480,29935980,29936490,29936989,29937370,29937782,29938244,29938733,29939236,29939553,29940017,29940521,29940855,29941222,29941516,29941967,29942555,29942904,29943318,29943717,29944122,29944517,29945041,29945460,29945831,29946301,29946593,29946764,29947074,29947531,29947900,29948220,29948541,29948946,29949199,29949553,29949908,29950911,29952919,29954954,29957009,29958980,29960984,29963003,29964993,29967035,29969082,29970898,29972576,29974262,29975942,29977624,29979304,29980982,29982676,29984382,29986089,29987789,29989537,29991244,29992968,29994680,29996405,29998122,29999870,30001598,30003314,30005038,30006748,30008452,30010154,30011826,30013515,30015185,30016871,30018567,30020248,30021959,30023658,30025315,30026983,30028668,30030361,30032045,30033764,30035476,30037221,30038974,30040705,30042435,30044117,30045790,30047499,30049188,30050862,30052515,30054206,30056017,30058065,30060113,30062161,30064209,30066257,30067944,30069691,30071363,30073039,30074609,30076308,30078066,30079770,30081521,30083301,30085046,30086807,30088544,30090265,30091975,30093680,30095367,30097083,30098811,30100450,30102124,30103716,30105355,30107107,30108824,30110506,30112214,30113817,30115477,30117091,30118793,30120574,30122330,30123991,30125809,30127439,30128974,30130638,30131818,30132562,30133322,30134131,30134955,30135647,30136298,30137090,30137705,30138425,30139375,30140297,30141259,30142258,30142842,30143310,30143964,30144586,30145435,30146354,30146819,30147621,30148234,30148885,30149744,30150337,30150884,30151479,30152041,30152222,30152952,30153867,30154664,30155592,30156598,30157727,30158528,30159599,30160447,30161261,30162055,30162633,30163770,30165229,30166887,30168784,30170571,30172415,30174274,30176075,30177885,30179788,30181521,30183192,30184797,30186289,30187784,30189289,30190774,30192284,30193772,30195244,30196727,30198211,30199618,30200112,30200585,30201093,30201570,30202052,30202498,30202934,30203381,30203753,30204113,30204433,30204821,30204936,30204990,30205352,30205908,30206459,30207066,30207652,30208180,30208798,30209166,30209438,30209500,30209753,30210218,30210466,30210826,30211150,30211415,30211471,30211713,30213402,30215451,30217496,30219246,30220924,30222613,30224301,30226014,30227741,30229464,30231196,30232879,30234537,30236246,30237947,30239662,30241395,30243346,30245394,30247239,30249058,30250866,30252680,30254451,30256192,30257967,30259739,30261443,30263242,30265077,30266919,30268071,30268857,30269563,30270446,30271343,30271999,30273232,30274173,30275321,30276866,30278486,30280130,30281628,30283170,30284738,30286229,30287737,30289238,30290732,30292234,30293703,30295209,30296701,30298177,30299674,30301161,30302657,30304139,30305222,30305605,30305833,30306116,30306498,30306875,30307310,30307675,30308033,30308253,30308484,30309063,30309556,30310109,30310692,30311162,30311682,30312119,30312375,30312688,30313134,30313481,30313754,30314233,30314687,30315120,30315374,30315796,30316158,30316558,30316951,30317265,30317667,30318106,30318565,30318946,30319425,30319757,30320228,30322206,30324177,30326202,30327987,30329630,30331286,30332977,30334684,30336386,30338066,30339783,30341507,30343206,30344911,30346614,30348281,30349932,30351581,30353242,30354892,30356894,30358942,30360583,30362215,30363976,30365891,30367757,30369575,30371374,30373193,30375042,30376892,30378610,30380260,30381920,30383058,30383699,30384379,30385114,30385720,30385977,30386354,30386753,30387134,30387499,30387873,30388330,30388791,30390227,30391451,30392111,30392568,30394106,30395620,30397131,30398659,30400316,30402020,30403641,30405255,30406805,30408302,30409807,30411331,30412854,30414387,30415918,30417437,30418931,30420451,30421965,30423469,30424970,30426481,30427996,30429511,30431036,30432543,30434046,30435552,30437058,30438582,30440097,30441607,30443110,30444646,30446148,30447668,30449186,30450726,30452260,30453793,30455319,30456855,30458375,30459902,30461409,30462919,30464410,30465902,30467404,30468903,30470384,30471861,30473350,30474841,30476342,30477836,30478560,30479139,30479504,30480086,30480559,30480985,30481619,30482114,30482555,30483240,30483917,30484607,30485337,30486030,30486728,30487446,30488087,30488775,30489443,30490160,30490887,30491618,30492179,30492785,30493373,30493721,30494313,30494831,30495443,30496066,30496809,30497415,30498057,30498692,30499354,30499942,30500572,30501130,30501712,30502345,30502862,30503434,30504088,30504688,30505210,30505818,30506328,30506825,30507382,30507946,30508531,30509144,30509765,30510318,30510947,30511584,30512142,30512684,30513244,30513784,30514377,30514921,30515344,30515842,30516432,30516931,30517476,30518133,30518663,30519287,30519877,30520489,30521100,30521644,30522269,30522807,30523462,30524112,30524616,30525130,30525687,30526280,30526685,30527228,30527794,30528339,30528995,30529497,30529888,30530447,30531059,30531644,30532314,30532928,30533652,30534389,30535075,30535718,30536372,30537031,30537754,30538442,30539095,30539655,30540252,30540907,30541539,30542161,30542775,30543283,30543791,30544451,30545071,30545659,30546316,30546907,30547468,30548085,30548688,30549283,30549843,30550395,30550996,30551493,30551832,30552360,30552884,30553470,30553991,30554556,30555132,30555594,30556208,30556644,30557119,30557724,30558329,30558863,30559228,30559645,30560225,30560817,30561312,30561833,30562291,30562614,30563092,30563612,30564170,30564688,30565194,30565569,30566563,30568595,30570647,30572691,30574748,30576778,30578825,30580856,30582904,30584958,30587014,30589040,30591090,30593126,30594840,30596560,30598240,30599940,30601646,30603379,30605084,30606760,30608471,30610163,30611860,30613571,30615271,30616970,30618673,30620376,30622100,30623839,30625549,30627268,30629010,30630734,30632472,30634208,30635963,30637713,30639463,30641221,30642955,30644660,30646359,30648070,30649780,30651468,30653151,30654813,30656501,30658230,30659938,30661622,30663331,30665035,30666739,30668439,30670168,30671907,30673653,30675411,30677158,30678906,30680637,30682350,30684061,30685798,30687523,30689262,30690996,30692754,30694497,30696242,30697978,30699745,30701488,30703240,30704961,30706722,30708726,30710774,30712822,30714870,30716918,30718966,30721014,30723043,30724733,30726422,30728090,30729841,30731562,30733237,30734931,30736701,30738422,30740191,30741959,30743730,30745583,30747386,30749205,30751014,30752811,30754630,30756403,30758200,30759987,30761797,30763413,30765018,30766720,30768426,30770098,30771742,30773312,30775085,30776799,30778514,30780223,30781873,30783627,30785418,30787249,30789064,30790907,30792715,30794552,30796253,30797959,30799551,30801210,30802984,30804796,30806606,30808398,30810242,30812097,30813929,30815708,30817009,30817916,30818823,30819764,30820708,30821646,30822424,30823201,30824087,30825006,30826108,30827368,30828733,30829973,30831150,30832409,30833608,30834809,30836113,30837419,30838615,30839737,30840995,30841826,30842552,30843328,30844214,30845158,30846119,30847167,30848423,30849639,30850097,30850630,30852064,30853490,30855202,30857144,30858875,30860651,30862538,30864444,30866299,30868123,30869970,30871747,30873616,30875504,30877059,30878585,30880112,30881624,30883110,30884606,30886108,30887608,30889100,30890567,30892102,30892436,30892518,30892781,30892954,30893006,30893244,30893495,30893953,30894149,30894496,30894801,30895148,30895289,30895684,30895983,30896161,30896298,30896422,30896897,30897292,30897653,30897785,30898276,30898705,30899093,30899516,30899803,30899961,30900845,30902853,30904893,30906701,30908397,30910105,30911804,30913523,30915232,30916905,30918595,30920324,30922056,30923753,30925427,30927111,30928879,30930927,30932832,30934613,30936340,30937905,30939734,30941384,30943223,30945008,30946798,30948664,30950411,30952173,30953047,30953585,30955417,30956851,30958497,30960081,30961697,30963248,30964719,30965859,30967367,30968865,30969558,30970032,30970500,30971024,30971599,30972064,30972519,30973974,30975711,30977407,30979064,30980957,30982744,30984467,30985273,30985910,30987253,30988780,30990272,30991770,30993273,30994545,30994809,30995215,30995623,30996116,30996653,30996753,30996996,30997541,30997834,30998245,30998488,30998952,30999455,31001269,31003047,31004711,31006400,31008085,31009760,31011421,31013385,31015012,31016716,31018492,31020195,31021633,31022375,31023948,31025702,31027393,31028925,31030383,31031889,31033380,31034857,31036093,31036600,31037081,31037405,31037782,31038280,31038576,31038914,31039348,31039909,31040334,31040723,31041177,31041662,31042133,31042670,31043352,31045384,31047120,31048790,31050465,31052148,31053820,31055495,31057195,31059149,31060805,31062532,31064251,31066003,31067565,31068124,31068956,31070201,31071093,31072303,31073953,31075778,31077834,31079888,31081913,31083962,31085910,31087473,31089056,31090514,31091711,31092553,31093351,31094083,31094982,31095889,31096753,31098789,31100796,31102767,31104694,31106572,31107376,31108228,31109291,31110701,31111854,31113328,31114728,31116066,31117188,31118014,31118887,31119779,31120870,31122098,31123173,31124239,31124983,31125941,31126855,31127857,31128933,31129976,31131028,31132239,31133291,31134312,31134956,31135699,31136506,31137457,31138272,31139090,31139913,31140705,31141679,31143727,31145295,31146343,31147382,31148354,31149338,31150317,31151392,31152414,31153412,31154275,31155456,31156616,31157457,31158562,31159561,31160567,31161601,31162269,31163123,31163873,31164722,31165707,31167130,31168577,31170089,31171540,31173502,31175550,31177598,31179536,31180907,31182949,31184989,31187037,31189085,31191111,31192891,31194939,31196625,31198528,31200583,31202631,31204679,31206727,31208775,31210823,31212871,31214922,31216955,31219004,31221010,31223043,31225097,31227118,31229071,31230914,31232598,31234511,31236559,31238607,31240655,31242703,31244751,31246799,31248847,31250895,31252943,31254991,31257039,31259062,31261017,31262861,31264681,31266150,31267747,31269700,31271604,31273429,31275304,31277340,31279392,31281449,31283497,31285545,31287602,31289650,31291698,31293746,31295794,31297842,31299890,31301938,31303995,31305993,31307586,31308569,31310570,31312618,31314666,31316714,31318762,31320810,31322858,31324906,31326954,31329002,31331050,31333098,31335146,31337194,31339242,31341290,31343338,31345386,31347434,31349487,31351214,31353083,31355140,31357188,31359244,31361156,31362780,31364168,31365369,31366400,31367158,31367683,31369397,31371454,31373502,31375550,31377598,31379652,31381700,31383748,31385796,31387844,31389760,31391248,31392098,31393981,31396029,31398062,31400035,31401917,31403644,31405180,31406441,31407335,31407953,31408256,31408395,31410247,31412304,31414352,31416403,31418454,31420502,31422550,31424607,31426655,31428712,31430760,31432808,31434856,31436880,31438721,31440357,31441870,31443112,31445141,31447198,31449255,31451303,31453351,31455399,31457447,31459497,31461545,31463593,31465645,31467690,31469708,31471648,31473397,31474917,31475983,31477018,31478830,31480700,31482700,31484748,31486803,31488860,31490828,31492554,31493906,31494708,31496762,31498809,31500857,31502872,31504728,31506776,31508824,31510671,31511455,31511500,31511720,31511753,31512255,31514303,31516351,31518399,31520447,31522495,31524543,31526600,31528648,31530601,31532625,31534673,31536721,31538769,31540782,31542830,31544878,31546926,31548974,31551022,31553070,31555125,31557173,31559221,31561207,31562712,31564694,31566699,31568248,31569871,31571928,31573944,31575584,31576909,31578392,31580248,31582273,31584321,31586376,31588424,31590478,31592516,31594422,31595915,31596425,31597212,31599260,31601308,31603365,31605417,31607468,31609524,31611572,31613620,31615670,31617710,31619757,31621628,31623456,31625407,31627001,31628926,31630974,31633022,31635079,31637127,31639184,31641232,31643280,31645333,31647237,31649285,31651342,31653390,31655438,31657486,31659543,31661591,31663639,31665273,31667284,31669237,31671167,31672163,31674209,31676257,31678296,31680195,31681829,31683877,31685925,31687973,31690021,31692076,31694124,31696172,31698220,31700275,31702163,31703561,31705094,31707009,31708985,31710999,31713038,31715089,31717118,31719154,31721199,31723251,31725306,31727348,31729377,31731399,31733387,31735373,31737341,31739389,31741433,31743487,31745518,31747560,31749577,31751625,31753671,31755720,31757764,31759819,31761840,31763738,31765546,31767140,31768578,31769901,31771086,31772274,31773501,31774601,31775596,31776735,31777742,31778799,31779732,31780617,31781524,31782316,31782949,31783530,31783986,31784170,31784351,31784492,31784553,31784615,31786255,31788282,31790323,31792371,31794419,31796363,31798105,31799784,31801064,31801753,31803801,31805849,31807897,31809945,31811851,31813899,31815947,31817995,31819963,31822011,31824059,31826107,31828155,31830157,31832205,31834259,31836315,31838367,31840393,31842450,31844498,31846542,31848581,31850637,31852684,31854646,31856561,31858402,31860100,31861870,31863535,31865375,31867423,31869471,31871500,31873550,31875598,31877654,31879584,31881461,31883516,31885564,31887621,31889669,31891717,31893765,31895819,31897727,31899783,31901840,31903770,31905406,31907182,31909238,31911294,31912938,31914663,31916711,31918767,31920815,31922863,31924911,31926959,31929010,31931058,31933095,31935057,31936785,31938288,31939768,31941043,31942259,31943632,31945680,31947728,31949776,31951827,31953859,31955809,31957563,31958722,31959048,31959966,31961400,31963074,31964958,31966894,31968832,31970758,31972759,31974709,31976485,31978065,31979442,31980617,31981290,31981678,31983087,31985092,31987148,31988722,31989782,31991314,31993362,31995410,31997458,31999506,32001554,32003602,32005650,32007698,32009646,32011665,32013701,32015586,32017127,32018211,32019536,32021584,32023561,32025034,32026621,32028669,32030717,32032765,32034819,32036867,32038919,32040967,32043017,32044952,32046856,32048456,32050491,32052272,32053488,32054486,32056532,32058580,32060628,32062676,32064724,32066772,32068826,32070732,32072568,32074624,32076672,32078720,32080768,32082816,32084873,32086929,32088046,32089427,32091259,32093298,32095349,32097397,32099445,32100893,32102395,32104329,32106260,32108308,32110356,32112404,32114458,32116490,32118387,32119741,32120818,32121635,32122147,32122567,32122819,32122935,32124553,32126601,32128649,32130697,32132745,32134793,32136841,32138889,32140937,32142985,32145033,32147081,32149129,32151177,32153225,32155273,32157321,32159369,32160705,32162741,32164789,32166837,32168885,32170933,32172981,32175029,32177086,32178358,32178590,32179804,32181495,32183426,32185477,32187534,32189582,32191630,32193678,32195726,32197774,32199822,32201870,32203918,32205822,32207461,32208979,32210376,32211582,32212704,32213670,32214596,32215338,32216125,32217119,32218040,32218799,32220366,32222401,32224449,32226497,32228545,32230593,32232641,32234689,32236737,32238785,32240833,32242881,32244929,32246977,32248950,32250260,32251047,32251700,32253077,32255125,32257173,32259230,32261287,32262893,32264538,32266586,32268373,32269715,32270734,32271294,32272130,32273028,32275076,32277043,32278324,32278760,32280543,32282500,32284482,32286529,32288582,32290630,32292683,32294721,32296760,32298276,32300082,32301877,32303838,32305785,32307839,32309887,32311935,32313983,32316031,32318088,32320136,32322182,32324208,32325973,32327494,32328428,32329111,32330605,32332648,32334696,32336744,32338792,32340840,32342888,32344945,32347002,32349059,32351057,32352832,32354317,32355451,32356432,32356693,32356985,32359000,32361045,32363022,32364940,32366755,32368463,32370172,32372220,32374261,32376098,32377675,32378950,32380720,32382485,32384470,32386518,32388449,32390504,32391498,32393546,32395261,32397106,32398967,32401015,32402697,32404619,32406041,32407509,32408618,32410171,32412173,32414207,32416230,32418116,32420082,32422044,32423953,32426001,32428058,32430106,32431890,32432943,32434174,32436222,32438270,32440318,32442366,32444423,32445755,32446737,32448785,32450833,32452890,32454938,32456527,32456935,32458668,32460723,32462759,32464807,32466864,32468920,32470968,32472922,32474967,32477015,32478517,32480544,32482592,32484312,32486369,32488417,32490001,32492017,32494071,32495570,32496839,32498681,32500290,32500962,32502993,32505041,32507089,32509133,32510585,32510701,32510825,32512074,32514109,32516165,32518220,32520276,32522333,32524390,32526438,32528358,32530406,32532454,32534408,32536452,32538500,32540439,32542487,32544487,32546535,32548592,32550634,32552668,32554569,32556410,32558167,32559939,32561477,32563242,32564446,32566098,32567791,32569357,32570643,32571921,32573931,32575876,32577715,32579647,32581695,32583743,32585800,32587846,32589350,32590412,32591128,32592486,32594426,32595719,32597272,32599261,32601309,32603357,32605405,32607453,32609501,32611549,32613606,32615654,32617709,32619765,32621753,32623577,32625167,32626584,32627786,32628697,32629946,32631994,32634042,32636090,32638138,32640186,32641816,32642431,32644407,32646458,32648506,32650523,32652396,32654417,32656465,32658521,32660569,32662626,32664682,32666730,32668781,32670753,32672551,32673976,32674823,32675663,32677711,32679759,32681807,32683855,32685341,32685563,32686457,32688488,32690536,32692584,32694632,32696680,32698733,32700781,32702829,32704826,32706418,32706692,32707208,32708578,32710511,32712559,32714607,32716655,32718703,32720751,32722808,32724865,32726922,32728979,32731035,32733045,32734966,32736740,32738519,32740248,32741821,32743229,32744512,32745750,32746973,32748046,32748871,32749405,32749932,32750448,32750939,32751400,32751836,32752219,32752664,32753132,32753583,32754138,32754672,32754890,32755256,32756093,32757256,32758459,32759685,32760803,32761898,32762856,32763698,32764440,32764949,32765217,32765361,32765526,32766502,32768148,32769996,32772050,32774107,32776155,32778173,32780127,32782141,32783968,32785948,32787719,32789737,32791683,32793409,32794935,32796984,32799039,32801086,32803108,32805151,32807189,32809220,32811273,32813285,32815292,32817280,32819333,32821213,32823188,32825242,32827290,32829335,32831051,32832869,32834892,32836659,32838522,32840577,32842383,32843639,32845277,32847300,32849354,32851373,32853243,32855159,32857090,32858945,32860869,32862880,32864928,32866985,32869039,32870880,32872937,32874966,32876637,32878147,32879750,32881134,32882266,32882710,32883281,32883685,32884120,32884877,32885537,32886581,32888174,32889563,32890984,32892364,32893631,32895055,32896715,32898440,32900233,32902025,32903965,32905954,32907974,32910020,32912077,32914130,32916178,32918234,32920282,32922330,32924387,32926432,32928419,32930396,32932397,32934374,32936279,32938068,32939787,32941512,32943210,32944893,32946419,32947862,32949341,32950779,32952219,32953573,32954824,32956016,32957212,32958404,32959538,32960597,32961562,32962500,32963433,32964915,32966377,32967883,32969370,32970813,32972240,32973798,32975318,32976829,32978355,32979846,32981406,32983044,32984753,32986309,32987933,32989482,32990992,32992584,32994294,32996021,32997816,32999584,33001305,33003112,33004988,33006902,33008741,33010731,33012671,33014619,33016674,33018719,33020767,33022823,33024871,33026927,33028978,33030997,33032913,33034676,33036317,33037479,33038727,33040545,33042503,33044551,33046606,33048654,33050188,33050400,33051251,33053299,33055347,33057403,33058791,33060846,33062063,33063948,33066001,33067671,33069111,33071159,33073207,33075255,33077303,33078838,33080895,33082905,33084531,33085767,33087815,33089863,33091911,33093959,33096007,33098055,33100076,33102096,33104144,33106192,33108240,33110288,33112336,33114384,33116432,33118480,33120528,33122576,33124628,33126644,33128692,33130748,33132805,33134853,33136910,33138943,33140916,33142938,33144987,33147035,33149083,33151115,33153163,33155220,33157268,33159316,33161364,33163421,33165230,33166460,33168517,33170565,33172613,33174670,33176718,33178771,33180828,33182748,33184676,33186531,33188075,33189704,33191172,33192861,33194697,33196315,33197766,33199164,33200336,33201280,33201720,33203058,33205115,33207172,33209220,33211274,33213253,33214941,33216193,33216399,33217204,33219198,33221246,33223221,33224891,33226318,33228039,33229892,33231128,33231331,33231934,33232869,33233246,33233635,33233971,33234392,33234841,33235240,33235623,33235910,33236744,33237604,33238460,33239267,33239823,33240353,33241545,33242356,33243061,33244426,33245834,33247283,33248724,33249919,33251265,33251837,33252560,33253462,33253890,33254167,33254562,33255163,33255522,33256455,33257289,33257713,33258125,33258654,33259118,33259896,33260377,33260902,33261566,33261917,33262246,33262873,33263601,33264170,33264987,33265696,33266840,33267591,33268168,33269156,33269878,33270433,33271409,33272107,33272611,33273251,33274060,33274938,33275342,33275672,33275928,33276219,33276487,33276798,33277371,33277630,33277943,33278132,33278542,33279298,33279915,33280691,33281302,33281710,33281912,33282389,33282866,33283462,33283824,33284275,33284848,33285338,33285553,33286026,33286712,33287046,33287304,33287783,33288223,33289133,33290200,33291012,33291129,33291320,33291600,33291854,33292518,33292978,33293303,33293607,33294098,33294318,33294957,33295391,33295568,33296541,33297304,33297541,33297849,33298250,33298603,33298928,33299223,33299490,33299833,33300502,33301295,33301857,33302257,33302920,33303362,33303899,33304403,33304801,33305444,33306027,33306353,33306844,33307531,33308405,33308660,33308935,33309194,33309699,33310505,33310870,33311410,33311976,33312232,33312944,33313516,33313930,33314629,33314868,33315300,33315888,33316399,33316974,33317407,33318179,33318806,33319416,33319568,33320230,33320977,33321647,33322449,33323623,33324722,33325867,33326954,33328105,33329203,33329564,33329761,33330841,33331866,33332976,33333928,33334498,33335686,33336259,33336758,33337041,33337275,33337685,33337899,33338089,33338228,33338482,33338641,33339163,33339296,33339433,33339566,33339697,33340304,33340952,33341436,33342057,33342634,33343098,33343883,33344458,33344949,33345324,33345544,33346151,33346432,33346733,33347156,33347860,33348327,33348920,33349170,33349715,33349854,33350117,33350432,33351119,33351303,33351569,33351842,33352038,33352402,33352570,33352985,33353258,33353629,33353800,33354038,33354249,33354443,33354988,33355375,33355916,33356373,33357016,33358112,33358689,33359103,33359629,33360075,33360778,33361412,33361777,33362284,33363205,33363948,33364803,33365646,33366116,33366515,33366835,33367293,33367705,33368140,33368621,33368948,33369265,33369518,33369699,33369872,33370340,33371029,33372073,33372859,33373249,33374048,33374459,33375036,33375514,33375681,33376248,33376926,33377249,33377618,33377800,33378430,33379311,33379936,33380839,33381397,33381800,33382459,33382671,33383099,33383289,33383597,33383820,33384148,33384677,33385393,33385906,33386509,33386991,33387689,33388460,33388951,33389125,33389332,33389783,33390374,33391068,33391517,33391939,33392200,33392718,33393092,33393452,33393794,33394902,33396198,33397391,33398877,33399621,33400938,33402730,33404774,33405349,33405471,33405588,33406015,33406592,33406746,33406948,33407064,33407528,33407730,33408133,33408739,33409112,33410216,33411180,33411922,33412146,33412525,33412914,33413128,33413495,33413724,33413923,33414099,33414433,33414929,33415383,33415923,33416458,33416908,33417562,33418064,33419004,33419170,33419702,33419966,33420358,33420775,33421163,33421599,33421906,33422056,33422556,33422824,33423122,33423367,33423675,33423890,33424167,33424689,33424940,33425336,33425518,33425764,33426238,33426628,33426748,33427134,33427704,33428190,33428702,33428926,33429153,33429573,33429974,33430382,33430597,33431098,33431620,33431889,33432677,33433062,33433499,33434105,33434672,33435078,33436025,33436206,33436411,33436571,33436708,33436860,33437011,33437310,33437683,33437831,33437997,33438171,33438364,33438660,33438889,33439067,33439486,33439652,33440082,33440912,33441004,33441189,33441489,33441677,33442082,33442461,33443035,33443513,33443957,33444187,33444349,33444528,33444925,33445193,33445626,33446294,33446483,33446770,33447027,33447208,33447416,33447787,33447896,33448376,33448941,33449092,33449278,33449583,33449711,33450026,33450170,33450292,33450789,33451404,33451931,33452282,33452722,33453129,33453328,33453576,33453774,33454311,33454602,33454733,33455461,33455860,33456182,33456531,33456936,33457290,33457864,33458565,33459295,33460240,33461074,33461750,33463018,33464237,33465330,33466613,33467982,33469420,33470917,33472323,33473834,33475354,33476880,33478425,33479940,33481454,33482955,33484466,33486048,33487538,33489080,33490564,33492063,33493628,33495079,33496425,33497741,33498983,33500233,33501565,33502913,33504156,33505328,33506475,33507500,33508731,33510255,33511836,33513723,33515434,33517183,33518939,33520605,33522322,33524038,33525757,33527459,33529194,33530893,33532612,33534360,33536116,33537871,33539590,33541302,33542848,33544543,33546175,33547851,33549552,33551256,33552976,33554668,33556393,33558050,33559703,33561354,33563030,33564628,33566192,33567832,33569626,33571303,33573006,33574703,33576272,33577935,33579594,33581319,33583053,33584849,33586684,33588500,33590300,33592128,33593942,33595664,33597386,33599043,33600787,33602599,33604446,33606211,33607870,33609561,33611421,33613143,33614850,33616620,33618374,33620106,33621791,33623408,33625073,33626603,33628461,33630067,33631720,33633312,33634894,33636559,33638202,33639874,33641601,33643289,33644977,33646644,33648381,33650089,33651826,33653528,33655170,33656891,33658637,33660336,33662037,33663703,33665357,33667027,33668699,33670316,33671965,33673569,33675178,33676721,33678277,33679787,33681284,33683097,33684194,33685330,33686184,33686985,33687625,33688937,33690319,33691789,33693204,33694386,33695446,33696647,33697793,33699098,33700526,33701792,33703078,33704383,33705653,33706866,33707873,33708792,33709517,33710401,33711304,33712085,33712704,33713515,33714514,33715637,33716649,33717850,33719223,33720890,33722323,33723840,33725170,33726710,33728175,33729637,33731175,33732643,33734122,33735465,33736787,33738048,33739013,33739233,33739451,33739668,33739919,33740141,33741007,33742630,33744260,33745603,33746958,33748501,33749807,33750737,33752055,33753345,33754092,33755498,33756957,33758047,33759586,33761282,33762486,33764215,33765630,33767216,33768864,33770392,33771767,33773349,33774905,33776159,33777817,33779319,33780849,33782443,33783502,33785134,33786463,33787933,33789382,33791032,33792691,33794344,33796007,33797429,33799025,33800785,33801887,33803489,33804899,33806587,33807921,33809294,33810936,33812472,33814144,33815673,33817038,33818623,33819988,33821626,33823311,33824917,33826518,33828102,33829267,33830835,33832500,33834081,33835681,33837223,33838556,33840098,33841803,33843030,33844700,33845778,33847400,33848717,33850270,33851412,33853049,33854651,33856156,33857847,33859304,33860691,33862258,33863450,33864901,33866083,33867460,33868886,33870517,33871594,33873037,33874525,33875751,33877195,33878607,33880055,33881665,33883197,33884829,33886510,33887888,33889209,33890759,33892367,33893847,33895363,33897194,33898618,33900327,33901599,33903077,33904512,33906252,33907908,33909223,33910950,33912144,33913815,33915019,33916587,33918221,33919983,33921323,33922840,33924582,33926346,33927964,33929671,33931240,33932906,33934270,33935927,33937589,33939325,33940848,33942389,33943677,33945311,33946839,33948410,33950000,33951644,33953074,33954886,33956161,33957888,33959421,33961161,33962637,33964366,33965904,33967751,33969626,33971544,33973460,33975513,33977522,33979571,33981613,33983634,33985653,33987683,33989717,33991741,33993770,33995823,33997867,33999904,34001951,34003944,34005978,34007954,34009970,34011985,34014017,34016067,34018120,34020172,34022216,34024259,34026283,34028292,34030303,34032349,34034395,34036416,34038457,34040511,34042541,34044559,34046573,34048482,34050480,34052495,34054528,34056573,34058621,34060651,34062677,34064724,34066755,34068742,34070709,34072700,34074702,34076705,34078693,34080726,34082753,34084777,34086828,34088860,34090860,34092814,34094823,34096840,34098824,34100836,34102864,34104881,34106905,34108962,34110990,34112986,34114948,34116952,34118949,34120923,34122941,34124970,34127021,34129074,34131107,34133139,34135089,34137097,34139118,34141136,34143149,34145182,34147228,34149273,34151313,34153364,34155406,34157460,34159497,34161533,34163537,34165579,34167562,34169601,34171607,34173526,34175527,34177486,34179476,34181436,34183437,34185425,34187412,34189397,34191400,34193357,34195339,34197313,34199307,34201273,34203184,34205175,34207164,34209140,34211107,34213090,34215068,34217053,34219050,34221024,34222972,34224967,34226951,34228950,34230917,34232882,34234891,34236862,34238859,34240810,34242762,34244753,34246769,34248769,34250761,34252769,34254727,34256737,34258706,34260703,34262605,34264569,34266534,34268539,34270527,34272523,34274491,34276426,34278417,34280410,34282394,34284361,34286359,34288368,34290360,34292358,34294358,34296357,34298373,34300365,34302341,34304344,34306336,34308274,34310315,34312329,34314285,34316200,34318200,34320225,34322221,34324184,34326195,34328220,34330234,34332207,34334226,34336265,34338217,34340252,34342246,34344261,34346282,34348309,34350321,34352344,34354360,34356375,34358370,34360346,34362318,34364321,34366343,34368338,34370298,34372176,34374132,34376185,34378237,34380272,34382249,34384181,34386096,34387986,34389795,34391649,34393538,34395484,34397289,34399155,34400959,34402948,34404950,34406923,34408789,34410690,34412614,34414493,34416320,34418172,34420164,34422108,34424054,34426003,34427950,34429811,34431749,34433626,34435550,34437484,34439443,34441380,34443358,34445152,34447177,34448957,34450890,34452711,34454663,34456595,34458545,34460464,34462470,34464439,34466362,34468211,34470090,34471979,34473913,34475861,34477784,34479713,34481648,34483632,34485579,34487616,34489308,34491304,34493018,34495020,34496963,34498877,34500833,34502687,34504667,34506580,34508598,34510435,34512417,34514364,34516404,34518136,34519868,34521716,34523501,34525334,34527221,34529082,34530927,34532718,34534632,34536467,34538407,34540309,34542236,34544169,34546096,34547951,34549913,34551811,34553723,34555602,34557556,34559417,34561347,34563277,34565248,34567173,34569088,34571001,34572923,34574819,34576658,34578567,34580366,34582265,34584185,34586001,34587880,34589518,34591248,34592714,34594354,34596145,34597947,34599754,34601692,34603633,34605623,34607592,34609601,34611593,34613484,34615467,34617461,34619398,34621364,34623357,34625241,34626665,34628077,34629471,34630920,34632363,34633846,34635416,34636865,34638445,34639870,34641337,34642971,34644737,34646418,34647931,34649773,34651768,34653767,34655667,34657681,34659632,34661510,34663433,34665330,34667318,34669338,34671296,34673226,34675180,34677146,34678971,34680845,34682773,34684785,34686794,34688721,34690726,34692641,34694631,34696475,34698367,34700331,34702303,34704329,34706234,34708268,34710189,34712153,34713999,34715864,34717873,34719802,34721830,34723730,34725728,34727559,34729496,34731384,34733250,34735238,34737175,34739192,34741078,34743063,34744985,34746910,34748782,34750652,34752656,34754653,34756666,34758607,34760589,34762510,34764391,34766297,34768205,34770160,34772205,34774104,34776080,34777979,34779931,34781880,34783816,34785717,34787469,34789181,34790865,34792500,34794166,34795879,34797613,34799328,34801078,34802733,34804404,34806166,34807882,34809632,34811347,34813003,34814657,34816366,34818052,34819772,34821472,34823162,34824838,34826450,34828099,34829822,34831576,34833313,34835053,34836667,34838264,34839890,34841635,34843445,34845061,34846716,34848342,34849952,34851650,34853409,34855119,34856816,34858523,34860146,34861768,34863520,34865295,34867085,34868699,34870337,34871964,34873762,34875614,34877425,34879254,34880982,34882742,34884496,34886321,34888198,34890093,34891885,34893686,34895522,34897283,34899059,34900803,34902484,34904154,34905812,34907584,34909256,34910831,34912499,34914256,34915960,34917624,34919416,34921133,34922776,34924515,34926278,34927873,34929471,34931304,34932892,34934574,34936314,34938113,34939831,34941497,34943285,34945118,34946839,34948521,34950266,34952020,34953781,34955498,34957256,34958976,34960961,34962893,34964845,34966851,34968841,34970789,34972704,34974649,34976592,34978573,34980553,34982519,34984530,34986511,34988477,34990471,34992458,34994443,34996406,34998395,35000350,35002353,35004354,35006353,35008329,35010287,35012292,35014239,35016205,35018198,35020179,35022185,35024194,35026162,35028139,35030099,35032089,35034051,35036017,35037979,35039969,35041934,35043914,35045885,35047861,35049848,35051807,35053781,35055739,35057714,35059670,35061655,35063605,35065581,35067528,35069477,35071443,35073399,35075368,35077326,35079274,35081227,35083175,35085131,35087077,35089034,35090980,35092937,35094879,35096836,35098778,35100734,35102675,35104641,35106580,35108548,35110451,35112355,35114263,35116175,35118073,35120005,35121890,35123800,35125720,35127624,35129534,35131445,35133352,35135271,35137204,35139091,35141005,35142897,35144765,35146718,35148560,35150412,35152366,35154207,35156038,35157996,35159845,35161654,35163613,35165450,35167271,35169242,35171074,35172907,35174868,35176687,35178530,35180491,35182329,35184146,35186119,35187980,35189803,35191701,35193493,35195345,35197235,35199045,35200857,35202742,35204524,35206363,35208258,35210017,35211869,35213762,35215499,35217369,35219266,35221025,35222905,35224788,35226561,35228450,35230304,35232120,35234027,35235889,35237727,35239632,35241445,35243328,35245230,35247042,35248943,35250796,35252648,35254555,35256372,35258250,35260152,35261958,35263852,35265698,35267571,35269486,35271348,35273252,35275105,35276975,35278879,35280725,35282597,35284508,35286352,35288220,35290131,35291985,35293852,35295763,35297615,35299481,35301395,35303247,35305113,35307030,35308884,35310748,35312659,35314512,35316378,35318295,35320180,35322030,35323961,35325830,35327682,35329601,35331457,35333318,35335242,35337110,35338987,35340887,35342741,35344597,35346516,35348367,35350203,35352129,35353980,35355826,35357754,35359617,35361468,35363385,35365306,35367213,35369125,35371031,35372960,35374876,35376788,35378709,35380650,35382566,35384479,35386395,35388298,35390218,35392135,35394049,35395961,35397941,35399937,35401920,35403902,35405897,35407889,35409876,35411854,35413835,35415808,35417812,35419711,35421685,35423594,35425482,35427367,35429293,35431207,35433112,35434977,35436906,35438801,35440727,35442677,35444613,35446587,35448537,35450500,35452463,35454432,35456380,35458360,35460326,35462263,35464253,35466179,35468164,35470096,35472069,35473954,35475944,35477780,35479743,35481604,35483516,35485405,35487282,35489190,35491045,35493008,35494842,35496826,35498663,35500611,35502485,35504388,35506277,35508123,35510012,35511826,35513758,35515542,35517440,35519301,35521147,35523009,35524822,35526726,35528530,35530470,35532288,35534166,35536022,35537865,35539734,35541740,35543787,35545810,35547832,35549849,35551846,35553881,35555899,35557912,35559957,35561972,35564012,35566053,35568098,35570117,35572126,35574006,35576003,35578008,35580034,35582069,35584126,35586161,35588191,35590222,35592251,35594258,35596270,35598293,35600321,35602361,35604418,35606449,35608485,35610527,35612553,35614523,35616367,35618392,35620413,35622445,35624495,35626529,35628564,35630581,35632557,35634559,35636554,35638528,35640511,35642527,35644570,35646585,35648601,35650615,35652615,35654585,35656582,35658574,35660540,35662508,35664534,35666569,35668577,35670599,35672620,35674614,35676595,35678607,35680600,35682559,35684540,35686557,35688594,35690606,35692657,35694702,35696727,35698741,35700750,35702766,35704770,35706755,35708772,35710799,35712853,35714903,35716952,35719005,35721048,35723091,35725100,35727126,35729169,35731200,35733255,35735296,35737318,35739337,35741316,35743307,35745302,35747307,35749261,35751259,35753265,35755207,35757199,35759190,35761138,35763083,35765066,35767067,35769059,35771041,35773030,35775053,35776989,35778910,35780929,35782848,35784650,35786523,35788533,35790538,35792495,35794511,35796493,35798473,35800464,35802416,35804424,35806407,35808318,35810224,35812107,35814044,35816042,35817979,35819860,35821801,35823793,35825740,35827666,35829504,35831410,35833407,35835388,35837311,35839154,35841072,35843045,35844983,35846870,35848727,35850644,35852468,35854363,35856293,35858230,35860166,35862141,35863984,35865869,35867713,35869593,35871566,35873472,35875446,35877402,35879309,35881186,35883054,35884950,35886911,35888879,35890827,35892738,35894565,35896408,35898259,35900191,35902188,35904111,35905974,35907808,35909577,35911495,35913445,35915346,35917243,35919143,35920995,35922872,35924779,35926660,35928519,35930409,35932296,35934128,35936010,35937827,35939620,35941638,35943562,35945494,35947431,35949335,35951173,35953026,35954896,35956749,35958511,35960437,35962419,35964341,35966258,35968223,35970062,35971935,35973885,35975846,35977833,35979855,35981873,35983833,35985606,35987599,35989579,35991595,35993563,35995562,35997490,35999529,36001542,36003517,36005497,36007460,36009465,36011472,36013474,36015450,36017428,36019439,36021444,36023421,36025398,36027347,36029357,36031341,36033381,36035371,36037343,36039312,36041289,36043246,36045260,36047236,36049257,36051296,36053327,36055303,36057324,36059241,36061257,36063259,36065253,36067270,36069254,36071267,36073302,36075178,36076963,36078754,36080638,36082631,36084632,36086597,36088602,36090602,36092596,36094579,36096497,36098466,36100415,36102335,36104267,36106249,36108223,36110139,36112130,36114118,36116140,36118123,36120131,36122111,36124032,36126032,36128013,36129994,36131834,36133793,36135724,36137681,36139605,36141450,36143427,36145374,36147286,36149179,36151145,36153128,36155138,36157120,36159114,36161124,36163114,36165137,36167076,36169013,36170958,36172910,36174602,36176537,36178500,36180421,36182373,36184299,36186251,36188256,36190255,36192277,36194251,36196228,36198201,36200216,36202208,36204198,36206174,36208157,36210093,36212067,36213993,36215966,36217908,36219888,36221862,36223835,36225855,36227877,36229866,36231851,36233842,36235816,36237825,36239793,36241739,36243725,36245687,36247646,36249629,36251560,36253557,36255526,36257522,36259486,36261422,36263413,36265438,36267420,36269375,36271325,36273303,36275312,36277284,36279271,36281288,36283263,36285264,36287272,36289216,36291243,36293218,36295192,36297211,36299115,36301164,36303137,36305066,36307077,36309020,36310997,36312996,36314989,36316953,36318826,36320800,36322786,36324716,36326672,36328660,36330611,36332516,36334480,36336471,36338463,36340451,36342405,36344367,36346342,36348299,36350250,36352177,36354107,36356072,36357915,36359780,36361742,36363705,36365613,36367498,36369446,36371345,36373320,36375264,36377173,36379144,36381141,36383069,36385043,36387057,36388959,36390964,36392864,36394876,36396849,36398803,36400805,36402829,36404835,36406877,36408920,36410787,36412801,36414809,36416758,36418780,36420813,36422857,36424894,36426930,36428884,36430898,36432920,36434890,36436913,36438966,36440994,36443017,36445051,36447034,36449072,36451089,36453093,36455120,36457158,36459198,36461241,36463282,36465232,36467246,36469267,36471242,36473279,36475305,36477354,36479404,36481446,36483422,36485437,36487453,36489443,36491489,36493523,36495570,36497611,36499650,36501609,36503592,36505543,36507562,36509386,36511374,36513344,36515325,36517324,36519321,36521360,36523378,36525366,36527327,36529331,36531336,36533196,36535206,36537123,36539101,36541067,36543078,36545088,36546990,36549001,36550915,36552848,36554834,36556846,36558480,36560347,36562158,36563859,36565476,36567143,36568647,36570398,36571796,36573316,36574811,36576276,36577862,36579114,36580606,36582057,36583278,36584695,36585959,36587294,36588628,36589785,36591289,36592409,36593815,36595015,36595845,36597479,36598806,36600042,36601248,36602493,36604036,36604888,36606167,36607584,36608725,36610318,36611408,36612776,36614008,36615388,36616846,36617996,36619483,36620996,36622224,36623817,36625230,36626757,36628315,36629718,36631327,36632609,36634125,36635663,36636859,36638484,36639677,36641045,36642286,36643688,36645094,36646380,36647804,36648915,36649887,36651549,36652954,36654120,36655356,36656594,36658168,36659049,36660309,36661803,36663016,36664568,36665630,36666961,36668097,36669718,36670916,36672328,36673772,36675211,36676549,36678094,36679647,36681067,36682656,36684054,36685510,36686865,36688387,36689849,36691092,36692699,36693916,36695254,36696420,36698002,36699224,36700569,36701962,36703031,36704166,36705677,36707133,36708259,36709528,36710864,36712217,36713156,36714419,36715854,36717019,36718551,36719661,36721040,36722206,36723854,36725109,36726529,36727970,36729392,36730748,36732251,36733829,36735259,36736842,36738335,36739585,36741046,36742500,36743801,36744986,36746588,36747881,36749296,36750465,36752076,36753226,36754649,36755967,36756909,36758245,36759633,36760989,36762127,36763405,36764999,36765936,36767040,36768418,36769628,36771050,36772177,36773516,36774880,36776001,36777534,36778653,36780135,36781644,36782904,36784534,36785971,36787492,36789039,36790429,36792083,36793343,36794818,36796325,36797655,36799197,36800463,36801798,36803172,36804326,36805897,36807097,36808590,36809791,36810659,36812272,36813647,36814894,36816099,36817414,36819044,36819855,36821098,36822551,36823756,36825374,36826437,36827771,36828955,36830437,36831774,36833128,36834576,36836053,36837262,36838859,36840371,36841813,36843386,36844758,36846297,36847619,36849130,36850689,36851885,36853509,36854678,36856120,36857313,36858885,36860086,36861451,36862781,36863820,36864929,36866426,36867904,36869026,36870279,36871698,36872984,36873950,36875232,36876631,36877809,36879388,36880517,36881897,36883044,36884666,36885880,36887269,36888752,36890215,36891480,36893007,36894590,36896104,36897713,36899175,36900578,36902014,36903575,36905026,36906120,36907773,36908940,36910267,36911425,36912995,36914172,36915431,36916853,36917940,36918877,36920434,36921909,36923046,36924291,36925726,36926984,36927930,36929231,36930530,36931646,36933182,36934268,36935677,36936886,36938515,36939635,36940925,36942424,36943917,36945212,36946816,36948419,36949927,36951471,36953006,36954465,36955859,36957419,36958886,36959989,36961652,36962903,36964252,36965484,36966915,36968261,36969464,36970877,36972066,36972927,36974534,36975946,36977194,36978397,36979647,36981252,36982085,36983347,36984787,36985936,36987515,36988578,36989887,36991248,36992699,36994143,36995335,36996883,36998453,36999836,37001459,37002895,37004388,37005925,37007375,37009082,37010322,37011845,37013356,37014641,37016082,37017518,37018813,37020200,37021301,37022956,37024156,37025659,37026910,37027741,37029412,37030687,37031988,37033226,37034420,37036049,37036941,37038138,37039532,37040826,37042311,37043541,37044849,37046117,37047366,37049005,37050266,37051740,37053237,37054488,37056158,37057610,37059171,37060731,37062158,37063863,37065137,37066705,37068220,37069488,37070960,37072366,37073759,37075135,37076265,37077888,37079071,37080597,37081869,37082727,37084387,37085640,37086967,37088140,37089373,37090933,37091975,37093065,37094444,37095879,37097177,37098671,37099850,37101283,37102544,37104191,37105414,37106939,37108481,37109830,37111364,37112906,37114605,37116151,37117741,37119213,37120759,37121986,37123208,37124478,37125899,37127377,37129097,37130546,37131896,37133092,37134564,37136093,37137524,37139166,37140813,37142201,37143498,37144838,37146356,37147743,37149344,37150982,37152472,37153867,37155116,37156585,37158038,37159366,37160898,37162632,37164178,37165680,37166919,37168278,37169668,37170879,37172284,37173883,37175319,37176368,37177701,37178971,37180678,37182108,37183341,37184825,37186476,37187559,37189279,37190967,37192810,37194688,37196626,37198272,37200213,37202032,37203784,37205584,37207482,37209319,37211118,37212997,37214405,37216127,37217845,37219597,37221295,37223008,37224676,37226180,37227177,37228317,37230287,37232268,37234129,37235913,37237083,37238114,37239927,37241512,37243268,37244979,37246976,37248650,37250537,37252426,37254313,37256076,37257804,37259700,37261593,37263483,37265151,37266932,37268796,37270272,37272243,37274188,37276086,37278086,37280055,37282006,37283772,37285629,37287275,37289126,37290941,37292811,37294713,37296543,37298198,37299888,37301486,37303011,37304852,37306476,37308071,37309754,37311314,37312783,37314393,37316119,37318139,37320154,37322137,37324012,37326014,37328044,37330040,37331984,37334002,37336026,37338050,37339988,37341983,37344021,37346010,37347978,37349918,37351915,37353795,37355755,37357710,37359683,37361586,37363606,37365608,37367613,37369611,37371634,37373663,37375663,37377632,37379507,37381466,37383514,37385564,37387606,37389590,37391543,37393428,37395182,37397165,37399038,37400975,37402912,37404804,37406770,37408632,37410556,37412417,37414324,37416241,37418099,37420011,37421981,37423865,37425804,37427717,37429603,37431488,37432785,37434219,37436142,37437836,37439407,37440930,37442220,37443671,37445473,37447087,37448688,37450480,37452079,37453631,37455208,37456786,37458319,37459869,37461383,37463071,37464677,37465971,37467173,37468822,37470493,37471769,37472983,37475019,37476877,37478669,37480423,37482220,37483960,37485708,37487556,37489314,37491000,37492669,37494366,37496052,37497638,37499457,37501223,37502491,37504021,37505603,37507132,37508610,37509879,37511201,37512988,37514420,37515716,37516896,37518227,37520039,37521577,37523155,37525067,37527073,37529041,37531025,37533009,37534933,37536770,37538413,37540348,37542272,37544140,37545772,37547596,37549553,37551462,37553320,37555210,37557042,37558981,37560875,37562486,37564429,37566009,37567441,37569091,37570637,37572073,37573488,37575208,37576650,37578287,37579737,37581397,37582951,37584632,37586215,37588046,37589614,37591263,37592943,37594619,37596159,37597582,37599135,37600728,37602562,37603833,37605088,37606664,37608202,37610032,37611840,37613611,37615132,37616593,37618133,37619923,37621473,37622952,37624612,37626168,37627898,37629603,37631078,37632672,37634355,37635900,37637389,37638818,37640312,37641936,37643577,37645126,37646597,37648174,37649791,37651392,37652971,37654072,37655676,37657176,37658578,37659855,37661200,37662470,37663730,37665149,37666571,37667936,37669105,37670524,37671957,37673212,37674682,37676027,37677292,37678894,37680466,37681979,37683774,37685427,37686871,37688782,37690632,37692518,37694325,37695860,37697772,37699664,37701313,37703085,37704684,37706380,37707584,37709410,37711366,37712845,37714539,37716259,37717943,37719655,37721246,37722668,37724322,37725743,37727367,37728908,37730420,37732023,37733543,37735091,37736510,37738104,37739578,37741180,37742630,37744214,37745652,37747448,37749311,37750959,37752859,37754681,37756558,37758082,37759586,37761104,37762647,37764375,37766364,37768251,37770181,37772042,37773925,37775834,37777712,37778990,37779521,37779993,37780509,37781147,37781836,37782454,37782915,37783647,37785270,37787249,37789235,37791193,37793166,37795133,37797096,37799068,37800999,37802735,37804382,37805999,37807662,37809441,37811016,37812799,37814332,37815892,37817476,37819077,37820781,37822266,37823757,37825213,37826586,37828079,37829448,37831003,37832526,37833852,37834982,37836356,37837753,37839262,37840733,37842143,37843486,37845117,37846568,37848152,37849564,37850998,37852368,37853790,37855233,37856658,37858026,37859428,37861269,37863022,37864829,37866701,37868574,37870473,37872281,37874007,37875832,37877503,37879209,37880977,37882771,37884619,37886353,37888087,37889770,37891041,37891868,37892670,37893528,37894895,37896590,37898340,37899953,37901596,37903287,37904860,37906341,37907986,37909758,37911421,37913076,37914770,37916427,37918241,37920030,37921906,37923524,37925310,37926830,37928431,37930205,37931956,37933603,37935109,37937028,37938569,37940421,37942234,37944108,37945652,37947516,37949337,37951204,37952280,37953343,37954299,37955388,37956451,37957534,37958549,37959606,37961223,37962783,37964353,37965869,37967461,37969019,37970564,37972080,37973756,37975195,37976688,37978360,37979992,37981374,37982399,37983458,37984561,37985825,37987268,37988742,37990516,37992228,37993714,37994859,37996208,37997719,37998940,38000081,38001630,38003250,38004624,38006213,38007823,38009347,38010921,38012544,38014136,38015383,38016472,38017255,38018300,38018861,38019832,38020534,38021368,38022856,38024275,38025256,38025754,38026661,38027204,38027971,38028513,38029052,38029977,38030669,38031553,38032054,38032900,38033528,38034290,38034894,38035413,38036341,38037024,38037941,38038482,38039278,38040006,38040740,38041463,38041936,38042759,38043365,38044192,38044470,38044868,38045157,38045415,38046017,38046287,38046944,38047205,38047756,38047988,38048219,38048663,38048816,38049325,38049365,38049875,38050059,38050488,38050731,38050962,38052315,38053732,38055183,38056354,38057581,38058830,38060246,38061228,38062210,38063185,38064190,38065134,38066095,38067078,38068045,38069537,38070919,38072315,38073726,38075213,38076727,38078087,38079452,38081001,38082465,38083955,38085466,38087072,38088674,38090186,38091707,38093194,38094792,38096209,38097642,38099018,38100416,38101873,38103281,38104720,38106201,38107644,38109028,38110418,38111836,38113027,38113947,38114896,38115828,38116951,38117882,38118811,38119749,38120778,38121722,38122627,38123573,38124500,38125941,38127347,38128746,38130131,38131363,38132283,38133230,38134168,38135429,38137037,38138626,38140208,38141838,38143322,38144888,38146453,38148049,38149687,38151025,38152391,38153701,38154997,38156292,38157581,38158892,38160387,38161959,38163452,38164880,38166323,38167428,38168740,38169950,38171503,38173133,38174854,38176436,38177956,38179528,38181357,38183100,38184892,38186386,38187651,38188873,38190356,38191772,38193298,38194487,38195633,38197151,38198581,38200216,38201643,38203149,38204581,38205999,38207727,38209421,38211038,38212717,38214245,38215911,38217537,38219192,38220969,38222536,38224241,38225889,38227537,38229100,38230747,38232402,38233941,38235621,38237275,38238882,38240538,38242047,38243664,38245303,38246966,38248587,38250190,38251884,38253583,38255258,38256820,38258502,38260166,38261737,38263508,38265152,38266788,38268431,38270132,38271927,38273550,38275176,38276804,38278635,38280329,38282007,38283702,38285386,38287174,38288801,38290493,38292109,38293472,38294444,38295384,38296346,38297616,38299112,38300647,38302172,38303722,38305104,38306437,38307769,38309103,38310372,38311549,38312786,38313981,38315380,38316625,38317514,38318513,38319788,38321006,38322211,38323299,38324364,38325635,38326626,38327548,38328430,38330015,38331532,38333033,38334580,38336123,38337624,38339145,38340691,38342294,38343787,38345191,38346574,38347951,38349321,38350704,38352076,38353453,38355123,38356676,38358210,38359757,38361341,38362877,38364406,38365939,38367481,38369246,38370850,38372451,38374106,38375738,38377325,38378919,38380584,38382369,38383836,38385276,38386680,38388055,38389524,38390971,38392378,38393797,38395672,38397438,38399150,38400833,38402580,38404327,38406030,38407719,38409612,38411373,38413092,38414791,38416446,38418176,38419864,38421535,38423210,38424730,38425729,38426956,38428018,38429154,38430249,38431430,38432625,38433761,38434838,38435824,38436696,38437339,38438049,38438724,38440137,38441824,38443552,38445260,38446940,38448688,38450406,38452147,38453823,38455751,38457490,38459181,38460815,38462528,38464189,38465936,38467647,38469508,38471297,38473065,38474852,38476573,38478384,38480135,38481940,38483668,38485547,38487259,38488967,38490588,38492271,38493956,38495670,38497346,38499111,38500522,38502021,38503430,38504933,38506135,38507139,38508142,38509149,38510888,38512707,38514518,38516338,38518003,38519859,38521651,38523481,38525313,38526814,38527979,38529201,38530662,38532284,38533318,38534361,38535499,38537255,38538888,38540496,38542071,38543618,38545305,38546913,38548507,38550138,38551777,38553263,38554676,38556092,38557473,38558952,38560366,38561773,38563253,38564972,38566414,38568043,38569522,38570989,38572436,38573905,38575322,38577024,38578627,38580233,38581831,38583390,38584988,38586611,38588197,38589934,38591454,38592906,38594352,38595796,38597261,38598704,38600118,38601624,38603276,38605091,38606919,38608770,38610447,38612301,38614080,38615905,38617753,38619420,38621070,38622682,38624380,38625916,38627563,38629159,38630794,38632449,38633940,38635385,38636838,38638229,38639773,38641246,38642703,38644161,38646029,38647854,38649688,38651578,38653264,38655116,38656930,38658793,38660495,38662176,38663820,38665428,38667021,38668669,38670323,38671934,38673603,38675227,38676683,38678119,38679566,38680983,38682463,38683889,38685354,38686896,38688740,38690528,38692422,38694252,38696007,38697825,38699643,38701521,38702946,38703756,38705541,38706295,38706982,38708162,38708814,38709681,38710682,38711381,38712663,38713929,38714563,38715264,38716238,38717575,38718602,38719885,38721278,38722520,38723165,38724339,38725673,38726772,38728125,38729252,38730959,38732053,38733244,38734217,38735680,38737305,38738867,38740608,38742261,38744029,38745560,38747236,38748760,38750374,38751489,38752278,38753701,38755210,38756777,38757803,38758813,38759824,38760809,38762173,38763292,38764336,38765441,38766800,38768536,38770574,38772603,38774610,38776619,38778639,38780653,38782635,38784655,38786680,38788733,38790734,38792730,38794739,38796737,38798748,38800714,38802746,38804771,38806796,38808807,38810803,38812810,38814820,38816776,38818792,38820823,38822865,38824860,38826864,38828873,38830873,38832888,38834836,38836886,38838872,38840778,38842676,38844576,38846480,38848409,38850240,38852101,38853988,38855880,38857753,38859649,38861482,38863357,38865175,38867064,38868975,38870761,38872429,38874108,38875777,38877452,38879099,38880743,38882349,38884128,38885786,38887454,38889113,38890752,38892400,38894046,38895672,38897253,38898915,38900371,38901814,38903248,38904664,38906108,38907501,38908857,38910371,38911949,38913429,38914822,38916426,38917747,38919332,38920797,38922479,38923863,38925347,38926835,38928485,38929923,38931412,38932962,38934572,38936024,38937326,38938847,38940254,38942231,38943987,38945451,38947114,38948745,38950316,38951845,38953414,38955122,38956665,38958234,38959865,38961522,38963291,38964956,38966550,38968103,38969773,38971327,38972903,38974456,38975995,38977538,38979115,38980661,38982112,38983782,38985245,38986948,38988538,38990114,38991686,38993415,38995005,38996652,38998412,39000167,39001661,39003276,39005207,39007089,39008800,39010504,39012361,39014318,39016249,39018188,39020158,39022098,39024050,39025970,39027905,39029715,39031561,39033416,39035351,39037272,39039144,39040997,39042832,39044642,39046417,39048193,39049959,39051933,39053915,39055880,39057855,39059764,39061679,39063566,39065471,39067416,39069404,39071288,39073208,39075057,39076869,39078687,39080527,39082299,39084270,39086261,39088255,39090236,39092188,39094141,39096084,39098001,39099942,39101900,39103723,39105538,39107280,39109077,39110825,39112616,39114361,39116220,39118052,39119917,39121681,39123505,39125343,39127158,39128966,39130742,39132513,39133946,39135392,39136838,39138262,39139694,39141094,39142505,39143966,39145937,39147889,39149810,39151816,39153764,39155665,39157565,39159483,39161383,39163262,39165170,39167174,39169112,39171067,39172976,39174882,39176763,39178705,39180582,39182515,39184320,39185810,39187343,39188946,39190540,39192134,39193728,39195224,39196944,39198763,39200574,39202359,39204101,39205881,39207622,39209359,39211080,39212770,39214081,39215371,39216631,39218037,39219326,39220693,39222079,39223544,39225103,39226568,39228038,39229604,39231188,39232675,39234160,39235619,39237257,39238943,39240431,39242084,39243679,39245312,39246833,39248441,39249815,39251152,39252508,39253720,39255020,39256181,39257451,39259069,39260968,39262836,39264697,39266581,39268483,39270376,39272218,39274096,39276065,39277972,39279848,39281721,39283592,39285467,39287361,39289235,39291160,39292625,39294061,39295453,39296816,39298263,39299767,39301241,39302715,39304446,39306081,39307773,39309504,39311230,39312828,39314434,39316000,39317597,39319244,39320797,39322378,39323986,39325662,39327405,39329106,39330769,39332515,39333962,39335420,39336901,39338382,39339760,39341147,39342560,39343979,39345636,39347080,39348584,39350136,39351138,39352685,39354182,39355661,39357294,39358796,39360307,39361783,39363278,39364745,39366231,39367731,39369238,39371192,39373162,39375092,39376900,39378329,39379752,39381176,39382213,39383609,39384990,39386395,39387924,39389185,39390330,39391468,39392554,39393436,39394526,39395709,39396842,39398336,39399744,39401231,39403007,39404903,39406789,39408699,39410582,39412476,39414376,39416266,39418025,39419632,39421185,39422613,39424127,39425669,39426488,39427426,39428202,39429058,39429944,39430725,39431522,39432270,39433284,39434206,39435125,39435913,39436907,39437870,39438884,39439834,39441176,39442466,39443802,39445097,39446180,39446493,39447011,39447506,39448026,39448243,39448781,39449211,39450533,39451653,39452400,39453249,39454191,39455562,39456291,39457605,39458593,39458786,39458991,39459468,39459821,39460954,39462238,39463818,39465370,39467268,39469004,39470804,39472635,39474449,39476223,39477988,39479749,39481551,39483203,39484861,39486480,39488094,39489667,39491314,39492939,39494483,39496010,39497342,39498660,39499978,39501520,39503194,39504873,39506518,39508166,39509858,39511533,39513211,39514884,39516567,39518230,39519864,39521075,39522603,39524404,39526274,39528071,39529838,39531673,39533518,39535342,39537103,39538791,39540246,39541706,39543154,39544717,39546582,39548421,39550304,39552171,39554022,39555897,39557741,39559611,39561451,39562678,39564428,39565857,39567000,39568211,39569289,39570296,39572344,39574352,39576346,39578273,39580210,39582167,39584088,39585986,39587866,39589820,39591774,39593738,39595646,39597559,39599457,39601379,39603364,39605210,39606870,39608630,39610412,39612254,39614029,39615757,39617362,39619136,39621188,39623237,39625290,39627330,39629381,39631437,39633466,39635518,39637573,39639622,39641673,39643712,39645765,39647811,39649853,39651904,39653954,39655858,39657768,39659646,39661479,39663301,39665161,39666984,39668842,39670793,39672695,39674577,39676422,39678283,39680103,39681976,39683806,39685689,39687132,39688711,39689476,39690277,39691041,39691746,39692531,39692923,39693745,39694649,39695491,39695938,39696480,39697291,39698172,39698965,39699354,39700038,39700830,39701696,39702328,39702733,39703476,39704317,39705219,39705698,39706258,39707441,39708452,39709687,39710318,39710773,39712024,39713068,39714176,39714684,39715336,39716506,39717589,39718655,39719039,39719924,39721047,39722092,39723001,39724207,39725436,39727010,39728306,39729986,39731567,39732567,39733705,39734858,39735987,39737143,39738247,39739354,39740452,39741620,39742773,39743922,39745092,39746230,39747324,39748326,39749433,39751074,39752177,39753264,39754472,39755563,39756664,39757759,39758838,39759892,39760921,39761780,39762796,39763816,39764744,39765658,39766430,39767307,39768708,39769146,39769672,39770179,39770718,39771287,39771771,39772337,39772890,39773364,39773850,39774325,39774848,39775371,39775890,39776446,39776966,39778275,39779749,39781249,39782752,39784308,39785802,39787310,39788827,39790300,39791509,39792487,39793457,39794749,39796447,39797860,39799245,39800563,39801905,39803337,39805052,39806690,39808346,39810016,39811623,39813231,39814885,39816545,39818225,39819963,39821431,39822915,39824436,39825908,39827408,39828908,39830372,39832018,39833019,39834134,39835384,39836733,39838053,39839328,39840645,39841730,39843081,39844526,39845947,39847403,39848950,39850461,39852017,39853549,39855180,39856679,39857658,39858808,39859942,39861087,39862280,39863386,39864501,39865596,39866737,39867903,39869080,39870241,39871343,39872444,39873464,39874554,39876113,39877212,39878293,39879467,39880540,39881609,39882697,39883735,39884761,39885784,39886681,39887718,39888751,39889617,39890507,39891264,39892139,39893540,39893967,39894496,39894998,39895526,39896113,39896593,39897159,39897730,39898176,39898677,39899152,39899671,39900177,39900709,39901286,39901793,39903341,39905130,39906896,39908704,39910496,39912305,39914054,39915933,39917318,39918737,39920098,39921475,39923096,39924396,39925616,39926836,39928230,39929798,39931118,39932394,39933906,39935315,39936349,39937370,39938321,39939685,39941339,39942915,39944616,39946244,39947626,39948790,39949934,39951048,39952548,39953753,39955518,39957190,39958802,39960489,39962187,39963847,39965451,39967100,39968825,39970066,39971332,39972897,39974281,39976201,39977839,39979844,39981599,39983348,39984961,39986683,39988401,39990043,39991786,39993529,39995291,39996904,39998373,39999915,40001452,40003015,40004509,40006102,40007509,40009140,40010762,40012358,40013951,40015538,40017107,40018664,40020275,40022031,40023521,40025259,40027067,40028640,40030006,40031717,40033525,40035147,40036917,40037972,40039030,40040157,40041321,40042451,40043602,40044630,40045744,40046818,40047972,40049097,40050258,40051398,40052491,40053520,40054627,40055964,40056899,40058146,40059271,40060177,40060663,40061830,40063075,40064286,40065249,40066092,40067281,40068400,40069391,40069818,40071034,40072242,40073387,40074395,40075132,40076261,40077417,40078489,40078904,40080087,40081257,40082397,40083287,40084128,40085223,40086462,40087596,40088010,40089115,40090321,40091484,40092367,40093323,40094487,40095717,40096917,40097339,40098354,40099615,40100735,40101606,40103154,40104269,40105351,40106533,40107602,40108670,40109743,40110793,40111837,40112847,40113746,40114779,40115804,40116671,40117559,40118331,40119226,40120369,40121520,40122700,40123841,40124375,40125228,40126426,40127563,40128546,40129746,40130876,40132020,40133235,40134377,40135630,40136758,40137983,40139168,40140388,40141559,40142665,40143899,40145086,40146417,40147528,40148648,40149828,40151030,40152295,40153474,40154547,40155548,40156611,40157913,40159106,40160095,40161114,40162252,40163602,40164706,40165715,40166706,40167866,40169212,40170279,40171250,40172308,40173620,40174624,40175059,40175602,40176724,40178189,40179945,40181788,40183660,40185516,40187163,40188554,40189248,40189745,40190269,40190784,40191366,40191992,40193465,40194544,40195772,40197274,40198485,40199517,40200830,40202352,40203448,40204659,40206150,40207385,40208409,40209711,40211589,40213329,40215075,40216885,40218709,40220455,40222273,40224101,40225773,40227667,40229347,40231174,40232955,40234719,40236586,40238364,40240187,40241979,40243784,40245535,40247334,40249238,40250960,40252698,40254581,40256286,40258165,40259937,40261689,40263578,40265380,40267107,40268859,40270757,40272492,40274302,40276156,40277844,40279733,40281408,40283245,40285026,40286849,40288597,40290383,40292209,40293975,40295809,40297684,40299424,40301293,40303023,40304771,40306800,40308509,40310351,40312124,40313899,40315709,40317586,40319330,40321048,40322959,40324651,40326479,40328365,40330061,40331942,40333723,40335560,40337278,40339130,40340878,40342663,40344560,40346313,40348044,40349682,40350806,40352035,40353225,40354475,40355676,40356864,40358020,40359199,40359590,40360386,40361301,40362111,40362543,40363107,40363890,40364767,40365560,40365946,40366669,40367456,40368333,40368962,40369372,40370141,40371003,40371903,40372352,40373976,40374948,40376090,40377200,40378355,40379538,40380657,40381759,40382872,40384021,40385148,40386308,40387494,40388590,40389721,40390768,40391868,40393401,40394862,40396519,40397569,40398669,40399809,40400922,40402021,40403111,40404172,40405199,40406199,40407114,40408097,40409168,40410131,40410956,40411710,40412598,40413960,40415407,40416809,40418281,40418714,40419242,40419743,40420290,40420870,40421356,40421920,40422477,40422934,40423459,40423929,40424449,40424958,40425496,40426051,40426551,40428017,40429658,40431316,40432909,40434600,40436281,40437909,40439579,40441270,40442985,40444766,40446426,40448034,40449635,40451283,40452919,40454209,40454583,40455440,40456361,40456785,40457091,40457878,40458663,40460702,40462729,40464735,40466751,40468769,40470750,40472749,40474718,40476741,40478777,40480800,40482804,40484810,40486826,40488839,40490809,40492822,40494264,40495675,40497242,40498844,40500141,40501188,40502614,40503736,40504857,40505980,40507097,40508221,40509345,40510363,40510460,40510940,40512939,40514976,40516828,40518706,40520614,40522481,40524323,40526203,40528103,40529962,40531907,40533828,40535767,40537726,40539619,40541522,40543433,40545362,40547246,40548986,40550988,40552908,40554813,40556707,40558645,40560546,40562304,40564099,40565891,40567743,40569640,40571544,40573430,40575270,40577161,40579048,40580952,40582819,40584794,40586620,40588481,40590329,40592236,40594111,40595882,40597618,40599098,40600598,40602210,40603855,40605445,40606996,40608465,40609969,40611574,40613187,40614813,40616382,40617861,40619460,40621020,40622561,40624414,40625964,40627494,40629116,40630725,40632636,40634468,40636262,40638009,40639864,40641726,40643568,40645411,40647258,40648841,40650134,40651424,40652774,40654106,40655433,40656762,40658041,40659608,40661061,40662523,40663970,40665433,40666939,40668410,40669850,40671270,40672900,40674343,40675805,40677226,40678739,40680203,40681658,40683092,40684688,40686156,40687624,40689063,40690523,40692022,40693472,40694940,40696361,40697999,40699447,40700868,40702263,40703756,40705226,40706662,40708085,40709563,40711091,40712470,40713862,40715304,40716802,40718251,40719667,40721085,40722657,40724059,40725469,40726889,40728344,40729826,40731245,40732629,40734041,40735649,40737010,40738411,40739850,40741289,40742757,40744155,40745552,40747175,40748604,40750014,40751456,40752981,40754438,40755880,40757292,40758711,40760378,40761819,40763260,40764729,40766212,40767724,40769179,40770564,40772185,40773541,40774861,40776178,40777585,40778918,40780301,40781595,40782892,40784456,40785820,40787098,40788468,40789828,40791172,40792489,40793810,40795223,40796671,40797945,40799235,40800601,40801894,40803250,40804556,40805815,40807427,40808873,40810280,40811742,40813230,40814724,40816179,40817654,40819058,40820674,40822067,40823482,40824983,40826470,40827969,40829411,40830825,40832441,40833848,40835229,40836626,40838091,40839539,40840955,40842360,40843774,40845401,40846805,40848193,40849661,40851151,40852611,40854000,40855387,40856988,40858392,40859815,40861206,40862637,40864130,40865586,40867010,40868411,40870031,40871461,40872873,40874268,40875779,40877220,40878658,40880106,40881655,40883374,40885172,40886960,40888700,40890551,40892153,40893922,40895763,40897583,40899408,40901154,40902750,40904577,40906325,40908080,40909821,40911572,40913444,40915294,40917207,40919052,40920907,40922758,40924633,40926499,40928455,40930292,40932103,40933859,40935696,40937516,40939291,40941052,40942872,40944768,40946559,40948311,40950048,40951840,40953572,40955310,40957017,40958887,40960683,40962504,40964240,40966010,40967777,40969544,40971291,40973073,40975057,40976931,40978744,40980566,40982380,40984183,40986017,40987835,40989693,40991485,40993219,40995001,40996725,40998453,41000165,41001921,41003692,41005548,41007390,41009239,41011070,41012901,41014730,41016471,41018261,41020027,41021846,41023602,41025350,41027138,41028679,41030371,41032111,41033818,41035500,41037316,41039092,41040804,41042612,41044228,41045876,41047481,41049230,41051031,41052862,41054543,41056141,41057775,41059462,41061146,41062836,41064481,41066237,41067895,41069556,41071217,41072885,41074578,41076251,41077956,41079631,41081460,41083281,41085025,41086810,41088611,41090443,41092242,41094045,41095863,41097669,41099463,41101155,41102898,41104701,41106477,41108253,41110022,41111892,41113667,41115522,41117391,41119280,41121170,41123138,41124988,41126802,41128585,41130258,41131968,41133713,41135447,41137195,41138986,41140726,41142533,41144232,41145924,41147767,41149554,41151322,41153187,41154946,41156685,41158355,41159767,41161292,41162828,41164320,41165851,41167394,41168859,41170560,41172601,41174542,41176473,41178486,41180473,41182415,41184423,41186327,41188249,41190231,41192227,41194231,41196174,41198137,41200124,41202109,41204148,41205662,41205743,41205781,41205821,41205861,41206179,41206219,41206257,41206297,41207402,41209222,41211035,41212868,41214716,41216527,41218362,41220152,41222009,41223652,41225109,41226544,41227973,41229428,41230847,41232275,41233724,41235435,41237266,41239097,41240871,41242668,41244437,41246238,41248007,41249806,41250795,41251439,41251479,41251517,41251557,41251875,41251913,41251953,41251991,41252111,41253350,41254489,41256328,41258039,41259758,41261504,41263268,41264976,41266700,41268433,41270220,41271770,41273014,41274366,41275790,41276751,41277897,41279435,41280786,41281873,41283221,41285024,41286637,41288329,41288406,41288444,41288484,41288522,41288840,41288880,41288918,41288958,41289788,41291096,41292457,41293664,41294799,41296619,41298242,41299886,41301582,41303252,41304929,41306602,41308221,41309476,41309516,41309554,41309594,41309919,41310862,41310990,41311213,41312728,41314582,41316614,41318240,41319892,41321515,41323152,41324827,41326512,41328233,41329962,41331639,41333398,41335132,41336879,41338594,41340308,41342008,41343666,41345441,41346414,41347654,41347694,41349148,41350952,41352676,41354399,41356165,41357902,41359683,41361379,41363180,41364998,41366834,41368720,41370626,41372406,41374305,41376092,41377916,41379864,41381717,41383322,41385011,41386694,41388444,41390257,41392065,41393746,41395632,41397453,41399397,41401191,41403151,41404927,41406916,41408699,41410650,41412443,41413683,41414854,41415961,41416941,41418254,41419657,41420971,41422323,41423684,41425059,41426212,41427356,41428446,41429587,41430730,41432004,41433554,41434233,41435107,41436024,41437115,41438597,41440271,41441251,41441962,41442702,41443545,41445100,41446757,41448511,41449917,41450796,41452193,41453894,41455120,41456282,41457164,41457997,41458923,41459568,41460180,41461157,41462455,41463786,41464952,41466228,41467572,41468961,41470348,41471636,41473202,41475118,41477025,41478924,41480772,41482632,41484525,41486430,41488325,41490168,41492090,41494002,41495962,41497797,41499675,41501578,41503529,41504577,41505499,41506435,41507392,41509166,41511150,41512741,41514716,41516452,41517532,41518772,41519971,41521385,41523366,41525384,41527407,41529418,41531336,41533259,41535148,41537012,41538993,41541039,41543080,41545111,41547096,41548887,41550656,41552519,41554359,41556168,41557975,41559701,41561489,41563379,41565359,41567297,41569210,41571203,41572648,41573943,41575258,41576959,41578161,41579391,41580667,41581962,41583287,41584478,41585750,41587013,41588754,41589996,41591220,41592416,41593985,41595433,41596176,41597053,41598773,41600428,41601240,41602029,41603571,41605145,41606025,41606779,41607931,41609188,41610620,41612022,41613391,41615165,41616924,41618695,41620534,41622308,41624143,41625916,41627799,41629608,41631424,41633110,41634774,41636435,41638215,41639971,41641776,41643586,41645348,41646843,41648265,41649683,41651162,41652734,41654183,41655568,41657005,41658604,41660141,41661560,41663038,41664675,41666191,41667672,41669176,41670751,41672725,41674712,41676658,41678579,41680595,41682593,41684557,41686534,41688545,41690313,41692076,41693820,41695600,41697279,41698827,41700378,41701971,41703920,41705819,41707592,41709483,41711392,41713177,41714986,41716799,41718694,41720610,41722488,41724353,41726268,41728105,41729918,41731684,41733519,41735425,41736739,41738242,41739460,41740866,41742116,41743327,41745001,41746160,41747344,41748584,41749818,41751507,41752574,41753816,41755249,41757123,41758902,41760668,41762437,41764307,41766090,41767878,41769655,41771475,41773321,41775157,41776966,41778781,41780054,41780917,41781716,41782471,41783519,41784682,41785859,41787005,41788309,41789447,41790679,41791810,41793026,41794363,41795771,41797135,41798444,41800175,41802023,41803893,41805740,41807631,41809477,41811329,41813186,41815030,41816974,41818865,41820796,41822698,41824632,41826551,41828483,41830431,41832320,41834162,41836027,41837851,41839586,41841417,41843197,41844897,41846545,41848099,41849985,41851809,41853658,41855555,41857433,41859248,41861179,41863005,41864477,41865867,41867348,41868863,41870385,41872051,41873802,41875345,41876902,41878606,41880212,41881920,41883600,41885342,41887094,41888881,41890724,41892621,41894674,41896722,41898630,41900627,41902592,41904590,41906545,41908574,41910518,41912471,41914381,41916166,41917280,41918633,41919987,41921082,41922889,41924691,41926441,41928191,41929874,41931436,41933021,41934611,41936243,41938046,41939827,41941605,41943401,41945214,41947011,41948816,41950576,41952341,41954030,41955729,41957415,41959025,41960765,41962603,41964398,41965953,41967045,41968141,41969141,41970446,41971612,41972509,41973406,41974410,41975690,41976623,41977875,41978750,41980041,41980575,41981310,41981793,41982653,41983428,41984169,41984907,41985645,41986508,41987725,41989013,41990118,41991282,41992613,41994052,41995407,41996803,41998180,41999587,42001292,42002823,42004119,42005629,42007248,42008672,42010225,42011956,42013547,42015223,42016408,42016618,42016844,42017056,42017783,42018258,42018740,42019157,42019694,42021706,42023733,42025779,42027819,42029863,42031908,42033951,42035972,42038011,42039985,42041920,42043875,42045788,42047684,42049631,42051559,42053461,42055069,42056456,42057844,42059321,42060706,42061857,42063025,42064167,42065366,42066755,42068164,42069632,42071039,42072893,42074717,42076540,42078406,42080305,42082128,42083912,42085722,42087612,42089426,42091184,42092925,42094719,42096381,42098118,42099881,42101613,42103137,42104555,42106075,42107508,42108961,42110391,42111916,42113447,42114948,42116817,42118699,42120539,42122441,42123866,42125092,42126361,42127594,42129323,42131140,42132926,42134730,42136513,42137964,42139333,42140876,42142298,42144339,42146369,42148407,42150425,42152452,42154457,42156442,42158431,42160299,42161801,42163299,42164780,42166401,42168078,42169735,42171401,42173064,42175101,42177074,42179064,42181045,42182970,42184699,42186412,42188145,42190035,42192085,42194136,42196191,42198246,42199554,42200819,42201746,42202291,42202827,42203361,42204125,42205509,42206928,42208357,42209592,42210761,42212313,42213829,42215071,42216466,42218048,42219497,42221069,42222516,42224014,42225738,42227404,42229294,42231123,42232606,42233801,42235164,42236365,42237654,42238594,42239613,42240593,42241798,42242765,42243625,42244546,42245571,42247000,42248977,42250948,42252907,42254843,42256883,42258876,42260858,42262860,42264752,42266247,42267766,42269408,42271167,42272801,42274493,42276161,42277856,42279568,42281055,42282616,42284233,42286040,42287655,42289394,42291029,42292697,42294258,42295923,42297444,42298924,42300399,42302023,42303547,42304971,42306921,42308811,42310671,42312531,42314399,42316307,42318162,42320040,42321948,42323521,42325026,42326466,42328234,42330181,42332169,42334165,42336164,42338100,42339897,42341694,42343510,42345358,42347238,42349144,42351054,42352843,42354254,42355702,42357094,42358436,42359978,42361483,42362995,42364463,42365990,42367597,42369337,42371015,42372578,42374076,42375659,42377151,42378706,42380431,42382181,42383812,42385568,42387245,42388973,42390649,42392410,42394059,42395735,42397252,42398956,42400630,42402302,42403829,42405504,42407149,42408700,42410246,42411827,42413390,42414775,42416505,42417984,42419728,42421289,42422746,42424302,42425824,42427346,42428846,42430365,42432053,42433574,42434914,42436221,42437605,42439141,42440748,42442561,42444006,42445583,42447134,42448668,42450416,42452156,42453792,42455430,42456947,42458192,42459352,42460583,42461864,42463235,42464441,42465804,42467579,42468897,42470308,42471672,42472959,42474072,42475229,42476492,42477682,42479047,42480495,42481912,42483256,42484763,42486251,42487414,42488698,42490451,42492130,42493979,42495565,42496911,42497965,42498984,42499887,42500784,42501879,42503066,42504337,42505631,42507109,42508769,42510316,42512003,42513932,42515209,42516462,42517389,42518433,42519342,42519995,42521018,42522251,42523537,42524707,42525963,42527234,42528531,42530039,42531760,42533523,42535444,42537213,42538995,42540781,42542466,42543790,42545033,42546230,42547591,42548889,42550248,42551578,42552794,42554050,42555327,42556590,42557871,42559292,42561060,42562713,42564408,42565929,42567406,42568900,42570644,42572222,42573862,42575171,42576390,42577542,42578838,42580108,42581345,42582793,42584212,42586001,42587454,42588738,42590085,42591283,42592460,42593626,42594926,42596350,42598049,42599782,42601441,42603057,42604466,42605868,42607274,42608676,42610444,42611958,42613327,42614600,42615833,42617118,42618283,42619524,42620956,42622693,42624348,42626088,42627777,42629294,42630970,42632624,42634100,42635794,42637354,42638060,42638309,42639633,42641202,42641940,42642184,42643434,42644994,42645742,42645986,42647248,42648810,42649557,42649814,42651079,42652630,42653399,42653651,42654849,42656410,42657168,42657412,42658466,42659708,42660967,42662257,42663637,42664916,42666219,42667537,42668831,42670223,42671463,42672801,42674055,42675495,42676801,42678111,42679412,42680768,42682345,42683575,42684804,42686083,42687282,42688579,42689854,42691118,42692325,42693866,42695073,42696258,42697449,42698695,42699910,42701084,42702279,42703661,42704983,42706259,42707481,42708757,42710014,42711296,42712536,42713796,42715553,42717267,42719058,42720762,42722443,42724101,42725819,42727498,42729181,42730409,42731785,42733072,42734472,42735801,42737184,42738430,42739846,42741200,42742563,42743923,42745283,42746640,42748083,42749432,42750822,42752714,42754392,42755970,42757556,42759214,42760794,42762319,42763767,42765042,42766411,42767814,42769275,42770854,42772373,42773808,42775313,42777028,42778914,42780605,42782194,42783794,42785468,42787034,42788551,42790027,42791276,42792639,42794013,42795474,42797040,42798565,42800001,42801499,42803230,42805127,42806815,42808430,42810003,42811655,42813213,42814757,42816213,42817458,42818845,42820205,42821646,42823224,42824732,42826185,42827693,42829389,42831306,42832976,42834579,42836162,42837822,42839379,42840944,42842456,42843755,42845174,42846516,42847936,42849478,42850966,42852458,42853973,42855638,42857519,42858796,42860020,42861138,42862048,42862946,42863934,42865002,42865949,42867071,42868327,42869559,42870762,42871741,42872678,42873746,42874798,42876162,42877570,42878786,42879901,42880860,42881756,42882717,42883791,42884729,42885845,42887053,42888319,42889533,42890523,42891478,42892498,42893574,42894777,42896806,42898734,42900645,42902605,42904573,42906564,42908506,42910440,42912313,42914132,42915910,42917755,42919645,42921569,42923508,42925453,42927406,42928849,42930829,42932749,42934723,42936746,42938758,42940684,42942648,42944640,42946475,42948232,42950008,42951781,42953552,42955323,42957145,42958904,42960635,42962403,42964156,42965940,42967708,42969330,42971177,42973186,42975126,42976984,42978858,42980786,42982735,42984048,42984907,42985974,42987908,42989870,42991869,42993836,42995776,42997769,42999746,43001716,43003736,43005689,43007647,43009626,43011583,43013572,43015530,43017487,43019459,43021141,43022687,43024274,43025836,43027409,43028967,43030533,43032114,43033852,43035620,43037235,43038942,43040494,43042279,43044099,43045930,43047747,43049563,43051110,43052646,43054202,43055712,43057434,43059108,43060842,43062430,43064221,43065840,43067553,43069249,43071065,43072885,43074717,43076574,43078470,43080213,43081857,43083541,43085115,43086988,43088800,43090633,43092428,43094277,43095797,43097443,43098994,43100549,43102213,43103911,43105650,43107309,43109052,43110784,43112538,43114303,43116093,43117649,43119324,43120999,43122791,43124334,43125954,43127797,43129369,43131123,43132854,43134645,43136246,43137933,43139503,43141231,43142914,43144459,43145979,43147748,43149379,43151071,43152116,43153885,43155808,43157461,43158613,43160528,43162425,43163887,43165375,43166888,43168897,43170901,43172897,43174441,43175710,43176773,43178009,43179339,43180534,43182180,43183778,43185344,43186804,43188227,43189719,43191236,43192769,43194430,43195683,43196840,43197743,43198664,43199799,43201034,43202053,43203064,43204210,43205305,43207211,43208959,43210834,43212667,43214490,43216306,43218152,43219926,43221837,43223593,43225140,43226855,43228498,43230229,43231973,43233671,43235450,43237323,43239142,43241012,43242875,43244699,43246540,43248339,43250158,43252082,43253846,43255416,43257128,43258800,43260525,43262277,43264057,43265770,43267592,43269409,43271317,43273136,43275020,43276815,43278745,43280533,43282483,43284429,43286298,43288293,43290229,43292123,43294083,43296100,43298021,43299965,43301779,43303505,43305321,43307104,43308919,43310729,43312578,43314428,43316045,43317557,43318843,43320293,43321843,43323535,43325040,43326164,43327410,43328475,43329386,43329730,43330110,43331514,43332782,43334097,43335352,43336811,43338160,43339427,43340821,43342110,43343552,43344913,43346203,43347537,43348825,43350248,43351608,43352916,43354304,43355628,43357089,43358752,43359678,43361285,43362666,43364577,43366513,43368507,43370551,43372563,43374577,43376563,43378475,43380444,43382089,43383646,43385171,43386685,43388406,43390002,43391762,43393496,43395228,43396953,43398712,43400318,43402071,43403622,43405224,43406877,43408512,43410146,43411965,43413880,43415764,43417537,43419117,43420908,43422796,43424729,43426654,43428484,43430118,43431931,43433803,43435736,43437546,43439327,43440967,43442901,43444822,43446727,43448590,43450186,43452038,43453965,43455875,43457796,43459691,43461319,43463091,43464965,43466835,43468696,43470427,43471503,43472480,43473495,43474480,43476026,43477551,43479170,43480747,43482398,43484011,43485723,43487356,43488942,43490638,43492384,43494057,43495810,43497539,43499157,43500842,43502469,43504122,43505793,43507514,43509436,43511163,43512907,43514635,43516281,43518076,43519774,43521384,43523145,43524788,43526600,43528208,43529843,43531543,43533134,43534697,43536643,43538549,43540421,43542311,43544250,43546170,43548034,43549717,43551468,43553107,43554807,43556660,43558585,43560465,43562345,43564283,43566181,43568207,43570109,43572064,43574009,43575929,43577718,43579480,43581253,43583071,43584998,43586931,43588812,43590688,43592608,43594472,43596374,43598230,43599750,43601150,43602510,43604044,43605670,43607318,43608937,43610547,43612492,43614360,43616213,43618055,43619932,43621756,43623603,43625488,43627344,43629227,43631132,43633059,43633587,43634139,43634653,43635835,43636919,43637964,43639338,43640560,43641828,43643038,43644775,43646423,43648049,43649652,43651427,43652934,43654594,43656324,43657760,43659378,43660946,43662370,43663643,43665026,43666643,43668343,43670015,43671770,43673450,43675178,43676861,43678460,43680128,43681511,43682964,43684438,43685889,43687421,43688884,43690412,43691833,43693328,43694716,43696143,43697506,43699301,43701109,43702941,43704836,43706693,43708555,43710418,43712245,43714136,43715958,43717777,43719641,43721553,43723435,43725291,43727158,43729035,43730997,43733024,43734966,43736864,43738778,43740681,43742618,43744548,43746455,43748377,43750299,43752210,43754057,43755926,43757814,43759698,43761542,43763254,43764676,43766122,43767850,43769485,43771075,43772699,43774322,43775948,43777583,43779194,43780800,43782573,43784220,43785862,43787538,43789179,43790810,43792442,43794084,43795829,43797470,43799114,43800753,43802396,43804014,43805645,43807304,43808941,43810927,43812793,43814671,43816514,43818402,43820261,43822107,43823974,43825898,43827719,43829573,43831399,43833244,43835077,43836924,43838754,43840592,43842531,43844395,43846231,43848116,43849986,43851850,43853692,43855550,43857468,43858888,43860287,43861721,43863111,43864414,43865866,43867348,43868875,43870236,43871568,43873088,43874545,43876001,43877390,43879395,43881280,43883088,43884865,43886685,43888553,43890403,43892302,43894233,43895815,43897661,43899365,43901038,43902739,43904411,43906174,43907776,43909487,43911145,43912863,43914556,43916356,43918079,43919848,43921503,43923196,43924830,43926703,43928521,43930382,43932183,43933730,43935638,43937496,43939371,43941190,43943082,43944690,43946468,43948226,43949994,43951823,43953571,43955183,43956961,43958633,43960357,43962170,43963749,43965541,43967278,43969008,43970724,43972551,43974180,43975897,43977542,43979149,43980858,43982567,43983748,43984952,43986224,43987426,43988720,43989993,43991106,43992653,43994288,43995841,43997368,43999029,44000617,44002192,44003708,44005342,44006869,44008431,44010006,44011636,44013482,44015363,44017305,44019174,44021073,44023020,44024465,44025851,44027536,44029304,44031110,44032924,44034628,44036324,44037795,44039417,44041166,44042873,44044643,44045980,44047294,44048949,44050791,44052672,44054162,44055611,44057212,44058571,44060197,44061744,44063178,44064826,44066314,44067815,44069298,44070830,44072290,44073861,44075432,44076766,44078318,44079809,44081415,44082901,44084356,44085877,44087551,44089096,44090591,44092081,44093435,44094931,44096405,44098018,44099864,44101728,44103574,44105379,44107215,44109025,44110801,44112482,44114147,44115740,44117570,44119271,44121048,44122803,44124487,44126251,44128016,44129675,44131590,44133510,44135328,44137175,44139080,44140862,44142755,44144470,44146176,44147897,44149591,44151293,44153074,44154845,44156413,44158194,44159965,44161717,44163337,44165185,44166847,44168592,44170372,44172021,44173682,44175356,44177047,44178723,44180621,44182284,44183984,44185640,44187426,44189095,44190857,44192528,44194177,44195965,44197730,44199163,44200465,44202186,44203955,44205608,44207326,44209060,44210559,44212049,44213639,44215159,44216646,44218080,44219642,44221145,44222654,44224376,44226142,44227807,44229554,44231302,44232973,44234686,44236413,44238012,44239679,44241361,44242915,44244664,44246278,44247901,44249541,44251238,44252905,44254539,44256125,44257811,44259435,44261093,44262735,44264421,44266081,44267703,44269361,44270972,44272665,44274299,44275940,44277561,44279272,44280887,44282531,44284178,44285881,44287513,44289152,44290762,44292360,44294108,44295719,44297436,44299194,44300946,44302570,44304185,44305818,44307525,44309129,44310780,44312465,44314188,44315929,44317552,44319166,44320806,44322533,44324259,44326149,44327872,44329530,44331209,44333027,44334754,44336427,44338144,44340007,44341806,44343461,44345422,44347283,44349160,44351143,44353133,44355073,44357022,44358972,44360928,44362692,44364532,44366481,44368490,44370502,44372497,44374456,44376267,44378243,44380018,44381819,44383790,44385805,44387831,44389842,44391857,44393845,44395737,44397674,44399591,44401495,44403405,44405301,44407242,44409194,44411073,44412883,44414782,44416695,44418568,44420402,44422086,44423706,44425427,44427329,44429131,44430860,44432459,44434080,44435706,44437340,44438918,44440637,44442059,44443432,44444758,44446174,44447584,44449139,44450614,44451943,44453366,44454902,44456428,44457790,44459209,44460748,44462236,44463674,44465248,44466945,44468657,44470426,44472108,44473786,44475536,44477338,44479031,44480717,44482419,44484152,44485879,44487539,44489198,44490897,44492575,44494270,44495951,44497656,44499309,44500948,44502698,44504408,44506065,44507716,44509453,44511074,44512720,44514385,44516231,44518122,44520013,44521919,44523835,44525730,44527633,44529522,44531422,44533287,44535083,44536852,44538647,44540633,44542647,44544639,44546688,44548731,44550770,44552808,44554819,44556848,44558895,44560935,44562982,44565029,44567086,44569137,44571161,44573198,44575220,44577071,44578906,44580791,44582705,44584626,44586507,44588374,44590257,44591870,44593313,44594801,44596263,44597921,44599574,44601128,44602642,44604266,44605841,44607407,44609096,44610558,44611983,44613583,44615193,44616728,44618285,44619928,44621364,44622787,44624295,44625818,44627569,44629479,44631278,44632974,44634685,44636247,44638213,44640078,44641963,44643793,44645576,44647365,44649072,44650900,44652737,44654416,44656181,44658176,44660159,44662156,44664041,44665949,44667870,44669470,44671143,44672892,44674604,44676355,44678114,44679932,44681646,44683319,44685108,44686779,44688483,44690167,44691542,44693126,44694647,44696163,44697651,44699194,44700703,44702221,44703720,44705276,44706791,44708308,44709829,44711387,44712866,44714376,44715883,44717367,44718798,44720106,44721417,44722674,44724116,44726052,44727994,44729900,44731779,44733725,44735680,44737616,44739565,44741291,44742611,44743905,44745223,44746558,44747898,44749199,44750528,44752091,44753580,44755068,44756544,44758170,44759808,44761342,44762955,44764475,44766287,44767923,44769602,44771301,44772697,44774433,44776064,44777720,44779494,44780926,44782145,44783411,44784704,44785991,44787297,44788561,44789813,44791306,44792577,44793584,44794685,44795765,44797030,44798174,44799240,44800525,44802001,44803302,44804581,44805799,44807043,44808249,44809555,44810900,44812423,44813859,44815156,44816481,44817843,44819175,44820494,44821789,44823157,44825041,44826560,44828226,44829972,44831658,44833214,44834698,44836022,44837988,44839917,44841200,44842338,44843537,44844735,44846018,44847092,44848892,44850847,44852765,44854278,44856063,44857890,44859715,44861439,44863075,44865026,44865756,44866289,44866840,44867307,44867833,44868317,44868854,44869230,44870153,44870545,44871868,44873257,44874669,44875984,44877132,44878104,44878543,44879436,44880234,44881615,44883100,44884582,44886065,44887453,44888267,44889351,44890452,44891792,44893227,44894379,44895801,44897111,44898384,44899583,44901462,44903231,44904958,44906708,44908315,44908426,44908713,44909898,44910555,44911151,44911821,44912374,44912907,44913550,44914203,44914771,44916049,44916880,44917989,44919385,44920778,44922186,44923580,44924996,44926623,44928188,44929867,44931440,44933012,44934558,44936241,44938052,44939548,44940573,44941656,44942885,44944117,44945463,44946701,44947971,44949256,44950693,44952252,44953851,44955513,44957203,44958713,44960066,44961512,44962803,44963397,44963422,44963452,44963477,44964230,44964810,44966200,44966780,44968400,44970019,44971697,44973294,44974939,44976063,44977742,44979278,44980843,44982388,44984180,44986090,44988029,44989933,44991890,44993788,44995157,44996049,44997383,44998891,45000039,45001017,45002044,45003267,45004642,45006065,45007552,45009033,45010594,45012147,45013838,45015579,45017238,45018818,45020380,45021904,45023491,45025095,45026608,45028167,45030018,45032066,45034121,45036144,45038127,45039971,45041983,45043996,45045880,45047642,45049584,45051477,45053440,45055448,45057488,45059490,45061523,45063522,45065544,45067530,45069572,45071627,45073557,45075279,45077210,45079207,45081214,45083217,45085056,45086730,45088233,45089458,45090648,45091843,45093500,45095496,45097350,45099077,45100871,45102776,45104653,45106415,45108197,45109953,45111860,45113791,45115767,45117716,45119677,45121661,45123628,45125631,45127389,45128915,45130454,45132005,45133530,45135071,45136629,45138154,45139611,45141001,45142323,45143657,45144951,45146259,45147605,45148930,45150624,45152630,45154633,45156633,45158608,45160615,45162562,45164512,45166494,45168501,45170274,45171985,45173631,45175306,45176991,45178670,45179570,45179836,45180557,45181874,45183143,45184390,45185347,45186359,45187249,45188318,45189679,45191342,45193016,45194620,45196360,45198090,45199720,45201245,45202861,45204407,45206016,45207566,45209149,45210634,45212112,45213321,45214581,45215667,45216935,45218142,45219423,45220689,45222091,45223479,45225073,45226648,45228226,45229672,45231090,45232511,45233587,45234596,45235856,45237452,45238852,45239477,45240791,45242060,45243462,45245000,45246474,45247977,45249376,45250531,45251927,45253381,45254926,45256651,45258412,45260275,45262077,45263876,45265624,45267174,45268823,45270416,45272070,45273644,45275253,45276754,45278316,45279800,45281182,45282466,45283901,45285441,45286971,45288338,45289716,45291094,45292490,45293848,45294881,45295346,45296016,45296485,45297528,45298970,45300532,45302072,45303563,45304984,45306518,45308061,45309573,45310950,45312229,45313363,45314585,45315910,45317347,45318859,45320104,45321159,45321840,45322104,45323396,45325155,45327055,45328840,45330556,45332125,45333337,45334389,45335670,45337221,45338787,45340354,45341933,45343512,45345075,45346623,45348429,45350170,45351997,45353718,45355583,45357338,45359239,45360973,45362603,45363998,45365422,45366810,45368232,45369648,45371192,45372894,45374564,45376113,45377645,45379117,45380616,45382140,45383645,45385140,45386884,45388809,45390518,45392084,45393098,45393826,45394818,45395688,45396872,45398444,45400090,45401759,45403448,45404917,45406546,45407804,45409064,45410357,45411245,45411764,45412692,45413488,45414271,45414888,45416004,45417402,45418490,45419036,45419677,45420188,45421497,45423286,45424744,45425822,45426942,45427959,45429248,45430637,45431946,45433026,45434028,45434931,45436228,45437664,45439136,45440571,45442000,45443443,45445061,45446750,45448523,45450173,45452022,45453901,45455648,45457204,45458462,45459497,45460783,45461938,45463147,45464146,45465258,45466120,45467321,45468325,45469576,45470798,45471788,45472270,45472899,45473530,45474234,45474763,45475359,45475983,45476659,45477166,45477782,45478408,45479108,45479671,45480321,45480938,45481596,45482020,45482581,45483151,45484555,45486425,45487927,45488961,45490119,45491150,45492306,45493339,45494516,45495640,45497194,45498976,45500563,45502283,45503968,45505639,45507295,45509006,45510402,45511565,45513083,45514753,45516437,45518147,45519981,45521838,45522801,45523048,45523440,45523732,45524060,45524253,45524596,45524821,45525145,45525198,45525471,45525496,45525706,45525852,45526153,45526469,45526817,45527087,45528016,45529510,45531033,45532710,45534073,45535156,45536196,45537299,45538444,45539643,45541080,45542561,45544070,45545506,45547255,45549109,45550950,45552647,45554330,45555672,45557330,45558945,45560502,45561870,45563291,45564565,45565848,45567623,45569159,45570568,45571955,45573507,45574949,45576451,45577951,45579225,45580580,45582027,45583459,45584908,45586457,45587963,45589459,45590634,45591846,45593083,45594515,45595715,45596957,45598291,45599388,45600429,45601519,45603567,45605615,45607663,45609711,45611759,45613807,45615855,45617903,45619951,45621999,45624047,45626095,45628143,45630191,45632239,45634287,45636335,45638383,45640431,45642479,45644527,45646575,45648623,45650680,45652728,45654776,45656829,45658748,45660796,45662844,45664892,45666940,45668988,45671036,45673084,45675132,45677180,45679228,45681276,45683324,45685372,45687420,45689468,45691516,45693564,45695612,45697660,45699708,45701756,45703804,45705852,45707900,45709954,45712002,45713867,45715915,45717963,45719970,45722018,45724066,45726077,45728125,45730173,45732221,45734269,45736317,45738365,45740413,45742414,45744462,45746510,45748558,45750606,45752654,45754702,45756708,45758756,45760804,45762852,45764866,45766914,45768962,45771010,45773058,45775064,45777112,45779160,45781208,45783256,45785304,45787352,45789357,45791405,45793453,45795501,45797549,45799479,45801527,45803575,45805632,45807680,45809614,45811662,45813658,45815706,45817700,45819748,45821796,45823844,45825892,45827940,45829988,45832036,45834084,45836132,45838180,45840228,45842276,45844332,45846387,45848435,45850483,45852525,45854529,45856370,45858418,45860466,45862514,45864562,45866610,45868658,45870706,45872754,45874802,45876850,45878898,45880946,45882994,45885050,45887098,45889146,45891194,45893250,45895194,45897117,45899165,45901213,45903261,45905309,45907357,45909312,45911262,45913310,45915358,45917406,45919459,45921501,45923426,45925415,45927463,45929511,45931559,45933607,45935655,45937703,45939751,45941799,45943847,45945895,45947943,45949991,45952039,45954087,45956135,45958183,45960231,45962279,45964327,45966375,45968423,45970471,45972519,45974575,45976623,45978671,45980727,45982679,45984554,45986602,45988650,45990698,45992746,45994794,45996842,45998890,46000938,46002986,46005034,46007082,46009130,46011178,46013226,46015274,46017322,46019370,46021418,46023466,46025514,46027570,46029618,46031666,46033714,46035770,46037825,46039854,46041812,46043575,46045623,46047625,46049673,46051679,46053727,46055775,46057823,46059871,46061919,46063967,46066015,46068063,46070111,46072159,46074207,46076255,46078303,46080351,46082399,46084447,46086495,46088543,46090591,46092639,46094687,46096735,46098792,46100840,46102888,46104939,46106918,46108896,46110944,46112992,46115040,46117088,46119136,46121184,46123232,46125280,46127328,46129376,46131424,46133472,46135520,46137568,46139616,46141664,46143712,46145760,46147808,46149856,46151904,46153952,46156000,46158048,46160096,46162152,46164066,46166114,46168162,46170210,46172258,46174242,46176290,46178338,46180386,46182439,46184422,46186470,46188518,46190566,46192614,46194662,46196710,46198704,46200752,46202800,46204848,46206896,46208944,46210992,46213002,46215059,46217107,46219155,46221203,46223208,46225256,46227304,46229352,46231400,46233448,46235496,46237544,46239592,46241640,46243688,46245736,46247784,46249832,46251880,46253928,46255976,46257981,46260029,46262077,46264125,46266173,46268221,46270269,46272317,46274365,46276413,46278461,46280509,46282557,46284605,46286653,46288701,46290712,46292760,46294808,46296856,46298904,46300952,46303000,46305048,46307096,46309144,46311192,46313240,46315288,46317336,46319384,46321432,46323480,46325528,46327576,46329582,46331630,46333678,46335726,46337774,46339822,46341870,46343918,46345966,46348014,46350062,46352110,46354158,46356206,46358254,46360302,46362350,46364398,46366446,46368445,46370493,46372541,46374589,46376637,46378685,46380733,46382781,46384829,46386877,46388925,46390973,46393021,46395069,46397117,46399165,46401213,46403222,46405270,46407318,46409366,46411414,46413462,46415510,46417558,46419606,46421654,46423702,46425750,46427798,46429846,46431894,46433942,46435990,46438038,46440043,46442091,46444096,46446144,46448150,46450198,46452204,46454252,46456262,46458310,46460314,46462336,46464162,46466164,46468212,46470260,46472211,46474101,46476095,46478148,46480196,46482187,46484087,46486026,46488068,46490116,46492136,46493981,46495965,46498012,46500060,46502093,46504020,46505940,46507960,46510016,46512062,46514020,46515946,46517929,46519985,46522041,46524026,46525925,46527973,46530021,46532069,46534117,46536165,46538213,46540261,46542309,46544357,46546405,46548453,46550501,46552549,46554554,46556602,46558650,46560698,46562746,46564794,46566842,46568890,46570938,46572986,46575034,46577082,46579130,46581178,46583182,46585230,46587278,46589326,46591374,46593422,46595470,46597518,46599566,46601614,46603662,46605665,46607713,46609761,46611809,46613857,46615905,46617953,46620001,46622049,46624097,46626145,46628146,46630194,46632242,46634290,46636294,46638342,46640390,46642438,46644486,46646491,46648539,46650542,46652549,46654597,46656600,46658607,46660655,46662703,46664751,46666799,46668806,46670854,46672902,46674950,46676998,46679009,46681014,46683020,46685068,46687116,46689164,46691212,46693260,46695308,46697356,46699404,46701452,46703500,46705548,46707596,46709644,46711692,46713740,46715788,46717836,46719884,46721885,46723933,46725981,46728029,46730077,46732125,46734173,46736221,46738269,46740317,46742365,46744413,46746461,46748509,46750557,46752605,46754653,46756701,46758706,46760754,46762758,46764806,46766807,46768812,46770860,46772862,46774910,46776958,46778961,46781009,46783057,46785059,46787107,46789107,46791155,46793157,46795205,46797206,46799254,46801272,46803320,46805368,46807416,46809464,46811512,46813560,46815608,46817656,46819704,46821752,46823800,46825848,46827896,46829944,46831992,46834040,46836044,46838092,46840140,46842188,46844236,46846284,46848332,46850380,46852428,46854476,46856524,46858572,46860620,46862668,46864716,46866764,46868812,46870860,46872862,46874910,46876958,46878965,46881013,46883061,46885109,46887116,46889164,46891212,46893260,46895308,46897315,46899363,46901411,46903459,46905507,46907510,46909558,46911606,46913654,46915702,46917750,46919798,46921846,46923894,46925950,46927998,46930046,46932049,46934097,46936145,46938193,46940241,46942289,46944337,46946340,46948388,46950436,46952484,46954532,46956580,46958628,46960629,46962677,46964725,46966773,46968821,46970869,46972917,46974965,46977013,46979061,46981109,46983157,46985205,46987253,46989301,46991349,46993397,46995405,46997453,46999501,47001549,47003597,47005645,47007693,47009741,47011789,47013837,47015885,47017933,47019981,47022029,47024077,47026125,47028173,47030221,47032224,47034272,47036320,47038368,47040416,47042464,47044512,47046560,47048608,47050656,47052704,47054752,47056800,47058848,47060903,47062951,47064999,47067047,47069095,47071143,47073187,47075207,47077053,47079101,47081149,47083197,47085245,47087293,47089341,47091389,47093437,47095485,47097533,47099581,47101629,47103677,47105729,47107777,47109831,47111879,47113930,47115937,47117957,47119935,47121753,47123656,47125704,47127752,47129800,47131848,47133896,47135944,47137992,47140040,47142088,47144136,47146184,47148232,47150280,47152328,47154376,47156424,47158472,47160520,47162568,47164616,47166664,47168669,47170717,47172765,47174813,47176861,47178909,47180957,47183005,47185053,47187101,47189149,47191197,47193245,47195293,47197341,47199389,47201437,47203485,47205533,47207581,47209629,47211677,47213725,47215722,47217770,47219818,47221866,47223914,47225962,47228010,47230058,47232106,47234154,47236202,47238250,47240298,47242346,47244394,47246442,47248490,47250538,47252543,47254591,47256639,47258687,47260735,47262783,47264831,47266879,47268927,47270975,47273023,47275071,47277119,47279167,47281215,47283263,47285311,47287359,47289407,47291354,47293402,47295450,47297498,47299546,47301594,47303642,47305690,47307738,47309786,47311834,47313882,47315930,47317978,47320026,47322074,47324122,47326170,47328174,47330222,47332270,47334318,47336366,47338414,47340462,47342510,47344558,47346606,47348654,47350702,47352750,47354798,47356846,47358894,47360942,47362949,47364997,47367045,47369093,47371141,47373189,47375237,47377187,47379235,47381283,47383288,47385336,47387384,47389432,47391480,47393528,47395576,47397624,47399672,47401685,47403733,47405781,47407829,47409877,47411925,47413973,47416021,47418069,47420117,47422165,47424213,47426261,47428309,47430357,47432405,47434453,47436501,47438549,47440597,47442645,47444693,47446741,47448789,47450837,47452885,47454933,47456981,47459029,47461077,47463125,47465173,47467221,47469229,47471277,47473325,47475373,47477421,47479469,47481517,47483565,47485613,47487661,47489709,47491757,47493805,47495853,47497901,47499949,47501997,47504045,47506093,47508141,47510189,47512237,47514285,47516333,47518381,47520429,47522477,47524525,47526573,47528621,47530669,47532717,47534765,47536770,47538818,47540866,47542914,47544962,47547010,47549058,47551106,47553113,47555161,47557209,47559257,47561305,47563353,47565401,47567449,47569455,47571503,47573551,47575561,47577609,47579657,47581663,47583711,47585759,47587807,47589855,47591903,47593951,47595999,47598047,47600095,47602143,47604191,47606239,47608287,47610292,47612340,47614388,47616436,47618484,47620532,47622580,47624628,47626676,47628724,47630772,47632820,47634868,47636916,47638920,47640968,47643016,47645064,47647112,47649160,47651208,47653256,47655304,47657352,47659400,47661402,47663450,47665498,47667546,47669594,47671642,47673690,47675738,47677786,47679843,47681891,47683892,47685892,47687940,47689951,47691999,47694047,47696054,47698102,47700109,47702157,47704205,47706205,47708253,47710255,47712303,47714302,47716350,47718398,47720446,47722494,47724542,47726590,47728638,47730686,47732734,47734782,47736830,47738878,47740926,47742974,47745022,47747070,47749118,47751166,47753214,47755262,47757310,47759358,47761406,47763454,47765502,47767502,47769550,47771598,47773646,47775694,47777742,47779790,47781838,47783886,47785934,47787982,47790030,47792078,47794126,47796174,47798222,47800270,47802318,47804366,47806414,47808462,47810510,47812558,47814606,47816654,47818702,47820704,47822752,47824800,47826848,47828896,47830944,47832992,47834993,47837041,47839089,47841137,47843185,47845233,47847244,47849292,47851296,47853344,47855348,47857396,47859444,47861492,47863540,47865545,47867593,47869641,47871689,47873737,47875785,47877788,47879836,47881884,47883932,47885980,47888028,47890076,47892124,47894172,47896220,47898268,47900316,47902364,47904412,47906460,47908471,47910519,47912567,47914615,47916663,47918711,47920759,47922807,47924855,47926903,47928951,47930999,47933047,47935095,47937143,47939191,47941199,47943247,47945295,47947295,47949343,47951391,47953389,47955437,47957485,47959533,47961581,47963629,47965677,47967725,47969773,47971821,47973869,47975917,47977965,47980013,47982061,47984116,47986164,47988212,47990260,47992308,47994356,47996402,47998418,48000312,48002149,48004197,48006245,48008293,48010341,48012389,48014437,48016485,48018533,48020581,48022629,48024677,48026725,48028773,48030821,48032869,48034917,48036965,48039017,48041065,48043113,48045165,48047211,48049226,48050985,48053033,48055081,48057129,48059177,48061225,48063273,48065321,48067369,48069417,48071465,48073513,48075561,48077609,48079657,48081705,48083753,48085801,48087849,48089897,48091953,48094002,48096015,48097922,48099970,48102018,48104066,48106114,48108162,48110210,48112258,48114306,48116354,48118402,48120450,48122498,48124546,48126594,48128642,48130690,48132738,48134786,48136834,48138882,48140934,48142739,48144787,48146835,48148883,48150931,48152979,48155027,48157035,48159040,48161051,48163099,48165147,48167195,48169243,48171291,48173339,48175387,48177435,48179439,48181487,48183535,48185583,48187631,48189679,48191727,48193775,48195823,48197826,48199874,48201922,48203970,48206018,48208066,48210068,48212116,48214164,48216212,48218260,48220308,48222303,48224351,48226399,48228447,48230495,48232543,48234591,48236639,48238687,48240735,48242783,48244831,48246879,48248927,48250975,48253023,48255071,48257119,48259167,48261215,48263263,48265311,48267364,48269314,48271362,48273410,48275458,48277506,48279554,48281602,48283650,48285698,48287746,48289794,48291842,48293890,48295938,48297986,48300034,48302082,48304130,48306178,48308226,48310274,48312322,48314378,48316426,48318409,48320457,48322505,48324553,48326601,48328649,48330697,48332745,48334793,48336841,48338889,48340937,48342985,48345033,48347081,48349129,48351177,48353225,48355273,48357326,48359374,48361422,48363442,48365322,48367370,48369418,48371466,48373514,48375562,48377610,48379658,48381706,48383754,48385802,48387850,48389898,48391946,48393994,48396042,48398090,48400138,48402186,48404242,48406290,48408345,48410401,48412312,48414282,48416330,48418329,48420377,48422378,48424384,48426432,48428437,48430485,48432533,48434581,48436629,48438682,48440681,48442666,48444714,48446762,48448810,48450858,48452906,48454880,48456928,48458976,48461024,48463072,48465120,48467168,48469216,48471264,48473312,48475360,48477361,48479409,48481457,48483505,48485553,48487601,48489649,48491697,48493745,48495793,48497795,48499799,48501808,48503813,48505819,48507867,48509815,48511818,48513866,48515914,48517962,48520010,48522058,48524106,48526154,48528202,48530250,48532298,48534346,48536394,48538442,48540490,48542538,48544586,48546634,48548633,48550681,48552729,48554777,48556825,48558873,48560921,48562969,48565017,48567065,48569113,48571161,48573209,48575257,48577305,48579353,48581401,48583410,48585458,48587506,48589554,48591602,48593650,48595698,48597746,48599794,48601842,48603890,48605938,48607986,48610034,48612082,48614130,48616133,48618181,48620229,48622277,48624325,48626373,48628421,48630469,48632517,48634565,48636613,48638661,48640709,48642757,48644805,48646827,48648875,48650923,48652971,48655019,48657067,48659071,48661126,48663174,48665222,48667270,48669272,48671320,48673368,48675416,48677464,48679512,48681560,48683608,48685656,48687704,48689752,48691800,48693848,48695896,48697944,48699992,48702040,48704088,48706136,48708146,48710194,48712242,48714290,48716338,48718386,48720434,48722482,48724530,48726578,48728626,48730674,48732722,48734770,48736818,48738866,48740914,48742962,48745010,48747058,48749064,48751112,48753160,48755208,48757256,48759304,48761306,48763354,48765402,48767450,48769498,48771509,48773557,48775605,48777653,48779701,48781749,48783797,48785845,48787893,48789941,48791989,48794037,48796085,48798133,48800181,48802229,48804277,48806325,48808334,48810382,48812430,48814478,48816526,48818574,48820622,48822670,48824718,48826766,48828814,48830862,48832910,48834958,48837006,48839054,48841102,48843150,48845150,48847198,48849246,48851294,48853342,48855390,48857438,48859486,48861496,48863544,48865592,48867640,48869688,48871736,48873784,48875840,48877888,48879890,48881938,48883986,48886034,48888082,48890130,48892178,48894226,48896274,48898322,48900370,48902418,48904466,48906514,48908562,48910610,48912621,48914669,48916717,48918765,48920813,48922861,48924909,48926957,48929005,48931053,48933101,48935149,48937197,48939245,48941293,48943341,48945389,48947398,48949446,48951400,48953448,48955496,48957544,48959551,48961599,48963647,48965695,48967704,48969713,48971761,48973759,48975765,48977651,48979654,48981659,48983707,48985709,48987757,48989805,48991853,48993901,48995949,48997997,49000045,49002099,49004096,49006048,49007780,49009828,49011876,49013924,49015972,49018020,49020068,49022116,49024164,49026212,49028260,49030277,49032151,49034199,49036247,49038295,49040343,49042391,49044439,49046487,49048535,49050583,49052586,49054634,49056682,49058730,49060778,49062826,49064874,49066922,49068970,49071018,49073022,49075070,49077118,49079166,49081214,49083217,49085265,49087313,49089361,49091409,49093409,49095457,49097505,49099561,49101617,49103670,49105598,49107646,49109694,49111742,49113790,49115845,49117820,49119683,49121736,49123784,49125832,49127880,49129928,49131976,49134024,49136072,49138120,49140168,49142216,49144264,49146312,49148360,49150408,49152456,49154504,49156552,49158600,49160648,49162696,49164744,49166792,49168840,49170888,49172936,49174856,49176898,49178954,49181002,49183050,49185098,49187146,49189194,49191242,49193290,49195338,49197386,49199434,49201482,49203530,49205578,49207626,49209674,49211722,49213770,49215818,49217866,49219914,49221962,49224010,49226058,49228106,49230115,49232163,49234211,49236259,49238307,49240355,49242403,49244451,49246499,49248547,49250535,49252583,49254631,49256679,49258727,49260775,49262823,49264871,49266876,49268924,49270972,49273020,49275068,49277116,49279164,49281212,49283260,49285253,49287301,49289349,49291397,49293445,49295493,49297541,49299589,49301582,49303630,49305678,49307726,49309774,49311822,49313872,49315872,49317920,49319968,49322016,49324018,49326066,49328114,49330162,49332210,49334211,49336263,49338311,49340359,49342363,49344295,49346240,49348288,49350336,49352384,49354387,49356385,49358280,49360267,49362315,49364363,49366411,49368392,49370440,49372488,49374484,49376532,49378526,49380574,49382622,49384672,49386720,49388701,49390749,49392787,49394768,49396738,49398786,49400773,49402821,49404869,49406917,49408863,49410911,49412915,49414963,49417011,49419059,49421054,49423102,49425108,49427116,49429164,49431041,49432961,49435009,49437057,49439105,49441097,49443145,49445193,49447241,49449289,49451337,49453385,49455233,49457281,49459329,49461377,49463425,49465473,49467521,49469522,49471522,49473570,49475618,49477559,49479607,49481655,49483703,49485751,49487799,49489847,49491844,49493892,49495940,49497988,49500036,49501961,49504009,49506057,49508105,49509887,49511148,49512284,49513533,49515254,49516607,49517988,49519847,49521175,49522136,49523336,49524456,49525829,49527259,49528693,49530172,49531644,49532607,49533419,49534296,49534514,49534539,49535098,49536949,49538732,49540640,49542530,49543976,49545208,49546500,49547764,49548781,49549735,49550803,49551788,49553194,49554798,49556460,49558055,49559768,49561411,49563104,49564728,49566417,49568124,49569814,49571417,49573110,49574819,49576510,49578187,49579881,49581552,49583236,49584914,49586580,49588271,49589883,49591538,49593217,49594943,49596584,49598238,49599259,49600627,49602121,49603753,49605429,49607317,49609201,49611088,49613029,49614340,49615501,49616883,49617897,49619386,49621434,49623482,49625530,49627578,49629626,49631674,49633722,49635770,49637818,49639866,49641914,49643962,49646010,49648058,49650106,49652154,49654202,49656250,49658298,49660346,49662394,49664442,49666490,49668538,49670586,49672634,49674682,49676730,49678778,49680826,49682874,49684922,49686927,49688975,49691023,49693071,49695119,49697167,49699215,49701263,49703311,49705359,49707407,49709455,49711503,49713551,49715599,49717647,49719695,49721743,49723791,49725839,49727887,49729935,49731983,49734031,49736079,49738127,49740175,49742223,49744271,49746319,49748367,49750415,49752463,49754511,49756559,49758607,49760655,49762703,49764717,49766765,49768813,49770861,49772909,49774957,49777005,49779053,49781101,49783149,49785197,49787245,49789293,49791341,49793389,49795437,49797485,49799533,49801581,49803629,49805677,49807725,49809773,49811821,49813869,49815917,49817965,49820013,49822061,49824109,49826157,49828205,49830253,49832247,49834295,49836343,49838391,49840439,49842487,49844535,49846583,49848631,49850679,49852727,49854775,49856823,49858871,49860919,49862967,49865015,49867063,49869111,49871159,49873207,49875255,49877303,49879351,49881399,49883447,49885450,49887498,49889546,49891594,49893642,49895690,49897738,49899786,49901834,49903882,49905930,49907978,49910026,49912074,49914122,49916170,49918218,49920266,49922314,49924362,49926410,49928458,49930506,49932554,49934602,49936658,49938412,49940460,49942508,49944556,49946604,49948652,49950700,49952748,49954796,49956844,49958892,49960940,49962988,49965036,49967084,49969140,49971197,49973245,49975293,49977341,49979397,49981445,49983499,49985555,49987608,49989628,49991666,49993664,49995712,49997760,49999808,50001856,50003904,50005952,50008000,50010048,50012096,50014144,50016192,50018240,50020288,50022336,50024384,50026432,50028480,50030528,50032583,50034639,50036687,50038735,50040783,50042837,50044834,50046882,50048930,50050978,50053026,50055074,50057122,50059170,50061218,50063266,50065314,50067362,50069410,50071458,50073506,50075504,50077552,50079600,50081648,50083696,50085744,50087792,50089840,50091888,50093936,50095984,50097986,50100034,50102082,50104130,50106178,50108226,50110274,50112322,50114370,50116418,50118466,50120514,50122446,50124387,50126388,50128323,50130371,50132369,50134417,50136410,50138407,50140410,50142415,50144401,50146449,50148380,50150382,50152382,50154318,50156366,50158414,50160414,50162462,50164461,50166509,50168513,50170561,50172561,50174609,50176609,50178595,50180593,50182641,50184634,50186591,50188639,50190623,50192671,50194620,50196667,50198662,50200701,50202720,50204719,50206739,50208764,50210737,50212657,50214659,50216707,50218755,50220803,50222851,50224899,50226947,50228995,50231043,50233091,50235023,50237071,50239119,50241167,50243215,50245263,50247311,50249359,50251407,50253396,50255391,50257439,50259487,50261535,50263583,50265631,50267626,50269621,50271669,50273717,50275765,50277813,50279861,50281909,50283906,50285954,50288002,50290050,50292098,50294026,50296074,50298122,50300170,50302218,50304266,50306260,50308308,50310356,50312404,50314411,50316410,50318458,50320461,50322458,50324506,50326554,50328602,50330650,50332698,50334746,50336794,50338842,50340890,50342889,50344937,50346934,50348873,50350921,50352969,50355017,50357065,50359113,50361161,50363157,50365088,50367037,50369036,50371084,50373072,50375120,50377168,50379216,50381264,50383312,50385360,50387408,50389456,50391504,50393552,50395600,50397648,50399696,50401744,50403792,50405840,50407888,50409936,50411984,50414032,50416030,50418078,50420126,50422174,50424222,50426270,50428318,50430366,50432414,50434462,50436510,50438558,50440606,50442654,50444702,50446750,50448798,50450846,50452894,50454942,50456934,50458982,50461030,50463078,50465126,50467174,50469222,50471270,50473318,50475366,50477414,50479462,50481510,50483558,50485606,50487654,50489650,50491698,50493746,50495794,50497842,50499890,50501938,50503986,50506034,50508082,50510130,50512178,50514226,50516274,50518322,50520370,50522418,50524466,50526523,50528526,50530574,50532571,50534619,50536667,50538715,50540745,50542763,50544811,50546818,50548866,50550914,50552857,50554905,50556953,50558955,50560835,50562419,50564467,50566468,50568516,50570516,50572564,50574560,50576561,50578609,50580603,50582598,50584596,50586534,50588582,50590587,50592635,50594640,50596688,50598693,50600741,50602735,50604773,50606750,50608798,50610799,50612847,50614895,50616888,50618936,50620932,50622980,50624975,50627023,50629021,50631069,50633074,50635122,50637125,50639173,50641221,50643269,50645317,50647365,50649413,50651411,50653459,50655461,50657509,50659512,50661560,50663559,50665607,50667608,50669656,50671651,50673654,50675655,50677703,50679702,50681706,50683751,50685722,50687770,50689818,50691866,50693868,50695916,50697964,50699961,50702009,50704057,50706057,50708105,50710153,50712151,50714199,50716247,50718259,50720307,50722304,50724352,50726354,50728402,50730450,50732445,50734493,50736488,50738536,50740535,50742583,50744631,50746628,50748676,50750724,50752720,50754768,50756763,50758811,50760808,50762856,50764853,50766858,50768906,50770904,50772844,50774703,50776756,50778804,50780852,50782847,50784895,50786943,50788936,50790984,50792979,50795027,50797025,50799073,50801073,50803121,50805169,50807166,50809214,50811210,50813258,50815306,50817305,50819353,50821401,50823411,50825341,50827215,50829263,50831311,50833359,50835407,50837403,50839451,50841499,50843547,50845595,50847591,50849530,50851578,50853515,50855508,50857556,50859558,50861557,50863605,50865653,50867701,50869700,50871748,50873796,50875844,50877892,50879940,50881939,50883862,50885910,50887958,50890006,50892054,50894102,50896150,50898198,50900195,50902243,50904291,50906339,50908335,50910241,50912289,50914288,50916336,50918384,50920380,50922312,50924360,50926408,50928403,50930451,50932449,50934497,50936496,50938544,50940483,50942479,50944479,50946527,50948522,50950522,50952523,50954571,50956570,50958569,50960591,50962580,50964532,50966580,50968557,50970605,50972600,50974595,50976643,50978691,50980739,50982733,50984781,50986829,50988877,50990925,50992923,50994903,50996951,50998999,51001047,51003095,51005143,51007191,51009239,51011287,51013335,51015383,51017431,51019479,51021527,51023575,51025623,51027671,51029719,51031767,51033815,51035815,51037863,51039911,51041959,51044007,51046055,51048103,51050151,51052199,51054247,51056295,51058343,51060391,51062439,51064487,51066535,51068583,51070631,51072628,51074676,51076724,51078772,51080820,51082868,51084916,51086964,51089012,51091060,51093108,51095156,51097204,51099252,51101300,51103348,51105396,51107444,51109436,51111484,51113532,51115580,51117628,51119676,51121724,51123772,51125820,51127868,51129916,51131964,51134012,51136060,51138108,51140113,51142161,51144209,51146257,51148305,51150353,51152401,51154449,51156497,51158545,51160593,51162641,51164689,51166737,51168785,51170833,51172881,51174929,51176977,51178999,51181047,51183095,51185143,51187191,51189239,51191238,51193286,51195334,51197382,51199430,51201433,51203481,51205529,51207577,51209625,51211621,51213620,51215668,51217667,51219667,51221715,51223714,51225762,51227760,51229755,51231803,51233851,51235899,51237947,51239995,51242043,51244039,51246087,51248135,51250183,51252231,51254279,51256327,51258375,51260423,51262471,51264519,51266520,51268568,51270616,51272664,51274712,51276760,51278808,51280856,51282904,51284906,51286954,51289002,51291050,51293098,51295146,51297194,51299242,51301290,51303338,51305331,51307379,51309427,51311475,51313523,51315571,51317619,51319667,51321715,51323763,51325811,51327859,51329863,51331911,51333959,51336007,51338055,51340103,51342151,51344199,51346247,51348295,51350343,51352391,51354439,51356434,51358482,51360530,51362578,51364626,51366674,51368722,51370770,51372818,51374866,51376914,51378962,51380957,51383005,51385053,51387101,51389149,51391197,51393245,51395293,51397341,51399389,51401437,51403485,51405481,51407529,51409524,51411572,51413620,51415668,51417716,51419764,51421812,51423860,51425908,51427956,51430004,51432052,51434100,51436148,51438146,51440194,51442242,51444290,51446338,51448386,51450434,51452482,51454530,51456578,51458626,51460674,51462722,51464770,51466818,51468866,51470914,51472962,51475010,51477058,51479106,51481154,51483155,51485203,51487251,51489299,51491347,51493395,51495443,51497491,51499539,51501587,51503635,51505683,51507731,51509779,51511827,51513814,51515862,51517910,51519907,51521955,51523962,51526010,51528015,51530063,51532062,51534110,51536109,51538157,51540085,51542070,51544118,51546166,51548160,51550208,51552210,51554258,51556261,51558309,51560357,51562357,51564405,51566453,51568446,51570494,51572489,51574537,51576585,51578581,51580636,51582684,51584617,51586665,51588713,51590711,51592759,51594759,51596807,51598808,51600856,51602904,51604902,51606950,51608950,51610998,51612997,51615045,51617093,51619141,51621189,51623237,51625285,51627333,51629381,51631429,51633477,51635525,51637573,51639621,51641669,51643717,51645765,51647813,51649861,51651909,51653957,51656005,51658053,51660101,51662149,51664197,51666245,51668244,51670292,51672340,51674388,51676436,51678484,51680532,51682580,51684628,51686676,51688724,51690772,51692820,51694868,51696916,51698964,51701012,51703060,51705108,51707156,51709156,51711204,51713252,51715300,51717348,51719396,51721444,51723492,51725540,51727588,51729636,51731684,51733732,51735780,51737828,51739876,51741924,51743972,51746020,51748068,51750063,51752111,51754159,51756207,51758255,51760303,51762351,51764399,51766447,51768495,51770543,51772591,51774639,51776687,51778735,51780783,51782831,51784879,51786927,51788975,51791023,51793071,51795119,51797167,51799215,51801263,51803266,51805314,51807362,51809410,51811458,51813506,51815554,51817602,51819650,51821698,51823746,51825794,51827842,51829890,51831938,51833986,51836034,51838082,51840130,51842178,51844226,51846274,51848322,51850370,51852418,51854466,51856514,51858516,51860258,51862186,51864234,51866234,51868282,51870330,51872327,51874375,51876371,51878419,51880414,51882462,51884457,51886456,51888504,51890508,51892444,51894492,51896493,51898541,51900539,51902518,51904566,51906572,51908576,51910571,51912619,51914614,51916644,51918597,51920645,51922644,51924692,51926740,51928739,51930787,51932783,51934831,51936879,51938872,51940920,51942915,51944963,51946961,51949009,51950991,51953039,51955033,51957081,51959076,51961077,51963125,51965122,51967113,51969045,51970988,51973036,51975084,51977079,51979127,51981122,51983124,51985172,51987171,51989174,51991222,51993221,51995221,51997251,51999296,52001293,52003341,52005344,52007392,52009390,52011438,52013441,52015489,52017537,52019536,52021584,52023587,52025635,52027571,52029568,52031567,52033615,52035613,52037615,52039663,52041655,52043654,52045651,52047699,52049698,52051693,52053692,52055740,52057742,52059790,52061788,52063836,52065832,52067832,52069880,52071887,52073935,52075983,52078031,52080023,52082071,52084119,52086122,52088170,52090168,52092216,52094264,52096266,52098314,52100362,52102362,52104410,52106411,52108404,52110452,52112500,52114548,52116596,52118644,52120692,52122740,52124788,52126836,52128831,52130879,52132927,52134975,52137023,52139071,52141070,52143068,52145116,52147082,52149130,52151178,52153226,52155221,52157269,52159274,52161126,52162976,52165024,52167072,52169120,52171168,52173216,52175264,52177312,52179360,52181408,52183456,52185452,52187453,52189501,52191549,52193597,52195645,52196981,52198974,52201022,52203070,52205118,52207166,52209165,52211128,52213175,52215223,52217271,52219268,52221316,52223364,52225412,52227460,52229356,52231404,52233452,52235453,52237501,52239549,52241545,52243593,52245590,52247638,52249637,52251685,52253733,52255732,52257780,52259779,52261827,52263875,52265873,52267869,52269917,52271965,52274013,52276012,52278010,52280058,52282106,52284110,52285915,52287963,52289969,52291971,52293915,52295915,52297857,52299905,52301953,52304001,52306049,52308042,52310090,52312138,52314186,52316188,52318236,52320284,52322332,52324380,52326428,52328476,52330524,52332520,52334568,52336569,52338617,52340592,52342640,52344688,52346736,52348784,52350832,52352832,52354880,52356928,52358976,52361024,52363072,52365120,52367168,52369216,52371264,52373312,52375360,52377353,52379401,52381449,52383497,52385545,52387544,52389592,52391640,52393688,52395736,52397784,52399832,52401880,52403928,52405976,52408024,52410072,52412120,52414168,52416216,52418264,52420312,52422360,52424408,52426456,52428504,52430552,52432600,52434648,52436696,52438744,52440738,52442786,52444834,52446828,52448876,52450924,52452972,52455020,52457068,52459116,52461164,52463212,52465260,52467308,52469356,52471404,52473452,52475452,52477500,52479548,52481596,52483644,52485692,52487687,52489735,52491731,52493779,52495827,52497875,52499871,52501919,52503967,52506015,52508063,52510111,52512159,52514207,52516255,52518303,52520351,52522399,52524447,52526495,52528543,52530591,52532639,52534637,52536685,52538733,52540781,52542829,52544877,52546925,52548973,52551021,52553069,52555117,52557165,52559213,52561261,52563309,52565261,52567259,52569307,52571355,52573403,52575451,52577442,52579490,52581491,52583539,52585587,52587474,52589114,52591162,52593158,52595206,52597254,52599302,52601350,52603398,52605446,52607494,52609542,52611590,52613638,52615686,52617734,52619782,52621830,52623878,52625926,52627974,52630022,52632070,52634118,52636166,52638214,52640207,52642255,52644303,52646290,52648338,52650386,52652434,52654482,52656479,52658527,52660575,52662623,52664595,52666643,52668691,52670739,52672787,52674835,52676881,52678756,52680804,52682798,52684846,52686894,52688889,52690937,52692985,52695033,52697081,52699129,52701177,52703225,52705273,52707321,52709369,52711417,52713465,52715513,52717561,52719609,52721657,52723705,52725753,52727801,52729797,52731845,52733893,52735941,52737937,52739985,52741986,52744034,52746082,52748079,52750127,52752175,52754216,52756052,52758100,52760148,52762008,52764056,52766104,52767858,52769767,52771815,52773863,52775911,52777961,52779999,52781997,52784045,52786093,52788141,52790163,52792214,52794262,52796310,52798358,52800406,52802454,52804502,52806550,52808551,52810599,52812647,52814695,52816743,52818799,52820847,52822895,52824945,52826933,52828981,52831029,52833018,52835066,52837064,52839067,52841124,52843172,52845220,52847173,52849221,52851269,52853317,52855365,52857413,52859414,52861462,52863431,52865469,52867517,52869565,52871556,52873604,52875652,52877646,52879694,52881685,52883733,52885734,52887782,52889830,52891878,52893926,52895974,52898022,52900019,52902067,52904115,52906163,52908211,52910259,52912307,52914355,52916403,52918451,52920458,52922506,52924562,52926499,52928547,52930595,52932643,52934691,52936739,52938787,52940835,52942883,52944883,52946931,52948979,52951027,52953075,52955123,52957171,52959169,52961217,52963214,52965262,52967310,52969358,52971159,52973207,52975255,52977091,52979027,52981075,52983123,52985171,52987219,52989210,52991258,52993233,52995281,52997329,52999314,53001362,53003352,53005346,53007164,53009212,53011029,53013077,53015125,53017173,53019132,53021180,53023228,53025276,53027324,53029372,53031420,53033476,53035410,53037458,53039506,53041554,53043602,53045650,53047698,53049746,53051794,53053842,53055890,53057938,53059933,53061981,53064029,53066077,53068125,53070173,53072221,53074269,53076317,53078365,53080413,53082461,53084509,53086557,53088605,53090612,53092660,53094708,53096756,53098804,53100852,53102900,53104948,53106996,53109044,53111092,53113140,53115194,53117008,53119056,53121104,53123152,53125200,53127248,53129296,53131344,53133392,53135440,53137488,53139536,53141584,53143632,53145680,53147728,53149776,53151824,53153817,53155865,53157913,53159961,53162009,53164057,53166105,53168102,53170150,53172198,53174200,53176248,53178296,53180298,53182346,53184394,53186442,53188486,53190542,53192548,53194596,53196644,53198692,53200740,53202788,53204836,53206884,53208932,53210980,53213028,53215076,53217124,53219172,53221220,53223268,53225316,53227314,53229362,53231410,53233458,53235506,53237554,53239602,53241650,53243698,53245746,53247794,53249842,53251890,53253938,53255986,53258034,53260029,53262077,53264125,53266173,53268221,53270269,53272317,53274365,53276364,53278412,53280460,53282508,53284556,53286604,53288652,53290700,53292748,53294747,53296795,53298843,53300891,53302939,53304987,53307035,53309083,53311088,53313136,53315184,53317232,53319280,53321328,53323376,53325378,53327426,53329474,53331522,53333570,53335618,53337666,53339714,53341717,53343765,53345813,53347811,53349859,53351907,53353908,53355909,53357845,53359699,53361628,53363676,53365724,53367772,53369820,53371629,53373685,53375733,53377781,53379829,53381877,53383685,53385733,53387781,53389829,53391877,53393925,53395822,53397870,53399918,53401919,53403967,53406015,53408063,53410085,53412077,53414125,53416173,53418221,53420269,53422317,53424365,53426413,53428418,53430466,53432514,53434562,53436610,53438658,53440706,53442754,53444802,53446801,53448801,53450849,53452897,53454945,53456993,53459041,53461089,53463137,53465185,53467233,53469281,53471329,53473324,53475372,53477420,53479468,53481516,53483564,53485612,53487660,53489708,53491756,53493804,53495852,53497900,53499895,53501943,53503991,53506039,53508087,53510135,53512183,53514231,53516279,53518327,53520375,53522423,53524418,53526466,53528514,53530562,53532610,53534658,53536706,53538754,53540802,53542850,53544898,53546898,53548946,53550994,53553042,53555090,53557138,53559186,53561234,53563282,53565330,53567378,53569426,53571474,53573470,53575518,53577566,53579614,53580830,53581931,53583090,53584275,53585255,53586230,53588010,53589764,53591615,53593369,53595242,53596884,53598100,53599404,53601328,53603376,53605424,53606760,53606794,53606828,53606862,53606896,53606930,53606964,53606998,53607032,53607915,53608872,53609926,53610980,53612088,53613067,53613951,53614655,53615612,53616516,53617557,53618400,53619485,53620483,53621414,53622466,53623485,53624544,53625569,53626519,53627350,53628186,53629041,53630027,53631091,53632066,53632960,53633829,53634734,53635640,53636571,53637411,53638389,53639269,53639998,53640910,53641913,53643131,53644129,53645142,53646364,53647667,53648954,53650235,53651472,53652759,53654267,53655604,53657017,53658365,53659754,53660916,53661757,53662795,53663806,53664673,53665600,53666682,53667723,53668610,53669816,53670820,53672008,53673148,53674245,53675406,53676549,53677652,53678795,53679983,53681337,53682617,53684154,53685638,53687074,53688121,53689032,53689861,53691621,53693536,53695420,53697308,53699185,53700979,53702953,53705001,53707049,53709097,53711145,53713193,53715241,53717289,53719337,53721385,53723433,53725481,53727529,53729577,53731625,53733673,53735721,53737769,53739817,53741796,53743844,53745892,53747940,53749988,53752036,53754084,53756132,53758180,53760228,53762276,53764324,53766372,53768420,53770468,53772516,53774564,53776612,53778660,53780708,53782684,53784732,53786780,53788828,53790876,53792924,53794972,53797020,53799068,53801116,53803164,53805212,53807260,53809308,53811356,53813404,53815452,53817500,53819548,53821596,53823568,53825616,53827664,53829712,53831760,53833808,53835856,53837904,53839952,53842000,53844048,53846096,53848144,53850192,53852240,53854288,53856336,53858384,53860432,53862411,53864459,53866507,53868555,53870603,53872651,53874699,53876747,53878795,53880843,53882891,53884939,53886987,53889035,53891083,53893131,53895179,53897227,53899275,53901323,53903297,53905345,53907393,53909441,53911489,53913537,53915585,53917633,53919681,53921729,53923777,53925825,53927873,53929921,53931969,53934017,53936065,53938113,53940161,53942138,53944186,53946234,53948282,53950330,53952378,53954426,53956474,53958522,53960570,53962618,53964666,53966714,53968762,53970810,53972858,53974906,53976954,53979002,53981050,53983025,53985073,53987121,53989169,53991217,53993265,53995313,53997361,53999409,54001457,54003505,54005553,54007601,54009649,54011697,54013745,54015793,54017841,54019889,54021937,54023907,54025955,54028003,54029983,54032031,54034009,54036057,54037363,54038720,54040440,54041798,54042945,54044457,54045785],\"sizes\":[1547,1268,1399,1666,2048,2048,2029,1710,1937,1796,1766,1720,947,713,760,814,930,1004,787,941,890,950,853,921,825,868,896,785,834,832,879,1053,1085,887,937,1315,1311,1262,1456,530,527,490,581,553,937,957,919,1046,843,718,985,919,1075,1067,970,1117,710,631,514,706,553,697,907,1039,451,892,609,738,689,726,1093,965,1055,1043,522,630,504,551,613,704,662,874,641,779,758,898,1230,759,882,1016,972,1042,924,925,967,685,958,960,967,900,519,455,808,788,879,446,596,973,621,667,638,665,801,763,893,676,718,721,776,2050,1833,840,956,1295,1264,785,1279,1065,1173,939,967,1298,1205,1602,1588,1460,1557,1692,44,45,85,47,110,44,108,228,346,444,563,619,601,666,790,667,1040,1397,1477,1471,1387,1665,1629,1551,1631,1618,1678,1684,1713,1769,1692,1637,1575,1699,1679,1522,1559,1490,1401,969,854,738,671,607,636,558,559,549,422,354,258,167,77,47,45,46,138,2048,136,47,45,44,45,50,47,45,44,45,70,242,766,1472,1258,1489,1458,1398,1279,1047,1112,866,656,749,905,763,824,837,924,981,917,847,744,751,893,969,825,798,808,827,749,679,538,536,194,49,47,45,46,48,49,48,45,46,48,49,47,1679,1657,1408,1384,1331,1320,1334,1325,1292,1309,1314,1374,1228,1200,1330,1168,1024,1035,946,922,961,787,771,1014,1121,1114,1331,1400,1617,1668,1597,1621,1650,1398,1412,1202,1167,1228,1334,1488,1443,1396,1026,990,1091,1196,1183,1271,1194,1279,1248,1258,1313,1349,1314,1331,1328,1329,1804,1158,49,47,45,44,48,216,560,853,938,1132,1486,1678,1719,1793,1737,1716,1709,1759,1752,1809,1853,1776,1746,1464,1362,1396,1346,1749,1849,1795,1895,1904,1914,1942,1907,1834,1895,1861,1808,1775,1745,1660,1821,1887,1736,1331,1401,1274,710,177,49,45,45,45,48,49,575,855,1023,1216,1220,1109,499,1120,989,911,914,1301,1970,1435,1440,1494,1524,1540,1538,1513,1504,1518,1555,1674,1833,1881,1976,2005,1996,2010,2013,2020,2008,1932,1857,1767,1860,1888,1892,1919,2018,1996,1860,1863,1855,1768,1695,1753,1768,1827,1871,1941,1947,2013,2020,1990,1952,1762,1590,1515,1513,1501,1509,1511,1505,1499,1465,1440,1444,1505,2048,1330,1295,1288,1300,1311,1246,1362,1301,1231,1288,1316,1170,1355,1362,1446,1394,1461,1440,1391,1448,1520,1546,1503,1557,1536,1570,1658,1576,1611,1570,1590,1543,1516,1476,1625,1710,1635,1672,1680,1449,1369,1394,1360,1231,1270,1213,1236,1271,1184,1196,1213,1147,1229,1200,1274,1297,1246,1978,1362,1092,1123,1095,1063,995,1074,1109,1059,1139,1129,1178,1183,1349,1348,1492,1530,1599,1571,1513,1654,1556,1406,1462,1604,1545,1512,1532,1389,1461,1345,1329,1317,1345,1259,1417,1430,1558,1535,1482,1482,1309,1215,1149,1014,1047,1019,1139,1149,1166,973,921,1019,970,896,977,1041,1644,1812,1541,1594,1534,1629,1612,1659,1650,1544,1591,1653,1708,1477,1465,1588,1611,1557,1732,1681,1537,1653,1555,1454,1481,1473,1621,1534,1466,1492,1553,1543,1555,1503,1558,1555,1625,1654,1697,1674,1527,1526,1682,1627,1518,1378,1195,1492,1549,1546,1427,1560,1610,1673,1723,1693,1507,1564,1787,1848,981,994,993,1051,1065,1094,1088,1100,1049,1005,1167,1143,1152,1109,1082,1184,1106,1249,1249,1212,1252,1316,1338,1236,1102,1102,1024,1077,1029,971,1060,1050,915,948,898,960,951,1076,1062,990,1017,978,1012,975,960,983,988,1057,1079,1064,1135,1080,1173,1040,895,877,934,2048,1318,1279,1275,1290,1316,1252,1363,1277,1239,1296,1330,1127,1252,1239,1394,1342,1342,1350,1324,1427,1566,1615,1621,1483,1327,1348,1539,1548,1676,1727,1671,1519,1331,1311,1379,1519,1467,1541,1472,1414,1381,1390,1354,1227,1260,1218,1235,1250,1190,1181,1211,1151,1239,1207,1277,1297,1269,1993,1697,1565,1623,1571,1580,1579,1528,1623,1554,1552,1608,1671,1742,1788,1797,1814,1537,1661,1600,1748,1833,1839,1753,1823,1869,1858,1847,1908,1705,1812,1683,1746,1748,1710,1680,1742,1604,1820,1917,1699,1677,1331,1347,1330,1279,1504,1493,1473,1490,1551,1514,1511,1585,1475,1460,1451,1500,1834,1419,836,730,850,944,831,688,860,901,807,842,745,940,1049,1187,1270,1205,1298,1286,1440,1518,1544,1514,1626,1608,1645,1540,1627,1600,1621,1622,1553,1467,1435,1506,1519,1535,1479,1457,1457,1408,1310,1282,1112,1290,1166,1183,1012,1023,1012,1085,999,983,1028,953,1019,784,1159,2001,1759,1836,1887,1848,1795,1836,1850,1851,1710,1670,1556,1463,1526,2047,1652,1837,1895,1879,1870,1877,1918,1888,1703,1709,1583,1500,1479,2027,1716,1854,1886,1889,1912,1814,1774,1613,1475,1460,1568,1639,1634,1922,1685,1876,2011,1654,1999,1903,1710,2017,1783,1288,1501,1612,1482,1554,1956,1427,1391,1651,1558,1477,1843,1731,1274,1602,1599,1582,1592,2056,1654,1676,1690,1763,1775,1740,1720,1792,1775,1841,1817,1895,1754,1739,1786,1775,1840,1834,1829,1808,1858,1808,1776,1778,1763,1749,1772,1674,1776,1778,1741,1737,1804,1816,1751,1767,1749,1716,1718,1710,1745,1732,1722,1694,1636,1859,1870,1873,1845,1827,1815,1883,1879,1815,1725,1677,1561,2042,1996,1944,1892,1936,1973,1904,1894,1915,1905,1886,1850,1897,1869,1835,1757,1769,1740,1827,1822,1782,1847,1781,1871,1834,1806,1759,1757,1705,1601,1558,1604,1697,1795,1778,1726,1762,1679,1707,1725,1695,1749,1787,1801,1795,1695,1894,1903,1929,1898,1807,1841,1887,1908,1916,1896,1919,1874,2003,2027,1952,1963,2016,1993,1995,2006,1977,1944,1917,1933,1975,2005,1959,1941,1898,1983,1954,1979,1938,2027,2013,1996,1912,1928,1880,1950,1868,1673,1789,1774,1880,1903,1934,1972,1970,1979,1984,1951,1904,1988,1950,1880,1845,1849,1857,1846,1807,1810,1800,1826,1830,1770,1711,1621,1585,1428,1372,1047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1862,1476,1343,1422,1540,1584,1477,1466,1462,1192,1254,1484,1522,1239,1216,1410,1492,1474,1470,1476,1381,1397,1371,1509,1422,1494,1485,1472,1526,1427,1543,1518,1581,1453,1516,1580,1513,1526,1509,1406,1552,1597,1517,1404,1458,1454,1658,1637,1637,1659,1531,1554,1709,1675,1485,1631,1613,1606,2002,1053,1100,1172,1120,1020,923,1069,1134,1110,1162,1103,1243,1184,1356,1414,1490,1536,1618,1557,1561,1618,1475,1384,1538,1588,1522,1576,1515,1358,1474,1281,1338,1392,1246,1309,1453,1475,1528,1503,1483,1445,1277,1178,1071,1033,1046,1034,1142,1189,1103,859,1043,1066,911,932,972,1076,2026,1226,1046,1194,1095,1035,999,1067,1110,1068,1152,1205,1328,1222,1335,1589,1512,1435,1543,1467,1487,1595,1541,1455,1571,1590,1547,1510,1470,1502,1640,1641,1776,1877,1892,1687,1687,1811,1779,1645,1580,1526,1335,1327,1179,942,1154,1041,1160,1170,1142,936,966,1037,936,922,999,1065,1780,1755,1522,1520,1532,1555,1521,1491,1541,1515,1480,1539,1615,1709,1758,1774,1750,1601,1613,1566,1745,1786,1826,1689,1767,1788,1868,1733,1845,1527,1786,1717,1737,1690,1687,1598,1610,1598,1782,1889,1677,1765,1269,1324,1324,1258,1418,1451,1474,1431,1463,1469,1430,1479,1465,1388,1391,1449,1765,1973,1671,1669,1697,1774,1740,1740,1735,1791,1814,1808,1845,1885,1738,1749,1777,1802,1836,1834,1801,1863,1826,1793,1759,1760,1758,1786,1741,1729,1796,1738,1745,1738,1835,1780,1779,1757,1751,1709,1709,1725,1749,1731,1704,1662,1709,1862,1887,1855,1839,1802,1841,1902,1861,1784,1712,1642,1481,1037,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2035,1210,1344,1339,1462,1469,1528,1484,1426,1435,1483,1477,1430,1453,1348,1381,954,753,1081,1304,1544,1650,1793,1838,1860,1891,1845,1758,1776,1282,1774,1761,1849,1883,1840,1815,1787,1789,1670,1431,1179,985,1108,1369,1153,1251,1327,1142,1241,1234,1399,1465,1458,1520,1408,1414,1399,1340,2056,1464,1405,1476,1536,1512,1464,1550,1480,1463,1506,1614,1613,1419,1595,1680,1650,1686,1775,1732,1646,1723,1572,1570,1509,1563,1582,1607,1575,1608,1634,1596,1545,1548,1622,1600,1636,1586,1628,1550,1587,1605,1651,1621,1563,1291,1200,1483,1490,1439,1333,1474,1520,1599,1624,1437,1377,1506,1945,1586,1457,1376,1426,1426,1344,1467,1474,1372,1416,1481,1521,1123,1461,1540,1539,1539,1721,1637,1542,1622,1505,1463,1425,1568,1543,1552,1436,1522,1526,1547,1432,1489,1597,1516,1566,1572,1575,1609,1549,1503,1564,1486,1399,1213,898,1298,1368,1370,1271,1434,1462,1515,1559,1409,1327,1383,1740,1909,1631,1680,1639,1793,1772,1745,1740,1609,1696,1765,1831,1560,1499,1642,1654,1628,1765,1774,1634,1709,1649,1521,1517,1514,1675,1660,1483,1556,1603,1641,1657,1596,1669,1710,1696,1727,1756,1744,1611,1580,1719,1653,1584,1427,1258,1628,1696,1701,1552,1668,1707,1771,1829,1814,1628,1640,1789,1816,577,620,601,652,679,712,836,1003,1015,1061,877,1329,1449,1574,1638,1403,1221,1532,1597,1672,1803,1649,1582,1730,1666,1621,1772,1627,1582,1787,1671,1706,1798,1682,1604,1657,1756,1752,1783,1720,1387,1462,1377,1185,1187,1423,1347,1219,1272,1263,1361,1503,1568,1514,1543,1589,1620,978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2042,2004,2037,2052,2056,2048,2048,2050,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2049,2017,2023,2050,2056,2055,2048,2057,2046,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2050,2035,2000,2048,2052,2048,2048,2057,2047,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2056,2036,2008,2038,2052,2048,2048,2048,2050,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1543,1448,1370,1283,1112,986,1080,1106,1100,1172,1081,1177,1237,1108,1179,1014,1155,1064,1226,1169,1176,1146,1061,945,943,808,985,994,603,986,794,827,926,352,351,364,1261,1260,1518,1474,1496,1479,800,1054,1039,888,871,875,1403,1445,1317,1268,1077,1046,1160,1103,978,1278,1089,1101,1157,1093,1270,1003,1145,1103,1139,1225,1293,1045,1140,916,963,820,1006,1024,569,978,772,776,904,351,353,361,1253,1305,1519,1448,1483,1367,1000,1177,885,891,813,1146,1974,48,47,45,58,101,127,178,182,163,233,233,264,478,875,1020,1007,1095,1383,1587,1569,1648,1637,1724,1755,1755,1657,1541,1580,1590,1705,1636,1735,1779,1707,1622,1630,1605,1642,1617,1238,941,1007,856,609,330,221,152,117,105,167,152,69,66,46,48,49,47,598,719,1969,449,175,219,179,251,315,441,369,368,412,322,337,650,782,951,910,1121,1186,1528,1682,1774,1788,1778,1874,1809,1783,1634,1692,1695,1826,1852,1862,1870,1827,1756,1897,1860,1885,1835,1622,973,911,934,731,559,446,335,345,325,392,399,261,162,149,192,214,156,1512,1642,1242,1404,1248,1260,1389,1423,1360,1384,1312,1407,1511,1445,1370,1459,1474,1431,1475,1401,1575,1389,1347,1376,1411,1339,1130,1185,1364,1331,1361,1377,1387,1229,1358,1433,1347,1284,1352,1482,1509,1401,1516,1338,1383,1431,1455,1423,1501,1409,1328,1379,1266,1416,1400,1256,1207,1201,1432,769,1062,1049,2014,47,45,44,90,1021,977,1005,1239,1394,1594,1284,1755,1823,1770,1656,1692,1497,770,1391,1622,1777,1812,1733,1792,1825,1789,1670,1619,1660,1710,1909,1833,1897,1852,1800,1814,1901,1857,1873,1917,1654,1582,1546,1641,1678,1359,1220,1381,1178,1219,1090,749,924,163,49,46,45,800,1012,870,679,817,1146,1334,1341,1354,577,618,954,1102,983,647,672,701,677,695,860,901,909,895,956,952,904,923,813,894,902,973,913,959,621,814,645,758,737,821,870,812,1017,639,771,815,800,845,866,795,990,899,838,852,843,799,1031,771,850,1628,1503,1486,1460,1689,1592,1514,1606,1553,1505,1537,1610,1598,1553,1483,1698,1293,1483,1560,1624,1591,1418,1604,1444,1675,1627,1594,1499,1360,1156,1182,1277,1384,1241,1056,1194,1125,1092,1207,1231,1343,1148,905,781,720,1727,1464,1485,1448,1425,1338,1311,1290,1179,1356,1359,1305,1133,962,945,735,730,1780,1523,1543,1440,1461,1342,1289,1265,1147,1318,1332,1252,1062,810,766,629,1506,1624,1513,1423,1482,1409,1252,1406,1183,1229,1384,1363,1246,1140,933,926,676,787,1830,1461,1468,1404,1447,1506,1500,1470,1225,1060,837,759,825,906,874,1277,1682,1527,1415,1429,1392,1209,1400,1165,1275,1361,1303,1214,1067,955,876,642,1168,1842,1531,1399,1277,1130,1384,1452,1446,1018,939,1228,1684,1623,1616,1482,1260,1142,1459,1458,1281,1106,1209,1315,1258,1130,890,1743,1689,1831,1803,1765,1730,1296,1732,1902,1855,1706,1827,1970,1584,1100,1330,1340,1357,1306,1941,1618,1215,1328,1354,1383,1308,1780,953,867,969,1792,1220,824,906,1430,1712,1222,1563,1704,1510,1660,1756,1889,1287,1356,1676,1572,1530,1810,1889,1789,1197,1519,1724,1542,1672,1898,1820,1771,1189,1567,1748,1608,1729,1898,1876,1623,1241,1591,1755,1576,1626,1868,1869,1666,1310,1603,1738,1506,1605,1843,1866,1589,1235,1578,1701,1507,1674,1786,1875,1274,1397,1683,1549,1552,1745,1697,1769,1177,1555,1737,1516,1651,1779,1856,1428,1315,1662,1665,1519,1744,1849,1691,1619,1572,1710,1469,1585,1623,1575,1576,1563,1572,1489,1608,1556,1533,1603,1441,1495,1470,1334,1663,1468,1288,1098,1117,1303,1363,1135,1238,1588,1547,1370,1301,1290,1360,1502,1210,1295,1245,1303,1682,598,45,41,45,48,63,307,598,751,824,901,1006,936,1033,978,1051,1212,1213,1328,1229,1231,1345,1191,1180,1205,972,1211,1100,1082,1167,1078,979,952,843,608,722,733,439,86,48,47,45,44,563,1398,744,690,1043,1153,1415,1084,917,1077,941,888,674,773,928,969,1017,1186,1135,1193,1249,1304,1187,1303,1389,1307,1377,1310,1349,1269,966,858,669,516,484,654,877,874,797,827,912,1062,865,933,1036,1091,1047,983,1038,1070,1332,658,1385,703,921,1221,1336,698,828,977,1974,1134,1223,1390,1347,1513,1436,1586,1680,1786,1823,1818,1803,1713,1749,1674,1615,1782,1635,1649,1574,1647,1603,1480,1625,1676,1664,1516,1585,1555,1593,1497,1291,1061,1218,1632,1535,1588,1563,1544,1345,1361,1453,1783,1218,678,995,1098,1125,1271,1338,1381,1286,1463,1482,1330,951,822,1048,1269,1386,1268,1248,1281,1104,1191,1150,1226,1314,1216,1216,1395,1360,1242,1316,1364,1318,1333,1258,1250,1203,1091,975,1081,1153,1250,1186,1348,778,1000,1167,1191,782,1092,2004,986,1004,808,1778,878,903,729,1053,1048,1034,987,1034,1172,1271,1466,1651,1636,1662,1558,1331,1414,1482,1612,1621,1656,1643,1666,1607,1587,1467,1537,1475,1819,1835,1876,1846,1762,1777,1573,1438,1338,1379,1330,1296,1139,706,832,1164,1081,1105,995,964,1083,664,1162,1057,706,919,1268,1386,1132,637,570,669,574,558,605,553,899,1069,1104,1134,992,801,791,833,785,804,1046,925,845,949,890,834,892,776,900,986,950,921,1008,597,737,661,706,726,947,897,809,938,840,847,874,879,772,1098,1521,1809,1210,1810,2001,1870,1768,1693,1767,1717,1743,1781,1894,1959,1781,50,47,45,44,45,50,47,45,44,45,50,47,436,761,1302,1430,1451,1534,1532,1454,1489,1551,1667,1692,1714,1749,1743,1660,1712,1639,1589,1635,1631,1615,1573,1303,1330,1211,1194,1104,610,405,267,164,132,49,47,45,46,48,49,48,45,46,48,49,53,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1866,1341,1134,1165,1263,1140,1151,1206,1123,1228,1262,1302,1322,1277,1401,1310,1584,1657,1515,1472,1380,1389,1541,1584,1388,1391,1680,1592,1504,1499,1414,1645,1338,1372,1419,1497,1465,1423,1167,1282,1314,1254,1262,1036,1048,879,1097,1066,1064,878,746,675,846,773,572,641,640,912,2016,1422,1104,1069,1128,1066,1235,1370,1176,1240,1204,1188,1274,1291,1336,1560,1655,1736,1766,1775,1784,1640,1706,1328,1593,1388,1550,1618,1561,1339,1622,1643,1618,1654,1525,1646,1529,1331,1338,1358,1193,1092,1072,1010,995,991,893,1029,1029,1042,1017,892,798,683,388,493,394,338,2021,848,683,673,629,699,678,682,690,666,648,697,685,818,1369,1635,1502,1578,1589,1680,1564,1542,1501,1337,951,784,1573,1383,1497,1542,1508,1476,1512,1345,1261,1127,972,1269,1468,1513,1435,1513,1434,1328,1177,812,701,711,650,633,668,708,687,658,629,695,656,687,1700,1193,631,697,654,693,673,666,673,698,688,636,665,696,970,1603,1593,1621,1686,1720,1617,1562,1465,1448,1404,1285,1341,1310,1304,1258,1273,1354,1302,1240,1308,1654,1693,1602,1636,1661,1569,1467,1276,1094,899,781,694,661,666,687,666,673,674,658,704,684,615,661,1313,2006,303,464,533,633,684,807,909,902,1011,1108,1036,1193,1401,1520,1578,1579,1605,1508,1476,1434,1432,1478,1401,1426,1535,1417,1498,1384,1321,1290,1435,1411,1475,1613,1565,1487,1430,1239,1113,1204,1280,1277,1278,1167,1172,1112,1005,981,1022,1026,1001,969,876,777,726,570,333,1866,615,344,494,607,680,736,814,922,917,1010,1074,1176,1261,1402,1585,1670,1696,1689,1669,1612,1429,1456,1309,1310,1332,1437,1428,1399,1459,1477,1457,1399,1436,1471,1458,1448,1606,1678,1617,1496,1276,1284,1205,1255,1216,1141,1227,1175,1079,1051,1047,958,845,811,678,583,444,1483,1086,365,528,627,657,712,855,874,921,1100,1044,1101,1464,1551,1480,1506,1556,1484,1437,1238,1303,1348,1358,1379,1381,1417,1420,1318,1283,1372,1357,1392,1341,1341,1318,1285,1482,1528,1562,1597,1419,1406,1412,1304,1216,1203,1236,1172,1071,1074,1008,993,880,852,660,686,449,996,1697,1714,1486,1712,1852,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2022,2013,2006,2048,1982,1984,2048,1983,2048,2004,2048,1867,1938,2048,1783,2053,1916,1969,1973,1986,1974,1964,1976,1974,1519,912,786,777,835,946,927,1199,929,868,881,941,960,864,892,718,873,933,807,819,860,797,1210,1217,704,574,1126,1257,1301,1257,1368,537,454,579,598,549,642,956,984,1072,1019,660,929,725,946,998,1019,971,875,769,534,568,738,650,714,1235,471,821,637,703,741,633,1154,880,1028,1079,787,677,529,546,548,688,728,885,695,714,654,832,1162,912,878,905,977,1001,792,1022,746,943,1098,916,856,745,980,270,640,869,999,396,569,958,664,714,578,599,701,927,951,874,610,682,746,885,1905,1660,1602,1454,1426,1383,1486,1553,1964,1755,1777,1604,1455,1414,1395,1490,1532,2056,1660,1604,1714,1662,1623,1632,1726,1747,1792,1744,1731,1728,1465,1249,1231,1238,1612,1610,1661,1786,1761,1732,1707,1689,1776,1721,1677,1702,1695,1756,1744,1748,1705,1768,1764,1771,1704,1786,1747,1600,1567,1543,1324,1311,1282,1449,1498,1528,1656,1631,1605,1705,1531,1547,1652,1624,1586,1973,1639,1433,1495,1515,1537,1446,1536,1494,1433,1502,1583,1631,1421,1543,1681,1670,1688,1795,1762,1654,1739,1579,1573,1561,1520,1597,1614,1593,1623,1613,1599,1586,1544,1577,1609,1674,1580,1658,1568,1562,1590,1667,1616,1594,1387,1157,1445,1505,1466,1366,1471,1519,1574,1604,1512,1397,1467,1798,1793,1230,1213,1240,1234,1237,1275,1249,1284,1235,1284,1295,1568,1310,1278,1288,1324,1329,1332,1296,1224,1261,1292,1281,1221,1280,1238,1248,1271,1247,1223,1226,1201,1236,1222,1222,1239,1242,1243,1249,1246,1254,1272,1296,1279,1494,1343,1289,1285,1300,1314,1310,1307,1223,1289,1269,1253,1440,2050,1744,1764,1792,1767,1795,1808,1785,1769,1759,1801,1744,1738,1681,1718,1669,1644,1655,1573,1620,1669,1650,1640,1609,1704,1733,1714,1788,1707,1777,1746,1796,1734,1738,1764,1632,1674,1695,1632,1707,1629,1689,1713,1682,1706,1707,1781,1702,1753,1753,1773,1753,1744,1741,1742,1778,1777,1756,835,1390,1860,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1127,706,653,598,590,603,629,657,665,548,578,660,1438,479,543,637,565,458,382,410,968,1632,1638,1114,1038,1346,1265,1056,1557,1143,1101,1718,1482,903,908,1241,356,448,494,469,520,465,514,345,352,262,293,315,938,1878,1608,1813,1594,1725,1380,1138,1129,1026,1207,1183,1017,1152,854,1189,1103,547,1208,1178,1090,1076,1194,807,1152,1013,954,1174,896,1168,739,950,1011,910,1289,754,1215,906,1118,1081,1090,1332,866,1102,1085,884,1154,725,1239,315,315,318,1138,1014,1092,867,1509,903,1830,933,1518,1502,1866,1494,1507,1558,1599,1600,1624,1608,1676,1654,1619,1637,1685,1621,1638,1645,1591,1629,1652,1731,1697,1687,1776,1768,1790,1649,1708,1776,1807,1821,1804,1873,1888,1897,1886,1890,1865,1764,1811,1828,1815,1825,1765,1812,1821,1759,1717,1549,1592,1613,1617,1551,1444,1557,1607,1620,1697,1748,2004,1446,1409,1486,1540,1460,1488,1555,1462,1470,1544,1632,1542,1446,1654,1692,1653,1734,1783,1700,1674,1681,1574,1587,1499,1583,1623,1592,1566,1624,1659,1574,1566,1556,1654,1622,1643,1626,1617,1575,1543,1603,1649,1588,1549,1227,1270,1475,1521,1397,1372,1497,1567,1629,1602,1433,1399,1491,2055,688,648,680,532,662,704,798,800,1059,974,1069,936,1232,1252,1259,1240,1299,1405,1412,1356,1434,1400,1427,1389,1456,1566,1375,1438,1450,1274,995,1017,903,1316,1242,1264,1226,1043,1085,974,1011,983,837,948,950,801,758,832,934,786,442,703,782,695,712,532,525,1655,1202,709,778,920,980,1071,1028,1097,1164,1157,1057,892,817,723,1061,1352,1350,1434,1449,1498,1459,1535,1304,1530,1520,1604,1528,1552,1593,1664,1708,1691,1517,1508,1523,1573,1503,1496,1449,1259,1293,1229,999,980,1057,1055,1091,1071,1168,1211,1246,1051,953,811,759,861,813,950,1014,1640,2025,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,1186,1311,1186,858,620,385,1293,649,1072,1082,1076,788,556,1484,1559,1412,1392,1413,1367,1344,1135,1151,1200,1145,1198,1485,1317,1350,1222,1213,1178,1202,1155,1355,1461,1408,1359,1296,1219,1285,1380,1495,1612,1636,1562,1535,1595,1564,1551,1548,1484,1538,1482,1433,1390,1389,1363,1940,2048,2048,2048,2048,2057,2048,2055,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1883,1317,1395,1431,1382,1382,1377,1499,1444,1625,1676,1606,1432,1449,1363,1381,1605,1704,1757,1718,1617,1531,1469,1458,1637,1642,1658,1639,1629,1570,1541,1473,1712,2046,2056,2040,2041,2048,2006,2014,2015,2037,2048,2010,2048,2034,2036,2048,2054,2047,2057,2048,2043,2057,1760,2048,2053,2048,1755,1315,1642,1638,1546,1621,1025,214,213,240,207,238,717,214,214,242,221,229,389,1682,1564,1368,1251,1246,1370,1073,1169,1212,1189,1242,1292,1153,1136,1373,2048,1344,592,1696,1960,847,902,1903,1738,742,1271,2048,1233,599,566,451,456,1817,1237,1975,2042,2045,2048,985,1437,2048,2048,2048,2048,2048,2048,971,1439,2048,2048,2048,2048,2048,2048,2048,952,1444,2048,2048,2048,2048,2048,2048,862,1497,2048,2048,2048,2048,2056,2048,2057,2048,2048,2048,1124,1488,687,83,969,2018,2048,2048,2048,2048,2048,2048,2048,2048,2051,2056,2048,2048,2048,2048,2056,2048,2056,2048,2048,2037,2048,2057,2048,2048,2048,1901,2048,2048,2048,2048,2048,2048,2048,2048,2048,2015,2048,2048,2048,2048,2048,2048,2040,2048,2048,2048,2035,2048,2048,2048,2048,2036,2048,2048,2028,2048,2048,2048,2048,2048,2041,2034,2048,2048,2033,2048,2043,2048,2048,1965,2048,2048,2032,2056,2048,2048,2033,2048,2048,2048,2048,2056,2048,2057,2057,2048,1398,1433,2048,2051,2048,871,1444,1947,2057,2017,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2048,2048,2057,2048,2048,2028,2052,2057,2048,2057,2056,2005,2048,2048,1997,2045,2057,2040,2048,2036,1990,2048,2032,2048,2037,2048,1937,2048,2040,2048,2048,2048,2044,1983,2048,2035,2048,2032,2048,1906,2056,2021,2057,2032,2057,1937,2048,2037,2048,2036,2048,2012,2048,2048,2048,2048,2048,2048,2048,2056,2048,2005,2036,2048,2033,2048,2048,2048,2004,2048,2048,2048,2044,2048,2048,2048,2048,2048,2048,2056,2052,2037,2048,2048,2048,2048,2051,2020,2048,1981,2034,2044,2048,2031,2048,2001,2003,2057,2013,2048,2048,2034,1970,2055,2033,2057,2031,2048,1905,2048,2037,2048,2033,2048,1931,2048,2048,2048,2036,2048,2032,1993,2048,2013,2048,2048,2027,1968,2057,2045,2048,2033,2056,1910,863,134,136,1439,2038,1232,142,1437,2035,901,1664,1932,2015,2043,2038,2051,1573,138,1446,2048,864,1495,2034,1148,135,1439,1981,802,145,145,438,138,1444,2042,132,142,136,441,147,624,958,995,906,792,932,961,628,1045,857,921,924,828,1000,1202,893,990,921,810,1019,1018,1041,1026,1000,795,1042,1113,1250,1205,825,800,403,393,976,1064,974,950,519,350,346,399,382,387,557,550,1226,1145,986,1117,1382,1448,1572,1465,1341,1246,1225,1433,1445,1289,1265,1146,1452,1500,1524,1537,1131,1167,1131,1262,1491,1438,1593,1537,1088,1196,1184,1333,1474,1469,1601,1402,1085,1161,1185,1528,1429,1557,1544,1117,1067,1181,1336,1494,1532,1509,1299,1176,1177,1315,1414,1378,1057,580,563,584,604,614,622,592,1072,861,910,614,968,831,822,708,962,851,862,580,636,760,605,693,836,746,822,700,892,541,814,528,465,696,634,852,562,951,544,568,663,764,702,522,472,653,450,494,619,522,685,877,440,548,1523,1096,1372,1442,1535,1318,1062,1220,1077,1189,1192,1359,1276,1232,1481,1118,1270,1047,1221,1310,872,1509,957,850,959,1493,994,836,976,999,1018,1119,853,1003,1079,1035,873,827,988,831,849,995,813,1058,1049,941,1042,944,757,822,1116,989,1077,931,893,1087,986,613,501,461,620,802,582,1030,679,627,632,651,1109,998,1184,983,510,810,802,725,780,655,694,859,363,353,595,752,695,926,817,1113,613,859,823,820,900,888,825,889,867,873,826,826,952,734,837,841,916,789,971,672,843,1177,809,823,605,802,906,828,804,834,717,797,860,834,858,810,818,608,747,559,728,546,837,357,1002,924,764,1141,1740,1783,1789,1876,1899,2048,2048,2048,1994,1460,1403,1889,1838,2048,1914,1749,2050,2015,1895,1842,2048,2048,2048,1858,1784,2048,1863,1796,2048,1917,1875,1576,1182,969,436,646,1203,1993,2044,1830,1449,1265,1198,1057,1834,1964,1491,1150,1270,776,1843,1304,1531,1393,697,247,111,1415,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2057,2048,2055,1952,1696,1702,2048,2048,2048,2057,2048,2048,2048,1636,25,1124,1990,2048,2048,2049,1713,1619,1851,2048,2028,1854,2048,2048,2048,2048,2035,1852,2048,2048,1880,2048,2049,1980,2048,2048,2038,2051,2035,1970,1543,1538,1797,2043,2048,2048,2048,2048,2048,2048,2056,1985,1850,1452,1063,998,1298,1180,1326,1049,1590,1509,1188,1154,1320,1214,1028,1141,1050,1033,1194,1279,1875,1928,1885,1862,1937,1332,1767,1734,1636,1689,1370,1411,1047,995,1201,1103,1003,1043,1096,1010,1578,1106,988,1155,1222,1331,1206,1779,1979,2048,2057,1978,2053,2042,1977,2036,2054,2047,2048,1973,2048,1989,2048,2038,1972,2048,1975,2048,2036,1972,2057,2036,1972,2037,2048,1972,2048,2003,2042,2031,2013,2047,2048,1971,2056,2039,2035,2048,2048,2030,2048,2027,1971,2032,2048,1977,2048,2052,2048,2056,2048,2048,2048,2048,2055,2056,2048,1895,2048,2057,2048,2048,2048,2048,2048,2048,2048,2048,1892,2048,2048,2048,2048,2048,2048,2057,2048,1893,2048,2048,2048,2048,2048,2048,1897,2048,2048,2048,2048,2048,2048,2048,1891,2048,2048,2048,2048,2048,2048,1898,2048,2048,2048,2048,2048,2048,2048,1901,2048,2048,2048,2048,2048,2048,2048,2048,2048,2042,1701,1495,1523,1637,1443,1433,1814,1776,1787,1801,1458,1515,1579,1445,1732,1785,1704,1647,1704,1846,2031,1222,1474,1634,1126,1107,1104,1580,1592,1713,1718,1766,1618,1722,1885,2046,2048,1798,1156,1221,1191,1080,1273,1115,1137,1142,1607,1515,1426,1429,1335,1473,1389,1539,1522,1771,1591,1657,1598,1569,1512,1560,1817,1878,1888,1704,1791,1897,1798,1848,1720,1790,1848,1566,1469,1872,1919,1034,1025,1819,1697,1400,1353,1760,1688,1336,1391,1849,1460,1807,1620,1733,1134,629,1187,1381,1114,1253,1390,1564,1804,1546,1467,1485,1700,1239,1634,1627,1972,1999,1691,1458,1812,1826,1759,1832,1773,1800,1752,1789,1720,1676,1798,1724,1706,1536,1500,1312,1572,1165,1297,1362,1385,1664,1608,1777,1430,1665,1692,1296,1627,1571,1523,1494,1486,1465,768,681,710,703,703,665,702,637,437,583,549,1047,1907,1686,1702,1685,1701,1828,1746,1762,1748,1409,702,1863,1637,1582,1467,1490,1030,598,235,444,438,490,288,575,1475,1745,1690,1683,1762,1824,1818,1697,1326,1678,1464,1475,1510,821,451,501,525,465,366,453,536,568,739,1902,1668,1665,1683,1667,1920,1782,1728,1401,1463,1732,1483,1480,1485,1488,1014,631,629,571,578,495,609,409,686,444,550,554,382,622,2001,1698,1679,1689,1664,1700,1781,1918,1715,1694,1770,1289,1212,1721,1735,1516,1485,1482,1309,572,571,577,589,536,617,589,542,613,528,542,1128,1945,1670,1683,1662,1696,1671,1934,1708,1721,1694,1336,779,1797,1660,1552,1492,1496,1499,586,593,516,545,420,548,604,581,534,448,426,942,1872,1681,1695,1670,1641,1806,1786,1748,1717,1568,832,1792,1655,1543,1479,1352,426,513,459,368,542,489,378,484,1854,1654,1692,1650,1841,1659,1709,1665,1170,1599,1482,1478,1467,1481,1485,1475,625,666,488,595,633,592,547,693,505,617,688,693,567,781,670,628,634,601,682,526,568,1996,1806,1662,1717,1673,1671,1686,1724,1700,1702,1813,1909,1723,1733,1680,1816,1841,1793,1098,668,830,1766,1831,1682,1793,1623,1478,1475,1473,1460,1011,475,448,549,567,585,605,556,494,471,534,500,561,572,643,2026,1723,1703,1692,1694,1683,1688,1847,1804,1765,1783,1775,1570,675,1006,2018,1739,1699,1554,1485,1484,1486,1473,764,658,662,646,607,577,504,554,619,635,441,507,503,470,510,1564,1862,1698,1680,1693,1700,1700,1707,2016,1695,1700,1766,1800,1681,773,1280,1971,1711,1614,1481,1490,1489,1482,691,493,640,620,618,565,545,294,247,181,235,237,169,1260,2011,1726,1684,1710,1706,1723,1716,1972,1810,1723,1778,1770,1759,1205,1552,1616,1615,1449,1198,661,625,677,625,1474,1665,1713,1744,1201,1663,1459,1468,1358,541,577,586,517,481,505,468,475,859,1859,1657,1678,1657,1858,1685,1703,1090,1427,1745,1478,1468,1466,1445,574,583,577,591,529,563,591,435,549,628,543,1543,1762,1686,1675,1684,1684,1882,1653,1758,1749,926,1344,1854,1626,1467,1461,1365,596,585,363,473,565,430,336,308,336,511,1625,1760,1688,1661,1622,1677,1864,1708,1694,1610,770,1750,1739,1485,1448,1440,1102,266,270,374,395,497,449,338,353,469,472,314,1474,1720,1614,1646,1669,1667,1848,1733,1648,1716,998,1664,1562,1482,1500,757,487,485,516,627,636,585,668,538,1104,1806,1681,1656,1669,1879,1633,1676,1748,953,1770,1668,1466,1488,1480,1483,669,543,561,515,611,585,607,451,443,532,488,462,472,1692,1775,1662,1690,1665,1678,1668,1938,1672,1641,1724,1748,792,1287,1821,1739,1460,1473,1485,1482,1474,1505,1487,1497,1477,1044,659,735,700,537,669,449,744,615,593,503,660,663,650,613,658,588,628,293,709,637,692,545,369,626,570,316,272,408,2028,2026,1806,1727,1708,1702,1697,1687,1682,1686,1670,1665,1700,1688,1961,1970,1693,1729,1678,1639,1680,1737,1702,1677,1679,808,785,1267,1885,1848,911,511,1038,199,1600,1664,1678,1519,1499,1501,1516,1510,1504,1489,1483,1483,1484,1163,690,809,821,537,727,670,715,768,713,583,720,625,617,697,661,756,670,693,599,498,522,518,379,229,317,509,545,406,313,264,122,903,2051,1958,1860,1695,1706,1696,1673,1672,1696,1713,1654,1686,1648,1660,1691,1695,1827,2048,1929,1764,1735,1721,1712,1671,1710,1664,1602,1701,1717,1462,981,768,1826,1889,1717,1766,1812,1633,1485,1489,1472,1497,678,511,559,553,499,561,402,481,398,544,79,530,560,861,1973,1660,1695,1652,1686,1697,1810,1799,1724,1694,1727,1435,885,1813,1758,1503,1437,1463,1476,1508,1492,1492,1467,1496,657,690,569,667,522,649,715,709,613,701,508,622,650,686,560,712,668,408,612,634,615,472,464,609,1089,2023,1891,1688,1670,1675,1692,1711,1706,1690,1649,1698,1736,2048,1750,1672,1658,1698,1723,1703,1747,1752,901,959,1772,1679,1530,1635,1642,1541,1473,1466,1488,1479,1490,808,543,496,511,665,637,672,624,629,670,580,421,581,701,660,481,418,1234,2023,1659,1670,1672,1678,1707,1692,1658,1853,1857,1695,1704,1800,1728,1743,1232,1336,1760,1854,1608,1489,1498,1477,1504,1503,1479,1482,1500,1492,1512,1510,1505,919,603,710,600,619,625,555,602,622,675,610,565,609,627,582,518,648,579,451,603,636,391,612,595,618,588,558,509,600,576,542,617,617,490,574,424,462,522,558,555,1067,2033,2041,2009,1715,1714,1723,1699,1718,1700,1719,1704,1718,1715,1722,1705,1705,1694,1720,1721,1704,1879,2048,1930,1667,1735,1720,1694,1684,1747,1722,1657,1760,1737,1795,1620,910,888,851,900,1581,1753,1651,1534,1565,1564,1592,944,666,1646,1771,1775,1720,1466,1469,1482,1484,1407,641,675,609,646,447,326,407,453,255,429,539,430,517,1991,1765,1685,1677,1682,1686,1680,1944,1737,1729,1738,1714,1115,1512,1756,1575,1465,1470,1030,533,461,426,443,304,373,431,495,1892,1683,1678,1672,1883,1719,1711,1617,1314,1666,1466,1476,1466,1472,1163,574,566,620,624,527,553,608,657,418,448,385,519,343,1176,1869,1636,1665,1673,1673,1686,1671,1932,1654,1713,1674,1462,468,974,1453,1257,1617,1534,1483,1471,516,130,432,341,325,264,340,392,1599,1651,1637,1653,1814,1652,1610,901,1543,1515,1444,1464,733,572,433,421,548,483,593,1828,1664,1658,1792,1756,1142,1642,1520,1500,1491,1471,1454,1474,1485,989,613,637,648,629,499,477,522,596,398,499,408,569,449,471,404,412,450,244,704,1937,1854,1653,1686,1696,1703,1688,1662,1652,1657,1962,1742,1724,1764,1703,1690,1656,1215,818,1374,1698,1422,1665,1678,1530,1474,1491,1480,905,483,351,522,475,470,214,470,536,415,442,323,380,475,1762,1748,1659,1664,1661,1644,1676,1909,1648,1680,1669,1670,701,937,1542,1684,1563,1480,1403,527,518,404,130,511,460,305,1834,1711,1697,1854,1776,1752,1186,1612,1941,2056,2057,2047,2055,1836,1610,1573,1472,1043,802,819,751,810,930,1204,2002,2048,1963,1918,1730,1212,1212,1420,1346,1399,718,1418,773,738,1149,1100,1139,1004,968,1155,1029,994,909,1019,1138,1092,1084,814,931,965,907,917,928,806,929,968,869,1059,1041,921,1150,987,1001,900,869,959,980,843,1040,998,913,953,873,964,1025,1008,1054,855,947,1133,1025,1073,986,1040,1054,1084,1100,1172,1140,1125,1066,1160,1042,1112,1167,1211,983,1117,1034,659,1101,1240,1080,964,1069,1132,1144,1049,1149,1042,1046,1117,956,1318,1139,1035,1075,1128,1143,1072,1181,1115,1122,1178,967,1156,1204,1099,1217,1066,1187,1224,1138,1053,1181,1130,1209,2048,1682,1018,1073,1037,978,958,1108,1011,1003,913,1141,1195,904,1089,1008,969,1013,681,886,747,831,900,1418,1428,1562,1400,1900,2048,2057,1990,1498,1837,2042,2048,2048,2048,1731,2057,1808,1776,2053,2048,2048,2048,2048,2048,2048,2057,2026,2034,2021,2052,2040,2038,1975,1858,1733,1826,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2036,1938,1874,1824,1551,1430,1981,1977,1760,1834,2040,2053,2048,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2046,1693,986,1914,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1842,1763,2048,2048,2048,1941,1677,1446,1271,1055,891,524,1454,2048,2048,2048,2056,2048,2048,2048,2048,2057,1969,1533,1071,1594,2048,2034,1965,1904,1756,1565,1331,941,694,338,118,1565,2055,2048,2048,2055,2048,2048,2048,2048,2048,2048,2057,2038,2032,1858,1678,1535,1188,1948,2054,2048,2048,2048,2048,2057,2054,2048,2048,2056,2054,2033,1982,1751,1572,1146,901,1829,1847,2005,2048,2056,2056,2012,1765,1469,745,1954,2048,2048,2037,1767,2048,2048,1902,1053,25,228,47,162,2048,2048,2057,2048,2051,2048,2048,2040,1992,2003,2048,2048,2048,2020,2048,2048,2048,2048,2048,2048,2048,2048,2057,2019,1651,1815,2022,1515,1734,1958,2047,1747,1409,1405,1794,2021,2044,2048,2048,2053,2046,1935,1631,737,448,2048,2057,2048,2048,2054,2057,2056,2048,2048,2051,2018,1912,1837,1947,1697,1778,2048,2048,2048,2048,2048,2048,2048,2048,1891,2048,2057,2057,2048,2048,2048,2048,2048,1591,2038,1952,1952,1040,2013,2055,2038,1900,1619,2048,2048,2048,2048,2051,2048,2048,2048,2048,1966,1456,1455,1906,1940,2009,2053,2055,2026,2038,2049,2050,2052,2054,2034,2054,1996,2029,1981,2048,2048,2054,2035,2043,2025,2033,2043,2040,2056,2036,2033,1971,1814,1650,1404,1342,1185,1224,1164,1101,999,1139,985,1023,1019,811,870,773,720,618,431,294,208,134,67,52,1299,2030,2039,2048,2035,1972,1749,1716,1350,772,1873,2048,2048,2048,1943,2043,2048,2048,1993,2046,2048,2048,2048,1994,2048,2057,2048,2046,2042,2055,2056,2056,2044,2040,2046,2004,1921,1867,1740,1760,1714,1754,2051,2057,2036,2048,2056,2046,2003,1835,2051,2048,2048,2053,2057,2050,2048,1906,2057,2048,1944,1755,1657,2048,2055,1733,1622,2057,2048,2048,2048,2048,2048,2056,2054,2036,1975,1745,1525,1516,1323,1205,1225,2048,2048,2048,2056,2040,1938,1796,1316,402,737,1394,1628,1849,1959,1932,1917,1981,1964,1807,1629,1418,1211,753,434,1152,1978,2032,1722,1171,1254,2048,2048,2048,2048,2048,2048,2048,2048,1952,2026,2051,1945,1609,1207,1096,2048,1968,1524,1488,2048,2048,2048,2051,2048,2049,2052,2051,1995,1947,1517,2036,1914,1433,691,2030,2048,2048,2048,2048,2048,2048,1940,1800,2048,2048,2048,2048,2048,2048,2030,1204,1289,1756,2012,2055,2048,2048,1707,1270,1996,1858,2056,2048,2048,2048,2051,1940,1444,1170,760,622,366,333,110,1293,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,1556,1821,2048,2048,2048,2048,2048,2048,2048,1555,206,1047,1642,1883,2050,2048,2048,2048,2048,2048,2048,2048,2048,2048,1942,1691,1551,1397,1272,1073,981,982,741,775,932,927,655,1475,2005,2057,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2029,1414,854,671,1133,2057,2048,2048,2056,1763,1451,2048,1833,1430,1115,625,786,658,2057,1978,1439,382,1638,1878,1947,2031,2044,2048,2056,2039,2038,1633,1727,1800,2008,1887,2053,2048,2048,2048,2057,2057,2057,2050,2032,1802,1547,1050,678,1427,2018,2048,2057,2048,2048,2048,2057,2048,2056,2018,1805,1538,1206,921,445,274,1736,2055,2028,1946,1845,1701,1672,2028,2055,1840,1545,1317,1780,1735,1955,2055,1977,2029,1157,1916,1767,1859,1761,2048,1736,1901,1557,1422,1156,1414,2005,1946,2008,1876,1972,1955,1911,2056,2057,2046,1860,1170,1036,2048,2048,2048,2048,2048,1606,698,2054,2048,2054,2048,1817,519,1394,2048,2049,2048,2048,2057,2048,2042,1981,2048,1580,1942,2048,1743,2057,2048,1617,2029,2052,1578,1253,1670,1817,577,1946,2057,2056,2053,1626,255,114,1017,1980,2056,2057,2048,2057,2048,2052,1908,2048,2048,1988,2003,2056,1958,2048,2033,2054,2056,2031,2048,1844,1985,1672,1928,1434,1861,1219,1620,1666,1666,1290,1264,1868,1989,1764,1929,2048,2048,2057,2042,1604,1123,788,1129,1997,1315,1478,1897,2048,2048,2048,2048,2048,2048,2048,2048,2057,2057,1966,1848,1638,1432,1246,923,1054,2057,2048,2048,2048,2057,1841,423,1965,2043,2056,2018,1908,2005,2047,2048,2048,2048,2048,2048,2052,2035,1841,1496,994,571,2051,2048,2048,2048,1681,356,611,1983,2048,2048,2048,2048,2057,2048,2048,2020,1669,483,397,1204,1850,2053,2048,2048,2048,2048,2048,2048,2048,2048,2048,2034,1967,1814,1785,1742,1593,1448,1267,1249,1229,1125,819,599,546,513,496,434,489,363,480,422,495,539,512,321,294,738,1197,1215,1258,1126,1060,1020,832,742,585,307,162,132,789,1595,1820,2036,2048,2048,2033,2021,2008,1824,1959,1778,2005,1917,1820,1399,2033,2048,2048,2024,2030,2025,2055,2038,2015,2014,1975,2048,1909,1944,2050,2048,2048,1792,1748,2047,1783,1809,2054,1926,1275,1618,1944,2047,2049,1854,1939,1992,1785,1970,1950,2048,2048,2055,1864,2034,2041,1762,1484,1648,1412,1209,534,527,472,332,760,615,947,1616,1432,1437,1389,1268,1391,1591,1754,1775,1812,1917,1966,2022,2037,2054,2056,2048,2053,2048,2055,2057,2046,2006,1964,1999,1979,1929,1781,1701,1710,1666,1699,1556,1477,1444,1446,1444,1372,1280,1207,1187,1212,1180,1090,973,943,964,1298,1533,1496,1463,1451,1452,1515,1521,1555,1503,1525,1563,1569,1683,1639,1558,1574,1552,1539,1719,1668,1842,1720,1733,1817,1893,1921,1827,1973,1968,1933,2044,2039,2048,2048,2057,2048,2051,2019,1974,1806,1654,1300,1033,1851,1856,2048,2056,2054,1775,294,548,2053,2048,2048,1388,2054,1553,1618,2051,1863,1283,2047,2048,2048,2048,1578,2027,2009,1713,1267,1914,2048,2048,2048,2048,2057,2029,1983,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2057,1996,2053,2056,2048,2048,2048,2048,1947,2007,2044,2057,2048,2036,2048,2048,2048,2048,2048,2048,1907,1153,2056,2048,2048,2057,2048,2033,2056,1992,1898,1915,1600,1599,1500,1631,1820,1695,1497,1402,1186,1016,558,998,2048,2057,2048,2056,2017,1765,1406,261,692,1796,2048,2039,1699,1550,1624,1881,1255,290,423,937,514,281,403,389,525,397,348,249,776,844,870,901,558,547,571,447,811,562,555,797,478,619,646,758,960,283,384,640,253,466,885,929,572,515,345,715,942,882,758,787,1062,864,753,1306,1176,1041,704,412,442,267,282,366,220,399,562,772,244,220,254,319,132,240,315,231,217,290,289,393,289,186,109,167,245,116,241,757,688,522,411,517,878,939,567,900,1151,981,842,731,454,291,524,329,365,239,300,533,367,318,551,1014,538,1272,750,934,862,1103,424,468,552,378,369,1851,1706,1049,1083,1375,1406,1418,1153,959,866,892,939,1331,443,1216,873,935,620,870,405,520,716,281,613,450,397,844,824,593,624,592,446,542,1118,1134,993,1050,1045,1143,970,1031,1145,1607,1209,1122,641,1340,877,1489,974,1239,644,1397,773,947,941,1007,1061,774,925,633,348,370,343,471,203,277,89,239,326,523,517,582,409,576,606,739,839,941,860,540,1208,1405,1092,1306,1223,1127,783,1197,672,432,517,1003,1376,601,919,544,347,521,461,489,936,1052,1321,364,542,564,269,710,573,421,580,364,579,255,480,365,530,366,501,576,607,795,240,1158,565,619,541,427,507,518,474,183,563,169,436,452,490,615,966,893,1045,758,547,583,633,110,315,485,411,506,303,487,303,547,317,699,398,422,404,640,215,332,301,321,271,284,183,218,238,250,216,106,114,204,110,116,120,110,116,216,279,510,269,171,713,826,799,724,797,734,308,698,443,611,247,1397,1219,1220,1118,1096,1196,1512,1704,1627,1235,1173,1082,911,873,1379,1628,1646,1308,1460,1354,1156,904,469,614,769,325,614,571,742,711,445,424,264,524,361,367,343,630,198,356,415,498,396,317,240,254,68,276,122,491,482,1042,1117,725,316,420,454,489,753,428,540,463,250,396,599,944,970,654,638,533,406,757,341,519,380,668,550,519,658,747,489,364,414,351,368,371,241,42,41,42,211,213,234,236,181,218,157,168,136,411,291,287,436,213,63,666,982,1385,1157,1002,1270,932,1311,728,311,390,1153,919,815,842,1896,1467,1443,1467,1609,1371,1572,1414,1462,1473,1544,1393,1494,1428,1614,1510,1492,1391,1504,1427,1347,1347,1500,1505,1595,1480,1514,1636,1577,1650,1650,1704,1711,1614,1098,937,1086,1042,1202,1843,1705,1761,1759,1656,1723,1720,1718,1703,1748,1702,1727,1752,1760,1766,1715,1715,1523,1694,1640,1690,1703,1696,1721,1687,1727,1650,1649,1651,1662,1603,1562,1661,1810,1657,1700,1694,1582,1662,1649,1725,1726,1790,1854,1810,1802,1818,1796,1733,1744,1661,1753,1810,1853,1776,1672,1688,1844,1724,1743,1776,1740,1715,1684,1631,1652,1566,1824,1624,1648,1597,1581,1662,1635,1647,1726,1688,1702,1675,1727,1703,1735,1713,1638,1724,1751,1690,1704,1677,1638,1678,1676,1626,1665,1606,1605,1527,1529,1516,1493,1813,1086,1117,870,751,668,1309,1401,1480,1393,1168,1086,1196,1121,1304,1419,1283,1303,1274,1258,1193,1032,892,733,898,885,779,617,776,1001,1156,1035,1191,1416,1664,1431,1503,1337,1556,1441,1445,1549,1461,1475,1327,1314,1238,910,219,215,212,243,216,862,1624,1624,1306,1391,1582,1344,981,1334,1255,734,1372,1436,1060,1557,1686,1236,1645,1423,1583,1611,1526,1382,1574,1590,1302,1711,1529,1518,1596,1074,1611,1344,1516,1375,1644,1676,1668,1683,1418,1607,1771,1162,1633,1344,1683,1338,1353,1607,1589,1662,1519,1326,1595,1347,1641,1652,1556,1585,1580,1204,1593,1652,1623,1599,1505,1327,1577,1696,1240,1623,1025,1616,1372,1550,1149,1639,1569,1524,1681,1487,1353,1549,1184,1410,1160,1385,1442,1648,1078,1470,1520,1275,1443,1452,1472,1623,1554,1650,1662,1412,1312,1592,1598,1516,1672,1160,1697,1479,1567,1438,1427,1666,1576,1598,1861,1201,1789,1572,1777,1689,1410,1484,1698,1293,1597,1749,1277,1724,1542,1305,1607,1729,1530,1552,1544,1513,1745,1626,1611,1396,1688,1421,1649,1641,1457,1623,1539,1833,1866,1918,1927,2053,2024,2045,2044,2023,2020,2032,2035,2024,2030,2051,2043,2050,2048,1996,2030,1966,2013,2017,2028,2050,2053,2053,2044,2043,2024,2011,2011,2046,2048,2020,2038,2054,2027,2018,2014,1924,1993,2008,2034,2047,2040,2028,2025,2050,2032,1989,1966,1993,2011,2007,1990,2048,2027,2023,2054,2035,1993,1955,2013,2007,1983,2012,2025,2020,2019,2050,2027,1996,1976,2005,1991,1977,2020,2028,2047,2049,2046,2038,1952,2042,2022,2016,2013,2034,2051,2047,2036,2051,2047,2046,2036,2038,2009,2037,1976,2039,2005,1921,1999,1970,1989,1968,1992,1988,1987,1981,1994,1960,1980,1976,1998,1974,1927,1986,1990,1961,1967,1996,1967,1987,1994,1974,1954,2000,1990,1998,1968,1939,2006,1969,1997,1953,1950,1991,2014,1997,2011,2003,1955,2010,1981,1995,1911,1967,1959,2007,1987,1996,1970,1937,1991,1990,1986,1965,1999,2009,1982,1999,1999,2004,2019,1991,1980,2004,1986,1930,2026,1998,1957,1914,2008,2025,1985,1956,2011,2031,2011,1975,2019,2020,1959,2033,1994,2010,2026,2035,2006,2022,2018,2009,1991,1983,1974,2008,2024,1987,1961,1879,1949,2052,2050,2041,1953,1923,1925,1890,1812,1854,1893,1945,1809,1867,1805,1991,2003,1989,1881,1912,1916,1888,1822,1854,1990,1935,1954,1950,1948,1871,1948,1881,1933,1935,1962,1935,1981,1809,2024,1778,1939,1821,1949,1927,1951,1943,1998,1970,1920,1854,1887,1889,1940,1930,1921,1927,1943,1983,1954,2044,1698,1990,1709,2005,1962,1914,1954,1860,1973,1914,2006,1845,1976,1948,2039,1721,1740,1853,1784,1827,1885,1862,1863,1781,1921,1834,1936,1897,1913,1936,1930,1842,1958,1892,1913,1882,1960,1854,1928,1936,1969,1921,1910,1902,1919,1889,1841,1907,1808,1889,1922,1830,1869,1644,1731,1486,1639,1781,1813,1805,1937,1948,1987,1963,2008,1989,1892,1988,1995,1942,1971,1998,1892,1429,1416,1392,1440,1447,1489,1574,1444,1580,1415,1492,1641,1773,1675,1521,1821,2003,2001,1899,2008,1951,1867,1923,1893,1988,2002,1975,1929,1964,1968,1832,1871,1934,2016,2006,1933,2002,1913,1992,1832,1912,1960,1971,2024,1901,2014,1931,1972,1842,1865,2002,1929,2031,1901,1993,1834,1956,1880,1870,1984,1939,2021,1892,1980,1928,1933,1878,1873,2003,1996,2013,1932,1979,1913,1883,1909,1916,1950,1996,1901,1971,1897,1960,1944,1923,1902,1758,1724,1682,1638,1674,1696,1726,1714,1742,1658,1665,1761,1719,1735,1713,1653,1634,1698,1695,1710,1702,1683,1686,1616,1664,1723,1744,1740,1740,1613,1600,1613,1748,1794,1604,1657,1625,1602,1694,1759,1716,1691,1686,1621,1628,1748,1781,1787,1626,1636,1625,1786,1862,1810,1815,1733,1766,1759,1841,1868,1898,1796,1799,1842,1755,1772,1749,1688,1669,1660,1778,1666,1586,1652,1780,1698,1678,1769,1726,1632,1738,1756,1594,1589,1846,1578,1678,1752,1801,1706,1669,1784,1835,1726,1683,1749,1744,1770,1702,1774,1718,1978,1937,1963,2009,1990,1944,1912,1946,1948,2000,1977,1977,2009,1977,1965,1994,1991,1985,1966,1980,1959,2009,1998,1993,1990,1959,2005,1945,1967,1993,1981,2004,1995,1963,1977,1967,1982,1962,1968,1956,1982,1969,1977,1975,1974,1992,1955,1967,1958,1976,1963,1981,1951,1977,1951,1951,1964,1953,1967,1958,1952,1954,1948,1954,1948,1953,1948,1956,1946,1957,1946,1957,1942,1957,1942,1956,1893,1907,1904,1914,1892,1929,1896,1909,1929,1902,1906,1919,1911,1909,1937,1887,1912,1890,1864,1952,1843,1849,1960,1853,1825,1959,1843,1810,1974,1831,1821,1971,1830,1838,1969,1820,1837,1962,1845,1824,1964,1875,1821,1896,1807,1843,1887,1809,1821,1883,1790,1833,1894,1773,1844,1890,1748,1872,1900,1758,1881,1889,1778,1883,1857,1812,1905,1857,1840,1909,1816,1878,1904,1807,1907,1847,1864,1915,1814,1881,1914,1808,1897,1846,1881,1913,1845,1910,1843,1871,1910,1851,1875,1904,1853,1870,1904,1846,1872,1911,1844,1868,1911,1854,1867,1911,1852,1866,1914,1852,1873,1923,1879,1855,1933,1858,1860,1928,1863,1868,1922,1862,1871,1908,1856,1856,1924,1850,1833,1930,1855,1849,1922,1864,1854,1910,1925,1906,1913,1919,1925,1919,1912,1921,1933,1915,1909,1913,1903,1924,1919,1915,1911,1981,1998,1984,1978,1993,1994,1985,1971,1996,1977,2017,1901,1979,1911,1893,1889,1919,1923,1907,1860,1925,1882,1928,1944,1928,1980,1947,1962,1970,1968,1954,1966,1962,1939,1986,1923,1987,1932,1979,1883,1992,1835,1960,1870,1910,1890,1877,1918,1852,1968,1826,1989,1841,1940,1879,1901,1888,1851,1885,1816,1932,1787,1900,1870,1836,1866,1806,1911,1801,1936,1816,1875,1854,1843,1876,2002,2040,2023,2020,2021,2006,2014,2016,2013,2047,2014,2037,2043,2042,2020,2012,1883,2006,2005,2026,2037,2057,2033,2027,2032,2031,2006,2015,2025,2027,2040,2053,2033,2040,2048,2025,1969,1843,2019,2006,2031,2043,2033,2018,2012,1975,2001,1996,1968,1979,2015,2041,2012,2015,2018,2000,1975,2004,1998,1969,1977,2030,2037,2009,2037,2019,1995,1984,2018,1997,1952,1978,2027,2036,2018,2050,2045,2027,2035,2011,2014,1996,1982,2011,2039,2048,2050,2052,2053,2048,2038,2006,2021,2039,2023,2052,2049,2023,2022,1983,1989,1995,2032,1957,1997,2008,1947,1988,1992,1951,1956,1979,1999,1988,1973,1993,2019,1943,1918,2018,1919,1815,1852,2008,2001,1962,2015,1982,1978,1995,1949,2007,1986,1913,1910,1888,1930,1999,1939,1884,1941,1989,1949,1924,1839,1902,1999,1978,1930,1839,1916,1973,1938,1873,1847,1915,1822,1890,1926,1938,1934,1978,1839,1886,1843,1880,1968,1912,1978,1959,1895,1880,1866,1898,1966,1969,1952,1909,1842,1847,1843,1922,1998,1924,1870,1834,1790,1924,1948,1903,1894,1898,1855,1873,1906,1876,1845,1888,1899,1830,1880,1815,1791,2009,1938,1930,1938,1904,1836,1847,1874,1856,1759,1919,1979,1920,1919,1952,1847,1878,1947,1966,1982,2018,2016,1969,1761,1986,1988,2015,1968,2012,1929,2041,2018,1971,1990,1964,2007,2008,2006,1972,1961,2009,2008,1986,1976,1930,2008,1985,2035,1994,1979,1973,1981,1958,2017,1976,2001,2036,2023,1978,2011,1936,2035,1996,1992,2016,1980,2015,2035,1878,1790,1804,1877,1992,2004,1968,2010,1988,1998,1983,1913,1970,1950,1911,1918,1988,1968,1916,1991,1988,2022,1975,2003,1980,1918,2006,1981,1981,1854,1948,1937,1958,1917,1843,1985,1945,1918,1885,1965,1978,2008,1988,2002,2008,1985,2025,1939,1931,1938,1957,1704,1927,1957,1928,1951,1921,1950,2005,2023,2026,1974,1982,1975,2016,1989,1991,1967,1982,1939,1969,1918,1973,1942,1981,1969,1970,2014,2020,1987,1983,1989,1973,2005,1967,1945,1991,1963,1957,1981,1929,2001,1964,1986,1965,1937,1983,2038,1986,1954,1954,1985,2005,1975,1976,2011,1971,2002,2016,1940,2027,1977,1979,2018,1904,2047,1982,1930,1995,1949,1977,2003,1987,1957,1881,1965,1989,1931,1962,1992,1958,1909,1958,1993,1991,2002,1959,1954,1982,1950,1945,1935,1938,1954,1851,1859,1963,1966,1910,1887,1947,1900,1973,1947,1908,1972,1997,1925,1972,2014,1903,2003,1896,2009,1976,1950,2002,2022,2001,2051,2043,1871,2015,2005,1951,2025,2034,2047,2044,2045,1954,2016,2023,1969,2023,2034,2021,2029,2034,1986,2047,2009,2003,2031,2038,2039,2046,2040,1949,2006,2022,1975,2044,2027,2053,2050,2044,1976,2016,2018,1975,2044,2030,2047,2035,2039,1957,1996,1955,2015,1810,1988,1967,1985,1994,1997,2035,2016,1973,1962,1999,2005,1842,2004,1917,1973,1966,2008,2010,1888,2010,1918,1968,1981,2011,1650,1867,1816,1709,1617,1667,1519,1727,1411,1532,1499,1482,1595,1244,1487,1450,1244,1402,1281,1329,1321,1162,1496,1125,1408,1210,851,1629,1326,1253,1190,1240,1563,845,1279,1425,1133,1592,1086,1357,1238,1372,1471,1142,1485,1514,1238,1584,1411,1519,1566,1408,1620,1280,1496,1541,1210,1598,1193,1398,1253,1381,1425,1298,1407,1109,980,1647,1400,1162,1222,1222,1602,868,1249,1486,1230,1553,1073,1318,1147,1607,1205,1396,1445,1465,1314,1565,1546,1441,1597,1385,1472,1350,1518,1469,1232,1604,1228,1346,1145,1603,1211,1315,1398,1095,1104,1519,1460,1112,1255,1331,1382,900,1261,1450,1162,1544,1119,1397,1162,1647,1230,1437,1435,1411,1334,1508,1569,1440,1572,1492,1267,1457,1447,1311,1166,1626,1297,1397,1164,1610,1132,1425,1314,974,1311,1404,1349,1114,1308,1590,941,1089,1368,1230,1394,1153,1346,1380,1155,1541,1131,1470,1507,1262,1621,1436,1522,1540,1386,1640,1254,1488,1483,1339,1520,1286,1335,1372,1132,1579,1204,1494,1195,861,1619,1382,1251,1200,1324,1626,807,1245,1449,1235,1622,1078,1322,1199,1471,1355,1341,1463,1489,1214,1596,1491,1440,1584,1359,1551,1316,1519,1565,1213,1637,1164,1436,1212,1539,1217,1355,1319,1044,1071,1517,1468,1132,1249,1405,1310,956,1312,1409,1179,1589,1127,1365,1171,1602,1233,1386,1499,1475,1248,1534,1594,1515,1585,1452,1414,1438,1551,1477,1077,1654,1171,1331,1162,1558,1196,1257,1405,1100,906,1583,1480,1128,1246,1417,1286,944,1293,1325,1102,1540,1074,1390,1207,1646,1103,1289,1490,1493,1287,1615,1600,1506,1558,1521,1474,1395,1562,1471,1099,1661,1258,1360,1230,1405,1355,1195,1420,1192,855,1584,1395,1248,1203,1239,1591,809,1270,1438,1139,1577,1050,1313,1344,1429,1459,1174,1549,1572,1394,1624,1436,1493,1528,1456,1716,1236,1509,1507,1293,1412,1453,1302,1384,1121,1630,1187,1490,1252,830,1664,1265,1310,1180,1208,1618,911,1176,1406,1305,1470,1261,1303,1271,1238,1663,1260,1478,1492,1250,1667,1462,1561,1567,1435,1708,1271,1552,1526,1275,1460,1424,1379,1383,1135,1628,1190,1518,1284,872,1655,1257,1334,1155,1249,1534,1070,1062,1385,1434,1281,1511,1174,1443,1246,1655,1216,1506,1542,1351,1514,1552,1698,1530,1606,1462,1562,1207,1215,1278,1410,1475,1726,1450,1363,1210,1445,1519,1442,1626,1659,1403,1281,1331,1522,1392,1586,1655,1476,1409,1232,1466,1453,1352,1522,1771,1539,1513,1246,1342,1403,1214,1403,1593,1453,1056,1311,1253,1710,1446,1231,1481,1635,1094,1718,1686,1840,1869,1941,1622,1939,1818,1749,1790,1891,1832,1813,1889,1375,1727,1726,1755,1697,1701,1663,1519,1024,1129,1959,1975,1862,1805,1213,1039,1805,1576,1762,1716,1984,1665,1885,1865,1857,1769,1710,1904,1900,1887,1655,1793,1837,1432,1964,1946,1878,2004,1966,1949,1767,1863,1679,1839,1816,1862,1895,1831,1659,1696,1595,1531,1844,1626,1609,1691,1547,1479,1594,1725,2030,2015,1984,1868,1997,2026,2001,1941,2008,2027,2020,1947,1993,2039,1995,1961,1933,1997,1886,1961,1933,1977,1892,2019,1999,2008,1998,2025,2030,1999,1969,1881,1949,2055,2051,2046,1994,1947,1889,1716,1986,1870,1938,1941,1888,1970,1855,1920,1872,1902,1906,1859,1918,1962,1886,1937,1915,1889,1883,1337,1393,1923,1690,1575,1530,1295,1440,1814,1608,1611,1784,1604,1559,1589,1580,1555,1531,1497,1702,1621,1288,1206,1653,1683,1304,1206,2038,1850,1797,1756,1790,1734,1738,1848,1765,1683,1672,1702,1690,1574,1819,1763,1280,1538,1583,1534,1497,1264,1297,1784,1471,1311,1169,1304,1831,1564,1586,1896,2043,1965,1987,1986,1920,1848,1642,1921,1925,1851,1633,1831,1967,1921,1861,1893,1834,1940,1904,1610,1947,1585,1435,1635,1555,1446,1394,1745,1444,1639,1492,1648,1587,1680,1589,1811,1569,1636,1692,1689,1517,1435,1537,1607,1820,1266,1246,1585,1502,1831,1824,1772,1537,1478,1514,1795,1545,1493,1655,1549,1740,1695,1461,1602,1687,1551,1505,1425,1512,1628,1628,1559,1467,1582,1615,1589,1596,1089,1582,1500,1426,1281,1339,1291,1263,1409,1411,1391,1140,1410,1430,1259,1471,1335,1266,1590,1592,1489,1806,1673,1445,1911,1850,1891,1808,1545,1908,1914,1626,1770,1593,1669,1246,1829,1955,1484,1704,1700,1690,1709,1604,1422,1646,1427,1628,1542,1504,1605,1496,1557,1410,1593,1485,1603,1443,1602,1430,1799,1863,1655,1906,1822,1868,1535,1509,1503,1565,1721,1990,1888,1927,1837,1899,1904,1879,1294,498,549,501,682,708,623,436,725,1617,1984,1978,1970,1924,1977,1957,1954,1932,1746,1656,1630,1663,1775,1585,1768,1532,1565,1601,1612,1708,1471,1506,1456,1398,1499,1355,1572,1531,1323,1132,1352,1411,1507,1484,1426,1330,1636,1431,1603,1432,1443,1387,1411,1446,1408,1362,1415,1826,1756,1805,1875,1874,1895,1807,1732,1840,1680,1697,1770,1799,1842,1740,1737,1693,1273,827,836,859,1301,1696,1749,1615,1652,1697,1575,1502,1650,1764,1667,1645,1702,1660,1810,1789,1873,1641,1788,1549,1600,1785,1727,1653,1476,1924,1534,1860,1813,1864,1571,1846,1809,1892,1062,1073,964,1069,1085,1066,1023,1070,1586,1566,1575,1502,1588,1565,1556,1530,1672,1448,1484,1674,1621,1387,1043,1030,1057,1293,1415,1447,1768,1719,1500,1135,1356,1524,1218,1118,1547,1624,1359,1589,1614,1528,1567,1624,1589,1281,1113,763,1072,578,977,703,811,1494,1426,1001,506,913,535,781,526,547,947,687,880,498,849,625,735,639,519,912,661,907,512,784,731,717,768,478,816,622,826,286,359,329,202,604,274,649,195,514,229,189,472,158,509,32,512,193,391,283,246,1335,1422,1484,1174,1232,1207,1395,965,988,990,988,962,952,989,969,1482,1391,1376,1420,1489,1502,1377,1353,1542,1473,1498,1495,1600,1602,1514,1530,1494,1596,1411,1428,1385,1422,1430,1419,1440,1472,1454,1375,1394,1393,1221,922,936,941,1102,955,934,925,1047,923,918,953,917,1436,1396,1430,1390,1240,921,925,938,1262,1606,1600,1594,1617,1471,1565,1571,1602,1649,1352,1347,1318,1269,1301,1303,1314,1483,1543,1496,1430,1428,1115,1347,1253,1548,1632,1707,1590,1505,1564,1837,1750,1790,1484,1286,1222,1475,1419,1537,1195,1165,1490,1446,1630,1419,1493,1426,1431,1743,1681,1634,1680,1521,1669,1629,1662,1770,1557,1708,1646,1643,1569,1650,1657,1519,1676,1661,1617,1659,1529,1619,1640,1662,1621,1608,1701,1690,1669,1558,1679,1664,1571,1774,1637,1640,1638,1698,1822,1614,1627,1622,1833,1693,1669,1686,1686,1784,1640,1693,1608,1374,950,964,952,1240,1506,1526,1530,1551,1400,1310,1328,1349,1268,1178,1232,1199,1430,1209,900,991,1266,1214,1184,1086,1052,1286,1004,928,883,1586,1500,1515,1535,1542,1503,1509,1549,1590,1537,1404,1373,1399,1355,1383,1357,1386,1674,1546,1525,1552,1583,1538,1521,1539,1539,1772,1605,1590,1647,1634,1595,1596,1662,1781,1459,1434,1400,1376,1470,1444,1410,1427,1857,1753,1722,1681,1751,1737,1700,1697,1888,1750,1715,1691,1663,1727,1680,1682,1672,1535,1024,1231,1053,1121,1094,1148,1210,1164,1070,950,884,680,680,671,1377,1683,1725,1722,1673,1757,1711,1753,1669,1884,1755,1694,1630,1716,1659,1753,1715,1855,1797,1762,1788,1717,1804,1753,1805,1728,1874,1714,1716,1621,1673,1671,1706,1668,1773,1404,1510,1402,1497,1227,1002,1013,1034,1730,1827,1814,1817,1664,1869,1777,1837,1829,1515,1176,1223,1452,1626,1027,1045,1114,1767,1647,1618,1597,1553,1676,1616,1583,1626,1652,1469,1424,1420,1393,1480,1427,1411,1471,1717,1463,1643,1506,1442,1457,1464,1426,1681,1622,1604,1597,1559,1614,1629,1598,1762,1520,1457,1456,1468,1442,1453,1423,1487,1647,1824,1830,1824,1683,1851,1785,1833,1846,1680,1645,1618,1687,1528,1654,1591,1643,1669,1462,1456,1442,1382,1563,1477,1464,1412,1874,1815,1852,1872,1682,1855,1808,1883,1698,1677,1644,1602,1611,1656,1637,1608,1691,1590,1454,1437,1459,1401,1491,1432,1466,1557,1838,1780,1892,1829,1760,1823,1827,1871,1453,801,1793,783,692,1191,669,845,993,686,1270,1296,641,727,953,1352,999,1277,1390,1247,655,1175,1324,1112,1361,1111,1710,1118,1208,983,1438,1648,1555,1739,1656,1765,1536,1663,1547,1622,1102,792,1443,1512,1556,1023,1016,1007,982,1372,1108,1047,1104,1324,1722,2031,2032,2020,2006,2016,2005,1989,2013,2027,2034,2000,1998,2010,1995,2023,1961,2025,2022,2026,2007,2001,2009,2009,1955,2029,2034,2032,1996,2006,2014,2012,2009,1948,2040,2040,1902,1917,1890,1907,1935,1837,1849,1889,1899,1893,1892,1835,1877,1817,1880,1896,1787,1661,1677,1665,1670,1658,1647,1606,1773,1662,1669,1665,1643,1643,1657,1641,1581,1676,1426,1433,1445,1435,1444,1391,1373,1514,1577,1470,1409,1604,1317,1596,1449,1691,1377,1476,1492,1656,1451,1488,1558,1596,1462,1284,1535,1378,1980,1754,1466,1652,1638,1540,1532,1555,1714,1542,1559,1621,1650,1767,1659,1589,1544,1665,1550,1579,1553,1537,1536,1584,1524,1495,1651,1460,1692,1580,1563,1595,1726,1599,1654,1748,1773,1495,1597,1935,1895,1707,1696,1854,1963,1926,1941,1973,1934,1950,1933,1928,1808,1848,1863,1929,1926,1852,1856,1833,1806,1782,1770,1758,1973,1966,1962,1974,1902,1919,1884,1902,1948,1969,1877,1906,1847,1813,1817,1840,1774,1962,1991,1983,1965,1952,1939,1928,1915,1942,1965,1829,1822,1752,1789,1761,1785,1742,1853,1836,1864,1764,1818,1837,1805,1818,1781,1777,1452,1446,1468,1402,1444,1409,1427,1463,1977,1950,1924,2012,1948,1913,1901,1913,1903,1881,1910,2006,1938,1961,1916,1893,1883,1932,1883,1930,1813,1491,1535,1600,1600,1589,1596,1507,1711,1833,1816,1784,1729,1787,1749,1743,1720,1697,1332,1299,1296,1386,1296,1378,1365,1419,1570,1477,1480,1541,1587,1480,1479,1478,1626,1688,1488,1660,1611,1632,1516,1609,1378,1328,1334,1199,1319,1128,1260,1597,1894,1865,1846,1905,1902,1903,1850,1888,1969,1917,1877,1882,1883,1873,1889,1872,1912,1480,1424,1401,1374,1453,1488,1450,1480,1720,1635,1704,1733,1722,1597,1596,1553,1573,1643,1553,1578,1614,1679,1744,1707,1650,1748,1453,1454,1483,1470,1385,1373,1412,1438,1670,1454,1497,1555,951,1551,1491,1478,1636,1499,1493,1504,1495,1439,1492,1512,1521,1940,1972,1933,1822,1414,1415,1425,1078,1398,1412,1401,1522,1285,1159,1129,1148,834,1096,1199,1150,1472,1415,1477,1761,1893,1882,1909,1886,1895,1897,1887,1775,1583,1555,1414,1524,1532,858,896,803,837,913,744,834,741,1006,930,905,812,959,960,1028,950,1323,1264,1334,1223,1129,271,531,516,520,219,545,403,1293,1102,776,864,918,1353,726,1339,1010,197,221,472,352,1126,1288,1579,1539,1908,1737,1797,1835,1804,1786,1765,1750,1799,1622,1654,1610,1615,1569,1655,1637,1531,1535,1333,1337,1314,1527,1664,1689,1632,1654,1684,1683,1683,1672,1667,1661,1641,1247,1520,1800,1870,1793,1766,1841,1845,1827,1752,1697,1456,1462,1442,1558,1872,1845,1875,1874,1856,1880,1836,1871,1826,1269,1756,1458,1142,1182,1076,980,2049,2013,1996,1928,1939,1964,1921,1901,1883,1951,1956,1961,1909,1931,1906,1921,1985,1873,1665,1751,1779,1843,1774,1730,1601,1759,2051,2050,2053,2044,2046,2036,2054,2044,2048,2048,2046,2041,2048,2037,2051,2039,2054,1903,1903,1877,1817,1824,1850,1820,1859,1956,1900,1895,1848,1857,1826,1877,1822,1884,1459,1568,798,772,771,742,784,371,841,874,838,463,509,798,910,792,393,675,762,873,663,405,755,838,875,506,543,1193,1034,1237,593,497,1234,1052,1130,527,635,1178,1087,1073,382,856,1149,1027,942,1175,1225,1562,1286,1674,1644,1002,1157,1151,1123,1180,1117,1079,1119,1143,1142,1157,1187,1121,1083,1027,1111,1642,1087,1101,1187,1096,1029,1102,1040,1059,1003,870,1010,1045,934,891,745,873,1410,440,528,504,533,561,491,558,556,470,487,480,521,525,515,551,543,1299,1463,1498,1508,1550,1489,1512,1514,1463,1234,967,974,1266,1712,1419,1383,1338,1320,1453,1711,1632,1638,1667,1606,1615,1659,1653,1668,1728,1470,1473,1526,1483,1486,1503,1479,1631,1022,1121,1238,1323,1338,1303,1323,1102,1351,1421,1429,1452,1509,1499,1553,1522,1616,1522,957,1130,1160,1145,1188,1095,1119,1078,1154,1163,1166,1181,1130,1078,1064,1095,1618,1103,1092,1195,1088,1067,1080,1048,1034,1020,878,1003,1038,872,873,762,895,1407,439,537,504,534,578,485,572,571,446,493,469,523,506,526,570,518,1521,1788,1779,1807,1789,1797,1744,1876,1392,1416,1363,1380,1639,1317,1197,1214,1370,1564,1320,1274,1507,1426,1022,1073,974,1352,1658,1599,1702,1626,1399,1183,1140,1122,1489,1179,1754,1679,1612,1692,1690,1660,1609,1649,1729,1245,1249,1569,1368,1912,1634,2018,1742,1751,1607,1711,1716,1647,1739,1747,1755,1611,1476,1552,1546,1552,1496,1602,1427,1624,1622,1590,1585,1595,1573,1559,1606,1736,1486,1737,1828,1569,1348,1731,1790,1638,1749,1058,1043,1124,1170,1128,1170,1035,1138,1092,1150,1142,1188,1156,1077,1052,1106,1343,906,1261,1128,974,499,1164,1252,1226,948,853,1157,1123,1010,408,1222,1197,1155,981,708,1129,1147,1096,426,1162,1179,1142,920,815,1134,1235,1147,420,1080,1190,1180,908,965,1158,1237,1219,363,1016,1261,1106,890,1608,1098,1097,1174,1076,1068,1082,1051,1031,1023,871,1017,1035,884,884,770,899,1147,1143,1196,1147,569,837,1216,1117,1008,1184,1176,1146,1221,1164,1301,1128,1234,1159,1227,1190,1115,1229,1184,1309,1117,1133,1181,1191,1254,1201,1077,982,1049,1335,1194,1025,1019,1130,1309,1094,1014,1005,1132,1352,1086,987,1060,1304,1032,430,571,1106,1471,1759,1848,1860,1853,1643,1396,719,494,509,520,592,588,1490,1070,1230,1494,1235,1035,1320,1519,1089,1221,1490,1250,1018,1296,1871,1745,1742,1813,1783,1807,1822,1826,1676,1908,1712,1847,1782,1760,1879,1770,1830,1797,1798,1749,1815,1892,1707,1740,1888,1706,1897,1767,1753,1907,1763,1721,1793,1901,1737,1808,1851,1689,1912,1675,1838,1779,1797,1748,1788,1825,1778,1827,1836,1750,1900,1729,1745,1900,1711,1845,1783,1756,1980,1864,1733,1714,1930,1694,1831,1889,1694,1884,1743,1837,1750,1854,1752,1791,1858,1769,1751,1623,1124,1247,1172,1264,1200,1211,1190,1202,390,819,907,843,440,550,808,876,796,390,689,802,867,632,408,743,835,898,468,1614,981,1131,1139,1127,1188,1109,1088,1124,1142,1134,1141,1153,1144,1128,1034,1089,1536,1448,1666,1086,1087,1153,1137,1080,1070,1112,1031,1013,864,999,1080,979,847,780,864,1343,1431,1403,1499,428,525,507,530,582,483,571,574,447,507,476,510,513,527,569,505,1448,1644,1643,1599,1671,1686,1612,1664,1669,1702,1782,1660,1609,1599,1643,1643,1326,356,840,945,417,312,759,782,2010,2032,2009,2022,2021,1981,2001,1951,2026,2016,2027,2006,2002,2021,2011,1986,2010,1453,1430,1570,1600,1288,1022,1431,1127,1121,1120,1116,1119,1124,1049,98,438,2000,2036,1860,1880,1911,1866,1833,1876,1899,1865,1948,1926,1939,1955,1887,1912,1914,1942,1882,1729,2014,1925,1900,1891,1928,1895,1763,1795,1791,1839,1900,1893,1891,1836,1897,1888,1879,1868,1966,1839,1851,1841,1892,1902,1776,1620,120,609,539,667,643,564,609,726,746,672,729,850,911,635,859,382,935,462,408,1405,730,1056,268,338,371,558,1696,1461,1563,1637,1587,1566,1479,1492,1595,1634,1616,1619,1495,1571,1558,1557,1612,1797,1588,1505,1600,1680,1905,1786,1749,1814,1868,1839,1857,1863,1828,1313,1283,1339,1383,1322,1332,1345,1247,1655,1449,1447,1452,1487,1469,1450,1416,1603,1477,1452,1446,1468,1495,1440,1446,1426,1628,1443,1439,1430,1519,1459,1433,1435,1593,1468,1421,1410,1446,1507,1448,1432,1408,1616,1413,1371,1435,1484,1465,1419,1424,1506,1493,1381,1344,1474,1462,1436,1417,1423,1615,1401,1387,1430,1448,1486,1434,1398,1446,1613,1368,1436,1495,1480,1480,1448,1418,1635,1466,1416,1458,1477,1468,1468,1441,1387,1579,1358,1307,1344,1347,1348,1308,1258,1550,1364,1318,1316,1399,1350,1385,1346,1272,1569,1315,1276,1358,1359,1327,1280,1326,1416,1497,1446,1444,1480,1463,1484,1453,1390,1650,1422,1380,1467,1478,1496,1434,1411,1466,1570,1364,1390,1446,1435,1442,1397,1392,1624,1420,1379,1419,1469,1460,1424,1405,1399,1609,1367,1412,1409,1504,1464,1412,1420,1620,1467,1425,1409,1453,1501,1458,1438,1407,1774,1700,1842,1703,1917,1605,1743,1801,1820,1823,1771,1687,1662,1803,1763,1718,1772,1857,1791,1891,1834,1893,1842,1901,1850,1845,1925,1823,1758,1814,1823,1794,1766,1809,1955,1785,1796,1703,1776,1733,1739,1701,1755,1899,1815,1781,1741,1782,1761,1737,1754,1926,1877,1859,1831,1819,1792,1868,1796,1804,1912,1720,1783,1730,1744,1724,1761,1761,1880,1715,1910,1848,1830,1839,1782,1769,1794,1785,1854,1681,1752,1701,1558,1755,1730,1619,1761,1859,1706,1776,1680,1620,1670,1640,1819,1927,1633,1632,1649,1636,1695,1672,1699,1627,1762,1697,1615,1654,1716,1699,1705,1669,1790,1784,1788,1755,1795,1836,1769,1822,1769,1847,1802,1706,1736,1776,1806,1767,1775,1796,1805,1810,1887,1866,1852,1946,1944,1797,1815,1674,1665,1758,1759,1733,1805,1709,1740,1808,1661,1798,1803,1796,1827,1859,1704,1796,1451,1519,1514,1530,1504,1497,1491,1512,2021,1973,1932,1972,2015,1936,1984,1971,1909,1952,1995,2022,1967,1922,1983,1986,2012,1725,745,38,40,38,318,40,38,40,327,1912,1780,1835,1841,1833,1825,1785,1813,1839,1447,1467,1446,1457,1438,1454,1424,1485,1890,1832,1811,1760,1784,1766,1785,1796,1437,884,40,38,40,40,313,40,38,40,878,1077,1677,1720,1722,1756,1760,1731,1711,1750,1756,1818,1102,1211,1449,1406,669,1563,1494,1343,898,1780,1679,1640,782,38,40,38,318,40,38,40,321,1350,1468,1157,1218,1661,1658,1617,1676,1680,1679,1652,1607,1640,215,38,40,40,1047,606,80,916,1851,1964,1813,1680,1618,1633,1664,1686,1721,1746,1697,1736,1744,1730,1741,1730,1707,1679,1671,1165,972,719,751,1814,1769,1732,1712,1732,1788,1686,1740,1882,1838,1785,1880,1826,1885,1821,1889,1807,1849,1692,1673,1812,1630,1808,1745,1700,1870,1777,1955,1836,1922,1863,1887,1916,1836,2034,1285,1180,1144,1013,1123,1425,1352,1378,1354,1401,1225,1150,1101,1152,1150,1251,1569,802,815,914,1011,1295,1717,1299,736,652,786,1322,1606,1740,1667,877,1248,1522,1500,1224,1000,784,970,810,513,889,1185,1374,1216,1165,1362,1376,1406,1317,1359,1839,1898,1865,1912,1845,1849,1903,1888,1831,1899,1930,1934,1878,1889,1876,1940,1413,936,912,940,1392,1947,1859,1795,1991,1170,1160,1225,1193,1933,2024,1964,2033,1965,1904,1892,1915,1896,2035,2046,2040,2034,1821,1811,1781,1847,1785,1825,1715,1821,1833,1949,1939,1932,1934,1666,1274,1301,1625,1430,1210,1260,1270,1369,1182,1263,1220,1495,1605,1205,1218,1607,1739,866,731,1425,1420,961,755,1059,1444,1349,740,907,1772,1674,1337,1395,1654,1865,1732,1786,1792,1829,1755,1852,1852,1827,1660,1677,1701,1667,1824,1772,1816,1760,1659,1425,1407,1440,1593,1443,1390,1459,1570,1523,1466,1449,1547,1625,1525,1422,1517,1859,1977,1968,1929,1994,1960,1987,1976,1991,1828,1758,1757,1744,1820,1590,1557,1580,1830,1915,1830,1876,1939,1760,1844,1769,1842,1984,1870,1838,1907,1908,1800,1802,1804,1863,1579,1588,1587,1640,1192,1224,1557,1451,1162,1266,1181,1583,1287,1196,1286,1705,1751,1790,1761,1774,1916,1795,1785,1778,1858,1829,1819,1822,1639,819,866,861,775,1204,1179,1146,1180,1282,1193,1182,1191,1337,1362,1412,1318,1478,1831,1849,1862,1844,1873,1812,1858,1842,1948,1889,1933,1928,1937,1920,1927,1957,1947,1771,1844,1830,1780,1817,1856,1720,1603,1676,1738,1881,1825,1900,1876,1820,1876,1866,1578,1475,1419,1492,1558,1539,1763,1623,1565,1601,1643,1729,1655,1755,1810,1738,1817,1878,2044,2049,2005,1935,1982,1985,1964,1963,1939,1949,1928,1872,1298,1241,1458,1058,1616,1793,1742,1757,1737,1531,1600,1481,1574,1811,1756,1800,1725,1855,1807,1802,1786,1801,1716,1705,1699,1706,1618,1805,1808,1623,1396,995,1099,1037,1436,942,873,878,1301,980,1185,966,1210,588,662,507,600,873,778,769,662,814,1090,1296,1181,978,1283,1324,1498,1365,1355,1491,1520,1698,1356,1366,1642,1551,1442,1675,1612,1679,1565,381,234,196,215,917,486,444,453,1475,2043,2039,2052,2038,2027,2051,2038,2020,2009,1934,1921,1966,1875,1911,1927,1909,1778,1428,1379,1472,1470,1135,1188,1154,1034,1409,1424,1423,1452,1622,1860,1804,1809,1868,1862,1809,1786,1869,1838,1739,1749,1741,1720,1734,1768,1705,1632,1386,1455,1504,1472,1378,1487,1552,1475,1742,1868,1889,1872,1701,1232,1240,1190,1482,1840,1803,1783,1849,1464,1486,1415,1476,1813,2015,2032,2029,2038,2004,1996,1979,2010,1529,1497,1475,1501,1788,1673,1656,1679,1906,1994,1982,1993,2020,1714,1691,1735,1728,2048,2053,2054,2057,1638,1235,1221,528,537,523,633,1182,1418,1410,1236,1134,1481,1389,1511,1213,1502,1560,1632,1453,1407,1623,1827,1671,1863,1668,1242,1302,1268,1354,960,997,1015,956,1177,976,1029,837,1044,1972,1985,1956,1948,2023,2019,1982,1994,1998,1636,1477,1590,1669,1738,1652,1726,1614,1799,1509,1541,1629,1781,1601,1729,1700,1687,1462,1709,1600,1445,1488,1586,1557,1427,1783,1938,1866,1850,1882,1888,1873,1850,1893,1747,1505,1431,1591,1953,1983,1968,1989,1984,1815,1797,1822,1828,1858,1914,1915,1829,1517,1445,1425,1388,1495,1488,1524,1476,1513,1529,1729,1688,1615,1520,1610,1521,1486,1722,1727,1612,1757,1717,1700,1653,1772,1717,1679,1653,1558,1679,1648,1652,1525,1691,1650,1541,1514,1544,1502,1756,1316,1736,1721,1477,1490,1517,1522,1473,1543,1655,1658,1415,1312,1245,1546,1595,1756,1483,1537,1694,1428,1686,1765,1737,1576,1613,1271,1218,1199,1287,1330,1262,1223,1612,1473,1506,1290,1384,1145,1157,1189,1276,1242,1417,1439,1342,1386,1589,1281,1243,1456,1780,1874,1690,1433,1190,1006,960,899,1069,1103,1210,1277,1381,1631,1575,1644,1796,1653,1172,987,992,965,780,671,1359,1014,1367,1199,1261,1262,1487,1631,1730,1858,1926,1715,1774,1758,1488,1225,1225,1338,1273,1306,1281,1308,1228,1253,1300,1279,1296,1732,1591,1666,1625,1539,1400,1616,1727,1629,1476,1238,1182,1285,1273,1260,1373,1499,1819,1479,1273,1364,1212,1261,1089,1251,1441,1485,1733,1658,1639,1487,1375,1513,1314,1744,1469,1485,1231,1264,1249,1168,1246,1360,1583,1747,1684,1716,1499,1613,1747,1549,1617,1544,1202,269,796,1597,1253,262,770,1567,1229,262,767,1554,1235,261,742,1544,1258,274,715,1521,1266,262,626,1259,1204,1306,1318,1394,1242,1367,1249,1448,1267,1306,1309,1395,1311,1310,1338,1365,1332,1490,1274,1213,1296,1264,1251,1236,1248,1546,1234,1182,1218,1263,1152,1222,1242,1206,1496,1260,1235,1254,1263,1248,1259,1249,1499,1809,1749,1757,1670,1642,1683,1907,1985,1209,1315,1301,1396,1314,1433,1288,1338,1386,1324,1405,1323,1398,1397,1417,1393,1761,1672,1607,1579,1659,1555,1559,1518,1294,1415,1342,1420,1541,1489,1495,1513,1665,1880,1693,1614,1604,1640,1576,1604,1491,1286,1369,1353,1380,1539,1496,1519,1487,1624,1841,1748,1628,1611,1578,1592,1605,1471,1325,1357,1377,1393,1535,1514,1535,1447,1603,1790,1839,1637,1591,1591,1618,1616,1501,1384,1308,1372,1413,1493,1517,1557,1420,1579,1733,1633,1202,1198,1018,826,900,1083,981,1090,1118,1258,1204,1078,874,1033,1020,1062,1594,1175,1204,1040,849,871,1049,995,1039,1117,1282,1218,1129,899,1017,1017,1060,1851,1938,1884,1958,1956,1984,1922,1950,1886,1848,1784,1801,1899,1891,1954,1933,1936,1474,1962,1932,1958,1986,1983,1986,1938,1964,1944,1764,1751,1761,1764,1773,1810,1813,1737,1822,1767,1774,1769,1773,1629,1979,1965,1918,1897,1891,1980,1627,685,775,1928,1955,2003,1980,1972,1952,1992,1950,1989,1961,1957,1966,1981,1948,1969,1941,1980,1857,1583,1561,1562,1554,1586,1539,1573,1641,1769,1626,1694,1634,1619,1860,1812,1835,1803,1754,1505,1569,1472,1664,1651,1756,1601,1663,1657,1666,1730,1728,1857,1820,1822,1884,1856,1645,1745,1586,1737,1832,1801,1854,1848,1638,1596,1575,1537,1665,1672,1761,1629,1765,1696,1794,1737,1781,1597,1551,1737,1697,1701,1522,1867,1679,1730,1632,1820,1684,1683,1620,1641,1713,1509,1582,1698,1690,1640,1585,1494,1925,1835,996,1792,1920,1829,1895,1572,2024,2001,2011,1688,1591,1399,1187,1291,1157,1491,1600,1602,1499,1454,1476,1489,1499,1520,1542,1217,987,876,998,1306,1112,940,1105,1068,1683,1817,1872,1894,1754,1872,1748,1822,1943,1826,1587,1641,1650,1702,1797,1772,1649,1867,1853,1836,1875,1748,1905,1771,1821,1883,1851,1649,1643,1685,1692,1804,1760,1709,1859,1763,1919,1772,1921,1766,1919,1852,1890,1958,1910,1996,1978,1889,1968,1963,1960,2004,1869,1700,1725,1798,1783,1842,1887,1803,1721,1617,1339,1277,1696,1556,1716,1253,1097,1115,970,635,290,1136,1256,1304,1305,1322,1473,1291,1319,1331,1318,1465,1298,1338,1295,1412,1338,1342,1349,1341,1454,1500,1358,1263,1529,1707,1900,1959,2030,2039,2000,2006,1974,1939,1653,1645,1518,1501,1727,1576,1720,1718,1686,1761,1789,1625,1760,1598,1566,1614,1643,1570,1754,1892,1928,1849,1635,1714,1786,1980,1949,1862,1733,1731,1856,1927,1841,1772,1530,1804,1945,1887,1895,1641,1696,1900,1992,1971,1922,1767,1665,1857,1875,1867,1818,1409,992,1006,966,1327,1458,1591,1609,1646,1632,1671,1652,1627,1513,1911,1684,1723,1718,1597,1721,1627,1631,1692,1684,1903,1765,1720,1765,1742,1715,1746,1607,1684,1686,1735,1709,1607,1673,1641,1545,1953,1878,1858,1940,1948,1922,1886,1725,1747,1663,1679,1729,1951,1878,1915,1889,1900,1992,1912,1962,1948,1936,1833,1796,1797,1780,1862,1971,1871,1906,1883,1910,1857,1875,1748,1323,1098,1363,1719,1608,1686,1622,1881,1871,1839,1851,1831,1860,1818,1851,1924,1839,1910,1894,1113,677,592,727,1200,950,1344,1256,1260,923,1844,1712,1636,1562,1749,1589,1652,1688,1641,1410,1677,1510,1378,1140,1588,1630,1721,1744,1686,1713,1754,1610,1632,1409,1324,1542,1472,1543,1473,1515,1444,1426,1469,1390,1490,1732,1812,1811,1855,1865,1857,1858,1821,1900,1798,1822,1833,1932,1907,1867,1849,1888,1984,2019,1961,1904,1887,1898,1936,1929,1920,1914,1935,1901,1876,1865,1849,1898,1889,1786,1542,1478,1476,1715,1615,1598,1665,1625,1628,1652,1619,1742,1635,1646,1667,1636,1628,1654,1620,1632,1773,1676,1634,1638,1638,1632,1650,1672,1853,1877,1877,1838,1879,1859,1847,1865,1837,1940,1857,1839,1839,1853,1841,1824,1853,1952,1871,1848,1844,1873,1861,1831,1860,1880,1706,1377,1423,1447,1340,1443,1427,1603,1391,1328,1459,1507,1423,1438,1749,1869,1838,1832,1777,1799,1815,1914,1906,1703,1727,1717,1683,1680,1689,1745,1648,1705,1550,1788,1715,1684,1755,1761,1699,1604,1707,1846,1839,1810,1893,1611,1760,1860,1892,1856,1842,1719,1688,1774,1771,1777,1762,1510,1735,1688,1649,1831,1652,1671,1781,1835,1781,1753,1755,1644,1694,1638,1649,1766,1430,1159,1271,1234,1250,1292,1213,1286,1674,1539,1487,1635,1690,1564,1547,1580,1576,1533,1597,1542,1855,1832,1929,1875,1847,1275,1725,1427,1501,1743,1810,1775,1718,1757,1486,1473,1683,1752,1720,1592,1337,1384,1876,1870,1647,1359,1630,1429,1476,1684,1392,1692,1498,1448,1510,1537,1514,1586,1449,1434,1527,1510,1600,1512,1496,1529,1602,1563,1472,1572,1367,1479,1434,1488,1880,1834,1863,1796,1828,1812,1777,1743,1707,1502,1819,1707,1753,1791,1624,1782,1781,1627,1853,1935,1876,1873,1897,1727,1912,1708,1781,1746,1614,1753,1721,1778,1649,1718,1739,1777,1713,1751,1721,1735,1727,1653,1691,1603,1835,1650,1794,1660,1678,1742,1694,1691,1719,1684,1738,1654,1801,1584,1446,1564,1743,1736,1670,1746,1639,1424,1533,1518,1534,1406,1492,1531,1512,1653,1796,1686,1720,1767,1653,1716,1733,1714,1608,1681,1652,1686,1600,1610,1612,1705,1625,1677,1606,1632,1732,1631,1659,1628,1735,1625,1652,1630,1687,1628,1651,1637,1722,1636,1655,1664,1653,1708,1621,1605,1593,1770,1616,1691,1674,1791,1642,1654,1614,1637,1723,1612,1682,1663,1798,1614,1610,1637,1692,1651,1856,1792,1670,1606,1793,1814,1620,1727,1776,1813,1731,1873,1899,1878,1930,2011,1942,1943,1959,1964,1772,1863,1920,1978,2034,2007,2000,1838,1915,1864,1828,1884,2011,2037,2023,1991,1986,1984,1911,1900,1884,1915,1912,1917,1961,2015,1733,1889,1904,1914,1854,1783,1603,1617,1911,1787,1810,1585,1631,1612,1624,1609,1816,1400,1391,1332,1316,1432,1518,1486,1386,1440,1519,1481,1463,1399,1441,1574,1493,1351,1697,1717,1810,1701,1700,1705,1716,1749,1663,1708,1701,1757,1681,1671,1661,1712,1628,1712,1661,1679,1647,1762,1669,1653,1637,1734,1649,1649,1651,1666,1967,1875,1886,1953,1895,1919,1889,1909,1940,1775,1786,1798,1871,2004,1985,2039,2054,2035,2036,2020,2017,2018,2041,2032,2039,2053,2041,2043,2041,2039,1901,1849,1877,1927,1937,1888,1878,1870,1781,1474,1512,1378,1631,1672,1632,1539,1581,1645,1523,1627,1537,1465,1519,1614,1574,1507,1631,1501,1418,1562,1461,1720,1802,1858,1719,1669,1636,1764,1913,1858,1863,1805,1785,1670,1819,1839,1854,1546,2030,1963,2018,1914,1902,1928,1598,1759,1685,1766,1710,1787,1799,1746,1675,1780,1698,1681,1685,1729,1433,1511,1511,1516,1567,1526,1519,1514,1468,1577,1512,1531,1483,1555,1506,1512,1511,1493,1283,1324,1272,1183,1955,1929,1915,1893,1919,1972,1934,1921,1947,1384,1254,1271,1338,1311,1314,1266,1453,1665,1444,1442,1584,1681,1472,1573,1594,1664,1719,1649,1691,1667,1662,1633,1665,1696,1728,1228,1254,1264,1233,1269,1241,1198,1278,1381,1099,1001,1144,1156,1257,1018,1308,1485,1255,1300,1257,1194,1291,1257,1390,1251,1647,1334,1297,1342,1361,1325,1281,1296,1648,1700,1557,1707,1733,1641,1526,1363,1703,1975,1616,1015,1287,1133,1321,1164,1449,1973,1925,1598,1752,1829,1819,1762,1545,1940,1362,409,595,468,446,541,492,510,626,652,997,1331,1480,1307,1184,1159,578,914,468,1380,1413,1526,1514,1377,1193,436,1636,971,1385,1158,1525,1364,1217,1174,1757,1800,1723,1752,1802,573,80,998,674,723,609,551,483,822,560,599,1174,889,889,1447,1412,1383,1428,1385,1509,1628,1720,1608,1636,1562,1576,1834,1643,1178,1113,1174,1212,1304,1270,1312,1262,1449,1511,1594,1628,1659,1626,1395,1339,1405,1023,25,30,25,304,758,1109,871,1328,1624,1665,1611,1610,1302,1574,1539,1620,1531,1640,1897,1927,1920,1930,1892,1828,828,1068,1484,1409,895,938,1231,1299,1409,1450,1496,1509,1542,1579,1742,1773,1532,1608,1489,1566,1578,1499,1560,1658,2051,2057,2051,2032,1886,1909,2025,1997,1743,1871,1865,1935,1992,2032,1999,2029,1990,2025,1983,2017,2055,2026,1711,1794,2006,1996,1997,1970,1674,1620,1240,1196,1186,1332,1975,1964,1692,1738,1889,1884,1762,1797,1772,1802,1948,1957,1976,1965,1964,1969,2026,1918,1529,1538,1545,1530,1541,1543,1541,1542,1353,1404,1311,1327,1267,1282,1330,1462,2012,2017,1991,1975,2007,1964,1930,1920,2007,1886,1704,1699,1641,1714,1637,1484,201,320,1209,1362,1346,1039,1007,971,1100,1119,1624,1723,1571,1705,1706,1698,1512,1560,1567,1606,1525,1592,1498,1486,1294,1418,1068,1114,1282,1358,1235,1302,1436,1449,1573,1617,1449,1492,1363,1362,901,1024,1597,1548,843,1106,1254,1374,1478,1453,1475,1511,1166,1258,1438,1477,1664,1687,1842,1851,1763,1812,1585,1602,1601,1646,1567,1614,1500,1563,1514,1480,1237,1354,1542,1570,1356,1371,1379,1407,1362,1367,516,638,425,584,1432,1539,1562,1571,1412,1477,1534,1487,1407,1384,1178,1135,1293,1349,1517,1442,1089,861,339,699,1772,1886,1787,1776,1539,1474,974,1087,1557,1560,1563,1564,1587,1597,1567,1656,1798,1825,1762,1810,1815,1861,1804,1802,1366,1397,1352,1416,1412,1476,1671,1708,1549,1548,1498,1476,1563,1548,1487,1608,1886,1875,1554,1377,697,681,834,1130,1326,1590,1678,1739,1470,1552,1400,1341,1188,985,609,801,820,877,608,757,1491,1320,488,528,480,764,1747,1768,1081,1137,1028,1120,1359,1360,1136,1013,911,1007,1451,1470,1451,1456,1419,1524,1702,1748,1660,1745,1863,1881,1561,1452,973,1058,1142,1210,929,988,870,1016,996,1090,1228,1191,465,511,608,640,483,523,613,648,473,519,630,677,492,546,606,652,430,459,559,852,1889,1764,1035,1102,1026,1100,1025,1111,1079,1236,1797,1689,1685,1715,1634,1659,1727,1601,1137,1271,1661,1657,1677,1755,1897,1635,187,259,286,351,179,232,272,336,47,256,25,161,142,205,240,246,199,492,1419,1511,1587,1546,1077,1104,1084,1177,1209,1249,1484,1514,1469,1580,1857,1871,1688,1704,1427,1551,1617,1664,1361,1448,1268,1271,1533,1612,1612,1145,1660,1443,1483,1483,1439,1219,1421,1468,1396,1527,1523,1514,1365,1052,1335,1351,1377,1160,1338,1133,1153,1057,1406,1540,1504,1480,1524,1536,1521,1522,1131,787,663,516,749,704,749,672,629,514,507,715,670,732,653,695,736,681,750,804,767,724,545,488,729,2015,1998,1759,1753,1695,1688,1686,1707,1720,1714,1693,1701,1837,1963,1833,1767,1680,1669,1770,1731,1758,1118,1007,1190,1833,1534,1621,1886,1553,1500,1465,1485,1483,1465,1479,1482,1492,1395,572,590,522,633,606,433,586,596,586,558,619,602,562,518,318,426,525,449,155,494,605,382,337,457,303,495,1070,1958,1870,1663,1649,1673,1685,1678,1657,1672,1695,1679,1694,1677,1840,1912,1664,1731,1649,1767,1774,1649,1677,1177,717,753,1172,1930,1660,1744,1586,1706,1828,1620,1515,1467,1527,1492,1489,1500,1510,1498,1489,1505,1505,1490,1480,1516,1470,1501,1501,1499,1465,1492,698,373,530,555,693,531,564,693,598,382,511,444,494,468,423,319,380,600,635,608,660,731,543,674,665,604,570,486,520,368,478,539,365,373,424,496,486,414,611,393,469,464,614,525,566,585,321,561,486,455,463,454,297,523,478,491,562,258,336,507,1725,1982,2025,2014,1999,2043,1751,1685,1703,1679,1701,1713,1717,1678,1689,1674,1672,1711,1689,1685,1692,1698,1700,1695,1732,1714,1700,1694,1688,1724,1669,1702,1675,1895,2048,2048,1899,1617,1688,1711,1715,1721,1764,1666,1637,1760,1716,1666,1665,1656,1796,1778,1690,1664,1677,1709,1675,938,878,961,811,725,860,1016,1038,1044,1181,1199,1170,1004,1086,924,1067,865,890,1269,623,1988,1968,1909,1783,1568,1495,1532,1485,1511,1523,1497,1469,1484,1509,1484,1490,586,602,361,445,401,366,537,363,662,648,546,553,516,564,539,188,309,129,305,495,676,496,527,447,523,365,554,451,141,367,1509,2049,1965,1694,1717,1670,1699,1699,1704,1694,1696,1669,1785,1739,1665,1684,2028,1941,1744,1670,1721,1725,1716,1689,1734,1843,1664,1627,988,1114,1570,1219,1937,1761,1423,1579,1513,1498,1492,1477,1491,1483,1484,1454,1490,505,194,276,83,528,500,181,268,375,412,224,432,373,341,120,139,172,392,312,428,518,334,246,337,522,539,373,262,1291,2011,2031,1707,1693,1719,1674,1702,1690,1664,1669,1684,1703,1723,1722,1825,2048,1867,1822,1815,1758,1742,1619,1685,1823,1826,1870,1547,621,495,851,1029,864,1365,1587,1699,1760,1456,1525,1505,1496,1487,1476,966,428,381,316,373,507,229,392,486,468,344,402,403,279,248,357,471,1032,1963,1824,1687,1698,1663,1673,1697,1671,1715,1927,1889,1772,1647,1713,1752,1814,1849,1026,1051,1510,1420,1666,1559,1498,1495,1489,597,611,389,431,552,489,580,534,456,311,314,677,1979,1662,1654,1652,1670,1657,1968,1629,1679,1697,1563,1109,1699,1627,1568,1441,1503,1501,1507,1495,1486,1495,1482,1484,1519,1533,1466,1500,1497,1504,1532,542,471,462,318,331,488,471,334,357,470,523,534,401,391,450,375,502,416,457,332,209,163,400,265,344,212,198,290,345,286,333,335,344,282,310,428,365,389,379,325,354,464,377,371,353,280,295,400,223,420,529,437,460,1980,1944,1944,1967,1984,1666,1682,1664,1664,1684,1688,1673,1677,1704,1724,1683,1682,1668,1672,1669,1679,1673,1685,1672,1673,1661,1689,1679,1848,2048,2048,1641,1631,1617,1626,1645,1657,1806,1669,1716,1677,1695,1611,1612,1639,1681,1701,1624,1126,628,660,558,645,485,1058,1225,1466,1157,1211,979,1372,1562,1437,1375,1514,1460,1323,1866,1806,1839,1817,1573,1580,1489,1469,1475,1496,1490,1494,1506,1495,1502,1506,1325,485,564,577,694,538,569,395,499,301,222,498,278,431,490,622,461,357,395,565,557,667,634,598,280,607,313,321,527,684,647,695,489,251,413,518,348,173,1024,1985,1975,2018,1706,1707,1675,1707,1703,1697,1662,1714,1712,1684,1696,1755,1702,1722,1690,1714,1979,2048,1861,1761,1720,1760,1796,1801,1737,1781,1719,1757,1794,1752,1762,1693,927,930,1043,1402,1645,1434,1491,1972,1815,1596,1587,1658,1610,1477,1485,1501,1494,1487,1498,1494,1486,1484,1497,1506,1491,1489,1464,1481,1468,1476,1479,1500,1515,1467,600,667,626,593,547,564,555,635,593,520,560,380,380,611,547,476,441,408,577,452,682,438,530,597,458,415,499,519,498,575,346,527,422,462,425,563,328,155,538,417,466,529,545,420,204,447,509,287,377,461,143,319,352,478,446,512,449,223,549,503,381,203,386,510,437,332,232,480,584,384,477,435,393,519,604,587,1880,2052,2049,2057,2050,2046,2048,1748,1720,1739,1741,1770,1771,1760,1709,1750,1729,1732,1734,1711,1714,1756,1760,1749,1744,1757,1765,1745,1762,1726,1723,1723,1759,1753,1783,1750,1742,1752,1756,1742,1746,1769,2048,2048,2048,2048,1977,1761,1797,1825,1840,1896,1812,1757,1796,1796,1811,1716,1752,1824,1808,1807,1842,1780,1811,1834,1857,1821,1727,1805,1871,1847,1853,1799,1863,1847,1853,1870,1796,1584,857,868,854,706,876,1362,1213,1577,1029,1260,1469,1290,1020,868,721,1276,1348,1409,1170,1986,1952,1892,1776,1670,1460,1619,1606,1570,1554,1498,1487,1503,1512,1521,1493,1453,1466,1486,1501,1473,1478,1485,1522,1523,1490,1483,1508,1484,1492,1027,516,675,581,452,502,395,502,575,629,671,606,620,693,539,458,520,561,618,517,322,461,530,545,541,436,539,471,370,540,529,191,225,354,446,457,324,414,267,383,428,468,388,268,459,380,528,338,309,207,383,417,380,159,220,184,335,243,534,510,471,553,463,413,567,1747,2003,1924,1977,1989,1986,1641,1676,1686,1680,1666,1688,1713,1698,1691,1679,1652,1636,1684,1696,1705,1674,1710,1709,1687,1702,1670,1702,1675,1674,1683,1661,1669,1655,2045,2048,2048,1548,1685,1705,1745,1755,1806,1621,1670,1654,1793,1729,1805,1706,1727,1747,1719,1734,1664,1684,1758,1592,837,777,546,579,758,690,943,998,1012,672,784,571,731,701,727,700,655,749,588,337,706,642,1050,702,581,486,596,1648,553,1505,1667,1764,1777,1782,1682,1676,1567,1595,1597,1561,1472,1486,1485,1482,1474,1477,1487,1478,1475,1456,1494,1469,1476,1467,1471,1479,1478,1482,1457,1471,1491,1487,1480,1476,1492,1499,1463,1473,1443,1491,1439,1474,1453,1458,1473,1485,1460,1452,1473,1456,1499,1480,1489,1466,1452,1483,1471,1446,1463,1421,1417,1421,1470,1484,1495,1437,1434,1485,1456,1470,1457,1494,1480,1468,1485,1434,1467,1470,1475,1483,1473,1474,1454,1426,603,590,330,584,510,507,271,441,504,364,228,583,602,420,628,417,470,611,654,514,696,512,583,547,409,478,583,579,586,506,409,470,489,541,541,408,459,573,521,542,620,625,603,591,290,328,440,538,496,544,565,691,551,544,576,455,580,429,386,497,520,401,402,531,571,370,445,511,379,608,444,501,345,604,567,568,665,599,599,558,512,584,464,596,571,299,452,317,514,466,518,528,407,278,460,490,252,465,470,500,444,278,563,591,459,547,537,412,262,413,475,212,228,347,509,535,570,408,344,462,338,361,301,369,327,557,445,434,522,471,587,562,586,498,510,580,483,443,419,454,549,617,497,500,498,524,487,395,247,391,540,430,508,528,505,590,490,284,319,562,490,478,468,439,463,433,428,606,620,481,485,472,480,479,513,625,540,387,401,458,484,393,502,674,395,351,426,317,290,290,442,413,281,411,229,495,486,618,601,412,328,397,564,514,545,417,538,562,446,501,459,421,507,383,259,401,413,577,605,560,453,396,551,534,385,572,576,522,497,474,454,560,552,375,501,519,255,124,461,570,547,561,461,532,544,494,490,417,430,1899,1925,1941,1920,1925,1935,1991,1971,1964,1998,1947,1986,1965,1927,2007,1959,1938,1985,2050,1991,1669,1626,1638,1654,1694,1707,1713,1715,1686,1671,1684,1673,1701,1669,1691,1670,1687,1682,1682,1676,1677,1693,1688,1695,1683,1691,1677,1694,1674,1663,1690,1687,1683,1688,1685,1658,1693,1662,1682,1702,1661,1660,1648,1677,1696,1657,1688,1659,1676,1647,1647,1683,1687,1655,1674,1708,1701,1678,1686,1687,1670,1665,1695,1652,1638,1699,1710,1707,1680,1650,1653,1659,1697,1660,1650,1657,1652,1640,1664,1672,1692,1663,1679,1669,1665,1667,1713,1685,1718,1685,1680,1724,1675,1660,1691,1730,1684,1693,1681,1681,1679,1668,1670,1708,1672,1654,1826,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1898,1669,1556,1686,1748,1777,1779,1742,1697,1728,1680,1659,1641,1677,1728,1661,1740,1736,1710,1715,1716,1736,1741,1745,1667,1625,1724,1707,1722,1657,1703,1622,1671,1663,1710,1665,1591,1728,1702,1741,1749,1778,1704,1708,1721,1702,1669,1749,1720,1671,1657,1670,1768,1736,1517,1465,1559,1606,1719,1744,1604,1773,1816,1725,1738,1745,1641,1761,1811,1741,1622,1748,1737,1765,1814,1745,1695,1184,872,814,866,820,716,763,777,650,705,529,574,666,631,350,273,719,630,740,737,881,575,651,618,811,743,827,706,786,809,723,721,904,883,775,755,919,706,663,754,664,754,605,701,749,644,904,709,747,780,585,582,369,375,463,753,776,565,534,612,679,765,858,878,857,631,402,534,640,665,786,613,583,677,471,541,576,608,700,793,724,715,894,628,518,893,644,625,444,959,789,960,662,749,722,638,736,538,782,774,589,618,703,547,781,547,562,563,394,649,828,843,919,691,749,724,791,369,719,825,817,678,639,788,708,532,657,779,733,576,697,559,613,698,730,599,376,327,297,320,294,368,409,301,295,326,282,289,385,482,529,666,585,312,552,643,521,750,679,577,649,837,609,710,664,1005,676,436,369,504,530,342,436,378,199,493,358,295,262,259,194,561,618,434,690,736,794,379,255,201,255,251,168,172,214,496,1141,1876,1307,1923,1903,1917,1927,1941,1897,1970,1913,1939,1946,1951,1911,1893,1783,1902,1869,1842,1588,1549,1470,1475,1490,1490,1476,1483,1485,1507,1496,475,550,429,573,429,340,537,498,446,304,405,414,527,420,486,618,325,358,474,272,361,380,373,329,459,324,412,334,249,380,386,443,1961,1929,2039,1662,1688,1706,1703,1692,1724,1671,1721,1712,1692,1694,1664,1682,1663,1721,2048,1947,1735,1717,1773,1754,1757,1734,1789,1772,1742,1736,1680,1430,790,808,906,1499,1445,1372,1113,1533,1639,1750,1592,1488,1497,1494,1481,1432,1505,1484,1497,1494,1497,566,240,481,464,372,616,592,573,523,631,493,466,438,359,330,354,460,352,319,442,358,371,550,388,265,531,307,234,867,2023,2033,1794,1686,1699,1702,1720,1721,1709,1681,1707,1700,1691,1708,1687,1809,2048,1837,1596,1768,1854,1841,1761,1753,1774,1823,1768,1782,1770,1159,602,840,1143,920,1278,1365,1552,1658,1757,1570,1633,1577,1490,1487,1480,1496,1476,1504,1495,1497,1472,1471,1463,1496,1473,1464,1486,1485,1490,1483,1478,1491,1455,1477,1474,1487,1477,1472,1480,1483,1480,1478,1475,1495,1493,1497,1466,1501,980,565,558,596,667,689,622,578,533,614,551,620,617,612,585,612,619,610,595,505,654,683,580,607,524,644,611,588,610,600,531,395,577,655,624,527,534,533,531,541,540,532,521,612,564,460,382,256,258,457,419,474,488,412,445,457,708,559,417,214,202,388,119,154,243,594,408,535,505,467,671,497,563,652,567,607,582,424,519,403,565,504,709,550,642,294,458,517,499,508,360,279,291,560,542,694,542,495,365,542,599,522,560,527,666,555,641,391,591,1334,2002,2003,1983,1977,1919,1956,1947,1974,2046,1713,1714,1717,1710,1705,1712,1704,1696,1705,1681,1720,1695,1666,1713,1717,1695,1684,1690,1687,1701,1662,1652,1661,1625,1680,1671,1682,1677,1696,1679,1679,1678,1692,1677,1715,1682,1672,1663,1667,1693,1678,1660,1655,1689,1654,1652,1931,2048,2048,2048,2048,1740,1769,1715,1720,1623,1732,1704,1821,1714,1786,1750,1694,1722,1700,1679,1715,1593,1710,1716,1725,1753,1672,1734,1759,1713,1612,1616,1697,1732,1703,1737,1635,1209,904,881,867,826,733,876,787,902,700,1053,1031,930,685,1065,793,1308,1220,1214,1187,1028,1061,1187,1147,1122,1217,1443,1425,1415,985,1047,1292,884,875,745,475,797,517,431,645,921,1017,1116,1016,1241,749,629,572,794,1176,1180,791,1058,1520,1713,1860,1839,1882,1886,1937,1907,1953,1871,1585,1571,1480,1489,1483,1490,1488,1483,1460,1487,1493,1484,1114,480,229,393,518,432,384,500,526,369,175,165,207,255,314,350,501,369,437,463,276,331,360,504,353,314,385,326,323,472,253,351,361,385,597,1974,1983,2030,1721,1698,1648,1698,1697,1680,1694,1701,1702,1704,1706,1698,1697,1692,1682,2032,2010,1683,1697,1776,1722,1742,1756,1789,1804,1699,1743,1679,1696,774,716,1237,1546,888,612,1026,1516,1848,1812,1627,1598,1486,1484,1502,1489,1501,1510,865,461,563,622,482,463,522,442,385,440,499,419,164,252,372,463,422,350,364,384,430,219,428,1946,2004,1688,1714,1733,1683,1697,1687,1660,1693,1689,1715,1980,1856,1763,1815,1734,1762,1734,1775,1790,1738,764,754,1592,1627,1476,1400,1559,1655,1502,1478,1391,1448,1473,1479,1508,1468,1467,1475,1480,1509,1514,1490,1489,1488,1407,635,405,525,612,531,508,468,496,485,499,522,628,584,593,301,377,448,320,420,403,586,426,422,368,262,214,540,616,666,554,606,553,410,586,430,356,591,309,625,595,440,483,576,319,599,1730,1967,2035,2012,1733,1721,1710,1691,1698,1680,1681,1677,1692,1728,1674,1679,1666,1718,1728,1720,1725,1736,1723,1714,1914,2048,1981,1728,1712,1718,1687,1738,1649,1706,1673,1632,1716,1763,1787,1723,1768,1780,1350,946,809,924,1470,1660,1343,1479,1457,1576,1494,1737,1857,1758,1641,1477,1400,1487,1509,1481,1467,1490,1480,1484,1470,1470,1482,1494,1489,1467,1487,594,510,659,534,470,416,522,618,570,380,440,502,336,372,291,374,490,575,486,456,518,523,491,420,303,192,212,424,467,397,181,91,166,344,298,232,360,506,440,352,472,249,315,305,243,1462,1985,1881,2009,1816,1690,1676,1682,1681,1681,1701,1684,1697,1661,1665,1664,1711,1678,1665,1680,1663,1677,1692,1685,1856,2048,2048,1716,1705,1688,1778,1713,1719,1763,1683,1660,1716,1596,1752,1652,1703,1783,1566,665,812,426,869,883,727,815,784,854,850,531,914,1324,1766,1731,1601,1660,1637,1553,1472,1495,1510,1508,1496,1491,1441,1472,1505,1489,1498,1529,1472,1513,1495,1499,1457,1450,1498,1527,1507,823,498,633,378,398,540,450,588,521,494,401,394,512,580,76,500,623,509,467,446,411,369,189,185,395,591,534,500,553,526,475,432,346,361,511,539,558,537,250,345,505,305,340,302,148,185,566,571,353,548,415,338,468,427,455,328,350,189,291,393,414,405,464,476,466,258,490,381,489,423,1002,2016,2044,1967,1997,2049,1954,1699,1700,1675,1670,1673,1723,1649,1674,1722,1689,1695,1697,1675,1691,1685,1684,1690,1698,1702,1694,1690,1679,1674,1663,1717,1703,1677,1688,1701,1707,1710,1956,2048,2048,2048,1649,1721,1572,1653,1756,1583,1751,1761,1758,1776,1714,1687,1755,1690,1714,1751,1685,1750,1682,1725,1853,1626,1723,1764,1843,1282,666,564,639,635,593,849,691,783,464,222,406,721,698,447,503,423,417,401,455,401,237,243,942,1368,439,1575,1637,1756,1819,1711,1789,1604,1384,1486,1487,1521,1505,1376,468,273,230,225,461,318,166,243,257,200,451,437,386,358,444,529,1272,1989,1693,1684,1700,1714,1668,1669,1674,1807,1882,1770,1759,1796,1714,1626,1176,755,1034,1312,1638,1705,1628,1512,1507,1509,1504,1470,1502,1491,1484,1502,1475,1477,1489,1496,1496,1488,1480,1485,1501,920,611,593,620,494,534,493,556,554,538,522,572,457,599,577,537,577,424,461,585,595,530,513,560,598,380,467,597,583,350,394,510,421,502,518,426,435,472,507,439,397,625,362,589,615,609,634,445,377,586,511,479,447,637,376,573,550,583,615,605,1165,2041,2025,2046,2037,1917,1708,1716,1707,1707,1689,1708,1707,1708,1704,1670,1679,1674,1693,1706,1703,1701,1707,1707,1675,1670,1672,1658,1723,1709,1719,1736,2048,2048,1881,1782,1756,1763,1755,1653,1740,1642,1782,1756,1804,1829,1827,1730,1659,1727,1796,1812,1598,675,751,851,726,804,1584,1701,1255,1295,1688,1745,1495,1348,1027,1709,1854,1865,1734,1850,1627,1590,1457,1534,1479,1493,1481,1477,1481,1485,1474,1471,1514,1484,1469,1484,1491,1504,1511,1492,1498,1491,1496,1527,536,175,259,136,472,555,478,452,459,521,559,635,266,345,476,372,469,287,553,573,597,325,404,197,315,410,188,504,393,578,575,456,559,425,536,370,310,498,435,446,587,592,532,539,259,218,443,306,449,475,444,521,621,488,651,601,464,513,493,328,372,460,283,115,372,327,467,369,284,1332,2015,2050,2028,2035,2050,1668,1688,1686,1702,1657,1686,1670,1657,1663,1706,1679,1676,1680,1677,1716,1689,1711,1663,1692,1703,1696,1696,1699,1707,1707,1686,1692,1700,1639,1715,2039,2048,2048,1827,1717,1745,1749,1722,1747,1588,1750,1761,1674,1714,1812,1764,1818,1695,1737,1743,1672,1730,1729,1680,1584,1665,1260,799,740,794,712,771,773,626,519,745,729,965,1000,1074,839,684,888,760,1176,1012,882,1011,962,1004,698,1018,912,608,491,794,135,464,1255,1318,1717,1869,1811,1858,1800,1648,1502,1535,1507,1495,1482,1495,1504,1498,1484,1500,1512,1149,387,430,204,338,473,593,348,516,362,541,436,442,274,476,368,347,531,344,371,321,518,432,337,412,405,229,336,200,302,360,482,355,190,294,203,1362,1998,1987,1877,1696,1672,1691,1681,1631,1690,1672,1688,1667,1665,1690,1686,1711,1699,1684,1992,2048,1756,1755,1739,1765,1646,1778,1669,1637,1637,1760,1720,1754,1674,1331,552,685,681,1176,1148,1000,1008,1697,1887,1898,1679,1523,1542,1476,1507,1498,1490,1501,1509,1497,1500,1501,1502,1498,1508,1524,1492,1484,1482,1494,1498,1506,1486,1484,1504,1488,1478,1512,1524,1513,1459,1524,1506,1493,1462,837,471,557,568,392,551,562,602,633,574,629,536,447,432,551,424,459,517,556,608,615,611,542,530,505,419,486,519,600,573,284,533,415,542,538,493,456,489,469,565,447,451,631,362,362,342,296,469,376,374,278,482,449,305,540,382,548,542,526,247,571,585,616,620,578,540,385,593,457,509,516,394,519,465,336,500,510,499,381,412,462,489,503,317,464,504,334,367,294,451,588,349,414,399,405,395,524,419,371,470,292,171,310,457,369,320,321,405,253,354,355,1003,2008,2035,2055,1971,2004,2019,1990,2042,2047,1816,1678,1686,1680,1682,1680,1678,1694,1706,1707,1700,1748,1707,1724,1712,1725,1717,1748,1728,1716,1724,1710,1704,1702,1672,1689,1670,1686,1696,1681,1711,1699,1657,1668,1685,1693,1684,1719,1712,1745,1753,1731,1730,1682,1673,1709,1689,1674,1653,1691,1811,2048,2048,2048,2048,2048,1687,1747,1672,1676,1570,1699,1758,1704,1751,1780,1745,1761,1737,1721,1710,1705,1687,1716,1728,1639,1674,1592,1639,1752,1717,1682,1708,1603,1660,1614,1702,1781,1756,1661,1818,1630,1535,1664,1180,744,760,809,824,692,651,792,615,720,950,922,962,999,584,468,654,622,849,919,465,802,613,651,859,593,547,595,562,181,730,915,797,928,1006,1129,801,1071,848,814,794,578,1137,1459,1658,1897,1787,1844,1859,1801,1810,1903,1733,1671,1605,1492,1495,1505,1485,1510,1488,1472,1483,1484,1407,494,473,508,477,482,446,436,447,372,360,320,388,115,54,362,556,551,607,586,528,618,368,272,62,253,465,248,360,324,265,56,242,1689,2049,2045,1750,1678,1689,1688,1713,1727,1723,1732,1683,1658,1709,1701,1715,1733,1951,2048,1845,1819,1808,1814,1771,1741,1775,1772,1704,1799,1835,1842,1152,786,706,883,897,656,1233,941,1148,1545,1620,1644,1498,1542,1568,1491,1508,1501,1494,1502,1469,1506,1492,1476,1497,1487,1496,1482,1083,383,228,283,382,377,435,365,358,220,231,579,493,553,583,470,520,437,256,313,446,347,273,479,454,433,254,422,362,400,393,314,402,439,459,381,479,332,471,1978,1971,2025,1785,1643,1656,1691,1707,1702,1680,1717,1724,1699,1705,1703,1667,1651,1649,1661,1650,2002,2048,1641,1632,1761,1915,1866,1818,1799,1819,1849,1850,1718,1650,1660,1138,641,680,735,606,257,377,399,381,365,374,457,461,1436,1224,660,457,1538,1514,1511,1528,1657,1704,1621,1614,1550,1497,1505,1524,1523,1533,1531,1519,1494,1520,1514,1504,1501,1511,1515,1515,1525,1507,1503,1506,1506,1524,1515,1510,1503,1536,1502,1520,1518,1540,1534,1533,1526,1536,1520,1527,1507,1510,1491,1492,1502,1499,1481,1477,1489,1491,1501,1494,724,579,365,582,473,426,634,495,441,685,677,690,730,693,698,718,641,688,668,717,727,731,561,606,588,348,592,518,612,623,743,606,642,635,662,588,630,558,582,633,517,572,654,600,522,608,510,497,557,564,585,613,621,553,629,637,558,542,560,540,593,544,423,498,590,499,545,657,530,624,590,612,611,544,625,538,655,650,504,514,557,593,405,543,566,545,656,502,391,559,612,585,670,614,724,737,686,643,654,659,723,688,653,560,597,655,632,622,614,508,508,660,620,588,657,591,561,617,603,595,560,552,601,497,339,528,524,586,521,565,576,462,614,436,475,605,605,534,365,417,580,592,495,521,458,323,478,520,558,518,506,375,994,2032,2052,2044,2057,2030,2047,2031,2048,2054,2056,2026,2050,2036,1714,1720,1680,1700,1706,1733,1705,1676,1711,1692,1697,1711,1700,1699,1703,1703,1724,1739,1710,1719,1742,1724,1738,1736,1755,1750,1750,1758,1734,1705,1699,1711,1710,1688,1683,1662,1688,1729,1708,1684,1709,1704,1704,1700,1729,1739,1746,1758,1747,1748,1731,1713,1711,1737,1725,1739,1734,1758,1743,1745,1736,1767,1743,1752,1721,1761,2004,2048,2048,2048,2048,2048,2048,2029,1690,1689,1668,1751,1721,1675,1694,1770,1721,1769,1768,1771,1853,1803,1819,1809,1797,1819,1773,1797,1787,1810,1616,1605,1702,1706,1672,1644,1570,1773,1714,1715,1709,1650,1754,1791,1831,1815,1843,1808,1837,1701,1706,1592,1659,1774,1812,1810,1792,1844,1855,1832,1779,1301,907,907,941,944,938,778,777,886,919,1102,1260,1365,1240,1177,1259,1199,1201,1304,1306,1196,1122,1258,831,726,776,886,944,961,1048,1256,1216,458,533,1434,1426,1712,1942,1731,1776,1887,1906,1855,1824,1847,1777,1869,1888,1555,1526,1527,1512,1486,1496,1502,1500,1492,1467,1535,334,82,263,173,52,238,251,458,196,347,305,347,141,395,299,178,137,124,475,395,361,132,491,429,388,423,287,158,884,2008,2040,1808,1696,1708,1699,1719,1709,1673,1690,1729,1732,1697,1674,1684,1768,2048,1905,1781,1727,1565,1829,1650,1839,1785,1790,1866,1747,1762,874,538,1832,1434,1646,1584,1616,1551,1471,1140,1508,1498,693,474,468,524,575,465,455,1455,1737,1696,1657,1893,1787,1723,806,637,1343,1527,1492,1498,1503,1272,264,406,408,493,537,100,243,545,293,411,243,464,503,1814,1778,1664,1689,1685,1675,1661,1964,1627,1704,1776,1703,1438,742,1573,1754,1691,1532,1458,1506,1491,1477,1236,507,481,324,377,498,296,338,434,561,425,389,454,485,471,537,682,2032,1736,1670,1675,1683,1672,1675,1700,1954,1656,1727,1719,1752,1562,559,832,1245,892,1210,1650,1825,2056,2054,2025,2049,1948,1563,1583,1458,1197,842,798,732,899,907,864,2036,2007,1971,1927,1878,804,852,1063,1410,1153,1474,1400,1338,1122,826,873,892,1091,1228,1075,1066,744,958,914,1002,1076,1043,1052,1211,1052,1021,644,743,807,951,815,818,823,792,974,2048,1568,1048,1039,972,984,979,1075,1022,998,863,1181,1160,841,1105,999,1006,1034,668,854,750,849,985,1423,1447,1512,1451,1962,2048,2048,1938,1371,2042,2040,2048,2048,2026,1780,2048,1686,1903,2055,2048,2048,2048,2048,2048,2048,2051,2033,2049,2006,2033,2054,2021,1953,1843,1684,1913,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2023,1955,1844,1820,1469,1597,1953,1904,1825,1875,2036,2052,2057,2048,2048,2057,2048,2048,2048,2048,2048,2048,2048,2057,1998,1593,983,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,1727,1869,2057,2048,2056,1912,1624,1388,1201,1031,758,525,1714,2057,2048,2048,2048,2054,2048,2048,2048,2048,1916,1488,850,1883,2048,2033,1973,1882,1727,1536,1261,894,618,303,139,1852,2057,2048,2051,2051,2048,2048,2057,2048,2057,2048,2048,2048,2024,1841,1636,1513,1242,2029,2057,2057,2048,2048,2048,2048,2050,2048,2048,2052,2045,2018,1940,1749,1520,1066,1035,1812,1870,2000,2048,2055,2057,1968,1726,1352,802,2054,2047,2048,2015,1856,2048,2048,1847,784,45,220,33,502,2048,2048,2048,2048,2048,2048,2057,2048,1953,2024,2048,2048,2048,2013,2048,2048,2048,2048,2048,2048,2055,2048,2048,1986,1505,1982,2005,1549,1623,2057,2016,1640,1325,1483,1856,2025,2048,2055,2048,2054,2038,1906,1493,510,787,2048,2048,2057,2052,2051,2056,2048,2048,2050,2040,2047,1871,1828,1951,1594,1925,2048,2048,2057,2048,2057,2048,2048,2053,1904,2048,2057,2048,2048,2048,2057,2048,2048,1634,2011,1953,1930,996,2046,2048,2039,1899,1634,2048,2048,2048,2048,2055,2048,2048,2048,2055,1888,1398,1533,1915,1976,2014,2039,2051,2029,2036,2045,2052,2055,2042,2029,2022,1988,1986,1968,2048,2044,2054,2031,2042,2017,2048,2046,2049,2044,2055,2021,1898,1808,1594,1438,1323,1185,1188,1227,1100,995,1139,1007,1057,933,885,907,792,633,581,456,184,181,141,61,62,1640,2027,2041,2048,2048,1944,1742,1679,1280,689,2048,2048,2048,2048,1906,2048,2048,2048,1968,2048,2048,2048,2048,2002,2048,2054,2056,2052,2026,2057,2048,2044,2039,2056,2047,1962,1915,1841,1698,1770,1665,1840,2048,2048,2029,2050,2048,2056,1930,1877,2055,2048,2057,2048,2048,2048,2054,1908,2056,2057,1930,1636,1776,2056,2056,1644,1725,2048,2056,2048,2048,2048,2048,2051,2048,2037,1962,1728,1503,1480,1275,1216,1373,2048,2048,2048,2051,2032,1950,1754,1159,326,918,1434,1674,1884,1936,1938,1926,2001,1950,1776,1580,1377,1175,673,388,1409,2005,2056,1574,1060,1532,2048,2048,2048,2048,2048,2048,2048,2048,1948,2019,2036,1885,1541,1084,1325,2048,1977,1473,1587,2048,2048,2048,2054,2048,2052,2048,2050,1935,1904,1600,2035,1781,1216,998,2046,2048,2048,2048,2048,2048,2054,1906,1836,2056,2048,2048,2048,2048,2057,2056,1117,1381,1832,2039,2051,2048,2048,1448,1502,1934,1931,2048,2048,2048,2054,2032,1897,1354,1077,817,512,420,252,116,1618,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1336,2036,2048,2048,2048,2048,2048,2048,2057,1272,232,1214,1691,1931,2051,2057,2048,2048,2048,2048,2048,2048,2048,2048,1904,1639,1518,1397,1206,1122,966,926,742,787,994,921,759,1567,2035,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1973,1310,787,653,1377,2048,2048,2057,2057,1606,1645,2048,1787,1342,1019,560,836,898,2048,1967,1281,436,1783,1957,1982,2047,2053,2048,2053,2038,2039,1516,1806,1795,1961,1947,2054,2048,2048,2048,2048,2057,2048,2046,2026,1765,1521,934,683,1494,2043,2048,2048,2048,2048,2048,2057,2057,2057,1998,1775,1485,1134,981,261,292,2015,2045,1977,1918,1815,1708,1709,2048,2041,1837,1577,1275,1770,1765,1985,2048,1931,2055,994,2048,1715,1845,1861,2048,1682,1922,1422,1468,1109,1553,2002,2034,2023,1886,1966,1962,1909,2048,2057,2048,1784,1053,1231,2048,2048,2048,2048,2057,1332,982,2048,2048,2057,2048,1589,408,1733,2055,2036,2048,2057,2056,2048,1954,2045,2048,1502,2027,2048,1720,2057,2048,1584,2016,2054,1499,1269,1842,1609,672,2031,2048,2048,2044,1452,116,124,1249,2035,2056,2055,2056,2057,2057,2048,1920,2048,2048,1954,2044,2048,1939,2048,2000,2048,2057,2042,2034,1901,1841,1757,1772,1538,1765,1204,1652,1693,1566,1286,1278,2010,1945,1839,1932,2048,2048,2057,2046,1504,1062,716,1358,1940,1293,1553,1989,2048,2048,2048,2048,2048,2048,2057,2048,2055,2056,1988,1824,1590,1417,1202,911,1249,2048,2048,2048,2048,2048,1630,615,1976,2051,2048,2017,1873,2021,2048,2056,2048,2057,2056,2048,2051,1972,1798,1425,847,840,2048,2048,2048,2048,1486,222,894,2031,2048,2048,2048,2048,2053,2048,2048,1997,1592,274,516,1370,1933,2048,2048,2048,2048,2048,2057,2057,2057,2057,2056,2010,1921,1774,1779,1729,1573,1408,1283,1238,1223,1073,825,534,527,516,491,461,436,383,445,468,451,555,534,218,366,837,1163,1203,1226,1118,1095,958,842,742,509,268,144,165,976,1646,1848,2054,2057,2048,2018,1954,2014,1827,1980,1771,2018,1946,1726,1526,2049,2055,2047,2022,2043,2038,2031,2053,2012,2007,1988,2053,1880,1975,2054,2048,2045,1716,1818,2023,1767,1863,2055,1806,1256,1638,2023,2054,2019,1870,1916,1931,1855,1924,2011,2048,2057,2054,1841,2057,2029,1671,1510,1603,1384,1132,444,571,404,435,757,660,1044,1593,1389,1421,1380,1267,1424,1660,1725,1793,1792,1940,1989,2020,2046,2057,2053,2048,2056,2048,2048,2057,2045,1987,1977,2001,1977,1905,1789,1719,1725,1698,1683,1526,1443,1479,1438,1440,1354,1251,1192,1196,1192,1134,1059,965,938,933,1482,1462,1506,1487,1443,1427,1558,1520,1511,1526,1491,1560,1638,1709,1556,1624,1549,1510,1592,1710,1727,1795,1768,1721,1807,1876,1914,1839,1990,1940,1948,2055,2045,2048,2056,2048,2056,2051,2019,1916,1763,1641,1162,1248,1818,1958,2048,2055,2048,1534,212,851,2048,2048,2056,1388,2055,1217,1885,2053,1670,1440,2048,2048,2048,2048,1535,2057,2010,1626,1236,2048,2048,2048,2048,2048,2048,2021,2020,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,2016,2048,2056,2057,2048,2057,2033,1973,2022,2049,2048,2048,2032,2048,2057,2048,2048,2048,2057,1809,1230,2057,2048,2048,2057,2048,2053,2057,1920,1928,1855,1544,1629,1468,1689,1836,1618,1451,1398,1172,944,440,1338,2057,2057,2048,2054,1979,1688,1252,206,805,1994,2048,1975,1670,1427,1721,1853,1236,203,603,935,377,389,336,421,449,399,383,287,834,860,856,807,556,530,1192,811,705,1365,1408,1449,1441,1195,1346,572,723,902,428,277,395,601,359,933,834,424,412,529,464,778,481,525,664,351,329,627,728,569,817,709,1144,751,577,988,722,555,976,698,504,640,809,878,404,330,256,291,268,311,573,259,313,189,410,756,617,776,611,408,202,477,477,596,362,451,573,490,215,473,686,334,258,479,440,910,1067,812,117,191,280,254,664,460,325,304,491,220,639,434,177,973,763,237,308,401,353,325,295,267,343,669,793,562,400,663,442,537,504,398,643,583,326,491,687,874,255,275,259,505,806,365,540,566,256,712,572,414,699,239,432,588,511,575,433,772,627,610,152,662,747,670,802,1174,1099,1145,1087,1151,1098,361,197,1080,1025,1110,952,570,1188,573,499,283,234,410,214,190,139,254,159,522,133,137,133,131,607,648,484,621,577,464,785,575,491,375,220,607,281,301,423,704,467,593,250,545,139,263,315,687,184,266,273,196,364,168,415,273,371,171,238,211,194,545,387,541,457,643,1096,577,414,526,446,703,634,365,507,921,743,855,843,470,399,320,458,412,435,481,327,317,253,181,173,468,689,1044,786,390,799,411,577,478,167,567,678,323,369,182,630,881,625,903,558,403,659,212,428,190,308,223,328,529,716,513,603,482,698,771,491,174,207,451,591,694,449,422,261,518,374,360,342,1108,1296,1193,1486,744,1317,1792,2044,575,122,117,427,577,154,202,116,464,202,403,606,373,1104,964,742,224,379,389,214,367,229,199,176,334,496,454,540,535,450,654,502,940,166,532,264,392,417,388,436,307,150,500,268,298,245,308,215,277,522,251,396,182,246,474,390,120,386,570,486,512,224,227,420,401,408,215,501,522,269,788,385,437,606,567,406,947,181,205,160,137,152,151,299,373,148,166,174,193,296,229,178,419,166,430,830,92,185,300,188,405,379,574,478,444,230,162,179,397,268,433,668,189,287,257,181,208,371,109,480,565,151,186,305,128,315,144,122,497,615,527,351,440,407,199,248,198,537,291,131,728,399,322,349,405,354,574,701,730,945,834,676,1268,1219,1093,1283,1369,1438,1497,1406,1511,1520,1526,1545,1515,1514,1501,1511,1582,1490,1542,1484,1499,1565,1451,1346,1316,1242,1250,1332,1348,1243,1172,1147,1025,1231,1524,1581,1887,1711,1749,1756,1666,1717,1716,1719,1702,1735,1699,1719,1748,1756,1755,1719,1712,1546,1695,1632,1676,1701,1704,1720,1692,1725,1657,1653,1651,1676,1598,1564,1640,1794,1677,1703,1697,1569,1663,1659,1725,1734,1796,1835,1816,1800,1828,1814,1722,1722,1657,1744,1812,1847,1765,1659,1691,1860,1722,1707,1770,1754,1732,1685,1617,1665,1530,1858,1606,1653,1592,1582,1665,1643,1672,1727,1688,1688,1667,1737,1708,1737,1702,1642,1721,1746,1699,1701,1666,1654,1670,1672,1617,1649,1604,1609,1543,1556,1510,1497,1813,1097,1136,854,801,640,1312,1382,1470,1415,1182,1060,1201,1146,1305,1428,1266,1286,1305,1270,1213,1007,919,725,884,903,781,619,811,999,1123,1012,1201,1373,1667,1433,1517,1330,1540,1465,1462,1538,1468,1479,1343,1322,1261,965,220,218,217,251,222,866,1623,1630,1343,1355,1543,1306,930,1318,1290,747,1406,1459,1090,1539,1696,1204,1729,1415,1586,1648,1528,1375,1582,1556,1254,1658,1502,1530,1594,1059,1632,1329,1470,1449,1650,1659,1653,1663,1422,1596,1760,1102,1602,1410,1688,1334,1373,1642,1536,1672,1529,1365,1585,1365,1638,1685,1606,1601,1584,1165,1568,1665,1581,1600,1542,1333,1542,1705,1227,1670,1078,1622,1317,1553,1142,1637,1602,1505,1691,1457,1387,1567,1192,1451,1182,1377,1426,1631,1077,1443,1488,1226,1444,1412,1448,1610,1532,1632,1681,1378,1321,1550,1608,1480,1516,1831,1424,1709,1272,1478,1435,1740,1656,1315,1727,1194,1671,1204,1568,1634,1762,1340,1517,1742,1764,1618,1707,1569,1666,1364,1657,1662,1736,1523,1541,1288,1634,1528,1571,1590,1644,1430,1812,1275,1727,1533,1740,1476,1729,1538,1847,1875,1918,1916,2053,2009,2049,2042,2021,2019,2030,2034,2024,2029,2053,2044,2037,2047,1993,2034,1976,2016,2015,2032,2050,2053,2052,2044,2043,2024,2009,2011,2046,2046,2021,2041,2054,2030,2018,2014,1909,1998,2015,2033,2045,2048,2030,2026,2047,2031,1987,1967,1991,2002,2003,1988,2033,2027,2024,2051,2032,2000,1954,2009,2017,1984,2012,2028,2017,2024,2057,2028,1996,1962,2004,1997,1974,2018,2029,2051,2053,2033,2032,1950,2008,2021,2018,2013,2033,2046,2045,2040,2051,2042,2054,2037,2036,2004,2042,1983,2039,2006,1919,2001,1959,1990,1960,2001,1988,1987,1985,2003,1957,1982,1974,1994,1966,1911,1991,1989,1976,1967,1983,1978,1985,1997,1974,1948,1995,1984,1999,1967,1965,2009,1971,1997,1951,1952,1991,2016,2000,1992,2008,1958,2010,1969,1997,1902,1964,1965,2005,1988,1996,1968,1935,1991,1993,1984,1967,1998,2009,1992,1998,2000,1999,2016,1992,1976,2003,1992,1938,2041,2014,1956,1915,2000,2025,1996,1963,2011,2025,2014,1973,2019,2039,1952,2035,1994,2015,2021,2027,2012,2023,2016,2015,1995,1976,1972,2003,2022,1995,1960,1878,1956,2053,2052,2035,1977,1932,1915,1890,1809,1854,1889,1946,1805,1866,1804,1989,2002,1973,1866,1901,1924,1879,1827,1852,1992,1944,1946,1949,1947,1861,1938,1877,1924,1934,1959,1937,1978,1794,2025,1780,1933,1821,1952,1932,1950,1919,2006,1969,1923,1849,1879,1889,1934,1948,1923,1929,1935,1984,1947,2037,1692,1996,1714,2002,1943,1914,1956,1854,1980,1913,2018,1837,1982,1947,2040,1732,1732,1848,1785,1833,1887,1861,1845,1791,1914,1835,1940,1902,1927,1933,1927,1855,1962,1898,1912,1879,1954,1861,1930,1930,1971,1925,1915,1913,1922,1896,1839,1909,1799,1899,1920,1816,1879,1638,1730,1466,1640,1791,1802,1807,1938,1941,1990,1969,2009,1992,1891,1983,1994,1937,1966,1993,1884,1424,1412,1394,1449,1443,1483,1570,1449,1580,1425,1467,1634,1766,1681,1513,1842,1995,1999,1900,2014,1951,1878,1923,1897,1988,2020,1958,1930,1954,1966,1825,1874,1928,2012,2009,1927,2005,1915,1990,1844,1892,1964,1972,2026,1905,2034,1921,1964,1846,1865,2009,1929,2028,1900,1998,1831,1937,1888,1866,1988,1937,2017,1886,1985,1922,1925,1872,1870,2004,1997,2013,1941,1982,1921,1881,1906,1908,1955,2045,1899,1976,1899,1952,1949,1936,1901,1752,1712,1684,1635,1666,1713,1734,1715,1750,1655,1671,1762,1716,1750,1715,1656,1654,1709,1686,1720,1700,1690,1676,1612,1649,1723,1754,1737,1740,1614,1597,1626,1745,1810,1616,1655,1626,1610,1698,1759,1710,1697,1707,1623,1622,1752,1775,1790,1614,1638,1627,1798,1852,1811,1829,1728,1760,1754,1825,1877,1895,1792,1801,1836,1761,1776,1744,1681,1670,1658,1772,1672,1575,1668,1757,1704,1664,1792,1717,1643,1739,1763,1595,1598,1833,1588,1682,1740,1799,1718,1666,1788,1833,1721,1682,1745,1754,1761,1717,1758,1720,1985,1932,1952,2006,1990,1948,1915,1945,1943,1981,1980,1966,2011,1981,1966,1994,1987,1985,1963,1989,1955,2003,2001,1999,1976,1958,2005,1947,1966,1993,1981,2006,2009,1968,1977,1960,1990,1962,1966,1962,1990,1965,1980,1971,1976,1987,1959,1974,1958,1975,1956,1985,1950,1976,1947,1949,1966,1956,1969,1958,1948,1953,1948,1956,1946,1957,1946,1957,1942,1957,1942,1956,1941,1966,1939,1968,1903,1904,1908,1912,1898,1932,1885,1910,1920,1904,1910,1911,1907,1919,1933,1887,1914,1892,1868,1953,1842,1852,1954,1841,1831,1958,1849,1809,1959,1837,1821,1971,1832,1833,1961,1819,1843,1961,1838,1817,1973,1861,1823,1898,1792,1852,1890,1810,1812,1885,1782,1839,1895,1759,1852,1893,1737,1870,1897,1759,1880,1883,1773,1889,1854,1816,1907,1862,1838,1905,1813,1883,1902,1812,1901,1853,1852,1907,1817,1878,1902,1806,1894,1846,1873,1915,1862,1904,1853,1870,1904,1846,1872,1911,1844,1868,1911,1854,1867,1911,1852,1866,1914,1852,1866,1917,1854,1864,1911,1853,1866,1917,1885,1850,1931,1869,1852,1919,1856,1861,1924,1868,1877,1900,1854,1856,1919,1851,1836,1926,1851,1846,1928,1863,1851,1917,1921,1907,1912,1906,1929,1916,1912,1921,1941,1916,1913,1916,1903,1920,1917,1914,1912,1980,1996,1983,1982,1995,1992,1987,1978,1981,1973,2004,1899,1974,1909,1888,1885,1926,1914,1905,1865,1929,1895,1926,1950,1936,1974,1950,1963,1963,1969,1948,1980,1966,1937,1990,1926,1985,1932,1973,1885,1990,1836,1963,1861,1912,1889,1877,1908,1855,1963,1834,1984,1837,1948,1874,1903,1889,1846,1889,1814,1932,1784,1898,1861,1846,1862,1813,1904,1804,1940,1818,1878,1856,1843,1869,2006,2047,2023,2022,2017,1997,2035,2018,2013,2045,2015,2040,2041,2045,2019,2009,1880,1997,2005,2026,2035,2057,2035,2030,2031,2029,2007,2012,2023,2028,2040,2057,2031,2036,2042,2026,1970,1844,2025,2021,2032,2050,2034,2035,2017,1976,2002,1995,1974,1983,2016,2043,2015,2016,2014,2000,1970,1997,1992,1966,1968,2026,2035,2008,2022,2021,1994,1981,2012,1993,1959,1981,2017,2037,2012,2051,2045,2025,2014,2009,2016,2004,1985,2017,2027,2054,2050,2049,2053,2043,2043,2009,2026,2043,2031,2055,2041,2022,2019,1979,1991,1995,2005,1954,1998,2006,1942,1992,1991,1948,1945,1983,2001,1992,1982,1989,2023,1936,1921,2019,1919,1802,1873,2010,2005,1957,2016,1982,1980,1991,1952,2008,1983,1911,1906,1883,1937,1998,1937,1881,1941,1992,1947,1926,1838,1906,1997,1981,1923,1843,1918,1973,1938,1887,1857,1917,1824,1895,1930,1937,1936,1975,1843,1885,1844,1880,1973,1906,1974,1956,1907,1877,1868,1896,1961,1968,1948,1911,1827,1843,1851,1932,1997,1923,1863,1834,1769,1918,1950,1901,1897,1900,1852,1877,1907,1881,1859,1890,1887,1832,1882,1817,1793,2018,1924,1932,1937,1904,1838,1853,1870,1853,1762,1926,1982,1922,1917,1965,1839,1873,1950,1961,1987,2022,2018,1960,1773,1993,1980,2016,1968,1999,1928,2039,2013,1975,1980,1963,2005,2007,2002,1976,1978,2011,2005,1977,1977,1949,2010,1984,2040,1990,1972,1969,1977,1957,2014,1976,2021,2039,2031,1976,2021,1917,2016,2002,1994,2017,1984,2013,2035,1876,1785,1791,1884,1993,2001,1965,2005,2000,1994,1983,1918,1969,1949,1920,1932,1982,1974,1916,1991,1988,2022,1983,2008,1980,1921,2000,1981,1981,1840,1959,1931,1957,1924,1845,1977,1947,1912,1893,1966,1983,2010,1982,1994,2010,1990,2023,1939,1937,1945,1952,1692,1935,1963,1921,1952,1926,1952,2005,1999,2022,1974,1977,1973,2015,1992,1990,1976,1983,1936,1974,1926,1973,1942,1980,1974,1973,2020,2022,1989,1985,1991,1974,2009,1968,1946,1986,1962,1959,1983,1931,1997,1969,1996,1964,1936,1991,2025,1982,1955,1950,1978,2009,1972,1987,2017,1975,2001,2008,1944,2027,1975,1974,2019,1904,2049,1973,1929,2011,1943,1977,1999,1993,1964,1873,1974,1986,1930,1956,1988,1951,1905,1964,1991,1992,1988,1954,1962,1975,1957,1951,1927,1930,1965,1843,1865,1962,1963,1908,1885,1948,1899,1975,1944,1909,1971,1997,1928,1974,2014,1902,2005,1900,2012,1973,1954,2002,2024,2006,2042,2043,1867,2014,2008,1949,2022,2033,2044,2037,2036,1954,2014,2022,1970,2023,2053,2028,2023,2034,1983,2038,2017,2004,2027,2038,2040,2043,2041,1950,2014,2021,1975,2037,2026,2049,2050,2042,1976,2015,2016,1990,2046,2034,2047,2041,2039,1959,1983,1951,2019,1824,1988,1970,1981,1999,1997,2039,2018,1988,1961,2004,2005,1860,2010,1917,1978,1966,2011,2010,1902,2011,1914,1933,1986,2012,1634,1867,1811,1701,1617,1667,1504,1751,1398,1520,1495,1465,1586,1252,1492,1451,1221,1417,1264,1335,1334,1157,1504,1120,1406,1200,830,1634,1327,1236,1206,1245,1543,852,1279,1417,1141,1593,1090,1368,1232,1380,1458,1150,1487,1513,1228,1593,1413,1527,1558,1403,1609,1282,1516,1538,1196,1625,1193,1368,1241,1402,1406,1286,1424,1111,972,1662,1405,1166,1236,1238,1574,881,1260,1494,1213,1552,1062,1331,1136,1621,1198,1412,1444,1439,1338,1545,1553,1420,1589,1398,1456,1355,1522,1462,1243,1607,1217,1338,1166,1582,1222,1345,1393,1069,1135,1511,1456,1126,1269,1336,1353,939,1263,1435,1165,1532,1110,1379,1166,1648,1255,1420,1441,1422,1356,1503,1578,1430,1583,1493,1250,1461,1454,1301,1185,1602,1293,1415,1169,1611,1150,1423,1318,942,1336,1388,1356,1138,1278,1594,937,1104,1378,1210,1422,1127,1339,1364,1121,1533,1119,1482,1509,1260,1630,1437,1521,1547,1390,1654,1260,1475,1507,1330,1542,1266,1335,1374,1154,1571,1200,1493,1201,868,1613,1375,1247,1205,1315,1630,811,1243,1453,1205,1618,1063,1334,1184,1482,1337,1354,1448,1477,1209,1597,1512,1442,1573,1372,1539,1322,1511,1559,1196,1624,1169,1442,1193,1572,1201,1365,1330,1039,1109,1497,1478,1122,1253,1419,1286,966,1282,1399,1178,1579,1129,1380,1147,1622,1214,1389,1483,1463,1265,1527,1583,1514,1609,1462,1403,1436,1561,1451,1094,1653,1167,1327,1158,1570,1177,1259,1422,1087,937,1557,1475,1137,1245,1435,1258,946,1301,1299,1116,1536,1086,1409,1209,1629,1120,1290,1499,1493,1295,1604,1603,1508,1544,1535,1459,1394,1560,1467,1103,1663,1251,1349,1232,1431,1346,1203,1413,1189,861,1607,1412,1248,1203,1250,1605,833,1262,1440,1149,1579,1063,1309,1361,1451,1444,1192,1548,1570,1383,1623,1436,1493,1537,1450,1707,1240,1523,1511,1285,1441,1436,1295,1387,1101,1655,1200,1503,1251,831,1671,1275,1301,1238,1194,1629,892,1197,1394,1294,1485,1230,1308,1268,1249,1639,1261,1474,1497,1251,1670,1452,1561,1560,1427,1705,1274,1568,1515,1268,1472,1406,1393,1376,1130,1623,1183,1526,1272,858,1660,1253,1327,1173,1233,1560,1042,1090,1379,1435,1298,1494,1179,1433,1261,1647,1223,1525,1542,1349,1534,1542,1699,1546,1590,1472,1546,1227,1222,1270,1421,1478,1720,1449,1350,1196,1472,1529,1431,1642,1647,1388,1297,1340,1518,1387,1601,1638,1490,1395,1249,1469,1453,1328,1532,1734,1546,1502,1239,1359,1390,1211,1405,1599,1436,1049,1333,1270,1707,1430,1233,1484,1651,1083,1720,1688,1843,1878,1938,1646,1941,1819,1752,1800,1898,1837,1799,1879,1408,1722,1718,1752,1698,1713,1668,1504,997,1140,1970,1981,1861,1784,1170,1031,1813,1585,1756,1711,1997,1674,1887,1889,1887,1763,1728,1896,1893,1890,1668,1781,1864,1476,1971,1945,1898,2000,1969,1951,1766,1857,1646,1851,1815,1870,1902,1830,1655,1690,1598,1525,1841,1624,1595,1683,1560,1469,1610,1726,2020,2015,1983,1875,2002,2030,1996,1944,2018,2024,2024,1938,1995,2038,1989,1968,1940,1997,1880,1960,1955,1973,1903,2020,2002,2005,1998,2023,2029,2000,1969,1875,1959,2048,2050,2042,1984,1953,1885,1754,1983,1873,1937,1937,1892,1966,1862,1924,1861,1907,1917,1858,1912,1970,1884,1939,1913,1886,1885,1297,1434,1923,1694,1571,1523,1290,1451,1802,1614,1601,1792,1599,1552,1577,1578,1533,1550,1514,1688,1606,1294,1202,1649,1671,1276,1214,2036,1858,1792,1754,1797,1740,1748,1848,1758,1686,1669,1697,1686,1586,1819,1766,1268,1530,1582,1529,1478,1269,1322,1787,1432,1296,1180,1331,1812,1538,1578,1912,2006,1968,1984,1984,1924,1837,1643,1935,1924,1868,1632,1824,1957,1909,1858,1890,1832,1939,1894,1611,1943,1580,1432,1650,1546,1436,1415,1720,1442,1637,1450,1660,1554,1681,1583,1831,1568,1649,1680,1676,1540,1423,1553,1593,1834,1271,1255,1576,1538,1830,1808,1771,1521,1461,1540,1790,1550,1479,1660,1556,1730,1705,1475,1594,1683,1545,1489,1429,1494,1624,1641,1549,1471,1577,1617,1601,1579,1101,1604,1500,1402,1277,1345,1270,1260,1419,1422,1365,1169,1419,1433,1255,1470,1345,1265,1602,1572,1513,1795,1653,1444,1911,1850,1886,1807,1535,1912,1892,1649,1772,1599,1696,1204,1826,1956,1479,1694,1720,1684,1712,1591,1422,1654,1421,1624,1541,1512,1603,1520,1548,1419,1594,1474,1602,1450,1584,1438,1796,1863,1648,1900,1822,1877,1524,1504,1518,1543,1728,1989,1887,1930,1861,1883,1909,1878,1278,531,472,516,638,689,618,461,732,1623,1979,1986,1958,1973,1967,1963,1972,1931,1736,1647,1617,1663,1779,1575,1783,1533,1560,1584,1601,1704,1485,1491,1456,1373,1493,1369,1555,1523,1326,1130,1374,1397,1509,1471,1410,1343,1631,1451,1584,1412,1434,1370,1422,1443,1425,1368,1402,1841,1753,1807,1872,1873,1899,1808,1726,1825,1671,1706,1768,1794,1848,1734,1734,1683,1271,827,802,858,1367,1695,1750,1613,1643,1691,1573,1481,1645,1772,1663,1655,1694,1657,1814,1789,1876,1618,1786,1520,1601,1774,1751,1647,1506,1919,1541,1852,1813,1874,1544,1864,1821,1867,1076,1063,956,1089,1063,1083,1015,1057,1617,1560,1570,1516,1592,1558,1545,1516,1676,1439,1493,1672,1632,1382,1025,1059,1103,1264,1443,1474,1774,1712,1486,1145,1349,1511,1221,1141,1549,1620,1374,1589,1610,1524,1574,1623,1592,1247,1089,783,1045,561,971,702,834,1488,1419,981,498,907,543,767,542,539,925,692,884,501,846,628,762,604,519,928,683,917,541,796,728,734,723,473,823,606,827,278,398,289,258,602,270,657,261,551,232,231,444,153,509,40,510,184,429,243,231,1353,1417,1451,1171,1227,1249,1416,982,982,975,1005,944,961,983,967,1492,1382,1396,1411,1487,1514,1360,1365,1549,1464,1490,1511,1606,1602,1512,1521,1487,1598,1417,1433,1376,1398,1457,1408,1439,1481,1443,1384,1390,1418,1191,920,949,932,1123,931,929,938,1029,944,905,946,927,1441,1406,1399,1385,1232,920,947,938,1261,1608,1589,1582,1630,1484,1566,1565,1596,1638,1338,1366,1310,1296,1295,1289,1311,1495,1572,1493,1428,1443,1105,1312,1210,1553,1630,1721,1582,1520,1572,1829,1743,1792,1494,1265,1222,1483,1416,1526,1189,1146,1518,1430,1635,1427,1506,1432,1418,1728,1694,1617,1679,1528,1666,1626,1655,1777,1567,1705,1648,1648,1563,1647,1655,1539,1680,1654,1607,1656,1509,1617,1639,1663,1621,1603,1694,1699,1675,1562,1682,1664,1571,1771,1644,1636,1643,1701,1795,1623,1626,1628,1831,1694,1678,1695,1684,1788,1627,1692,1616,1363,972,940,962,1270,1496,1535,1525,1550,1382,1333,1332,1334,1269,1177,1237,1195,1399,1245,889,999,1275,1218,1205,1088,1065,1271,991,922,882,1585,1517,1501,1547,1543,1501,1521,1546,1603,1493,1404,1383,1377,1370,1383,1372,1377,1670,1553,1534,1547,1584,1536,1529,1533,1542,1765,1604,1601,1655,1632,1587,1594,1665,1785,1467,1440,1404,1375,1469,1447,1407,1419,1875,1766,1712,1683,1747,1747,1703,1689,1893,1761,1719,1699,1655,1730,1688,1671,1675,1520,999,1227,1062,1136,1095,1181,1195,1136,1077,986,872,643,710,675,1413,1687,1728,1708,1680,1748,1718,1741,1676,1928,1739,1691,1634,1713,1661,1747,1711,1861,1789,1768,1787,1721,1811,1751,1805,1728,1879,1712,1708,1621,1683,1685,1714,1676,1765,1411,1499,1409,1503,1202,1004,1003,1007,1739,1819,1811,1820,1665,1856,1792,1830,1832,1501,1165,1222,1461,1622,1034,1043,1138,1756,1633,1608,1575,1547,1687,1608,1594,1631,1639,1486,1413,1416,1381,1479,1414,1407,1480,1719,1442,1629,1479,1467,1447,1469,1417,1702,1603,1606,1598,1559,1598,1623,1586,1737,1520,1452,1446,1444,1465,1443,1414,1506,1652,1815,1828,1851,1677,1854,1779,1825,1848,1667,1650,1612,1698,1536,1647,1596,1635,1655,1491,1445,1453,1391,1544,1473,1457,1458,1868,1825,1834,1890,1686,1852,1814,1863,1702,1681,1644,1608,1593,1648,1654,1611,1669,1624,1456,1436,1447,1417,1480,1426,1465,1542,1844,1788,1894,1830,1755,1818,1818,1878,1425,810,1785,754,687,1180,652,867,1001,699,1282,1266,634,701,974,1337,1027,1283,1393,1242,645,1174,1334,1099,1353,1127,1707,1094,1191,973,1463,1625,1562,1741,1653,1768,1531,1676,1524,1614,1115,789,1423,1509,1567,1026,1010,1011,985,1364,1119,1044,1105,1359,1736,2038,2029,2007,2009,2020,2014,1982,2020,2025,2053,2001,1996,2009,1998,2011,1966,2032,2025,2025,2011,1996,2007,2010,1956,2016,2031,2042,1995,2004,2009,2000,2015,1948,2050,1986,1906,1898,1900,1904,1929,1831,1861,1887,1892,1873,1896,1833,1875,1818,1889,1911,1786,1668,1679,1669,1675,1647,1644,1606,1779,1658,1668,1659,1639,1648,1646,1626,1581,1662,1456,1443,1434,1416,1444,1393,1356,1514,1578,1480,1393,1604,1321,1585,1465,1682,1384,1484,1488,1650,1438,1489,1550,1610,1452,1302,1521,1407,1977,1756,1464,1663,1631,1571,1529,1569,1708,1543,1569,1631,1657,1769,1665,1594,1553,1670,1554,1576,1553,1539,1543,1577,1546,1451,1670,1463,1703,1590,1576,1572,1729,1590,1647,1760,1755,1494,1615,1931,1882,1711,1704,1857,1957,1931,1939,1970,1940,1952,1920,1935,1810,1846,1855,1935,1921,1872,1853,1835,1810,1775,1776,1766,1974,1982,1965,1975,1909,1915,1887,1905,1945,1988,1884,1920,1849,1812,1818,1840,1772,1971,1991,1994,1981,1952,1953,1943,1917,1941,1958,1823,1815,1742,1797,1748,1791,1745,1859,1832,1865,1764,1824,1838,1815,1808,1776,1771,1433,1446,1446,1424,1432,1400,1411,1461,1971,1952,1921,2006,1948,1901,1900,1918,1900,1879,1908,2004,1938,1955,1909,1906,1881,1942,1877,1933,1805,1490,1533,1603,1594,1594,1594,1496,1720,1819,1811,1785,1742,1780,1741,1737,1721,1690,1311,1290,1260,1406,1289,1367,1386,1465,1559,1465,1470,1566,1584,1487,1485,1459,1638,1686,1488,1653,1595,1633,1521,1608,1374,1337,1356,1212,1300,1161,1270,1618,1899,1868,1861,1884,1902,1893,1842,1878,1969,1907,1876,1873,1871,1875,1894,1874,1925,1465,1436,1392,1363,1447,1504,1474,1474,1731,1635,1692,1731,1726,1598,1606,1566,1597,1647,1553,1581,1608,1676,1743,1701,1663,1746,1447,1458,1481,1481,1378,1387,1413,1419,1657,1444,1504,1552,1002,1547,1497,1479,1633,1502,1511,1476,1495,1467,1486,1500,1507,1954,1970,1930,1808,1429,1423,1424,1037,1396,1381,1405,1529,1261,1145,1138,1086,882,1090,1183,1133,1494,1408,1487,1776,1896,1886,1910,1883,1894,1900,1890,1759,1607,1553,1428,1514,1542,819,938,776,856,886,781,797,748,1014,922,919,788,994,963,1014,950,1342,1290,1336,1295,1083,313,518,495,520,217,538,430,1322,1120,747,849,942,1371,729,1314,988,193,205,477,353,1133,1284,1580,1552,1898,1736,1800,1831,1814,1774,1765,1761,1802,1652,1658,1619,1614,1573,1647,1625,1544,1527,1332,1318,1318,1542,1674,1679,1645,1648,1692,1675,1678,1673,1683,1663,1634,1211,1528,1801,1870,1797,1767,1835,1845,1824,1761,1688,1455,1460,1448,1563,1865,1839,1883,1867,1851,1875,1844,1870,1840,1227,1750,1429,1143,1211,1078,1007,2048,2008,1994,1927,1937,1957,1921,1898,1880,1954,1954,1964,1908,1913,1898,1922,1985,1846,1660,1760,1782,1842,1775,1728,1605,1774,2052,2049,2053,2040,2051,2056,2029,2052,2055,2049,2051,2039,2053,2046,2042,2051,2050,1904,1910,1878,1833,1822,1860,1823,1858,1951,1902,1882,1845,1861,1820,1873,1830,1883,1443,1579,765,801,764,705,785,392,822,904,842,447,542,811,881,793,389,684,792,866,632,405,743,841,902,479,560,1183,1011,1235,631,455,1251,1044,1108,508,652,1170,1083,1066,384,885,1123,1045,909,1206,1229,1574,1296,1680,1581,1000,1138,1153,1129,1156,1104,1107,1098,1168,1153,1149,1170,1138,1094,1002,1107,1641,1103,1087,1208,1091,1101,1095,1079,1054,1029,859,1016,1020,928,914,772,877,1401,438,526,507,539,569,484,566,553,474,486,475,523,523,519,556,520,1309,1474,1500,1503,1556,1494,1508,1517,1473,1209,978,970,1292,1698,1413,1385,1318,1342,1432,1715,1638,1656,1670,1607,1608,1654,1660,1680,1738,1468,1484,1521,1472,1500,1500,1464,1646,1001,1115,1250,1349,1320,1275,1317,1085,1351,1445,1421,1456,1547,1511,1556,1532,1631,1499,979,1150,1134,1145,1193,1106,1115,1095,1141,1166,1177,1161,1102,1101,1020,1090,1559,1099,1081,1174,1073,1069,1088,1038,1026,1023,897,1037,1033,866,890,757,875,1401,427,529,502,528,587,480,566,571,446,501,475,519,506,532,577,507,1548,1789,1766,1808,1792,1809,1749,1879,1385,1419,1361,1377,1621,1300,1220,1220,1394,1568,1320,1276,1512,1409,1034,1021,951,1364,1654,1576,1701,1628,1382,1164,1144,1114,1500,1205,1765,1672,1612,1687,1698,1660,1604,1649,1725,1241,1266,1565,1384,1920,1638,2005,1755,1749,1613,1722,1718,1642,1743,1743,1762,1613,1469,1542,1537,1563,1494,1593,1407,1631,1622,1596,1593,1587,1569,1557,1611,1756,1490,1738,1808,1573,1366,1711,1808,1622,1770,1055,1058,1127,1164,1130,1151,1028,1114,1074,1154,1125,1161,1140,1093,1029,1107,1337,935,1247,1125,906,486,1167,1245,1211,963,843,1189,1119,991,427,1216,1208,1145,1008,737,1129,1156,1072,415,1183,1170,1140,890,841,1095,1239,1134,414,1105,1206,1163,883,956,1164,1230,1200,422,1015,1261,1120,871,1548,1115,1082,1182,1069,1068,1073,1050,1044,1010,899,1033,1025,867,888,772,895,1143,1151,1180,1141,534,853,1198,1137,983,1200,1130,1144,1215,1142,1253,1128,1225,1185,1220,1171,1106,1234,1187,1331,1111,1120,1180,1202,1265,1179,1073,1001,1063,1302,1193,989,1019,1138,1350,1104,1009,991,1160,1346,1067,971,1058,1312,1004,435,543,1122,1465,1756,1843,1872,1856,1647,1391,694,497,524,515,582,626,1473,1079,1228,1502,1211,1032,1313,1522,1096,1211,1491,1235,1024,1302,1878,1740,1746,1810,1824,1746,1818,1828,1672,1894,1680,1827,1781,1764,1867,1778,1823,1792,1805,1751,1799,1904,1722,1738,1883,1705,1879,1772,1752,1889,1802,1727,1752,1898,1735,1810,1854,1688,1889,1675,1837,1781,1823,1748,1786,1826,1766,1834,1875,1740,1869,1730,1748,2029,1709,1842,1773,1775,1810,1877,1744,1718,1911,1692,1828,1886,1696,1881,1781,1837,1718,1852,1748,1785,1897,1753,1731,1638,1124,1229,1190,1250,1201,1188,1156,1179,391,796,915,810,432,564,783,877,793,386,723,787,877,629,410,769,862,900,449,1624,972,1142,1110,1155,1183,1119,1102,1113,1149,1127,1160,1186,1096,1131,1047,1100,1533,1461,1657,1050,1100,1140,1113,1099,1090,1061,1027,1000,915,983,1071,963,825,754,888,1362,1447,1402,1472,433,528,501,547,580,486,564,557,457,525,470,520,509,538,555,500,1466,1641,1658,1593,1691,1681,1628,1670,1691,1715,1781,1660,1608,1601,1648,1636,1290,374,857,921,424,306,787,785,2039,2027,2006,2016,2018,1981,1999,1969,2023,2036,2023,2004,2006,2016,2013,1970,2013,1442,1411,1567,1602,1297,1047,1426,1122,1121,1123,1117,1124,1124,1018,97,480,1999,2037,1852,1878,1908,1867,1842,1880,1900,1859,1945,1921,1939,1959,1893,1903,1911,1929,1884,1740,2002,1920,1905,1894,1938,1901,1758,1795,1792,1852,1897,1904,1886,1840,1891,1887,1904,1867,1975,1826,1861,1848,1907,1875,1771,1736,1480,1500,1612,1645,1590,1551,1469,1504,1605,1613,1626,1569,1479,1599,1560,1541,1853,1550,1530,1622,1609,1911,1832,1794,1747,1855,1862,1842,1843,1847,1583,1293,1290,1350,1332,1327,1329,1279,1567,1453,1462,1447,1463,1506,1471,1440,1420,1630,1443,1462,1421,1513,1464,1455,1434,1596,1468,1468,1439,1460,1499,1450,1468,1421,1638,1448,1421,1395,1493,1470,1436,1423,1478,1528,1379,1392,1442,1498,1449,1416,1418,1572,1402,1410,1420,1455,1482,1419,1384,1412,1608,1361,1401,1439,1439,1468,1398,1397,1623,1429,1410,1442,1525,1457,1442,1412,1419,1667,1441,1441,1469,1483,1512,1455,1385,1621,1356,1320,1317,1407,1333,1383,1294,1297,1564,1364,1278,1370,1360,1344,1317,1321,1413,1448,1274,1290,1366,1293,1356,1306,1259,1612,1446,1407,1462,1488,1494,1455,1475,1404,1616,1393,1415,1501,1487,1499,1442,1414,1616,1407,1381,1397,1465,1448,1416,1405,1414,1627,1404,1388,1468,1490,1460,1389,1387,1601,1404,1423,1391,1431,1493,1456,1424,1401,1620,1430,1412,1395,1511,1441,1438,1448,1549,1719,1798,1788,1740,1851,1602,1769,1841,1820,1825,1746,1596,1827,1748,1755,1741,1751,1872,1850,1913,1845,1855,1851,1875,1866,1956,1837,1811,1756,1837,1820,1775,1761,1820,1896,1791,1752,1737,1792,1732,1738,1707,1870,1796,1821,1736,1770,1767,1767,1747,1782,1984,1874,1813,1822,1814,1803,1834,1818,1858,1792,1734,1782,1724,1728,1712,1756,1771,1856,1842,1849,1831,1831,1829,1741,1790,1766,1819,1756,1748,1788,1541,1692,1740,1707,1682,1816,1776,1712,1808,1616,1648,1605,1749,1801,1831,1681,1598,1634,1687,1684,1690,1645,1756,1658,1661,1661,1668,1693,1673,1705,1675,1829,1821,1744,1785,1801,1832,1799,1803,1818,1806,1794,1692,1743,1803,1776,1776,1769,1870,1775,1855,1869,1889,1890,1968,1850,1814,1783,1673,1710,1745,1734,1748,1791,1740,1807,1699,1692,1843,1787,1768,1865,1759,1739,1670,1412,1525,1536,1492,1531,1543,1465,1701,2041,1941,1931,2013,1987,1942,2008,1904,1922,1982,1996,2004,1943,1963,1987,1985,2039,1514,81,38,40,40,318,40,38,40,1105,1820,1813,1833,1848,1811,1835,1790,1857,1643,1457,1435,1429,1455,1419,1428,1449,1711,1831,1831,1774,1797,1769,1801,1769,1799,989,644,40,38,40,318,38,40,38,120,1239,1139,1839,1711,1719,1746,1764,1708,1724,1733,1787,1550,1244,1352,1424,961,1146,1538,1351,1087,1348,1803,1613,1692,77,38,40,38,318,40,38,40,830,1308,1361,1207,1135,1820,1623,1644,1696,1670,1677,1673,1619,1255,40,38,40,325,943,128,223,1515,1854,2032,1626,1652,1623,1637,1675,1685,1721,1729,1677,1759,1734,1747,1715,1714,1700,1658,1775,973,1240,40,1454,1804,1724,1723,1766,1737,1781,1696,1801,1818,1836,1886,1906,1780,1899,1787,1824,1948,1853,1605,1689,1683,1750,1813,1808,1681,1886,1821,1944,1794,1960,1776,1989,1783,1951,1793,1240,1171,1107,980,1313,1403,1314,1352,1361,1375,1153,1144,1090,1141,1143,1274,1550,679,874,917,1091,1482,1674,980,711,740,843,1555,1657,1754,1406,879,1397,1701,1226,1162,882,833,926,645,612,977,1298,1331,1166,1276,1344,1389,1387,1288,1566,1916,1907,1899,1848,1860,1893,1905,1895,1843,1922,1912,1960,1835,1878,1903,1951,1048,922,936,957,1774,1984,1591,1975,1736,1080,1240,1199,1414,1981,2018,2023,2011,1918,1923,1889,1864,1981,2046,2041,2031,1985,1791,1769,1863,1840,1809,1807,1726,1788,1890,1980,1938,1913,1993,1445,1295,1315,1701,1202,1230,1276,1295,1325,1191,1272,1263,1741,1242,1224,1196,1569,1448,743,877,1720,1655,812,789,1542,1574,880,754,1152,1257,1432,1402,1369,1774,1759,1771,1839,1774,1835,1773,1883,1809,1816,1686,1664,1661,1780,1756,1805,1810,1762,1495,1422,1418,1479,1572,1449,1385,1437,1599,1537,1419,1478,1637,1516,1481,1504,1575,1974,1987,1946,1921,2016,1998,1964,1977,2011,1768,1763,1744,1780,1679,1548,1551,1593,1949,1899,1773,1891,1909,1785,1809,1813,1895,1916,1878,1865,1915,1837,1813,1766,1835,1906,1314,1503,1218,1406,1250,1211,1674,1159,1184,1240,1234,1689,1067,1242,1433,1874,1779,1766,1769,1870,1783,1788,1777,1820,1846,1836,1809,1815,1273,863,799,755,1048,1163,1177,1146,1304,1138,1232,1131,1216,1337,1408,1364,1309,1731,1848,1870,1847,1891,1846,1852,1857,1844,1944,1891,1931,1902,1934,1919,1932,1948,1889,1842,1865,1824,1735,1831,1780,1700,1648,1554,1886,1824,1849,1897,1878,1815,1931,1826,1472,1390,1481,1515,1522,1666,1751,1543,1557,1704,1606,1708,1680,1742,1752,1787,1843,1897,2053,2048,1908,1997,1965,1998,1955,2029,1944,1953,1910,1785,1114,1353,1354,1095,1807,1802,1750,1750,1683,1562,1585,1590,1632,1803,1781,1778,1796,1813,1797,1805,1760,1765,1689,1699,1686,1610,1740,1838,1795,1555,1092,1096,1000,1305,1166,897,897,1004,1280,933,1252,875,1291,534,735,483,860,775,741,738,738,863,1217,1288,1105,1164,1331,1439,1355,1396,1377,1407,1705,1531,1296,1510,1619,1424,1553,1731,1591,1676,1185,210,226,212,727,475,482,417,537,2012,2027,2046,2040,2044,2045,2043,2021,2039,1974,1935,1955,1913,1896,1947,1928,1902,1608,1387,1388,1477,1385,1151,1168,1142,1199,1389,1409,1468,1407,1854,1824,1823,1866,1899,1823,1784,1810,1890,1814,1758,1741,1794,1662,1737,1763,1732,1524,1418,1520,1433,1453,1430,1525,1531,1501,1869,1882,1840,1902,1425,1226,1269,1233,1729,1817,1786,1804,1783,1451,1369,1543,1422,2041,2030,2038,2018,2027,2005,1985,1989,1868,1502,1498,1481,1621,1677,1657,1666,1663,2037,1973,1990,1981,1925,1729,1713,1733,1890,2050,2051,2055,2055,1308,1265,927,545,536,534,764,1384,1419,1429,1235,1169,1552,1516,1242,1395,1582,1449,1572,1447,1498,1724,1666,1890,1829,1483,1195,1363,1201,1289,940,1019,980,1205,967,860,921,1025,1429,1977,1971,1959,1936,2040,1993,1982,2002,1892,1495,1519,1642,1759,1634,1692,1668,1695,1712,1487,1561,1617,1807,1615,1739,1635,1668,1561,1665,1521,1480,1475,1624,1524,1424,1950,1890,1860,1860,1868,1908,1855,1878,1908,1573,1505,1440,1768,1947,1988,1996,1999,1936,1797,1797,1816,1848,1880,1906,1910,1789,1411,1448,1392,1342,1542,1505,1512,1468,1527,1607,1740,1678,1563,1498,1583,1492,1555,1725,1750,1631,1756,1677,1728,1676,1761,1649,1676,1517,1704,1674,1672,1527,1675,1645,1551,1546,1581,1563,1385,1730,1479,1744,1561,1457,1556,1522,1522,1500,1519,1688,1521,1340,1307,1384,1536,1607,1813,1445,1577,1551,1534,1748,1740,1636,1638,1517,1245,1160,1231,1281,1371,1206,1363,1775,1318,1411,1364,1287,1113,1157,1263,1190,1365,1448,1417,1344,1507,1488,1163,1284,1753,1679,1849,1586,1346,1054,1019,903,897,1095,1187,1271,1294,1478,1660,1547,1687,1929,1277,1253,927,1044,909,653,1023,1233,1286,1170,1256,1271,1297,1508,1721,1763,1921,1769,1782,1786,1685,1324,1243,1197,1361,1298,1359,1330,1216,1256,1277,1263,1281,1421,1768,1653,1695,1521,1477,1494,1744,1578,1640,1309,1219,1152,1296,1270,1237,1448,1419,1789,1453,1284,1347,1198,1177,1166,1300,1424,1699,1733,1659,1616,1409,1402,1406,1402,1768,1514,1369,1273,1233,1285,1165,1241,1432,1737,1655,1740,1689,1517,1676,1654,1476,1694,1560,706,249,1324,1569,738,244,1250,1560,748,244,1262,1562,747,257,1265,1551,769,252,1198,1561,758,244,1054,1242,1259,1290,1380,1279,1303,1318,1294,1392,1240,1338,1254,1440,1306,1310,1301,1356,1577,1230,1229,1279,1199,1297,1275,1264,1207,1541,1207,1185,1191,1246,1215,1174,1195,1382,1322,1276,1222,1276,1257,1282,1240,1260,1757,1714,1791,1704,1681,1658,1718,1679,1683,1228,1376,1287,1400,1329,1383,1246,1416,1354,1363,1360,1360,1357,1443,1349,1390,1892,1678,1578,1586,1658,1580,1525,1448,1275,1369,1403,1461,1579,1519,1435,1505,1715,1886,1691,1589,1600,1674,1566,1517,1476,1249,1363,1374,1461,1566,1525,1436,1498,1731,1897,1688,1615,1573,1652,1558,1544,1456,1245,1387,1360,1441,1578,1508,1453,1508,1696,1917,1670,1603,1583,1660,1557,1565,1512,1299,1419,1342,1420,1542,1488,1492,1515,1665,1881,1277,1224,1118,910,898,988,1068,947,1122,1256,1232,1203,979,937,1068,1052,1364,1408,1216,1115,959,896,961,1074,938,1116,1208,1266,1214,990,955,1020,1076,1203,2029,1928,1911,1960,1968,1991,1942,1934,1873,1819,1778,1845,1890,1924,1939,1945,1953,1443,1980,1920,1974,2023,2012,1926,1964,1992,1835,1757,1776,1773,1771,1771,1822,1759,1731,1768,1753,1784,1768,1622,1847,2009,1940,1858,1874,1928,1949,1313,859,1067,1934,1962,1999,1967,1940,1993,1977,1970,2020,1953,1958,1979,1957,1989,1958,1957,1972,1682,1546,1587,1562,1573,1558,1566,1581,1738,1768,1615,1707,1552,1785,1820,1831,1817,1816,1547,1536,1556,1510,1722,1674,1734,1588,1791,1619,1713,1696,1816,1820,1832,1857,1896,1743,1644,1684,1574,1873,1812,1833,1795,1849,1520,1646,1551,1555,1664,1698,1739,1659,1743,1732,1754,1765,1790,1556,1675,1675,1792,1543,1620,1843,1572,1754,1731,1791,1601,1687,1570,1728,1683,1545,1520,1769,1631,1692,1045,1769,1923,1653,1152,1915,1897,1462,1488,1513,2009,2004,1996,1544,1269,1063,1236,1330,1195,1646,1598,1566,1460,1423,1492,1517,1533,1661,1253,1157,903,921,1135,1235,1019,1011,1146,1095,1906,1748,1875,1833,1823,1816,1846,1774,1911,1756,1547,1715,1643,1731,1744,1698,1779,1873,1819,1870,1863,1824,1841,1799,1819,1924,1764,1570,1712,1672,1725,1752,1780,1713,1822,1817,1908,1819,1884,1795,1930,1788,1950,1946,1869,1995,1936,1894,1960,2017,1921,1944,1814,1726,1816,1783,1815,1810,1849,1850,1617,1512,1286,1450,1550,1692,1505,1124,1246,1065,911,344,380,1404,1268,1315,1255,1459,1349,1267,1394,1289,1442,1361,1290,1334,1288,1423,1360,1308,1388,1324,1461,1663,926,1607,1381,1911,1936,1994,2044,2012,2014,1986,1912,1969,1645,1557,1525,1514,1721,1596,1760,1734,1732,1725,1759,1606,1753,1551,1602,1653,1635,1634,1819,1915,1884,1773,1580,1791,1888,1933,1925,1830,1634,1813,1872,1933,1810,1781,1640,1934,1921,1905,1863,1596,1852,1927,1910,1921,1895,1628,1772,1874,1870,1861,1731,1076,977,1015,985,1546,1525,1619,1577,1651,1613,1712,1633,1586,1696,1746,1673,1753,1729,1618,1685,1627,1653,1671,1721,1922,1727,1744,1728,1646,1795,1698,1610,1761,1643,1812,1608,1635,1700,1591,1563,1946,1906,1872,1890,1939,1920,1864,1683,1751,1639,1700,1853,1925,1880,1880,1938,1898,2026,1902,1955,1945,1920,1789,1762,1773,1818,1927,1933,1881,1876,1920,1864,1902,1856,1520,1400,1360,1534,1626,1648,1619,1610,1945,1868,1853,1842,1877,1824,1847,1885,1856,1883,1905,1927,528,552,514,1182,1084,1045,1374,1222,1268,1210,1737,1648,1626,1603,1775,1507,1660,1730,1436,1618,1568,1424,1273,1383,1617,1700,1672,1755,1680,1728,1683,1599,1668,1383,1453,1474,1451,1532,1463,1528,1421,1495,1388,1427,1363,1795,1808,1832,1895,1857,1862,1863,1827,1891,1822,1819,1864,1912,1882,1856,1867,1877,1962,2027,1942,1898,1914,1903,1937,1930,1907,1922,1922,1911,1847,1869,1888,1884,1844,1712,1422,1446,1728,1635,1590,1624,1623,1626,1635,1611,1606,1773,1647,1642,1676,1641,1631,1632,1642,1745,1641,1644,1639,1643,1618,1631,1659,1637,1986,1866,1878,1843,1888,1859,1846,1867,1924,1821,1854,1826,1845,1833,1847,1830,1838,1939,1864,1836,1885,1870,1864,1842,1858,1918,1420,1399,1434,1390,1303,1452,1482,1527,1361,1332,1520,1457,1456,1389,2005,1885,1808,1777,1820,1868,1850,1899,1931,1582,1846,1704,1673,1701,1672,1763,1602,1711,1658,1718,1693,1800,1723,1769,1655,1693,1634,1873,1818,1861,1801,1547,1908,1858,1875,1819,1892,1608,1778,1758,1768,1829,1748,1612,1778,1672,1724,1813,1579,1792,1737,1730,1716,1827,1629,1717,1645,1607,1709,1709,1181,1204,1272,1202,1294,1273,1113,1547,1635,1553,1527,1661,1588,1575,1516,1634,1527,1562,1575,1630,1846,1881,1942,1869,1899,1947,1445,1386,1685,1768,1806,1814,1704,1696,1471,1622,1749,1707,1770,1337,1314,1655,1842,1881,1490,1449,1601,1359,1626,1547,1434,1648,1488,1501,1483,1532,1460,1571,1571,1334,1552,1491,1606,1486,1455,1521,1674,1545,1495,1490,1354,1496,1474,1613,1846,1864,1846,1805,1836,1810,1776,1681,1665,1593,1830,1701,1777,1755,1684,1764,1765,1659,1915,1920,1818,1847,1905,1782,1893,1715,1706,1721,1694,1702,1781,1771,1568,1781,1771,1752,1620,1848,1662,1745,1780,1649,1661,1674,1691,1676,1898,1663,1700,1656,1786,1669,1762,1671,1649,1788,1765,1433,1302,1721,1769,1653,1718,1734,1499,1490,1590,1520,1487,1434,1562,1503,1509,1722,1766,1665,1747,1748,1671,1713,1727,1599,1667,1682,1554,1749,1614,1623,1640,1697,1667,1634,1586,1686,1624,1658,1642,1686,1660,1622,1658,1611,1693,1634,1641,1621,1711,1615,1644,1647,1703,1632,1639,1610,1598,1748,1611,1717,1758,1752,1624,1615,1633,1707,1604,1651,1685,1723,1741,1623,1614,1640,1727,1726,1890,1723,1658,1679,1818,1727,1673,1717,1863,1799,1655,1961,1861,1877,1983,1990,1940,1949,1950,1956,1764,1840,1949,2009,2012,1995,1959,1811,1976,1775,1801,1971,2015,2026,2011,2015,1988,1892,1937,1917,1904,1910,1896,1941,1952,1879,1810,1899,1913,1873,1834,1684,1620,1721,1902,1802,1729,1599,1621,1626,1634,1578,1719,1422,1373,1326,1416,1410,1555,1475,1329,1423,1536,1526,1362,1419,1539,1488,1438,1574,1697,1712,1769,1682,1678,1750,1802,1693,1686,1702,1733,1727,1660,1659,1699,1678,1695,1681,1705,1653,1639,1750,1710,1657,1651,1737,1621,1646,1665,1846,1891,1891,1906,1916,1895,1903,1889,1900,1865,1796,1769,1795,1986,2014,1992,2049,2043,2039,2038,2011,2029,2047,2040,2047,2047,2057,2051,2024,2037,2022,1851,1835,1885,1914,1921,1881,1867,1883,1613,1443,1488,1462,1658,1653,1554,1514,1624,1575,1566,1689,1462,1425,1600,1610,1535,1557,1643,1436,1423,1508,1523,1751,1910,1799,1696,1711,1562,1966,1865,1885,1830,1783,1789,1707,1828,1837,1679,1765,1995,1983,1997,1885,1908,1921,1600,1673,1749,1712,1751,1759,1818,1714,1673,1789,1671,1704,1684,1375,1584,1521,1516,1488,1543,1509,1518,1499,1556,1515,1517,1521,1558,1479,1510,1507,1484,1431,1308,1311,1257,1442,1936,1942,1906,1879,1946,1955,1936,1949,1726,1320,1294,1318,1335,1340,1301,1329,1563,1489,1488,1476,1626,1638,1534,1613,1520,1812,1636,1679,1699,1396,1736,1631,1656,1774,1432,1219,1266,1293,1287,1306,1264,1252,1493,1271,1007,1101,1080,1265,1144,1066,1285,1476,1301,1279,1218,1244,1206,1306,1345,1523,1436,1297,1325,1362,1332,1319,1295,1368,1884,1519,1666,1746,1686,1556,1484,1324,1966,1929,1283,1138,1199,1198,1283,1074,1800,1955,1918,1513,1785,1827,1825,1724,1636,1951,730,533,551,467,526,484,537,376,923,392,1323,1389,1412,1315,1148,972,439,893,798,1381,1485,1482,1483,1388,814,1084,1101,1340,1435,1152,1422,1310,1273,1199,1879,1769,1727,1750,1607,111,287,1185,657,596,670,553,533,643,653,568,1278,831,1109,1396,1393,1408,1394,1416,1627,1565,1679,1573,1572,1546,1683,1811,1496,1025,1083,1229,1232,1346,1238,1270,1285,1437,1559,1599,1662,1690,1510,1353,1446,1291,594,25,30,25,753,580,1390,580,1620,1619,1678,1597,1645,1124,1679,1536,1565,1545,1792,1910,1939,1904,1957,1898,1369,892,1334,1508,1148,978,1027,1223,1375,1423,1487,1481,1561,1553,1691,1741,1659,1580,1562,1524,1587,1604,1513,1559,1851,2048,2055,2023,1983,1844,2012,2013,1884,1762,1942,1893,1963,2008,2040,2002,2033,1999,2022,1986,2042,2055,1930,1722,1931,1997,2007,2003,1839,1674,1503,1225,1190,1195,1657,1996,1854,1727,1794,1905,1877,1762,1782,1756,1907,1931,1976,1949,1961,1984,1967,2003,1758,1526,1539,1551,1525,1541,1558,1525,1457,1390,1322,1334,1294,1308,1346,1325,1694,2006,2003,2000,1975,2007,1947,1950,1982,2007,1773,1711,1646,1675,1685,1679,900,266,721,1317,1269,1247,957,1012,890,1069,1361,1663,1674,1604,1740,1730,1630,1525,1616,1546,1609,1550,1583,1485,1478,1209,1260,1086,1268,1207,1281,1266,1402,1388,1594,1575,1578,1446,1418,1421,1076,1009,1260,1596,1400,625,1314,1269,1402,1538,1474,1503,1399,1155,1396,1454,1545,1725,1761,1863,1802,1799,1748,1550,1649,1593,1654,1574,1609,1501,1562,1484,1382,1284,1435,1540,1530,1367,1378,1378,1396,1358,1033,465,670,469,1043,1442,1562,1540,1491,1421,1534,1543,1512,1377,1279,1134,1222,1325,1437,1512,1245,1055,681,264,1292,1759,1900,1785,1716,1569,1212,1052,1281,1551,1566,1567,1579,1579,1563,1548,1806,1741,1827,1721,1865,1755,1901,1734,1630,1395,1424,1388,1422,1416,1544,1702,1670,1549,1532,1472,1499,1524,1505,1495,1744,1925,1709,1566,1014,728,992,870,1184,1572,1646,1669,1689,1469,1629,1258,1260,1293,888,519,928,796,783,617,1116,1398,1088,546,641,511,1309,1789,1458,1078,1120,1017,1289,1389,1309,1080,1002,903,1297,1436,1472,1435,1429,1443,1618,1689,1773,1650,1849,1879,1747,1556,1258,1035,1286,1155,1209,999,1112,862,1201,1004,1251,1222,990,482,629,631,704,529,596,624,676,507,616,626,700,563,650,617,658,424,561,570,1404,1870,1502,1034,1158,1031,1156,1033,1177,1124,1554,1782,1587,1720,1685,1671,1656,1711,1396,1163,1518,1670,1684,1710,1834,1857,963,247,392,292,328,193,343,225,324,53,273,25,210,146,301,316,348,270,929,1494,1523,1677,1363,1083,1040,1103,1145,1199,1437,1481,1509,1436,1749,1854,1841,1697,1683,1342,1658,1615,1557,1368,1421,1274,1283,1775,1536,1409,1387,1552,1442,1502,1500,1274,1355,1447,1432,1449,1549,1506,1496,1175,1212,1237,1432,1200,1242,1334,1097,1041,1090,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2053,1919,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,2048,1865,2048,2048,2007,2048,2048,2011,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2014,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,1930,2048,2048,2057,2048,1934,2048,1996,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2055,2048,2048,2042,2004,1841,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2056,1944,1923,2048,2048,2048,2048,2048,1955,1950,2048,2048,2048,2053,2042,1925,1989,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2056,1952,1875,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2048,2056,2055,2029,1958,1763,2048,2002,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2048,2051,1979,1978,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1914,2048,2048,2048,2048,1984,2048,2048,2048,2053,1983,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,2048,2048,2048,2010,2057,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2005,2048,2006,2048,2006,2048,2010,2048,2004,2022,1826,2002,2048,2048,1951,1890,1994,2053,2048,1991,1900,1939,2042,2048,2020,1845,1984,2047,2048,2033,1927,1920,2020,2056,2046,1958,1926,1983,2056,2056,1985,1899,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2004,2048,2048,2048,2048,2005,2048,2003,2007,2048,2003,2007,2048,2048,2048,2048,2007,2048,2048,2048,2048,2011,2005,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2004,2048,2001,2005,2048,2002,2048,2048,2003,2048,2048,2002,2048,2000,2048,2002,2048,2001,2048,2018,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2007,2048,2048,2048,2007,2048,2048,2048,2048,2007,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2048,2003,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2044,2020,1846,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,2048,2054,2048,2051,2007,2020,1978,1818,1903,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1947,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,1950,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2013,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2010,2048,2048,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2057,2048,2001,2000,2048,2011,2048,2048,2007,2048,2007,2048,2048,2000,2048,2002,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2011,2048,2004,2048,2004,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2008,2048,2048,2000,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2048,2048,2048,2048,2048,2046,2016,1894,1837,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,2048,2048,2052,2046,2015,1759,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2049,2013,1907,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2052,1805,2048,2048,2048,2048,2048,2048,2008,2005,2011,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,1950,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,1983,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2053,2048,2048,2020,1880,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2048,2055,2056,1911,1970,2048,1999,2048,2001,2006,2048,2005,2048,2048,2048,2048,2053,1999,1985,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2004,2009,2005,2006,2048,1948,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2022,2048,2048,2048,2048,2048,2004,2055,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2010,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2006,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2010,2048,2048,2048,2048,2048,2048,2056,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2011,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,1954,2048,2048,2048,2007,2048,2048,2048,2009,2009,2048,1998,2006,1886,2003,2005,2048,2002,2048,2048,2048,2048,2048,2048,2048,2054,1997,1952,1732,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2017,1874,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2003,2048,2048,2048,2048,2000,2048,2048,2056,2056,2053,1928,2048,2048,2048,2048,2055,1975,1863,2053,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1920,2042,2056,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2009,2048,2048,2048,2048,2048,2048,2048,2048,2048,1988,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2050,2000,2048,2048,2048,2002,2048,2048,2048,2048,2001,2052,2048,2048,2004,1932,1945,2048,2048,2048,2003,1998,1895,1987,2048,2048,2048,1981,2048,2048,1996,2048,1994,2048,2048,2050,2048,1981,2048,2038,1981,1970,2048,1987,2048,2048,2048,1946,2048,2004,2048,2048,2048,1995,2048,2006,2008,2048,1877,1920,2048,2048,2048,1992,2048,2048,2048,2048,2048,2048,1848,2048,2048,2048,2048,2048,2048,2001,2000,2048,2048,1941,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,1925,2048,2048,2048,1782,1261,1136,1249,1721,1353,1381,1859,1328,961,1200,1120,1373,1430,1434,1479,1472,963,812,877,218,25,559,1851,1783,1908,1890,1446,1232,1292,1264,1017,954,1068,985,1406,1604,1662,1595,1713,1643,1693,1624,1689,1707,1690,1603,1693,1709,1691,1677,1694,1671,1684,1678,1666,1691,1612,1655,1679,1726,1641,1654,1021,1368,1494,1632,1676,1888,1884,1887,1941,1311,1161,1382,1014,1489,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2014,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,1754,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2056,2057,2048,2048,2048,2056,2048,2054,2056,2053,2020,2038,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2055,2056,2048,2048,2048,2054,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1932,1941,2001,1935,2048,1998,2048,1993,1997,2003,2005,1986,2048,1931,2002,2000,1936,2048,2048,2000,2048,1999,2048,2004,2048,2000,2048,2000,1986,1998,2048,1993,1957,2048,1984,2048,1949,2047,1995,2039,2019,1999,2020,2025,1973,1920,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,1932,2048,2048,2048,2048,2048,2048,2048,2048,1989,1995,2048,2048,2048,2048,2048,1995,1995,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,1928,2048,2048,2048,2048,2048,1994,2048,2048,2048,2007,1999,2048,2003,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,1997,1939,2048,2048,2048,2048,2048,2048,1996,1931,1949,1999,2048,1988,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1992,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2057,2003,2048,1997,2048,2048,2048,2030,2018,2048,2007,2048,2048,1943,2048,2048,2002,1880,1584,2048,2001,2048,2000,2048,1996,2001,2048,1994,1995,1998,1938,2048,2005,2048,2005,2048,2005,2048,1994,2038,1977,2048,2001,2048,2048,1993,2048,1996,2048,1995,2048,1998,2048,2005,2048,2003,2048,2048,2048,2048,2048,2048,1998,2048,2002,2048,2003,2048,1999,2048,2001,2048,1995,2003,2001,2048,1999,2004,2045,1971,2048,2048,2048,2002,2048,2048,1997,2048,2048,2000,2048,2048,1998,2048,2048,2012,2048,1997,2048,2002,2048,2048,1995,2048,1995,2048,1999,2048,2048,1997,2048,2048,1996,2048,1995,2048,1997,2048,1997,2005,2048,1998,1940,1859,2053,2048,2048,1995,2048,2048,1993,2048,1995,2048,1998,2048,2000,2048,2048,1997,2048,1996,2048,2048,1999,2048,2048,2010,1930,1874,2048,2048,2048,2048,1996,2048,2048,2048,2048,1996,1939,2048,1937,1993,2048,2002,1999,2048,2048,2048,1999,2048,2048,2048,2048,2048,1999,1923,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,1996,1906,2048,1999,2048,2048,1996,1932,2048,2048,1995,2048,1998,2048,1999,2048,1939,1996,2000,2048,1995,2000,2001,2048,1999,1999,2022,1989,1952,2048,1977,2048,1995,1995,2048,2048,2048,1994,2048,2048,2048,2048,1998,1980,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1992,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2022,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2003,2048,2048,2048,2048,1996,1999,2048,1999,2000,2048,1999,2048,1998,1995,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2004,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1987,2048,2048,1997,2048,2007,2048,2005,2048,1999,2048,1999,2048,1928,1985,2048,2048,1994,2048,2002,2048,2003,2048,2048,2000,2048,2048,1993,2048,1995,2048,2048,1996,2055,2048,1933,2048,2048,1998,2048,2000,2048,2001,2048,2048,1998,2048,2000,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2002,1742,1928,2048,2000,2048,2048,1997,2048,1996,2048,1995,2048,1995,1999,2048,2004,1936,2048,2001,2048,1998,1979,2048,2006,2004,1995,2048,1995,2030,1953,2048,1999,2048,2048,1999,2048,1996,2048,2048,1993,2048,1995,2048,1998,2048,1982,2048,1994,2048,1995,2001,2048,1997,1991,1932,1943,2048,2048,1995,2048,1995,2002,2048,1999,2003,2048,1999,2000,2030,2045,1997,2048,2003,2048,1998,2048,2003,2048,2048,1999,2048,2003,2048,1936,1997,1999,2048,1998,2002,2048,1992,1999,1997,2048,1999,1995,1999,2048,2002,2048,1998,2048,1996,2000,2048,2007,2048,2048,2048,1992,2048,2048,2003,2048,1998,2048,2048,2002,2048,2048,2000,2048,2001,1993,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,1999,1998,2048,1966,2048,2048,2048,1995,2048,2005,1852,1850,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2001,2048,2048,2048,2048,1336,1993,2048,2048,2048,2048,1999,1963,2047,2048,2048,1997,2048,2048,2048,2048,1896,2048,2048,2001,2048,2048,1996,2048,1997,2048,1999,2048,2048,1999,2048,1999,2048,2048,1998,1996,2048,2048,2048,1999,1998,2048,2048,2004,1805,2048,2006,2002,1944,2000,1942,2048,2048,2048,2048,1993,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,1996,2048,2001,2048,1975,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1994,2048,2048,1994,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,1995,2048,1996,2048,2048,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1952,1998,2048,2048,2048,2048,1991,2048,2001,2048,2048,1887,1640,2048,1996,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,1987,2048,2048,2048,2048,1997,2048,2048,2048,1972,2048,2048,2048,2048,2048,2046,1875,2048,1994,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,1996,2048,2001,2048,2048,1997,2048,2048,2041,1836,2048,2048,1860,2048,2048,1754,1909,2048,2048,2048,2050,2038,1998,2048,2048,2048,2022,2051,2048,2048,2048,2048,2048,2048,2048,2001,2048,2048,2048,2048,2056,2048,2048,2050,1988,2048,2048,1989,2048,1998,2003,2057,2048,2048,1953,2048,2048,2048,2048,2048,2001,2048,1969,2038,2048,2048,1991,2048,2048,1994,2048,1991,2048,2001,2048,2048,2048,2048,2048,2048,1997,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2056,1937,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,1998,2048,1997,2048,2048,2048,1801,2048,2048,1836,1936,2048,2048,2048,2048,1991,2048,1975,2048,2048,1985,2048,1990,1994,1818,2048,1817,2048,2048,2048,1959,2048,2048,2048,2048,2048,2048,2056,1934,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2007,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2054,1814,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1993,2048,2048,2048,2048,2048,2048,1997,2048,2048,2002,2048,2048,2002,2048,2048,2048,2044,2056,2006,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1998,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2048,1999,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2002,2048,2048,2048,2048,2048,2048,2048,2003,2048,2048,1998,2048,2048,2001,2001,1936,1854,1929,2048,2048,2048,2048,1809,2056,2048,2048,2048,2048,1808,2048,2048,2048,2048,2048,1897,2048,2048,2001,2048,2048,2048,2022,1992,2048,2048,2048,2048,2048,2048,2048,2005,2048,2048,2048,2048,2048,2048,2048,2048,1999,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1995,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2000,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1996,2048,2048,2048,1216,1101,1159,1185,980,975,1780,1754,1851,1754,1873,1642,1216,1304,1924,2048,2048,1336,34,34,34,34,34,34,34,34,883,957,1054,1054,1108,979,884,704,957,904,1041,843,1085,998,931,1052,1019,1059,1025,950,831,836,855,986,1064,975,894,869,905,906,931,840,978,880,729,912,1003,1218,998,1013,1222,1303,1287,1281,1237,1287,1508,1337,1413,1348,1389,1162,841,1038,1011,867,927,1082,1041,887,1206,1004,1188,1140,1097,1161,1143,1103,1143,1188,1354,1280,1537,1484,1436,1047,911,829,1760,1915,1884,1888,1877,1794,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1976,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1972,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1979,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1974,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1977,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1975,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,2048,1970,2048,2048,1980,2048,1978,2048,1306,1357,1720,1358,1147,1512,1328,1338],\"successes\":[1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,0,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,0,1,0,1,0,0,1,0,0,1,1,0,0,1,0,0,0,0,1,0,1,1,0,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,1,0,1,1,1,0,0,1,1,1,1,0,1,1,0,1,0,1,0,1,0,1,0,0,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,1,1,1,0,1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,0,1,0,1,0,0,0,1,0,1,1,0,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,1,0,1,1,1,1,0,0,0,1,0,0,0,1,1,1,1,0,0,1,1,1,1,0,1,1,0,0,0,0,1,1,0,0,1,0,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,1,1,0,0,1,0,1,1,1,0,1,0,1,1,1,0,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,0,1,0,0,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,1,1,0,0,1,1,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,0,1,0,1,1,1,0,1,0,0,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,0,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,1,0,1,0,0,1,1,0,1,0,0,0,1,0,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,0,0,0,1,1,1,0,0,1,0,1,1,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,1,1,1,1,1,0,0,1,0,1,0,0,0,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,1,0,0,1,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,0,1,0,1,1,0,1,0,0,0,0,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,1,1,0,1,1,1,1,1,0,1,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,1,1,1,0,0,0,1,1,1,1,0,0,0,1,0,0,1,0,1,0,0,1,0,1,0,1,1,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1,1,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,1,1,0,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,1,1,0,1,0,0,1,0,0,1,1,1,0,1,0,1,0,1,1,0,1,1,1,1,0,1,0,1,0,1,0,1,1,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,1,1,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,1,0,0,1,0,1,0,1,0,1,1,0,1,1,1,1,0,0,1,0,0,1,0,1,0,1,0,1,0,0,1,0,1,0,0,1,0,0,1,1,1,0,0,0,0,1,0,0,0,0,1,1,0,1,1,0,1,1,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,1,1,0,0,1,0,1,0,1,0,1,1,1,0,1,1,1,0,1,1,1,1,1,0,1,0,1,1,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,1,0,1,1,0,1,0,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,1,0,0,1,0,1,0,1,0,0,1,0,0,1,0,1,0,0,1,1,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,1,0,1,1,1,0,1,0,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,1,0,1,1,1,1,0,0,1,0,1,1,0,1,1,0,1,1,1,1,1,0,1,0,1,0,1,0,0,1,0,1,0,1,1,1,0,1,1,0,1,1,1,0,1,1,1,0,1,0,1,0,1,1,0,1,0,0,0,1,0,0,1,0,1,0,0,1,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,1,1,1,0,0,1,0,0,0,0,1,0,0,1,0,0,1,0,1,0,1,0,0,1,0,1,0,0,1,1,0,0,0,1,1,0,0,1,1,0,1,1,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,1,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,1,1,0,0,1,0,0,1,1,0,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1,0,0,1,0,1,1,1,0,0,1,0,0,0,0,0,1,0,1,1,0,0,1,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,1,1,0,0,0,0,1,0,1,0,0,1,0,1,1,1,0,1,0,0,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0,1,1,1,1,1,1,1,1]}\n;\n            compressedData['data'] = byteArray;\n            assert(typeof Module['LZ4'] === 'object', 'LZ4 not present - was your app build with -sLZ4?');\n            Module['LZ4'].loadPackage({ 'metadata': metadata, 'compressedData': compressedData }, false);\n            Module['removeRunDependency']('datafile_/home/jenge/Dev_WSL/EDGE-classic/web/site/edge-classic.data');\n      };\n      Module['addRunDependency']('datafile_/home/jenge/Dev_WSL/EDGE-classic/web/site/edge-classic.data');\n\n      if (!Module.preloadResults) Module.preloadResults = {};\n\n        function preloadFallback(error) {\n          console.error(error);\n          console.error('falling back to default preload behavior');\n          fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, processPackageData, handleError);\n        };\n\n        openDatabase(\n          function(db) {\n            checkCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME,\n              function(useCached, metadata) {\n                Module.preloadResults[PACKAGE_NAME] = {fromCache: useCached};\n                if (useCached) {\n                  fetchCachedPackage(db, PACKAGE_PATH + PACKAGE_NAME, metadata, processPackageData, preloadFallback);\n                } else {\n                  fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE,\n                    function(packageData) {\n                      cacheRemotePackage(db, PACKAGE_PATH + PACKAGE_NAME, packageData, {uuid:PACKAGE_UUID}, processPackageData,\n                        function(error) {\n                          console.error(error);\n                          processPackageData(packageData);\n                        });\n                    }\n                  , preloadFallback);\n                }\n              }\n            , preloadFallback);\n          }\n        , preloadFallback);\n\n        if (Module['setStatus']) Module['setStatus']('Downloading...');\n\n    }\n    if (Module['calledRun']) {\n      runWithFS();\n    } else {\n      if (!Module['preRun']) Module['preRun'] = [];\n      Module[\"preRun\"].push(runWithFS); // FS is not initialized yet, wait for it\n    }\n\n    }\n    loadPackage({\"files\": [{\"filename\": \"/.gitkeep\", \"start\": 0, \"end\": 0}, {\"filename\": \"/edge_base/blasphemer/graphics/NULL.png\", \"start\": 0, \"end\": 1160}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARL.lmp\", \"start\": 1160, \"end\": 3871}, {\"filename\": \"/edge_base/blasphemer/graphics/STBARR.lmp\", \"start\": 3871, \"end\": 6582}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK0.png\", \"start\": 6582, \"end\": 8078}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK1.png\", \"start\": 8078, \"end\": 9168}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK10.png\", \"start\": 9168, \"end\": 10119}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK11.png\", \"start\": 10119, \"end\": 11090}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK12.png\", \"start\": 11090, \"end\": 12362}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK13.png\", \"start\": 12362, \"end\": 13594}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK14.png\", \"start\": 13594, \"end\": 15134}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK15.png\", \"start\": 15134, \"end\": 16101}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK2.png\", \"start\": 16101, \"end\": 17161}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK3.png\", \"start\": 17161, \"end\": 17828}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK4.png\", \"start\": 17828, \"end\": 18392}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK5.png\", \"start\": 18392, \"end\": 19330}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK6.png\", \"start\": 19330, \"end\": 20665}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK7.png\", \"start\": 20665, \"end\": 21295}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK8.png\", \"start\": 21295, \"end\": 22711}, {\"filename\": \"/edge_base/blasphemer/graphics/tome/SPINBK9.png\", \"start\": 22711, \"end\": 23673}, {\"filename\": \"/edge_base/blasphemer/scripts/anims.ddf\", \"start\": 23673, \"end\": 25137}, {\"filename\": \"/edge_base/blasphemer/scripts/attacks.ddf\", \"start\": 25137, \"end\": 64482}, {\"filename\": \"/edge_base/blasphemer/scripts/colmap.ddf\", \"start\": 64482, \"end\": 64765}, {\"filename\": \"/edge_base/blasphemer/scripts/flats.ddf\", \"start\": 64765, \"end\": 65289}, {\"filename\": \"/edge_base/blasphemer/scripts/fonts.ddf\", \"start\": 65289, \"end\": 66373}, {\"filename\": \"/edge_base/blasphemer/scripts/games.ddf\", \"start\": 66373, \"end\": 69259}, {\"filename\": \"/edge_base/blasphemer/scripts/images.ddf\", \"start\": 69259, \"end\": 71088}, {\"filename\": \"/edge_base/blasphemer/scripts/language.ldf\", \"start\": 71088, \"end\": 79342}, {\"filename\": \"/edge_base/blasphemer/scripts/levels.ddf\", \"start\": 79342, \"end\": 91553}, {\"filename\": \"/edge_base/blasphemer/scripts/lines.ddf\", \"start\": 91553, \"end\": 96124}, {\"filename\": \"/edge_base/blasphemer/scripts/lua/edge_hud.lua\", \"start\": 96124, \"end\": 114611}, {\"filename\": \"/edge_base/blasphemer/scripts/playlist.ddf\", \"start\": 114611, \"end\": 116690}, {\"filename\": \"/edge_base/blasphemer/scripts/rscript.rts\", \"start\": 116690, \"end\": 129477}, {\"filename\": \"/edge_base/blasphemer/scripts/sectors.ddf\", \"start\": 129477, \"end\": 133247}, {\"filename\": \"/edge_base/blasphemer/scripts/sounds.ddf\", \"start\": 133247, \"end\": 144162}, {\"filename\": \"/edge_base/blasphemer/scripts/styles.ddf\", \"start\": 144162, \"end\": 149028}, {\"filename\": \"/edge_base/blasphemer/scripts/switch.ddf\", \"start\": 149028, \"end\": 149413}, {\"filename\": \"/edge_base/blasphemer/scripts/things.ddf\", \"start\": 149413, \"end\": 233374}, {\"filename\": \"/edge_base/blasphemer/scripts/weapons.ddf\", \"start\": 233374, \"end\": 243579}, {\"filename\": \"/edge_base/chex/graphics/M_SKULL1.png\", \"start\": 243579, \"end\": 244146}, {\"filename\": \"/edge_base/chex/graphics/M_SKULL2.png\", \"start\": 244146, \"end\": 244894}, {\"filename\": \"/edge_base/chex/graphics/STBAR.lmp\", \"start\": 244894, \"end\": 268436}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT033.lmp\", \"start\": 268436, \"end\": 268553}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT034.lmp\", \"start\": 268553, \"end\": 268686}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT035.lmp\", \"start\": 268686, \"end\": 268937}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT036.lmp\", \"start\": 268937, \"end\": 269264}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT037.lmp\", \"start\": 269264, \"end\": 269527}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT038.lmp\", \"start\": 269527, \"end\": 269619}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT039.lmp\", \"start\": 269619, \"end\": 269777}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT040.lmp\", \"start\": 269777, \"end\": 269935}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT041.lmp\", \"start\": 269935, \"end\": 270095}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT042.lmp\", \"start\": 270095, \"end\": 270215}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT043.lmp\", \"start\": 270215, \"end\": 270290}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT044.lmp\", \"start\": 270290, \"end\": 270368}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT045.lmp\", \"start\": 270368, \"end\": 270442}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT046.lmp\", \"start\": 270442, \"end\": 270633}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT047.lmp\", \"start\": 270633, \"end\": 270860}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT048.lmp\", \"start\": 270860, \"end\": 270998}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT049.lmp\", \"start\": 270998, \"end\": 271242}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT050.lmp\", \"start\": 271242, \"end\": 271489}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT051.lmp\", \"start\": 271489, \"end\": 271695}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT052.lmp\", \"start\": 271695, \"end\": 271939}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT053.lmp\", \"start\": 271939, \"end\": 272178}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT054.lmp\", \"start\": 272178, \"end\": 272376}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT055.lmp\", \"start\": 272376, \"end\": 272603}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT056.lmp\", \"start\": 272603, \"end\": 272842}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT057.lmp\", \"start\": 272842, \"end\": 272930}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT058.lmp\", \"start\": 272930, \"end\": 273036}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT059.lmp\", \"start\": 273036, \"end\": 273197}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT060.lmp\", \"start\": 273197, \"end\": 273289}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT061.lmp\", \"start\": 273289, \"end\": 273450}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT062.lmp\", \"start\": 273450, \"end\": 273644}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT063.lmp\", \"start\": 273644, \"end\": 273865}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT064.lmp\", \"start\": 273865, \"end\": 274066}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT065.lmp\", \"start\": 274066, \"end\": 274269}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT066.lmp\", \"start\": 274269, \"end\": 274495}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT067.lmp\", \"start\": 274495, \"end\": 274691}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT068.lmp\", \"start\": 274691, \"end\": 274849}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT069.lmp\", \"start\": 274849, \"end\": 275074}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT070.lmp\", \"start\": 275074, \"end\": 275301}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT071.lmp\", \"start\": 275301, \"end\": 275412}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT072.lmp\", \"start\": 275412, \"end\": 275603}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT073.lmp\", \"start\": 275603, \"end\": 275809}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT074.lmp\", \"start\": 275809, \"end\": 275971}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT075.lmp\", \"start\": 275971, \"end\": 276259}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT076.lmp\", \"start\": 276259, \"end\": 276482}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT077.lmp\", \"start\": 276482, \"end\": 276705}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT078.lmp\", \"start\": 276705, \"end\": 276875}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT079.lmp\", \"start\": 276875, \"end\": 277104}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT080.lmp\", \"start\": 277104, \"end\": 277318}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT081.lmp\", \"start\": 277318, \"end\": 277522}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT082.lmp\", \"start\": 277522, \"end\": 277681}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT083.lmp\", \"start\": 277681, \"end\": 277902}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT084.lmp\", \"start\": 277902, \"end\": 278098}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT085.lmp\", \"start\": 278098, \"end\": 278415}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT086.lmp\", \"start\": 278415, \"end\": 278617}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT087.lmp\", \"start\": 278617, \"end\": 278787}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT088.lmp\", \"start\": 278787, \"end\": 278987}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT089.lmp\", \"start\": 278987, \"end\": 279205}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT090.lmp\", \"start\": 279205, \"end\": 279396}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT091.lmp\", \"start\": 279396, \"end\": 279614}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT092.lmp\", \"start\": 279614, \"end\": 279797}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT093.lmp\", \"start\": 279797, \"end\": 279877}, {\"filename\": \"/edge_base/chex/graphics/chex_font/FONT094.lmp\", \"start\": 279877, \"end\": 279969}, {\"filename\": \"/edge_base/chex/graphics/credit.lmp\", \"start\": 279969, \"end\": 399257}, {\"filename\": \"/edge_base/chex/graphics/help1.lmp\", \"start\": 399257, \"end\": 518545}, {\"filename\": \"/edge_base/chex/graphics/titlepic.lmp\", \"start\": 518545, \"end\": 637833}, {\"filename\": \"/edge_base/chex/graphics/wimap0.lmp\", \"start\": 637833, \"end\": 757121}, {\"filename\": \"/edge_base/chex/scripts/attacks.ddf\", \"start\": 757121, \"end\": 760323}, {\"filename\": \"/edge_base/chex/scripts/fonts.ddf\", \"start\": 760323, \"end\": 760927}, {\"filename\": \"/edge_base/chex/scripts/games.ddf\", \"start\": 760927, \"end\": 761900}, {\"filename\": \"/edge_base/chex/scripts/language.ldf\", \"start\": 761900, \"end\": 766834}, {\"filename\": \"/edge_base/chex/scripts/levels.ddf\", \"start\": 766834, \"end\": 769818}, {\"filename\": \"/edge_base/chex/scripts/styles.ddf\", \"start\": 769818, \"end\": 772541}, {\"filename\": \"/edge_base/chex/scripts/things.ddf\", \"start\": 772541, \"end\": 779616}, {\"filename\": \"/edge_base/doom/graphics/CREDIT.lmp\", \"start\": 779616, \"end\": 898904}, {\"filename\": \"/edge_base/doom/graphics/ENDPIC.lmp\", \"start\": 898904, \"end\": 1018192}, {\"filename\": \"/edge_base/doom/graphics/HELP1.lmp\", \"start\": 1018192, \"end\": 1137480}, {\"filename\": \"/edge_base/doom/graphics/INTERPIC.lmp\", \"start\": 1137480, \"end\": 1256768}, {\"filename\": \"/edge_base/doom/graphics/PFUB1.lmp\", \"start\": 1256768, \"end\": 1376056}, {\"filename\": \"/edge_base/doom/graphics/PFUB2.lmp\", \"start\": 1376056, \"end\": 1495344}, {\"filename\": \"/edge_base/doom/graphics/TITLEPIC.lmp\", \"start\": 1495344, \"end\": 1614632}, {\"filename\": \"/edge_base/doom/graphics/VICTORY2.lmp\", \"start\": 1614632, \"end\": 1733920}, {\"filename\": \"/edge_base/doom/graphics/WIA20000.lmp\", \"start\": 1733920, \"end\": 1763040}, {\"filename\": \"/edge_base/doom/graphics/WIA20001.lmp\", \"start\": 1763040, \"end\": 1792160}, {\"filename\": \"/edge_base/doom/graphics/WIA20002.lmp\", \"start\": 1792160, \"end\": 1821280}, {\"filename\": \"/edge_base/doom/graphics/WIA20400.lmp\", \"start\": 1821280, \"end\": 1826878}, {\"filename\": \"/edge_base/doom/graphics/WIA20401.lmp\", \"start\": 1826878, \"end\": 1832476}, {\"filename\": \"/edge_base/doom/graphics/WIA20402.lmp\", \"start\": 1832476, \"end\": 1838074}, {\"filename\": \"/edge_base/doom/graphics/WIA20500.lmp\", \"start\": 1838074, \"end\": 1851282}, {\"filename\": \"/edge_base/doom/graphics/WIA20501.lmp\", \"start\": 1851282, \"end\": 1864490}, {\"filename\": \"/edge_base/doom/graphics/WIA20502.lmp\", \"start\": 1864490, \"end\": 1877698}, {\"filename\": \"/edge_base/doom/graphics/WIMAP0.lmp\", \"start\": 1877698, \"end\": 1996986}, {\"filename\": \"/edge_base/doom/graphics/WIMAP1.lmp\", \"start\": 1996986, \"end\": 2116274}, {\"filename\": \"/edge_base/doom/graphics/WIMAP2.lmp\", \"start\": 2116274, \"end\": 2235562}, {\"filename\": \"/edge_base/doom/scripts/games.ddf\", \"start\": 2235562, \"end\": 2235973}, {\"filename\": \"/edge_base/doom/scripts/images.ddf\", \"start\": 2235973, \"end\": 2237696}, {\"filename\": \"/edge_base/doom/textures/SKY1_B.png\", \"start\": 2237696, \"end\": 2252339}, {\"filename\": \"/edge_base/doom/textures/SKY1_E.png\", \"start\": 2252339, \"end\": 2275518}, {\"filename\": \"/edge_base/doom/textures/SKY1_N.png\", \"start\": 2275518, \"end\": 2298405}, {\"filename\": \"/edge_base/doom/textures/SKY1_S.png\", \"start\": 2298405, \"end\": 2321030}, {\"filename\": \"/edge_base/doom/textures/SKY1_T.png\", \"start\": 2321030, \"end\": 2348222}, {\"filename\": \"/edge_base/doom/textures/SKY1_W.png\", \"start\": 2348222, \"end\": 2371065}, {\"filename\": \"/edge_base/doom/textures/SKY2_B.png\", \"start\": 2371065, \"end\": 2387932}, {\"filename\": \"/edge_base/doom/textures/SKY2_E.png\", \"start\": 2387932, \"end\": 2414501}, {\"filename\": \"/edge_base/doom/textures/SKY2_N.png\", \"start\": 2414501, \"end\": 2441357}, {\"filename\": \"/edge_base/doom/textures/SKY2_S.png\", \"start\": 2441357, \"end\": 2468857}, {\"filename\": \"/edge_base/doom/textures/SKY2_T.png\", \"start\": 2468857, \"end\": 2493211}, {\"filename\": \"/edge_base/doom/textures/SKY2_W.png\", \"start\": 2493211, \"end\": 2519398}, {\"filename\": \"/edge_base/doom/textures/SKY3_B.png\", \"start\": 2519398, \"end\": 2531381}, {\"filename\": \"/edge_base/doom/textures/SKY3_E.png\", \"start\": 2531381, \"end\": 2550947}, {\"filename\": \"/edge_base/doom/textures/SKY3_N.png\", \"start\": 2550947, \"end\": 2570648}, {\"filename\": \"/edge_base/doom/textures/SKY3_S.png\", \"start\": 2570648, \"end\": 2590982}, {\"filename\": \"/edge_base/doom/textures/SKY3_T.png\", \"start\": 2590982, \"end\": 2615425}, {\"filename\": \"/edge_base/doom/textures/SKY3_W.png\", \"start\": 2615425, \"end\": 2634470}, {\"filename\": \"/edge_base/doom/textures/SKY4_B.png\", \"start\": 2634470, \"end\": 2672806}, {\"filename\": \"/edge_base/doom/textures/SKY4_E.png\", \"start\": 2672806, \"end\": 2685415}, {\"filename\": \"/edge_base/doom/textures/SKY4_N.png\", \"start\": 2685415, \"end\": 2697131}, {\"filename\": \"/edge_base/doom/textures/SKY4_S.png\", \"start\": 2697131, \"end\": 2708847}, {\"filename\": \"/edge_base/doom/textures/SKY4_T.png\", \"start\": 2708847, \"end\": 2747183}, {\"filename\": \"/edge_base/doom/textures/SKY4_W.png\", \"start\": 2747183, \"end\": 2759792}, {\"filename\": \"/edge_base/doom1/graphics/CREDIT.lmp\", \"start\": 2759792, \"end\": 2879080}, {\"filename\": \"/edge_base/doom1/graphics/HELP1.lmp\", \"start\": 2879080, \"end\": 2998368}, {\"filename\": \"/edge_base/doom1/graphics/HELP2.lmp\", \"start\": 2998368, \"end\": 3117656}, {\"filename\": \"/edge_base/doom1/graphics/TITLEPIC.lmp\", \"start\": 3117656, \"end\": 3236944}, {\"filename\": \"/edge_base/doom1/graphics/WIMAP0.lmp\", \"start\": 3236944, \"end\": 3356232}, {\"filename\": \"/edge_base/doom1/scripts/images.ddf\", \"start\": 3356232, \"end\": 3357964}, {\"filename\": \"/edge_base/doom1/textures/SKY1_B.png\", \"start\": 3357964, \"end\": 3372607}, {\"filename\": \"/edge_base/doom1/textures/SKY1_E.png\", \"start\": 3372607, \"end\": 3395786}, {\"filename\": \"/edge_base/doom1/textures/SKY1_N.png\", \"start\": 3395786, \"end\": 3418673}, {\"filename\": \"/edge_base/doom1/textures/SKY1_S.png\", \"start\": 3418673, \"end\": 3441298}, {\"filename\": \"/edge_base/doom1/textures/SKY1_T.png\", \"start\": 3441298, \"end\": 3468490}, {\"filename\": \"/edge_base/doom1/textures/SKY1_W.png\", \"start\": 3468490, \"end\": 3491333}, {\"filename\": \"/edge_base/doom2/graphics/BOSSBACK.lmp\", \"start\": 3491333, \"end\": 3610621}, {\"filename\": \"/edge_base/doom2/graphics/CREDIT.lmp\", \"start\": 3610621, \"end\": 3729909}, {\"filename\": \"/edge_base/doom2/graphics/HELP.lmp\", \"start\": 3729909, \"end\": 3849197}, {\"filename\": \"/edge_base/doom2/graphics/INTERPIC.lmp\", \"start\": 3849197, \"end\": 3968485}, {\"filename\": \"/edge_base/doom2/graphics/TITLEPIC.lmp\", \"start\": 3968485, \"end\": 4087773}, {\"filename\": \"/edge_base/doom2/scripts/games.ddf\", \"start\": 4087773, \"end\": 4088204}, {\"filename\": \"/edge_base/doom2/scripts/images.ddf\", \"start\": 4088204, \"end\": 4089542}, {\"filename\": \"/edge_base/doom2/textures/SKY1_B.png\", \"start\": 4089542, \"end\": 4110822}, {\"filename\": \"/edge_base/doom2/textures/SKY1_E.png\", \"start\": 4110822, \"end\": 4128502}, {\"filename\": \"/edge_base/doom2/textures/SKY1_N.png\", \"start\": 4128502, \"end\": 4146182}, {\"filename\": \"/edge_base/doom2/textures/SKY1_S.png\", \"start\": 4146182, \"end\": 4163862}, {\"filename\": \"/edge_base/doom2/textures/SKY1_T.png\", \"start\": 4163862, \"end\": 4185142}, {\"filename\": \"/edge_base/doom2/textures/SKY1_W.png\", \"start\": 4185142, \"end\": 4202822}, {\"filename\": \"/edge_base/doom2/textures/SKY2_B.png\", \"start\": 4202822, \"end\": 4216745}, {\"filename\": \"/edge_base/doom2/textures/SKY2_E.png\", \"start\": 4216745, \"end\": 4241964}, {\"filename\": \"/edge_base/doom2/textures/SKY2_N.png\", \"start\": 4241964, \"end\": 4267196}, {\"filename\": \"/edge_base/doom2/textures/SKY2_S.png\", \"start\": 4267196, \"end\": 4292399}, {\"filename\": \"/edge_base/doom2/textures/SKY2_T.png\", \"start\": 4292399, \"end\": 4317151}, {\"filename\": \"/edge_base/doom2/textures/SKY2_W.png\", \"start\": 4317151, \"end\": 4342355}, {\"filename\": \"/edge_base/doom2/textures/SKY3_B.png\", \"start\": 4342355, \"end\": 4425925}, {\"filename\": \"/edge_base/doom2/textures/SKY3_E.png\", \"start\": 4425925, \"end\": 4520734}, {\"filename\": \"/edge_base/doom2/textures/SKY3_N.png\", \"start\": 4520734, \"end\": 4619505}, {\"filename\": \"/edge_base/doom2/textures/SKY3_S.png\", \"start\": 4619505, \"end\": 4718276}, {\"filename\": \"/edge_base/doom2/textures/SKY3_T.png\", \"start\": 4718276, \"end\": 4904767}, {\"filename\": \"/edge_base/doom2/textures/SKY3_W.png\", \"start\": 4904767, \"end\": 4999576}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARL.lmp\", \"start\": 4999576, \"end\": 5002987}, {\"filename\": \"/edge_base/freedoom1/graphics/STBARR.lmp\", \"start\": 5002987, \"end\": 5006398}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT033.png\", \"start\": 5006398, \"end\": 5006743}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT034.png\", \"start\": 5006743, \"end\": 5007090}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT035.png\", \"start\": 5007090, \"end\": 5007521}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT036.png\", \"start\": 5007521, \"end\": 5007930}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT037.png\", \"start\": 5007930, \"end\": 5008351}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT038.png\", \"start\": 5008351, \"end\": 5008798}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT039.png\", \"start\": 5008798, \"end\": 5009119}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT040.png\", \"start\": 5009119, \"end\": 5009509}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT041.png\", \"start\": 5009509, \"end\": 5009898}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT042.png\", \"start\": 5009898, \"end\": 5010349}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT043.png\", \"start\": 5010349, \"end\": 5010708}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT044.png\", \"start\": 5010708, \"end\": 5011032}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT045.png\", \"start\": 5011032, \"end\": 5011345}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT046.png\", \"start\": 5011345, \"end\": 5011641}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT047.png\", \"start\": 5011641, \"end\": 5012064}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT048.png\", \"start\": 5012064, \"end\": 5012469}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT049.png\", \"start\": 5012469, \"end\": 5012849}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT050.png\", \"start\": 5012849, \"end\": 5013257}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT051.png\", \"start\": 5013257, \"end\": 5013720}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT052.png\", \"start\": 5013720, \"end\": 5014139}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT053.png\", \"start\": 5014139, \"end\": 5014547}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT054.png\", \"start\": 5014547, \"end\": 5014955}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT055.png\", \"start\": 5014955, \"end\": 5015359}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT056.png\", \"start\": 5015359, \"end\": 5015831}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT057.png\", \"start\": 5015831, \"end\": 5016246}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT058.png\", \"start\": 5016246, \"end\": 5016594}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT059.png\", \"start\": 5016594, \"end\": 5016955}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT060.png\", \"start\": 5016955, \"end\": 5017324}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT061.png\", \"start\": 5017324, \"end\": 5017665}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT062.png\", \"start\": 5017665, \"end\": 5018086}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT063.png\", \"start\": 5018086, \"end\": 5018489}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT064.png\", \"start\": 5018489, \"end\": 5018907}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT065.png\", \"start\": 5018907, \"end\": 5019410}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT066.png\", \"start\": 5019410, \"end\": 5019835}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT067.png\", \"start\": 5019835, \"end\": 5020238}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT068.png\", \"start\": 5020238, \"end\": 5020671}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT069.png\", \"start\": 5020671, \"end\": 5021087}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT070.png\", \"start\": 5021087, \"end\": 5021492}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT071.png\", \"start\": 5021492, \"end\": 5021911}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT072.png\", \"start\": 5021911, \"end\": 5022336}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT073.png\", \"start\": 5022336, \"end\": 5022738}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT074.png\", \"start\": 5022738, \"end\": 5023207}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT075.png\", \"start\": 5023207, \"end\": 5023641}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT076.png\", \"start\": 5023641, \"end\": 5024030}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT077.png\", \"start\": 5024030, \"end\": 5024485}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT078.png\", \"start\": 5024485, \"end\": 5024995}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT079.png\", \"start\": 5024995, \"end\": 5025405}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT080.png\", \"start\": 5025405, \"end\": 5025812}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT081.png\", \"start\": 5025812, \"end\": 5026229}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT082.png\", \"start\": 5026229, \"end\": 5026648}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT083.png\", \"start\": 5026648, \"end\": 5027074}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT084.png\", \"start\": 5027074, \"end\": 5027459}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT085.png\", \"start\": 5027459, \"end\": 5027874}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT086.png\", \"start\": 5027874, \"end\": 5028298}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT087.png\", \"start\": 5028298, \"end\": 5028743}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT088.png\", \"start\": 5028743, \"end\": 5029169}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT089.png\", \"start\": 5029169, \"end\": 5029634}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT090.png\", \"start\": 5029634, \"end\": 5030052}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT091.png\", \"start\": 5030052, \"end\": 5030439}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT092.png\", \"start\": 5030439, \"end\": 5030873}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT093.png\", \"start\": 5030873, \"end\": 5031269}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT094.png\", \"start\": 5031269, \"end\": 5031620}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT095.png\", \"start\": 5031620, \"end\": 5031933}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT096.png\", \"start\": 5031933, \"end\": 5032253}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT097.png\", \"start\": 5032253, \"end\": 5032711}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT098.png\", \"start\": 5032711, \"end\": 5033111}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT099.png\", \"start\": 5033111, \"end\": 5033545}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT100.png\", \"start\": 5033545, \"end\": 5033952}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT101.png\", \"start\": 5033952, \"end\": 5034348}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT102.png\", \"start\": 5034348, \"end\": 5034739}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT103.png\", \"start\": 5034739, \"end\": 5035183}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT104.png\", \"start\": 5035183, \"end\": 5035585}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT105.png\", \"start\": 5035585, \"end\": 5035965}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT106.png\", \"start\": 5035965, \"end\": 5036409}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT107.png\", \"start\": 5036409, \"end\": 5036878}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT108.png\", \"start\": 5036878, \"end\": 5037252}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT109.png\", \"start\": 5037252, \"end\": 5037673}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT110.png\", \"start\": 5037673, \"end\": 5038089}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT111.png\", \"start\": 5038089, \"end\": 5038538}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT112.png\", \"start\": 5038538, \"end\": 5038928}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT113.png\", \"start\": 5038928, \"end\": 5039386}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT114.png\", \"start\": 5039386, \"end\": 5039783}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT115.png\", \"start\": 5039783, \"end\": 5040194}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT116.png\", \"start\": 5040194, \"end\": 5040628}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT117.png\", \"start\": 5040628, \"end\": 5041030}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT118.png\", \"start\": 5041030, \"end\": 5041491}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT119.png\", \"start\": 5041491, \"end\": 5041908}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT120.png\", \"start\": 5041908, \"end\": 5042352}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT121.png\", \"start\": 5042352, \"end\": 5042745}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT122.png\", \"start\": 5042745, \"end\": 5043180}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT123.png\", \"start\": 5043180, \"end\": 5043570}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT124.png\", \"start\": 5043570, \"end\": 5043931}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT125.png\", \"start\": 5043931, \"end\": 5044319}, {\"filename\": \"/edge_base/freedoom1/graphics/freedoom_font/FONT126.png\", \"start\": 5044319, \"end\": 5044709}, {\"filename\": \"/edge_base/freedoom1/scripts/attacks.ddf\", \"start\": 5044709, \"end\": 5064997}, {\"filename\": \"/edge_base/freedoom1/scripts/fonts.ddf\", \"start\": 5064997, \"end\": 5065635}, {\"filename\": \"/edge_base/freedoom1/scripts/games.ddf\", \"start\": 5065635, \"end\": 5066046}, {\"filename\": \"/edge_base/freedoom1/scripts/images.ddf\", \"start\": 5066046, \"end\": 5073242}, {\"filename\": \"/edge_base/freedoom1/scripts/language.ldf\", \"start\": 5073242, \"end\": 5084512}, {\"filename\": \"/edge_base/freedoom1/scripts/styles.ddf\", \"start\": 5084512, \"end\": 5089440}, {\"filename\": \"/edge_base/freedoom1/scripts/things.ddf\", \"start\": 5089440, \"end\": 5097758}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARL.lmp\", \"start\": 5097758, \"end\": 5101169}, {\"filename\": \"/edge_base/freedoom2/graphics/STBARR.lmp\", \"start\": 5101169, \"end\": 5104580}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT033.png\", \"start\": 5104580, \"end\": 5104925}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT034.png\", \"start\": 5104925, \"end\": 5105272}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT035.png\", \"start\": 5105272, \"end\": 5105703}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT036.png\", \"start\": 5105703, \"end\": 5106112}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT037.png\", \"start\": 5106112, \"end\": 5106533}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT038.png\", \"start\": 5106533, \"end\": 5106980}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT039.png\", \"start\": 5106980, \"end\": 5107301}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT040.png\", \"start\": 5107301, \"end\": 5107691}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT041.png\", \"start\": 5107691, \"end\": 5108080}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT042.png\", \"start\": 5108080, \"end\": 5108531}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT043.png\", \"start\": 5108531, \"end\": 5108890}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT044.png\", \"start\": 5108890, \"end\": 5109214}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT045.png\", \"start\": 5109214, \"end\": 5109527}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT046.png\", \"start\": 5109527, \"end\": 5109823}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT047.png\", \"start\": 5109823, \"end\": 5110246}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT048.png\", \"start\": 5110246, \"end\": 5110651}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT049.png\", \"start\": 5110651, \"end\": 5111031}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT050.png\", \"start\": 5111031, \"end\": 5111439}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT051.png\", \"start\": 5111439, \"end\": 5111902}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT052.png\", \"start\": 5111902, \"end\": 5112321}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT053.png\", \"start\": 5112321, \"end\": 5112729}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT054.png\", \"start\": 5112729, \"end\": 5113137}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT055.png\", \"start\": 5113137, \"end\": 5113541}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT056.png\", \"start\": 5113541, \"end\": 5114013}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT057.png\", \"start\": 5114013, \"end\": 5114428}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT058.png\", \"start\": 5114428, \"end\": 5114776}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT059.png\", \"start\": 5114776, \"end\": 5115137}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT060.png\", \"start\": 5115137, \"end\": 5115506}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT061.png\", \"start\": 5115506, \"end\": 5115847}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT062.png\", \"start\": 5115847, \"end\": 5116268}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT063.png\", \"start\": 5116268, \"end\": 5116671}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT064.png\", \"start\": 5116671, \"end\": 5117089}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT065.png\", \"start\": 5117089, \"end\": 5117592}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT066.png\", \"start\": 5117592, \"end\": 5118017}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT067.png\", \"start\": 5118017, \"end\": 5118420}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT068.png\", \"start\": 5118420, \"end\": 5118853}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT069.png\", \"start\": 5118853, \"end\": 5119269}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT070.png\", \"start\": 5119269, \"end\": 5119674}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT071.png\", \"start\": 5119674, \"end\": 5120093}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT072.png\", \"start\": 5120093, \"end\": 5120518}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT073.png\", \"start\": 5120518, \"end\": 5120920}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT074.png\", \"start\": 5120920, \"end\": 5121389}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT075.png\", \"start\": 5121389, \"end\": 5121823}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT076.png\", \"start\": 5121823, \"end\": 5122212}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT077.png\", \"start\": 5122212, \"end\": 5122667}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT078.png\", \"start\": 5122667, \"end\": 5123177}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT079.png\", \"start\": 5123177, \"end\": 5123587}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT080.png\", \"start\": 5123587, \"end\": 5123994}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT081.png\", \"start\": 5123994, \"end\": 5124411}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT082.png\", \"start\": 5124411, \"end\": 5124830}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT083.png\", \"start\": 5124830, \"end\": 5125256}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT084.png\", \"start\": 5125256, \"end\": 5125641}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT085.png\", \"start\": 5125641, \"end\": 5126056}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT086.png\", \"start\": 5126056, \"end\": 5126480}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT087.png\", \"start\": 5126480, \"end\": 5126925}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT088.png\", \"start\": 5126925, \"end\": 5127351}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT089.png\", \"start\": 5127351, \"end\": 5127816}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT090.png\", \"start\": 5127816, \"end\": 5128234}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT091.png\", \"start\": 5128234, \"end\": 5128621}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT092.png\", \"start\": 5128621, \"end\": 5129055}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT093.png\", \"start\": 5129055, \"end\": 5129451}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT094.png\", \"start\": 5129451, \"end\": 5129802}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT095.png\", \"start\": 5129802, \"end\": 5130115}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT096.png\", \"start\": 5130115, \"end\": 5130435}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT097.png\", \"start\": 5130435, \"end\": 5130893}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT098.png\", \"start\": 5130893, \"end\": 5131293}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT099.png\", \"start\": 5131293, \"end\": 5131727}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT100.png\", \"start\": 5131727, \"end\": 5132134}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT101.png\", \"start\": 5132134, \"end\": 5132530}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT102.png\", \"start\": 5132530, \"end\": 5132921}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT103.png\", \"start\": 5132921, \"end\": 5133365}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT104.png\", \"start\": 5133365, \"end\": 5133767}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT105.png\", \"start\": 5133767, \"end\": 5134147}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT106.png\", \"start\": 5134147, \"end\": 5134591}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT107.png\", \"start\": 5134591, \"end\": 5135060}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT108.png\", \"start\": 5135060, \"end\": 5135434}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT109.png\", \"start\": 5135434, \"end\": 5135855}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT110.png\", \"start\": 5135855, \"end\": 5136271}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT111.png\", \"start\": 5136271, \"end\": 5136720}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT112.png\", \"start\": 5136720, \"end\": 5137110}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT113.png\", \"start\": 5137110, \"end\": 5137568}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT114.png\", \"start\": 5137568, \"end\": 5137965}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT115.png\", \"start\": 5137965, \"end\": 5138376}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT116.png\", \"start\": 5138376, \"end\": 5138810}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT117.png\", \"start\": 5138810, \"end\": 5139212}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT118.png\", \"start\": 5139212, \"end\": 5139673}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT119.png\", \"start\": 5139673, \"end\": 5140090}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT120.png\", \"start\": 5140090, \"end\": 5140534}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT121.png\", \"start\": 5140534, \"end\": 5140927}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT122.png\", \"start\": 5140927, \"end\": 5141362}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT123.png\", \"start\": 5141362, \"end\": 5141752}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT124.png\", \"start\": 5141752, \"end\": 5142113}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT125.png\", \"start\": 5142113, \"end\": 5142501}, {\"filename\": \"/edge_base/freedoom2/graphics/freedoom_font/FONT126.png\", \"start\": 5142501, \"end\": 5142891}, {\"filename\": \"/edge_base/freedoom2/scripts/attacks.ddf\", \"start\": 5142891, \"end\": 5163179}, {\"filename\": \"/edge_base/freedoom2/scripts/fonts.ddf\", \"start\": 5163179, \"end\": 5163817}, {\"filename\": \"/edge_base/freedoom2/scripts/games.ddf\", \"start\": 5163817, \"end\": 5164248}, {\"filename\": \"/edge_base/freedoom2/scripts/images.ddf\", \"start\": 5164248, \"end\": 5171444}, {\"filename\": \"/edge_base/freedoom2/scripts/language.ldf\", \"start\": 5171444, \"end\": 5182578}, {\"filename\": \"/edge_base/freedoom2/scripts/styles.ddf\", \"start\": 5182578, \"end\": 5187148}, {\"filename\": \"/edge_base/freedoom2/scripts/things.ddf\", \"start\": 5187148, \"end\": 5195461}, {\"filename\": \"/edge_base/hacx/graphics/CREDIT.lmp\", \"start\": 5195461, \"end\": 5314749}, {\"filename\": \"/edge_base/hacx/graphics/ENDOOM.bin\", \"start\": 5314749, \"end\": 5318749}, {\"filename\": \"/edge_base/hacx/graphics/HELP.lmp\", \"start\": 5318749, \"end\": 5438037}, {\"filename\": \"/edge_base/hacx/graphics/INTERPIC.lmp\", \"start\": 5438037, \"end\": 5557325}, {\"filename\": \"/edge_base/hacx/graphics/STBARL.lmp\", \"start\": 5557325, \"end\": 5560736}, {\"filename\": \"/edge_base/hacx/graphics/STBARR.lmp\", \"start\": 5560736, \"end\": 5564147}, {\"filename\": \"/edge_base/hacx/graphics/TITLEPIC.lmp\", \"start\": 5564147, \"end\": 5683435}, {\"filename\": \"/edge_base/hacx/scripts/anims.ddf\", \"start\": 5683435, \"end\": 5686370}, {\"filename\": \"/edge_base/hacx/scripts/attacks.ddf\", \"start\": 5686370, \"end\": 5693544}, {\"filename\": \"/edge_base/hacx/scripts/colmap.ddf\", \"start\": 5693544, \"end\": 5693812}, {\"filename\": \"/edge_base/hacx/scripts/flats.ddf\", \"start\": 5693812, \"end\": 5694192}, {\"filename\": \"/edge_base/hacx/scripts/fonts.ddf\", \"start\": 5694192, \"end\": 5694819}, {\"filename\": \"/edge_base/hacx/scripts/games.ddf\", \"start\": 5694819, \"end\": 5695250}, {\"filename\": \"/edge_base/hacx/scripts/language.ldf\", \"start\": 5695250, \"end\": 5701111}, {\"filename\": \"/edge_base/hacx/scripts/levels.ddf\", \"start\": 5701111, \"end\": 5705780}, {\"filename\": \"/edge_base/hacx/scripts/lines.ddf\", \"start\": 5705780, \"end\": 5706628}, {\"filename\": \"/edge_base/hacx/scripts/playlist.ddf\", \"start\": 5706628, \"end\": 5708061}, {\"filename\": \"/edge_base/hacx/scripts/styles.ddf\", \"start\": 5708061, \"end\": 5710666}, {\"filename\": \"/edge_base/hacx/scripts/switch.ddf\", \"start\": 5710666, \"end\": 5713687}, {\"filename\": \"/edge_base/hacx/scripts/things.ddf\", \"start\": 5713687, \"end\": 5797474}, {\"filename\": \"/edge_base/hacx/scripts/weapons.ddf\", \"start\": 5797474, \"end\": 5802491}, {\"filename\": \"/edge_base/hacx/sprites/CHGFA0.lmp\", \"start\": 5802491, \"end\": 5817295}, {\"filename\": \"/edge_base/hacx/sprites/CHGFB0.lmp\", \"start\": 5817295, \"end\": 5832321}, {\"filename\": \"/edge_base/hacx/sprites/CHGGA0.lmp\", \"start\": 5832321, \"end\": 5846895}, {\"filename\": \"/edge_base/hacx/sprites/CHGGB0.lmp\", \"start\": 5846895, \"end\": 5853252}, {\"filename\": \"/edge_base/hacx/sprites/CRYXHRA0.lmp\", \"start\": 5853252, \"end\": 5854352}, {\"filename\": \"/edge_base/hacx/sprites/MISFA0.lmp\", \"start\": 5854352, \"end\": 5894624}, {\"filename\": \"/edge_base/hacx/sprites/MISFB0.lmp\", \"start\": 5894624, \"end\": 5929790}, {\"filename\": \"/edge_base/hacx/sprites/MISFC0.lmp\", \"start\": 5929790, \"end\": 5962943}, {\"filename\": \"/edge_base/hacx/sprites/MISFD0.lmp\", \"start\": 5962943, \"end\": 5999326}, {\"filename\": \"/edge_base/hacx/sprites/MISGA0.lmp\", \"start\": 5999326, \"end\": 6030856}, {\"filename\": \"/edge_base/hacx/sprites/MISGB0.lmp\", \"start\": 6030856, \"end\": 6065962}, {\"filename\": \"/edge_base/hacx/sprites/PISGD0.lmp\", \"start\": 6065962, \"end\": 6090105}, {\"filename\": \"/edge_base/hacx/sprites/PISGE0.lmp\", \"start\": 6090105, \"end\": 6119771}, {\"filename\": \"/edge_base/hacx/sprites/PLSGA0.lmp\", \"start\": 6119771, \"end\": 6130635}, {\"filename\": \"/edge_base/hacx/sprites/PLSGB0.lmp\", \"start\": 6130635, \"end\": 6144029}, {\"filename\": \"/edge_base/hacx/sprites/SAWGA0.lmp\", \"start\": 6144029, \"end\": 6158478}, {\"filename\": \"/edge_base/hacx/sprites/SAWGB0.lmp\", \"start\": 6158478, \"end\": 6172586}, {\"filename\": \"/edge_base/hacx/sprites/SAWGC0.lmp\", \"start\": 6172586, \"end\": 6181671}, {\"filename\": \"/edge_base/hacx/sprites/SAWGD0.lmp\", \"start\": 6181671, \"end\": 6190756}, {\"filename\": \"/edge_base/hacx/sprites/SHT2A0.lmp\", \"start\": 6190756, \"end\": 6206267}, {\"filename\": \"/edge_base/hacx/sprites/SHT2B0.lmp\", \"start\": 6206267, \"end\": 6222008}, {\"filename\": \"/edge_base/hacx/sprites/SHT2C0.lmp\", \"start\": 6222008, \"end\": 6238041}, {\"filename\": \"/edge_base/hacx/sprites/SHT2D0.lmp\", \"start\": 6238041, \"end\": 6254168}, {\"filename\": \"/edge_base/hacx/sprites/SHT2E0.lmp\", \"start\": 6254168, \"end\": 6270454}, {\"filename\": \"/edge_base/hacx/sprites/SHT2F0.lmp\", \"start\": 6270454, \"end\": 6286608}, {\"filename\": \"/edge_base/hacx/sprites/SHT2G0.lmp\", \"start\": 6286608, \"end\": 6302424}, {\"filename\": \"/edge_base/hacx/sprites/SHT2H0.lmp\", \"start\": 6302424, \"end\": 6317935}, {\"filename\": \"/edge_base/hacx/sprites/SHT2I0.lmp\", \"start\": 6317935, \"end\": 6333618}, {\"filename\": \"/edge_base/hacx/sprites/SHT2J0.lmp\", \"start\": 6333618, \"end\": 6349823}, {\"filename\": \"/edge_base/hacx/sprites/SHTFA0.lmp\", \"start\": 6349823, \"end\": 6358885}, {\"filename\": \"/edge_base/hacx/sprites/SHTFB0.lmp\", \"start\": 6358885, \"end\": 6368376}, {\"filename\": \"/edge_base/hacx/sprites/SHTGA0.lmp\", \"start\": 6368376, \"end\": 6377035}, {\"filename\": \"/edge_base/hacx/sprites/SHTGB0.lmp\", \"start\": 6377035, \"end\": 6390117}, {\"filename\": \"/edge_base/hacx/sprites/SHTGC0.lmp\", \"start\": 6390117, \"end\": 6409356}, {\"filename\": \"/edge_base/hacx/sprites/SHTGD0.lmp\", \"start\": 6409356, \"end\": 6427603}, {\"filename\": \"/edge_base/harmony/ENDOOM.bin\", \"start\": 6427603, \"end\": 6431603}, {\"filename\": \"/edge_base/harmony/graphics/BOSSBACK.lmp\", \"start\": 6431603, \"end\": 6522349}, {\"filename\": \"/edge_base/harmony/graphics/CREDIT.lmp\", \"start\": 6522349, \"end\": 6613095}, {\"filename\": \"/edge_base/harmony/graphics/CWILV00.lmp\", \"start\": 6613095, \"end\": 6615145}, {\"filename\": \"/edge_base/harmony/graphics/CWILV01.lmp\", \"start\": 6615145, \"end\": 6617297}, {\"filename\": \"/edge_base/harmony/graphics/CWILV02.lmp\", \"start\": 6617297, \"end\": 6619075}, {\"filename\": \"/edge_base/harmony/graphics/CWILV03.lmp\", \"start\": 6619075, \"end\": 6621675}, {\"filename\": \"/edge_base/harmony/graphics/CWILV04.lmp\", \"start\": 6621675, \"end\": 6623766}, {\"filename\": \"/edge_base/harmony/graphics/CWILV05.lmp\", \"start\": 6623766, \"end\": 6627632}, {\"filename\": \"/edge_base/harmony/graphics/CWILV06.lmp\", \"start\": 6627632, \"end\": 6631220}, {\"filename\": \"/edge_base/harmony/graphics/CWILV07.lmp\", \"start\": 6631220, \"end\": 6633715}, {\"filename\": \"/edge_base/harmony/graphics/CWILV08.lmp\", \"start\": 6633715, \"end\": 6636554}, {\"filename\": \"/edge_base/harmony/graphics/CWILV09.lmp\", \"start\": 6636554, \"end\": 6640389}, {\"filename\": \"/edge_base/harmony/graphics/CWILV10.lmp\", \"start\": 6640389, \"end\": 6642007}, {\"filename\": \"/edge_base/harmony/graphics/CWILV11.lmp\", \"start\": 6642007, \"end\": 6643736}, {\"filename\": \"/edge_base/harmony/graphics/HELP.lmp\", \"start\": 6643736, \"end\": 6732778}, {\"filename\": \"/edge_base/harmony/graphics/INTERPIC.lmp\", \"start\": 6732778, \"end\": 6823524}, {\"filename\": \"/edge_base/harmony/graphics/M_EPISOD.lmp\", \"start\": 6823524, \"end\": 6826721}, {\"filename\": \"/edge_base/harmony/graphics/M_JKILL.lmp\", \"start\": 6826721, \"end\": 6828139}, {\"filename\": \"/edge_base/harmony/graphics/M_NEWG.lmp\", \"start\": 6828139, \"end\": 6830513}, {\"filename\": \"/edge_base/harmony/graphics/M_NGAME.lmp\", \"start\": 6830513, \"end\": 6831463}, {\"filename\": \"/edge_base/harmony/graphics/M_RDTHIS.lmp\", \"start\": 6831463, \"end\": 6833322}, {\"filename\": \"/edge_base/harmony/graphics/M_SAVEG.lmp\", \"start\": 6833322, \"end\": 6834335}, {\"filename\": \"/edge_base/harmony/graphics/M_THERML.png\", \"start\": 6834335, \"end\": 6835275}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMM.png\", \"start\": 6835275, \"end\": 6836204}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMO.png\", \"start\": 6836204, \"end\": 6837119}, {\"filename\": \"/edge_base/harmony/graphics/M_THERMR.png\", \"start\": 6837119, \"end\": 6838057}, {\"filename\": \"/edge_base/harmony/graphics/STBARL.lmp\", \"start\": 6838057, \"end\": 6841468}, {\"filename\": \"/edge_base/harmony/graphics/STBARR.lmp\", \"start\": 6841468, \"end\": 6844879}, {\"filename\": \"/edge_base/harmony/graphics/TITLEPIC.lmp\", \"start\": 6844879, \"end\": 6933921}, {\"filename\": \"/edge_base/harmony/graphics/WICOLON.lmp\", \"start\": 6933921, \"end\": 6934023}, {\"filename\": \"/edge_base/harmony/graphics/WIF.lmp\", \"start\": 6934023, \"end\": 6934071}, {\"filename\": \"/edge_base/harmony/graphics/WIFRGS.lmp\", \"start\": 6934071, \"end\": 6935202}, {\"filename\": \"/edge_base/harmony/graphics/WIKILRS.lmp\", \"start\": 6935202, \"end\": 6935675}, {\"filename\": \"/edge_base/harmony/graphics/WIMINUS.lmp\", \"start\": 6935675, \"end\": 6935795}, {\"filename\": \"/edge_base/harmony/graphics/WIMSTT.lmp\", \"start\": 6935795, \"end\": 6936895}, {\"filename\": \"/edge_base/harmony/graphics/WINUM0.lmp\", \"start\": 6936895, \"end\": 6937145}, {\"filename\": \"/edge_base/harmony/graphics/WINUM1.lmp\", \"start\": 6937145, \"end\": 6937291}, {\"filename\": \"/edge_base/harmony/graphics/WINUM2.lmp\", \"start\": 6937291, \"end\": 6937577}, {\"filename\": \"/edge_base/harmony/graphics/WINUM3.lmp\", \"start\": 6937577, \"end\": 6937830}, {\"filename\": \"/edge_base/harmony/graphics/WINUM4.lmp\", \"start\": 6937830, \"end\": 6938054}, {\"filename\": \"/edge_base/harmony/graphics/WINUM5.lmp\", \"start\": 6938054, \"end\": 6938309}, {\"filename\": \"/edge_base/harmony/graphics/WINUM6.lmp\", \"start\": 6938309, \"end\": 6938571}, {\"filename\": \"/edge_base/harmony/graphics/WINUM7.lmp\", \"start\": 6938571, \"end\": 6938788}, {\"filename\": \"/edge_base/harmony/graphics/WINUM8.lmp\", \"start\": 6938788, \"end\": 6939050}, {\"filename\": \"/edge_base/harmony/graphics/WINUM9.lmp\", \"start\": 6939050, \"end\": 6939309}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTF.lmp\", \"start\": 6939309, \"end\": 6939549}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTI.lmp\", \"start\": 6939549, \"end\": 6940997}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTK.lmp\", \"start\": 6940997, \"end\": 6942342}, {\"filename\": \"/edge_base/harmony/graphics/WIOSTS.lmp\", \"start\": 6942342, \"end\": 6943511}, {\"filename\": \"/edge_base/harmony/graphics/WIPAR.lmp\", \"start\": 6943511, \"end\": 6944488}, {\"filename\": \"/edge_base/harmony/graphics/WIPCNT.lmp\", \"start\": 6944488, \"end\": 6944737}, {\"filename\": \"/edge_base/harmony/graphics/WISCRT2.lmp\", \"start\": 6944737, \"end\": 6946512}, {\"filename\": \"/edge_base/harmony/graphics/WISUCKS.lmp\", \"start\": 6946512, \"end\": 6948221}, {\"filename\": \"/edge_base/harmony/graphics/WITIME.lmp\", \"start\": 6948221, \"end\": 6949068}, {\"filename\": \"/edge_base/harmony/graphics/WIVCTMS.lmp\", \"start\": 6949068, \"end\": 6949868}, {\"filename\": \"/edge_base/harmony/scripts/attacks.ddf\", \"start\": 6949868, \"end\": 6957391}, {\"filename\": \"/edge_base/harmony/scripts/colmap.ddf\", \"start\": 6957391, \"end\": 6957690}, {\"filename\": \"/edge_base/harmony/scripts/flats.ddf\", \"start\": 6957690, \"end\": 6958011}, {\"filename\": \"/edge_base/harmony/scripts/games.ddf\", \"start\": 6958011, \"end\": 6958442}, {\"filename\": \"/edge_base/harmony/scripts/language.ldf\", \"start\": 6958442, \"end\": 6962087}, {\"filename\": \"/edge_base/harmony/scripts/levels.ddf\", \"start\": 6962087, \"end\": 6977467}, {\"filename\": \"/edge_base/harmony/scripts/lua/edge_hud.lua\", \"start\": 6977467, \"end\": 6980690}, {\"filename\": \"/edge_base/harmony/scripts/playlist.ddf\", \"start\": 6980690, \"end\": 6982119}, {\"filename\": \"/edge_base/harmony/scripts/styles.ddf\", \"start\": 6982119, \"end\": 6984450}, {\"filename\": \"/edge_base/harmony/scripts/things.ddf\", \"start\": 6984450, \"end\": 7051381}, {\"filename\": \"/edge_base/harmony/scripts/weapons.ddf\", \"start\": 7051381, \"end\": 7054954}, {\"filename\": \"/edge_base/harmony/sprites/CELLA0.png\", \"start\": 7054954, \"end\": 7056696}, {\"filename\": \"/edge_base/harmony/sprites/CLIPA0.png\", \"start\": 7056696, \"end\": 7059382}, {\"filename\": \"/edge_base/harmony/sprites/ROCKA0.png\", \"start\": 7059382, \"end\": 7060813}, {\"filename\": \"/edge_base/harmony/sprites/SHELA0.png\", \"start\": 7060813, \"end\": 7062997}, {\"filename\": \"/edge_base/heretic/graphics/BARBACK.lmp\", \"start\": 7062997, \"end\": 7083511}, {\"filename\": \"/edge_base/heretic/graphics/CREDIT.lmp\", \"start\": 7083511, \"end\": 7202799}, {\"filename\": \"/edge_base/heretic/graphics/E2END.png\", \"start\": 7202799, \"end\": 7259223}, {\"filename\": \"/edge_base/heretic/graphics/FINAL1.lmp\", \"start\": 7259223, \"end\": 7378511}, {\"filename\": \"/edge_base/heretic/graphics/FINAL2.lmp\", \"start\": 7378511, \"end\": 7497799}, {\"filename\": \"/edge_base/heretic/graphics/HELP1.lmp\", \"start\": 7497799, \"end\": 7617087}, {\"filename\": \"/edge_base/heretic/graphics/HELP2.lmp\", \"start\": 7617087, \"end\": 7736375}, {\"filename\": \"/edge_base/heretic/graphics/LTFCTOP.lmp\", \"start\": 7736375, \"end\": 7737066}, {\"filename\": \"/edge_base/heretic/graphics/MAPE1.lmp\", \"start\": 7737066, \"end\": 7856354}, {\"filename\": \"/edge_base/heretic/graphics/MAPE2.lmp\", \"start\": 7856354, \"end\": 7975642}, {\"filename\": \"/edge_base/heretic/graphics/MAPE3.lmp\", \"start\": 7975642, \"end\": 8094930}, {\"filename\": \"/edge_base/heretic/graphics/NULL.png\", \"start\": 8094930, \"end\": 8096090}, {\"filename\": \"/edge_base/heretic/graphics/RTFCTOP.lmp\", \"start\": 8096090, \"end\": 8096839}, {\"filename\": \"/edge_base/heretic/graphics/STBARL.lmp\", \"start\": 8096839, \"end\": 8101080}, {\"filename\": \"/edge_base/heretic/graphics/STBARR.lmp\", \"start\": 8101080, \"end\": 8105321}, {\"filename\": \"/edge_base/heretic/graphics/TITLE.png\", \"start\": 8105321, \"end\": 8155944}, {\"filename\": \"/edge_base/heretic/graphics/WIENTER.png\", \"start\": 8155944, \"end\": 8156843}, {\"filename\": \"/edge_base/heretic/graphics/WIF.png\", \"start\": 8156843, \"end\": 8157589}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL00.png\", \"start\": 8157589, \"end\": 8158765}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL01.png\", \"start\": 8158765, \"end\": 8159974}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL02.png\", \"start\": 8159974, \"end\": 8161239}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL03.png\", \"start\": 8161239, \"end\": 8162551}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL04.png\", \"start\": 8162551, \"end\": 8163965}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL05.png\", \"start\": 8163965, \"end\": 8165279}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL06.png\", \"start\": 8165279, \"end\": 8166666}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL07.png\", \"start\": 8166666, \"end\": 8167940}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL08.png\", \"start\": 8167940, \"end\": 8168994}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL09.png\", \"start\": 8168994, \"end\": 8169992}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL10.png\", \"start\": 8169992, \"end\": 8171084}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL11.png\", \"start\": 8171084, \"end\": 8172341}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL12.png\", \"start\": 8172341, \"end\": 8173824}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL13.png\", \"start\": 8173824, \"end\": 8175174}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL14.png\", \"start\": 8175174, \"end\": 8176778}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL15.png\", \"start\": 8176778, \"end\": 8178279}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL16.png\", \"start\": 8178279, \"end\": 8179557}, {\"filename\": \"/edge_base/heretic/graphics/skull/M_SKL17.png\", \"start\": 8179557, \"end\": 8180789}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK0.png\", \"start\": 8180789, \"end\": 8181771}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK1.png\", \"start\": 8181771, \"end\": 8182647}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK10.png\", \"start\": 8182647, \"end\": 8183288}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK11.png\", \"start\": 8183288, \"end\": 8183932}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK12.png\", \"start\": 8183932, \"end\": 8184760}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK13.png\", \"start\": 8184760, \"end\": 8185716}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK14.png\", \"start\": 8185716, \"end\": 8186908}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK15.png\", \"start\": 8186908, \"end\": 8187928}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK2.png\", \"start\": 8187928, \"end\": 8188678}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK3.png\", \"start\": 8188678, \"end\": 8189232}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK4.png\", \"start\": 8189232, \"end\": 8189864}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK5.png\", \"start\": 8189864, \"end\": 8190497}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK6.png\", \"start\": 8190497, \"end\": 8191086}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK7.png\", \"start\": 8191086, \"end\": 8191589}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK8.png\", \"start\": 8191589, \"end\": 8192270}, {\"filename\": \"/edge_base/heretic/graphics/tome/SPINBK9.png\", \"start\": 8192270, \"end\": 8192854}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY0.png\", \"start\": 8192854, \"end\": 8193979}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY1.png\", \"start\": 8193979, \"end\": 8195085}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY10.png\", \"start\": 8195085, \"end\": 8196011}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY11.png\", \"start\": 8196011, \"end\": 8196717}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY12.png\", \"start\": 8196717, \"end\": 8197643}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY13.png\", \"start\": 8197643, \"end\": 8198763}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY14.png\", \"start\": 8198763, \"end\": 8199898}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY15.png\", \"start\": 8199898, \"end\": 8201071}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY2.png\", \"start\": 8201071, \"end\": 8201983}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY3.png\", \"start\": 8201983, \"end\": 8202683}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY4.png\", \"start\": 8202683, \"end\": 8203604}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY5.png\", \"start\": 8203604, \"end\": 8204706}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY6.png\", \"start\": 8204706, \"end\": 8205804}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY7.png\", \"start\": 8205804, \"end\": 8206918}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY8.png\", \"start\": 8206918, \"end\": 8208035}, {\"filename\": \"/edge_base/heretic/graphics/wings/SPFLY9.png\", \"start\": 8208035, \"end\": 8209140}, {\"filename\": \"/edge_base/heretic/scripts/anims.ddf\", \"start\": 8209140, \"end\": 8210776}, {\"filename\": \"/edge_base/heretic/scripts/attacks.ddf\", \"start\": 8210776, \"end\": 8254741}, {\"filename\": \"/edge_base/heretic/scripts/colmap.ddf\", \"start\": 8254741, \"end\": 8255023}, {\"filename\": \"/edge_base/heretic/scripts/flats.ddf\", \"start\": 8255023, \"end\": 8255686}, {\"filename\": \"/edge_base/heretic/scripts/fonts.ddf\", \"start\": 8255686, \"end\": 8256770}, {\"filename\": \"/edge_base/heretic/scripts/games.ddf\", \"start\": 8256770, \"end\": 8259583}, {\"filename\": \"/edge_base/heretic/scripts/images.ddf\", \"start\": 8259583, \"end\": 8262642}, {\"filename\": \"/edge_base/heretic/scripts/language.ldf\", \"start\": 8262642, \"end\": 8271113}, {\"filename\": \"/edge_base/heretic/scripts/levels.ddf\", \"start\": 8271113, \"end\": 8284020}, {\"filename\": \"/edge_base/heretic/scripts/lines.ddf\", \"start\": 8284020, \"end\": 8288591}, {\"filename\": \"/edge_base/heretic/scripts/lua/edge_hud.lua\", \"start\": 8288591, \"end\": 8307081}, {\"filename\": \"/edge_base/heretic/scripts/playlist.ddf\", \"start\": 8307081, \"end\": 8309160}, {\"filename\": \"/edge_base/heretic/scripts/rscript.rts\", \"start\": 8309160, \"end\": 8321947}, {\"filename\": \"/edge_base/heretic/scripts/sectors.ddf\", \"start\": 8321947, \"end\": 8325717}, {\"filename\": \"/edge_base/heretic/scripts/sounds.ddf\", \"start\": 8325717, \"end\": 8336632}, {\"filename\": \"/edge_base/heretic/scripts/styles.ddf\", \"start\": 8336632, \"end\": 8341885}, {\"filename\": \"/edge_base/heretic/scripts/switch.ddf\", \"start\": 8341885, \"end\": 8342310}, {\"filename\": \"/edge_base/heretic/scripts/things.ddf\", \"start\": 8342310, \"end\": 8426271}, {\"filename\": \"/edge_base/heretic/scripts/weapons.ddf\", \"start\": 8426271, \"end\": 8437455}, {\"filename\": \"/edge_base/heretic/sprites/STFFC0.lmp\", \"start\": 8437455, \"end\": 8454585}, {\"filename\": \"/edge_base/heretic/sprites/STFFH0.lmp\", \"start\": 8454585, \"end\": 8472631}, {\"filename\": \"/edge_base/plutonia/graphics/BOSSBACK.lmp\", \"start\": 8472631, \"end\": 8591919}, {\"filename\": \"/edge_base/plutonia/graphics/CREDIT.lmp\", \"start\": 8591919, \"end\": 8711207}, {\"filename\": \"/edge_base/plutonia/graphics/INTERPIC.lmp\", \"start\": 8711207, \"end\": 8830495}, {\"filename\": \"/edge_base/plutonia/graphics/TITLEPIC.lmp\", \"start\": 8830495, \"end\": 8949783}, {\"filename\": \"/edge_base/plutonia/scripts/games.ddf\", \"start\": 8949783, \"end\": 8950214}, {\"filename\": \"/edge_base/plutonia/scripts/images.ddf\", \"start\": 8950214, \"end\": 8951549}, {\"filename\": \"/edge_base/plutonia/scripts/language.ldf\", \"start\": 8951549, \"end\": 8954929}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_B.png\", \"start\": 8954929, \"end\": 8969960}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_E.png\", \"start\": 8969960, \"end\": 8984956}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_N.png\", \"start\": 8984956, \"end\": 8998035}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_S.png\", \"start\": 8998035, \"end\": 9011114}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_T.png\", \"start\": 9011114, \"end\": 9026145}, {\"filename\": \"/edge_base/plutonia/textures/SKY1_W.png\", \"start\": 9026145, \"end\": 9041141}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_B.png\", \"start\": 9041141, \"end\": 9069076}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_E.png\", \"start\": 9069076, \"end\": 9080716}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_N.png\", \"start\": 9080716, \"end\": 9092625}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_S.png\", \"start\": 9092625, \"end\": 9104534}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_T.png\", \"start\": 9104534, \"end\": 9132469}, {\"filename\": \"/edge_base/plutonia/textures/SKY2_W.png\", \"start\": 9132469, \"end\": 9144109}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_B.png\", \"start\": 9144109, \"end\": 9342859}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_E.png\", \"start\": 9342859, \"end\": 9433452}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_N.png\", \"start\": 9433452, \"end\": 9516836}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_S.png\", \"start\": 9516836, \"end\": 9600220}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_T.png\", \"start\": 9600220, \"end\": 9798970}, {\"filename\": \"/edge_base/plutonia/textures/SKY3_W.png\", \"start\": 9798970, \"end\": 9889563}, {\"filename\": \"/edge_base/rekkr/graphics/M_DOOM.lmp\", \"start\": 9889563, \"end\": 9914854}, {\"filename\": \"/edge_base/rekkr/graphics/M_EPISOD.lmp\", \"start\": 9914854, \"end\": 9932324}, {\"filename\": \"/edge_base/rekkr/graphics/M_HURT.lmp\", \"start\": 9932324, \"end\": 9934463}, {\"filename\": \"/edge_base/rekkr/graphics/M_JKILL.lmp\", \"start\": 9934463, \"end\": 9937222}, {\"filename\": \"/edge_base/rekkr/graphics/M_LGTTL.lmp\", \"start\": 9937222, \"end\": 9939409}, {\"filename\": \"/edge_base/rekkr/graphics/M_LOADG.lmp\", \"start\": 9939409, \"end\": 9941526}, {\"filename\": \"/edge_base/rekkr/graphics/M_NEWG.lmp\", \"start\": 9941526, \"end\": 9944801}, {\"filename\": \"/edge_base/rekkr/graphics/M_NGAME.lmp\", \"start\": 9944801, \"end\": 9946849}, {\"filename\": \"/edge_base/rekkr/graphics/M_NMARE.lmp\", \"start\": 9946849, \"end\": 9949283}, {\"filename\": \"/edge_base/rekkr/graphics/M_OPTION.lmp\", \"start\": 9949283, \"end\": 9951120}, {\"filename\": \"/edge_base/rekkr/graphics/M_QUITG.lmp\", \"start\": 9951120, \"end\": 9953188}, {\"filename\": \"/edge_base/rekkr/graphics/M_RDTHIS.lmp\", \"start\": 9953188, \"end\": 9954433}, {\"filename\": \"/edge_base/rekkr/graphics/M_ROUGH.lmp\", \"start\": 9954433, \"end\": 9957002}, {\"filename\": \"/edge_base/rekkr/graphics/M_SAVEG.lmp\", \"start\": 9957002, \"end\": 9959222}, {\"filename\": \"/edge_base/rekkr/graphics/M_SGTTL.lmp\", \"start\": 9959222, \"end\": 9961442}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKILL.lmp\", \"start\": 9961442, \"end\": 9989534}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL1.png\", \"start\": 9989534, \"end\": 9990122}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL2.png\", \"start\": 9990122, \"end\": 9990704}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL3.png\", \"start\": 9990704, \"end\": 9991299}, {\"filename\": \"/edge_base/rekkr/graphics/M_SKULL4.png\", \"start\": 9991299, \"end\": 9991887}, {\"filename\": \"/edge_base/rekkr/graphics/M_ULTRA.lmp\", \"start\": 9991887, \"end\": 9994261}, {\"filename\": \"/edge_base/rekkr/graphics/STBARL.lmp\", \"start\": 9994261, \"end\": 9997672}, {\"filename\": \"/edge_base/rekkr/graphics/STBARR.lmp\", \"start\": 9997672, \"end\": 10001083}, {\"filename\": \"/edge_base/rekkr/graphics/WIENTER.lmp\", \"start\": 10001083, \"end\": 10003008}, {\"filename\": \"/edge_base/rekkr/graphics/WIF.lmp\", \"start\": 10003008, \"end\": 10004789}, {\"filename\": \"/edge_base/rekkr/graphics/WILV00.lmp\", \"start\": 10004789, \"end\": 10006388}, {\"filename\": \"/edge_base/rekkr/graphics/WILV01.lmp\", \"start\": 10006388, \"end\": 10007404}, {\"filename\": \"/edge_base/rekkr/graphics/WILV02.lmp\", \"start\": 10007404, \"end\": 10009431}, {\"filename\": \"/edge_base/rekkr/graphics/WILV03.lmp\", \"start\": 10009431, \"end\": 10011998}, {\"filename\": \"/edge_base/rekkr/graphics/WILV04.lmp\", \"start\": 10011998, \"end\": 10013713}, {\"filename\": \"/edge_base/rekkr/graphics/WILV05.lmp\", \"start\": 10013713, \"end\": 10015441}, {\"filename\": \"/edge_base/rekkr/graphics/WILV06.lmp\", \"start\": 10015441, \"end\": 10018825}, {\"filename\": \"/edge_base/rekkr/graphics/WILV07.lmp\", \"start\": 10018825, \"end\": 10022329}, {\"filename\": \"/edge_base/rekkr/graphics/WILV08.lmp\", \"start\": 10022329, \"end\": 10025172}, {\"filename\": \"/edge_base/rekkr/graphics/WILV10.lmp\", \"start\": 10025172, \"end\": 10026551}, {\"filename\": \"/edge_base/rekkr/graphics/WILV11.lmp\", \"start\": 10026551, \"end\": 10028187}, {\"filename\": \"/edge_base/rekkr/graphics/WILV12.lmp\", \"start\": 10028187, \"end\": 10030507}, {\"filename\": \"/edge_base/rekkr/graphics/WILV13.lmp\", \"start\": 10030507, \"end\": 10031717}, {\"filename\": \"/edge_base/rekkr/graphics/WILV14.lmp\", \"start\": 10031717, \"end\": 10034414}, {\"filename\": \"/edge_base/rekkr/graphics/WILV15.lmp\", \"start\": 10034414, \"end\": 10037501}, {\"filename\": \"/edge_base/rekkr/graphics/WILV16.lmp\", \"start\": 10037501, \"end\": 10039142}, {\"filename\": \"/edge_base/rekkr/graphics/WILV17.lmp\", \"start\": 10039142, \"end\": 10041030}, {\"filename\": \"/edge_base/rekkr/graphics/WILV18.lmp\", \"start\": 10041030, \"end\": 10042217}, {\"filename\": \"/edge_base/rekkr/graphics/WILV20.lmp\", \"start\": 10042217, \"end\": 10044178}, {\"filename\": \"/edge_base/rekkr/graphics/WILV21.lmp\", \"start\": 10044178, \"end\": 10047294}, {\"filename\": \"/edge_base/rekkr/graphics/WILV22.lmp\", \"start\": 10047294, \"end\": 10049055}, {\"filename\": \"/edge_base/rekkr/graphics/WILV23.lmp\", \"start\": 10049055, \"end\": 10051914}, {\"filename\": \"/edge_base/rekkr/graphics/WILV24.lmp\", \"start\": 10051914, \"end\": 10053627}, {\"filename\": \"/edge_base/rekkr/graphics/WILV25.lmp\", \"start\": 10053627, \"end\": 10055891}, {\"filename\": \"/edge_base/rekkr/graphics/WILV26.lmp\", \"start\": 10055891, \"end\": 10057124}, {\"filename\": \"/edge_base/rekkr/graphics/WILV27.lmp\", \"start\": 10057124, \"end\": 10057867}, {\"filename\": \"/edge_base/rekkr/graphics/WILV28.lmp\", \"start\": 10057867, \"end\": 10061645}, {\"filename\": \"/edge_base/rekkr/graphics/WILV30.lmp\", \"start\": 10061645, \"end\": 10063497}, {\"filename\": \"/edge_base/rekkr/graphics/WILV31.lmp\", \"start\": 10063497, \"end\": 10065135}, {\"filename\": \"/edge_base/rekkr/graphics/WILV32.lmp\", \"start\": 10065135, \"end\": 10066257}, {\"filename\": \"/edge_base/rekkr/graphics/WILV33.lmp\", \"start\": 10066257, \"end\": 10068596}, {\"filename\": \"/edge_base/rekkr/graphics/WILV34.lmp\", \"start\": 10068596, \"end\": 10070599}, {\"filename\": \"/edge_base/rekkr/graphics/WILV35.lmp\", \"start\": 10070599, \"end\": 10072733}, {\"filename\": \"/edge_base/rekkr/graphics/WILV36.lmp\", \"start\": 10072733, \"end\": 10075799}, {\"filename\": \"/edge_base/rekkr/graphics/WILV37.lmp\", \"start\": 10075799, \"end\": 10077794}, {\"filename\": \"/edge_base/rekkr/graphics/WILV38.lmp\", \"start\": 10077794, \"end\": 10079654}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTF.lmp\", \"start\": 10079654, \"end\": 10079916}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTI.lmp\", \"start\": 10079916, \"end\": 10081122}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTK.lmp\", \"start\": 10081122, \"end\": 10082187}, {\"filename\": \"/edge_base/rekkr/graphics/WIOSTS.lmp\", \"start\": 10082187, \"end\": 10083217}, {\"filename\": \"/edge_base/rekkr/graphics/WIPAR.lmp\", \"start\": 10083217, \"end\": 10083979}, {\"filename\": \"/edge_base/rekkr/graphics/WISCRT2.lmp\", \"start\": 10083979, \"end\": 10085546}, {\"filename\": \"/edge_base/rekkr/graphics/WITIME.lmp\", \"start\": 10085546, \"end\": 10086460}, {\"filename\": \"/edge_base/rekkr/scripts/anims.ddf\", \"start\": 10086460, \"end\": 10086594}, {\"filename\": \"/edge_base/rekkr/scripts/attacks.ddf\", \"start\": 10086594, \"end\": 10087287}, {\"filename\": \"/edge_base/rekkr/scripts/fonts.ddf\", \"start\": 10087287, \"end\": 10087530}, {\"filename\": \"/edge_base/rekkr/scripts/games.ddf\", \"start\": 10087530, \"end\": 10087941}, {\"filename\": \"/edge_base/rekkr/scripts/images.ddf\", \"start\": 10087941, \"end\": 10094739}, {\"filename\": \"/edge_base/rekkr/scripts/language.ldf\", \"start\": 10094739, \"end\": 10095473}, {\"filename\": \"/edge_base/rekkr/scripts/styles.ddf\", \"start\": 10095473, \"end\": 10099601}, {\"filename\": \"/edge_base/rekkr/scripts/things.ddf\", \"start\": 10099601, \"end\": 10101771}, {\"filename\": \"/edge_base/rekkr/scripts/weapons.ddf\", \"start\": 10101771, \"end\": 10103636}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA1.lmp\", \"start\": 10103636, \"end\": 10104261}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA2A8.lmp\", \"start\": 10104261, \"end\": 10105236}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA3A7.lmp\", \"start\": 10105236, \"end\": 10106211}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA4A6.lmp\", \"start\": 10106211, \"end\": 10107186}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVA5.lmp\", \"start\": 10107186, \"end\": 10107817}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB1.lmp\", \"start\": 10107817, \"end\": 10108400}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB2B8.lmp\", \"start\": 10108400, \"end\": 10109367}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB3B7.lmp\", \"start\": 10109367, \"end\": 10110334}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB4B6.lmp\", \"start\": 10110334, \"end\": 10111301}, {\"filename\": \"/edge_base/rekkr/sprites/SSWVB5.lmp\", \"start\": 10111301, \"end\": 10111883}, {\"filename\": \"/edge_base/strife/games.ddf\", \"start\": 10111883, \"end\": 10112796}, {\"filename\": \"/edge_base/strife/images.ddf\", \"start\": 10112796, \"end\": 10113132}, {\"filename\": \"/edge_base/strife/playlist.ddf\", \"start\": 10113132, \"end\": 10114106}, {\"filename\": \"/edge_base/tnt/graphics/BOSSBACK.lmp\", \"start\": 10114106, \"end\": 10233394}, {\"filename\": \"/edge_base/tnt/graphics/CREDIT.lmp\", \"start\": 10233394, \"end\": 10352682}, {\"filename\": \"/edge_base/tnt/graphics/INTERPIC.lmp\", \"start\": 10352682, \"end\": 10471970}, {\"filename\": \"/edge_base/tnt/graphics/TITLEPIC.lmp\", \"start\": 10471970, \"end\": 10591258}, {\"filename\": \"/edge_base/tnt/scripts/games.ddf\", \"start\": 10591258, \"end\": 10591689}, {\"filename\": \"/edge_base/tnt/scripts/images.ddf\", \"start\": 10591689, \"end\": 10593026}, {\"filename\": \"/edge_base/tnt/scripts/language.ldf\", \"start\": 10593026, \"end\": 10596693}, {\"filename\": \"/edge_base/tnt/textures/SKY1_B.png\", \"start\": 10596693, \"end\": 10612686}, {\"filename\": \"/edge_base/tnt/textures/SKY1_E.png\", \"start\": 10612686, \"end\": 10632152}, {\"filename\": \"/edge_base/tnt/textures/SKY1_N.png\", \"start\": 10632152, \"end\": 10649578}, {\"filename\": \"/edge_base/tnt/textures/SKY1_S.png\", \"start\": 10649578, \"end\": 10665485}, {\"filename\": \"/edge_base/tnt/textures/SKY1_T.png\", \"start\": 10665485, \"end\": 10705603}, {\"filename\": \"/edge_base/tnt/textures/SKY1_W.png\", \"start\": 10705603, \"end\": 10724927}, {\"filename\": \"/edge_base/tnt/textures/SKY2_B.png\", \"start\": 10724927, \"end\": 10726238}, {\"filename\": \"/edge_base/tnt/textures/SKY2_E.png\", \"start\": 10726238, \"end\": 10730761}, {\"filename\": \"/edge_base/tnt/textures/SKY2_N.png\", \"start\": 10730761, \"end\": 10731990}, {\"filename\": \"/edge_base/tnt/textures/SKY2_S.png\", \"start\": 10731990, \"end\": 10738207}, {\"filename\": \"/edge_base/tnt/textures/SKY2_T.png\", \"start\": 10738207, \"end\": 10742334}, {\"filename\": \"/edge_base/tnt/textures/SKY2_W.png\", \"start\": 10742334, \"end\": 10743876}, {\"filename\": \"/edge_base/tnt/textures/SKY3_B.png\", \"start\": 10743876, \"end\": 10768347}, {\"filename\": \"/edge_base/tnt/textures/SKY3_E.png\", \"start\": 10768347, \"end\": 10776049}, {\"filename\": \"/edge_base/tnt/textures/SKY3_N.png\", \"start\": 10776049, \"end\": 10783928}, {\"filename\": \"/edge_base/tnt/textures/SKY3_S.png\", \"start\": 10783928, \"end\": 10791276}, {\"filename\": \"/edge_base/tnt/textures/SKY3_T.png\", \"start\": 10791276, \"end\": 10815747}, {\"filename\": \"/edge_base/tnt/textures/SKY3_W.png\", \"start\": 10815747, \"end\": 10823088}, {\"filename\": \"/edge_defs/colormaps/AUTOMAPS.dat\", \"start\": 10823088, \"end\": 10823600}, {\"filename\": \"/edge_defs/colormaps/LAVAMAP.cmp\", \"start\": 10823600, \"end\": 10832304}, {\"filename\": \"/edge_defs/colormaps/NITEVMAP.cmp\", \"start\": 10832304, \"end\": 10832560}, {\"filename\": \"/edge_defs/colormaps/PLYRMAPS.dat\", \"start\": 10832560, \"end\": 10836400}, {\"filename\": \"/edge_defs/colormaps/SARGMAPS.dat\", \"start\": 10836400, \"end\": 10837936}, {\"filename\": \"/edge_defs/colormaps/SHADEMAP.cmp\", \"start\": 10837936, \"end\": 10838192}, {\"filename\": \"/edge_defs/colormaps/SKINMAPS.dat\", \"start\": 10838192, \"end\": 10839472}, {\"filename\": \"/edge_defs/colormaps/SLIMEMAP.cmp\", \"start\": 10839472, \"end\": 10848176}, {\"filename\": \"/edge_defs/colormaps/TEXTMAPS.dat\", \"start\": 10848176, \"end\": 10849968}, {\"filename\": \"/edge_defs/colormaps/TXTBLUES.dat\", \"start\": 10849968, \"end\": 10851248}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS1.dat\", \"start\": 10851248, \"end\": 10852528}, {\"filename\": \"/edge_defs/colormaps/TXTBRNS2.dat\", \"start\": 10852528, \"end\": 10853808}, {\"filename\": \"/edge_defs/colormaps/TXTGREYS.dat\", \"start\": 10853808, \"end\": 10855088}, {\"filename\": \"/edge_defs/colormaps/TXTGRNS.dat\", \"start\": 10855088, \"end\": 10856368}, {\"filename\": \"/edge_defs/colormaps/TXTORANS.dat\", \"start\": 10856368, \"end\": 10857648}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS1.dat\", \"start\": 10857648, \"end\": 10858928}, {\"filename\": \"/edge_defs/colormaps/TXTPNKS2.dat\", \"start\": 10858928, \"end\": 10860208}, {\"filename\": \"/edge_defs/colormaps/TXTPURPS.dat\", \"start\": 10860208, \"end\": 10861488}, {\"filename\": \"/edge_defs/colormaps/TXTREDS.dat\", \"start\": 10861488, \"end\": 10862768}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS1.dat\", \"start\": 10862768, \"end\": 10864048}, {\"filename\": \"/edge_defs/colormaps/TXTYLWS2.dat\", \"start\": 10864048, \"end\": 10865328}, {\"filename\": \"/edge_defs/colormaps/WATERMAP.cmp\", \"start\": 10865328, \"end\": 10874032}, {\"filename\": \"/edge_defs/graphics/CREDIT2.lmp\", \"start\": 10874032, \"end\": 10940920}, {\"filename\": \"/edge_defs/graphics/DLITEXPN.png\", \"start\": 10940920, \"end\": 10955263}, {\"filename\": \"/edge_defs/graphics/EDGECRED.png\", \"start\": 10955263, \"end\": 11122862}, {\"filename\": \"/edge_defs/graphics/EDGETTL.lmp\", \"start\": 11122862, \"end\": 11189750}, {\"filename\": \"/edge_defs/graphics/ENDFONT.png\", \"start\": 11189750, \"end\": 11196854}, {\"filename\": \"/edge_defs/graphics/FONTVERD.png\", \"start\": 11196854, \"end\": 11241485}, {\"filename\": \"/edge_defs/graphics/MOUSE.lmp\", \"start\": 11241485, \"end\": 11241668}, {\"filename\": \"/edge_defs/graphics/M_EPI5.lmp\", \"start\": 11241668, \"end\": 11242812}, {\"filename\": \"/edge_defs/graphics/M_EPI6.lmp\", \"start\": 11242812, \"end\": 11245842}, {\"filename\": \"/edge_defs/graphics/STBARL.lmp\", \"start\": 11245842, \"end\": 11249253}, {\"filename\": \"/edge_defs/graphics/STBARR.lmp\", \"start\": 11249253, \"end\": 11252664}, {\"filename\": \"/edge_defs/graphics/STCFN000.lmp\", \"start\": 11252664, \"end\": 11252808}, {\"filename\": \"/edge_defs/graphics/STCFN132.lmp\", \"start\": 11252808, \"end\": 11252950}, {\"filename\": \"/edge_defs/graphics/STCFN134.lmp\", \"start\": 11252950, \"end\": 11253077}, {\"filename\": \"/edge_defs/graphics/STCFN148.lmp\", \"start\": 11253077, \"end\": 11253212}, {\"filename\": \"/edge_defs/graphics/STDESYNC.lmp\", \"start\": 11253212, \"end\": 11255809}, {\"filename\": \"/edge_defs/graphics/STFB0.lmp\", \"start\": 11255809, \"end\": 11257217}, {\"filename\": \"/edge_defs/graphics/STFB1.lmp\", \"start\": 11257217, \"end\": 11258625}, {\"filename\": \"/edge_defs/graphics/STFB2.lmp\", \"start\": 11258625, \"end\": 11260033}, {\"filename\": \"/edge_defs/graphics/STFB3.lmp\", \"start\": 11260033, \"end\": 11261441}, {\"filename\": \"/edge_defs/graphics/STFB4.lmp\", \"start\": 11261441, \"end\": 11262849}, {\"filename\": \"/edge_defs/graphics/STFB5.lmp\", \"start\": 11262849, \"end\": 11264257}, {\"filename\": \"/edge_defs/graphics/STFB6.lmp\", \"start\": 11264257, \"end\": 11265665}, {\"filename\": \"/edge_defs/graphics/STFB7.lmp\", \"start\": 11265665, \"end\": 11267073}, {\"filename\": \"/edge_defs/graphics/STKEYS6.lmp\", \"start\": 11267073, \"end\": 11267193}, {\"filename\": \"/edge_defs/graphics/STKEYS7.lmp\", \"start\": 11267193, \"end\": 11267313}, {\"filename\": \"/edge_defs/graphics/STKEYS8.lmp\", \"start\": 11267313, \"end\": 11267433}, {\"filename\": \"/edge_defs/graphics/STKEYS9.PNG\", \"start\": 11267433, \"end\": 11267617}, {\"filename\": \"/edge_defs/graphics/STKEYSA.PNG\", \"start\": 11267617, \"end\": 11267869}, {\"filename\": \"/edge_defs/graphics/STPB0.lmp\", \"start\": 11267869, \"end\": 11269347}, {\"filename\": \"/edge_defs/graphics/STPB1.lmp\", \"start\": 11269347, \"end\": 11270825}, {\"filename\": \"/edge_defs/graphics/STPB2.lmp\", \"start\": 11270825, \"end\": 11272303}, {\"filename\": \"/edge_defs/graphics/STPB3.lmp\", \"start\": 11272303, \"end\": 11273781}, {\"filename\": \"/edge_defs/graphics/STPB4.lmp\", \"start\": 11273781, \"end\": 11275259}, {\"filename\": \"/edge_defs/graphics/STPB5.lmp\", \"start\": 11275259, \"end\": 11276737}, {\"filename\": \"/edge_defs/graphics/STPB6.lmp\", \"start\": 11276737, \"end\": 11278215}, {\"filename\": \"/edge_defs/graphics/STPB7.lmp\", \"start\": 11278215, \"end\": 11279693}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR1.png\", \"start\": 11279693, \"end\": 11279886}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR2.png\", \"start\": 11279886, \"end\": 11280071}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR3.png\", \"start\": 11280071, \"end\": 11280256}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR4.png\", \"start\": 11280256, \"end\": 11280443}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR5.png\", \"start\": 11280443, \"end\": 11280709}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR6.png\", \"start\": 11280709, \"end\": 11281050}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR7.png\", \"start\": 11281050, \"end\": 11281344}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR8.png\", \"start\": 11281344, \"end\": 11282728}, {\"filename\": \"/edge_defs/graphics/crosshairs/CROSSHR9.png\", \"start\": 11282728, \"end\": 11283147}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN001.png\", \"start\": 11283147, \"end\": 11283504}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN002.png\", \"start\": 11283504, \"end\": 11283849}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN003.png\", \"start\": 11283849, \"end\": 11284205}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN004.png\", \"start\": 11284205, \"end\": 11284553}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN005.png\", \"start\": 11284553, \"end\": 11284892}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN006.png\", \"start\": 11284892, \"end\": 11285210}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN007.png\", \"start\": 11285210, \"end\": 11285560}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN008.png\", \"start\": 11285560, \"end\": 11285916}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN009.png\", \"start\": 11285916, \"end\": 11286195}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN010.png\", \"start\": 11286195, \"end\": 11286520}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN011.png\", \"start\": 11286520, \"end\": 11286889}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN012.png\", \"start\": 11286889, \"end\": 11287213}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN013.png\", \"start\": 11287213, \"end\": 11287579}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN014.png\", \"start\": 11287579, \"end\": 11287935}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN015.png\", \"start\": 11287935, \"end\": 11288308}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN016.png\", \"start\": 11288308, \"end\": 11288642}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN017.png\", \"start\": 11288642, \"end\": 11289017}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN018.png\", \"start\": 11289017, \"end\": 11289375}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN019.png\", \"start\": 11289375, \"end\": 11289726}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN020.png\", \"start\": 11289726, \"end\": 11290045}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN021.png\", \"start\": 11290045, \"end\": 11290391}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN022.png\", \"start\": 11290391, \"end\": 11290720}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN023.png\", \"start\": 11290720, \"end\": 11291075}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN024.png\", \"start\": 11291075, \"end\": 11291426}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN025.png\", \"start\": 11291426, \"end\": 11291775}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN026.png\", \"start\": 11291775, \"end\": 11292113}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN027.png\", \"start\": 11292113, \"end\": 11292402}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN028.png\", \"start\": 11292402, \"end\": 11292716}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN029.png\", \"start\": 11292716, \"end\": 11292959}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN030.png\", \"start\": 11292959, \"end\": 11293202}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN031.png\", \"start\": 11293202, \"end\": 11293468}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN032.png\", \"start\": 11293468, \"end\": 11293701}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN033.png\", \"start\": 11293701, \"end\": 11294039}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN034.png\", \"start\": 11294039, \"end\": 11294332}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN035.png\", \"start\": 11294332, \"end\": 11294670}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN036.png\", \"start\": 11294670, \"end\": 11294999}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN037.png\", \"start\": 11294999, \"end\": 11295328}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN038.png\", \"start\": 11295328, \"end\": 11295661}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN039.png\", \"start\": 11295661, \"end\": 11295997}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN040.png\", \"start\": 11295997, \"end\": 11296294}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN041.png\", \"start\": 11296294, \"end\": 11296634}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN042.png\", \"start\": 11296634, \"end\": 11296974}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN043.png\", \"start\": 11296974, \"end\": 11297209}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN044.png\", \"start\": 11297209, \"end\": 11297529}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN045.png\", \"start\": 11297529, \"end\": 11297813}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN046.png\", \"start\": 11297813, \"end\": 11298143}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN047.png\", \"start\": 11298143, \"end\": 11298481}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN048.png\", \"start\": 11298481, \"end\": 11298796}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN049.png\", \"start\": 11298796, \"end\": 11299125}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN050.png\", \"start\": 11299125, \"end\": 11299447}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN051.png\", \"start\": 11299447, \"end\": 11299764}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN052.png\", \"start\": 11299764, \"end\": 11300103}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN053.png\", \"start\": 11300103, \"end\": 11300423}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN054.png\", \"start\": 11300423, \"end\": 11300697}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN055.png\", \"start\": 11300697, \"end\": 11301004}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN056.png\", \"start\": 11301004, \"end\": 11301349}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN057.png\", \"start\": 11301349, \"end\": 11301647}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN058.png\", \"start\": 11301647, \"end\": 11302001}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN059.png\", \"start\": 11302001, \"end\": 11302340}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN060.png\", \"start\": 11302340, \"end\": 11302679}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN061.png\", \"start\": 11302679, \"end\": 11303003}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN062.png\", \"start\": 11303003, \"end\": 11303343}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN063.png\", \"start\": 11303343, \"end\": 11303668}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN064.png\", \"start\": 11303668, \"end\": 11304007}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN065.png\", \"start\": 11304007, \"end\": 11304313}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN066.png\", \"start\": 11304313, \"end\": 11304647}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN067.png\", \"start\": 11304647, \"end\": 11304979}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN068.png\", \"start\": 11304979, \"end\": 11305327}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN069.png\", \"start\": 11305327, \"end\": 11305668}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN070.png\", \"start\": 11305668, \"end\": 11305993}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN071.png\", \"start\": 11305993, \"end\": 11306325}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN072.png\", \"start\": 11306325, \"end\": 11306654}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN073.png\", \"start\": 11306654, \"end\": 11306888}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN074.png\", \"start\": 11306888, \"end\": 11307134}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN075.png\", \"start\": 11307134, \"end\": 11307460}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN076.png\", \"start\": 11307460, \"end\": 11307747}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN077.png\", \"start\": 11307747, \"end\": 11308065}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN078.png\", \"start\": 11308065, \"end\": 11308385}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN079.png\", \"start\": 11308385, \"end\": 11308696}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN080.png\", \"start\": 11308696, \"end\": 11309013}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN081.png\", \"start\": 11309013, \"end\": 11309328}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN082.png\", \"start\": 11309328, \"end\": 11309630}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN083.png\", \"start\": 11309630, \"end\": 11309958}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN084.png\", \"start\": 11309958, \"end\": 11310290}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN085.png\", \"start\": 11310290, \"end\": 11310538}, {\"filename\": \"/edge_defs/graphics/edge1_font/ED1FN086.png\", \"start\": 11310538, \"end\": 11310789}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_1x.png\", \"start\": 11310789, \"end\": 11318125}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_grill_2x.png\", \"start\": 11318125, \"end\": 11325514}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_1x.png\", \"start\": 11325514, \"end\": 11325678}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_lines_2x.png\", \"start\": 11325678, \"end\": 11325852}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_1x.png\", \"start\": 11325852, \"end\": 11333155}, {\"filename\": \"/edge_defs/graphics/overlays/overlay_vertical_2x.png\", \"start\": 11333155, \"end\": 11340490}, {\"filename\": \"/edge_defs/movies/ECINTRO.mpg\", \"start\": 11340490, \"end\": 12018378}, {\"filename\": \"/edge_defs/scripts/anims.ddf\", \"start\": 12018378, \"end\": 12020406}, {\"filename\": \"/edge_defs/scripts/attacks.ddf\", \"start\": 12020406, \"end\": 12044707}, {\"filename\": \"/edge_defs/scripts/coal_api.ec\", \"start\": 12044707, \"end\": 12059372}, {\"filename\": \"/edge_defs/scripts/coal_hud.ec\", \"start\": 12059372, \"end\": 12076432}, {\"filename\": \"/edge_defs/scripts/colmap.ddf\", \"start\": 12076432, \"end\": 12080575}, {\"filename\": \"/edge_defs/scripts/flats.ddf\", \"start\": 12080575, \"end\": 12085852}, {\"filename\": \"/edge_defs/scripts/fonts.ddf\", \"start\": 12085852, \"end\": 12087313}, {\"filename\": \"/edge_defs/scripts/games.ddf\", \"start\": 12087313, \"end\": 12091728}, {\"filename\": \"/edge_defs/scripts/images.ddf\", \"start\": 12091728, \"end\": 12110506}, {\"filename\": \"/edge_defs/scripts/language.ldf\", \"start\": 12110506, \"end\": 12226012}, {\"filename\": \"/edge_defs/scripts/levels.ddf\", \"start\": 12226012, \"end\": 12241309}, {\"filename\": \"/edge_defs/scripts/lines.ddf\", \"start\": 12241309, \"end\": 12335266}, {\"filename\": \"/edge_defs/scripts/lua/core/base64.lua\", \"start\": 12335266, \"end\": 12342445}, {\"filename\": \"/edge_defs/scripts/lua/core/debugger.lua\", \"start\": 12342445, \"end\": 12363863}, {\"filename\": \"/edge_defs/scripts/lua/core/json.lua\", \"start\": 12363863, \"end\": 12373500}, {\"filename\": \"/edge_defs/scripts/lua/core/mat2.lua\", \"start\": 12373500, \"end\": 12378187}, {\"filename\": \"/edge_defs/scripts/lua/core/mat3.lua\", \"start\": 12378187, \"end\": 12386489}, {\"filename\": \"/edge_defs/scripts/lua/core/mat4.lua\", \"start\": 12386489, \"end\": 12399593}, {\"filename\": \"/edge_defs/scripts/lua/core/mat4Extended.lua\", \"start\": 12399593, \"end\": 12403468}, {\"filename\": \"/edge_defs/scripts/lua/core/quat.lua\", \"start\": 12403468, \"end\": 12407344}, {\"filename\": \"/edge_defs/scripts/lua/core/vec2.lua\", \"start\": 12407344, \"end\": 12410310}, {\"filename\": \"/edge_defs/scripts/lua/core/vec3.lua\", \"start\": 12410310, \"end\": 12413834}, {\"filename\": \"/edge_defs/scripts/lua/core/vec4.lua\", \"start\": 12413834, \"end\": 12417706}, {\"filename\": \"/edge_defs/scripts/lua/edge_api.lua\", \"start\": 12417706, \"end\": 12425870}, {\"filename\": \"/edge_defs/scripts/lua/edge_hud.lua\", \"start\": 12425870, \"end\": 12443978}, {\"filename\": \"/edge_defs/scripts/movies.ddf\", \"start\": 12443978, \"end\": 12444028}, {\"filename\": \"/edge_defs/scripts/playlist.ddf\", \"start\": 12444028, \"end\": 12446846}, {\"filename\": \"/edge_defs/scripts/rscript.rts\", \"start\": 12446846, \"end\": 12448449}, {\"filename\": \"/edge_defs/scripts/sectors.ddf\", \"start\": 12448449, \"end\": 12464939}, {\"filename\": \"/edge_defs/scripts/sounds.ddf\", \"start\": 12464939, \"end\": 12475791}, {\"filename\": \"/edge_defs/scripts/styles.ddf\", \"start\": 12475791, \"end\": 12481868}, {\"filename\": \"/edge_defs/scripts/switch.ddf\", \"start\": 12481868, \"end\": 12485919}, {\"filename\": \"/edge_defs/scripts/things.ddf\", \"start\": 12485919, \"end\": 12606626}, {\"filename\": \"/edge_defs/scripts/wadfixes.ddf\", \"start\": 12606626, \"end\": 12607455}, {\"filename\": \"/edge_defs/scripts/weapons.ddf\", \"start\": 12607455, \"end\": 12612939}, {\"filename\": \"/edge_defs/sounds/DPBAREXP.lmp\", \"start\": 12612939, \"end\": 12613022}, {\"filename\": \"/edge_defs/sounds/DPBDCLS.lmp\", \"start\": 12613022, \"end\": 12613068}, {\"filename\": \"/edge_defs/sounds/DPBDOPN.lmp\", \"start\": 12613068, \"end\": 12613109}, {\"filename\": \"/edge_defs/sounds/DPBFG.lmp\", \"start\": 12613109, \"end\": 12613297}, {\"filename\": \"/edge_defs/sounds/DPBGACT.lmp\", \"start\": 12613297, \"end\": 12613396}, {\"filename\": \"/edge_defs/sounds/DPBGDTH1.lmp\", \"start\": 12613396, \"end\": 12613485}, {\"filename\": \"/edge_defs/sounds/DPBGDTH2.lmp\", \"start\": 12613485, \"end\": 12613574}, {\"filename\": \"/edge_defs/sounds/DPBGSIT1.lmp\", \"start\": 12613574, \"end\": 12613685}, {\"filename\": \"/edge_defs/sounds/DPBGSIT2.lmp\", \"start\": 12613685, \"end\": 12613796}, {\"filename\": \"/edge_defs/sounds/DPBOSCUB.lmp\", \"start\": 12613796, \"end\": 12613832}, {\"filename\": \"/edge_defs/sounds/DPBOSDTH.lmp\", \"start\": 12613832, \"end\": 12614111}, {\"filename\": \"/edge_defs/sounds/DPBOSPIT.lmp\", \"start\": 12614111, \"end\": 12614156}, {\"filename\": \"/edge_defs/sounds/DPBOSPN.lmp\", \"start\": 12614156, \"end\": 12614194}, {\"filename\": \"/edge_defs/sounds/DPBOSSIT.lmp\", \"start\": 12614194, \"end\": 12614328}, {\"filename\": \"/edge_defs/sounds/DPBRSDTH.lmp\", \"start\": 12614328, \"end\": 12614440}, {\"filename\": \"/edge_defs/sounds/DPBRSSIT.lmp\", \"start\": 12614440, \"end\": 12614548}, {\"filename\": \"/edge_defs/sounds/DPBSPACT.lmp\", \"start\": 12614548, \"end\": 12614604}, {\"filename\": \"/edge_defs/sounds/DPBSPDTH.lmp\", \"start\": 12614604, \"end\": 12614695}, {\"filename\": \"/edge_defs/sounds/DPBSPSIT.lmp\", \"start\": 12614695, \"end\": 12614834}, {\"filename\": \"/edge_defs/sounds/DPBSPWLK.lmp\", \"start\": 12614834, \"end\": 12614879}, {\"filename\": \"/edge_defs/sounds/DPCACDTH.lmp\", \"start\": 12614879, \"end\": 12614968}, {\"filename\": \"/edge_defs/sounds/DPCACSIT.lmp\", \"start\": 12614968, \"end\": 12615080}, {\"filename\": \"/edge_defs/sounds/DPCLAW.lmp\", \"start\": 12615080, \"end\": 12615126}, {\"filename\": \"/edge_defs/sounds/DPCYBDTH.lmp\", \"start\": 12615126, \"end\": 12615263}, {\"filename\": \"/edge_defs/sounds/DPCYBSIT.lmp\", \"start\": 12615263, \"end\": 12615412}, {\"filename\": \"/edge_defs/sounds/DPDBCLS.lmp\", \"start\": 12615412, \"end\": 12615423}, {\"filename\": \"/edge_defs/sounds/DPDBLOAD.lmp\", \"start\": 12615423, \"end\": 12615434}, {\"filename\": \"/edge_defs/sounds/DPDBOPN.lmp\", \"start\": 12615434, \"end\": 12615445}, {\"filename\": \"/edge_defs/sounds/DPDMACT.lmp\", \"start\": 12615445, \"end\": 12615472}, {\"filename\": \"/edge_defs/sounds/DPDMPAIN.lmp\", \"start\": 12615472, \"end\": 12615513}, {\"filename\": \"/edge_defs/sounds/DPDORCLS.lmp\", \"start\": 12615513, \"end\": 12615584}, {\"filename\": \"/edge_defs/sounds/DPDOROPN.lmp\", \"start\": 12615584, \"end\": 12615657}, {\"filename\": \"/edge_defs/sounds/DPDSHTGN.lmp\", \"start\": 12615657, \"end\": 12615700}, {\"filename\": \"/edge_defs/sounds/DPFIRSHT.lmp\", \"start\": 12615700, \"end\": 12615735}, {\"filename\": \"/edge_defs/sounds/DPFIRXPL.lmp\", \"start\": 12615735, \"end\": 12615752}, {\"filename\": \"/edge_defs/sounds/DPFLAME.lmp\", \"start\": 12615752, \"end\": 12615829}, {\"filename\": \"/edge_defs/sounds/DPFLAMST.lmp\", \"start\": 12615829, \"end\": 12615843}, {\"filename\": \"/edge_defs/sounds/DPGETPOW.lmp\", \"start\": 12615843, \"end\": 12615980}, {\"filename\": \"/edge_defs/sounds/DPHOOF.lmp\", \"start\": 12615980, \"end\": 12616060}, {\"filename\": \"/edge_defs/sounds/DPITEMUP.lmp\", \"start\": 12616060, \"end\": 12616147}, {\"filename\": \"/edge_defs/sounds/DPITMBK.lmp\", \"start\": 12616147, \"end\": 12616232}, {\"filename\": \"/edge_defs/sounds/DPKEENDT.lmp\", \"start\": 12616232, \"end\": 12616338}, {\"filename\": \"/edge_defs/sounds/DPKEENPN.lmp\", \"start\": 12616338, \"end\": 12616394}, {\"filename\": \"/edge_defs/sounds/DPKNTDTH.lmp\", \"start\": 12616394, \"end\": 12616517}, {\"filename\": \"/edge_defs/sounds/DPKNTSIT.lmp\", \"start\": 12616517, \"end\": 12616583}, {\"filename\": \"/edge_defs/sounds/DPMANATK.lmp\", \"start\": 12616583, \"end\": 12616649}, {\"filename\": \"/edge_defs/sounds/DPMANDTH.lmp\", \"start\": 12616649, \"end\": 12616727}, {\"filename\": \"/edge_defs/sounds/DPMANSIT.lmp\", \"start\": 12616727, \"end\": 12616824}, {\"filename\": \"/edge_defs/sounds/DPMETAL.lmp\", \"start\": 12616824, \"end\": 12616843}, {\"filename\": \"/edge_defs/sounds/DPMNPAIN.lmp\", \"start\": 12616843, \"end\": 12616903}, {\"filename\": \"/edge_defs/sounds/DPNOWAY.lmp\", \"start\": 12616903, \"end\": 12616944}, {\"filename\": \"/edge_defs/sounds/DPOOF.lmp\", \"start\": 12616944, \"end\": 12616963}, {\"filename\": \"/edge_defs/sounds/DPPDIEHI.lmp\", \"start\": 12616963, \"end\": 12617041}, {\"filename\": \"/edge_defs/sounds/DPPEDTH.lmp\", \"start\": 12617041, \"end\": 12617150}, {\"filename\": \"/edge_defs/sounds/DPPEPAIN.lmp\", \"start\": 12617150, \"end\": 12617200}, {\"filename\": \"/edge_defs/sounds/DPPESIT.lmp\", \"start\": 12617200, \"end\": 12617317}, {\"filename\": \"/edge_defs/sounds/DPPISTOL.lmp\", \"start\": 12617317, \"end\": 12617335}, {\"filename\": \"/edge_defs/sounds/DPPLASMA.lmp\", \"start\": 12617335, \"end\": 12617377}, {\"filename\": \"/edge_defs/sounds/DPPLDETH.lmp\", \"start\": 12617377, \"end\": 12617526}, {\"filename\": \"/edge_defs/sounds/DPPLPAIN.lmp\", \"start\": 12617526, \"end\": 12617556}, {\"filename\": \"/edge_defs/sounds/DPPODTH1.lmp\", \"start\": 12617556, \"end\": 12617645}, {\"filename\": \"/edge_defs/sounds/DPPODTH2.lmp\", \"start\": 12617645, \"end\": 12617734}, {\"filename\": \"/edge_defs/sounds/DPPODTH3.lmp\", \"start\": 12617734, \"end\": 12617823}, {\"filename\": \"/edge_defs/sounds/DPPOPAIN.lmp\", \"start\": 12617823, \"end\": 12617861}, {\"filename\": \"/edge_defs/sounds/DPPOSACT.lmp\", \"start\": 12617861, \"end\": 12617891}, {\"filename\": \"/edge_defs/sounds/DPPOSIT1.lmp\", \"start\": 12617891, \"end\": 12618002}, {\"filename\": \"/edge_defs/sounds/DPPOSIT2.lmp\", \"start\": 12618002, \"end\": 12618113}, {\"filename\": \"/edge_defs/sounds/DPPOSIT3.lmp\", \"start\": 12618113, \"end\": 12618224}, {\"filename\": \"/edge_defs/sounds/DPPSTART.lmp\", \"start\": 12618224, \"end\": 12618265}, {\"filename\": \"/edge_defs/sounds/DPPSTOP.lmp\", \"start\": 12618265, \"end\": 12618282}, {\"filename\": \"/edge_defs/sounds/DPPUNCH.lmp\", \"start\": 12618282, \"end\": 12618319}, {\"filename\": \"/edge_defs/sounds/DPRADIO.lmp\", \"start\": 12618319, \"end\": 12618371}, {\"filename\": \"/edge_defs/sounds/DPRLAUNC.lmp\", \"start\": 12618371, \"end\": 12618434}, {\"filename\": \"/edge_defs/sounds/DPRXPLOD.lmp\", \"start\": 12618434, \"end\": 12618606}, {\"filename\": \"/edge_defs/sounds/DPSAWFUL.lmp\", \"start\": 12618606, \"end\": 12618634}, {\"filename\": \"/edge_defs/sounds/DPSAWHIT.lmp\", \"start\": 12618634, \"end\": 12618662}, {\"filename\": \"/edge_defs/sounds/DPSAWIDL.lmp\", \"start\": 12618662, \"end\": 12618667}, {\"filename\": \"/edge_defs/sounds/DPSAWUP.lmp\", \"start\": 12618667, \"end\": 12618755}, {\"filename\": \"/edge_defs/sounds/DPSGCOCK.lmp\", \"start\": 12618755, \"end\": 12618818}, {\"filename\": \"/edge_defs/sounds/DPSGTATK.lmp\", \"start\": 12618818, \"end\": 12618892}, {\"filename\": \"/edge_defs/sounds/DPSGTDTH.lmp\", \"start\": 12618892, \"end\": 12618981}, {\"filename\": \"/edge_defs/sounds/DPSGTSIT.lmp\", \"start\": 12618981, \"end\": 12619092}, {\"filename\": \"/edge_defs/sounds/DPSHOTGN.lmp\", \"start\": 12619092, \"end\": 12619134}, {\"filename\": \"/edge_defs/sounds/DPSKEACT.lmp\", \"start\": 12619134, \"end\": 12619174}, {\"filename\": \"/edge_defs/sounds/DPSKEATK.lmp\", \"start\": 12619174, \"end\": 12619233}, {\"filename\": \"/edge_defs/sounds/DPSKEDTH.lmp\", \"start\": 12619233, \"end\": 12619313}, {\"filename\": \"/edge_defs/sounds/DPSKEPCH.lmp\", \"start\": 12619313, \"end\": 12619350}, {\"filename\": \"/edge_defs/sounds/DPSKESIT.lmp\", \"start\": 12619350, \"end\": 12619456}, {\"filename\": \"/edge_defs/sounds/DPSKESWG.lmp\", \"start\": 12619456, \"end\": 12619496}, {\"filename\": \"/edge_defs/sounds/DPSKLATK.lmp\", \"start\": 12619496, \"end\": 12619576}, {\"filename\": \"/edge_defs/sounds/DPSKLDTH.lmp\", \"start\": 12619576, \"end\": 12619593}, {\"filename\": \"/edge_defs/sounds/DPSLOP.lmp\", \"start\": 12619593, \"end\": 12619702}, {\"filename\": \"/edge_defs/sounds/DPSPIDTH.lmp\", \"start\": 12619702, \"end\": 12619815}, {\"filename\": \"/edge_defs/sounds/DPSPISIT.lmp\", \"start\": 12619815, \"end\": 12619963}, {\"filename\": \"/edge_defs/sounds/DPSSDTH.lmp\", \"start\": 12619963, \"end\": 12620052}, {\"filename\": \"/edge_defs/sounds/DPSSSIT.lmp\", \"start\": 12620052, \"end\": 12620163}, {\"filename\": \"/edge_defs/sounds/DPSTNMOV.lmp\", \"start\": 12620163, \"end\": 12620171}, {\"filename\": \"/edge_defs/sounds/DPSWTCHN.lmp\", \"start\": 12620171, \"end\": 12620199}, {\"filename\": \"/edge_defs/sounds/DPSWTCHX.lmp\", \"start\": 12620199, \"end\": 12620228}, {\"filename\": \"/edge_defs/sounds/DPTELEPT.lmp\", \"start\": 12620228, \"end\": 12620330}, {\"filename\": \"/edge_defs/sounds/DPTINK.lmp\", \"start\": 12620330, \"end\": 12620382}, {\"filename\": \"/edge_defs/sounds/DPVILACT.lmp\", \"start\": 12620382, \"end\": 12620437}, {\"filename\": \"/edge_defs/sounds/DPVILATK.lmp\", \"start\": 12620437, \"end\": 12620500}, {\"filename\": \"/edge_defs/sounds/DPVILDTH.lmp\", \"start\": 12620500, \"end\": 12620768}, {\"filename\": \"/edge_defs/sounds/DPVILSIT.lmp\", \"start\": 12620768, \"end\": 12620844}, {\"filename\": \"/edge_defs/sounds/DPVIPAIN.lmp\", \"start\": 12620844, \"end\": 12620955}, {\"filename\": \"/edge_defs/sounds/DPWPNUP.lmp\", \"start\": 12620955, \"end\": 12620999}, {\"filename\": \"/edge_defs/sounds/DSACIDFT.ogg\", \"start\": 12620999, \"end\": 12628549, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSCRUSH.lmp\", \"start\": 12628549, \"end\": 12635567}, {\"filename\": \"/edge_defs/sounds/DSDGACT.ogg\", \"start\": 12635567, \"end\": 12643228, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGATK.ogg\", \"start\": 12643228, \"end\": 12650034, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGDTH.ogg\", \"start\": 12650034, \"end\": 12660850, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGPAIN.ogg\", \"start\": 12660850, \"end\": 12666842, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSDGSIT.ogg\", \"start\": 12666842, \"end\": 12673005, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT1.wav\", \"start\": 12673005, \"end\": 12688349, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT2.wav\", \"start\": 12688349, \"end\": 12703821, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT3.wav\", \"start\": 12703821, \"end\": 12716061, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSFSWAT4.wav\", \"start\": 12716061, \"end\": 12731427, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSGLSBRK.wav\", \"start\": 12731427, \"end\": 12764025, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSJPDOWN.lmp\", \"start\": 12764025, \"end\": 12780613}, {\"filename\": \"/edge_defs/sounds/DSJPFLOW.lmp\", \"start\": 12780613, \"end\": 12784535}, {\"filename\": \"/edge_defs/sounds/DSJPIDLE.lmp\", \"start\": 12784535, \"end\": 12787502}, {\"filename\": \"/edge_defs/sounds/DSJPMOVE.lmp\", \"start\": 12787502, \"end\": 12788919}, {\"filename\": \"/edge_defs/sounds/DSJPRISE.lmp\", \"start\": 12788919, \"end\": 12796739}, {\"filename\": \"/edge_defs/sounds/DSMUCKFT.ogg\", \"start\": 12796739, \"end\": 12802813, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSSECRET.ogg\", \"start\": 12802813, \"end\": 12815654, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWATRFT.ogg\", \"start\": 12815654, \"end\": 12823315, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/DSWTDIVE.wav\", \"start\": 12823315, \"end\": 12845791, \"audio\": 1}, {\"filename\": \"/edge_defs/sounds/HEARTBT1.ogg\", \"start\": 12845791, \"end\": 12866146, \"audio\": 1}, {\"filename\": \"/edge_defs/sprites/ARM3A0.png\", \"start\": 12866146, \"end\": 12866896}, {\"filename\": \"/edge_defs/sprites/ARM3B0.png\", \"start\": 12866896, \"end\": 12867574}, {\"filename\": \"/edge_defs/sprites/ARM4A0.png\", \"start\": 12867574, \"end\": 12868368}, {\"filename\": \"/edge_defs/sprites/ARM4B0.png\", \"start\": 12868368, \"end\": 12869069}, {\"filename\": \"/edge_defs/sprites/ARM5A0.png\", \"start\": 12869069, \"end\": 12869572}, {\"filename\": \"/edge_defs/sprites/ARM5B0.png\", \"start\": 12869572, \"end\": 12870087}, {\"filename\": \"/edge_defs/sprites/BSPHA0.png\", \"start\": 12870087, \"end\": 12871303}, {\"filename\": \"/edge_defs/sprites/BSPHB0.png\", \"start\": 12871303, \"end\": 12872524}, {\"filename\": \"/edge_defs/sprites/BSPHC0.png\", \"start\": 12872524, \"end\": 12873734}, {\"filename\": \"/edge_defs/sprites/BSPHD0.png\", \"start\": 12873734, \"end\": 12874935}, {\"filename\": \"/edge_defs/sprites/BSPHE0.png\", \"start\": 12874935, \"end\": 12876216}, {\"filename\": \"/edge_defs/sprites/BSPHF0.png\", \"start\": 12876216, \"end\": 12877559}, {\"filename\": \"/edge_defs/sprites/BSPHG0.png\", \"start\": 12877559, \"end\": 12878963}, {\"filename\": \"/edge_defs/sprites/BSPHH0.png\", \"start\": 12878963, \"end\": 12880308}, {\"filename\": \"/edge_defs/sprites/BSPHI0.png\", \"start\": 12880308, \"end\": 12881615}, {\"filename\": \"/edge_defs/sprites/BSPHJ0.png\", \"start\": 12881615, \"end\": 12882882}, {\"filename\": \"/edge_defs/sprites/BSPHK0.png\", \"start\": 12882882, \"end\": 12884119}, {\"filename\": \"/edge_defs/sprites/GLS1A0.lmp\", \"start\": 12884119, \"end\": 12884213}, {\"filename\": \"/edge_defs/sprites/GLS2A0.lmp\", \"start\": 12884213, \"end\": 12884427}, {\"filename\": \"/edge_defs/sprites/GLS3A0.lmp\", \"start\": 12884427, \"end\": 12884731}, {\"filename\": \"/edge_defs/sprites/GLS4A0.lmp\", \"start\": 12884731, \"end\": 12885099}, {\"filename\": \"/edge_defs/sprites/GLS5A0.lmp\", \"start\": 12885099, \"end\": 12885494}, {\"filename\": \"/edge_defs/sprites/GLS6A0.lmp\", \"start\": 12885494, \"end\": 12885930}, {\"filename\": \"/edge_defs/sprites/GLS7A0.lmp\", \"start\": 12885930, \"end\": 12886400}, {\"filename\": \"/edge_defs/sprites/GLS8A0.lmp\", \"start\": 12886400, \"end\": 12886832}, {\"filename\": \"/edge_defs/sprites/GLS9A0.lmp\", \"start\": 12886832, \"end\": 12887195}, {\"filename\": \"/edge_defs/sprites/JPCKA0.lmp\", \"start\": 12887195, \"end\": 12888011}, {\"filename\": \"/edge_defs/sprites/JPCKB0.lmp\", \"start\": 12888011, \"end\": 12888829}, {\"filename\": \"/edge_defs/sprites/JPCKC0.lmp\", \"start\": 12888829, \"end\": 12889647}, {\"filename\": \"/edge_defs/sprites/LVASA0.png\", \"start\": 12889647, \"end\": 12890945}, {\"filename\": \"/edge_defs/sprites/LVASB0.png\", \"start\": 12890945, \"end\": 12892328}, {\"filename\": \"/edge_defs/sprites/LVASC0.png\", \"start\": 12892328, \"end\": 12893682}, {\"filename\": \"/edge_defs/sprites/LVASD0.png\", \"start\": 12893682, \"end\": 12894982}, {\"filename\": \"/edge_defs/sprites/LVASE0.png\", \"start\": 12894982, \"end\": 12896251}, {\"filename\": \"/edge_defs/sprites/LVASF0.png\", \"start\": 12896251, \"end\": 12897474}, {\"filename\": \"/edge_defs/sprites/MUDSA0.png\", \"start\": 12897474, \"end\": 12898684}, {\"filename\": \"/edge_defs/sprites/MUDSB0.png\", \"start\": 12898684, \"end\": 12899896}, {\"filename\": \"/edge_defs/sprites/MUDSC0.png\", \"start\": 12899896, \"end\": 12901087}, {\"filename\": \"/edge_defs/sprites/MUDSD0.png\", \"start\": 12901087, \"end\": 12902272}, {\"filename\": \"/edge_defs/sprites/MUDSE0.png\", \"start\": 12902272, \"end\": 12903523}, {\"filename\": \"/edge_defs/sprites/MUDSF0.png\", \"start\": 12903523, \"end\": 12904764}, {\"filename\": \"/edge_defs/sprites/MUDSG0.png\", \"start\": 12904764, \"end\": 12906013}, {\"filename\": \"/edge_defs/sprites/MUDSH0.png\", \"start\": 12906013, \"end\": 12907235}, {\"filename\": \"/edge_defs/sprites/NVSCA0.lmp\", \"start\": 12907235, \"end\": 12907839}, {\"filename\": \"/edge_defs/sprites/NVSCB0.lmp\", \"start\": 12907839, \"end\": 12908443}, {\"filename\": \"/edge_defs/sprites/PLAYX1.lmp\", \"start\": 12908443, \"end\": 12909366}, {\"filename\": \"/edge_defs/sprites/PLAYX2X8.lmp\", \"start\": 12909366, \"end\": 12910582}, {\"filename\": \"/edge_defs/sprites/PLAYX3X7.lmp\", \"start\": 12910582, \"end\": 12911977}, {\"filename\": \"/edge_defs/sprites/PLAYX4X6.lmp\", \"start\": 12911977, \"end\": 12913106}, {\"filename\": \"/edge_defs/sprites/PLAYX5.lmp\", \"start\": 12913106, \"end\": 12913908}, {\"filename\": \"/edge_defs/sprites/PLAYY1.lmp\", \"start\": 12913908, \"end\": 12914856}, {\"filename\": \"/edge_defs/sprites/PLAYY2Y8.lmp\", \"start\": 12914856, \"end\": 12916084}, {\"filename\": \"/edge_defs/sprites/PLAYY3Y7.lmp\", \"start\": 12916084, \"end\": 12917470}, {\"filename\": \"/edge_defs/sprites/PLAYY4Y6.lmp\", \"start\": 12917470, \"end\": 12918608}, {\"filename\": \"/edge_defs/sprites/PLAYY5.lmp\", \"start\": 12918608, \"end\": 12919405}, {\"filename\": \"/edge_defs/sprites/PLS1A0.lmp\", \"start\": 12919405, \"end\": 12919790}, {\"filename\": \"/edge_defs/sprites/PLS1B0.lmp\", \"start\": 12919790, \"end\": 12920189}, {\"filename\": \"/edge_defs/sprites/PLS1C0.lmp\", \"start\": 12920189, \"end\": 12920574}, {\"filename\": \"/edge_defs/sprites/PLS1D0.lmp\", \"start\": 12920574, \"end\": 12920973}, {\"filename\": \"/edge_defs/sprites/PLS1E0.lmp\", \"start\": 12920973, \"end\": 12923331}, {\"filename\": \"/edge_defs/sprites/PLS1F0.lmp\", \"start\": 12923331, \"end\": 12925689}, {\"filename\": \"/edge_defs/sprites/PLS1G0.lmp\", \"start\": 12925689, \"end\": 12927916}, {\"filename\": \"/edge_defs/sprites/PLS2A0.lmp\", \"start\": 12927916, \"end\": 12928132}, {\"filename\": \"/edge_defs/sprites/PLS2B0.lmp\", \"start\": 12928132, \"end\": 12928375}, {\"filename\": \"/edge_defs/sprites/PLS2C0.lmp\", \"start\": 12928375, \"end\": 12928587}, {\"filename\": \"/edge_defs/sprites/PLS2D0.lmp\", \"start\": 12928587, \"end\": 12928977}, {\"filename\": \"/edge_defs/sprites/PLS2E0.lmp\", \"start\": 12928977, \"end\": 12929671}, {\"filename\": \"/edge_defs/sprites/PRT1A0.png\", \"start\": 12929671, \"end\": 12930543}, {\"filename\": \"/edge_defs/sprites/PRT2A0.png\", \"start\": 12930543, \"end\": 12931415}, {\"filename\": \"/edge_defs/sprites/PRT3A0.png\", \"start\": 12931415, \"end\": 12931544}, {\"filename\": \"/edge_defs/sprites/SLDGA0.png\", \"start\": 12931544, \"end\": 12932760}, {\"filename\": \"/edge_defs/sprites/SLDGB0.png\", \"start\": 12932760, \"end\": 12933978}, {\"filename\": \"/edge_defs/sprites/SLDGC0.png\", \"start\": 12933978, \"end\": 12935174}, {\"filename\": \"/edge_defs/sprites/SLDGD0.png\", \"start\": 12935174, \"end\": 12936361}, {\"filename\": \"/edge_defs/sprites/SLDGE0.png\", \"start\": 12936361, \"end\": 12937612}, {\"filename\": \"/edge_defs/sprites/SLDGF0.png\", \"start\": 12937612, \"end\": 12938853}, {\"filename\": \"/edge_defs/sprites/SLDGG0.png\", \"start\": 12938853, \"end\": 12940102}, {\"filename\": \"/edge_defs/sprites/SLDGH0.png\", \"start\": 12940102, \"end\": 12941324}, {\"filename\": \"/edge_defs/sprites/SLIMA0.png\", \"start\": 12941324, \"end\": 12942525}, {\"filename\": \"/edge_defs/sprites/SLIMB0.png\", \"start\": 12942525, \"end\": 12943730}, {\"filename\": \"/edge_defs/sprites/SLIMC0.png\", \"start\": 12943730, \"end\": 12944917}, {\"filename\": \"/edge_defs/sprites/SLIMD0.png\", \"start\": 12944917, \"end\": 12946095}, {\"filename\": \"/edge_defs/sprites/SLIME0.png\", \"start\": 12946095, \"end\": 12947340}, {\"filename\": \"/edge_defs/sprites/SLIMF0.png\", \"start\": 12947340, \"end\": 12948576}, {\"filename\": \"/edge_defs/sprites/SLIMG0.png\", \"start\": 12948576, \"end\": 12949821}, {\"filename\": \"/edge_defs/sprites/SLIMH0.png\", \"start\": 12949821, \"end\": 12951037}, {\"filename\": \"/edge_defs/sprites/SPSHA0.png\", \"start\": 12951037, \"end\": 12952254}, {\"filename\": \"/edge_defs/sprites/SPSHB0.png\", \"start\": 12952254, \"end\": 12953474}, {\"filename\": \"/edge_defs/sprites/SPSHC0.png\", \"start\": 12953474, \"end\": 12954685}, {\"filename\": \"/edge_defs/sprites/SPSHD0.png\", \"start\": 12954685, \"end\": 12955886}, {\"filename\": \"/edge_defs/sprites/SPSHE0.png\", \"start\": 12955886, \"end\": 12957166}, {\"filename\": \"/edge_defs/sprites/SPSHF0.png\", \"start\": 12957166, \"end\": 12958517}, {\"filename\": \"/edge_defs/sprites/SPSHG0.png\", \"start\": 12958517, \"end\": 12959924}, {\"filename\": \"/edge_defs/sprites/SPSHH0.png\", \"start\": 12959924, \"end\": 12961276}, {\"filename\": \"/edge_defs/sprites/SPSHI0.png\", \"start\": 12961276, \"end\": 12962587}, {\"filename\": \"/edge_defs/sprites/SPSHJ0.png\", \"start\": 12962587, \"end\": 12963855}, {\"filename\": \"/edge_defs/sprites/SPSHK0.png\", \"start\": 12963855, \"end\": 12965092}, {\"filename\": \"/edge_defs/sprites/TSTPA0.png\", \"start\": 12965092, \"end\": 12966217}, {\"filename\": \"/edge_defs/sprites/TSTPB0.lmp\", \"start\": 12966217, \"end\": 12966559}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA1.png\", \"start\": 12966559, \"end\": 12967839}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA2.png\", \"start\": 12967839, \"end\": 12969392}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA3.png\", \"start\": 12969392, \"end\": 12971023}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA4.png\", \"start\": 12971023, \"end\": 12972556}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA5.png\", \"start\": 12972556, \"end\": 12973742}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA6.png\", \"start\": 12973742, \"end\": 12975258}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA7.png\", \"start\": 12975258, \"end\": 12976851}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDA8.png\", \"start\": 12976851, \"end\": 12978369}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB1.png\", \"start\": 12978369, \"end\": 12979599}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB2.png\", \"start\": 12979599, \"end\": 12981119}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB3.png\", \"start\": 12981119, \"end\": 12982726}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB4.png\", \"start\": 12982726, \"end\": 12984259}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB5.png\", \"start\": 12984259, \"end\": 12985469}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB6.png\", \"start\": 12985469, \"end\": 12986967}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB7.png\", \"start\": 12986967, \"end\": 12988559}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDB8.png\", \"start\": 12988559, \"end\": 12990073}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC1.png\", \"start\": 12990073, \"end\": 12991370}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC2.png\", \"start\": 12991370, \"end\": 12992876}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC3.png\", \"start\": 12992876, \"end\": 12994447}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC4.png\", \"start\": 12994447, \"end\": 12995978}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC5.png\", \"start\": 12995978, \"end\": 12997315}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC6.png\", \"start\": 12997315, \"end\": 12998835}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC7.png\", \"start\": 12998835, \"end\": 13000371}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDC8.png\", \"start\": 13000371, \"end\": 13001860}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD1.png\", \"start\": 13001860, \"end\": 13003171}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD2.png\", \"start\": 13003171, \"end\": 13004689}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD3.png\", \"start\": 13004689, \"end\": 13006277}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD4.png\", \"start\": 13006277, \"end\": 13007802}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD5.png\", \"start\": 13007802, \"end\": 13009128}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD6.png\", \"start\": 13009128, \"end\": 13010670}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD7.png\", \"start\": 13010670, \"end\": 13012243}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDD8.png\", \"start\": 13012243, \"end\": 13013746}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE1.png\", \"start\": 13013746, \"end\": 13015108}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE2.png\", \"start\": 13015108, \"end\": 13016625}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE3.png\", \"start\": 13016625, \"end\": 13018173}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE4.png\", \"start\": 13018173, \"end\": 13019771}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE5.png\", \"start\": 13019771, \"end\": 13021209}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE6.png\", \"start\": 13021209, \"end\": 13022759}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE7.png\", \"start\": 13022759, \"end\": 13024313}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDE8.png\", \"start\": 13024313, \"end\": 13025872}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF1.png\", \"start\": 13025872, \"end\": 13027269}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF2.png\", \"start\": 13027269, \"end\": 13028840}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF3.png\", \"start\": 13028840, \"end\": 13030442}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF4.png\", \"start\": 13030442, \"end\": 13032008}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF5.png\", \"start\": 13032008, \"end\": 13033411}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF6.png\", \"start\": 13033411, \"end\": 13034928}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF7.png\", \"start\": 13034928, \"end\": 13036524}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDF8.png\", \"start\": 13036524, \"end\": 13038132}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG1.png\", \"start\": 13038132, \"end\": 13039521}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG2.png\", \"start\": 13039521, \"end\": 13041109}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG3.png\", \"start\": 13041109, \"end\": 13042753}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG4.png\", \"start\": 13042753, \"end\": 13044273}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG5.png\", \"start\": 13044273, \"end\": 13045623}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG6.png\", \"start\": 13045623, \"end\": 13047144}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG7.png\", \"start\": 13047144, \"end\": 13048766}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDG8.png\", \"start\": 13048766, \"end\": 13050336}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH1.png\", \"start\": 13050336, \"end\": 13051646}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH2.png\", \"start\": 13051646, \"end\": 13053177}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH3.png\", \"start\": 13053177, \"end\": 13054769}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH4.png\", \"start\": 13054769, \"end\": 13056252}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH5.png\", \"start\": 13056252, \"end\": 13057546}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH6.png\", \"start\": 13057546, \"end\": 13059013}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH7.png\", \"start\": 13059013, \"end\": 13060591}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDH8.png\", \"start\": 13060591, \"end\": 13062160}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDI0.png\", \"start\": 13062160, \"end\": 13063850}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDJ0.png\", \"start\": 13063850, \"end\": 13065632}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDK0.png\", \"start\": 13065632, \"end\": 13067378}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDL0.png\", \"start\": 13067378, \"end\": 13069098}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDM0.png\", \"start\": 13069098, \"end\": 13070825}, {\"filename\": \"/edge_defs/sprites/mbf_dog/MBFDN0.png\", \"start\": 13070825, \"end\": 13072564}, {\"filename\": \"/edge_defs/textures/FUZZMAP8.png\", \"start\": 13072564, \"end\": 13087364}, {\"filename\": \"/edge_defs/textures/PORTAL7A.jpg\", \"start\": 13087364, \"end\": 13109482}, {\"filename\": \"/edge_defs/textures/PORTAL7B.jpg\", \"start\": 13109482, \"end\": 13127835}, {\"filename\": \"/edge_defs/textures/PORTAL7C.jpg\", \"start\": 13127835, \"end\": 13143326}, {\"filename\": \"/edge_defs/textures/PORTAL7D.jpg\", \"start\": 13143326, \"end\": 13158620}, {\"filename\": \"/edge_defs/textures/PORTAL7E.jpg\", \"start\": 13158620, \"end\": 13173487}, {\"filename\": \"/edge_defs/textures/PORTAL7F.jpg\", \"start\": 13173487, \"end\": 13190488}, {\"filename\": \"/edge_defs/textures/PORTAL7G.jpg\", \"start\": 13190488, \"end\": 13211196}, {\"filename\": \"/edge_defs/ttf/ECFONT01.ttf\", \"start\": 13211196, \"end\": 13248676}, {\"filename\": \"/edge_defs/ttf/ECFONT02.ttf\", \"start\": 13248676, \"end\": 13437168}, {\"filename\": \"/edge_defs/ttf/ECFONT03.ttf\", \"start\": 13437168, \"end\": 13502256}, {\"filename\": \"/edge_defs/version.txt\", \"start\": 13502256, \"end\": 13502260}, {\"filename\": \"/freedm.wad\", \"start\": 13502260, \"end\": 35326708}, {\"filename\": \"/freedoom2.wad\", \"start\": 35326708, \"end\": 63870840}, {\"filename\": \"/soundfont/16-Bit Game Station.sf2\", \"start\": 63870840, \"end\": 67830188}, {\"filename\": \"/soundfont/Apogee.op2\", \"start\": 67830188, \"end\": 67842096}, {\"filename\": \"/soundfont/ChipFreak.sf2\", \"start\": 67842096, \"end\": 67951580}, {\"filename\": \"/soundfont/Default.sf2\", \"start\": 67951580, \"end\": 72143496}, {\"filename\": \"/soundfont/FDDMX.op2\", \"start\": 72143496, \"end\": 72155404}, {\"filename\": \"/soundfont/ProtoSquare!.sf2\", \"start\": 72155404, \"end\": 72519642}], \"remote_package_size\": 54051219, \"package_uuid\": \"sha256-1d4d3186fb8488bfc566327ebfd04043e84416d12f9c6071ce47e5769d2d3ba7\"});\n\n  })();\n\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\nvar ENVIRONMENT_IS_WEB = true;\nvar ENVIRONMENT_IS_WORKER = false;\nvar ENVIRONMENT_IS_NODE = false;\nvar ENVIRONMENT_IS_SHELL = false;\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary;\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\n  // is gone, so we saved it, and we use it here instead of any other info.\n  if (_scriptDir) {\n    scriptDirectory = _scriptDir;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n  // they are removed because they could contain a slash.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n// include: web_or_worker_shell_read.js\nread_ = (url) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, false);\n    xhr.send(null);\n    return xhr.responseText;\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = (url) => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.responseType = 'arraybuffer';\n      xhr.send(null);\n      return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = (url, onload, onerror) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = () => {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  }\n\n// end include: web_or_worker_shell_read.js\n  }\n} else\n{\n}\n\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.error.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];\n\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\nif (Module['quit']) quit_ = Module['quit'];\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n\n// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary; \nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\n\nif (typeof WebAssembly != 'object') {\n  abort('no native wasm support detected');\n}\n\n// include: base64Utils.js\n// Converts a string of base64 into a byte array (Uint8Array).\nfunction intArrayFromBase64(s) {\n\n  var decoded = atob(s);\n  var bytes = new Uint8Array(decoded.length);\n  for (var i = 0 ; i < decoded.length ; ++i) {\n    bytes[i] = decoded.charCodeAt(i);\n  }\n  return bytes;\n}\n\n// If filename is a base64 data URI, parses and returns data (Buffer on node,\n// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.\nfunction tryParseAsDataURI(filename) {\n  if (!isDataURI(filename)) {\n    return;\n  }\n\n  return intArrayFromBase64(filename.slice(dataURIPrefix.length));\n}\n// end include: base64Utils.js\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n// In STRICT mode, we only define assert() when ASSERTIONS is set.  i.e. we\n// don't define it at all in release modes.  This matches the behaviour of\n// MINIMAL_RUNTIME.\n// TODO(sbc): Make this the default even without STRICT enabled.\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    // This build was created without ASSERTIONS defined.  `assert()` should not\n    // ever be called in this configuration but in case there are callers in\n    // the wild leave this simple abort() implemenation here for now.\n    abort(text);\n  }\n}\n\n// Memory management\n\nvar HEAP,\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/** @type {!Float64Array} */\n  HEAPF64;\n\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n}\n\n// include: runtime_stack_check.js\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// end include: runtime_assertions.js\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATMAIN__    = []; // functions called when main() is to be run\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\n\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  runtimeInitialized = true;\n\n  \nif (!Module[\"noFSInit\"] && !FS.init.initialized)\n  FS.init();\nFS.ignorePermissions = false;\n\nTTY.init();\n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  \n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction postRun() {\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnPreMain(cb) {\n  __ATMAIN__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\n\nfunction getUniqueRunDependency(id) {\n  return id;\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  Module['monitorRunDependencies']?.(runDependencies);\n\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  Module['monitorRunDependencies']?.(runDependencies);\n\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  Module['onAbort']?.(what);\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  what += '. Build with -sASSERTIONS for more info.';\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  readyPromiseReject(e);\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n/**\n * Indicates whether filename is a base64 data URI.\n * @noinline\n */\nvar isDataURI = (filename) => filename.startsWith(dataURIPrefix);\n\n/**\n * Indicates whether filename is delivered via file protocol (as opposed to http/https)\n * @noinline\n */\nvar isFileURI = (filename) => filename.startsWith('file://');\n// end include: URIUtils.js\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;\n  wasmBinaryFile = 'edge-classic.wasm';\n  if (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n  }\n\nfunction getBinarySync(file) {\n  if (file == wasmBinaryFile && wasmBinary) {\n    return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n    return readBinary(file);\n  }\n  throw \"both async and sync fetching of the wasm failed\";\n}\n\nfunction getBinaryPromise(binaryFile) {\n  // If we don't have the binary yet, try to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary\n      && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function'\n    ) {\n      return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\n        if (!response['ok']) {\n          throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n        }\n        return response['arrayBuffer']();\n      }).catch(() => getBinarySync(binaryFile));\n    }\n  }\n\n  // Otherwise, getBinarySync should be able to get it synchronously\n  return Promise.resolve().then(() => getBinarySync(binaryFile));\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n  return getBinaryPromise(binaryFile).then((binary) => {\n    return WebAssembly.instantiate(binary, imports);\n  }).then((instance) => {\n    return instance;\n  }).then(receiver, (reason) => {\n    err(`failed to asynchronously prepare wasm: ${reason}`);\n\n    abort(reason);\n  });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n  if (!binary &&\n      typeof WebAssembly.instantiateStreaming == 'function' &&\n      !isDataURI(binaryFile) &&\n      typeof fetch == 'function') {\n    return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\n      // Suppress closure warning here since the upstream definition for\n      // instantiateStreaming only allows Promise<Repsponse> rather than\n      // an actual Response.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n      /** @suppress {checkTypes} */\n      var result = WebAssembly.instantiateStreaming(response, imports);\n\n      return result.then(\n        callback,\n        function(reason) {\n          // We expect the most common failure cause to be a bad MIME type for the binary,\n          // in which case falling back to ArrayBuffer instantiation should work.\n          err(`wasm streaming compile failed: ${reason}`);\n          err('falling back to ArrayBuffer instantiation');\n          return instantiateArrayBuffer(binaryFile, imports, callback);\n        });\n    });\n  }\n  return instantiateArrayBuffer(binaryFile, imports, callback);\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports,\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    wasmExports = instance.exports;\n\n    wasmExports = Asyncify.instrumentWasmExports(wasmExports);\n\n    \n\n    wasmMemory = wasmExports['memory'];\n    \n    updateMemoryViews();\n\n    wasmTable = wasmExports['__indirect_function_table'];\n    \n\n    addOnInit(wasmExports['__wasm_call_ctors']);\n\n    removeRunDependency('wasm-instantiate');\n    return wasmExports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch(e) {\n      err(`Module.instantiateWasm callback failed with error: ${e}`);\n        // If instantiation fails, reject the module ready promise.\n        readyPromiseReject(e);\n    }\n  }\n\n  // If instantiation fails, reject the module ready promise.\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// include: runtime_debug.js\n// end include: runtime_debug.js\n// === Body ===\n\nvar ASM_CONSTS = {\n  647080: () => { if (Module.edgePostInit) { Module.edgePostInit(); } },  \n 647136: ($0, $1) => { const args = []; for (let i = 0; i < $0; i++) { args.push(UTF8ToString(HEAP32[($1 >> 2) + i])); } console.log(`Edge command line : $ { args }`); const homeIndex = args.indexOf(\"-home\"); if (homeIndex === -1 || homeIndex >= args.length || args[homeIndex + 1].startsWith(\"-\")) { throw \"No home command line option specified\" } const homeDir = args[homeIndex + 1]; if (!FS.analyzePath(homeDir).exists) { FS.mkdirTree(homeDir); } FS.mount(IDBFS, {}, homeDir); FS.syncfs( true, function(err) { if (err) { console.error(`Error mounting home dir $ { err }`); return; } Module._I_WebMain($0, $1); }); },  \n 647733: () => { if (Module.onFullscreen) { Module.onFullscreen(); } },  \n 647789: ($0) => { if (Module.edgePreSyncFS) { Module.edgePreSyncFS(); } FS.syncfs( $0, function(err) { if (Module.edgePostSyncFS) { Module.edgePostSyncFS(); } }); },  \n 647938: ($0) => { var str = UTF8ToString($0) + '\\n\\n' + 'Abort/Retry/Ignore/AlwaysIgnore? [ariA] :'; var reply = window.prompt(str, \"i\"); if (reply === null) { reply = \"i\"; } return allocate(intArrayFromString(reply), 'i8', ALLOC_NORMAL); },  \n 648163: () => { if (typeof(AudioContext) !== 'undefined') { return true; } else if (typeof(webkitAudioContext) !== 'undefined') { return true; } return false; },  \n 648310: () => { if ((typeof(navigator.mediaDevices) !== 'undefined') && (typeof(navigator.mediaDevices.getUserMedia) !== 'undefined')) { return true; } else if (typeof(navigator.webkitGetUserMedia) !== 'undefined') { return true; } return false; },  \n 648544: ($0) => { if(typeof(Module['SDL2']) === 'undefined') { Module['SDL2'] = {}; } var SDL2 = Module['SDL2']; if (!$0) { SDL2.audio = {}; } else { SDL2.capture = {}; } if (!SDL2.audioContext) { if (typeof(AudioContext) !== 'undefined') { SDL2.audioContext = new AudioContext(); } else if (typeof(webkitAudioContext) !== 'undefined') { SDL2.audioContext = new webkitAudioContext(); } if (SDL2.audioContext) { autoResumeAudioContext(SDL2.audioContext); } } return SDL2.audioContext === undefined ? -1 : 0; },  \n 649037: () => { var SDL2 = Module['SDL2']; return SDL2.audioContext.sampleRate; },  \n 649105: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; var have_microphone = function(stream) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); SDL2.capture.silenceTimer = undefined; } SDL2.capture.mediaStreamNode = SDL2.audioContext.createMediaStreamSource(stream); SDL2.capture.scriptProcessorNode = SDL2.audioContext.createScriptProcessor($1, $0, 1); SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) { if ((SDL2 === undefined) || (SDL2.capture === undefined)) { return; } audioProcessingEvent.outputBuffer.getChannelData(0).fill(0.0); SDL2.capture.currentCaptureBuffer = audioProcessingEvent.inputBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.mediaStreamNode.connect(SDL2.capture.scriptProcessorNode); SDL2.capture.scriptProcessorNode.connect(SDL2.audioContext.destination); SDL2.capture.stream = stream; }; var no_microphone = function(error) { }; SDL2.capture.silenceBuffer = SDL2.audioContext.createBuffer($0, $1, SDL2.audioContext.sampleRate); SDL2.capture.silenceBuffer.getChannelData(0).fill(0.0); var silence_callback = function() { SDL2.capture.currentCaptureBuffer = SDL2.capture.silenceBuffer; dynCall('vi', $2, [$3]); }; SDL2.capture.silenceTimer = setTimeout(silence_callback, ($1 / SDL2.audioContext.sampleRate) * 1000); if ((navigator.mediaDevices !== undefined) && (navigator.mediaDevices.getUserMedia !== undefined)) { navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(have_microphone).catch(no_microphone); } else if (navigator.webkitGetUserMedia !== undefined) { navigator.webkitGetUserMedia({ audio: true, video: false }, have_microphone, no_microphone); } },  \n 650757: ($0, $1, $2, $3) => { var SDL2 = Module['SDL2']; SDL2.audio.scriptProcessorNode = SDL2.audioContext['createScriptProcessor']($1, 0, $0); SDL2.audio.scriptProcessorNode['onaudioprocess'] = function (e) { if ((SDL2 === undefined) || (SDL2.audio === undefined)) { return; } SDL2.audio.currentOutputBuffer = e['outputBuffer']; dynCall('vi', $2, [$3]); }; SDL2.audio.scriptProcessorNode['connect'](SDL2.audioContext['destination']); },  \n 651167: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.capture.currentCaptureBuffer.numberOfChannels; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.capture.currentCaptureBuffer.getChannelData(c); if (channelData.length != $1) { throw 'Web Audio capture buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } if (numChannels == 1) { for (var j = 0; j < $1; ++j) { setValue($0 + (j * 4), channelData[j], 'float'); } } else { for (var j = 0; j < $1; ++j) { setValue($0 + (((j * numChannels) + c) * 4), channelData[j], 'float'); } } } },  \n 651772: ($0, $1) => { var SDL2 = Module['SDL2']; var numChannels = SDL2.audio.currentOutputBuffer['numberOfChannels']; for (var c = 0; c < numChannels; ++c) { var channelData = SDL2.audio.currentOutputBuffer['getChannelData'](c); if (channelData.length != $1) { throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + $1 + ' samples!'; } for (var j = 0; j < $1; ++j) { channelData[j] = HEAPF32[$0 + ((j*numChannels + c) << 2) >> 2]; } } },  \n 652252: ($0) => { var SDL2 = Module['SDL2']; if ($0) { if (SDL2.capture.silenceTimer !== undefined) { clearTimeout(SDL2.capture.silenceTimer); } if (SDL2.capture.stream !== undefined) { var tracks = SDL2.capture.stream.getAudioTracks(); for (var i = 0; i < tracks.length; i++) { SDL2.capture.stream.removeTrack(tracks[i]); } SDL2.capture.stream = undefined; } if (SDL2.capture.scriptProcessorNode !== undefined) { SDL2.capture.scriptProcessorNode.onaudioprocess = function(audioProcessingEvent) {}; SDL2.capture.scriptProcessorNode.disconnect(); SDL2.capture.scriptProcessorNode = undefined; } if (SDL2.capture.mediaStreamNode !== undefined) { SDL2.capture.mediaStreamNode.disconnect(); SDL2.capture.mediaStreamNode = undefined; } if (SDL2.capture.silenceBuffer !== undefined) { SDL2.capture.silenceBuffer = undefined } SDL2.capture = undefined; } else { if (SDL2.audio.scriptProcessorNode != undefined) { SDL2.audio.scriptProcessorNode.disconnect(); SDL2.audio.scriptProcessorNode = undefined; } SDL2.audio = undefined; } if ((SDL2.audioContext !== undefined) && (SDL2.audio === undefined) && (SDL2.capture === undefined)) { SDL2.audioContext.close(); SDL2.audioContext = undefined; } },  \n 653424: ($0) => { window.open(UTF8ToString($0), \"_blank\"); },  \n 653469: ($0, $1, $2) => { var w = $0; var h = $1; var pixels = $2; if (!Module['SDL2']) Module['SDL2'] = {}; var SDL2 = Module['SDL2']; if (SDL2.ctxCanvas !== Module['canvas']) { SDL2.ctx = Module['createContext'](Module['canvas'], false, true); SDL2.ctxCanvas = Module['canvas']; } if (SDL2.w !== w || SDL2.h !== h || SDL2.imageCtx !== SDL2.ctx) { SDL2.image = SDL2.ctx.createImageData(w, h); SDL2.w = w; SDL2.h = h; SDL2.imageCtx = SDL2.ctx; } var data = SDL2.image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = 0xff; src++; dst += 4; } } else { if (SDL2.data32Data !== data) { SDL2.data32 = new Int32Array(data.buffer); SDL2.data8 = new Uint8Array(data.buffer); SDL2.data32Data = data; } var data32 = SDL2.data32; num = data32.length; data32.set(HEAP32.subarray(src, src + num)); var data8 = SDL2.data8; var i = 3; var j = i + 4*num; if (num % 8 == 0) { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; data8[i] = 0xff; i = i + 4 | 0; } } else { while (i < j) { data8[i] = 0xff; i = i + 4 | 0; } } } SDL2.ctx.putImageData(SDL2.image, 0, 0); },  \n 654938: ($0, $1, $2, $3, $4) => { var w = $0; var h = $1; var hot_x = $2; var hot_y = $3; var pixels = $4; var canvas = document.createElement(\"canvas\"); canvas.width = w; canvas.height = h; var ctx = canvas.getContext(\"2d\"); var image = ctx.createImageData(w, h); var data = image.data; var src = pixels >> 2; var dst = 0; var num; if (typeof CanvasPixelArray !== 'undefined' && data instanceof CanvasPixelArray) { num = data.length; while (dst < num) { var val = HEAP32[src]; data[dst ] = val & 0xff; data[dst+1] = (val >> 8) & 0xff; data[dst+2] = (val >> 16) & 0xff; data[dst+3] = (val >> 24) & 0xff; src++; dst += 4; } } else { var data32 = new Int32Array(data.buffer); num = data32.length; data32.set(HEAP32.subarray(src, src + num)); } ctx.putImageData(image, 0, 0); var url = hot_x === 0 && hot_y === 0 ? \"url(\" + canvas.toDataURL() + \"), auto\" : \"url(\" + canvas.toDataURL() + \") \" + hot_x + \" \" + hot_y + \", auto\"; var urlBuf = _malloc(url.length + 1); stringToUTF8(url, urlBuf, url.length + 1); return urlBuf; },  \n 655927: ($0) => { if (Module['canvas']) { Module['canvas'].style['cursor'] = UTF8ToString($0); } },  \n 656010: () => { if (Module['canvas']) { Module['canvas'].style['cursor'] = 'none'; } },  \n 656079: () => { return window.innerWidth; },  \n 656109: () => { return window.innerHeight; },  \n 656140: ($0, $1) => { alert(UTF8ToString($0) + \"\\n\\n\" + UTF8ToString($1)); }\n};\n\n\n// end include: preamble.js\n\n  /** @constructor */\n  function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = `Program terminated with exit(${status})`;\n      this.status = status;\n    }\n\n  var listenOnce = (object, event, func) => {\n      object.addEventListener(event, func, { 'once': true });\n    };\n  /** @param {Object=} elements */\n  var autoResumeAudioContext = (ctx, elements) => {\n      if (!elements) {\n        elements = [document, document.getElementById('canvas')];\n      }\n      ['keydown', 'mousedown', 'touchstart'].forEach((event) => {\n        elements.forEach((element) => {\n          if (element) {\n            listenOnce(element, event, () => {\n              if (ctx.state === 'suspended') ctx.resume();\n            });\n          }\n        });\n      });\n    };\n\n  var callRuntimeCallbacks = (callbacks) => {\n      while (callbacks.length > 0) {\n        // Pass the module as the first argument.\n        callbacks.shift()(Module);\n      }\n    };\n\n  var dynCallLegacy = (sig, ptr, args) => {\n      var f = Module['dynCall_' + sig];\n      return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n    };\n  \n  var wasmTableMirror = [];\n  \n  var wasmTable;\n  var getWasmTableEntry = (funcPtr) => {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      return func;\n    };\n  /** @param {Object=} args */\n  var dynCall = (sig, ptr, args) => {\n      var rtn = dynCallLegacy(sig, ptr, args);\n      return rtn;\n    };\n\n  \n    /**\n     * @param {number} ptr\n     * @param {string} type\n     */\n  function getValue(ptr, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': abort('to do getValue(i64) use WASM_BIGINT');\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      case '*': return HEAPU32[((ptr)>>2)];\n      default: abort(`invalid type for getValue: ${type}`);\n    }\n  }\n\n  var noExitRuntime = Module['noExitRuntime'] || true;\n\n  \n    /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */\n  function setValue(ptr, value, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\n      case 'i64': abort('to do setValue(i64) use WASM_BIGINT');\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\n      default: abort(`invalid type for setValue: ${type}`);\n    }\n  }\n\n  /** @constructor */\n  function ExceptionInfo(excPtr) {\n      this.excPtr = excPtr;\n      this.ptr = excPtr - 24;\n  \n      this.set_type = function(type) {\n        HEAPU32[(((this.ptr)+(4))>>2)] = type;\n      };\n  \n      this.get_type = function() {\n        return HEAPU32[(((this.ptr)+(4))>>2)];\n      };\n  \n      this.set_destructor = function(destructor) {\n        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;\n      };\n  \n      this.get_destructor = function() {\n        return HEAPU32[(((this.ptr)+(8))>>2)];\n      };\n  \n      this.set_caught = function(caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[(((this.ptr)+(12))>>0)] = caught;\n      };\n  \n      this.get_caught = function() {\n        return HEAP8[(((this.ptr)+(12))>>0)] != 0;\n      };\n  \n      this.set_rethrown = function(rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[(((this.ptr)+(13))>>0)] = rethrown;\n      };\n  \n      this.get_rethrown = function() {\n        return HEAP8[(((this.ptr)+(13))>>0)] != 0;\n      };\n  \n      // Initialize native structure fields. Should be called once after allocated.\n      this.init = function(type, destructor) {\n        this.set_adjusted_ptr(0);\n        this.set_type(type);\n        this.set_destructor(destructor);\n      }\n  \n      this.set_adjusted_ptr = function(adjustedPtr) {\n        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;\n      };\n  \n      this.get_adjusted_ptr = function() {\n        return HEAPU32[(((this.ptr)+(16))>>2)];\n      };\n  \n      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\n      // when the pointer is casted to some of the exception object base classes (e.g. when virtual\n      // inheritance is used). When a pointer is thrown this method should return the thrown pointer\n      // itself.\n      this.get_exception_ptr = function() {\n        // Work around a fastcomp bug, this code is still included for some reason in a build without\n        // exceptions support.\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\n        if (isPointer) {\n          return HEAPU32[((this.excPtr)>>2)];\n        }\n        var adjusted = this.get_adjusted_ptr();\n        if (adjusted !== 0) return adjusted;\n        return this.excPtr;\n      };\n    }\n  \n  var exceptionLast = 0;\n  \n  var uncaughtExceptionCount = 0;\n  var ___cxa_throw = (ptr, type, destructor) => {\n      var info = new ExceptionInfo(ptr);\n      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\n      info.init(type, destructor);\n      exceptionLast = ptr;\n      uncaughtExceptionCount++;\n      throw exceptionLast;\n    };\n\n  var PATH = {\n  isAbs:(path) => path.charAt(0) === '/',\n  splitPath:(filename) => {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n  normalizeArray:(parts, allowAboveRoot) => {\n        // if the path tries to go above the root, `up` ends up > 0\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        // if the path is allowed to go above the root, restore leading ..s\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n  normalize:(path) => {\n        var isAbsolute = PATH.isAbs(path),\n            trailingSlash = path.substr(-1) === '/';\n        // Normalize the path\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n  dirname:(path) => {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n        if (!root && !dir) {\n          // No dirname whatsoever\n          return '.';\n        }\n        if (dir) {\n          // It has a dirname, strip trailing slash\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n  basename:(path) => {\n        // EMSCRIPTEN return '/'' for '/', not an empty string\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, \"\");\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash+1);\n      },\n  join:function() {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join('/'));\n      },\n  join2:(l, r) => PATH.normalize(l + '/' + r),\n  };\n  \n  var initRandomFill = () => {\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\n        // for modern web browsers\n        return (view) => crypto.getRandomValues(view);\n      } else\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\n      abort(\"initRandomDevice\");\n    };\n  var randomFill = (view) => {\n      // Lazily init on the first invocation.\n      return (randomFill = initRandomFill())(view);\n    };\n  \n  \n  \n  var PATH_FS = {\n  resolve:function() {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\n          // Skip empty and invalid entries\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return ''; // an invalid portion invalidates the whole thing\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n      },\n  relative:(from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n  };\n  \n  \n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n  \n    /**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */\n  var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.  Also, use the length info to avoid running tiny\n      // strings through TextDecoder, since .subarray() allocates garbage.\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n      // so that undefined means Infinity)\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  \n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n      // If building with TextDecoder, we have already computed the string length\n      // above, so test loop end condition against that\n      while (idx < endPtr) {\n        // For UTF8 byte structure, see:\n        // http://en.wikipedia.org/wiki/UTF-8#Description\n        // https://www.ietf.org/rfc/rfc2279.txt\n        // https://tools.ietf.org/html/rfc3629\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xF0) == 0xE0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n        }\n  \n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        }\n      }\n      return str;\n    };\n  \n  var FS_stdin_getChar_buffer = [];\n  \n  var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var c = str.charCodeAt(i); // possibly a lead surrogate\n        if (c <= 0x7F) {\n          len++;\n        } else if (c <= 0x7FF) {\n          len += 2;\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\n          len += 4; ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n  \n  var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n      // undefined and false each don't write out any bytes.\n      if (!(maxBytesToWrite > 0))\n        return 0;\n  \n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n        // and https://www.ietf.org/rfc/rfc2279.txt\n        // and https://tools.ietf.org/html/rfc3629\n        var u = str.charCodeAt(i); // possibly a lead surrogate\n        if (u >= 0xD800 && u <= 0xDFFF) {\n          var u1 = str.charCodeAt(++i);\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n        }\n        if (u <= 0x7F) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xC0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xFFFF) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xE0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xF0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n      // Null-terminate the pointer to the buffer.\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n  /** @type {function(string, boolean=, number=)} */\n  function intArrayFromString(stringy, dontAddNull, length) {\n    var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n    var u8array = new Array(len);\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n    if (dontAddNull) u8array.length = numBytesWritten;\n    return u8array;\n  }\n  var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n        if (typeof window != 'undefined' &&\n          typeof window.prompt == 'function') {\n          // Browser.\n          result = window.prompt('Input: ');  // returns null on cancel\n          if (result !== null) {\n            result += '\\n';\n          }\n        } else if (typeof readline == 'function') {\n          // Command line.\n          result = readline();\n          if (result !== null) {\n            result += '\\n';\n          }\n        }\n        if (!result) {\n          return null;\n        }\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n      return FS_stdin_getChar_buffer.shift();\n    };\n  var TTY = {\n  ttys:[],\n  init() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\n        //   // with text files until FS.init can be refactored.\n        //   process.stdin.setEncoding('utf8');\n        // }\n      },\n  shutdown() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\n        //   process.stdin.pause();\n        // }\n      },\n  register(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n  stream_ops:{\n  open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n  close(stream) {\n          // flush any pending line data\n          stream.tty.ops.fsync(stream.tty);\n        },\n  fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n  read(stream, buffer, offset, length, pos /* ignored */) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset+i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n  write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n  },\n  default_tty_ops:{\n  get_char(tty) {\n          return FS_stdin_getChar();\n        },\n  put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\n          }\n        },\n  fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n  ioctl_tcgets(tty) {\n          // typical setting\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [\n              0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a, 0x00,\n              0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            ]\n          };\n        },\n  ioctl_tcsets(tty, optional_actions, data) {\n          // currently just ignore\n          return 0;\n        },\n  ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        },\n  },\n  default_tty1_ops:{\n  put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n  fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n  },\n  };\n  \n  \n  var zeroMemory = (address, size) => {\n      HEAPU8.fill(0, address, address + size);\n      return address;\n    };\n  \n  var alignMemory = (size, alignment) => {\n      return Math.ceil(size / alignment) * alignment;\n    };\n  var mmapAlloc = (size) => {\n      abort();\n    };\n  var MEMFS = {\n  ops_table:null,\n  mount(mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\n      },\n  createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          // no supported\n          throw new FS.ErrnoError(63);\n        }\n        MEMFS.ops_table ||= {\n          dir: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              lookup: MEMFS.node_ops.lookup,\n              mknod: MEMFS.node_ops.mknod,\n              rename: MEMFS.node_ops.rename,\n              unlink: MEMFS.node_ops.unlink,\n              rmdir: MEMFS.node_ops.rmdir,\n              readdir: MEMFS.node_ops.readdir,\n              symlink: MEMFS.node_ops.symlink\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek\n            }\n          },\n          file: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n              read: MEMFS.stream_ops.read,\n              write: MEMFS.stream_ops.write,\n              allocate: MEMFS.stream_ops.allocate,\n              mmap: MEMFS.stream_ops.mmap,\n              msync: MEMFS.stream_ops.msync\n            }\n          },\n          link: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              readlink: MEMFS.node_ops.readlink\n            },\n            stream: {}\n          },\n          chrdev: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr\n            },\n            stream: FS.chrdev_stream_ops\n          }\n        };\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\n          node.contents = null; \n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n        // add the new node to the parent\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n  getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\n        return new Uint8Array(node.contents);\n      },\n  expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\n        // avoid overshooting the allocation cap by a very large margin.\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\n      },\n  resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null; // Fully decommit when requesting a resize to zero.\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\n          }\n          node.usedBytes = newSize;\n        }\n      },\n  node_ops:{\n  getattr(node) {\n          var attr = {};\n          // device numbers reuse inode numbers.\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\n          //       but this is not required by the standard.\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n  setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n  lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n  mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n  rename(old_node, new_dir, new_name) {\n          // if we're overwriting a directory at new_name, make sure it's empty.\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          // do the internal rewiring\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now()\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n  unlink(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n  rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n  readdir(node) {\n          var entries = ['.', '..'];\n          for (var key of Object.keys(node.contents)) {\n            entries.push(key);\n          }\n          return entries;\n        },\n  symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n  readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n  },\n  stream_ops:{\n  read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n  write(stream, buffer, offset, length, position, canOwn) {\n          // If the buffer is located in main memory (HEAP), and if\n          // memory can grow, we can't hold on to references of the\n          // memory buffer, as they may get invalidated. That means we\n          // need to do copy its contents.\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n  \n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n  \n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n  \n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\n          MEMFS.expandFileStorage(node, position+length);\n          if (node.contents.subarray && buffer.subarray) {\n            // Use typed array write which is available.\n            node.contents.set(buffer.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n  llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n  allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },\n  mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          // Only make a new copy when MAP_PRIVATE is specified.\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            // We can't emulate MAP_SHARED when the file is not backed by the\n            // buffer we're mapping to (e.g. the HEAP buffer).\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            // Try to avoid unnecessary slices.\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return { ptr, allocated };\n        },\n  msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          // should we check if bytesWritten and length are the same?\n          return 0;\n        },\n  },\n  };\n  \n  /** @param {boolean=} noRunDep */\n  var asyncLoad = (url, onload, onerror, noRunDep) => {\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : '';\n      readAsync(url, (arrayBuffer) => {\n        assert(arrayBuffer, `Loading data file \"${url}\" failed (no arrayBuffer).`);\n        onload(new Uint8Array(arrayBuffer));\n        if (dep) removeRunDependency(dep);\n      }, (event) => {\n        if (onerror) {\n          onerror();\n        } else {\n          throw `Loading data file \"${url}\" failed.`;\n        }\n      });\n      if (dep) addRunDependency(dep);\n    };\n  \n  \n  var FS_createDataFile = (parent, name, fileData, canRead, canWrite, canOwn) => {\n      FS.createDataFile(parent, name, fileData, canRead, canWrite, canOwn);\n    };\n  \n  var preloadPlugins = Module['preloadPlugins'] || [];\n  var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      // Ensure plugins are ready.\n      if (typeof Browser != 'undefined') Browser.init();\n  \n      var handled = false;\n      preloadPlugins.forEach((plugin) => {\n        if (handled) return;\n        if (plugin['canHandle'](fullname)) {\n          plugin['handle'](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n  var FS_createPreloadedFile = (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\n      // TODO we should allow people to just pass in a complete filename instead\n      // of parent and name being that we just join them anyways\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`); // might have several active requests for the same fullname\n      function processData(byteArray) {\n        function finish(byteArray) {\n          preFinish?.();\n          if (!dontCreateFile) {\n            FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n          }\n          onload?.();\n          removeRunDependency(dep);\n        }\n        if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n          onerror?.();\n          removeRunDependency(dep);\n        })) {\n          return;\n        }\n        finish(byteArray);\n      }\n      addRunDependency(dep);\n      if (typeof url == 'string') {\n        asyncLoad(url, (byteArray) => processData(byteArray), onerror);\n      } else {\n        processData(url);\n      }\n    };\n  \n  var FS_modeStringToFlags = (str) => {\n      var flagModes = {\n        'r': 0,\n        'r+': 2,\n        'w': 512 | 64 | 1,\n        'w+': 512 | 64 | 2,\n        'a': 1024 | 64 | 1,\n        'a+': 1024 | 64 | 2,\n      };\n      var flags = flagModes[str];\n      if (typeof flags == 'undefined') {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n      return flags;\n    };\n  \n  var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n  \n  \n  \n  \n  \n  \n  var IDBFS = {\n  dbs:{\n  },\n  indexedDB:() => {\n        if (typeof indexedDB != 'undefined') return indexedDB;\n        var ret = null;\n        if (typeof window == 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        assert(ret, 'IDBFS used, but indexedDB not supported');\n        return ret;\n      },\n  DB_VERSION:21,\n  DB_STORE_NAME:\"FILE_DATA\",\n  mount:function(mount) {\n        // reuse all of the core MEMFS functionality\n        return MEMFS.mount.apply(null, arguments);\n      },\n  syncfs:(mount, populate, callback) => {\n        IDBFS.getLocalSet(mount, (err, local) => {\n          if (err) return callback(err);\n  \n          IDBFS.getRemoteSet(mount, (err, remote) => {\n            if (err) return callback(err);\n  \n            var src = populate ? remote : local;\n            var dst = populate ? local : remote;\n  \n            IDBFS.reconcile(src, dst, callback);\n          });\n        });\n      },\n  quit:() => {\n        Object.values(IDBFS.dbs).forEach((value) => value.close());\n        IDBFS.dbs = {};\n      },\n  getDB:(name, callback) => {\n        // check the cache first\n        var db = IDBFS.dbs[name];\n        if (db) {\n          return callback(null, db);\n        }\n  \n        var req;\n        try {\n          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);\n        } catch (e) {\n          return callback(e);\n        }\n        if (!req) {\n          return callback(\"Unable to connect to IndexedDB\");\n        }\n        req.onupgradeneeded = (e) => {\n          var db = /** @type {IDBDatabase} */ (e.target.result);\n          var transaction = e.target.transaction;\n  \n          var fileStore;\n  \n          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {\n            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);\n          } else {\n            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);\n          }\n  \n          if (!fileStore.indexNames.contains('timestamp')) {\n            fileStore.createIndex('timestamp', 'timestamp', { unique: false });\n          }\n        };\n        req.onsuccess = () => {\n          db = /** @type {IDBDatabase} */ (req.result);\n  \n          // add to the cache\n          IDBFS.dbs[name] = db;\n          callback(null, db);\n        };\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  getLocalSet:(mount, callback) => {\n        var entries = {};\n  \n        function isRealDir(p) {\n          return p !== '.' && p !== '..';\n        };\n        function toAbsolute(root) {\n          return (p) => PATH.join2(root, p);\n        };\n  \n        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));\n  \n        while (check.length) {\n          var path = check.pop();\n          var stat;\n  \n          try {\n            stat = FS.stat(path);\n          } catch (e) {\n            return callback(e);\n          }\n  \n          if (FS.isDir(stat.mode)) {\n            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));\n          }\n  \n          entries[path] = { 'timestamp': stat.mtime };\n        }\n  \n        return callback(null, { type: 'local', entries: entries });\n      },\n  getRemoteSet:(mount, callback) => {\n        var entries = {};\n  \n        IDBFS.getDB(mount.mountpoint, (err, db) => {\n          if (err) return callback(err);\n  \n          try {\n            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');\n            transaction.onerror = (e) => {\n              callback(e.target.error);\n              e.preventDefault();\n            };\n  \n            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\n            var index = store.index('timestamp');\n  \n            index.openKeyCursor().onsuccess = (event) => {\n              var cursor = event.target.result;\n  \n              if (!cursor) {\n                return callback(null, { type: 'remote', db, entries });\n              }\n  \n              entries[cursor.primaryKey] = { 'timestamp': cursor.key };\n  \n              cursor.continue();\n            };\n          } catch (e) {\n            return callback(e);\n          }\n        });\n      },\n  loadLocalEntry:(path, callback) => {\n        var stat, node;\n  \n        try {\n          var lookup = FS.lookupPath(path);\n          node = lookup.node;\n          stat = FS.stat(path);\n        } catch (e) {\n          return callback(e);\n        }\n  \n        if (FS.isDir(stat.mode)) {\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode });\n        } else if (FS.isFile(stat.mode)) {\n          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.\n          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.\n          node.contents = MEMFS.getFileDataAsTypedArray(node);\n          return callback(null, { 'timestamp': stat.mtime, 'mode': stat.mode, 'contents': node.contents });\n        } else {\n          return callback(new Error('node type not supported'));\n        }\n      },\n  storeLocalEntry:(path, entry, callback) => {\n        try {\n          if (FS.isDir(entry['mode'])) {\n            FS.mkdirTree(path, entry['mode']);\n          } else if (FS.isFile(entry['mode'])) {\n            FS.writeFile(path, entry['contents'], { canOwn: true });\n          } else {\n            return callback(new Error('node type not supported'));\n          }\n  \n          FS.chmod(path, entry['mode']);\n          FS.utime(path, entry['timestamp'], entry['timestamp']);\n        } catch (e) {\n          return callback(e);\n        }\n  \n        callback(null);\n      },\n  removeLocalEntry:(path, callback) => {\n        try {\n          var stat = FS.stat(path);\n  \n          if (FS.isDir(stat.mode)) {\n            FS.rmdir(path);\n          } else if (FS.isFile(stat.mode)) {\n            FS.unlink(path);\n          }\n        } catch (e) {\n          return callback(e);\n        }\n  \n        callback(null);\n      },\n  loadRemoteEntry:(store, path, callback) => {\n        var req = store.get(path);\n        req.onsuccess = (event) => callback(null, event.target.result);\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  storeRemoteEntry:(store, path, entry, callback) => {\n        try {\n          var req = store.put(entry, path);\n        } catch (e) {\n          callback(e);\n          return;\n        }\n        req.onsuccess = (event) => callback();\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  removeRemoteEntry:(store, path, callback) => {\n        var req = store.delete(path);\n        req.onsuccess = (event) => callback();\n        req.onerror = (e) => {\n          callback(e.target.error);\n          e.preventDefault();\n        };\n      },\n  reconcile:(src, dst, callback) => {\n        var total = 0;\n  \n        var create = [];\n        Object.keys(src.entries).forEach(function (key) {\n          var e = src.entries[key];\n          var e2 = dst.entries[key];\n          if (!e2 || e['timestamp'].getTime() != e2['timestamp'].getTime()) {\n            create.push(key);\n            total++;\n          }\n        });\n  \n        var remove = [];\n        Object.keys(dst.entries).forEach(function (key) {\n          if (!src.entries[key]) {\n            remove.push(key);\n            total++;\n          }\n        });\n  \n        if (!total) {\n          return callback(null);\n        }\n  \n        var errored = false;\n        var db = src.type === 'remote' ? src.db : dst.db;\n        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');\n        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);\n  \n        function done(err) {\n          if (err && !errored) {\n            errored = true;\n            return callback(err);\n          }\n        };\n  \n        transaction.onerror = (e) => {\n          done(this.error);\n          e.preventDefault();\n        };\n  \n        transaction.oncomplete = (e) => {\n          if (!errored) {\n            callback(null);\n          }\n        };\n  \n        // sort paths in ascending order so directory entries are created\n        // before the files inside them\n        create.sort().forEach((path) => {\n          if (dst.type === 'local') {\n            IDBFS.loadRemoteEntry(store, path, (err, entry) => {\n              if (err) return done(err);\n              IDBFS.storeLocalEntry(path, entry, done);\n            });\n          } else {\n            IDBFS.loadLocalEntry(path, (err, entry) => {\n              if (err) return done(err);\n              IDBFS.storeRemoteEntry(store, path, entry, done);\n            });\n          }\n        });\n  \n        // sort paths in descending order so files are deleted before their\n        // parent directories\n        remove.sort().reverse().forEach((path) => {\n          if (dst.type === 'local') {\n            IDBFS.removeLocalEntry(path, done);\n          } else {\n            IDBFS.removeRemoteEntry(store, path, done);\n          }\n        });\n      },\n  };\n  \n  \n  var LZ4 = {\n  DIR_MODE:16895,\n  FILE_MODE:33279,\n  CHUNK_SIZE:-1,\n  codec:null,\n  init() {\n        if (LZ4.codec) return;\n        LZ4.codec = (function() {\n          /*\n  MiniLZ4: Minimal LZ4 block decoding and encoding.\n  \n  based off of node-lz4, https://github.com/pierrec/node-lz4\n  \n  ====\n  Copyright (c) 2012 Pierre Curto\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n  ====\n  \n  changes have the same license\n  */\n  \n  var MiniLZ4 = (function() {\n  \n  var exports = {};\n  \n  /**\n   * Decode a block. Assumptions: input contains all sequences of a \n   * chunk, output is large enough to receive the decoded data.\n   * If the output buffer is too small, an error will be thrown.\n   * If the returned value is negative, an error occured at the returned offset.\n   *\n   * @param {ArrayBufferView} input input data\n   * @param {ArrayBufferView} output output data\n   * @param {number=} sIdx\n   * @param {number=} eIdx\n   * @return {number} number of decoded bytes\n   * @private\n   */\n  exports.uncompress = function (input, output, sIdx, eIdx) {\n  \tsIdx = sIdx || 0\n  \teIdx = eIdx || (input.length - sIdx)\n  \t// Process each sequence in the incoming data\n  \tfor (var i = sIdx, n = eIdx, j = 0; i < n;) {\n  \t\tvar token = input[i++]\n  \n  \t\t// Literals\n  \t\tvar literals_length = (token >> 4)\n  \t\tif (literals_length > 0) {\n  \t\t\t// length of literals\n  \t\t\tvar l = literals_length + 240\n  \t\t\twhile (l === 255) {\n  \t\t\t\tl = input[i++]\n  \t\t\t\tliterals_length += l\n  \t\t\t}\n  \n  \t\t\t// Copy the literals\n  \t\t\tvar end = i + literals_length\n  \t\t\twhile (i < end) output[j++] = input[i++]\n  \n  \t\t\t// End of buffer?\n  \t\t\tif (i === n) return j\n  \t\t}\n  \n  \t\t// Match copy\n  \t\t// 2 bytes offset (little endian)\n  \t\tvar offset = input[i++] | (input[i++] << 8)\n  \n  \t\t// XXX 0 is an invalid offset value\n  \t\tif (offset === 0) return j\n  \t\tif (offset > j) return -(i-2)\n  \n  \t\t// length of match copy\n  \t\tvar match_length = (token & 0xf)\n  \t\tvar l = match_length + 240\n  \t\twhile (l === 255) {\n  \t\t\tl = input[i++]\n  \t\t\tmatch_length += l\n  \t\t}\n  \n  \t\t// Copy the match\n  \t\tvar pos = j - offset // position of the match copy in the current output\n  \t\tvar end = j + match_length + 4 // minmatch = 4\n  \t\twhile (j < end) output[j++] = output[pos++]\n  \t}\n  \n  \treturn j\n  }\n  \n  var\n  \tmaxInputSize\t= 0x7E000000\n  ,\tminMatch\t\t= 4\n  // uint32() optimization\n  ,\thashLog\t\t\t= 16\n  ,\thashShift\t\t= (minMatch * 8) - hashLog\n  ,\thashSize\t\t= 1 << hashLog\n  \n  ,\tcopyLength\t\t= 8\n  ,\tlastLiterals\t= 5\n  ,\tmfLimit\t\t\t= copyLength + minMatch\n  ,\tskipStrength\t= 6\n  \n  ,\tmlBits  \t\t= 4\n  ,\tmlMask  \t\t= (1 << mlBits) - 1\n  ,\trunBits \t\t= 8 - mlBits\n  ,\trunMask \t\t= (1 << runBits) - 1\n  \n  ,\thasher \t\t\t= /* XXX uint32( */ 2654435761 /* ) */\n  \n  assert(hashShift === 16);\n  var hashTable = new Int16Array(1<<16);\n  var empty = new Int16Array(hashTable.length);\n  \n  // CompressBound returns the maximum length of a lz4 block, given it's uncompressed length\n  exports.compressBound = function (isize) {\n  \treturn isize > maxInputSize\n  \t\t? 0\n  \t\t: (isize + (isize/255) + 16) | 0\n  }\n  \n  /** @param {number=} sIdx\n  \t@param {number=} eIdx */\n  exports.compress = function (src, dst, sIdx, eIdx) {\n  \thashTable.set(empty);\n  \treturn compressBlock(src, dst, 0, sIdx || 0, eIdx || dst.length)\n  }\n  \n  function compressBlock (src, dst, pos, sIdx, eIdx) {\n  \t// XXX var Hash = uint32() // Reusable unsigned 32 bits integer\n  \tvar dpos = sIdx\n  \tvar dlen = eIdx - sIdx\n  \tvar anchor = 0\n  \n  \tif (src.length >= maxInputSize) throw new Error(\"input too large\")\n  \n  \t// Minimum of input bytes for compression (LZ4 specs)\n  \tif (src.length > mfLimit) {\n  \t\tvar n = exports.compressBound(src.length)\n  \t\tif ( dlen < n ) throw Error(\"output too small: \" + dlen + \" < \" + n)\n  \n  \t\tvar \n  \t\t\tstep  = 1\n  \t\t,\tfindMatchAttempts = (1 << skipStrength) + 3\n  \t\t// Keep last few bytes incompressible (LZ4 specs):\n  \t\t// last 5 bytes must be literals\n  \t\t,\tsrcLength = src.length - mfLimit\n  \n  \t\twhile (pos + minMatch < srcLength) {\n  \t\t\t// Find a match\n  \t\t\t// min match of 4 bytes aka sequence\n  \t\t\tvar sequenceLowBits = src[pos+1]<<8 | src[pos]\n  \t\t\tvar sequenceHighBits = src[pos+3]<<8 | src[pos+2]\n  \t\t\t// compute hash for the current sequence\n  \t\t\tvar hash = Math.imul(sequenceLowBits | (sequenceHighBits << 16), hasher) >>> hashShift;\n  \t\t\t/* XXX Hash.fromBits(sequenceLowBits, sequenceHighBits)\n  \t\t\t\t\t\t\t.multiply(hasher)\n  \t\t\t\t\t\t\t.shiftr(hashShift)\n  \t\t\t\t\t\t\t.toNumber() */\n  \t\t\t// get the position of the sequence matching the hash\n  \t\t\t// NB. since 2 different sequences may have the same hash\n  \t\t\t// it is double-checked below\n  \t\t\t// do -1 to distinguish between initialized and uninitialized values\n  \t\t\tvar ref = hashTable[hash] - 1\n  \t\t\t// save position of current sequence in hash table\n  \t\t\thashTable[hash] = pos + 1\n  \n  \t\t\t// first reference or within 64k limit or current sequence !== hashed one: no match\n  \t\t\tif ( ref < 0 ||\n  \t\t\t\t((pos - ref) >>> 16) > 0 ||\n  \t\t\t\t(\n  \t\t\t\t\t((src[ref+3]<<8 | src[ref+2]) != sequenceHighBits) ||\n  \t\t\t\t\t((src[ref+1]<<8 | src[ref]) != sequenceLowBits )\n  \t\t\t\t)\n  \t\t\t) {\n  \t\t\t\t// increase step if nothing found within limit\n  \t\t\t\tstep = findMatchAttempts++ >> skipStrength\n  \t\t\t\tpos += step\n  \t\t\t\tcontinue\n  \t\t\t}\n  \n  \t\t\tfindMatchAttempts = (1 << skipStrength) + 3\n  \n  \t\t\t// got a match\n  \t\t\tvar literals_length = pos - anchor\n  \t\t\tvar offset = pos - ref\n  \n  \t\t\t// minMatch already verified\n  \t\t\tpos += minMatch\n  \t\t\tref += minMatch\n  \n  \t\t\t// move to the end of the match (>=minMatch)\n  \t\t\tvar match_length = pos\n  \t\t\twhile (pos < srcLength && src[pos] == src[ref]) {\n  \t\t\t\tpos++\n  \t\t\t\tref++\n  \t\t\t}\n  \n  \t\t\t// match length\n  \t\t\tmatch_length = pos - match_length\n  \n  \t\t\t// token\n  \t\t\tvar token = match_length < mlMask ? match_length : mlMask\n  \n  \t\t\t// encode literals length\n  \t\t\tif (literals_length >= runMask) {\n  \t\t\t\t// add match length to the token\n  \t\t\t\tdst[dpos++] = (runMask << mlBits) + token\n  \t\t\t\tfor (var len = literals_length - runMask; len > 254; len -= 255) {\n  \t\t\t\t\tdst[dpos++] = 255\n  \t\t\t\t}\n  \t\t\t\tdst[dpos++] = len\n  \t\t\t} else {\n  \t\t\t\t// add match length to the token\n  \t\t\t\tdst[dpos++] = (literals_length << mlBits) + token\n  \t\t\t}\n  \n  \t\t\t// write literals\n  \t\t\tfor (var i = 0; i < literals_length; i++) {\n  \t\t\t\tdst[dpos++] = src[anchor+i]\n  \t\t\t}\n  \n  \t\t\t// encode offset\n  \t\t\tdst[dpos++] = offset\n  \t\t\tdst[dpos++] = (offset >> 8)\n  \n  \t\t\t// encode match length\n  \t\t\tif (match_length >= mlMask) {\n  \t\t\t\tmatch_length -= mlMask\n  \t\t\t\twhile (match_length >= 255) {\n  \t\t\t\t\tmatch_length -= 255\n  \t\t\t\t\tdst[dpos++] = 255\n  \t\t\t\t}\n  \n  \t\t\t\tdst[dpos++] = match_length\n  \t\t\t}\n  \n  \t\t\tanchor = pos\n  \t\t}\n  \t}\n  \n  \t// cannot compress input\n  \tif (anchor == 0) return 0\n  \n  \t// Write last literals\n  \t// encode literals length\n  \tliterals_length = src.length - anchor\n  \tif (literals_length >= runMask) {\n  \t\t// add match length to the token\n  \t\tdst[dpos++] = (runMask << mlBits)\n  \t\tfor (var ln = literals_length - runMask; ln > 254; ln -= 255) {\n  \t\t\tdst[dpos++] = 255\n  \t\t}\n  \t\tdst[dpos++] = ln\n  \t} else {\n  \t\t// add match length to the token\n  \t\tdst[dpos++] = (literals_length << mlBits)\n  \t}\n  \n  \t// write literals\n  \tpos = anchor\n  \twhile (pos < src.length) {\n  \t\tdst[dpos++] = src[pos++]\n  \t}\n  \n  \treturn dpos\n  }\n  \n  exports.CHUNK_SIZE = 2048; // musl libc does readaheads of 1024 bytes, so a multiple of that is a good idea\n  \n  exports.compressPackage = function(data, verify) {\n    if (verify) {\n      var temp = new Uint8Array(exports.CHUNK_SIZE);\n    }\n    // compress the data in chunks\n    assert(data instanceof ArrayBuffer);\n    data = new Uint8Array(data);\n    console.log('compressing package of size ' + data.length);\n    var compressedChunks = [];\n    var successes = [];\n    var offset = 0;\n    var total = 0;\n    while (offset < data.length) {\n      var chunk = data.subarray(offset, offset + exports.CHUNK_SIZE);\n      //console.log('compress a chunk ' + [offset, total, data.length]);\n      offset += exports.CHUNK_SIZE;\n      var bound = exports.compressBound(chunk.length);\n      var compressed = new Uint8Array(bound);\n      var compressedSize = exports.compress(chunk, compressed);\n      if (compressedSize > 0) {\n        assert(compressedSize <= bound);\n        compressed = compressed.subarray(0, compressedSize);\n        compressedChunks.push(compressed);\n        total += compressedSize;\n        successes.push(1);\n        if (verify) {\n          var back = exports.uncompress(compressed, temp);\n          assert(back === chunk.length, [back, chunk.length]);\n          for (var i = 0; i < chunk.length; i++) {\n            assert(chunk[i] === temp[i]);\n          }\n        }\n      } else {\n        assert(compressedSize === 0);\n        // failure to compress :(\n        compressedChunks.push(chunk);\n        total += chunk.length; // last chunk may not be the full exports.CHUNK_SIZE size\n        successes.push(0);\n      }\n    }\n    data = null; // XXX null out pack['data'] too?\n    var compressedData = {\n      'data': new Uint8Array(total + exports.CHUNK_SIZE*2), // store all the compressed data, plus room for two cached decompressed chunk, in one fast array\n      'cachedOffset': total,\n      'cachedIndexes': [-1, -1], // cache last two blocks, so that reading 1,2,3 + preloading another block won't trigger decompress thrashing\n      'cachedChunks': [null, null],\n      'offsets': [], // chunk# => start in compressed data\n      'sizes': [],\n      'successes': successes, // 1 if chunk is compressed\n    };\n    offset = 0;\n    for (var i = 0; i < compressedChunks.length; i++) {\n      compressedData['data'].set(compressedChunks[i], offset);\n      compressedData['offsets'][i] = offset;\n      compressedData['sizes'][i] = compressedChunks[i].length\n      offset += compressedChunks[i].length;\n    }\n    console.log('compressed package into ' + [compressedData['data'].length]);\n    assert(offset === total);\n    return compressedData;\n  };\n  \n  assert(exports.CHUNK_SIZE < (1 << 15)); // we use 16-bit ints as the type of the hash table, chunk size must be smaller\n  \n  return exports;\n  \n  })();\n  \n  ;\n          return MiniLZ4;\n        })();\n        LZ4.CHUNK_SIZE = LZ4.codec.CHUNK_SIZE;\n      },\n  loadPackage(pack, preloadPlugin) {\n        LZ4.init();\n        var compressedData = pack['compressedData'];\n        if (!compressedData) compressedData = LZ4.codec.compressPackage(pack['data']);\n        assert(compressedData['cachedIndexes'].length === compressedData['cachedChunks'].length);\n        for (var i = 0; i < compressedData['cachedIndexes'].length; i++) {\n          compressedData['cachedIndexes'][i] = -1;\n          compressedData['cachedChunks'][i] = compressedData['data'].subarray(compressedData['cachedOffset'] + i*LZ4.CHUNK_SIZE,\n                                                                        compressedData['cachedOffset'] + (i+1)*LZ4.CHUNK_SIZE);\n          assert(compressedData['cachedChunks'][i].length === LZ4.CHUNK_SIZE);\n        }\n        pack['metadata'].files.forEach((file) => {\n          var dir = PATH.dirname(file.filename);\n          var name = PATH.basename(file.filename);\n          FS.createPath('', dir, true, true);\n          var parent = FS.analyzePath(dir).object;\n          LZ4.createNode(parent, name, LZ4.FILE_MODE, 0, {\n            compressedData,\n            start: file.start,\n            end: file.end,\n          });\n        });\n        // Preload files if necessary. This code is largely similar to\n        // createPreloadedFile in library_fs.js. However, a main difference here\n        // is that we only decompress the file if it can be preloaded.\n        // Abstracting out the common parts seems to be more effort than it is\n        // worth.\n        if (preloadPlugin) {\n          Browser.init();\n          pack['metadata'].files.forEach((file) => {\n            var handled = false;\n            var fullname = file.filename;\n            preloadPlugins.forEach((plugin) => {\n              if (handled) return;\n              if (plugin['canHandle'](fullname)) {\n                var dep = getUniqueRunDependency('fp ' + fullname);\n                addRunDependency(dep);\n                var finish = () => removeRunDependency(dep);\n                var byteArray = FS.readFile(fullname);\n                plugin['handle'](byteArray, fullname, finish, finish);\n                handled = true;\n              }\n            });\n          });\n        }\n      },\n  createNode(parent, name, mode, dev, contents, mtime) {\n        var node = FS.createNode(parent, name, mode);\n        node.mode = mode;\n        node.node_ops = LZ4.node_ops;\n        node.stream_ops = LZ4.stream_ops;\n        node.timestamp = (mtime || new Date).getTime();\n        assert(LZ4.FILE_MODE !== LZ4.DIR_MODE);\n        if (mode === LZ4.FILE_MODE) {\n          node.size = contents.end - contents.start;\n          node.contents = contents;\n        } else {\n          node.size = 4096;\n          node.contents = {};\n        }\n        if (parent) {\n          parent.contents[name] = node;\n        }\n        return node;\n      },\n  node_ops:{\n  getattr(node) {\n          return {\n            dev: 1,\n            ino: node.id,\n            mode: node.mode,\n            nlink: 1,\n            uid: 0,\n            gid: 0,\n            rdev: 0,\n            size: node.size,\n            atime: new Date(node.timestamp),\n            mtime: new Date(node.timestamp),\n            ctime: new Date(node.timestamp),\n            blksize: 4096,\n            blocks: Math.ceil(node.size / 4096),\n          };\n        },\n  setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n        },\n  lookup(parent, name) {\n          throw new FS.ErrnoError(44);\n        },\n  mknod(parent, name, mode, dev) {\n          throw new FS.ErrnoError(63);\n        },\n  rename(oldNode, newDir, newName) {\n          throw new FS.ErrnoError(63);\n        },\n  unlink(parent, name) {\n          throw new FS.ErrnoError(63);\n        },\n  rmdir(parent, name) {\n          throw new FS.ErrnoError(63);\n        },\n  readdir(node) {\n          throw new FS.ErrnoError(63);\n        },\n  symlink(parent, newName, oldPath) {\n          throw new FS.ErrnoError(63);\n        },\n  },\n  stream_ops:{\n  read(stream, buffer, offset, length, position) {\n          //out('LZ4 read ' + [offset, length, position]);\n          length = Math.min(length, stream.node.size - position);\n          if (length <= 0) return 0;\n          var contents = stream.node.contents;\n          var compressedData = contents.compressedData;\n          var written = 0;\n          while (written < length) {\n            var start = contents.start + position + written; // start index in uncompressed data\n            var desired = length - written;\n            //out('current read: ' + ['start', start, 'desired', desired]);\n            var chunkIndex = Math.floor(start / LZ4.CHUNK_SIZE);\n            var compressedStart = compressedData['offsets'][chunkIndex];\n            var compressedSize = compressedData['sizes'][chunkIndex];\n            var currChunk;\n            if (compressedData['successes'][chunkIndex]) {\n              var found = compressedData['cachedIndexes'].indexOf(chunkIndex);\n              if (found >= 0) {\n                currChunk = compressedData['cachedChunks'][found];\n              } else {\n                // decompress the chunk\n                compressedData['cachedIndexes'].pop();\n                compressedData['cachedIndexes'].unshift(chunkIndex);\n                currChunk = compressedData['cachedChunks'].pop();\n                compressedData['cachedChunks'].unshift(currChunk);\n                if (compressedData['debug']) {\n                  out('decompressing chunk ' + chunkIndex);\n                  Module['decompressedChunks'] = (Module['decompressedChunks'] || 0) + 1;\n                }\n                var compressed = compressedData['data'].subarray(compressedStart, compressedStart + compressedSize);\n                //var t = Date.now();\n                var originalSize = LZ4.codec.uncompress(compressed, currChunk);\n                //out('decompress time: ' + (Date.now() - t));\n                if (chunkIndex < compressedData['successes'].length-1) assert(originalSize === LZ4.CHUNK_SIZE); // all but the last chunk must be full-size\n              }\n            } else {\n              // uncompressed\n              currChunk = compressedData['data'].subarray(compressedStart, compressedStart + LZ4.CHUNK_SIZE);\n            }\n            var startInChunk = start % LZ4.CHUNK_SIZE;\n            var endInChunk = Math.min(startInChunk + desired, LZ4.CHUNK_SIZE);\n            buffer.set(currChunk.subarray(startInChunk, endInChunk), offset + written);\n            var currWritten = endInChunk - startInChunk;\n            written += currWritten;\n          }\n          return written;\n        },\n  write(stream, buffer, offset, length, position) {\n          throw new FS.ErrnoError(29);\n        },\n  llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.size;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n  },\n  };\n  var FS = {\n  root:null,\n  mounts:[],\n  devices:{\n  },\n  streams:[],\n  nextInode:1,\n  nameTable:null,\n  currentPath:\"/\",\n  initialized:false,\n  ignorePermissions:true,\n  ErrnoError:null,\n  genericErrors:{\n  },\n  filesystems:null,\n  syncFSRequests:0,\n  lookupPath(path, opts = {}) {\n        path = PATH_FS.resolve(path);\n  \n        if (!path) return { path: '', node: null };\n  \n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0\n        };\n        opts = Object.assign(defaults, opts)\n  \n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\n          throw new FS.ErrnoError(32);\n        }\n  \n        // split the absolute path\n        var parts = path.split('/').filter((p) => !!p);\n  \n        // start at the root\n        var current = FS.root;\n        var current_path = '/';\n  \n        for (var i = 0; i < parts.length; i++) {\n          var islast = (i === parts.length-1);\n          if (islast && opts.parent) {\n            // stop resolving\n            break;\n          }\n  \n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n  \n          // jump to the mount's root node if this is a mountpoint\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n  \n          // by default, lookupPath will not follow a symlink if it is the final path component.\n          // setting opts.follow = true will override this behavior.\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n  \n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\n              current = lookup.node;\n  \n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n  \n        return { path: current_path, node: current };\n      },\n  getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length-1] !== '/' ? `${mount}/${path}` : mount + path;\n          }\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n  hashName(parentid, name) {\n        var hash = 0;\n  \n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n  hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n  hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n  lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        // if we failed to find it in the cache, call into the VFS\n        return FS.lookup(parent, name);\n      },\n  createNode(parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n  \n        FS.hashAddNode(node);\n  \n        return node;\n      },\n  destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n  isRoot(node) {\n        return node === node.parent;\n      },\n  isMountpoint(node) {\n        return !!node.mounted;\n      },\n  isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n  isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n  isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n  isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n  isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n  isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n  isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n  flagsToPermissionString(flag) {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if ((flag & 512)) {\n          perms += 'w';\n        }\n        return perms;\n      },\n  nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        // return 0 if any user, group or owner bits are set.\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n  mayLookup(dir) {\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n  mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {\n        }\n        return FS.nodePermissions(dir, 'wx');\n      },\n  mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n  mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n  MAX_OPEN_FDS:4096,\n  nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n  getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        return stream;\n      },\n  getStream:(fd) => FS.streams[fd],\n  createStream(stream, fd = -1) {\n        if (!FS.FSStream) {\n          FS.FSStream = /** @constructor */ function() {\n            this.shared = { };\n          };\n          FS.FSStream.prototype = {};\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              /** @this {FS.FSStream} */\n              get() { return this.node; },\n              /** @this {FS.FSStream} */\n              set(val) { this.node = val; }\n            },\n            isRead: {\n              /** @this {FS.FSStream} */\n              get() { return (this.flags & 2097155) !== 1; }\n            },\n            isWrite: {\n              /** @this {FS.FSStream} */\n              get() { return (this.flags & 2097155) !== 0; }\n            },\n            isAppend: {\n              /** @this {FS.FSStream} */\n              get() { return (this.flags & 1024); }\n            },\n            flags: {\n              /** @this {FS.FSStream} */\n              get() { return this.shared.flags; },\n              /** @this {FS.FSStream} */\n              set(val) { this.shared.flags = val; },\n            },\n            position : {\n              /** @this {FS.FSStream} */\n              get() { return this.shared.position; },\n              /** @this {FS.FSStream} */\n              set(val) { this.shared.position = val; },\n            },\n          });\n        }\n        // clone it, so we can return an instance of FSStream\n        stream = Object.assign(new FS.FSStream(), stream);\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n  closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n  chrdev_stream_ops:{\n  open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          // override node's stream ops with the device's\n          stream.stream_ops = device.stream_ops;\n          // forward the open call\n          stream.stream_ops.open?.(stream);\n        },\n  llseek() {\n          throw new FS.ErrnoError(70);\n        },\n  },\n  major:(dev) => ((dev) >> 8),\n  minor:(dev) => ((dev) & 0xff),\n  makedev:(ma, mi) => ((ma) << 8 | (mi)),\n  registerDevice(dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n  getDevice:(dev) => FS.devices[dev],\n  getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n  \n        while (check.length) {\n          var m = check.pop();\n  \n          mounts.push(m);\n  \n          check.push.apply(check, m.mounts);\n        }\n  \n        return mounts;\n      },\n  syncfs(populate, callback) {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n  \n        FS.syncFSRequests++;\n  \n        if (FS.syncFSRequests > 1) {\n          err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);\n        }\n  \n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n  \n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n  \n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        };\n  \n        // sync all mounts\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n  mount(type, opts, mountpoint) {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n  \n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n          mountpoint = lookup.path;  // use the absolute path\n          node = lookup.node;\n  \n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n  \n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n  \n        var mount = {\n          type,\n          opts,\n          mountpoint,\n          mounts: []\n        };\n  \n        // create a root node for the fs\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n  \n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          // set as a mountpoint\n          node.mounted = mount;\n  \n          // add the new mount to the current mount's children\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n  \n        return mountRoot;\n      },\n  unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n  \n        // destroy the nodes for this mount, and all its child mounts\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n  \n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n  \n          while (current) {\n            var next = current.name_next;\n  \n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n  \n            current = next;\n          }\n        });\n  \n        // no longer a mountpoint\n        node.mounted = null;\n  \n        // remove this mount from the child mounts\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n  lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n  mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n  create(path, mode) {\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n  mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n  mkdirTree(path, mode) {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch(e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n  mkdev(path, mode, dev) {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438 /* 0666 */;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n  symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n  rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        // parents must exist\n        var lookup, old_dir, new_dir;\n  \n        // let the errors from non existant directories percolate up\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n  \n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n        // need to be part of the same mount\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n        // source must exist\n        var old_node = FS.lookupNode(old_dir, old_name);\n        // old path should not be an ancestor of the new path\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n        // new path should not be an ancestor of the old path\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n        // see if the new path already exists\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {\n          // not fatal\n        }\n        // early out if nothing needs to change\n        if (old_node === new_node) {\n          return;\n        }\n        // we'll need to delete the old entry\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        // need delete permissions if we'll be overwriting.\n        // need create permissions if new doesn't already exist.\n        errCode = new_node ?\n          FS.mayDelete(new_dir, new_name, isdir) :\n          FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\n          throw new FS.ErrnoError(10);\n        }\n        // if we are going to change the parent, check write permissions\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // remove the node from the lookup hash\n        FS.hashRemoveNode(old_node);\n        // do the underlying fs rename\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          // add the node back to the hash (in case node_ops.rename\n          // changed its name)\n          FS.hashAddNode(old_node);\n        }\n      },\n  rmdir(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n  readdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n  unlink(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          // According to POSIX, we should map EISDIR to EPERM, but\n          // we instead do what Linux does (and we must, as we use\n          // the musl linux libc).\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n  readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n      },\n  stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n  lstat(path) {\n        return FS.stat(path, true);\n      },\n  chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now()\n        });\n      },\n  lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n  fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chmod(stream.node, mode);\n      },\n  chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now()\n          // we ignore the uid / gid for now\n        });\n      },\n  lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n  fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chown(stream.node, uid, gid);\n      },\n  truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },\n  ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n  utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime)\n        });\n      },\n  open(path, flags, mode) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;\n        mode = typeof mode == 'undefined' ? 438 /* 0666 */ : mode;\n        if ((flags & 64)) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072)\n            });\n            node = lookup.node;\n          } catch (e) {\n            // ignore\n          }\n        }\n        // perhaps we need to create the node\n        var created = false;\n        if ((flags & 64)) {\n          if (node) {\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\n            if ((flags & 128)) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            // node doesn't exist, try to create it\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        // can't truncate a device\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        // if asked only for a directory, then this must be one\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        // check permissions, if this is not a file we just created now (it is ok to\n        // create and write to a file with read-only permissions; it is read-only\n        // for later use)\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // do truncation if necessary\n        if ((flags & 512) && !created) {\n          FS.truncate(node, 0);\n        }\n        // we've already handled these, don't pass down to the underlying vfs\n        flags &= ~(128 | 512 | 131072);\n  \n        // register the stream with the filesystem\n        var stream = FS.createStream({\n          node,\n          path: FS.getPath(node),  // we want the absolute path to the node\n          flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\n          ungotten: [],\n          error: false\n        });\n        // call the new stream's open function\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n  close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null; // free readdir state\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n  isClosed(stream) {\n        return stream.fd === null;\n      },\n  llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n  read(stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n  write(stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          // seek to the end before writing in append mode\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n  allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n  mmap(stream, length, position, prot, flags) {\n        // User requests writing to file (prot & PROT_WRITE != 0).\n        // Checking if we have permissions to write to the file unless\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\n        // as all modifications will be visible only in the memory of\n        // the current process.\n        if ((prot & 2) !== 0\n            && (flags & 2) === 0\n            && (stream.flags & 2097155) !== 2) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n  msync(stream, buffer, offset, length, mmapFlags) {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },\n  munmap:(stream) => 0,\n  ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n  readFile(path, opts = {}) {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n  writeFile(path, data, opts = {}) {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n  cwd:() => FS.currentPath,\n  chdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n  createDefaultDirectories() {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n  createDefaultDevices() {\n        // create /dev\n        FS.mkdir('/dev');\n        // setup /dev/null\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n        // setup /dev/tty and /dev/tty1\n        // stderr needs to print output using err() rather than out()\n        // so we register a second tty just for it.\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n        // setup /dev/[u]random\n        // use a buffer to avoid overhead of individual crypto calls per byte\n        var randomBuffer = new Uint8Array(1024), randomLeft = 0;\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomLeft = randomFill(randomBuffer).byteLength;\n          }\n          return randomBuffer[--randomLeft];\n        };\n        FS.createDevice('/dev', 'random', randomByte);\n        FS.createDevice('/dev', 'urandom', randomByte);\n        // we're not going to emulate the actual shm device,\n        // just create the tmp dirs that reside in it commonly\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n  createSpecialDirectories() {\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\n        // name of the stream for fd 6 (see test_unistd_ttyname)\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount({\n          mount() {\n            var node = FS.createNode(proc_self, 'fd', 16384 | 511 /* 0777 */, 73);\n            node.node_ops = {\n              lookup(parent, name) {\n                var fd = +name;\n                var stream = FS.getStreamChecked(fd);\n                var ret = {\n                  parent: null,\n                  mount: { mountpoint: 'fake' },\n                  node_ops: { readlink: () => stream.path },\n                };\n                ret.parent = ret; // make it look like a simple root node\n                return ret;\n              }\n            };\n            return node;\n          }\n        }, {}, '/proc/self/fd');\n      },\n  createStandardStreams() {\n        // TODO deprecate the old functionality of a single\n        // input / output callback and that utilizes FS.createDevice\n        // and instead require a unique set of stream ops\n  \n        // by default, we symlink the standard streams to the\n        // default tty devices. however, if the standard streams\n        // have been overwritten we create a unique device for\n        // them instead.\n        if (Module['stdin']) {\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (Module['stdout']) {\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (Module['stderr']) {\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n  \n        // open default streams for the stdin, stdout and stderr devices\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n  ensureErrnoError() {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = /** @this{Object} */ function ErrnoError(errno, node) {\n          // We set the `name` property to be able to identify `FS.ErrnoError`\n          // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\n          // - when using PROXYFS, an error can come from an underlying FS\n          // as different FS objects have their own FS.ErrnoError each,\n          // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\n          // we'll use the reliable test `err.name == \"ErrnoError\"` instead\n          this.name = 'ErrnoError';\n          this.node = node;\n          this.setErrno = /** @this{Object} */ function(errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = 'FS error';\n  \n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n      },\n  staticInit() {\n        FS.ensureErrnoError();\n  \n        FS.nameTable = new Array(4096);\n  \n        FS.mount(MEMFS, {}, '/');\n  \n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n  \n        FS.filesystems = {\n          'MEMFS': MEMFS,\n          'IDBFS': IDBFS,\n        };\n      },\n  init(input, output, error) {\n        FS.init.initialized = true;\n  \n        FS.ensureErrnoError();\n  \n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\n        Module['stdin'] = input || Module['stdin'];\n        Module['stdout'] = output || Module['stdout'];\n        Module['stderr'] = error || Module['stderr'];\n  \n        FS.createStandardStreams();\n      },\n  quit() {\n        FS.init.initialized = false;\n        // force-flush all streams, so we get musl std streams printed out\n        // close all of our streams\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n  findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n  analyzePath(path, dontResolveLastLink) {\n        // operate from within the context of the symlink's target\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {\n        }\n        var ret = {\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\n          parentExists: false, parentPath: null, parentObject: null\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        };\n        return ret;\n      },\n  createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {\n            // ignore EEXIST\n          }\n          parent = current;\n        }\n        return current;\n      },\n  createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n  createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n          // make sure we can write to the file\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n      },\n  createDevice(parent, name, input, output) {\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        // Create a fake device that a set of stream ops to emulate\n        // the old behavior.\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n          close(stream) {\n            // flush any pending line data\n            if (output?.buffer?.length) {\n              output(10);\n            }\n          },\n          read(stream, buffer, offset, length, pos /* ignored */) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset+i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset+i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n  forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else if (read_) {\n          // Command-line.\n          try {\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\n            //          read() will try to parse UTF8.\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\n        }\n      },\n  createLazyFile(parent, name, url, canRead, canWrite) {\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\n        /** @constructor */\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = []; // Loaded chunks. Index is the chunk number\n        }\n        LazyUint8Array.prototype.get = /** @this{Object} */ function LazyUint8Array_get(idx) {\n          if (idx > this.length-1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize)|0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n          this.getter = getter;\n        };\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n          // Find length\n          var xhr = new XMLHttpRequest();\n          xhr.open('HEAD', url, false);\n          xhr.send(null);\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n          var header;\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n  \n          var chunkSize = 1024*1024; // Chunk size in bytes\n  \n          if (!hasByteServing) chunkSize = datalength;\n  \n          // Function to get a range from the remote URL.\n          var doXHR = (from, to) => {\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n  \n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n  \n            // Some hints to the browser that we want binary data.\n            xhr.responseType = 'arraybuffer';\n            if (xhr.overrideMimeType) {\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\n            }\n  \n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            if (xhr.response !== undefined) {\n              return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\n            }\n            return intArrayFromString(xhr.responseText || '', true);\n          };\n          var lazyArray = this;\n          lazyArray.setDataGetter((chunkNum) => {\n            var start = chunkNum * chunkSize;\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\n            }\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\n            return lazyArray.chunks[chunkNum];\n          });\n  \n          if (usesGzip || !datalength) {\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\n            datalength = this.getter(0).length;\n            chunkSize = datalength;\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n          }\n  \n          this._length = datalength;\n          this._chunkSize = chunkSize;\n          this.lengthKnown = true;\n        };\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: /** @this{Object} */ function() {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              }\n            },\n            chunkSize: {\n              get: /** @this{Object} */ function() {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              }\n            }\n          });\n  \n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n  \n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        // This is a total hack, but I want to get this lazy file code out of the\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\n        // be its own thin LAZYFS proxying calls to MEMFS.\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        // Add a function that defers querying the file size until it is asked the first time.\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: /** @this {FSNode} */ function() { return this.contents.length; }\n          }\n        });\n        // override each stream op with one that tries to force load the lazy file first\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length)\n            return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) { // normal array\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n        // use a custom read function\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position)\n        };\n        // use a custom mmap function\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n  };\n  \n  \n    /**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */\n  var UTF8ToString = (ptr, maxBytesToRead) => {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    };\n  var SYSCALLS = {\n  DEFAULT_POLLMASK:5,\n  calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n        // relative path\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);;\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n  doStat(func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n            // an error occurred while trying to look up the path; we should just report ENOTDIR\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[((buf)>>2)] = stat.dev;\n        HEAP32[(((buf)+(4))>>2)] = stat.mode;\n        HEAPU32[(((buf)+(8))>>2)] = stat.nlink;\n        HEAP32[(((buf)+(12))>>2)] = stat.uid;\n        HEAP32[(((buf)+(16))>>2)] = stat.gid;\n        HEAP32[(((buf)+(20))>>2)] = stat.rdev;\n        (tempI64 = [stat.size>>>0,(tempDouble = stat.size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(24))>>2)] = tempI64[0],HEAP32[(((buf)+(28))>>2)] = tempI64[1]);\n        HEAP32[(((buf)+(32))>>2)] = 4096;\n        HEAP32[(((buf)+(36))>>2)] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        (tempI64 = [Math.floor(atime / 1000)>>>0,(tempDouble = Math.floor(atime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(40))>>2)] = tempI64[0],HEAP32[(((buf)+(44))>>2)] = tempI64[1]);\n        HEAPU32[(((buf)+(48))>>2)] = (atime % 1000) * 1000;\n        (tempI64 = [Math.floor(mtime / 1000)>>>0,(tempDouble = Math.floor(mtime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(56))>>2)] = tempI64[0],HEAP32[(((buf)+(60))>>2)] = tempI64[1]);\n        HEAPU32[(((buf)+(64))>>2)] = (mtime % 1000) * 1000;\n        (tempI64 = [Math.floor(ctime / 1000)>>>0,(tempDouble = Math.floor(ctime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(72))>>2)] = tempI64[0],HEAP32[(((buf)+(76))>>2)] = tempI64[1]);\n        HEAPU32[(((buf)+(80))>>2)] = (ctime % 1000) * 1000;\n        (tempI64 = [stat.ino>>>0,(tempDouble = stat.ino,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(88))>>2)] = tempI64[0],HEAP32[(((buf)+(92))>>2)] = tempI64[1]);\n        return 0;\n      },\n  doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n  varargs:undefined,\n  get() {\n        // the `+` prepended here is necessary to convince the JSCompiler that varargs is indeed a number.\n        var ret = HEAP32[((+SYSCALLS.varargs)>>2)];\n        SYSCALLS.varargs += 4;\n        return ret;\n      },\n  getp() { return SYSCALLS.get() },\n  getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n  getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      },\n  };\n  function ___syscall_chmod(path, mode) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.chmod(path, mode);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_dup3(fd, newfd, flags) {\n  try {\n  \n      var old = SYSCALLS.getStreamFromFD(fd);\n      if (old.fd === newfd) return -28;\n      var existing = FS.getStream(newfd);\n      if (existing) FS.close(existing);\n      return FS.createStream(old, newfd).fd;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_fchmod(fd, mode) {\n  try {\n  \n      FS.fchmod(fd, mode);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  var setErrNo = (value) => {\n      HEAP32[((___errno_location())>>2)] = value;\n      return value;\n    };\n  \n  function ___syscall_fcntl64(fd, cmd, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      switch (cmd) {\n        case 0: {\n          var arg = SYSCALLS.get();\n          if (arg < 0) {\n            return -28;\n          }\n          while (FS.streams[arg]) {\n            arg++;\n          }\n          var newStream;\n          newStream = FS.createStream(stream, arg);\n          return newStream.fd;\n        }\n        case 1:\n        case 2:\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\n        case 3:\n          return stream.flags;\n        case 4: {\n          var arg = SYSCALLS.get();\n          stream.flags |= arg;\n          return 0;\n        }\n        case 5: {\n          var arg = SYSCALLS.getp();\n          var offset = 0;\n          // We're always unlocked.\n          HEAP16[(((arg)+(offset))>>1)] = 2;\n          return 0;\n        }\n        case 6:\n        case 7:\n          return 0; // Pretend that the locking is successful.\n        case 16:\n        case 8:\n          return -28; // These are for sockets. We don't have them fully implemented yet.\n        case 9:\n          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fcntl() returns that, and we set errno ourselves.\n          setErrNo(28);\n          return -1;\n        default: {\n          return -28;\n        }\n      }\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_fstat64(fd, buf) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      return SYSCALLS.doStat(FS.stat, stream.path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  \n  var convertI32PairToI53Checked = (lo, hi) => {\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\n    };\n  function ___syscall_ftruncate64(fd,length_low, length_high) {\n    var length = convertI32PairToI53Checked(length_low, length_high);;\n  \n    \n  try {\n  \n      if (isNaN(length)) return 61;\n      FS.ftruncate(fd, length);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  ;\n  }\n\n  \n  var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    };\n  \n  function ___syscall_getcwd(buf, size) {\n  try {\n  \n      if (size === 0) return -28;\n      var cwd = FS.cwd();\n      var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\n      if (size < cwdLengthInBytes) return -68;\n      stringToUTF8(cwd, buf, size);\n      return cwdLengthInBytes;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  \n  function ___syscall_getdents64(fd, dirp, count) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd)\n      stream.getdents ||= FS.readdir(stream.path);\n  \n      var struct_size = 280;\n      var pos = 0;\n      var off = FS.llseek(stream, 0, 1);\n  \n      var idx = Math.floor(off / struct_size);\n  \n      while (idx < stream.getdents.length && pos + struct_size <= count) {\n        var id;\n        var type;\n        var name = stream.getdents[idx];\n        if (name === '.') {\n          id = stream.node.id;\n          type = 4; // DT_DIR\n        }\n        else if (name === '..') {\n          var lookup = FS.lookupPath(stream.path, { parent: true });\n          id = lookup.node.id;\n          type = 4; // DT_DIR\n        }\n        else {\n          var child = FS.lookupNode(stream.node, name);\n          id = child.id;\n          type = FS.isChrdev(child.mode) ? 2 :  // DT_CHR, character device.\n                 FS.isDir(child.mode) ? 4 :     // DT_DIR, directory.\n                 FS.isLink(child.mode) ? 10 :   // DT_LNK, symbolic link.\n                 8;                             // DT_REG, regular file.\n        }\n        (tempI64 = [id>>>0,(tempDouble = id,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((dirp + pos)>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(4))>>2)] = tempI64[1]);\n        (tempI64 = [(idx + 1) * struct_size>>>0,(tempDouble = (idx + 1) * struct_size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((dirp + pos)+(8))>>2)] = tempI64[0],HEAP32[(((dirp + pos)+(12))>>2)] = tempI64[1]);\n        HEAP16[(((dirp + pos)+(16))>>1)] = 280;\n        HEAP8[(((dirp + pos)+(18))>>0)] = type;\n        stringToUTF8(name, dirp + pos + 19, 256);\n        pos += struct_size;\n        idx += 1;\n      }\n      FS.llseek(stream, idx * struct_size, 0);\n      return pos;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_ioctl(fd, op, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      switch (op) {\n        case 21509: {\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        case 21505: {\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tcgets) {\n            var termios = stream.tty.ops.ioctl_tcgets(stream);\n            var argp = SYSCALLS.getp();\n            HEAP32[((argp)>>2)] = termios.c_iflag || 0;\n            HEAP32[(((argp)+(4))>>2)] = termios.c_oflag || 0;\n            HEAP32[(((argp)+(8))>>2)] = termios.c_cflag || 0;\n            HEAP32[(((argp)+(12))>>2)] = termios.c_lflag || 0;\n            for (var i = 0; i < 32; i++) {\n              HEAP8[(((argp + i)+(17))>>0)] = termios.c_cc[i] || 0;\n            }\n            return 0;\n          }\n          return 0;\n        }\n        case 21510:\n        case 21511:\n        case 21512: {\n          if (!stream.tty) return -59;\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21506:\n        case 21507:\n        case 21508: {\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tcsets) {\n            var argp = SYSCALLS.getp();\n            var c_iflag = HEAP32[((argp)>>2)];\n            var c_oflag = HEAP32[(((argp)+(4))>>2)];\n            var c_cflag = HEAP32[(((argp)+(8))>>2)];\n            var c_lflag = HEAP32[(((argp)+(12))>>2)];\n            var c_cc = []\n            for (var i = 0; i < 32; i++) {\n              c_cc.push(HEAP8[(((argp + i)+(17))>>0)]);\n            }\n            return stream.tty.ops.ioctl_tcsets(stream.tty, op, { c_iflag, c_oflag, c_cflag, c_lflag, c_cc });\n          }\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21519: {\n          if (!stream.tty) return -59;\n          var argp = SYSCALLS.getp();\n          HEAP32[((argp)>>2)] = 0;\n          return 0;\n        }\n        case 21520: {\n          if (!stream.tty) return -59;\n          return -28; // not supported\n        }\n        case 21531: {\n          var argp = SYSCALLS.getp();\n          return FS.ioctl(stream, op, argp);\n        }\n        case 21523: {\n          // TODO: in theory we should write to the winsize struct that gets\n          // passed in, but for now musl doesn't read anything on it\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tiocgwinsz) {\n            var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);\n            var argp = SYSCALLS.getp();\n            HEAP16[((argp)>>1)] = winsize[0];\n            HEAP16[(((argp)+(2))>>1)] = winsize[1];\n          }\n          return 0;\n        }\n        case 21524: {\n          // TODO: technically, this ioctl call should change the window size.\n          // but, since emscripten doesn't have any concept of a terminal window\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        case 21515: {\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        default: return -28; // not supported\n      }\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_lstat64(path, buf) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.doStat(FS.lstat, path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_mkdirat(dirfd, path, mode) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      // remove a trailing slash, if one - /a/b/ has basename of '', but\n      // we want to create b in the context of this function\n      path = PATH.normalize(path);\n      if (path[path.length-1] === '/') path = path.substr(0, path.length-1);\n      FS.mkdir(path, mode, 0);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_newfstatat(dirfd, path, buf, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      var nofollow = flags & 256;\n      var allowEmpty = flags & 4096;\n      flags = flags & (~6400);\n      path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n      return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_openat(dirfd, path, flags, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      var mode = varargs ? SYSCALLS.get() : 0;\n      return FS.open(path, flags, mode).fd;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  \n  \n  function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      if (bufsize <= 0) return -28;\n      var ret = FS.readlink(path);\n  \n      var len = Math.min(bufsize, lengthBytesUTF8(ret));\n      var endChar = HEAP8[buf+len];\n      stringToUTF8(ret, buf, bufsize+1);\n      // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)\n      // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.\n      HEAP8[buf+len] = endChar;\n      return len;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_renameat(olddirfd, oldpath, newdirfd, newpath) {\n  try {\n  \n      oldpath = SYSCALLS.getStr(oldpath);\n      newpath = SYSCALLS.getStr(newpath);\n      oldpath = SYSCALLS.calculateAt(olddirfd, oldpath);\n      newpath = SYSCALLS.calculateAt(newdirfd, newpath);\n      FS.rename(oldpath, newpath);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_rmdir(path) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.rmdir(path);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_stat64(path, buf) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.doStat(FS.stat, path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_unlinkat(dirfd, path, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      if (flags === 0) {\n        FS.unlink(path);\n      } else if (flags === 512) {\n        FS.rmdir(path);\n      } else {\n        abort('Invalid flags passed to unlinkat');\n      }\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  var nowIsMonotonic = 1;\n  var __emscripten_get_now_is_monotonic = () => nowIsMonotonic;\n\n  var __emscripten_throw_longjmp = () => {\n      throw Infinity;\n    };\n\n  function __gmtime_js(time_low, time_high,tmPtr) {\n    var time = convertI32PairToI53Checked(time_low, time_high);;\n  \n    \n      var date = new Date(time * 1000);\n      HEAP32[((tmPtr)>>2)] = date.getUTCSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getUTCMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getUTCHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getUTCDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getUTCMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getUTCFullYear()-1900;\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getUTCDay();\n      var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);\n      var yday = ((date.getTime() - start) / (1000 * 60 * 60 * 24))|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n    ;\n  }\n\n  var isLeapYear = (year) => year%4 === 0 && (year%100 !== 0 || year%400 === 0);\n  \n  var MONTH_DAYS_LEAP_CUMULATIVE = [0,31,60,91,121,152,182,213,244,274,305,335];\n  \n  var MONTH_DAYS_REGULAR_CUMULATIVE = [0,31,59,90,120,151,181,212,243,273,304,334];\n  var ydayFromDate = (date) => {\n      var leap = isLeapYear(date.getFullYear());\n      var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1; // -1 since it's days since Jan 1\n  \n      return yday;\n    };\n  \n  function __localtime_js(time_low, time_high,tmPtr) {\n    var time = convertI32PairToI53Checked(time_low, time_high);;\n  \n    \n      var date = new Date(time*1000);\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getFullYear()-1900;\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\n  \n      var yday = ydayFromDate(date)|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n      HEAP32[(((tmPtr)+(36))>>2)] = -(date.getTimezoneOffset() * 60);\n  \n      // Attention: DST is in December in South, and some regions don't have DST at all.\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\n      HEAP32[(((tmPtr)+(32))>>2)] = dst;\n    ;\n  }\n\n  \n  \n  \n  var __mktime_js = function(tmPtr) {\n  \n    var ret = (() => { \n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\n                          HEAP32[(((tmPtr)+(16))>>2)],\n                          HEAP32[(((tmPtr)+(12))>>2)],\n                          HEAP32[(((tmPtr)+(8))>>2)],\n                          HEAP32[(((tmPtr)+(4))>>2)],\n                          HEAP32[((tmPtr)>>2)],\n                          0);\n  \n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\n      var guessedOffset = date.getTimezoneOffset();\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\n      if (dst < 0) {\n        // Attention: some regions don't have DST at all.\n        HEAP32[(((tmPtr)+(32))>>2)] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\n      }\n  \n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\n      var yday = ydayFromDate(date)|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n      // To match expected behavior, update fields from date\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getYear();\n  \n      var timeMs = date.getTime();\n      if (isNaN(timeMs)) {\n        setErrNo(61);\n        return -1;\n      }\n      // Return time in microseconds\n      return timeMs / 1000;\n     })();\n    return (setTempRet0((tempDouble = ret,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)), ret>>>0);\n  };\n\n  \n  \n  var stringToNewUTF8 = (str) => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = _malloc(size);\n      if (ret) stringToUTF8(str, ret, size);\n      return ret;\n    };\n  var __tzset_js = (timezone, daylight, tzname) => {\n      // TODO: Use (malleable) environment variables instead of system settings.\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n  \n      // Local standard timezone offset. Local standard time is not adjusted for daylight savings.\n      // This code uses the fact that getTimezoneOffset returns a greater value during Standard Time versus Daylight Saving Time (DST).\n      // Thus it determines the expected output during Standard Time, and it compares whether the output of the given date the same (Standard) or less (DST).\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n  \n      // timezone is specified as seconds west of UTC (\"The external variable\n      // `timezone` shall be set to the difference, in seconds, between\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\n      // as returned by stdTimezoneOffset.\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\n      HEAPU32[((timezone)>>2)] = stdTimezoneOffset * 60;\n  \n      HEAP32[((daylight)>>2)] = Number(winterOffset != summerOffset);\n  \n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : \"GMT\";\n      };\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = stringToNewUTF8(winterName);\n      var summerNamePtr = stringToNewUTF8(summerName);\n      if (summerOffset < winterOffset) {\n        // Northern hemisphere\n        HEAPU32[((tzname)>>2)] = winterNamePtr;\n        HEAPU32[(((tzname)+(4))>>2)] = summerNamePtr;\n      } else {\n        HEAPU32[((tzname)>>2)] = summerNamePtr;\n        HEAPU32[(((tzname)+(4))>>2)] = winterNamePtr;\n      }\n    };\n\n  var _abort = () => {\n      abort('');\n    };\n\n  var _emscripten_set_main_loop_timing = (mode, value) => {\n      Browser.mainLoop.timingMode = mode;\n      Browser.mainLoop.timingValue = value;\n  \n      if (!Browser.mainLoop.func) {\n        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.\n      }\n  \n      if (!Browser.mainLoop.running) {\n        \n        Browser.mainLoop.running = true;\n      }\n      if (mode == 0) {\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {\n          var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now())|0;\n          setTimeout(Browser.mainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop\n        };\n        Browser.mainLoop.method = 'timeout';\n      } else if (mode == 1) {\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {\n          Browser.requestAnimationFrame(Browser.mainLoop.runner);\n        };\n        Browser.mainLoop.method = 'rAF';\n      } else if (mode == 2) {\n        if (typeof Browser.setImmediate == 'undefined') {\n          if (typeof setImmediate == 'undefined') {\n            // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)\n            var setImmediates = [];\n            var emscriptenMainLoopMessageId = 'setimmediate';\n            /** @param {Event} event */\n            var Browser_setImmediate_messageHandler = (event) => {\n              // When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,\n              // so check for both cases.\n              if (event.data === emscriptenMainLoopMessageId || event.data.target === emscriptenMainLoopMessageId) {\n                event.stopPropagation();\n                setImmediates.shift()();\n              }\n            };\n            addEventListener(\"message\", Browser_setImmediate_messageHandler, true);\n            Browser.setImmediate = /** @type{function(function(): ?, ...?): number} */(function Browser_emulated_setImmediate(func) {\n              setImmediates.push(func);\n              if (ENVIRONMENT_IS_WORKER) {\n                if (Module['setImmediates'] === undefined) Module['setImmediates'] = [];\n                Module['setImmediates'].push(func);\n                postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js\n              } else postMessage(emscriptenMainLoopMessageId, \"*\"); // On the main thread, can just send the message to itself.\n            });\n          } else {\n            Browser.setImmediate = setImmediate;\n          }\n        }\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {\n          Browser.setImmediate(Browser.mainLoop.runner);\n        };\n        Browser.mainLoop.method = 'immediate';\n      }\n      return 0;\n    };\n  \n  var _emscripten_get_now;\n      // Modern environment where performance.now() is supported:\n      // N.B. a shorter form \"_emscripten_get_now = performance.now;\" is\n      // unfortunately not allowed even in current browsers (e.g. FF Nightly 75).\n      _emscripten_get_now = () => performance.now();\n  ;\n  \n  \n    /**\n     * @param {number=} arg\n     * @param {boolean=} noSetTiming\n     */\n  var setMainLoop = (browserIterationFunc, fps, simulateInfiniteLoop, arg, noSetTiming) => {\n      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');\n  \n      Browser.mainLoop.func = browserIterationFunc;\n      Browser.mainLoop.arg = arg;\n  \n      // Closure compiler bug(?): Closure does not see that the assignment\n      //   var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop\n      // is a value copy of a number (even with the JSDoc @type annotation)\n      // but optimizeis the code as if the assignment was a reference assignment,\n      // which results in Browser.mainLoop.pause() not working. Hence use a\n      // workaround to make Closure believe this is a value copy that should occur:\n      // (TODO: Minimize this down to a small test case and report - was unable\n      // to reproduce in a small written test case)\n      /** @type{number} */\n      var thisMainLoopId = (() => Browser.mainLoop.currentlyRunningMainloop)();\n      function checkIsRunning() {\n        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) {\n          \n          return false;\n        }\n        return true;\n      }\n  \n      // We create the loop runner here but it is not actually running until\n      // _emscripten_set_main_loop_timing is called (which might happen a\n      // later time).  This member signifies that the current runner has not\n      // yet been started so that we can call runtimeKeepalivePush when it\n      // gets it timing set for the first time.\n      Browser.mainLoop.running = false;\n      Browser.mainLoop.runner = function Browser_mainLoop_runner() {\n        if (ABORT) return;\n        if (Browser.mainLoop.queue.length > 0) {\n          var start = Date.now();\n          var blocker = Browser.mainLoop.queue.shift();\n          blocker.func(blocker.arg);\n          if (Browser.mainLoop.remainingBlockers) {\n            var remaining = Browser.mainLoop.remainingBlockers;\n            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);\n            if (blocker.counted) {\n              Browser.mainLoop.remainingBlockers = next;\n            } else {\n              // not counted, but move the progress along a tiny bit\n              next = next + 0.5; // do not steal all the next one's progress\n              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;\n            }\n          }\n          Browser.mainLoop.updateStatus();\n  \n          // catches pause/resume main loop from blocker execution\n          if (!checkIsRunning()) return;\n  \n          setTimeout(Browser.mainLoop.runner, 0);\n          return;\n        }\n  \n        // catch pauses from non-main loop sources\n        if (!checkIsRunning()) return;\n  \n        // Implement very basic swap interval control\n        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;\n        if (Browser.mainLoop.timingMode == 1 && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {\n          // Not the scheduled time to render this frame - skip.\n          Browser.mainLoop.scheduler();\n          return;\n        } else if (Browser.mainLoop.timingMode == 0) {\n          Browser.mainLoop.tickStartTime = _emscripten_get_now();\n        }\n  \n        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize\n        // VBO double-buffering and reduce GPU stalls.\n        GL.newRenderingFrameStarted();\n  \n        Browser.mainLoop.runIter(browserIterationFunc);\n  \n        // catch pauses from the main loop itself\n        if (!checkIsRunning()) return;\n  \n        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able\n        // to queue the newest produced audio samples.\n        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()\n        //       do not need to be hardcoded into this function, but can be more generic.\n        if (typeof SDL == 'object') SDL.audio?.queueNewAudioData?.();\n  \n        Browser.mainLoop.scheduler();\n      }\n  \n      if (!noSetTiming) {\n        if (fps && fps > 0) {\n          _emscripten_set_main_loop_timing(0, 1000.0 / fps);\n        } else {\n          // Do rAF by rendering each frame (no decimating)\n          _emscripten_set_main_loop_timing(1, 1);\n        }\n  \n        Browser.mainLoop.scheduler();\n      }\n  \n      if (simulateInfiniteLoop) {\n        throw 'unwind';\n      }\n    };\n  \n  var handleException = (e) => {\n      // Certain exception types we do not treat as errors since they are used for\n      // internal control flow.\n      // 1. ExitStatus, which is thrown by exit()\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\n      //    that wish to return to JS event loop.\n      if (e instanceof ExitStatus || e == 'unwind') {\n        return EXITSTATUS;\n      }\n      quit_(1, e);\n    };\n  \n  \n  var runtimeKeepaliveCounter = 0;\n  var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\n  \n  var _proc_exit = (code) => {\n      EXITSTATUS = code;\n      if (!keepRuntimeAlive()) {\n        Module['onExit']?.(code);\n        ABORT = true;\n      }\n      quit_(code, new ExitStatus(code));\n    };\n  /** @suppress {duplicate } */\n  /** @param {boolean|number=} implicit */\n  var exitJS = (status, implicit) => {\n      EXITSTATUS = status;\n  \n      _proc_exit(status);\n    };\n  var _exit = exitJS;\n  \n  \n  var maybeExit = () => {\n      if (!keepRuntimeAlive()) {\n        try {\n          _exit(EXITSTATUS);\n        } catch (e) {\n          handleException(e);\n        }\n      }\n    };\n  var callUserCallback = (func) => {\n      if (ABORT) {\n        return;\n      }\n      try {\n        func();\n        maybeExit();\n      } catch (e) {\n        handleException(e);\n      }\n    };\n  \n  /** @param {number=} timeout */\n  var safeSetTimeout = (func, timeout) => {\n      \n      return setTimeout(() => {\n        \n        callUserCallback(func);\n      }, timeout);\n    };\n  \n  var warnOnce = (text) => {\n      warnOnce.shown ||= {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        err(text);\n      }\n    };\n  \n  \n  \n  var Browser = {\n  mainLoop:{\n  running:false,\n  scheduler:null,\n  method:\"\",\n  currentlyRunningMainloop:0,\n  func:null,\n  arg:0,\n  timingMode:0,\n  timingValue:0,\n  currentFrameNumber:0,\n  queue:[],\n  pause() {\n          Browser.mainLoop.scheduler = null;\n          // Incrementing this signals the previous main loop that it's now become old, and it must return.\n          Browser.mainLoop.currentlyRunningMainloop++;\n        },\n  resume() {\n          Browser.mainLoop.currentlyRunningMainloop++;\n          var timingMode = Browser.mainLoop.timingMode;\n          var timingValue = Browser.mainLoop.timingValue;\n          var func = Browser.mainLoop.func;\n          Browser.mainLoop.func = null;\n          // do not set timing and call scheduler, we will do it on the next lines\n          setMainLoop(func, 0, false, Browser.mainLoop.arg, true);\n          _emscripten_set_main_loop_timing(timingMode, timingValue);\n          Browser.mainLoop.scheduler();\n        },\n  updateStatus() {\n          if (Module['setStatus']) {\n            var message = Module['statusMessage'] || 'Please wait...';\n            var remaining = Browser.mainLoop.remainingBlockers;\n            var expected = Browser.mainLoop.expectedBlockers;\n            if (remaining) {\n              if (remaining < expected) {\n                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');\n              } else {\n                Module['setStatus'](message);\n              }\n            } else {\n              Module['setStatus']('');\n            }\n          }\n        },\n  runIter(func) {\n          if (ABORT) return;\n          if (Module['preMainLoop']) {\n            var preRet = Module['preMainLoop']();\n            if (preRet === false) {\n              return; // |return false| skips a frame\n            }\n          }\n          callUserCallback(func);\n          Module['postMainLoop']?.();\n        },\n  },\n  isFullscreen:false,\n  pointerLock:false,\n  moduleContextCreatedCallbacks:[],\n  workers:[],\n  init() {\n        if (Browser.initted) return;\n        Browser.initted = true;\n  \n        // Support for plugins that can process preloaded files. You can add more of these to\n        // your app by creating and appending to preloadPlugins.\n        //\n        // Each plugin is asked if it can handle a file based on the file's name. If it can,\n        // it is given the file's raw data. When it is done, it calls a callback with the file's\n        // (possibly modified) data. For example, a plugin might decompress a file, or it\n        // might create some side data structure for use later (like an Image element, etc.).\n  \n        var imagePlugin = {};\n        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {\n          return !Module.noImageDecoding && /\\.(jpg|jpeg|png|bmp)$/i.test(name);\n        };\n        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\n          if (b.size !== byteArray.length) { // Safari bug #118630\n            // Safari's Blob can only take an ArrayBuffer\n            b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });\n          }\n          var url = URL.createObjectURL(b);\n          var img = new Image();\n          img.onload = () => {\n            assert(img.complete, `Image ${name} could not be decoded`);\n            var canvas = /** @type {!HTMLCanvasElement} */ (document.createElement('canvas'));\n            canvas.width = img.width;\n            canvas.height = img.height;\n            var ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0);\n            preloadedImages[name] = canvas;\n            URL.revokeObjectURL(url);\n            onload?.(byteArray);\n          };\n          img.onerror = (event) => {\n            err(`Image ${url} could not be decoded`);\n            onerror?.();\n          };\n          img.src = url;\n        };\n        preloadPlugins.push(imagePlugin);\n  \n        var audioPlugin = {};\n        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {\n          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };\n        };\n        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {\n          var done = false;\n          function finish(audio) {\n            if (done) return;\n            done = true;\n            preloadedAudios[name] = audio;\n            onload?.(byteArray);\n          }\n          function fail() {\n            if (done) return;\n            done = true;\n            preloadedAudios[name] = new Audio(); // empty shim\n            onerror?.();\n          }\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\n          var url = URL.createObjectURL(b); // XXX we never revoke this!\n          var audio = new Audio();\n          audio.addEventListener('canplaythrough', () => finish(audio), false); // use addEventListener due to chromium bug 124926\n          audio.onerror = function audio_onerror(event) {\n            if (done) return;\n            err(`warning: browser could not fully decode audio ${name}, trying slower base64 approach`);\n            function encode64(data) {\n              var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n              var PAD = '=';\n              var ret = '';\n              var leftchar = 0;\n              var leftbits = 0;\n              for (var i = 0; i < data.length; i++) {\n                leftchar = (leftchar << 8) | data[i];\n                leftbits += 8;\n                while (leftbits >= 6) {\n                  var curr = (leftchar >> (leftbits-6)) & 0x3f;\n                  leftbits -= 6;\n                  ret += BASE[curr];\n                }\n              }\n              if (leftbits == 2) {\n                ret += BASE[(leftchar&3) << 4];\n                ret += PAD + PAD;\n              } else if (leftbits == 4) {\n                ret += BASE[(leftchar&0xf) << 2];\n                ret += PAD;\n              }\n              return ret;\n            }\n            audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);\n            finish(audio); // we don't wait for confirmation this worked - but it's worth trying\n          };\n          audio.src = url;\n          // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror\n          safeSetTimeout(() => {\n            finish(audio); // try to use it even though it is not necessarily ready to play\n          }, 10000);\n        };\n        preloadPlugins.push(audioPlugin);\n  \n        // Canvas event setup\n  \n        function pointerLockChange() {\n          Browser.pointerLock = document['pointerLockElement'] === Module['canvas'] ||\n                                document['mozPointerLockElement'] === Module['canvas'] ||\n                                document['webkitPointerLockElement'] === Module['canvas'] ||\n                                document['msPointerLockElement'] === Module['canvas'];\n        }\n        var canvas = Module['canvas'];\n        if (canvas) {\n          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module\n          // Module['forcedAspectRatio'] = 4 / 3;\n  \n          canvas.requestPointerLock = canvas['requestPointerLock'] ||\n                                      canvas['mozRequestPointerLock'] ||\n                                      canvas['webkitRequestPointerLock'] ||\n                                      canvas['msRequestPointerLock'] ||\n                                      (() => {});\n          canvas.exitPointerLock = document['exitPointerLock'] ||\n                                   document['mozExitPointerLock'] ||\n                                   document['webkitExitPointerLock'] ||\n                                   document['msExitPointerLock'] ||\n                                   (() => {}); // no-op if function does not exist\n          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\n  \n          document.addEventListener('pointerlockchange', pointerLockChange, false);\n          document.addEventListener('mozpointerlockchange', pointerLockChange, false);\n          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);\n          document.addEventListener('mspointerlockchange', pointerLockChange, false);\n  \n          if (Module['elementPointerLock']) {\n            canvas.addEventListener(\"click\", (ev) => {\n              if (!Browser.pointerLock && Module['canvas'].requestPointerLock) {\n                Module['canvas'].requestPointerLock();\n                ev.preventDefault();\n              }\n            }, false);\n          }\n        }\n      },\n  createContext(/** @type {HTMLCanvasElement} */ canvas, useWebGL, setInModule, webGLContextAttributes) {\n        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.\n  \n        var ctx;\n        var contextHandle;\n        if (useWebGL) {\n          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.\n          var contextAttributes = {\n            antialias: false,\n            alpha: false,\n            majorVersion: (typeof WebGL2RenderingContext != 'undefined') ? 2 : 1,\n          };\n  \n          if (webGLContextAttributes) {\n            for (var attribute in webGLContextAttributes) {\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\n            }\n          }\n  \n          // This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not\n          // actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function\n          // Browser.createContext() should not even be emitted.\n          if (typeof GL != 'undefined') {\n            contextHandle = GL.createContext(canvas, contextAttributes);\n            if (contextHandle) {\n              ctx = GL.getContext(contextHandle).GLctx;\n            }\n          }\n        } else {\n          ctx = canvas.getContext('2d');\n        }\n  \n        if (!ctx) return null;\n  \n        if (setInModule) {\n          if (!useWebGL) assert(typeof GLctx == 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');\n  \n          Module.ctx = ctx;\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\n          Module.useWebGL = useWebGL;\n          Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\n          Browser.init();\n        }\n        return ctx;\n      },\n  destroyContext(canvas, useWebGL, setInModule) {},\n  fullscreenHandlersInstalled:false,\n  lockPointer:undefined,\n  resizeCanvas:undefined,\n  requestFullscreen(lockPointer, resizeCanvas) {\n        Browser.lockPointer = lockPointer;\n        Browser.resizeCanvas = resizeCanvas;\n        if (typeof Browser.lockPointer == 'undefined') Browser.lockPointer = true;\n        if (typeof Browser.resizeCanvas == 'undefined') Browser.resizeCanvas = false;\n  \n        var canvas = Module['canvas'];\n        function fullscreenChange() {\n          Browser.isFullscreen = false;\n          var canvasContainer = canvas.parentNode;\n          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||\n               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\n               document['webkitCurrentFullScreenElement']) === canvasContainer) {\n            canvas.exitFullscreen = Browser.exitFullscreen;\n            if (Browser.lockPointer) canvas.requestPointerLock();\n            Browser.isFullscreen = true;\n            if (Browser.resizeCanvas) {\n              Browser.setFullscreenCanvasSize();\n            } else {\n              Browser.updateCanvasDimensions(canvas);\n            }\n          } else {\n            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\n            canvasContainer.parentNode.removeChild(canvasContainer);\n  \n            if (Browser.resizeCanvas) {\n              Browser.setWindowedCanvasSize();\n            } else {\n              Browser.updateCanvasDimensions(canvas);\n            }\n          }\n          Module['onFullScreen']?.(Browser.isFullscreen);\n          Module['onFullscreen']?.(Browser.isFullscreen);\n        }\n  \n        if (!Browser.fullscreenHandlersInstalled) {\n          Browser.fullscreenHandlersInstalled = true;\n          document.addEventListener('fullscreenchange', fullscreenChange, false);\n          document.addEventListener('mozfullscreenchange', fullscreenChange, false);\n          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);\n          document.addEventListener('MSFullscreenChange', fullscreenChange, false);\n        }\n  \n        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root\n        var canvasContainer = document.createElement(\"div\");\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\n        canvasContainer.appendChild(canvas);\n  \n        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)\n        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||\n                                            canvasContainer['mozRequestFullScreen'] ||\n                                            canvasContainer['msRequestFullscreen'] ||\n                                           (canvasContainer['webkitRequestFullscreen'] ? () => canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) : null) ||\n                                           (canvasContainer['webkitRequestFullScreen'] ? () => canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) : null);\n  \n        canvasContainer.requestFullscreen();\n      },\n  exitFullscreen() {\n        // This is workaround for chrome. Trying to exit from fullscreen\n        // not in fullscreen state will cause \"TypeError: Document not active\"\n        // in chrome. See https://github.com/emscripten-core/emscripten/pull/8236\n        if (!Browser.isFullscreen) {\n          return false;\n        }\n  \n        var CFS = document['exitFullscreen'] ||\n                  document['cancelFullScreen'] ||\n                  document['mozCancelFullScreen'] ||\n                  document['msExitFullscreen'] ||\n                  document['webkitCancelFullScreen'] ||\n            (() => {});\n        CFS.apply(document, []);\n        return true;\n      },\n  nextRAF:0,\n  fakeRequestAnimationFrame(func) {\n        // try to keep 60fps between calls to here\n        var now = Date.now();\n        if (Browser.nextRAF === 0) {\n          Browser.nextRAF = now + 1000/60;\n        } else {\n          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0\n            Browser.nextRAF += 1000/60;\n          }\n        }\n        var delay = Math.max(Browser.nextRAF - now, 0);\n        setTimeout(func, delay);\n      },\n  requestAnimationFrame(func) {\n        if (typeof requestAnimationFrame == 'function') {\n          requestAnimationFrame(func);\n          return;\n        }\n        var RAF = Browser.fakeRequestAnimationFrame;\n        RAF(func);\n      },\n  safeSetTimeout(func, timeout) {\n        // Legacy function, this is used by the SDL2 port so we need to keep it\n        // around at least until that is updated.\n        // See https://github.com/libsdl-org/SDL/pull/6304\n        return safeSetTimeout(func, timeout);\n      },\n  safeRequestAnimationFrame(func) {\n        \n        return Browser.requestAnimationFrame(() => {\n          \n          callUserCallback(func);\n        });\n      },\n  getMimetype(name) {\n        return {\n          'jpg': 'image/jpeg',\n          'jpeg': 'image/jpeg',\n          'png': 'image/png',\n          'bmp': 'image/bmp',\n          'ogg': 'audio/ogg',\n          'wav': 'audio/wav',\n          'mp3': 'audio/mpeg'\n        }[name.substr(name.lastIndexOf('.')+1)];\n      },\n  getUserMedia(func) {\n        window.getUserMedia ||= navigator['getUserMedia'] ||\n                                navigator['mozGetUserMedia'];\n        window.getUserMedia(func);\n      },\n  getMovementX(event) {\n        return event['movementX'] ||\n               event['mozMovementX'] ||\n               event['webkitMovementX'] ||\n               0;\n      },\n  getMovementY(event) {\n        return event['movementY'] ||\n               event['mozMovementY'] ||\n               event['webkitMovementY'] ||\n               0;\n      },\n  getMouseWheelDelta(event) {\n        var delta = 0;\n        switch (event.type) {\n          case 'DOMMouseScroll':\n            // 3 lines make up a step\n            delta = event.detail / 3;\n            break;\n          case 'mousewheel':\n            // 120 units make up a step\n            delta = event.wheelDelta / 120;\n            break;\n          case 'wheel':\n            delta = event.deltaY\n            switch (event.deltaMode) {\n              case 0:\n                // DOM_DELTA_PIXEL: 100 pixels make up a step\n                delta /= 100;\n                break;\n              case 1:\n                // DOM_DELTA_LINE: 3 lines make up a step\n                delta /= 3;\n                break;\n              case 2:\n                // DOM_DELTA_PAGE: A page makes up 80 steps\n                delta *= 80;\n                break;\n              default:\n                throw 'unrecognized mouse wheel delta mode: ' + event.deltaMode;\n            }\n            break;\n          default:\n            throw 'unrecognized mouse wheel event: ' + event.type;\n        }\n        return delta;\n      },\n  mouseX:0,\n  mouseY:0,\n  mouseMovementX:0,\n  mouseMovementY:0,\n  touches:{\n  },\n  lastTouches:{\n  },\n  calculateMouseCoords(pageX, pageY) {\n        // Calculate the movement based on the changes\n        // in the coordinates.\n        var rect = Module[\"canvas\"].getBoundingClientRect();\n        var cw = Module[\"canvas\"].width;\n        var ch = Module[\"canvas\"].height;\n  \n        // Neither .scrollX or .pageXOffset are defined in a spec, but\n        // we prefer .scrollX because it is currently in a spec draft.\n        // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)\n        var scrollX = ((typeof window.scrollX != 'undefined') ? window.scrollX : window.pageXOffset);\n        var scrollY = ((typeof window.scrollY != 'undefined') ? window.scrollY : window.pageYOffset);\n        var adjustedX = pageX - (scrollX + rect.left);\n        var adjustedY = pageY - (scrollY + rect.top);\n  \n        // the canvas might be CSS-scaled compared to its backbuffer;\n        // SDL-using content will want mouse coordinates in terms\n        // of backbuffer units.\n        adjustedX = adjustedX * (cw / rect.width);\n        adjustedY = adjustedY * (ch / rect.height);\n  \n        return { x: adjustedX, y: adjustedY };\n      },\n  setMouseCoords(pageX, pageY) {\n        const {x, y} = Browser.calculateMouseCoords(pageX, pageY);\n        Browser.mouseMovementX = x - Browser.mouseX;\n        Browser.mouseMovementY = y - Browser.mouseY;\n        Browser.mouseX = x;\n        Browser.mouseY = y;\n      },\n  calculateMouseEvent(event) { // event should be mousemove, mousedown or mouseup\n        if (Browser.pointerLock) {\n          // When the pointer is locked, calculate the coordinates\n          // based on the movement of the mouse.\n          // Workaround for Firefox bug 764498\n          if (event.type != 'mousemove' &&\n              ('mozMovementX' in event)) {\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\n          } else {\n            Browser.mouseMovementX = Browser.getMovementX(event);\n            Browser.mouseMovementY = Browser.getMovementY(event);\n          }\n  \n          // check if SDL is available\n          if (typeof SDL != \"undefined\") {\n            Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;\n            Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;\n          } else {\n            // just add the mouse delta to the current absolut mouse position\n            // FIXME: ideally this should be clamped against the canvas size and zero\n            Browser.mouseX += Browser.mouseMovementX;\n            Browser.mouseY += Browser.mouseMovementY;\n          }\n        } else {\n          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {\n            var touch = event.touch;\n            if (touch === undefined) {\n              return; // the \"touch\" property is only defined in SDL\n  \n            }\n            var coords = Browser.calculateMouseCoords(touch.pageX, touch.pageY);\n  \n            if (event.type === 'touchstart') {\n              Browser.lastTouches[touch.identifier] = coords;\n              Browser.touches[touch.identifier] = coords;\n            } else if (event.type === 'touchend' || event.type === 'touchmove') {\n              var last = Browser.touches[touch.identifier];\n              last ||= coords;\n              Browser.lastTouches[touch.identifier] = last;\n              Browser.touches[touch.identifier] = coords;\n            }\n            return;\n          }\n  \n          Browser.setMouseCoords(event.pageX, event.pageY);\n        }\n      },\n  resizeListeners:[],\n  updateResizeListeners() {\n        var canvas = Module['canvas'];\n        Browser.resizeListeners.forEach((listener) => listener(canvas.width, canvas.height));\n      },\n  setCanvasSize(width, height, noUpdates) {\n        var canvas = Module['canvas'];\n        Browser.updateCanvasDimensions(canvas, width, height);\n        if (!noUpdates) Browser.updateResizeListeners();\n      },\n  windowedWidth:0,\n  windowedHeight:0,\n  setFullscreenCanvasSize() {\n        // check if SDL is available\n        if (typeof SDL != \"undefined\") {\n          var flags = HEAPU32[((SDL.screen)>>2)];\n          flags = flags | 0x00800000; // set SDL_FULLSCREEN flag\n          HEAP32[((SDL.screen)>>2)] = flags;\n        }\n        Browser.updateCanvasDimensions(Module['canvas']);\n        Browser.updateResizeListeners();\n      },\n  setWindowedCanvasSize() {\n        // check if SDL is available\n        if (typeof SDL != \"undefined\") {\n          var flags = HEAPU32[((SDL.screen)>>2)];\n          flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag\n          HEAP32[((SDL.screen)>>2)] = flags;\n        }\n        Browser.updateCanvasDimensions(Module['canvas']);\n        Browser.updateResizeListeners();\n      },\n  updateCanvasDimensions(canvas, wNative, hNative) {\n        if (wNative && hNative) {\n          canvas.widthNative = wNative;\n          canvas.heightNative = hNative;\n        } else {\n          wNative = canvas.widthNative;\n          hNative = canvas.heightNative;\n        }\n        var w = wNative;\n        var h = hNative;\n        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {\n          if (w/h < Module['forcedAspectRatio']) {\n            w = Math.round(h * Module['forcedAspectRatio']);\n          } else {\n            h = Math.round(w / Module['forcedAspectRatio']);\n          }\n        }\n        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||\n             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\n             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {\n           var factor = Math.min(screen.width / w, screen.height / h);\n           w = Math.round(w * factor);\n           h = Math.round(h * factor);\n        }\n        if (Browser.resizeCanvas) {\n          if (canvas.width  != w) canvas.width  = w;\n          if (canvas.height != h) canvas.height = h;\n          if (typeof canvas.style != 'undefined') {\n            canvas.style.removeProperty( \"width\");\n            canvas.style.removeProperty(\"height\");\n          }\n        } else {\n          if (canvas.width  != wNative) canvas.width  = wNative;\n          if (canvas.height != hNative) canvas.height = hNative;\n          if (typeof canvas.style != 'undefined') {\n            if (w != wNative || h != hNative) {\n              canvas.style.setProperty( \"width\", w + \"px\", \"important\");\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\n            } else {\n              canvas.style.removeProperty( \"width\");\n              canvas.style.removeProperty(\"height\");\n            }\n          }\n        }\n      },\n  };\n  \n  var EGL = {\n  errorCode:12288,\n  defaultDisplayInitialized:false,\n  currentContext:0,\n  currentReadSurface:0,\n  currentDrawSurface:0,\n  contextAttributes:{\n  alpha:false,\n  depth:false,\n  stencil:false,\n  antialias:false,\n  },\n  stringCache:{\n  },\n  setErrorCode(code) {\n        EGL.errorCode = code;\n      },\n  chooseConfig(display, attribList, config, config_size, numConfigs) {\n        if (display != 62000) {\n          EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n          return 0;\n        }\n  \n        if (attribList) {\n          // read attribList if it is non-null\n          for (;;) {\n            var param = HEAP32[((attribList)>>2)];\n            if (param == 0x3021 /*EGL_ALPHA_SIZE*/) {\n              var alphaSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.alpha = (alphaSize > 0);\n            } else if (param == 0x3025 /*EGL_DEPTH_SIZE*/) {\n              var depthSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.depth = (depthSize > 0);\n            } else if (param == 0x3026 /*EGL_STENCIL_SIZE*/) {\n              var stencilSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.stencil = (stencilSize > 0);\n            } else if (param == 0x3031 /*EGL_SAMPLES*/) {\n              var samples = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.antialias = (samples > 0);\n            } else if (param == 0x3032 /*EGL_SAMPLE_BUFFERS*/) {\n              var samples = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.antialias = (samples == 1);\n            } else if (param == 0x3100 /*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/) {\n              var requestedPriority = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.lowLatency = (requestedPriority != 0x3103 /*EGL_CONTEXT_PRIORITY_LOW_IMG*/);\n            } else if (param == 0x3038 /*EGL_NONE*/) {\n                break;\n            }\n            attribList += 8;\n          }\n        }\n  \n        if ((!config || !config_size) && !numConfigs) {\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n          return 0;\n        }\n        if (numConfigs) {\n          HEAP32[((numConfigs)>>2)] = 1; // Total number of supported configs: 1.\n        }\n        if (config && config_size > 0) {\n          HEAPU32[((config)>>2)] = 62002;\n        }\n  \n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1;\n      },\n  };\n  var _eglBindAPI = (api) => {\n      if (api == 0x30A0 /* EGL_OPENGL_ES_API */) {\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1;\n      }\n      // if (api == 0x30A1 /* EGL_OPENVG_API */ || api == 0x30A2 /* EGL_OPENGL_API */) {\n      EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n      return 0;\n    };\n\n  var _eglChooseConfig = (display, attrib_list, configs, config_size, numConfigs) => {\n      return EGL.chooseConfig(display, attrib_list, configs, config_size, numConfigs);\n    };\n\n  var webgl_enable_ANGLE_instanced_arrays = (ctx) => {\n      // Extension available in WebGL 1 from Firefox 26 and Google Chrome 30 onwards. Core feature in WebGL 2.\n      var ext = ctx.getExtension('ANGLE_instanced_arrays');\n      if (ext) {\n        ctx['vertexAttribDivisor'] = (index, divisor) => ext['vertexAttribDivisorANGLE'](index, divisor);\n        ctx['drawArraysInstanced'] = (mode, first, count, primcount) => ext['drawArraysInstancedANGLE'](mode, first, count, primcount);\n        ctx['drawElementsInstanced'] = (mode, count, type, indices, primcount) => ext['drawElementsInstancedANGLE'](mode, count, type, indices, primcount);\n        return 1;\n      }\n    };\n  \n  var webgl_enable_OES_vertex_array_object = (ctx) => {\n      // Extension available in WebGL 1 from Firefox 25 and WebKit 536.28/desktop Safari 6.0.3 onwards. Core feature in WebGL 2.\n      var ext = ctx.getExtension('OES_vertex_array_object');\n      if (ext) {\n        ctx['createVertexArray'] = () => ext['createVertexArrayOES']();\n        ctx['deleteVertexArray'] = (vao) => ext['deleteVertexArrayOES'](vao);\n        ctx['bindVertexArray'] = (vao) => ext['bindVertexArrayOES'](vao);\n        ctx['isVertexArray'] = (vao) => ext['isVertexArrayOES'](vao);\n        return 1;\n      }\n    };\n  \n  var webgl_enable_WEBGL_draw_buffers = (ctx) => {\n      // Extension available in WebGL 1 from Firefox 28 onwards. Core feature in WebGL 2.\n      var ext = ctx.getExtension('WEBGL_draw_buffers');\n      if (ext) {\n        ctx['drawBuffers'] = (n, bufs) => ext['drawBuffersWEBGL'](n, bufs);\n        return 1;\n      }\n    };\n  \n  var webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance = (ctx) =>\n      // Closure is expected to be allowed to minify the '.dibvbi' property, so not accessing it quoted.\n      !!(ctx.dibvbi = ctx.getExtension('WEBGL_draw_instanced_base_vertex_base_instance'));\n  \n  var webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance = (ctx) => {\n      // Closure is expected to be allowed to minify the '.mdibvbi' property, so not accessing it quoted.\n      return !!(ctx.mdibvbi = ctx.getExtension('WEBGL_multi_draw_instanced_base_vertex_base_instance'));\n    };\n  \n  var webgl_enable_WEBGL_multi_draw = (ctx) => {\n      // Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.\n      return !!(ctx.multiDrawWebgl = ctx.getExtension('WEBGL_multi_draw'));\n    };\n  \n  \n  var GL = {\n  counter:1,\n  buffers:[],\n  programs:[],\n  framebuffers:[],\n  renderbuffers:[],\n  textures:[],\n  shaders:[],\n  vaos:[],\n  contexts:[],\n  offscreenCanvases:{\n  },\n  queries:[],\n  samplers:[],\n  transformFeedbacks:[],\n  syncs:[],\n  byteSizeByTypeRoot:5120,\n  byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],\n  stringCache:{\n  },\n  stringiCache:{\n  },\n  unpackAlignment:4,\n  recordError:function recordError(errorCode) {\n        if (!GL.lastError) {\n          GL.lastError = errorCode;\n        }\n      },\n  getNewId:(table) => {\n        var ret = GL.counter++;\n        for (var i = table.length; i < ret; i++) {\n          table[i] = null;\n        }\n        return ret;\n      },\n  MAX_TEMP_BUFFER_SIZE:16777216,\n  numTempVertexBuffersPerSize:64,\n  log2ceilLookup:(i) => 32 - Math.clz32(i === 0 ? 0 : i - 1),\n  generateTempBuffers:(quads, context) => {\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\n        context.tempVertexBufferCounters1 = [];\n        context.tempVertexBufferCounters2 = [];\n        context.tempVertexBufferCounters1.length = context.tempVertexBufferCounters2.length = largestIndex+1;\n        context.tempVertexBuffers1 = [];\n        context.tempVertexBuffers2 = [];\n        context.tempVertexBuffers1.length = context.tempVertexBuffers2.length = largestIndex+1;\n        context.tempIndexBuffers = [];\n        context.tempIndexBuffers.length = largestIndex+1;\n        for (var i = 0; i <= largestIndex; ++i) {\n          context.tempIndexBuffers[i] = null; // Created on-demand\n          context.tempVertexBufferCounters1[i] = context.tempVertexBufferCounters2[i] = 0;\n          var ringbufferLength = GL.numTempVertexBuffersPerSize;\n          context.tempVertexBuffers1[i] = [];\n          context.tempVertexBuffers2[i] = [];\n          var ringbuffer1 = context.tempVertexBuffers1[i];\n          var ringbuffer2 = context.tempVertexBuffers2[i];\n          ringbuffer1.length = ringbuffer2.length = ringbufferLength;\n          for (var j = 0; j < ringbufferLength; ++j) {\n            ringbuffer1[j] = ringbuffer2[j] = null; // Created on-demand\n          }\n        }\n  \n        if (quads) {\n          // GL_QUAD indexes can be precalculated\n          context.tempQuadIndexBuffer = GLctx.createBuffer();\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, context.tempQuadIndexBuffer);\n          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;\n          var quadIndexes = new Uint16Array(numIndexes);\n          var i = 0, v = 0;\n          while (1) {\n            quadIndexes[i++] = v;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v+1;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v+2;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v+2;\n            if (i >= numIndexes) break;\n            quadIndexes[i++] = v+3;\n            if (i >= numIndexes) break;\n            v += 4;\n          }\n          context.GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, quadIndexes, 0x88E4 /*GL_STATIC_DRAW*/);\n          context.GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\n        }\n      },\n  getTempVertexBuffer:function getTempVertexBuffer(sizeBytes) {\n        var idx = GL.log2ceilLookup(sizeBytes);\n        var ringbuffer = GL.currentContext.tempVertexBuffers1[idx];\n        var nextFreeBufferIndex = GL.currentContext.tempVertexBufferCounters1[idx];\n        GL.currentContext.tempVertexBufferCounters1[idx] = (GL.currentContext.tempVertexBufferCounters1[idx]+1) & (GL.numTempVertexBuffersPerSize-1);\n        var vbo = ringbuffer[nextFreeBufferIndex];\n        if (vbo) {\n          return vbo;\n        }\n        var prevVBO = GLctx.getParameter(0x8894 /*GL_ARRAY_BUFFER_BINDING*/);\n        ringbuffer[nextFreeBufferIndex] = GLctx.createBuffer();\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, ringbuffer[nextFreeBufferIndex]);\n        GLctx.bufferData(0x8892 /*GL_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\n        GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, prevVBO);\n        return ringbuffer[nextFreeBufferIndex];\n      },\n  getTempIndexBuffer:function getTempIndexBuffer(sizeBytes) {\n        var idx = GL.log2ceilLookup(sizeBytes);\n        var ibo = GL.currentContext.tempIndexBuffers[idx];\n        if (ibo) {\n          return ibo;\n        }\n        var prevIBO = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\n        GL.currentContext.tempIndexBuffers[idx] = GLctx.createBuffer();\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, GL.currentContext.tempIndexBuffers[idx]);\n        GLctx.bufferData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, 1 << idx, 0x88E8 /*GL_DYNAMIC_DRAW*/);\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, prevIBO);\n        return GL.currentContext.tempIndexBuffers[idx];\n      },\n  newRenderingFrameStarted:function newRenderingFrameStarted() {\n        if (!GL.currentContext) {\n          return;\n        }\n        var vb = GL.currentContext.tempVertexBuffers1;\n        GL.currentContext.tempVertexBuffers1 = GL.currentContext.tempVertexBuffers2;\n        GL.currentContext.tempVertexBuffers2 = vb;\n        vb = GL.currentContext.tempVertexBufferCounters1;\n        GL.currentContext.tempVertexBufferCounters1 = GL.currentContext.tempVertexBufferCounters2;\n        GL.currentContext.tempVertexBufferCounters2 = vb;\n        var largestIndex = GL.log2ceilLookup(GL.MAX_TEMP_BUFFER_SIZE);\n        for (var i = 0; i <= largestIndex; ++i) {\n          GL.currentContext.tempVertexBufferCounters1[i] = 0;\n        }\n      },\n  getSource:(shader, count, string, length) => {\n        var source = '';\n        for (var i = 0; i < count; ++i) {\n          var len = length ? HEAP32[(((length)+(i*4))>>2)] : -1;\n          source += UTF8ToString(HEAP32[(((string)+(i*4))>>2)], len < 0 ? undefined : len);\n        }\n        return source;\n      },\n  calcBufLength:function calcBufLength(size, type, stride, count) {\n        if (stride > 0) {\n          return count * stride;  // XXXvlad this is not exactly correct I don't think\n        }\n        var typeSize = GL.byteSizeByType[type - GL.byteSizeByTypeRoot];\n        return size * typeSize * count;\n      },\n  usedTempBuffers:[],\n  preDrawHandleClientVertexAttribBindings:function preDrawHandleClientVertexAttribBindings(count) {\n        GL.resetBufferBinding = false;\n  \n        // TODO: initial pass to detect ranges we need to upload, might not need\n        // an upload per attrib\n        for (var i = 0; i < GL.currentContext.maxVertexAttribs; ++i) {\n          var cb = GL.currentContext.clientBuffers[i];\n          if (!cb.clientside || !cb.enabled) continue;\n  \n          GL.resetBufferBinding = true;\n  \n          var size = GL.calcBufLength(cb.size, cb.type, cb.stride, count);\n          var buf = GL.getTempVertexBuffer(size);\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, buf);\n          GLctx.bufferSubData(0x8892 /*GL_ARRAY_BUFFER*/,\n                                   0,\n                                   HEAPU8.subarray(cb.ptr, cb.ptr + size));\n          cb.vertexAttribPointerAdaptor.call(GLctx, i, cb.size, cb.type, cb.normalized, cb.stride, 0);\n        }\n      },\n  postDrawHandleClientVertexAttribBindings:function postDrawHandleClientVertexAttribBindings() {\n        if (GL.resetBufferBinding) {\n          GLctx.bindBuffer(0x8892 /*GL_ARRAY_BUFFER*/, GL.buffers[GLctx.currentArrayBufferBinding]);\n        }\n      },\n  createContext:(/** @type {HTMLCanvasElement} */ canvas, webGLContextAttributes) => {\n  \n        // BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL\n        // context on a canvas, calling .getContext() will always return that\n        // context independent of which 'webgl' or 'webgl2'\n        // context version was passed. See:\n        //   https://bugs.webkit.org/show_bug.cgi?id=222758\n        // and:\n        //   https://github.com/emscripten-core/emscripten/issues/13295.\n        // TODO: Once the bug is fixed and shipped in Safari, adjust the Safari\n        // version field in above check.\n        if (!canvas.getContextSafariWebGL2Fixed) {\n          canvas.getContextSafariWebGL2Fixed = canvas.getContext;\n          /** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */\n          function fixedGetContext(ver, attrs) {\n            var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\n            return ((ver == 'webgl') == (gl instanceof WebGLRenderingContext)) ? gl : null;\n          }\n          canvas.getContext = fixedGetContext;\n        }\n  \n        var ctx =\n          (webGLContextAttributes.majorVersion > 1)\n          ?\n            canvas.getContext(\"webgl2\", webGLContextAttributes)\n          :\n          (canvas.getContext(\"webgl\", webGLContextAttributes)\n            // https://caniuse.com/#feat=webgl\n            );\n  \n        if (!ctx) return 0;\n  \n        var handle = GL.registerContext(ctx, webGLContextAttributes);\n  \n        // If end user enables *glGetProcAddress() functionality, then we must filter out\n        // all future WebGL extensions from being passed to the user, and only restrict to advertising\n        // extensions that the *glGetProcAddress() function knows to handle.\n        var _allSupportedExtensions = ctx.getSupportedExtensions;\n        var supportedExtensionsForGetProcAddress = [\n          // WebGL 1 extensions\n          'ANGLE_instanced_arrays',\n          'EXT_blend_minmax',\n          'EXT_disjoint_timer_query',\n          'EXT_frag_depth',\n          'EXT_shader_texture_lod',\n          'EXT_sRGB',\n          'OES_element_index_uint',\n          'OES_fbo_render_mipmap',\n          'OES_standard_derivatives',\n          'OES_texture_float',\n          'OES_texture_half_float',\n          'OES_texture_half_float_linear',\n          'OES_vertex_array_object',\n          'WEBGL_color_buffer_float',\n          'WEBGL_depth_texture',\n          'WEBGL_draw_buffers',\n          // WebGL 2 extensions\n          'EXT_color_buffer_float',\n          'EXT_disjoint_timer_query_webgl2',\n          'EXT_texture_norm16',\n          'WEBGL_clip_cull_distance',\n          // WebGL 1 and WebGL 2 extensions\n          'EXT_color_buffer_half_float',\n          'EXT_float_blend',\n          'EXT_texture_compression_bptc',\n          'EXT_texture_compression_rgtc',\n          'EXT_texture_filter_anisotropic',\n          'KHR_parallel_shader_compile',\n          'OES_texture_float_linear',\n          'WEBGL_compressed_texture_s3tc',\n          'WEBGL_compressed_texture_s3tc_srgb',\n          'WEBGL_debug_renderer_info',\n          'WEBGL_debug_shaders',\n          'WEBGL_lose_context',\n          'WEBGL_multi_draw',\n        ];\n        ctx.getSupportedExtensions = function() {\n          return (_allSupportedExtensions.apply(this) || []).filter(ext => supportedExtensionsForGetProcAddress.includes(ext));\n        }\n  \n        return handle;\n      },\n  registerContext:(ctx, webGLContextAttributes) => {\n        // without pthreads a context is just an integer ID\n        var handle = GL.getNewId(GL.contexts);\n  \n        var context = {\n          handle,\n          attributes: webGLContextAttributes,\n          version: webGLContextAttributes.majorVersion,\n          GLctx: ctx\n        };\n  \n        // Store the created context object so that we can access the context\n        // given a canvas without having to pass the parameters again.\n        if (ctx.canvas) ctx.canvas.GLctxObject = context;\n        GL.contexts[handle] = context;\n        if (typeof webGLContextAttributes.enableExtensionsByDefault == 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {\n          GL.initExtensions(context);\n        }\n  \n        context.maxVertexAttribs = context.GLctx.getParameter(0x8869 /*GL_MAX_VERTEX_ATTRIBS*/);\n        context.clientBuffers = [];\n        for (var i = 0; i < context.maxVertexAttribs; i++) {\n          context.clientBuffers[i] = {\n            enabled: false,\n            clientside: false,\n            size: 0,\n            type: 0,\n            normalized: 0,\n            stride: 0,\n            ptr: 0,\n            vertexAttribPointerAdaptor: null,\n          };\n        }\n  \n        GL.generateTempBuffers(false, context);\n  \n        return handle;\n      },\n  makeContextCurrent:(contextHandle) => {\n  \n        // Active Emscripten GL layer context object.\n        GL.currentContext = GL.contexts[contextHandle];\n        // Active WebGL context object.\n        Module.ctx = GLctx = GL.currentContext?.GLctx;\n        return !(contextHandle && !GLctx);\n      },\n  getContext:(contextHandle) => {\n        return GL.contexts[contextHandle];\n      },\n  deleteContext:(contextHandle) => {\n        if (GL.currentContext === GL.contexts[contextHandle]) {\n          GL.currentContext = null;\n        }\n        if (typeof JSEvents == 'object') {\n          // Release all JS event handlers on the DOM element that the GL context is\n          // associated with since the context is now deleted.\n          JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);\n        }\n        // Make sure the canvas object no longer refers to the context object so\n        // there are no GC surprises.\n        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) {\n          GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined;\n        }\n        GL.contexts[contextHandle] = null;\n      },\n  initExtensions:(context) => {\n        // If this function is called without a specific context object, init the\n        // extensions of the currently active context.\n        context ||= GL.currentContext;\n  \n        if (context.initExtensionsDone) return;\n        context.initExtensionsDone = true;\n  \n        var GLctx = context.GLctx;\n  \n        // Detect the presence of a few extensions manually, ction GL interop\n        // layer itself will need to know if they exist.\n  \n        // Extensions that are only available in WebGL 1 (the calls will be no-ops\n        // if called on a WebGL 2 context active)\n        webgl_enable_ANGLE_instanced_arrays(GLctx);\n        webgl_enable_OES_vertex_array_object(GLctx);\n        webgl_enable_WEBGL_draw_buffers(GLctx);\n        // Extensions that are available from WebGL >= 2 (no-op if called on a WebGL 1 context active)\n        webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance(GLctx);\n        webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance(GLctx);\n  \n        // On WebGL 2, EXT_disjoint_timer_query is replaced with an alternative\n        // that's based on core APIs, and exposes only the queryCounterEXT()\n        // entrypoint.\n        if (context.version >= 2) {\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query_webgl2\");\n        }\n  \n        // However, Firefox exposes the WebGL 1 version on WebGL 2 as well and\n        // thus we look for the WebGL 1 version again if the WebGL 2 version\n        // isn't present. https://bugzilla.mozilla.org/show_bug.cgi?id=1328882\n        if (context.version < 2 || !GLctx.disjointTimerQueryExt)\n        {\n          GLctx.disjointTimerQueryExt = GLctx.getExtension(\"EXT_disjoint_timer_query\");\n        }\n  \n        webgl_enable_WEBGL_multi_draw(GLctx);\n  \n        // .getSupportedExtensions() can return null if context is lost, so coerce\n        // to empty array.\n        var exts = GLctx.getSupportedExtensions() || [];\n        exts.forEach((ext) => {\n          // WEBGL_lose_context, WEBGL_debug_renderer_info and WEBGL_debug_shaders\n          // are not enabled by default.\n          if (!ext.includes('lose_context') && !ext.includes('debug')) {\n            // Call .getExtension() to enable that extension permanently.\n            GLctx.getExtension(ext);\n          }\n        });\n      },\n  getExtensions() {\n        // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\n        var exts = GLctx.getSupportedExtensions() || [];\n        exts = exts.concat(exts.map((e) => \"GL_\" + e));\n        return exts;\n      },\n  };\n  \n  var _eglCreateContext = (display, config, hmm, contextAttribs) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n  \n      // EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.\n      // So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.\n      var glesContextVersion = 1;\n      for (;;) {\n        var param = HEAP32[((contextAttribs)>>2)];\n        if (param == 0x3098 /*EGL_CONTEXT_CLIENT_VERSION*/) {\n          glesContextVersion = HEAP32[(((contextAttribs)+(4))>>2)];\n        } else if (param == 0x3038 /*EGL_NONE*/) {\n          break;\n        } else {\n          /* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */\n          EGL.setErrorCode(0x3004 /*EGL_BAD_ATTRIBUTE*/);\n          return 0;\n        }\n        contextAttribs += 8;\n      }\n      if (glesContextVersion < 2 || glesContextVersion > 3) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0; /* EGL_NO_CONTEXT */\n      }\n  \n      EGL.contextAttributes.majorVersion = glesContextVersion - 1; // WebGL 1 is GLES 2, WebGL2 is GLES3\n      EGL.contextAttributes.minorVersion = 0;\n  \n      EGL.context = GL.createContext(Module['canvas'], EGL.contextAttributes);\n  \n      if (EGL.context != 0) {\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n  \n        // Run callbacks so that GL emulation works\n        GL.makeContextCurrent(EGL.context);\n        Module.useWebGL = true;\n        Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });\n  \n        // Note: This function only creates a context, but it shall not make it active.\n        GL.makeContextCurrent(null);\n        return 62004;\n      } else {\n        EGL.setErrorCode(0x3009 /* EGL_BAD_MATCH */); // By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.\n        return 0; /* EGL_NO_CONTEXT */\n      }\n    };\n\n  var _eglCreateWindowSurface = (display, config, win, attrib_list) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (config != 62002) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0;\n      }\n      // TODO: Examine attrib_list! Parameters that can be present there are:\n      // - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)\n      // - EGL_VG_COLORSPACE (can't be set)\n      // - EGL_VG_ALPHA_FORMAT (can't be set)\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 62006; /* Magic ID for Emscripten 'default surface' */\n    };\n\n  \n  var _eglDestroyContext = (display, context) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (context != 62004) {\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\n        return 0;\n      }\n  \n      GL.deleteContext(EGL.context);\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      if (EGL.currentContext == context) {\n        EGL.currentContext = 0;\n      }\n      return 1 /* EGL_TRUE */;\n    };\n\n  var _eglDestroySurface = (display, surface) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (surface != 62006 /* Magic ID for the only EGLSurface supported by Emscripten */) {\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\n        return 1;\n      }\n      if (EGL.currentReadSurface == surface) {\n        EGL.currentReadSurface = 0;\n      }\n      if (EGL.currentDrawSurface == surface) {\n        EGL.currentDrawSurface = 0;\n      }\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1; /* Magic ID for Emscripten 'default surface' */\n    };\n\n  var _eglGetConfigAttrib = (display, config, attribute, value) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (config != 62002) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0;\n      }\n      if (!value) {\n        EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n        return 0;\n      }\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      switch (attribute) {\n      case 0x3020: // EGL_BUFFER_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 32 : 24;\n        return 1;\n      case 0x3021: // EGL_ALPHA_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 8 : 0;\n        return 1;\n      case 0x3022: // EGL_BLUE_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3023: // EGL_GREEN_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3024: // EGL_RED_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3025: // EGL_DEPTH_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.depth ? 24 : 0;\n        return 1;\n      case 0x3026: // EGL_STENCIL_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.stencil ? 8 : 0;\n        return 1;\n      case 0x3027: // EGL_CONFIG_CAVEAT\n        // We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3028: // EGL_CONFIG_ID\n        HEAP32[((value)>>2)] = 62002;\n        return 1;\n      case 0x3029: // EGL_LEVEL\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302A: // EGL_MAX_PBUFFER_HEIGHT\n        HEAP32[((value)>>2)] = 4096;\n        return 1;\n      case 0x302B: // EGL_MAX_PBUFFER_PIXELS\n        HEAP32[((value)>>2)] = 16777216;\n        return 1;\n      case 0x302C: // EGL_MAX_PBUFFER_WIDTH\n        HEAP32[((value)>>2)] = 4096;\n        return 1;\n      case 0x302D: // EGL_NATIVE_RENDERABLE\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302E: // EGL_NATIVE_VISUAL_ID\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302F: // EGL_NATIVE_VISUAL_TYPE\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3031: // EGL_SAMPLES\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 4 : 0;\n        return 1;\n      case 0x3032: // EGL_SAMPLE_BUFFERS\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 1 : 0;\n        return 1;\n      case 0x3033: // EGL_SURFACE_TYPE\n        HEAP32[((value)>>2)] = 0x4;\n        return 1;\n      case 0x3034: // EGL_TRANSPARENT_TYPE\n        // If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3035: // EGL_TRANSPARENT_BLUE_VALUE\n      case 0x3036: // EGL_TRANSPARENT_GREEN_VALUE\n      case 0x3037: // EGL_TRANSPARENT_RED_VALUE\n        // \"If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined.\"\n        HEAP32[((value)>>2)] = -1;\n        return 1;\n      case 0x3039: // EGL_BIND_TO_TEXTURE_RGB\n      case 0x303A: // EGL_BIND_TO_TEXTURE_RGBA\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303B: // EGL_MIN_SWAP_INTERVAL\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303C: // EGL_MAX_SWAP_INTERVAL\n        HEAP32[((value)>>2)] = 1;\n        return 1;\n      case 0x303D: // EGL_LUMINANCE_SIZE\n      case 0x303E: // EGL_ALPHA_MASK_SIZE\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303F: // EGL_COLOR_BUFFER_TYPE\n        // EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.\n        HEAP32[((value)>>2)] = 0x308E;\n        return 1;\n      case 0x3040: // EGL_RENDERABLE_TYPE\n        // A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.\n        HEAP32[((value)>>2)] = 0x4;\n        return 1;\n      case 0x3042: // EGL_CONFORMANT\n        // \"EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API.\"\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      default:\n        EGL.setErrorCode(0x3004 /* EGL_BAD_ATTRIBUTE */);\n        return 0;\n      }\n    };\n\n  var _eglGetDisplay = (nativeDisplayType) => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      // Emscripten EGL implementation \"emulates\" X11, and eglGetDisplay is\n      // expected to accept/receive a pointer to an X11 Display object (or\n      // EGL_DEFAULT_DISPLAY).\n      if (nativeDisplayType != 0 /* EGL_DEFAULT_DISPLAY */ && nativeDisplayType != 1 /* see library_xlib.js */) {\n        return 0; // EGL_NO_DISPLAY\n      }\n      return 62000;\n    };\n\n  var _eglGetError = () => EGL.errorCode;\n\n  var _eglInitialize = (display, majorVersion, minorVersion) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (majorVersion) {\n        HEAP32[((majorVersion)>>2)] = 1; // Advertise EGL Major version: '1'\n      }\n      if (minorVersion) {\n        HEAP32[((minorVersion)>>2)] = 4; // Advertise EGL Minor version: '4'\n      }\n      EGL.defaultDisplayInitialized = true;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  \n  var _eglMakeCurrent = (display, draw, read, context) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0 /* EGL_FALSE */;\n      }\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\n      if (context != 0 && context != 62004) {\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\n        return 0;\n      }\n      if ((read != 0 && read != 62006) || (draw != 0 && draw != 62006 /* Magic ID for Emscripten 'default surface' */)) {\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\n        return 0;\n      }\n  \n      GL.makeContextCurrent(context ? EGL.context : null);\n  \n      EGL.currentContext = context;\n      EGL.currentDrawSurface = draw;\n      EGL.currentReadSurface = read;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1 /* EGL_TRUE */;\n    };\n\n  \n  var _eglQueryString = (display, name) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      if (EGL.stringCache[name]) return EGL.stringCache[name];\n      var ret;\n      switch (name) {\n        case 0x3053 /* EGL_VENDOR */: ret = stringToNewUTF8(\"Emscripten\"); break;\n        case 0x3054 /* EGL_VERSION */: ret = stringToNewUTF8(\"1.4 Emscripten EGL\"); break;\n        case 0x3055 /* EGL_EXTENSIONS */:  ret = stringToNewUTF8(\"\"); break; // Currently not supporting any EGL extensions.\n        case 0x308D /* EGL_CLIENT_APIS */: ret = stringToNewUTF8(\"OpenGL_ES\"); break;\n        default:\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n          return 0;\n      }\n      EGL.stringCache[name] = ret;\n      return ret;\n    };\n\n  var _eglSwapBuffers = (dpy, surface) => {\n  \n      if (!EGL.defaultDisplayInitialized) {\n        EGL.setErrorCode(0x3001 /* EGL_NOT_INITIALIZED */);\n      } else if (!Module.ctx) {\n        EGL.setErrorCode(0x3002 /* EGL_BAD_ACCESS */);\n      } else if (Module.ctx.isContextLost()) {\n        EGL.setErrorCode(0x300E /* EGL_CONTEXT_LOST */);\n      } else {\n        // According to documentation this does an implicit flush.\n        // Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871\n        // the flush was removed since this _may_ result in slowing code down.\n        //_glFlush();\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1 /* EGL_TRUE */;\n      }\n      return 0 /* EGL_FALSE */;\n    };\n\n  \n  var _eglSwapInterval = (display, interval) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (interval == 0) _emscripten_set_main_loop_timing(0, 0);\n      else _emscripten_set_main_loop_timing(1, interval);\n  \n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  var _eglTerminate = (display) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      EGL.currentContext = 0;\n      EGL.currentReadSurface = 0;\n      EGL.currentDrawSurface = 0;\n      EGL.defaultDisplayInitialized = false;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  \n  /** @suppress {duplicate } */\n  var _eglWaitClient = () => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n  var _eglWaitGL = _eglWaitClient;\n\n  var _eglWaitNative = (nativeEngineId) => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  var readEmAsmArgsArray = [];\n  var readEmAsmArgs = (sigPtr, buf) => {\n      readEmAsmArgsArray.length = 0;\n      var ch;\n      // Most arguments are i32s, so shift the buffer pointer so it is a plain\n      // index into HEAP32.\n      while (ch = HEAPU8[sigPtr++]) {\n        // Floats are always passed as doubles, so all types except for 'i'\n        // are 8 bytes and require alignment.\n        var wide = (ch != 105);\n        wide &= (ch != 112);\n        buf += wide && (buf % 8) ? 4 : 0;\n        readEmAsmArgsArray.push(\n          // Special case for pointers under wasm64 or CAN_ADDRESS_2GB mode.\n          ch == 112 ? HEAPU32[((buf)>>2)] :\n          ch == 105 ?\n            HEAP32[((buf)>>2)] :\n            HEAPF64[((buf)>>3)]\n        );\n        buf += wide ? 8 : 4;\n      }\n      return readEmAsmArgsArray;\n    };\n  var runEmAsmFunction = (code, sigPtr, argbuf) => {\n      var args = readEmAsmArgs(sigPtr, argbuf);\n      return ASM_CONSTS[code].apply(null, args);\n    };\n  var _emscripten_asm_const_int = (code, sigPtr, argbuf) => {\n      return runEmAsmFunction(code, sigPtr, argbuf);\n    };\n\n  var runMainThreadEmAsm = (code, sigPtr, argbuf, sync) => {\n      var args = readEmAsmArgs(sigPtr, argbuf);\n      return ASM_CONSTS[code].apply(null, args);\n    };\n  var _emscripten_asm_const_int_sync_on_main_thread = (code, sigPtr, argbuf) => {\n      return runMainThreadEmAsm(code, sigPtr, argbuf, 1);\n    };\n\n  var _emscripten_date_now = () => Date.now();\n\n  var withStackSave = (f) => {\n      var stack = stackSave();\n      var ret = f();\n      stackRestore(stack);\n      return ret;\n    };\n  var JSEvents = {\n  inEventHandler:0,\n  removeAllEventListeners() {\n        for (var i = JSEvents.eventHandlers.length-1; i >= 0; --i) {\n          JSEvents._removeHandler(i);\n        }\n        JSEvents.eventHandlers = [];\n        JSEvents.deferredCalls = [];\n      },\n  registerRemoveEventListeners() {\n        if (!JSEvents.removeEventListenersRegistered) {\n          __ATEXIT__.push(JSEvents.removeAllEventListeners);\n          JSEvents.removeEventListenersRegistered = true;\n        }\n      },\n  deferredCalls:[],\n  deferCall(targetFunction, precedence, argsList) {\n        function arraysHaveEqualContent(arrA, arrB) {\n          if (arrA.length != arrB.length) return false;\n  \n          for (var i in arrA) {\n            if (arrA[i] != arrB[i]) return false;\n          }\n          return true;\n        }\n        // Test if the given call was already queued, and if so, don't add it again.\n        for (var i in JSEvents.deferredCalls) {\n          var call = JSEvents.deferredCalls[i];\n          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\n            return;\n          }\n        }\n        JSEvents.deferredCalls.push({\n          targetFunction,\n          precedence,\n          argsList\n        });\n  \n        JSEvents.deferredCalls.sort((x,y) => x.precedence < y.precedence);\n      },\n  removeDeferredCalls(targetFunction) {\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n          if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\n            JSEvents.deferredCalls.splice(i, 1);\n            --i;\n          }\n        }\n      },\n  canPerformEventHandlerRequests() {\n        if (navigator.userActivation) {\n          // Verify against transient activation status from UserActivation API\n          // whether it is possible to perform a request here without needing to defer. See\n          // https://developer.mozilla.org/en-US/docs/Web/Security/User_activation#transient_activation\n          // and https://caniuse.com/mdn-api_useractivation\n          // At the time of writing, Firefox does not support this API: https://bugzilla.mozilla.org/show_bug.cgi?id=1791079\n          return navigator.userActivation.isActive;\n        }\n  \n        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\n      },\n  runDeferredCalls() {\n        if (!JSEvents.canPerformEventHandlerRequests()) {\n          return;\n        }\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n          var call = JSEvents.deferredCalls[i];\n          JSEvents.deferredCalls.splice(i, 1);\n          --i;\n          call.targetFunction.apply(null, call.argsList);\n        }\n      },\n  eventHandlers:[],\n  removeAllHandlersOnTarget:(target, eventTypeString) => {\n        for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n          if (JSEvents.eventHandlers[i].target == target &&\n            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\n             JSEvents._removeHandler(i--);\n           }\n        }\n      },\n  _removeHandler(i) {\n        var h = JSEvents.eventHandlers[i];\n        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\n        JSEvents.eventHandlers.splice(i, 1);\n      },\n  registerOrRemoveHandler(eventHandler) {\n        if (!eventHandler.target) {\n          return -4;\n        }\n        var jsEventHandler = function jsEventHandler(event) {\n          // Increment nesting count for the event handler.\n          ++JSEvents.inEventHandler;\n          JSEvents.currentEventHandler = eventHandler;\n          // Process any old deferred calls the user has placed.\n          JSEvents.runDeferredCalls();\n          // Process the actual event, calls back to user C code handler.\n          eventHandler.handlerFunc(event);\n          // Process any new deferred calls that were placed right now from this event handler.\n          JSEvents.runDeferredCalls();\n          // Out of event handler - restore nesting count.\n          --JSEvents.inEventHandler;\n        };\n  \n        if (eventHandler.callbackfunc) {\n          eventHandler.eventListenerFunc = jsEventHandler;\n          eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\n          JSEvents.eventHandlers.push(eventHandler);\n          JSEvents.registerRemoveEventListeners();\n        } else {\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n            if (JSEvents.eventHandlers[i].target == eventHandler.target\n             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\n               JSEvents._removeHandler(i--);\n             }\n          }\n        }\n        return 0;\n      },\n  getNodeNameForTarget(target) {\n        if (!target) return '';\n        if (target == window) return '#window';\n        if (target == screen) return '#screen';\n        return target?.nodeName || '';\n      },\n  fullscreenEnabled() {\n        return document.fullscreenEnabled\n        // Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.\n        // TODO: If Safari at some point ships with unprefixed version, update the version check above.\n        || document.webkitFullscreenEnabled\n         ;\n      },\n  };\n  \n  var setLetterbox = (element, topBottom, leftRight) => {\n      // Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.\n      element.style.paddingLeft = element.style.paddingRight = leftRight + 'px';\n      element.style.paddingTop = element.style.paddingBottom = topBottom + 'px';\n    };\n  \n  var hideEverythingExceptGivenElement = (onlyVisibleElement) => {\n      var child = onlyVisibleElement;\n      var parent = child.parentNode;\n      var hiddenElements = [];\n      while (child != document.body) {\n        var children = parent.children;\n        for (var i = 0; i < children.length; ++i) {\n          if (children[i] != child) {\n            hiddenElements.push({ node: children[i], displayState: children[i].style.display });\n            children[i].style.display = 'none';\n          }\n        }\n        child = parent;\n        parent = parent.parentNode;\n      }\n      return hiddenElements;\n    };\n  \n  var restoreOldWindowedStyle = null;\n  \n  \n  \n  var maybeCStringToJsString = (cString) => {\n      // \"cString > 2\" checks if the input is a number, and isn't of the special\n      // values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).\n      // In other words, if cString > 2 then it's a pointer to a valid place in\n      // memory, and points to a C string.\n      return cString > 2 ? UTF8ToString(cString) : cString;\n    };\n  \n  var specialHTMLTargets = [0, document, window];\n  var findEventTarget = (target) => {\n      target = maybeCStringToJsString(target);\n      var domElement = specialHTMLTargets[target] || document.querySelector(target);\n      return domElement;\n    };\n  var findCanvasEventTarget = (target) => findEventTarget(target);\n  var _emscripten_get_canvas_element_size = (target, width, height) => {\n      var canvas = findCanvasEventTarget(target);\n      if (!canvas) return -4;\n      HEAP32[((width)>>2)] = canvas.width;\n      HEAP32[((height)>>2)] = canvas.height;\n    };\n  \n  \n  \n  var stringToUTF8OnStack = (str) => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = stackAlloc(size);\n      stringToUTF8(str, ret, size);\n      return ret;\n    };\n  var getCanvasElementSize = (target) => withStackSave(() => {\n      var w = stackAlloc(8);\n      var h = w + 4;\n  \n      var targetInt = stringToUTF8OnStack(target.id);\n      var ret = _emscripten_get_canvas_element_size(targetInt, w, h);\n      var size = [HEAP32[((w)>>2)], HEAP32[((h)>>2)]];\n      return size;\n    });\n  \n  \n  var _emscripten_set_canvas_element_size = (target, width, height) => {\n      var canvas = findCanvasEventTarget(target);\n      if (!canvas) return -4;\n      canvas.width = width;\n      canvas.height = height;\n      return 0;\n    };\n  \n  \n  var setCanvasElementSize = (target, width, height) => {\n      if (!target.controlTransferredOffscreen) {\n        target.width = width;\n        target.height = height;\n      } else {\n        // This function is being called from high-level JavaScript code instead of asm.js/Wasm,\n        // and it needs to synchronously proxy over to another thread, so marshal the string onto the heap to do the call.\n        withStackSave(() => {\n          var targetInt = stringToUTF8OnStack(target.id);\n          _emscripten_set_canvas_element_size(targetInt, width, height);\n        });\n      }\n    };\n  var registerRestoreOldStyle = (canvas) => {\n      var canvasSize = getCanvasElementSize(canvas);\n      var oldWidth = canvasSize[0];\n      var oldHeight = canvasSize[1];\n      var oldCssWidth = canvas.style.width;\n      var oldCssHeight = canvas.style.height;\n      var oldBackgroundColor = canvas.style.backgroundColor; // Chrome reads color from here.\n      var oldDocumentBackgroundColor = document.body.style.backgroundColor; // IE11 reads color from here.\n      // Firefox always has black background color.\n      var oldPaddingLeft = canvas.style.paddingLeft; // Chrome, FF, Safari\n      var oldPaddingRight = canvas.style.paddingRight;\n      var oldPaddingTop = canvas.style.paddingTop;\n      var oldPaddingBottom = canvas.style.paddingBottom;\n      var oldMarginLeft = canvas.style.marginLeft; // IE11\n      var oldMarginRight = canvas.style.marginRight;\n      var oldMarginTop = canvas.style.marginTop;\n      var oldMarginBottom = canvas.style.marginBottom;\n      var oldDocumentBodyMargin = document.body.style.margin;\n      var oldDocumentOverflow = document.documentElement.style.overflow; // Chrome, Firefox\n      var oldDocumentScroll = document.body.scroll; // IE\n      var oldImageRendering = canvas.style.imageRendering;\n  \n      function restoreOldStyle() {\n        var fullscreenElement = document.fullscreenElement\n          || document.webkitFullscreenElement\n          ;\n        if (!fullscreenElement) {\n          document.removeEventListener('fullscreenchange', restoreOldStyle);\n  \n          // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n          // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n          document.removeEventListener('webkitfullscreenchange', restoreOldStyle);\n  \n          setCanvasElementSize(canvas, oldWidth, oldHeight);\n  \n          canvas.style.width = oldCssWidth;\n          canvas.style.height = oldCssHeight;\n          canvas.style.backgroundColor = oldBackgroundColor; // Chrome\n          // IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color\n          // before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user\n          // had explicitly set so subsequent fullscreen transitions would not set background color properly.\n          if (!oldDocumentBackgroundColor) document.body.style.backgroundColor = 'white';\n          document.body.style.backgroundColor = oldDocumentBackgroundColor; // IE11\n          canvas.style.paddingLeft = oldPaddingLeft; // Chrome, FF, Safari\n          canvas.style.paddingRight = oldPaddingRight;\n          canvas.style.paddingTop = oldPaddingTop;\n          canvas.style.paddingBottom = oldPaddingBottom;\n          canvas.style.marginLeft = oldMarginLeft; // IE11\n          canvas.style.marginRight = oldMarginRight;\n          canvas.style.marginTop = oldMarginTop;\n          canvas.style.marginBottom = oldMarginBottom;\n          document.body.style.margin = oldDocumentBodyMargin;\n          document.documentElement.style.overflow = oldDocumentOverflow; // Chrome, Firefox\n          document.body.scroll = oldDocumentScroll; // IE\n          canvas.style.imageRendering = oldImageRendering;\n          if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, oldWidth, oldHeight);\n  \n          if (currentFullscreenStrategy.canvasResizedCallback) {\n            ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\n          }\n        }\n      }\n      document.addEventListener('fullscreenchange', restoreOldStyle);\n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n      document.addEventListener('webkitfullscreenchange', restoreOldStyle);\n      return restoreOldStyle;\n    };\n  \n  var restoreHiddenElements = (hiddenElements) => {\n      for (var i = 0; i < hiddenElements.length; ++i) {\n        hiddenElements[i].node.style.display = hiddenElements[i].displayState;\n      }\n    };\n  \n  var currentFullscreenStrategy = {\n  };\n  \n  \n  \n  \n  \n  \n  /** @suppress {checkTypes} */\n  var jstoi_q = (str) => parseInt(str);\n  var softFullscreenResizeWebGLRenderTarget = () => {\n      var dpr = devicePixelRatio;\n      var inHiDPIFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode == 2;\n      var inAspectRatioFixedFullscreenMode = currentFullscreenStrategy.scaleMode == 2;\n      var inPixelPerfectFullscreenMode = currentFullscreenStrategy.canvasResolutionScaleMode != 0;\n      var inCenteredWithoutScalingFullscreenMode = currentFullscreenStrategy.scaleMode == 3;\n      var screenWidth = inHiDPIFullscreenMode ? Math.round(innerWidth*dpr) : innerWidth;\n      var screenHeight = inHiDPIFullscreenMode ? Math.round(innerHeight*dpr) : innerHeight;\n      var w = screenWidth;\n      var h = screenHeight;\n      var canvas = currentFullscreenStrategy.target;\n      var canvasSize = getCanvasElementSize(canvas);\n      var x = canvasSize[0];\n      var y = canvasSize[1];\n      var topMargin;\n  \n      if (inAspectRatioFixedFullscreenMode) {\n        if (w*y < x*h) h = (w * y / x) | 0;\n        else if (w*y > x*h) w = (h * x / y) | 0;\n        topMargin = ((screenHeight - h) / 2) | 0;\n      }\n  \n      if (inPixelPerfectFullscreenMode) {\n        setCanvasElementSize(canvas, w, h);\n        if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, w, h);\n      }\n  \n      // Back to CSS pixels.\n      if (inHiDPIFullscreenMode) {\n        topMargin /= dpr;\n        w /= dpr;\n        h /= dpr;\n        // Round to nearest 4 digits of precision.\n        w = Math.round(w*1e4)/1e4;\n        h = Math.round(h*1e4)/1e4;\n        topMargin = Math.round(topMargin*1e4)/1e4;\n      }\n  \n      if (inCenteredWithoutScalingFullscreenMode) {\n        var t = (innerHeight - jstoi_q(canvas.style.height)) / 2;\n        var b = (innerWidth - jstoi_q(canvas.style.width)) / 2;\n        setLetterbox(canvas, t, b);\n      } else {\n        canvas.style.width = w + 'px';\n        canvas.style.height = h + 'px';\n        var b = (innerWidth - w) / 2;\n        setLetterbox(canvas, topMargin, b);\n      }\n  \n      if (!inCenteredWithoutScalingFullscreenMode && currentFullscreenStrategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [currentFullscreenStrategy.canvasResizedCallback, a1, a2, a3]))(37, 0, currentFullscreenStrategy.canvasResizedCallbackUserData);\n      }\n    };\n  \n  \n  \n  \n  \n  \n  \n  var getBoundingClientRect = (e) => specialHTMLTargets.indexOf(e) < 0 ? e.getBoundingClientRect() : {'left':0,'top':0};\n  var JSEvents_resizeCanvasForFullscreen = (target, strategy) => {\n      var restoreOldStyle = registerRestoreOldStyle(target);\n      var cssWidth = strategy.softFullscreen ? innerWidth : screen.width;\n      var cssHeight = strategy.softFullscreen ? innerHeight : screen.height;\n      var rect = getBoundingClientRect(target);\n      var windowedCssWidth = rect.width;\n      var windowedCssHeight = rect.height;\n      var canvasSize = getCanvasElementSize(target);\n      var windowedRttWidth = canvasSize[0];\n      var windowedRttHeight = canvasSize[1];\n  \n      if (strategy.scaleMode == 3) {\n        setLetterbox(target, (cssHeight - windowedCssHeight) / 2, (cssWidth - windowedCssWidth) / 2);\n        cssWidth = windowedCssWidth;\n        cssHeight = windowedCssHeight;\n      } else if (strategy.scaleMode == 2) {\n        if (cssWidth*windowedRttHeight < windowedRttWidth*cssHeight) {\n          var desiredCssHeight = windowedRttHeight * cssWidth / windowedRttWidth;\n          setLetterbox(target, (cssHeight - desiredCssHeight) / 2, 0);\n          cssHeight = desiredCssHeight;\n        } else {\n          var desiredCssWidth = windowedRttWidth * cssHeight / windowedRttHeight;\n          setLetterbox(target, 0, (cssWidth - desiredCssWidth) / 2);\n          cssWidth = desiredCssWidth;\n        }\n      }\n  \n      // If we are adding padding, must choose a background color or otherwise Chrome will give the\n      // padding a default white color. Do it only if user has not customized their own background color.\n      if (!target.style.backgroundColor) target.style.backgroundColor = 'black';\n      // IE11 does the same, but requires the color to be set in the document body.\n      if (!document.body.style.backgroundColor) document.body.style.backgroundColor = 'black'; // IE11\n      // Firefox always shows black letterboxes independent of style color.\n  \n      target.style.width = cssWidth + 'px';\n      target.style.height = cssHeight + 'px';\n  \n      if (strategy.filteringMode == 1) {\n        target.style.imageRendering = 'optimizeSpeed';\n        target.style.imageRendering = '-moz-crisp-edges';\n        target.style.imageRendering = '-o-crisp-edges';\n        target.style.imageRendering = '-webkit-optimize-contrast';\n        target.style.imageRendering = 'optimize-contrast';\n        target.style.imageRendering = 'crisp-edges';\n        target.style.imageRendering = 'pixelated';\n      }\n  \n      var dpiScale = (strategy.canvasResolutionScaleMode == 2) ? devicePixelRatio : 1;\n      if (strategy.canvasResolutionScaleMode != 0) {\n        var newWidth = (cssWidth * dpiScale)|0;\n        var newHeight = (cssHeight * dpiScale)|0;\n        setCanvasElementSize(target, newWidth, newHeight);\n        if (target.GLctxObject) target.GLctxObject.GLctx.viewport(0, 0, newWidth, newHeight);\n      }\n      return restoreOldStyle;\n    };\n  \n  var _emscripten_enter_soft_fullscreen = (target, fullscreenStrategy) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      var strategy = {\n          scaleMode: HEAP32[((fullscreenStrategy)>>2)],\n          canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\n          filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\n          canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\n          canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)],\n          target,\n          softFullscreen: true\n      };\n  \n      var restoreOldStyle = JSEvents_resizeCanvasForFullscreen(target, strategy);\n  \n      document.documentElement.style.overflow = 'hidden';  // Firefox, Chrome\n      document.body.scroll = \"no\"; // IE11\n      document.body.style.margin = '0px'; // Override default document margin area on all browsers.\n  \n      var hiddenElements = hideEverythingExceptGivenElement(target);\n  \n      function restoreWindowedState() {\n        restoreOldStyle();\n        restoreHiddenElements(hiddenElements);\n        removeEventListener('resize', softFullscreenResizeWebGLRenderTarget);\n        if (strategy.canvasResizedCallback) {\n          ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\n        }\n        currentFullscreenStrategy = 0;\n      }\n      restoreOldWindowedStyle = restoreWindowedState;\n      currentFullscreenStrategy = strategy;\n      addEventListener('resize', softFullscreenResizeWebGLRenderTarget);\n  \n      // Inform the caller that the canvas size has changed.\n      if (strategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\n      }\n  \n      return 0;\n    };\n\n  \n  \n  \n  var JSEvents_requestFullscreen = (target, strategy) => {\n      // EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.\n      if (strategy.scaleMode != 0 || strategy.canvasResolutionScaleMode != 0) {\n        JSEvents_resizeCanvasForFullscreen(target, strategy);\n      }\n  \n      if (target.requestFullscreen) {\n        target.requestFullscreen();\n      } else if (target.webkitRequestFullscreen) {\n        target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      } else {\n        return JSEvents.fullscreenEnabled() ? -3 : -1;\n      }\n  \n      currentFullscreenStrategy = strategy;\n  \n      if (strategy.canvasResizedCallback) {\n        ((a1, a2, a3) => dynCall_iiii.apply(null, [strategy.canvasResizedCallback, a1, a2, a3]))(37, 0, strategy.canvasResizedCallbackUserData);\n      }\n  \n      return 0;\n    };\n  \n  var _emscripten_exit_fullscreen = () => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      // Make sure no queued up calls will fire after this.\n      JSEvents.removeDeferredCalls(JSEvents_requestFullscreen);\n  \n      var d = specialHTMLTargets[1];\n      if (d.exitFullscreen) {\n        d.fullscreenElement && d.exitFullscreen();\n      } else if (d.webkitExitFullscreen) {\n        d.webkitFullscreenElement && d.webkitExitFullscreen();\n      } else {\n        return -1;\n      }\n  \n      return 0;\n    };\n\n  \n  var requestPointerLock = (target) => {\n      if (target.requestPointerLock) {\n        target.requestPointerLock();\n      } else {\n        // document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,\n        // or if the whole browser just doesn't support the feature.\n        if (document.body.requestPointerLock\n          ) {\n          return -3;\n        }\n        return -1;\n      }\n      return 0;\n    };\n  var _emscripten_exit_pointerlock = () => {\n      // Make sure no queued up calls will fire after this.\n      JSEvents.removeDeferredCalls(requestPointerLock);\n  \n      if (document.exitPointerLock) {\n        document.exitPointerLock();\n      } else {\n        return -1;\n      }\n      return 0;\n    };\n\n  var _emscripten_exit_soft_fullscreen = () => {\n      restoreOldWindowedStyle?.();\n      restoreOldWindowedStyle = null;\n  \n      return 0;\n    };\n\n  var _emscripten_get_device_pixel_ratio = () => {\n      return devicePixelRatio;\n    };\n\n  \n  \n  var _emscripten_get_element_css_size = (target, width, height) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      var rect = getBoundingClientRect(target);\n      HEAPF64[((width)>>3)] = rect.width;\n      HEAPF64[((height)>>3)] = rect.height;\n  \n      return 0;\n    };\n\n  \n  var fillGamepadEventData = (eventStruct, e) => {\n      HEAPF64[((eventStruct)>>3)] = e.timestamp;\n      for (var i = 0; i < e.axes.length; ++i) {\n        HEAPF64[(((eventStruct+i*8)+(16))>>3)] = e.axes[i];\n      }\n      for (var i = 0; i < e.buttons.length; ++i) {\n        if (typeof e.buttons[i] == 'object') {\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i].value;\n        } else {\n          HEAPF64[(((eventStruct+i*8)+(528))>>3)] = e.buttons[i];\n        }\n      }\n      for (var i = 0; i < e.buttons.length; ++i) {\n        if (typeof e.buttons[i] == 'object') {\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i].pressed;\n        } else {\n          // Assigning a boolean to HEAP32, that's ok, but Closure would like to warn about it:\n          /** @suppress {checkTypes} */\n          HEAP32[(((eventStruct+i*4)+(1040))>>2)] = e.buttons[i] == 1;\n        }\n      }\n      HEAP32[(((eventStruct)+(1296))>>2)] = e.connected;\n      HEAP32[(((eventStruct)+(1300))>>2)] = e.index;\n      HEAP32[(((eventStruct)+(8))>>2)] = e.axes.length;\n      HEAP32[(((eventStruct)+(12))>>2)] = e.buttons.length;\n      stringToUTF8(e.id, eventStruct + 1304, 64);\n      stringToUTF8(e.mapping, eventStruct + 1368, 64);\n    };\n  var _emscripten_get_gamepad_status = (index, gamepadState) => {\n      // INVALID_PARAM is returned on a Gamepad index that never was there.\n      if (index < 0 || index >= JSEvents.lastGamepadState.length) return -5;\n  \n      // NO_DATA is returned on a Gamepad index that was removed.\n      // For previously disconnected gamepads there should be an empty slot (null/undefined/false) at the index.\n      // This is because gamepads must keep their original position in the array.\n      // For example, removing the first of two gamepads produces [null/undefined/false, gamepad].\n      if (!JSEvents.lastGamepadState[index]) return -7;\n  \n      fillGamepadEventData(gamepadState, JSEvents.lastGamepadState[index]);\n      return 0;\n    };\n\n\n  var _emscripten_get_num_gamepads = () => {\n      // N.B. Do not call emscripten_get_num_gamepads() unless having first called emscripten_sample_gamepad_data(), and that has returned EMSCRIPTEN_RESULT_SUCCESS.\n      // Otherwise the following line will throw an exception.\n      return JSEvents.lastGamepadState.length;\n    };\n\n  var _emscripten_get_screen_size = (width, height) => {\n      HEAP32[((width)>>2)] = screen.width;\n      HEAP32[((height)>>2)] = screen.height;\n    };\n\n  /** @suppress {duplicate } */\n  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }\n  var _emscripten_glActiveTexture = _glActiveTexture;\n\n  /** @suppress {duplicate } */\n  var _glAttachShader = (program, shader) => {\n      GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\n    };\n  var _emscripten_glAttachShader = _glAttachShader;\n\n  /** @suppress {duplicate } */\n  var _glBeginQuery = (target, id) => {\n      GLctx.beginQuery(target, GL.queries[id]);\n    };\n  var _emscripten_glBeginQuery = _glBeginQuery;\n\n  /** @suppress {duplicate } */\n  var _glBeginQueryEXT = (target, id) => {\n      GLctx.disjointTimerQueryExt['beginQueryEXT'](target, GL.queries[id]);\n    };\n  var _emscripten_glBeginQueryEXT = _glBeginQueryEXT;\n\n  /** @suppress {duplicate } */\n  function _glBeginTransformFeedback(x0) { GLctx.beginTransformFeedback(x0) }\n  var _emscripten_glBeginTransformFeedback = _glBeginTransformFeedback;\n\n  \n  /** @suppress {duplicate } */\n  var _glBindAttribLocation = (program, index, name) => {\n      GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\n    };\n  var _emscripten_glBindAttribLocation = _glBindAttribLocation;\n\n  /** @suppress {duplicate } */\n  var _glBindBuffer = (target, buffer) => {\n      if (target == 0x8892 /*GL_ARRAY_BUFFER*/) {\n        GLctx.currentArrayBufferBinding = buffer;\n      } else if (target == 0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/) {\n        GLctx.currentElementArrayBufferBinding = buffer;\n      }\n  \n      if (target == 0x88EB /*GL_PIXEL_PACK_BUFFER*/) {\n        // In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2\n        // API function call when a buffer is bound to\n        // GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that\n        // binding point is non-null to know what is the proper API function to\n        // call.\n        GLctx.currentPixelPackBufferBinding = buffer;\n      } else if (target == 0x88EC /*GL_PIXEL_UNPACK_BUFFER*/) {\n        // In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to\n        // use a different WebGL 2 API function call when a buffer is bound to\n        // GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that\n        // binding point is non-null to know what is the proper API function to\n        // call.\n        GLctx.currentPixelUnpackBufferBinding = buffer;\n      }\n      GLctx.bindBuffer(target, GL.buffers[buffer]);\n    };\n  var _emscripten_glBindBuffer = _glBindBuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindBufferBase = (target, index, buffer) => {\n      GLctx.bindBufferBase(target, index, GL.buffers[buffer]);\n    };\n  var _emscripten_glBindBufferBase = _glBindBufferBase;\n\n  /** @suppress {duplicate } */\n  var _glBindBufferRange = (target, index, buffer, offset, ptrsize) => {\n      GLctx.bindBufferRange(target, index, GL.buffers[buffer], offset, ptrsize);\n    };\n  var _emscripten_glBindBufferRange = _glBindBufferRange;\n\n  /** @suppress {duplicate } */\n  var _glBindFramebuffer = (target, framebuffer) => {\n  \n      GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\n  \n    };\n  var _emscripten_glBindFramebuffer = _glBindFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindRenderbuffer = (target, renderbuffer) => {\n      GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\n    };\n  var _emscripten_glBindRenderbuffer = _glBindRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindSampler = (unit, sampler) => {\n      GLctx.bindSampler(unit, GL.samplers[sampler]);\n    };\n  var _emscripten_glBindSampler = _glBindSampler;\n\n  /** @suppress {duplicate } */\n  var _glBindTexture = (target, texture) => {\n      GLctx.bindTexture(target, GL.textures[texture]);\n    };\n  var _emscripten_glBindTexture = _glBindTexture;\n\n  /** @suppress {duplicate } */\n  var _glBindTransformFeedback = (target, id) => {\n      GLctx.bindTransformFeedback(target, GL.transformFeedbacks[id]);\n    };\n  var _emscripten_glBindTransformFeedback = _glBindTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glBindVertexArray = (vao) => {\n      GLctx.bindVertexArray(GL.vaos[vao]);\n      var ibo = GLctx.getParameter(0x8895 /*ELEMENT_ARRAY_BUFFER_BINDING*/);\n      GLctx.currentElementArrayBufferBinding = ibo ? (ibo.name | 0) : 0;\n    };\n  var _emscripten_glBindVertexArray = _glBindVertexArray;\n\n  \n  /** @suppress {duplicate } */\n  var _glBindVertexArrayOES = _glBindVertexArray;\n  var _emscripten_glBindVertexArrayOES = _glBindVertexArrayOES;\n\n  /** @suppress {duplicate } */\n  function _glBlendColor(x0, x1, x2, x3) { GLctx.blendColor(x0, x1, x2, x3) }\n  var _emscripten_glBlendColor = _glBlendColor;\n\n  /** @suppress {duplicate } */\n  function _glBlendEquation(x0) { GLctx.blendEquation(x0) }\n  var _emscripten_glBlendEquation = _glBlendEquation;\n\n  /** @suppress {duplicate } */\n  function _glBlendEquationSeparate(x0, x1) { GLctx.blendEquationSeparate(x0, x1) }\n  var _emscripten_glBlendEquationSeparate = _glBlendEquationSeparate;\n\n  /** @suppress {duplicate } */\n  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }\n  var _emscripten_glBlendFunc = _glBlendFunc;\n\n  /** @suppress {duplicate } */\n  function _glBlendFuncSeparate(x0, x1, x2, x3) { GLctx.blendFuncSeparate(x0, x1, x2, x3) }\n  var _emscripten_glBlendFuncSeparate = _glBlendFuncSeparate;\n\n  /** @suppress {duplicate } */\n  function _glBlitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) { GLctx.blitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) }\n  var _emscripten_glBlitFramebuffer = _glBlitFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glBufferData = (target, size, data, usage) => {\n  \n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.  If size is zero, WebGL would interpret\n        // uploading the whole input arraybuffer (starting from given offset),\n        // which would not make sense in WebAssembly, so avoid uploading if size\n        // is zero. However we must still call bufferData to establish a backing\n        // storage of zero bytes.\n        if (data && size) {\n          GLctx.bufferData(target, HEAPU8, usage, data, size);\n        } else {\n          GLctx.bufferData(target, size, usage);\n        }\n      } else {\n        // N.b. here first form specifies a heap subarray, second form an integer\n        // size, so the ?: code here is polymorphic. It is advised to avoid\n        // randomly mixing both uses in calling code, to avoid any potential JS\n        // engine JIT issues.\n        GLctx.bufferData(target, data ? HEAPU8.subarray(data, data+size) : size, usage);\n      }\n    };\n  var _emscripten_glBufferData = _glBufferData;\n\n  /** @suppress {duplicate } */\n  var _glBufferSubData = (target, offset, size, data) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        size && GLctx.bufferSubData(target, offset, HEAPU8, data, size);\n        return;\n      }\n      GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));\n    };\n  var _emscripten_glBufferSubData = _glBufferSubData;\n\n  /** @suppress {duplicate } */\n  function _glCheckFramebufferStatus(x0) { return GLctx.checkFramebufferStatus(x0) }\n  var _emscripten_glCheckFramebufferStatus = _glCheckFramebufferStatus;\n\n  /** @suppress {duplicate } */\n  function _glClear(x0) { GLctx.clear(x0) }\n  var _emscripten_glClear = _glClear;\n\n  /** @suppress {duplicate } */\n  function _glClearBufferfi(x0, x1, x2, x3) { GLctx.clearBufferfi(x0, x1, x2, x3) }\n  var _emscripten_glClearBufferfi = _glClearBufferfi;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferfv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferfv(buffer, drawbuffer, HEAPF32, value>>2);\n    };\n  var _emscripten_glClearBufferfv = _glClearBufferfv;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferiv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferiv(buffer, drawbuffer, HEAP32, value>>2);\n    };\n  var _emscripten_glClearBufferiv = _glClearBufferiv;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferuiv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferuiv(buffer, drawbuffer, HEAPU32, value>>2);\n    };\n  var _emscripten_glClearBufferuiv = _glClearBufferuiv;\n\n  /** @suppress {duplicate } */\n  function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }\n  var _emscripten_glClearColor = _glClearColor;\n\n  /** @suppress {duplicate } */\n  function _glClearDepthf(x0) { GLctx.clearDepth(x0) }\n  var _emscripten_glClearDepthf = _glClearDepthf;\n\n  /** @suppress {duplicate } */\n  function _glClearStencil(x0) { GLctx.clearStencil(x0) }\n  var _emscripten_glClearStencil = _glClearStencil;\n\n  var convertI32PairToI53 = (lo, hi) => {\n      return (lo >>> 0) + hi * 4294967296;\n    };\n  /** @suppress {duplicate } */\n  var _glClientWaitSync = (sync, flags, timeout_low, timeout_high) => {\n      // WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.\n      // In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.\n      // Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)\n      // See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\n      return GLctx.clientWaitSync(GL.syncs[sync], flags, timeout);\n    };\n  var _emscripten_glClientWaitSync = _glClientWaitSync;\n\n  /** @suppress {duplicate } */\n  var _glColorMask = (red, green, blue, alpha) => {\n      GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\n    };\n  var _emscripten_glColorMask = _glColorMask;\n\n  /** @suppress {duplicate } */\n  var _glCompileShader = (shader) => {\n      GLctx.compileShader(GL.shaders[shader]);\n    };\n  var _emscripten_glCompileShader = _glCompileShader;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexImage2D = (target, level, internalFormat, width, height, border, imageSize, data) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data);\n        } else {\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, HEAPU8, data, imageSize);\n        }\n        return;\n      }\n      GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\n    };\n  var _emscripten_glCompressedTexImage2D = _glCompressedTexImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexImage3D = (target, level, internalFormat, width, height, depth, border, imageSize, data) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data);\n      } else {\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, HEAPU8, data, imageSize);\n      }\n    };\n  var _emscripten_glCompressedTexImage3D = _glCompressedTexImage3D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexSubImage2D = (target, level, xoffset, yoffset, width, height, format, imageSize, data) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\n        } else {\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, HEAPU8, data, imageSize);\n        }\n        return;\n      }\n      GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\n    };\n  var _emscripten_glCompressedTexSubImage2D = _glCompressedTexSubImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexSubImage3D = (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\n      } else {\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, HEAPU8, data, imageSize);\n      }\n    };\n  var _emscripten_glCompressedTexSubImage3D = _glCompressedTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  function _glCopyBufferSubData(x0, x1, x2, x3, x4) { GLctx.copyBufferSubData(x0, x1, x2, x3, x4) }\n  var _emscripten_glCopyBufferSubData = _glCopyBufferSubData;\n\n  /** @suppress {duplicate } */\n  function _glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\n  var _emscripten_glCopyTexImage2D = _glCopyTexImage2D;\n\n  /** @suppress {duplicate } */\n  function _glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\n  var _emscripten_glCopyTexSubImage2D = _glCopyTexSubImage2D;\n\n  /** @suppress {duplicate } */\n  function _glCopyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) { GLctx.copyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) }\n  var _emscripten_glCopyTexSubImage3D = _glCopyTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  var _glCreateProgram = () => {\n      var id = GL.getNewId(GL.programs);\n      var program = GLctx.createProgram();\n      // Store additional information needed for each shader program:\n      program.name = id;\n      // Lazy cache results of\n      // glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)\n      program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\n      program.uniformIdCounter = 1;\n      GL.programs[id] = program;\n      return id;\n    };\n  var _emscripten_glCreateProgram = _glCreateProgram;\n\n  /** @suppress {duplicate } */\n  var _glCreateShader = (shaderType) => {\n      var id = GL.getNewId(GL.shaders);\n      GL.shaders[id] = GLctx.createShader(shaderType);\n  \n      return id;\n    };\n  var _emscripten_glCreateShader = _glCreateShader;\n\n  /** @suppress {duplicate } */\n  function _glCullFace(x0) { GLctx.cullFace(x0) }\n  var _emscripten_glCullFace = _glCullFace;\n\n  /** @suppress {duplicate } */\n  var _glDeleteBuffers = (n, buffers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((buffers)+(i*4))>>2)];\n        var buffer = GL.buffers[id];\n  \n        // From spec: \"glDeleteBuffers silently ignores 0's and names that do not\n        // correspond to existing buffer objects.\"\n        if (!buffer) continue;\n  \n        GLctx.deleteBuffer(buffer);\n        buffer.name = 0;\n        GL.buffers[id] = null;\n  \n        if (id == GLctx.currentArrayBufferBinding) GLctx.currentArrayBufferBinding = 0;\n        if (id == GLctx.currentElementArrayBufferBinding) GLctx.currentElementArrayBufferBinding = 0;\n        if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\n        if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\n      }\n    };\n  var _emscripten_glDeleteBuffers = _glDeleteBuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteFramebuffers = (n, framebuffers) => {\n      for (var i = 0; i < n; ++i) {\n        var id = HEAP32[(((framebuffers)+(i*4))>>2)];\n        var framebuffer = GL.framebuffers[id];\n        if (!framebuffer) continue; // GL spec: \"glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects\".\n        GLctx.deleteFramebuffer(framebuffer);\n        framebuffer.name = 0;\n        GL.framebuffers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteFramebuffers = _glDeleteFramebuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteProgram = (id) => {\n      if (!id) return;\n      var program = GL.programs[id];\n      if (!program) {\n        // glDeleteProgram actually signals an error when deleting a nonexisting\n        // object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteProgram(program);\n      program.name = 0;\n      GL.programs[id] = null;\n    };\n  var _emscripten_glDeleteProgram = _glDeleteProgram;\n\n  /** @suppress {duplicate } */\n  var _glDeleteQueries = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var query = GL.queries[id];\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.deleteQuery(query);\n        GL.queries[id] = null;\n      }\n    };\n  var _emscripten_glDeleteQueries = _glDeleteQueries;\n\n  /** @suppress {duplicate } */\n  var _glDeleteQueriesEXT = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var query = GL.queries[id];\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);\n        GL.queries[id] = null;\n      }\n    };\n  var _emscripten_glDeleteQueriesEXT = _glDeleteQueriesEXT;\n\n  /** @suppress {duplicate } */\n  var _glDeleteRenderbuffers = (n, renderbuffers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];\n        var renderbuffer = GL.renderbuffers[id];\n        if (!renderbuffer) continue; // GL spec: \"glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects\".\n        GLctx.deleteRenderbuffer(renderbuffer);\n        renderbuffer.name = 0;\n        GL.renderbuffers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteRenderbuffers = _glDeleteRenderbuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteSamplers = (n, samplers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((samplers)+(i*4))>>2)];\n        var sampler = GL.samplers[id];\n        if (!sampler) continue;\n        GLctx.deleteSampler(sampler);\n        sampler.name = 0;\n        GL.samplers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteSamplers = _glDeleteSamplers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteShader = (id) => {\n      if (!id) return;\n      var shader = GL.shaders[id];\n      if (!shader) {\n        // glDeleteShader actually signals an error when deleting a nonexisting\n        // object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteShader(shader);\n      GL.shaders[id] = null;\n    };\n  var _emscripten_glDeleteShader = _glDeleteShader;\n\n  /** @suppress {duplicate } */\n  var _glDeleteSync = (id) => {\n      if (!id) return;\n      var sync = GL.syncs[id];\n      if (!sync) { // glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteSync(sync);\n      sync.name = 0;\n      GL.syncs[id] = null;\n    };\n  var _emscripten_glDeleteSync = _glDeleteSync;\n\n  /** @suppress {duplicate } */\n  var _glDeleteTextures = (n, textures) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((textures)+(i*4))>>2)];\n        var texture = GL.textures[id];\n        // GL spec: \"glDeleteTextures silently ignores 0s and names that do not\n        // correspond to existing textures\".\n        if (!texture) continue;\n        GLctx.deleteTexture(texture);\n        texture.name = 0;\n        GL.textures[id] = null;\n      }\n    };\n  var _emscripten_glDeleteTextures = _glDeleteTextures;\n\n  /** @suppress {duplicate } */\n  var _glDeleteTransformFeedbacks = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var transformFeedback = GL.transformFeedbacks[id];\n        if (!transformFeedback) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.deleteTransformFeedback(transformFeedback);\n        transformFeedback.name = 0;\n        GL.transformFeedbacks[id] = null;\n      }\n    };\n  var _emscripten_glDeleteTransformFeedbacks = _glDeleteTransformFeedbacks;\n\n  /** @suppress {duplicate } */\n  var _glDeleteVertexArrays = (n, vaos) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\n        GLctx.deleteVertexArray(GL.vaos[id]);\n        GL.vaos[id] = null;\n      }\n    };\n  var _emscripten_glDeleteVertexArrays = _glDeleteVertexArrays;\n\n  \n  /** @suppress {duplicate } */\n  var _glDeleteVertexArraysOES = _glDeleteVertexArrays;\n  var _emscripten_glDeleteVertexArraysOES = _glDeleteVertexArraysOES;\n\n  /** @suppress {duplicate } */\n  function _glDepthFunc(x0) { GLctx.depthFunc(x0) }\n  var _emscripten_glDepthFunc = _glDepthFunc;\n\n  /** @suppress {duplicate } */\n  var _glDepthMask = (flag) => {\n      GLctx.depthMask(!!flag);\n    };\n  var _emscripten_glDepthMask = _glDepthMask;\n\n  /** @suppress {duplicate } */\n  function _glDepthRangef(x0, x1) { GLctx.depthRange(x0, x1) }\n  var _emscripten_glDepthRangef = _glDepthRangef;\n\n  /** @suppress {duplicate } */\n  var _glDetachShader = (program, shader) => {\n      GLctx.detachShader(GL.programs[program], GL.shaders[shader]);\n    };\n  var _emscripten_glDetachShader = _glDetachShader;\n\n  /** @suppress {duplicate } */\n  function _glDisable(x0) { GLctx.disable(x0) }\n  var _emscripten_glDisable = _glDisable;\n\n  /** @suppress {duplicate } */\n  var _glDisableVertexAttribArray = (index) => {\n      var cb = GL.currentContext.clientBuffers[index];\n      cb.enabled = false;\n      GLctx.disableVertexAttribArray(index);\n    };\n  var _emscripten_glDisableVertexAttribArray = _glDisableVertexAttribArray;\n\n  /** @suppress {duplicate } */\n  var _glDrawArrays = (mode, first, count) => {\n      // bind any client-side buffers\n      GL.preDrawHandleClientVertexAttribBindings(first + count);\n  \n      GLctx.drawArrays(mode, first, count);\n  \n      GL.postDrawHandleClientVertexAttribBindings();\n    };\n  var _emscripten_glDrawArrays = _glDrawArrays;\n\n  /** @suppress {duplicate } */\n  var _glDrawArraysInstanced = (mode, first, count, primcount) => {\n      GLctx.drawArraysInstanced(mode, first, count, primcount);\n    };\n  var _emscripten_glDrawArraysInstanced = _glDrawArraysInstanced;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedANGLE = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedANGLE = _glDrawArraysInstancedANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedARB = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedARB = _glDrawArraysInstancedARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedEXT = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedEXT = _glDrawArraysInstancedEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedNV = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedNV = _glDrawArraysInstancedNV;\n\n  var tempFixedLengthArray = [];\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffers = (n, bufs) => {\n  \n      var bufArray = tempFixedLengthArray[n];\n      for (var i = 0; i < n; i++) {\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\n      }\n  \n      GLctx.drawBuffers(bufArray);\n    };\n  var _emscripten_glDrawBuffers = _glDrawBuffers;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffersEXT = _glDrawBuffers;\n  var _emscripten_glDrawBuffersEXT = _glDrawBuffersEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffersWEBGL = _glDrawBuffers;\n  var _emscripten_glDrawBuffersWEBGL = _glDrawBuffersWEBGL;\n\n  /** @suppress {duplicate } */\n  var _glDrawElements = (mode, count, type, indices) => {\n      var buf;\n      if (!GLctx.currentElementArrayBufferBinding) {\n        var size = GL.calcBufLength(1, type, 0, count);\n        buf = GL.getTempIndexBuffer(size);\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, buf);\n        GLctx.bufferSubData(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/,\n                                 0,\n                                 HEAPU8.subarray(indices, indices + size));\n        // the index is now 0\n        indices = 0;\n      }\n  \n      // bind any client-side buffers\n      GL.preDrawHandleClientVertexAttribBindings(count);\n  \n      GLctx.drawElements(mode, count, type, indices);\n  \n      GL.postDrawHandleClientVertexAttribBindings(count);\n  \n      if (!GLctx.currentElementArrayBufferBinding) {\n        GLctx.bindBuffer(0x8893 /*GL_ELEMENT_ARRAY_BUFFER*/, null);\n      }\n    };\n  var _emscripten_glDrawElements = _glDrawElements;\n\n  /** @suppress {duplicate } */\n  var _glDrawElementsInstanced = (mode, count, type, indices, primcount) => {\n      GLctx.drawElementsInstanced(mode, count, type, indices, primcount);\n    };\n  var _emscripten_glDrawElementsInstanced = _glDrawElementsInstanced;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedANGLE = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedANGLE = _glDrawElementsInstancedANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedARB = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedARB = _glDrawElementsInstancedARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedEXT = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedEXT = _glDrawElementsInstancedEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedNV = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedNV = _glDrawElementsInstancedNV;\n\n  /** @suppress {duplicate } */\n  var _glDrawRangeElements = (mode, start, end, count, type, indices) => {\n      // TODO: This should be a trivial pass-though function registered at the bottom of this page as\n      // glFuncs[6][1] += ' drawRangeElements';\n      // but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,\n      // we work around by ignoring the range.\n      _glDrawElements(mode, count, type, indices);\n    };\n  var _emscripten_glDrawRangeElements = _glDrawRangeElements;\n\n  /** @suppress {duplicate } */\n  function _glEnable(x0) { GLctx.enable(x0) }\n  var _emscripten_glEnable = _glEnable;\n\n  /** @suppress {duplicate } */\n  var _glEnableVertexAttribArray = (index) => {\n      var cb = GL.currentContext.clientBuffers[index];\n      cb.enabled = true;\n      GLctx.enableVertexAttribArray(index);\n    };\n  var _emscripten_glEnableVertexAttribArray = _glEnableVertexAttribArray;\n\n  /** @suppress {duplicate } */\n  function _glEndQuery(x0) { GLctx.endQuery(x0) }\n  var _emscripten_glEndQuery = _glEndQuery;\n\n  /** @suppress {duplicate } */\n  var _glEndQueryEXT = (target) => {\n      GLctx.disjointTimerQueryExt['endQueryEXT'](target);\n    };\n  var _emscripten_glEndQueryEXT = _glEndQueryEXT;\n\n  /** @suppress {duplicate } */\n  function _glEndTransformFeedback() { GLctx.endTransformFeedback() }\n  var _emscripten_glEndTransformFeedback = _glEndTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glFenceSync = (condition, flags) => {\n      var sync = GLctx.fenceSync(condition, flags);\n      if (sync) {\n        var id = GL.getNewId(GL.syncs);\n        sync.name = id;\n        GL.syncs[id] = sync;\n        return id;\n      }\n      return 0; // Failed to create a sync object\n    };\n  var _emscripten_glFenceSync = _glFenceSync;\n\n  /** @suppress {duplicate } */\n  function _glFinish() { GLctx.finish() }\n  var _emscripten_glFinish = _glFinish;\n\n  /** @suppress {duplicate } */\n  function _glFlush() { GLctx.flush() }\n  var _emscripten_glFlush = _glFlush;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferRenderbuffer = (target, attachment, renderbuffertarget, renderbuffer) => {\n      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,\n                                         GL.renderbuffers[renderbuffer]);\n    };\n  var _emscripten_glFramebufferRenderbuffer = _glFramebufferRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferTexture2D = (target, attachment, textarget, texture, level) => {\n      GLctx.framebufferTexture2D(target, attachment, textarget,\n                                      GL.textures[texture], level);\n    };\n  var _emscripten_glFramebufferTexture2D = _glFramebufferTexture2D;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferTextureLayer = (target, attachment, texture, level, layer) => {\n      GLctx.framebufferTextureLayer(target, attachment, GL.textures[texture], level, layer);\n    };\n  var _emscripten_glFramebufferTextureLayer = _glFramebufferTextureLayer;\n\n  /** @suppress {duplicate } */\n  function _glFrontFace(x0) { GLctx.frontFace(x0) }\n  var _emscripten_glFrontFace = _glFrontFace;\n\n  var __glGenObject = (n, buffers, createFunction, objectTable\n      ) => {\n      for (var i = 0; i < n; i++) {\n        var buffer = GLctx[createFunction]();\n        var id = buffer && GL.getNewId(objectTable);\n        if (buffer) {\n          buffer.name = id;\n          objectTable[id] = buffer;\n        } else {\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n        }\n        HEAP32[(((buffers)+(i*4))>>2)] = id;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGenBuffers = (n, buffers) => {\n      __glGenObject(n, buffers, 'createBuffer', GL.buffers\n        );\n    };\n  var _emscripten_glGenBuffers = _glGenBuffers;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenFramebuffers = (n, ids) => {\n      __glGenObject(n, ids, 'createFramebuffer', GL.framebuffers\n        );\n    };\n  var _emscripten_glGenFramebuffers = _glGenFramebuffers;\n\n  /** @suppress {duplicate } */\n  var _glGenQueries = (n, ids) => {\n      __glGenObject(n, ids, 'createQuery', GL.queries\n        );\n    };\n  var _emscripten_glGenQueries = _glGenQueries;\n\n  /** @suppress {duplicate } */\n  var _glGenQueriesEXT = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var query = GLctx.disjointTimerQueryExt['createQueryEXT']();\n        if (!query) {\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n          while (i < n) HEAP32[(((ids)+(i++*4))>>2)] = 0;\n          return;\n        }\n        var id = GL.getNewId(GL.queries);\n        query.name = id;\n        GL.queries[id] = query;\n        HEAP32[(((ids)+(i*4))>>2)] = id;\n      }\n    };\n  var _emscripten_glGenQueriesEXT = _glGenQueriesEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenRenderbuffers = (n, renderbuffers) => {\n      __glGenObject(n, renderbuffers, 'createRenderbuffer', GL.renderbuffers\n        );\n    };\n  var _emscripten_glGenRenderbuffers = _glGenRenderbuffers;\n\n  /** @suppress {duplicate } */\n  var _glGenSamplers = (n, samplers) => {\n      __glGenObject(n, samplers, 'createSampler', GL.samplers\n        );\n    };\n  var _emscripten_glGenSamplers = _glGenSamplers;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenTextures = (n, textures) => {\n      __glGenObject(n, textures, 'createTexture', GL.textures\n        );\n    };\n  var _emscripten_glGenTextures = _glGenTextures;\n\n  /** @suppress {duplicate } */\n  var _glGenTransformFeedbacks = (n, ids) => {\n      __glGenObject(n, ids, 'createTransformFeedback', GL.transformFeedbacks\n        );\n    };\n  var _emscripten_glGenTransformFeedbacks = _glGenTransformFeedbacks;\n\n  \n  /** @suppress {duplicate } */\n  function _glGenVertexArrays(n, arrays) {\n      __glGenObject(n, arrays, 'createVertexArray', GL.vaos\n        );\n    }\n  var _emscripten_glGenVertexArrays = _glGenVertexArrays;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenVertexArraysOES = _glGenVertexArrays;\n  var _emscripten_glGenVertexArraysOES = _glGenVertexArraysOES;\n\n  /** @suppress {duplicate } */\n  function _glGenerateMipmap(x0) { GLctx.generateMipmap(x0) }\n  var _emscripten_glGenerateMipmap = _glGenerateMipmap;\n\n  \n  var __glGetActiveAttribOrUniform = (funcName, program, index, bufSize, length, size, type, name) => {\n      program = GL.programs[program];\n      var info = GLctx[funcName](program, index);\n      if (info) {\n        // If an error occurs, nothing will be written to length, size and type and name.\n        var numBytesWrittenExclNull = name && stringToUTF8(info.name, name, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n        if (size) HEAP32[((size)>>2)] = info.size;\n        if (type) HEAP32[((type)>>2)] = info.type;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetActiveAttrib = (program, index, bufSize, length, size, type, name) => {\n      __glGetActiveAttribOrUniform('getActiveAttrib', program, index, bufSize, length, size, type, name);\n    };\n  var _emscripten_glGetActiveAttrib = _glGetActiveAttrib;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetActiveUniform = (program, index, bufSize, length, size, type, name) => {\n      __glGetActiveAttribOrUniform('getActiveUniform', program, index, bufSize, length, size, type, name);\n    };\n  var _emscripten_glGetActiveUniform = _glGetActiveUniform;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformBlockName = (program, uniformBlockIndex, bufSize, length, uniformBlockName) => {\n      program = GL.programs[program];\n  \n      var result = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\n      if (!result) return; // If an error occurs, nothing will be written to uniformBlockName or length.\n      if (uniformBlockName && bufSize > 0) {\n        var numBytesWrittenExclNull = stringToUTF8(result, uniformBlockName, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n      } else {\n        if (length) HEAP32[((length)>>2)] = 0;\n      }\n    };\n  var _emscripten_glGetActiveUniformBlockName = _glGetActiveUniformBlockName;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformBlockiv = (program, uniformBlockIndex, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n  \n      if (pname == 0x8A41 /* GL_UNIFORM_BLOCK_NAME_LENGTH */) {\n        var name = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\n        HEAP32[((params)>>2)] = name.length+1;\n        return;\n      }\n  \n      var result = GLctx.getActiveUniformBlockParameter(program, uniformBlockIndex, pname);\n      if (result === null) return; // If an error occurs, nothing should be written to params.\n      if (pname == 0x8A43 /*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/) {\n        for (var i = 0; i < result.length; i++) {\n          HEAP32[(((params)+(i*4))>>2)] = result[i];\n        }\n      } else {\n        HEAP32[((params)>>2)] = result;\n      }\n    };\n  var _emscripten_glGetActiveUniformBlockiv = _glGetActiveUniformBlockiv;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformsiv = (program, uniformCount, uniformIndices, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (uniformCount > 0 && uniformIndices == 0) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      var ids = [];\n      for (var i = 0; i < uniformCount; i++) {\n        ids.push(HEAP32[(((uniformIndices)+(i*4))>>2)]);\n      }\n  \n      var result = GLctx.getActiveUniforms(program, ids, pname);\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to params.\n  \n      var len = result.length;\n      for (var i = 0; i < len; i++) {\n        HEAP32[(((params)+(i*4))>>2)] = result[i];\n      }\n    };\n  var _emscripten_glGetActiveUniformsiv = _glGetActiveUniformsiv;\n\n  /** @suppress {duplicate } */\n  var _glGetAttachedShaders = (program, maxCount, count, shaders) => {\n      var result = GLctx.getAttachedShaders(GL.programs[program]);\n      var len = result.length;\n      if (len > maxCount) {\n        len = maxCount;\n      }\n      HEAP32[((count)>>2)] = len;\n      for (var i = 0; i < len; ++i) {\n        var id = GL.shaders.indexOf(result[i]);\n        HEAP32[(((shaders)+(i*4))>>2)] = id;\n      }\n    };\n  var _emscripten_glGetAttachedShaders = _glGetAttachedShaders;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetAttribLocation = (program, name) => {\n      return GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\n    };\n  var _emscripten_glGetAttribLocation = _glGetAttribLocation;\n\n  var writeI53ToI64 = (ptr, num) => {\n      HEAPU32[((ptr)>>2)] = num;\n      var lower = HEAPU32[((ptr)>>2)];\n      HEAPU32[(((ptr)+(4))>>2)] = (num - lower)/4294967296;\n    };\n  \n  var emscriptenWebGLGet = (name_, p, type) => {\n      // Guard against user passing a null pointer.\n      // Note that GLES2 spec does not say anything about how passing a null\n      // pointer should be treated.  Testing on desktop core GL 3, the application\n      // crashes on glGetIntegerv to a null pointer, but better to report an error\n      // instead of doing anything random.\n      if (!p) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = undefined;\n      switch (name_) { // Handle a few trivial GLES values\n        case 0x8DFA: // GL_SHADER_COMPILER\n          ret = 1;\n          break;\n        case 0x8DF8: // GL_SHADER_BINARY_FORMATS\n          if (type != 0 && type != 1) {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n          }\n          // Do not write anything to the out pointer, since no binary formats are\n          // supported.\n          return;\n        case 0x87FE: // GL_NUM_PROGRAM_BINARY_FORMATS\n        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS\n          ret = 0;\n          break;\n        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS\n          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete\n          // since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be\n          // queried for length), so implement it ourselves to allow C++ GLES2\n          // code get the length.\n          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);\n          ret = formats ? formats.length : 0;\n          break;\n  \n        case 0x821D: // GL_NUM_EXTENSIONS\n          if (GL.currentContext.version < 2) {\n            // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n            return;\n          }\n          // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\n          var exts = GLctx.getSupportedExtensions() || [];\n          // each extension is duplicated, first in unprefixed WebGL form, and\n          // then a second time with \"GL_\" prefix.\n          ret = 2 * exts.length;\n          break;\n        case 0x821B: // GL_MAJOR_VERSION\n        case 0x821C: // GL_MINOR_VERSION\n          if (GL.currentContext.version < 2) {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          }\n          ret = name_ == 0x821B ? 3 : 0; // return version 3.0\n          break;\n      }\n  \n      if (ret === undefined) {\n        var result = GLctx.getParameter(name_);\n        switch (typeof result) {\n          case \"number\":\n            ret = result;\n            break;\n          case \"boolean\":\n            ret = result ? 1 : 0;\n            break;\n          case \"string\":\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          case \"object\":\n            if (result === null) {\n              // null is a valid result for some (e.g., which buffer is bound -\n              // perhaps nothing is bound), but otherwise can mean an invalid\n              // name_, which we need to report as an error\n              switch (name_) {\n                case 0x8894: // ARRAY_BUFFER_BINDING\n                case 0x8B8D: // CURRENT_PROGRAM\n                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING\n                case 0x8CA6: // FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING\n                case 0x8CA7: // RENDERBUFFER_BINDING\n                case 0x8069: // TEXTURE_BINDING_2D\n                case 0x85B5: // WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES\n                case 0x8F36: // COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER\n                case 0x8F37: // COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER\n                case 0x88ED: // PIXEL_PACK_BUFFER_BINDING\n                case 0x88EF: // PIXEL_UNPACK_BUFFER_BINDING\n                case 0x8CAA: // READ_FRAMEBUFFER_BINDING\n                case 0x8919: // SAMPLER_BINDING\n                case 0x8C1D: // TEXTURE_BINDING_2D_ARRAY\n                case 0x806A: // TEXTURE_BINDING_3D\n                case 0x8E25: // TRANSFORM_FEEDBACK_BINDING\n                case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\n                case 0x8A28: // UNIFORM_BUFFER_BINDING\n                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP\n                  ret = 0;\n                  break;\n                }\n                default: {\n                  GL.recordError(0x500); // GL_INVALID_ENUM\n                  return;\n                }\n              }\n            } else if (result instanceof Float32Array ||\n                       result instanceof Uint32Array ||\n                       result instanceof Int32Array ||\n                       result instanceof Array) {\n              for (var i = 0; i < result.length; ++i) {\n                switch (type) {\n                  case 0: HEAP32[(((p)+(i*4))>>2)] = result[i]; break;\n                  case 2: HEAPF32[(((p)+(i*4))>>2)] = result[i]; break;\n                  case 4: HEAP8[(((p)+(i))>>0)] = result[i] ? 1 : 0; break;\n                }\n              }\n              return;\n            } else {\n              try {\n                ret = result.name | 0;\n              } catch(e) {\n                GL.recordError(0x500); // GL_INVALID_ENUM\n                err(`GL_INVALID_ENUM in glGet${type}v: Unknown object returned from WebGL getParameter(${name_})! (error: ${e})`);\n                return;\n              }\n            }\n            break;\n          default:\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            err(`GL_INVALID_ENUM in glGet${type}v: Native code calling glGet${type}v(${name_}) and it returns ${result} of type ${typeof(result)}!`);\n            return;\n        }\n      }\n  \n      switch (type) {\n        case 1: writeI53ToI64(p, ret); break;\n        case 0: HEAP32[((p)>>2)] = ret; break;\n        case 2:   HEAPF32[((p)>>2)] = ret; break;\n        case 4: HEAP8[((p)>>0)] = ret ? 1 : 0; break;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetBooleanv = (name_, p) => emscriptenWebGLGet(name_, p, 4);\n  var _emscripten_glGetBooleanv = _glGetBooleanv;\n\n  /** @suppress {duplicate } */\n  var _glGetBufferParameteri64v = (target, value, data) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\n        // if data == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      writeI53ToI64(data, GLctx.getBufferParameter(target, value));\n    };\n  var _emscripten_glGetBufferParameteri64v = _glGetBufferParameteri64v;\n\n  /** @suppress {duplicate } */\n  var _glGetBufferParameteriv = (target, value, data) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null\n        // pointer. Since calling this function does not make sense if data ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((data)>>2)] = GLctx.getBufferParameter(target, value);\n    };\n  var _emscripten_glGetBufferParameteriv = _glGetBufferParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetError = () => {\n      var error = GLctx.getError() || GL.lastError;\n      GL.lastError = 0/*GL_NO_ERROR*/;\n      return error;\n    };\n  var _emscripten_glGetError = _glGetError;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetFloatv = (name_, p) => emscriptenWebGLGet(name_, p, 2);\n  var _emscripten_glGetFloatv = _glGetFloatv;\n\n  /** @suppress {duplicate } */\n  var _glGetFragDataLocation = (program, name) => {\n      return GLctx.getFragDataLocation(GL.programs[program], UTF8ToString(name));\n    };\n  var _emscripten_glGetFragDataLocation = _glGetFragDataLocation;\n\n  /** @suppress {duplicate } */\n  var _glGetFramebufferAttachmentParameteriv = (target, attachment, pname, params) => {\n      var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\n      if (result instanceof WebGLRenderbuffer ||\n          result instanceof WebGLTexture) {\n        result = result.name | 0;\n      }\n      HEAP32[((params)>>2)] = result;\n    };\n  var _emscripten_glGetFramebufferAttachmentParameteriv = _glGetFramebufferAttachmentParameteriv;\n\n  var emscriptenWebGLGetIndexed = (target, index, data, type) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\n        // if data == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var result = GLctx.getIndexedParameter(target, index);\n      var ret;\n      switch (typeof result) {\n        case 'boolean':\n          ret = result ? 1 : 0;\n          break;\n        case 'number':\n          ret = result;\n          break;\n        case 'object':\n          if (result === null) {\n            switch (target) {\n              case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\n              case 0x8A28: // UNIFORM_BUFFER_BINDING\n                ret = 0;\n                break;\n              default: {\n                GL.recordError(0x500); // GL_INVALID_ENUM\n                return;\n              }\n            }\n          } else if (result instanceof WebGLBuffer) {\n            ret = result.name | 0;\n          } else {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          }\n          break;\n        default:\n          GL.recordError(0x500); // GL_INVALID_ENUM\n          return;\n      }\n  \n      switch (type) {\n        case 1: writeI53ToI64(data, ret); break;\n        case 0: HEAP32[((data)>>2)] = ret; break;\n        case 2: HEAPF32[((data)>>2)] = ret; break;\n        case 4: HEAP8[((data)>>0)] = ret ? 1 : 0; break;\n        default: throw 'internal emscriptenWebGLGetIndexed() error, bad type: ' + type;\n      }\n    };\n  /** @suppress {duplicate } */\n  var _glGetInteger64i_v = (target, index, data) =>\n      emscriptenWebGLGetIndexed(target, index, data, 1);\n  var _emscripten_glGetInteger64i_v = _glGetInteger64i_v;\n\n  /** @suppress {duplicate } */\n  var _glGetInteger64v = (name_, p) => {\n      emscriptenWebGLGet(name_, p, 1);\n    };\n  var _emscripten_glGetInteger64v = _glGetInteger64v;\n\n  /** @suppress {duplicate } */\n  var _glGetIntegeri_v = (target, index, data) =>\n      emscriptenWebGLGetIndexed(target, index, data, 0);\n  var _emscripten_glGetIntegeri_v = _glGetIntegeri_v;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetIntegerv = (name_, p) => emscriptenWebGLGet(name_, p, 0);\n  var _emscripten_glGetIntegerv = _glGetIntegerv;\n\n  /** @suppress {duplicate } */\n  var _glGetInternalformativ = (target, internalformat, pname, bufSize, params) => {\n      if (bufSize < 0) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (!params) {\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\n        // if values == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = GLctx.getInternalformatParameter(target, internalformat, pname);\n      if (ret === null) return;\n      for (var i = 0; i < ret.length && i < bufSize; ++i) {\n        HEAP32[(((params)+(i*4))>>2)] = ret[i];\n      }\n    };\n  var _emscripten_glGetInternalformativ = _glGetInternalformativ;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramBinary = (program, bufSize, length, binaryFormat, binary) => {\n      GL.recordError(0x502/*GL_INVALID_OPERATION*/);\n    };\n  var _emscripten_glGetProgramBinary = _glGetProgramBinary;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramInfoLog = (program, maxLength, length, infoLog) => {\n      var log = GLctx.getProgramInfoLog(GL.programs[program]);\n      if (log === null) log = '(unknown error)';\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetProgramInfoLog = _glGetProgramInfoLog;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramiv = (program, pname, p) => {\n      if (!p) {\n        // GLES2 specification does not specify how to behave if p is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n  \n      if (program >= GL.counter) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n  \n      program = GL.programs[program];\n  \n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        var log = GLctx.getProgramInfoLog(program);\n        if (log === null) log = '(unknown error)';\n        HEAP32[((p)>>2)] = log.length + 1;\n      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\n        if (!program.maxUniformLength) {\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\n            program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxUniformLength;\n      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\n        if (!program.maxAttributeLength) {\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/); ++i) {\n            program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxAttributeLength;\n      } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\n        if (!program.maxUniformBlockNameLength) {\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/); ++i) {\n            program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxUniformBlockNameLength;\n      } else {\n        HEAP32[((p)>>2)] = GLctx.getProgramParameter(program, pname);\n      }\n    };\n  var _emscripten_glGetProgramiv = _glGetProgramiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjecti64vEXT = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param;\n      if (GL.currentContext.version < 2)\n      {\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\n      }\n      else {\n        param = GLctx.getQueryParameter(query, pname);\n      }\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      writeI53ToI64(params, ret);\n    };\n  var _emscripten_glGetQueryObjecti64vEXT = _glGetQueryObjecti64vEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryObjectivEXT = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      HEAP32[((params)>>2)] = ret;\n    };\n  var _emscripten_glGetQueryObjectivEXT = _glGetQueryObjectivEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjectui64vEXT = _glGetQueryObjecti64vEXT;\n  var _emscripten_glGetQueryObjectui64vEXT = _glGetQueryObjectui64vEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryObjectuiv = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param = GLctx.getQueryParameter(query, pname);\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      HEAP32[((params)>>2)] = ret;\n    };\n  var _emscripten_glGetQueryObjectuiv = _glGetQueryObjectuiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjectuivEXT = _glGetQueryObjectivEXT;\n  var _emscripten_glGetQueryObjectuivEXT = _glGetQueryObjectuivEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryiv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getQuery(target, pname);\n    };\n  var _emscripten_glGetQueryiv = _glGetQueryiv;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryivEXT = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.disjointTimerQueryExt['getQueryEXT'](target, pname);\n    };\n  var _emscripten_glGetQueryivEXT = _glGetQueryivEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetRenderbufferParameteriv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getRenderbufferParameter(target, pname);\n    };\n  var _emscripten_glGetRenderbufferParameteriv = _glGetRenderbufferParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetSamplerParameterfv = (sampler, pname, params) => {\n      if (!params) {\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAPF32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\n    };\n  var _emscripten_glGetSamplerParameterfv = _glGetSamplerParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glGetSamplerParameteriv = (sampler, pname, params) => {\n      if (!params) {\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\n    };\n  var _emscripten_glGetSamplerParameteriv = _glGetSamplerParameteriv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetShaderInfoLog = (shader, maxLength, length, infoLog) => {\n      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\n      if (log === null) log = '(unknown error)';\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetShaderInfoLog = _glGetShaderInfoLog;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderPrecisionFormat = (shaderType, precisionType, range, precision) => {\n      var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\n      HEAP32[((range)>>2)] = result.rangeMin;\n      HEAP32[(((range)+(4))>>2)] = result.rangeMax;\n      HEAP32[((precision)>>2)] = result.precision;\n    };\n  var _emscripten_glGetShaderPrecisionFormat = _glGetShaderPrecisionFormat;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderSource = (shader, bufSize, length, source) => {\n      var result = GLctx.getShaderSource(GL.shaders[shader]);\n      if (!result) return; // If an error occurs, nothing will be written to length or source.\n      var numBytesWrittenExclNull = (bufSize > 0 && source) ? stringToUTF8(result, source, bufSize) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetShaderSource = _glGetShaderSource;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderiv = (shader, pname, p) => {\n      if (!p) {\n        // GLES2 specification does not specify how to behave if p is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\n        if (log === null) log = '(unknown error)';\n        // The GLES2 specification says that if the shader has an empty info log,\n        // a value of 0 is returned. Otherwise the log has a null char appended.\n        // (An empty string is falsey, so we can just check that instead of\n        // looking at log.length.)\n        var logLength = log ? log.length + 1 : 0;\n        HEAP32[((p)>>2)] = logLength;\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\n        var source = GLctx.getShaderSource(GL.shaders[shader]);\n        // source may be a null, or the empty string, both of which are falsey\n        // values that we report a 0 length for.\n        var sourceLength = source ? source.length + 1 : 0;\n        HEAP32[((p)>>2)] = sourceLength;\n      } else {\n        HEAP32[((p)>>2)] = GLctx.getShaderParameter(GL.shaders[shader], pname);\n      }\n    };\n  var _emscripten_glGetShaderiv = _glGetShaderiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetString = (name_) => {\n      var ret = GL.stringCache[name_];\n      if (!ret) {\n        switch (name_) {\n          case 0x1F03 /* GL_EXTENSIONS */:\n            ret = stringToNewUTF8(GL.getExtensions().join(' '));\n            break;\n          case 0x1F00 /* GL_VENDOR */:\n          case 0x1F01 /* GL_RENDERER */:\n          case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\n          case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\n            var s = GLctx.getParameter(name_);\n            if (!s) {\n              GL.recordError(0x500/*GL_INVALID_ENUM*/);\n            }\n            ret = s ? stringToNewUTF8(s) : 0;\n            break;\n  \n          case 0x1F02 /* GL_VERSION */:\n            var glVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\n            // return GLES version string corresponding to the version of the WebGL context\n            if (GL.currentContext.version >= 2) glVersion = `OpenGL ES 3.0 (${glVersion})`;\n            else\n            {\n              glVersion = `OpenGL ES 2.0 (${glVersion})`;\n            }\n            ret = stringToNewUTF8(glVersion);\n            break;\n          case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\n            var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\n            // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\n            var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\n            var ver_num = glslVersion.match(ver_re);\n            if (ver_num !== null) {\n              if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\n              glslVersion = `OpenGL ES GLSL ES ${ver_num[1]} (${glslVersion})`;\n            }\n            ret = stringToNewUTF8(glslVersion);\n            break;\n          default:\n            GL.recordError(0x500/*GL_INVALID_ENUM*/);\n            // fall through\n        }\n        GL.stringCache[name_] = ret;\n      }\n      return ret;\n    };\n  var _emscripten_glGetString = _glGetString;\n\n  /** @suppress {duplicate } */\n  var _glGetStringi = (name, index) => {\n      if (GL.currentContext.version < 2) {\n        GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\n        return 0;\n      }\n      var stringiCache = GL.stringiCache[name];\n      if (stringiCache) {\n        if (index < 0 || index >= stringiCache.length) {\n          GL.recordError(0x501/*GL_INVALID_VALUE*/);\n          return 0;\n        }\n        return stringiCache[index];\n      }\n      switch (name) {\n        case 0x1F03 /* GL_EXTENSIONS */:\n          var exts = GL.getExtensions().map((e) => stringToNewUTF8(e));\n          stringiCache = GL.stringiCache[name] = exts;\n          if (index < 0 || index >= stringiCache.length) {\n            GL.recordError(0x501/*GL_INVALID_VALUE*/);\n            return 0;\n          }\n          return stringiCache[index];\n        default:\n          GL.recordError(0x500/*GL_INVALID_ENUM*/);\n          return 0;\n      }\n    };\n  var _emscripten_glGetStringi = _glGetStringi;\n\n  /** @suppress {duplicate } */\n  var _glGetSynciv = (sync, pname, bufSize, length, values) => {\n      if (bufSize < 0) {\n        // GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,\n        // so raise GL_INVALID_VALUE here as well.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (!values) {\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\n        // if values == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = GLctx.getSyncParameter(GL.syncs[sync], pname);\n      if (ret !== null) {\n        HEAP32[((values)>>2)] = ret;\n        if (length) HEAP32[((length)>>2)] = 1; // Report a single value outputted.\n      }\n    };\n  var _emscripten_glGetSynciv = _glGetSynciv;\n\n  /** @suppress {duplicate } */\n  var _glGetTexParameterfv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAPF32[((params)>>2)] = GLctx.getTexParameter(target, pname);\n    };\n  var _emscripten_glGetTexParameterfv = _glGetTexParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glGetTexParameteriv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getTexParameter(target, pname);\n    };\n  var _emscripten_glGetTexParameteriv = _glGetTexParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetTransformFeedbackVarying = (program, index, bufSize, length, size, type, name) => {\n      program = GL.programs[program];\n      var info = GLctx.getTransformFeedbackVarying(program, index);\n      if (!info) return; // If an error occurred, the return parameters length, size, type and name will be unmodified.\n  \n      if (name && bufSize > 0) {\n        var numBytesWrittenExclNull = stringToUTF8(info.name, name, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n      } else {\n        if (length) HEAP32[((length)>>2)] = 0;\n      }\n  \n      if (size) HEAP32[((size)>>2)] = info.size;\n      if (type) HEAP32[((type)>>2)] = info.type;\n    };\n  var _emscripten_glGetTransformFeedbackVarying = _glGetTransformFeedbackVarying;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformBlockIndex = (program, uniformBlockName) => {\n      return GLctx.getUniformBlockIndex(GL.programs[program], UTF8ToString(uniformBlockName));\n    };\n  var _emscripten_glGetUniformBlockIndex = _glGetUniformBlockIndex;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformIndices = (program, uniformCount, uniformNames, uniformIndices) => {\n      if (!uniformIndices) {\n        // GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense\n        // if uniformIndices == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (uniformCount > 0 && (uniformNames == 0 || uniformIndices == 0)) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      var names = [];\n      for (var i = 0; i < uniformCount; i++)\n        names.push(UTF8ToString(HEAP32[(((uniformNames)+(i*4))>>2)]));\n  \n      var result = GLctx.getUniformIndices(program, names);\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to uniformIndices.\n  \n      var len = result.length;\n      for (var i = 0; i < len; i++) {\n        HEAP32[(((uniformIndices)+(i*4))>>2)] = result[i];\n      }\n    };\n  var _emscripten_glGetUniformIndices = _glGetUniformIndices;\n\n  \n  /** @noinline */\n  var webglGetLeftBracePos = (name) => name.slice(-1) == ']' && name.lastIndexOf('[');\n  \n  var webglPrepareUniformLocationsBeforeFirstUse = (program) => {\n      var uniformLocsById = program.uniformLocsById, // Maps GLuint -> WebGLUniformLocation\n        uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, // Maps name -> [uniform array length, GLuint]\n        i, j;\n  \n      // On the first time invocation of glGetUniformLocation on this shader program:\n      // initialize cache data structures and discover which uniforms are arrays.\n      if (!uniformLocsById) {\n        // maps GLint integer locations to WebGLUniformLocations\n        program.uniformLocsById = uniformLocsById = {};\n        // maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations\n        program.uniformArrayNamesById = {};\n  \n        for (i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\n          var u = GLctx.getActiveUniform(program, i);\n          var nm = u.name;\n          var sz = u.size;\n          var lb = webglGetLeftBracePos(nm);\n          var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\n  \n          // Assign a new location.\n          var id = program.uniformIdCounter;\n          program.uniformIdCounter += sz;\n          // Eagerly get the location of the uniformArray[0] base element.\n          // The remaining indices >0 will be left for lazy evaluation to\n          // improve performance. Those may never be needed to fetch, if the\n          // application fills arrays always in full starting from the first\n          // element of the array.\n          uniformSizeAndIdsByName[arrayName] = [sz, id];\n  \n          // Store placeholder integers in place that highlight that these\n          // >0 index locations are array indices pending population.\n          for (j = 0; j < sz; ++j) {\n            uniformLocsById[id] = j;\n            program.uniformArrayNamesById[id++] = arrayName;\n          }\n        }\n      }\n    };\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glGetUniformLocation = (program, name) => {\n  \n      name = UTF8ToString(name);\n  \n      if (program = GL.programs[program]) {\n        webglPrepareUniformLocationsBeforeFirstUse(program);\n        var uniformLocsById = program.uniformLocsById; // Maps GLuint -> WebGLUniformLocation\n        var arrayIndex = 0;\n        var uniformBaseName = name;\n  \n        // Invariant: when populating integer IDs for uniform locations, we must\n        // maintain the precondition that arrays reside in contiguous addresses,\n        // i.e. for a 'vec4 colors[10];', colors[4] must be at location\n        // colors[0]+4.  However, user might call glGetUniformLocation(program,\n        // \"colors\") for an array, so we cannot discover based on the user input\n        // arguments whether the uniform we are dealing with is an array. The only\n        // way to discover which uniforms are arrays is to enumerate over all the\n        // active uniforms in the program.\n        var leftBrace = webglGetLeftBracePos(name);\n  \n        // If user passed an array accessor \"[index]\", parse the array index off the accessor.\n        if (leftBrace > 0) {\n          arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0; // \"index]\", coerce parseInt(']') with >>>0 to treat \"foo[]\" as \"foo[0]\" and foo[-1] as unsigned out-of-bounds.\n          uniformBaseName = name.slice(0, leftBrace);\n        }\n  \n        // Have we cached the location of this uniform before?\n        // A pair [array length, GLint of the uniform location]\n        var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName];\n  \n        // If an uniform with this name exists, and if its index is within the\n        // array limits (if it's even an array), query the WebGLlocation, or\n        // return an existing cached location.\n        if (sizeAndId && arrayIndex < sizeAndId[0]) {\n          arrayIndex += sizeAndId[1]; // Add the base location of the uniform to the array index offset.\n          if ((uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name))) {\n            return arrayIndex;\n          }\n        }\n      }\n      else {\n        // N.b. we are currently unable to distinguish between GL program IDs that\n        // never existed vs GL program IDs that have been deleted, so report\n        // GL_INVALID_VALUE in both cases.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n      }\n      return -1;\n    };\n  var _emscripten_glGetUniformLocation = _glGetUniformLocation;\n\n  var webglGetUniformLocation = (location) => {\n      var p = GLctx.currentProgram;\n  \n      if (p) {\n        var webglLoc = p.uniformLocsById[location];\n        // p.uniformLocsById[location] stores either an integer, or a\n        // WebGLUniformLocation.\n        // If an integer, we have not yet bound the location, so do it now. The\n        // integer value specifies the array index we should bind to.\n        if (typeof webglLoc == 'number') {\n          p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? `[${webglLoc}]` : ''));\n        }\n        // Else an already cached WebGLUniformLocation, return it.\n        return webglLoc;\n      } else {\n        GL.recordError(0x502/*GL_INVALID_OPERATION*/);\n      }\n    };\n  \n  \n  /** @suppress{checkTypes} */\n  var emscriptenWebGLGetUniform = (program, location, params, type) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if params ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      webglPrepareUniformLocationsBeforeFirstUse(program);\n      var data = GLctx.getUniform(program, webglGetUniformLocation(location));\n      if (typeof data == 'number' || typeof data == 'boolean') {\n        switch (type) {\n          case 0: HEAP32[((params)>>2)] = data; break;\n          case 2: HEAPF32[((params)>>2)] = data; break;\n        }\n      } else {\n        for (var i = 0; i < data.length; i++) {\n          switch (type) {\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\n          }\n        }\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetUniformfv = (program, location, params) => {\n      emscriptenWebGLGetUniform(program, location, params, 2);\n    };\n  var _emscripten_glGetUniformfv = _glGetUniformfv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetUniformiv = (program, location, params) => {\n      emscriptenWebGLGetUniform(program, location, params, 0);\n    };\n  var _emscripten_glGetUniformiv = _glGetUniformiv;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformuiv = (program, location, params) =>\n      emscriptenWebGLGetUniform(program, location, params, 0);\n  var _emscripten_glGetUniformuiv = _glGetUniformuiv;\n\n  /** @suppress{checkTypes} */\n  var emscriptenWebGLGetVertexAttrib = (index, pname, params, type) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if params ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (GL.currentContext.clientBuffers[index].enabled) {\n        err(\"glGetVertexAttrib*v on client-side array: not supported, bad data returned\");\n      }\n      var data = GLctx.getVertexAttrib(index, pname);\n      if (pname == 0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/) {\n        HEAP32[((params)>>2)] = data && data[\"name\"];\n      } else if (typeof data == 'number' || typeof data == 'boolean') {\n        switch (type) {\n          case 0: HEAP32[((params)>>2)] = data; break;\n          case 2: HEAPF32[((params)>>2)] = data; break;\n          case 5: HEAP32[((params)>>2)] = Math.fround(data); break;\n        }\n      } else {\n        for (var i = 0; i < data.length; i++) {\n          switch (type) {\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 5: HEAP32[(((params)+(i*4))>>2)] = Math.fround(data[i]); break;\n          }\n        }\n      }\n    };\n  /** @suppress {duplicate } */\n  var _glGetVertexAttribIiv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\n    };\n  var _emscripten_glGetVertexAttribIiv = _glGetVertexAttribIiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribIuiv = _glGetVertexAttribIiv;\n  var _emscripten_glGetVertexAttribIuiv = _glGetVertexAttribIuiv;\n\n  /** @suppress {duplicate } */\n  var _glGetVertexAttribPointerv = (index, pname, pointer) => {\n      if (!pointer) {\n        // GLES2 specification does not specify how to behave if pointer is a null\n        // pointer. Since calling this function does not make sense if pointer ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (GL.currentContext.clientBuffers[index].enabled) {\n        err(\"glGetVertexAttribPointer on client-side array: not supported, bad data returned\");\n      }\n      HEAP32[((pointer)>>2)] = GLctx.getVertexAttribOffset(index, pname);\n    };\n  var _emscripten_glGetVertexAttribPointerv = _glGetVertexAttribPointerv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribfv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was\n      // specified using the function glVertexAttrib*f(), otherwise the results\n      // are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2);\n    };\n  var _emscripten_glGetVertexAttribfv = _glGetVertexAttribfv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribiv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was\n      // specified using the function glVertexAttrib*f(), otherwise the results\n      // are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5);\n    };\n  var _emscripten_glGetVertexAttribiv = _glGetVertexAttribiv;\n\n  /** @suppress {duplicate } */\n  function _glHint(x0, x1) { GLctx.hint(x0, x1) }\n  var _emscripten_glHint = _glHint;\n\n  /** @suppress {duplicate } */\n  var _glInvalidateFramebuffer = (target, numAttachments, attachments) => {\n      var list = tempFixedLengthArray[numAttachments];\n      for (var i = 0; i < numAttachments; i++) {\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\n      }\n  \n      GLctx.invalidateFramebuffer(target, list);\n    };\n  var _emscripten_glInvalidateFramebuffer = _glInvalidateFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glInvalidateSubFramebuffer = (target, numAttachments, attachments, x, y, width, height) => {\n      var list = tempFixedLengthArray[numAttachments];\n      for (var i = 0; i < numAttachments; i++) {\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\n      }\n  \n      GLctx.invalidateSubFramebuffer(target, list, x, y, width, height);\n    };\n  var _emscripten_glInvalidateSubFramebuffer = _glInvalidateSubFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsBuffer = (buffer) => {\n      var b = GL.buffers[buffer];\n      if (!b) return 0;\n      return GLctx.isBuffer(b);\n    };\n  var _emscripten_glIsBuffer = _glIsBuffer;\n\n  /** @suppress {duplicate } */\n  function _glIsEnabled(x0) { return GLctx.isEnabled(x0) }\n  var _emscripten_glIsEnabled = _glIsEnabled;\n\n  /** @suppress {duplicate } */\n  var _glIsFramebuffer = (framebuffer) => {\n      var fb = GL.framebuffers[framebuffer];\n      if (!fb) return 0;\n      return GLctx.isFramebuffer(fb);\n    };\n  var _emscripten_glIsFramebuffer = _glIsFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsProgram = (program) => {\n      program = GL.programs[program];\n      if (!program) return 0;\n      return GLctx.isProgram(program);\n    };\n  var _emscripten_glIsProgram = _glIsProgram;\n\n  /** @suppress {duplicate } */\n  var _glIsQuery = (id) => {\n      var query = GL.queries[id];\n      if (!query) return 0;\n      return GLctx.isQuery(query);\n    };\n  var _emscripten_glIsQuery = _glIsQuery;\n\n  /** @suppress {duplicate } */\n  var _glIsQueryEXT = (id) => {\n      var query = GL.queries[id];\n      if (!query) return 0;\n      return GLctx.disjointTimerQueryExt['isQueryEXT'](query);\n    };\n  var _emscripten_glIsQueryEXT = _glIsQueryEXT;\n\n  /** @suppress {duplicate } */\n  var _glIsRenderbuffer = (renderbuffer) => {\n      var rb = GL.renderbuffers[renderbuffer];\n      if (!rb) return 0;\n      return GLctx.isRenderbuffer(rb);\n    };\n  var _emscripten_glIsRenderbuffer = _glIsRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsSampler = (id) => {\n      var sampler = GL.samplers[id];\n      if (!sampler) return 0;\n      return GLctx.isSampler(sampler);\n    };\n  var _emscripten_glIsSampler = _glIsSampler;\n\n  /** @suppress {duplicate } */\n  var _glIsShader = (shader) => {\n      var s = GL.shaders[shader];\n      if (!s) return 0;\n      return GLctx.isShader(s);\n    };\n  var _emscripten_glIsShader = _glIsShader;\n\n  /** @suppress {duplicate } */\n  var _glIsSync = (sync) => GLctx.isSync(GL.syncs[sync]);\n  var _emscripten_glIsSync = _glIsSync;\n\n  /** @suppress {duplicate } */\n  var _glIsTexture = (id) => {\n      var texture = GL.textures[id];\n      if (!texture) return 0;\n      return GLctx.isTexture(texture);\n    };\n  var _emscripten_glIsTexture = _glIsTexture;\n\n  /** @suppress {duplicate } */\n  var _glIsTransformFeedback = (id) => GLctx.isTransformFeedback(GL.transformFeedbacks[id]);\n  var _emscripten_glIsTransformFeedback = _glIsTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glIsVertexArray = (array) => {\n  \n      var vao = GL.vaos[array];\n      if (!vao) return 0;\n      return GLctx.isVertexArray(vao);\n    };\n  var _emscripten_glIsVertexArray = _glIsVertexArray;\n\n  \n  /** @suppress {duplicate } */\n  var _glIsVertexArrayOES = _glIsVertexArray;\n  var _emscripten_glIsVertexArrayOES = _glIsVertexArrayOES;\n\n  /** @suppress {duplicate } */\n  function _glLineWidth(x0) { GLctx.lineWidth(x0) }\n  var _emscripten_glLineWidth = _glLineWidth;\n\n  /** @suppress {duplicate } */\n  var _glLinkProgram = (program) => {\n      program = GL.programs[program];\n      GLctx.linkProgram(program);\n      // Invalidate earlier computed uniform->ID mappings, those have now become stale\n      program.uniformLocsById = 0; // Mark as null-like so that glGetUniformLocation() knows to populate this again.\n      program.uniformSizeAndIdsByName = {};\n  \n    };\n  var _emscripten_glLinkProgram = _glLinkProgram;\n\n  /** @suppress {duplicate } */\n  function _glPauseTransformFeedback() { GLctx.pauseTransformFeedback() }\n  var _emscripten_glPauseTransformFeedback = _glPauseTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glPixelStorei = (pname, param) => {\n      if (pname == 0xCF5 /* GL_UNPACK_ALIGNMENT */) {\n        GL.unpackAlignment = param;\n      }\n      GLctx.pixelStorei(pname, param);\n    };\n  var _emscripten_glPixelStorei = _glPixelStorei;\n\n  /** @suppress {duplicate } */\n  function _glPolygonOffset(x0, x1) { GLctx.polygonOffset(x0, x1) }\n  var _emscripten_glPolygonOffset = _glPolygonOffset;\n\n  /** @suppress {duplicate } */\n  var _glProgramBinary = (program, binaryFormat, binary, length) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glProgramBinary = _glProgramBinary;\n\n  /** @suppress {duplicate } */\n  var _glProgramParameteri = (program, pname, value) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glProgramParameteri = _glProgramParameteri;\n\n  /** @suppress {duplicate } */\n  var _glQueryCounterEXT = (id, target) => {\n      GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id], target);\n    };\n  var _emscripten_glQueryCounterEXT = _glQueryCounterEXT;\n\n  /** @suppress {duplicate } */\n  function _glReadBuffer(x0) { GLctx.readBuffer(x0) }\n  var _emscripten_glReadBuffer = _glReadBuffer;\n\n  var computeUnpackAlignedImageSize = (width, height, sizePerPixel, alignment) => {\n      function roundedToNextMultipleOf(x, y) {\n        return (x + y - 1) & -y;\n      }\n      var plainRowSize = width * sizePerPixel;\n      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);\n      return height * alignedRowSize;\n    };\n  \n  var colorChannelsInGlTextureFormat = (format) => {\n      // Micro-optimizations for size: map format to size by subtracting smallest\n      // enum value (0x1902) from all values first.  Also omit the most common\n      // size value (1) from the list, which is assumed by formats not on the\n      // list.\n      var colorChannels = {\n        // 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,\n        // 0x1906 /* GL_ALPHA */ - 0x1902: 1,\n        5: 3,\n        6: 4,\n        // 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,\n        8: 2,\n        29502: 3,\n        29504: 4,\n        // 0x1903 /* GL_RED */ - 0x1902: 1,\n        26917: 2,\n        26918: 2,\n        // 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,\n        29846: 3,\n        29847: 4\n      };\n      return colorChannels[format - 0x1902]||1;\n    };\n  \n  var heapObjectForWebGLType = (type) => {\n      // Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare\n      // smaller values for the heap, for shorter generated code size.\n      // Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.\n      // (since most types are HEAPU16)\n      type -= 0x1400;\n      if (type == 0) return HEAP8;\n  \n      if (type == 1) return HEAPU8;\n  \n      if (type == 2) return HEAP16;\n  \n      if (type == 4) return HEAP32;\n  \n      if (type == 6) return HEAPF32;\n  \n      if (type == 5\n        || type == 28922\n        || type == 28520\n        || type == 30779\n        || type == 30782\n        )\n        return HEAPU32;\n  \n      return HEAPU16;\n    };\n  \n  var heapAccessShiftForWebGLHeap = (heap) => 31 - Math.clz32(heap.BYTES_PER_ELEMENT);\n  \n  var emscriptenWebGLGetTexPixelData = (type, format, width, height, pixels, internalFormat) => {\n      var heap = heapObjectForWebGLType(type);\n      var shift = heapAccessShiftForWebGLHeap(heap);\n      var byteSize = 1<<shift;\n      var sizePerPixel = colorChannelsInGlTextureFormat(format) * byteSize;\n      var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel, GL.unpackAlignment);\n      return heap.subarray(pixels >> shift, pixels + bytes >> shift);\n    };\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glReadPixels = (x, y, width, height, format, type, pixels) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelPackBufferBinding) {\n          GLctx.readPixels(x, y, width, height, format, type, pixels);\n        } else {\n          var heap = heapObjectForWebGLType(type);\n          GLctx.readPixels(x, y, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n        }\n        return;\n      }\n      var pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);\n      if (!pixelData) {\n        GL.recordError(0x500/*GL_INVALID_ENUM*/);\n        return;\n      }\n      GLctx.readPixels(x, y, width, height, format, type, pixelData);\n    };\n  var _emscripten_glReadPixels = _glReadPixels;\n\n  /** @suppress {duplicate } */\n  var _glReleaseShaderCompiler = () => {\n      // NOP (as allowed by GLES 2.0 spec)\n    };\n  var _emscripten_glReleaseShaderCompiler = _glReleaseShaderCompiler;\n\n  /** @suppress {duplicate } */\n  function _glRenderbufferStorage(x0, x1, x2, x3) { GLctx.renderbufferStorage(x0, x1, x2, x3) }\n  var _emscripten_glRenderbufferStorage = _glRenderbufferStorage;\n\n  /** @suppress {duplicate } */\n  function _glRenderbufferStorageMultisample(x0, x1, x2, x3, x4) { GLctx.renderbufferStorageMultisample(x0, x1, x2, x3, x4) }\n  var _emscripten_glRenderbufferStorageMultisample = _glRenderbufferStorageMultisample;\n\n  /** @suppress {duplicate } */\n  function _glResumeTransformFeedback() { GLctx.resumeTransformFeedback() }\n  var _emscripten_glResumeTransformFeedback = _glResumeTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glSampleCoverage = (value, invert) => {\n      GLctx.sampleCoverage(value, !!invert);\n    };\n  var _emscripten_glSampleCoverage = _glSampleCoverage;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameterf = (sampler, pname, param) => {\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameterf = _glSamplerParameterf;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameterfv = (sampler, pname, params) => {\n      var param = HEAPF32[((params)>>2)];\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameterfv = _glSamplerParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameteri = (sampler, pname, param) => {\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameteri = _glSamplerParameteri;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameteriv = (sampler, pname, params) => {\n      var param = HEAP32[((params)>>2)];\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameteriv = _glSamplerParameteriv;\n\n  /** @suppress {duplicate } */\n  function _glScissor(x0, x1, x2, x3) { GLctx.scissor(x0, x1, x2, x3) }\n  var _emscripten_glScissor = _glScissor;\n\n  /** @suppress {duplicate } */\n  var _glShaderBinary = (count, shaders, binaryformat, binary, length) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glShaderBinary = _glShaderBinary;\n\n  /** @suppress {duplicate } */\n  var _glShaderSource = (shader, count, string, length) => {\n      var source = GL.getSource(shader, count, string, length);\n  \n      GLctx.shaderSource(GL.shaders[shader], source);\n    };\n  var _emscripten_glShaderSource = _glShaderSource;\n\n  /** @suppress {duplicate } */\n  function _glStencilFunc(x0, x1, x2) { GLctx.stencilFunc(x0, x1, x2) }\n  var _emscripten_glStencilFunc = _glStencilFunc;\n\n  /** @suppress {duplicate } */\n  function _glStencilFuncSeparate(x0, x1, x2, x3) { GLctx.stencilFuncSeparate(x0, x1, x2, x3) }\n  var _emscripten_glStencilFuncSeparate = _glStencilFuncSeparate;\n\n  /** @suppress {duplicate } */\n  function _glStencilMask(x0) { GLctx.stencilMask(x0) }\n  var _emscripten_glStencilMask = _glStencilMask;\n\n  /** @suppress {duplicate } */\n  function _glStencilMaskSeparate(x0, x1) { GLctx.stencilMaskSeparate(x0, x1) }\n  var _emscripten_glStencilMaskSeparate = _glStencilMaskSeparate;\n\n  /** @suppress {duplicate } */\n  function _glStencilOp(x0, x1, x2) { GLctx.stencilOp(x0, x1, x2) }\n  var _emscripten_glStencilOp = _glStencilOp;\n\n  /** @suppress {duplicate } */\n  function _glStencilOpSeparate(x0, x1, x2, x3) { GLctx.stencilOpSeparate(x0, x1, x2, x3) }\n  var _emscripten_glStencilOpSeparate = _glStencilOpSeparate;\n\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glTexImage2D = (target, level, internalFormat, width, height, border, format, type, pixels) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding) {\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\n        } else if (pixels) {\n          var heap = heapObjectForWebGLType(type);\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n        } else {\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, null);\n        }\n        return;\n      }\n      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null);\n    };\n  var _emscripten_glTexImage2D = _glTexImage2D;\n\n  \n  /** @suppress {duplicate } */\n  var _glTexImage3D = (target, level, internalFormat, width, height, depth, border, format, type, pixels) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels);\n      } else if (pixels) {\n        var heap = heapObjectForWebGLType(type);\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n      } else {\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, null);\n      }\n    };\n  var _emscripten_glTexImage3D = _glTexImage3D;\n\n  /** @suppress {duplicate } */\n  function _glTexParameterf(x0, x1, x2) { GLctx.texParameterf(x0, x1, x2) }\n  var _emscripten_glTexParameterf = _glTexParameterf;\n\n  /** @suppress {duplicate } */\n  var _glTexParameterfv = (target, pname, params) => {\n      var param = HEAPF32[((params)>>2)];\n      GLctx.texParameterf(target, pname, param);\n    };\n  var _emscripten_glTexParameterfv = _glTexParameterfv;\n\n  /** @suppress {duplicate } */\n  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }\n  var _emscripten_glTexParameteri = _glTexParameteri;\n\n  /** @suppress {duplicate } */\n  var _glTexParameteriv = (target, pname, params) => {\n      var param = HEAP32[((params)>>2)];\n      GLctx.texParameteri(target, pname, param);\n    };\n  var _emscripten_glTexParameteriv = _glTexParameteriv;\n\n  /** @suppress {duplicate } */\n  function _glTexStorage2D(x0, x1, x2, x3, x4) { GLctx.texStorage2D(x0, x1, x2, x3, x4) }\n  var _emscripten_glTexStorage2D = _glTexStorage2D;\n\n  /** @suppress {duplicate } */\n  function _glTexStorage3D(x0, x1, x2, x3, x4, x5) { GLctx.texStorage3D(x0, x1, x2, x3, x4, x5) }\n  var _emscripten_glTexStorage3D = _glTexStorage3D;\n\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glTexSubImage2D = (target, level, xoffset, yoffset, width, height, format, type, pixels) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding) {\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\n        } else if (pixels) {\n          var heap = heapObjectForWebGLType(type);\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n        } else {\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, null);\n        }\n        return;\n      }\n      var pixelData = null;\n      if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0);\n      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\n    };\n  var _emscripten_glTexSubImage2D = _glTexSubImage2D;\n\n  \n  /** @suppress {duplicate } */\n  var _glTexSubImage3D = (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);\n      } else if (pixels) {\n        var heap = heapObjectForWebGLType(type);\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n      } else {\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, null);\n      }\n    };\n  var _emscripten_glTexSubImage3D = _glTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  var _glTransformFeedbackVaryings = (program, count, varyings, bufferMode) => {\n      program = GL.programs[program];\n      var vars = [];\n      for (var i = 0; i < count; i++)\n        vars.push(UTF8ToString(HEAP32[(((varyings)+(i*4))>>2)]));\n  \n      GLctx.transformFeedbackVaryings(program, vars, bufferMode);\n    };\n  var _emscripten_glTransformFeedbackVaryings = _glTransformFeedbackVaryings;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1f = (location, v0) => {\n      GLctx.uniform1f(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1f = _glUniform1f;\n\n  \n  var miniTempWebGLFloatBuffers = [];\n  \n  /** @suppress {duplicate } */\n  var _glUniform1fv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, value>>2, count);\n        return;\n      }\n  \n      if (count <= 288) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[count-1];\n        for (var i = 0; i < count; ++i) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*4)>>2);\n      }\n      GLctx.uniform1fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform1fv = _glUniform1fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1i = (location, v0) => {\n      GLctx.uniform1i(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1i = _glUniform1i;\n\n  \n  var miniTempWebGLIntBuffers = [];\n  \n  /** @suppress {duplicate } */\n  var _glUniform1iv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, value>>2, count);\n        return;\n      }\n  \n      if (count <= 288) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[count-1];\n        for (var i = 0; i < count; ++i) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*4)>>2);\n      }\n      GLctx.uniform1iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform1iv = _glUniform1iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform1ui = (location, v0) => {\n      GLctx.uniform1ui(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1ui = _glUniform1ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform1uiv = (location, count, value) => {\n      count && GLctx.uniform1uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count);\n    };\n  var _emscripten_glUniform1uiv = _glUniform1uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2f = (location, v0, v1) => {\n      GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2f = _glUniform2f;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform2fv = (location, count, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*2);\n        return;\n      }\n  \n      if (count <= 144) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[2*count-1];\n        for (var i = 0; i < 2*count; i += 2) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*8)>>2);\n      }\n      GLctx.uniform2fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform2fv = _glUniform2fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2i = (location, v0, v1) => {\n      GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2i = _glUniform2i;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform2iv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, value>>2, count*2);\n        return;\n      }\n  \n      if (count <= 144) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[2*count-1];\n        for (var i = 0; i < 2*count; i += 2) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*8)>>2);\n      }\n      GLctx.uniform2iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform2iv = _glUniform2iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform2ui = (location, v0, v1) => {\n      GLctx.uniform2ui(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2ui = _glUniform2ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform2uiv = (location, count, value) => {\n      count && GLctx.uniform2uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*2);\n    };\n  var _emscripten_glUniform2uiv = _glUniform2uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3f = (location, v0, v1, v2) => {\n      GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3f = _glUniform3f;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform3fv = (location, count, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*3);\n        return;\n      }\n  \n      if (count <= 96) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[3*count-1];\n        for (var i = 0; i < 3*count; i += 3) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*12)>>2);\n      }\n      GLctx.uniform3fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform3fv = _glUniform3fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3i = (location, v0, v1, v2) => {\n      GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3i = _glUniform3i;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform3iv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, value>>2, count*3);\n        return;\n      }\n  \n      if (count <= 96) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[3*count-1];\n        for (var i = 0; i < 3*count; i += 3) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*12)>>2);\n      }\n      GLctx.uniform3iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform3iv = _glUniform3iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform3ui = (location, v0, v1, v2) => {\n      GLctx.uniform3ui(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3ui = _glUniform3ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform3uiv = (location, count, value) => {\n      count && GLctx.uniform3uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*3);\n    };\n  var _emscripten_glUniform3uiv = _glUniform3uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4f = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4f = _glUniform4f;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform4fv = (location, count, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*4);\n        return;\n      }\n  \n      if (count <= 72) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[4*count-1];\n        // hoist the heap out of the loop for size and for pthreads+growth.\n        var heap = HEAPF32;\n        value >>= 2;\n        for (var i = 0; i < 4 * count; i += 4) {\n          var dst = value + i;\n          view[i] = heap[dst];\n          view[i + 1] = heap[dst + 1];\n          view[i + 2] = heap[dst + 2];\n          view[i + 3] = heap[dst + 3];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\n      }\n      GLctx.uniform4fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform4fv = _glUniform4fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4i = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4i = _glUniform4i;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform4iv = (location, count, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, value>>2, count*4);\n        return;\n      }\n  \n      if (count <= 72) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[4*count-1];\n        for (var i = 0; i < 4*count; i += 4) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\n          view[i+3] = HEAP32[(((value)+(4*i+12))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*16)>>2);\n      }\n      GLctx.uniform4iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform4iv = _glUniform4iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform4ui = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4ui(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4ui = _glUniform4ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform4uiv = (location, count, value) => {\n      count && GLctx.uniform4uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*4);\n    };\n  var _emscripten_glUniform4uiv = _glUniform4uiv;\n\n  /** @suppress {duplicate } */\n  var _glUniformBlockBinding = (program, uniformBlockIndex, uniformBlockBinding) => {\n      program = GL.programs[program];\n  \n      GLctx.uniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding);\n    };\n  var _emscripten_glUniformBlockBinding = _glUniformBlockBinding;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix2fv = (location, count, transpose, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*4);\n        return;\n      }\n  \n      if (count <= 72) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[4*count-1];\n        for (var i = 0; i < 4*count; i += 4) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\n      }\n      GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, view);\n    };\n  var _emscripten_glUniformMatrix2fv = _glUniformMatrix2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix2x3fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\n    };\n  var _emscripten_glUniformMatrix2x3fv = _glUniformMatrix2x3fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix2x4fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\n    };\n  var _emscripten_glUniformMatrix2x4fv = _glUniformMatrix2x4fv;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix3fv = (location, count, transpose, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*9);\n        return;\n      }\n  \n      if (count <= 32) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[9*count-1];\n        for (var i = 0; i < 9*count; i += 9) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\n          view[i+4] = HEAPF32[(((value)+(4*i+16))>>2)];\n          view[i+5] = HEAPF32[(((value)+(4*i+20))>>2)];\n          view[i+6] = HEAPF32[(((value)+(4*i+24))>>2)];\n          view[i+7] = HEAPF32[(((value)+(4*i+28))>>2)];\n          view[i+8] = HEAPF32[(((value)+(4*i+32))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*36)>>2);\n      }\n      GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, view);\n    };\n  var _emscripten_glUniformMatrix3fv = _glUniformMatrix3fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix3x2fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\n    };\n  var _emscripten_glUniformMatrix3x2fv = _glUniformMatrix3x2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix3x4fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\n    };\n  var _emscripten_glUniformMatrix3x4fv = _glUniformMatrix3x4fv;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix4fv = (location, count, transpose, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*16);\n        return;\n      }\n  \n      if (count <= 18) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[16*count-1];\n        // hoist the heap out of the loop for size and for pthreads+growth.\n        var heap = HEAPF32;\n        value >>= 2;\n        for (var i = 0; i < 16 * count; i += 16) {\n          var dst = value + i;\n          view[i] = heap[dst];\n          view[i + 1] = heap[dst + 1];\n          view[i + 2] = heap[dst + 2];\n          view[i + 3] = heap[dst + 3];\n          view[i + 4] = heap[dst + 4];\n          view[i + 5] = heap[dst + 5];\n          view[i + 6] = heap[dst + 6];\n          view[i + 7] = heap[dst + 7];\n          view[i + 8] = heap[dst + 8];\n          view[i + 9] = heap[dst + 9];\n          view[i + 10] = heap[dst + 10];\n          view[i + 11] = heap[dst + 11];\n          view[i + 12] = heap[dst + 12];\n          view[i + 13] = heap[dst + 13];\n          view[i + 14] = heap[dst + 14];\n          view[i + 15] = heap[dst + 15];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*64)>>2);\n      }\n      GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, view);\n    };\n  var _emscripten_glUniformMatrix4fv = _glUniformMatrix4fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix4x2fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\n    };\n  var _emscripten_glUniformMatrix4x2fv = _glUniformMatrix4x2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix4x3fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\n    };\n  var _emscripten_glUniformMatrix4x3fv = _glUniformMatrix4x3fv;\n\n  /** @suppress {duplicate } */\n  var _glUseProgram = (program) => {\n      program = GL.programs[program];\n      GLctx.useProgram(program);\n      // Record the currently active program so that we can access the uniform\n      // mapping table of that program.\n      GLctx.currentProgram = program;\n    };\n  var _emscripten_glUseProgram = _glUseProgram;\n\n  /** @suppress {duplicate } */\n  var _glValidateProgram = (program) => {\n      GLctx.validateProgram(GL.programs[program]);\n    };\n  var _emscripten_glValidateProgram = _glValidateProgram;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib1f(x0, x1) { GLctx.vertexAttrib1f(x0, x1) }\n  var _emscripten_glVertexAttrib1f = _glVertexAttrib1f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib1fv = (index, v) => {\n  \n      GLctx.vertexAttrib1f(index, HEAPF32[v>>2]);\n    };\n  var _emscripten_glVertexAttrib1fv = _glVertexAttrib1fv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib2f(x0, x1, x2) { GLctx.vertexAttrib2f(x0, x1, x2) }\n  var _emscripten_glVertexAttrib2f = _glVertexAttrib2f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib2fv = (index, v) => {\n  \n      GLctx.vertexAttrib2f(index, HEAPF32[v>>2], HEAPF32[v+4>>2]);\n    };\n  var _emscripten_glVertexAttrib2fv = _glVertexAttrib2fv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib3f(x0, x1, x2, x3) { GLctx.vertexAttrib3f(x0, x1, x2, x3) }\n  var _emscripten_glVertexAttrib3f = _glVertexAttrib3f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib3fv = (index, v) => {\n  \n      GLctx.vertexAttrib3f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2]);\n    };\n  var _emscripten_glVertexAttrib3fv = _glVertexAttrib3fv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib4f(x0, x1, x2, x3, x4) { GLctx.vertexAttrib4f(x0, x1, x2, x3, x4) }\n  var _emscripten_glVertexAttrib4f = _glVertexAttrib4f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib4fv = (index, v) => {\n  \n      GLctx.vertexAttrib4f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2], HEAPF32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttrib4fv = _glVertexAttrib4fv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisor = (index, divisor) => {\n      GLctx.vertexAttribDivisor(index, divisor);\n    };\n  var _emscripten_glVertexAttribDivisor = _glVertexAttribDivisor;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorANGLE = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorANGLE = _glVertexAttribDivisorANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorARB = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorARB = _glVertexAttribDivisorARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorEXT = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorEXT = _glVertexAttribDivisorEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorNV = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorNV = _glVertexAttribDivisorNV;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttribI4i(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4i(x0, x1, x2, x3, x4) }\n  var _emscripten_glVertexAttribI4i = _glVertexAttribI4i;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4iv = (index, v) => {\n      GLctx.vertexAttribI4i(index, HEAP32[v>>2], HEAP32[v+4>>2], HEAP32[v+8>>2], HEAP32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttribI4iv = _glVertexAttribI4iv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttribI4ui(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4ui(x0, x1, x2, x3, x4) }\n  var _emscripten_glVertexAttribI4ui = _glVertexAttribI4ui;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4uiv = (index, v) => {\n      GLctx.vertexAttribI4ui(index, HEAPU32[v>>2], HEAPU32[v+4>>2], HEAPU32[v+8>>2], HEAPU32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttribI4uiv = _glVertexAttribI4uiv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribIPointer = (index, size, type, stride, ptr) => {\n      GLctx.vertexAttribIPointer(index, size, type, stride, ptr);\n    };\n  var _emscripten_glVertexAttribIPointer = _glVertexAttribIPointer;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribPointer = (index, size, type, normalized, stride, ptr) => {\n      var cb = GL.currentContext.clientBuffers[index];\n      if (!GLctx.currentArrayBufferBinding) {\n        cb.size = size;\n        cb.type = type;\n        cb.normalized = normalized;\n        cb.stride = stride;\n        cb.ptr = ptr;\n        cb.clientside = true;\n        cb.vertexAttribPointerAdaptor = function(index, size, type, normalized, stride, ptr) {\n          this.vertexAttribPointer(index, size, type, normalized, stride, ptr);\n        };\n        return;\n      }\n      cb.clientside = false;\n      GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\n    };\n  var _emscripten_glVertexAttribPointer = _glVertexAttribPointer;\n\n  /** @suppress {duplicate } */\n  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }\n  var _emscripten_glViewport = _glViewport;\n\n  /** @suppress {duplicate } */\n  var _glWaitSync = (sync, flags, timeout_low, timeout_high) => {\n      // See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)\n      var timeout = convertI32PairToI53(timeout_low, timeout_high);\n      GLctx.waitSync(GL.syncs[sync], flags, timeout);\n    };\n  var _emscripten_glWaitSync = _glWaitSync;\n\n  var _emscripten_has_asyncify = () => 1;\n\n  var _emscripten_memcpy_js = (dest, src, num) => HEAPU8.copyWithin(dest, src, src + num);\n\n  \n  \n  \n  \n  \n  \n  \n  var doRequestFullscreen = (target, strategy) => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      if (!target.requestFullscreen\n        && !target.webkitRequestFullscreen\n        ) {\n        return -3;\n      }\n  \n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\n  \n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\n      if (!canPerformRequests) {\n        if (strategy.deferUntilInEventHandler) {\n          JSEvents.deferCall(JSEvents_requestFullscreen, 1 /* priority over pointer lock */, [target, strategy]);\n          return 1;\n        }\n        return -2;\n      }\n  \n      return JSEvents_requestFullscreen(target, strategy);\n    };\n  \n  \n  var _emscripten_request_fullscreen_strategy = (target, deferUntilInEventHandler, fullscreenStrategy) => {\n      var strategy = {\n        scaleMode: HEAP32[((fullscreenStrategy)>>2)],\n        canvasResolutionScaleMode: HEAP32[(((fullscreenStrategy)+(4))>>2)],\n        filteringMode: HEAP32[(((fullscreenStrategy)+(8))>>2)],\n        deferUntilInEventHandler,\n        canvasResizedCallback: HEAP32[(((fullscreenStrategy)+(12))>>2)],\n        canvasResizedCallbackUserData: HEAP32[(((fullscreenStrategy)+(16))>>2)]\n      };\n  \n      return doRequestFullscreen(target, strategy);\n    };\n\n  \n  \n  var _emscripten_request_pointerlock = (target, deferUntilInEventHandler) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n      if (!target.requestPointerLock\n        ) {\n        return -1;\n      }\n  \n      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();\n  \n      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.\n      if (!canPerformRequests) {\n        if (deferUntilInEventHandler) {\n          JSEvents.deferCall(requestPointerLock, 2 /* priority below fullscreen */, [target]);\n          return 1;\n        }\n        return -2;\n      }\n  \n      return requestPointerLock(target);\n    };\n\n  var getHeapMax = () =>\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\n      // for any code that deals with heap sizes, which would require special\n      // casing all heap size related code to treat 0 specially.\n      2147483648;\n  \n  var growMemory = (size) => {\n      var b = wasmMemory.buffer;\n      var pages = (size - b.byteLength + 65535) / 65536;\n      try {\n        // round size grow request up to wasm page size (fixed 64KB per spec)\n        wasmMemory.grow(pages); // .grow() takes a delta compared to the previous size\n        updateMemoryViews();\n        return 1 /*success*/;\n      } catch(e) {\n      }\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\n      // anyhow)\n    };\n  var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      requestedSize >>>= 0;\n      // With multithreaded builds, races can happen (another thread might increase the size\n      // in between), so return a failure, and let the caller retry.\n  \n      // Memory resize rules:\n      // 1.  Always increase heap size to at least the requested size, rounded up\n      //     to next page multiple.\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\n      //     geometrically: increase the heap size according to\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\n      //     linearly: increase the heap size by at least\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\n      // 4.  If we were unable to allocate as much memory, it may be due to\n      //     over-eager decision to excessively reserve due to (3) above.\n      //     Hence if an allocation fails, cut down on the amount of excess\n      //     growth, in an attempt to succeed to perform a smaller allocation.\n  \n      // A limit is set for how much we can grow. We should not exceed that\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n  \n      var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n  \n      // Loop through potential heap size increases. If we attempt a too eager\n      // reservation that fails, cut down on the attempted size and reserve a\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\n  \n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  \n        var replacement = growMemory(newSize);\n        if (replacement) {\n  \n          return true;\n        }\n      }\n      return false;\n    };\n\n  \n  /** @suppress {checkTypes} */\n  var disableGamepadApiIfItThrows = () => {\n      try {\n        navigator.getGamepads();\n      } catch(e) {\n        navigator.getGamepads = null; // Disable getGamepads() so that other functions will not attempt to use it.\n        return 1;\n      }\n    };\n  var _emscripten_sample_gamepad_data = () => {\n      if (!navigator.getGamepads || disableGamepadApiIfItThrows()) return -1;\n      return (JSEvents.lastGamepadState = navigator.getGamepads())\n        ? 0 : -1;\n    };\n\n  \n  \n  var registerBeforeUnloadEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) => {\n      var beforeUnloadEventHandlerFunc = (e = event) => {\n        // Note: This is always called on the main browser thread, since it needs synchronously return a value!\n        var confirmationMessage = ((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, 0, userData);\n  \n        if (confirmationMessage) {\n          confirmationMessage = UTF8ToString(confirmationMessage);\n        }\n        if (confirmationMessage) {\n          e.preventDefault();\n          e.returnValue = confirmationMessage;\n          return confirmationMessage;\n        }\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: beforeUnloadEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_beforeunload_callback_on_thread = (userData, callbackfunc, targetThread) => {\n      if (typeof onbeforeunload == 'undefined') return -1;\n      // beforeunload callback can only be registered on the main browser thread, because the page will go away immediately after returning from the handler,\n      // and there is no time to start proxying it anywhere.\n      if (targetThread !== 1) return -5;\n      return registerBeforeUnloadEventCallback(2, userData, true, callbackfunc, 28, \"beforeunload\");\n    };\n\n  \n  \n  \n  var registerFocusEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.focusEvent) JSEvents.focusEvent = _malloc(256);\n  \n      var focusEventHandlerFunc = (e = event) => {\n        var nodeName = JSEvents.getNodeNameForTarget(e.target);\n        var id = e.target.id ? e.target.id : '';\n  \n        var focusEvent = JSEvents.focusEvent;\n        stringToUTF8(nodeName, focusEvent + 0, 128);\n        stringToUTF8(id, focusEvent + 128, 128);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, focusEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: focusEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_blur_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      return registerFocusEventCallback(target, userData, useCapture, callbackfunc, 12, \"blur\", targetThread);\n    };\n\n\n  \n  var _emscripten_set_element_css_size = (target, width, height) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      target.style.width = width + \"px\";\n      target.style.height = height + \"px\";\n  \n      return 0;\n    };\n\n  var _emscripten_set_focus_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      return registerFocusEventCallback(target, userData, useCapture, callbackfunc, 13, \"focus\", targetThread);\n    };\n\n  \n  \n  \n  var fillFullscreenChangeEventData = (eventStruct) => {\n      var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;\n      var isFullscreen = !!fullscreenElement;\n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP32[((eventStruct)>>2)] = isFullscreen;\n      HEAP32[(((eventStruct)+(4))>>2)] = JSEvents.fullscreenEnabled();\n      // If transitioning to fullscreen, report info about the element that is now fullscreen.\n      // If transitioning to windowed mode, report info about the element that just was fullscreen.\n      var reportedElement = isFullscreen ? fullscreenElement : JSEvents.previousFullscreenElement;\n      var nodeName = JSEvents.getNodeNameForTarget(reportedElement);\n      var id = reportedElement?.id || '';\n      stringToUTF8(nodeName, eventStruct + 8, 128);\n      stringToUTF8(id, eventStruct + 136, 128);\n      HEAP32[(((eventStruct)+(264))>>2)] = reportedElement ? reportedElement.clientWidth : 0;\n      HEAP32[(((eventStruct)+(268))>>2)] = reportedElement ? reportedElement.clientHeight : 0;\n      HEAP32[(((eventStruct)+(272))>>2)] = screen.width;\n      HEAP32[(((eventStruct)+(276))>>2)] = screen.height;\n      if (isFullscreen) {\n        JSEvents.previousFullscreenElement = fullscreenElement;\n      }\n    };\n  \n  \n  var registerFullscreenChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.fullscreenChangeEvent) JSEvents.fullscreenChangeEvent = _malloc(280);\n  \n      var fullscreenChangeEventhandlerFunc = (e = event) => {\n        var fullscreenChangeEvent = JSEvents.fullscreenChangeEvent;\n  \n        fillFullscreenChangeEventData(fullscreenChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, fullscreenChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: fullscreenChangeEventhandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  \n  var _emscripten_set_fullscreenchange_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      if (!JSEvents.fullscreenEnabled()) return -1;\n      target = findEventTarget(target);\n      if (!target) return -4;\n  \n      // Unprefixed Fullscreen API shipped in Chromium 71 (https://bugs.chromium.org/p/chromium/issues/detail?id=383813)\n      // As of Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitfullscreenchange. TODO: revisit this check once Safari ships unprefixed version.\n      registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"webkitfullscreenchange\", targetThread);\n  \n      return registerFullscreenChangeEventCallback(target, userData, useCapture, callbackfunc, 19, \"fullscreenchange\", targetThread);\n    };\n\n  \n  \n  \n  var registerGamepadEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.gamepadEvent) JSEvents.gamepadEvent = _malloc(1432);\n  \n      var gamepadEventHandlerFunc = (e = event) => {\n        var gamepadEvent = JSEvents.gamepadEvent;\n        fillGamepadEventData(gamepadEvent, e[\"gamepad\"]);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, gamepadEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        allowsDeferredCalls: true,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: gamepadEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_gamepadconnected_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      if (!navigator.getGamepads || disableGamepadApiIfItThrows()) return -1;\n      return registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 26, \"gamepadconnected\", targetThread);\n    };\n\n  \n  var _emscripten_set_gamepaddisconnected_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      if (!navigator.getGamepads || disableGamepadApiIfItThrows()) return -1;\n      return registerGamepadEventCallback(2, userData, useCapture, callbackfunc, 27, \"gamepaddisconnected\", targetThread);\n    };\n\n  \n  \n  \n  var registerKeyEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.keyEvent) JSEvents.keyEvent = _malloc(176);\n  \n      var keyEventHandlerFunc = (e) => {\n  \n        var keyEventData = JSEvents.keyEvent;\n        HEAPF64[((keyEventData)>>3)] = e.timeStamp;\n  \n        var idx =((keyEventData)>>2);\n  \n        HEAP32[idx + 2] = e.location;\n        HEAP32[idx + 3] = e.ctrlKey;\n        HEAP32[idx + 4] = e.shiftKey;\n        HEAP32[idx + 5] = e.altKey;\n        HEAP32[idx + 6] = e.metaKey;\n        HEAP32[idx + 7] = e.repeat;\n        HEAP32[idx + 8] = e.charCode;\n        HEAP32[idx + 9] = e.keyCode;\n        HEAP32[idx + 10] = e.which;\n        stringToUTF8(e.key || '', keyEventData + 44, 32);\n        stringToUTF8(e.code || '', keyEventData + 76, 32);\n        stringToUTF8(e.char || '', keyEventData + 108, 32);\n        stringToUTF8(e.locale || '', keyEventData + 140, 32);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, keyEventData, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target: findEventTarget(target),\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: keyEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_keydown_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 2, \"keydown\", targetThread);\n\n  var _emscripten_set_keypress_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 1, \"keypress\", targetThread);\n\n  var _emscripten_set_keyup_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerKeyEventCallback(target, userData, useCapture, callbackfunc, 3, \"keyup\", targetThread);\n\n  \n  var _emscripten_set_main_loop = (func, fps, simulateInfiniteLoop) => {\n      var browserIterationFunc = (() => dynCall_v.call(null, func));\n      setMainLoop(browserIterationFunc, fps, simulateInfiniteLoop);\n    };\n\n  \n  \n  \n  var fillMouseEventData = (eventStruct, e, target) => {\n      HEAPF64[((eventStruct)>>3)] = e.timeStamp;\n      var idx = ((eventStruct)>>2);\n      HEAP32[idx + 2] = e.screenX;\n      HEAP32[idx + 3] = e.screenY;\n      HEAP32[idx + 4] = e.clientX;\n      HEAP32[idx + 5] = e.clientY;\n      HEAP32[idx + 6] = e.ctrlKey;\n      HEAP32[idx + 7] = e.shiftKey;\n      HEAP32[idx + 8] = e.altKey;\n      HEAP32[idx + 9] = e.metaKey;\n      HEAP16[idx*2 + 20] = e.button;\n      HEAP16[idx*2 + 21] = e.buttons;\n  \n      HEAP32[idx + 11] = e[\"movementX\"]\n        ;\n  \n      HEAP32[idx + 12] = e[\"movementY\"]\n        ;\n  \n      var rect = getBoundingClientRect(target);\n      HEAP32[idx + 13] = e.clientX - rect.left;\n      HEAP32[idx + 14] = e.clientY - rect.top;\n  \n    };\n  \n  \n  var registerMouseEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.mouseEvent) JSEvents.mouseEvent = _malloc(72);\n      target = findEventTarget(target);\n  \n      var mouseEventHandlerFunc = (e = event) => {\n        // TODO: Make this access thread safe, or this could update live while app is reading it.\n        fillMouseEventData(JSEvents.mouseEvent, e, target);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, JSEvents.mouseEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: eventTypeString != 'mousemove' && eventTypeString != 'mouseenter' && eventTypeString != 'mouseleave', // Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: mouseEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_mousedown_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 5, \"mousedown\", targetThread);\n\n  var _emscripten_set_mouseenter_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 33, \"mouseenter\", targetThread);\n\n  var _emscripten_set_mouseleave_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 34, \"mouseleave\", targetThread);\n\n  var _emscripten_set_mousemove_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 8, \"mousemove\", targetThread);\n\n  var _emscripten_set_mouseup_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerMouseEventCallback(target, userData, useCapture, callbackfunc, 6, \"mouseup\", targetThread);\n\n  \n  \n  \n  var fillPointerlockChangeEventData = (eventStruct) => {\n      var pointerLockElement = document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement || document.msPointerLockElement;\n      var isPointerlocked = !!pointerLockElement;\n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP32[((eventStruct)>>2)] = isPointerlocked;\n      var nodeName = JSEvents.getNodeNameForTarget(pointerLockElement);\n      var id = pointerLockElement?.id || '';\n      stringToUTF8(nodeName, eventStruct + 4, 128);\n      stringToUTF8(id, eventStruct + 132, 128);\n    };\n  \n  \n  var registerPointerlockChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.pointerlockChangeEvent) JSEvents.pointerlockChangeEvent = _malloc(260);\n  \n      var pointerlockChangeEventHandlerFunc = (e = event) => {\n        var pointerlockChangeEvent = JSEvents.pointerlockChangeEvent;\n        fillPointerlockChangeEventData(pointerlockChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, pointerlockChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: pointerlockChangeEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  \n  /** @suppress {missingProperties} */\n  var _emscripten_set_pointerlockchange_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      // TODO: Currently not supported in pthreads or in --proxy-to-worker mode. (In pthreads mode, document object is not defined)\n      if (!document || !document.body || (!document.body.requestPointerLock && !document.body.mozRequestPointerLock && !document.body.webkitRequestPointerLock && !document.body.msRequestPointerLock)) {\n        return -1;\n      }\n  \n      target = findEventTarget(target);\n      if (!target) return -4;\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mozpointerlockchange\", targetThread);\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"webkitpointerlockchange\", targetThread);\n      registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"mspointerlockchange\", targetThread);\n      return registerPointerlockChangeEventCallback(target, userData, useCapture, callbackfunc, 20, \"pointerlockchange\", targetThread);\n    };\n\n  \n  \n  var registerUiEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.uiEvent) JSEvents.uiEvent = _malloc(36);\n  \n      target = findEventTarget(target);\n  \n      var uiEventHandlerFunc = (e = event) => {\n        if (e.target != target) {\n          // Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that\n          // was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log\n          // message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,\n          // causing a new scroll, etc..\n          return;\n        }\n        var b = document.body; // Take document.body to a variable, Closure compiler does not outline access to it on its own.\n        if (!b) {\n          // During a page unload 'body' can be null, with \"Cannot read property 'clientWidth' of null\" being thrown\n          return;\n        }\n        var uiEvent = JSEvents.uiEvent;\n        HEAP32[((uiEvent)>>2)] = e.detail;\n        HEAP32[(((uiEvent)+(4))>>2)] = b.clientWidth;\n        HEAP32[(((uiEvent)+(8))>>2)] = b.clientHeight;\n        HEAP32[(((uiEvent)+(12))>>2)] = innerWidth;\n        HEAP32[(((uiEvent)+(16))>>2)] = innerHeight;\n        HEAP32[(((uiEvent)+(20))>>2)] = outerWidth;\n        HEAP32[(((uiEvent)+(24))>>2)] = outerHeight;\n        HEAP32[(((uiEvent)+(28))>>2)] = pageXOffset;\n        HEAP32[(((uiEvent)+(32))>>2)] = pageYOffset;\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, uiEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: uiEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_resize_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerUiEventCallback(target, userData, useCapture, callbackfunc, 10, \"resize\", targetThread);\n\n  \n  \n  \n  var registerTouchEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.touchEvent) JSEvents.touchEvent = _malloc(1696);\n  \n      target = findEventTarget(target);\n  \n      var touchEventHandlerFunc = (e) => {\n        var t, touches = {}, et = e.touches;\n        // To ease marshalling different kinds of touches that browser reports (all touches are listed in e.touches,\n        // only changed touches in e.changedTouches, and touches on target at a.targetTouches), mark a boolean in\n        // each Touch object so that we can later loop only once over all touches we see to marshall over to Wasm.\n  \n        for (var i = 0; i < et.length; ++i) {\n          t = et[i];\n          // Browser might recycle the generated Touch objects between each frame (Firefox on Android), so reset any\n          // changed/target states we may have set from previous frame.\n          t.isChanged = t.onTarget = 0;\n          touches[t.identifier] = t;\n        }\n        // Mark which touches are part of the changedTouches list.\n        for (var i = 0; i < e.changedTouches.length; ++i) {\n          t = e.changedTouches[i];\n          t.isChanged = 1;\n          touches[t.identifier] = t;\n        }\n        // Mark which touches are part of the targetTouches list.\n        for (var i = 0; i < e.targetTouches.length; ++i) {\n          touches[e.targetTouches[i].identifier].onTarget = 1;\n        }\n  \n        var touchEvent = JSEvents.touchEvent;\n        HEAPF64[((touchEvent)>>3)] = e.timeStamp;\n        var idx =((touchEvent)>>2);// Pre-shift the ptr to index to HEAP32 to save code size\n        HEAP32[idx + 3] = e.ctrlKey;\n        HEAP32[idx + 4] = e.shiftKey;\n        HEAP32[idx + 5] = e.altKey;\n        HEAP32[idx + 6] = e.metaKey;\n        idx += 7; // Advance to the start of the touch array.\n        var targetRect = getBoundingClientRect(target);\n        var numTouches = 0;\n        for (var i in touches) {\n          t = touches[i];\n          HEAP32[idx + 0] = t.identifier;\n          HEAP32[idx + 1] = t.screenX;\n          HEAP32[idx + 2] = t.screenY;\n          HEAP32[idx + 3] = t.clientX;\n          HEAP32[idx + 4] = t.clientY;\n          HEAP32[idx + 5] = t.pageX;\n          HEAP32[idx + 6] = t.pageY;\n          HEAP32[idx + 7] = t.isChanged;\n          HEAP32[idx + 8] = t.onTarget;\n          HEAP32[idx + 9] = t.clientX - targetRect.left;\n          HEAP32[idx + 10] = t.clientY - targetRect.top;\n  \n          idx += 13;\n  \n          if (++numTouches > 31) {\n            break;\n          }\n        }\n        HEAP32[(((touchEvent)+(8))>>2)] = numTouches;\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, touchEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: eventTypeString == 'touchstart' || eventTypeString == 'touchend',\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: touchEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  var _emscripten_set_touchcancel_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 25, \"touchcancel\", targetThread);\n\n  var _emscripten_set_touchend_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 23, \"touchend\", targetThread);\n\n  var _emscripten_set_touchmove_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 24, \"touchmove\", targetThread);\n\n  var _emscripten_set_touchstart_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) =>\n      registerTouchEventCallback(target, userData, useCapture, callbackfunc, 22, \"touchstart\", targetThread);\n\n  \n  var fillVisibilityChangeEventData = (eventStruct) => {\n      var visibilityStates = [ \"hidden\", \"visible\", \"prerender\", \"unloaded\" ];\n      var visibilityState = visibilityStates.indexOf(document.visibilityState);\n  \n      // Assigning a boolean to HEAP32 with expected type coercion.\n      /** @suppress{checkTypes} */\n      HEAP32[((eventStruct)>>2)] = document.hidden;\n      HEAP32[(((eventStruct)+(4))>>2)] = visibilityState;\n    };\n  \n  \n  var registerVisibilityChangeEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.visibilityChangeEvent) JSEvents.visibilityChangeEvent = _malloc(8);\n  \n      var visibilityChangeEventHandlerFunc = (e = event) => {\n        var visibilityChangeEvent = JSEvents.visibilityChangeEvent;\n  \n        fillVisibilityChangeEventData(visibilityChangeEvent);\n  \n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, visibilityChangeEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: visibilityChangeEventHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_visibilitychange_callback_on_thread = (userData, useCapture, callbackfunc, targetThread) => {\n      return registerVisibilityChangeEventCallback(specialHTMLTargets[1], userData, useCapture, callbackfunc, 21, \"visibilitychange\", targetThread);\n    };\n\n  \n  \n  \n  \n  var registerWheelEventCallback = (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString, targetThread) => {\n      if (!JSEvents.wheelEvent) JSEvents.wheelEvent = _malloc(104);\n  \n      // The DOM Level 3 events spec event 'wheel'\n      var wheelHandlerFunc = (e = event) => {\n        var wheelEvent = JSEvents.wheelEvent;\n        fillMouseEventData(wheelEvent, e, target);\n        HEAPF64[(((wheelEvent)+(72))>>3)] = e[\"deltaX\"];\n        HEAPF64[(((wheelEvent)+(80))>>3)] = e[\"deltaY\"];\n        HEAPF64[(((wheelEvent)+(88))>>3)] = e[\"deltaZ\"];\n        HEAP32[(((wheelEvent)+(96))>>2)] = e[\"deltaMode\"];\n        if (((a1, a2, a3) => dynCall_iiii.apply(null, [callbackfunc, a1, a2, a3]))(eventTypeId, wheelEvent, userData)) e.preventDefault();\n      };\n  \n      var eventHandler = {\n        target,\n        allowsDeferredCalls: true,\n        eventTypeString,\n        callbackfunc,\n        handlerFunc: wheelHandlerFunc,\n        useCapture\n      };\n      return JSEvents.registerOrRemoveHandler(eventHandler);\n    };\n  \n  var _emscripten_set_wheel_callback_on_thread = (target, userData, useCapture, callbackfunc, targetThread) => {\n      target = findEventTarget(target);\n      if (!target) return -4;\n      if (typeof target.onwheel != 'undefined') {\n        return registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, \"wheel\", targetThread);\n      } else {\n        return -1;\n      }\n    };\n\n  \n  var _emscripten_set_window_title = (title) => document.title = UTF8ToString(title);\n\n  var _emscripten_sleep = (ms) => {\n      // emscripten_sleep() does not return a value, but we still need a |return|\n      // here for stack switching support (ASYNCIFY=2). In that mode this function\n      // returns a Promise instead of nothing, and that Promise is what tells the\n      // wasm VM to pause the stack.\n      return Asyncify.handleSleep((wakeUp) => safeSetTimeout(wakeUp, ms));\n    };\n  _emscripten_sleep.isAsync = true;\n\n  var ENV = {\n  };\n  \n  var getExecutableName = () => {\n      return thisProgram || './this.program';\n    };\n  var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        // Default values.\n        // Browser language detection #8751\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\n        var env = {\n          'USER': 'web_user',\n          'LOGNAME': 'web_user',\n          'PATH': '/',\n          'PWD': '/',\n          'HOME': '/home/web_user',\n          'LANG': lang,\n          '_': getExecutableName()\n        };\n        // Apply the user-provided values, if any.\n        for (var x in ENV) {\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\n          // explicitly set to be so. We allow user code to do that to\n          // force variables with default values to remain unset.\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n  \n  var stringToAscii = (str, buffer) => {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[((buffer++)>>0)] = str.charCodeAt(i);\n      }\n      // Null-terminate the string\n      HEAP8[((buffer)>>0)] = 0;\n    };\n  \n  var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      getEnvStrings().forEach((string, i) => {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(((__environ)+(i*4))>>2)] = ptr;\n        stringToAscii(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    };\n\n  \n  var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[((penviron_count)>>2)] = strings.length;\n      var bufSize = 0;\n      strings.forEach((string) => bufSize += string.length + 1);\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\n      return 0;\n    };\n\n\n  function _fd_close(fd) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      FS.close(stream);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  function _fd_fdstat_get(fd, pbuf) {\n  try {\n  \n      var rightsBase = 0;\n      var rightsInheriting = 0;\n      var flags = 0;\n      {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        // All character devices are terminals (other things a Linux system would\n        // assume is a character device, like the mouse, we have special APIs for).\n        var type = stream.tty ? 2 :\n                   FS.isDir(stream.mode) ? 3 :\n                   FS.isLink(stream.mode) ? 7 :\n                   4;\n      }\n      HEAP8[((pbuf)>>0)] = type;\n      HEAP16[(((pbuf)+(2))>>1)] = flags;\n      (tempI64 = [rightsBase>>>0,(tempDouble = rightsBase,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(8))>>2)] = tempI64[0],HEAP32[(((pbuf)+(12))>>2)] = tempI64[1]);\n      (tempI64 = [rightsInheriting>>>0,(tempDouble = rightsInheriting,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((pbuf)+(16))>>2)] = tempI64[0],HEAP32[(((pbuf)+(20))>>2)] = tempI64[1]);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  /** @param {number=} offset */\n  var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break; // nothing more to read\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n  \n  function _fd_read(fd, iov, iovcnt, pnum) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = doReadv(stream, iov, iovcnt);\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  \n  function _fd_seek(fd,offset_low, offset_high,whence,newOffset) {\n    var offset = convertI32PairToI53Checked(offset_low, offset_high);;\n  \n    \n  try {\n  \n      if (isNaN(offset)) return 61;\n      var stream = SYSCALLS.getStreamFromFD(fd);\n      FS.llseek(stream, offset, whence);\n      (tempI64 = [stream.position>>>0,(tempDouble = stream.position,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((newOffset)>>2)] = tempI64[0],HEAP32[(((newOffset)+(4))>>2)] = tempI64[1]);\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  ;\n  }\n\n  /** @param {number=} offset */\n  var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n  \n  function _fd_write(fd, iov, iovcnt, pnum) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = doWritev(stream, iov, iovcnt);\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n\n  \n  var arraySum = (array, index) => {\n      var sum = 0;\n      for (var i = 0; i <= index; sum += array[i++]) {\n        // no-op\n      }\n      return sum;\n    };\n  \n  \n  var MONTH_DAYS_LEAP = [31,29,31,30,31,30,31,31,30,31,30,31];\n  \n  var MONTH_DAYS_REGULAR = [31,28,31,30,31,30,31,31,30,31,30,31];\n  var addDays = (date, days) => {\n      var newDate = new Date(date.getTime());\n      while (days > 0) {\n        var leap = isLeapYear(newDate.getFullYear());\n        var currentMonth = newDate.getMonth();\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\n  \n        if (days > daysInCurrentMonth-newDate.getDate()) {\n          // we spill over to next month\n          days -= (daysInCurrentMonth-newDate.getDate()+1);\n          newDate.setDate(1);\n          if (currentMonth < 11) {\n            newDate.setMonth(currentMonth+1)\n          } else {\n            newDate.setMonth(0);\n            newDate.setFullYear(newDate.getFullYear()+1);\n          }\n        } else {\n          // we stay in current month\n          newDate.setDate(newDate.getDate()+days);\n          return newDate;\n        }\n      }\n  \n      return newDate;\n    };\n  \n  \n  \n  \n  var writeArrayToMemory = (array, buffer) => {\n      HEAP8.set(array, buffer);\n    };\n  \n  var _strftime = (s, maxsize, format, tm) => {\n      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html\n  \n      var tm_zone = HEAPU32[(((tm)+(40))>>2)];\n  \n      var date = {\n        tm_sec: HEAP32[((tm)>>2)],\n        tm_min: HEAP32[(((tm)+(4))>>2)],\n        tm_hour: HEAP32[(((tm)+(8))>>2)],\n        tm_mday: HEAP32[(((tm)+(12))>>2)],\n        tm_mon: HEAP32[(((tm)+(16))>>2)],\n        tm_year: HEAP32[(((tm)+(20))>>2)],\n        tm_wday: HEAP32[(((tm)+(24))>>2)],\n        tm_yday: HEAP32[(((tm)+(28))>>2)],\n        tm_isdst: HEAP32[(((tm)+(32))>>2)],\n        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''\n      };\n      \n  \n      var pattern = UTF8ToString(format);\n  \n      // expand format\n      var EXPANSION_RULES_1 = {\n        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013\n        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y\n        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d\n        '%h': '%b',                       // Equivalent to %b\n        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation\n        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation\n        '%T': '%H:%M:%S',                 // Replaced by the time\n        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation\n        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation\n        // Modified Conversion Specifiers\n        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.\n        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.\n        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.\n        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.\n        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.\n        '%EY': '%Y',                      // Replaced by the full alternative year representation.\n        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.\n        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.\n        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.\n        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.\n        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.\n        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.\n        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.\n        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).\n        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.\n        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.\n        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.\n        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.\n        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.\n      };\n      for (var rule in EXPANSION_RULES_1) {\n        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\n      }\n  \n      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  \n      function leadingSomething(value, digits, character) {\n        var str = typeof value == 'number' ? value.toString() : (value || '');\n        while (str.length < digits) {\n          str = character[0]+str;\n        }\n        return str;\n      }\n  \n      function leadingNulls(value, digits) {\n        return leadingSomething(value, digits, '0');\n      }\n  \n      function compareByDay(date1, date2) {\n        function sgn(value) {\n          return value < 0 ? -1 : (value > 0 ? 1 : 0);\n        }\n  \n        var compare;\n        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {\n          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {\n            compare = sgn(date1.getDate()-date2.getDate());\n          }\n        }\n        return compare;\n      }\n  \n      function getFirstWeekStartDate(janFourth) {\n          switch (janFourth.getDay()) {\n            case 0: // Sunday\n              return new Date(janFourth.getFullYear()-1, 11, 29);\n            case 1: // Monday\n              return janFourth;\n            case 2: // Tuesday\n              return new Date(janFourth.getFullYear(), 0, 3);\n            case 3: // Wednesday\n              return new Date(janFourth.getFullYear(), 0, 2);\n            case 4: // Thursday\n              return new Date(janFourth.getFullYear(), 0, 1);\n            case 5: // Friday\n              return new Date(janFourth.getFullYear()-1, 11, 31);\n            case 6: // Saturday\n              return new Date(janFourth.getFullYear()-1, 11, 30);\n          }\n      }\n  \n      function getWeekBasedYear(date) {\n          var thisDate = addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);\n  \n          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);\n  \n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n  \n          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n            // this date is after the start of the first week of this year\n            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n              return thisDate.getFullYear()+1;\n            }\n            return thisDate.getFullYear();\n          }\n          return thisDate.getFullYear()-1;\n      }\n  \n      var EXPANSION_RULES_2 = {\n        '%a': (date) => WEEKDAYS[date.tm_wday].substring(0,3) ,\n        '%A': (date) => WEEKDAYS[date.tm_wday],\n        '%b': (date) => MONTHS[date.tm_mon].substring(0,3),\n        '%B': (date) => MONTHS[date.tm_mon],\n        '%C': (date) => {\n          var year = date.tm_year+1900;\n          return leadingNulls((year/100)|0,2);\n        },\n        '%d': (date) => leadingNulls(date.tm_mday, 2),\n        '%e': (date) => leadingSomething(date.tm_mday, 2, ' '),\n        '%g': (date) => {\n          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.\n          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes\n          // January 4th, which is also the week that includes the first Thursday of the year, and\n          // is also the first week that contains at least four days in the year.\n          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of\n          // the last week of the preceding year; thus, for Saturday 2nd January 1999,\n          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,\n          // or 31st is a Monday, it and any following days are part of week 1 of the following year.\n          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.\n  \n          return getWeekBasedYear(date).toString().substring(2);\n        },\n        '%G': (date) => getWeekBasedYear(date),\n        '%H': (date) => leadingNulls(date.tm_hour, 2),\n        '%I': (date) => {\n          var twelveHour = date.tm_hour;\n          if (twelveHour == 0) twelveHour = 12;\n          else if (twelveHour > 12) twelveHour -= 12;\n          return leadingNulls(twelveHour, 2);\n        },\n        '%j': (date) => {\n          // Day of the year (001-366)\n          return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year+1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon-1), 3);\n        },\n        '%m': (date) => leadingNulls(date.tm_mon+1, 2),\n        '%M': (date) => leadingNulls(date.tm_min, 2),\n        '%n': () => '\\n',\n        '%p': (date) => {\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\n            return 'AM';\n          }\n          return 'PM';\n        },\n        '%S': (date) => leadingNulls(date.tm_sec, 2),\n        '%t': () => '\\t',\n        '%u': (date) => date.tm_wday || 7,\n        '%U': (date) => {\n          var days = date.tm_yday + 7 - date.tm_wday;\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        '%V': (date) => {\n          // Replaced by the week number of the year (Monday as the first day of the week)\n          // as a decimal number [01,53]. If the week containing 1 January has four\n          // or more days in the new year, then it is considered week 1.\n          // Otherwise, it is the last week of the previous year, and the next week is week 1.\n          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]\n          var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7 ) / 7);\n          // If 1 Jan is just 1-3 days past Monday, the previous week\n          // is also in this year.\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n            val++;\n          }\n          if (!val) {\n            val = 52;\n            // If 31 December of prev year a Thursday, or Friday of a\n            // leap year, then the prev year has 53 weeks.\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n            if (dec31 == 4 || (dec31 == 5 && isLeapYear(date.tm_year%400-1))) {\n              val++;\n            }\n          } else if (val == 53) {\n            // If 1 January is not a Thursday, and not a Wednesday of a\n            // leap year, then this year has only 52 weeks.\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year)))\n              val = 1;\n          }\n          return leadingNulls(val, 2);\n        },\n        '%w': (date) => date.tm_wday,\n        '%W': (date) => {\n          var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        '%y': (date) => {\n          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]\n          return (date.tm_year+1900).toString().substring(2);\n        },\n        // Replaced by the year as a decimal number (for example, 1997). [ tm_year]\n        '%Y': (date) => date.tm_year+1900,\n        '%z': (date) => {\n          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).\n          // For example, \"-0430\" means 4 hours 30 minutes behind UTC (west of Greenwich).\n          var off = date.tm_gmtoff;\n          var ahead = off >= 0;\n          off = Math.abs(off) / 60;\n          // convert from minutes into hhmm format (which means 60 minutes = 100 units)\n          off = (off / 60)*100 + (off % 60);\n          return (ahead ? '+' : '-') + String(\"0000\" + off).slice(-4);\n        },\n        '%Z': (date) => date.tm_zone,\n        '%%': () => '%'\n      };\n  \n      // Replace %% with a pair of NULLs (which cannot occur in a C string), then\n      // re-inject them after processing.\n      pattern = pattern.replace(/%%/g, '\\0\\0')\n      for (var rule in EXPANSION_RULES_2) {\n        if (pattern.includes(rule)) {\n          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\n        }\n      }\n      pattern = pattern.replace(/\\0\\0/g, '%')\n  \n      var bytes = intArrayFromString(pattern, false);\n      if (bytes.length > maxsize) {\n        return 0;\n      }\n  \n      writeArrayToMemory(bytes, s);\n      return bytes.length-1;\n    };\n\n  var _strftime_l = (s, maxsize, format, tm, loc) => {\n      return _strftime(s, maxsize, format, tm); // no locale support yet\n    };\n\n  var _system = (command) => {\n      // int system(const char *command);\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/system.html\n      // Can't call external programs.\n      if (!command) return 0; // no shell available\n      setErrNo(52);\n      return -1;\n    };\n\n\n\n\n\n\n  var runAndAbortIfError = (func) => {\n      try {\n        return func();\n      } catch (e) {\n        abort(e);\n      }\n    };\n  \n  \n  var sigToWasmTypes = (sig) => {\n      var typeNames = {\n        'i': 'i32',\n        'j': 'i64',\n        'f': 'f32',\n        'd': 'f64',\n        'e': 'externref',\n        'p': 'i32',\n      };\n      var type = {\n        parameters: [],\n        results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]\n      };\n      for (var i = 1; i < sig.length; ++i) {\n        type.parameters.push(typeNames[sig[i]]);\n      }\n      return type;\n    };\n  \n  var runtimeKeepalivePush = () => {\n      runtimeKeepaliveCounter += 1;\n    };\n  \n  var runtimeKeepalivePop = () => {\n      runtimeKeepaliveCounter -= 1;\n    };\n  \n  \n  var Asyncify = {\n  instrumentWasmImports(imports) {\n        var importPattern = /^(invoke_.*|__asyncjs__.*)$/;\n  \n        for (let [x, original] of Object.entries(imports)) {\n          let sig = original.sig;\n          if (typeof original == 'function') {\n            let isAsyncifyImport = original.isAsync || importPattern.test(x);\n          }\n        }\n      },\n  instrumentWasmExports(exports) {\n        var ret = {};\n        for (let [x, original] of Object.entries(exports)) {\n          if (typeof original == 'function') {\n            ret[x] = function() {\n              Asyncify.exportCallStack.push(x);\n              try {\n                return original.apply(null, arguments);\n              } finally {\n                if (!ABORT) {\n                  var y = Asyncify.exportCallStack.pop();\n                  Asyncify.maybeStopUnwind();\n                }\n              }\n            };\n          } else {\n            ret[x] = original;\n          }\n        }\n        return ret;\n      },\n  State:{\n  Normal:0,\n  Unwinding:1,\n  Rewinding:2,\n  Disabled:3,\n  },\n  state:0,\n  StackSize:4096,\n  currData:null,\n  handleSleepReturnValue:0,\n  exportCallStack:[],\n  callStackNameToId:{\n  },\n  callStackIdToName:{\n  },\n  callStackId:0,\n  asyncPromiseHandlers:null,\n  sleepCallbacks:[],\n  getCallStackId(funcName) {\n        var id = Asyncify.callStackNameToId[funcName];\n        if (id === undefined) {\n          id = Asyncify.callStackId++;\n          Asyncify.callStackNameToId[funcName] = id;\n          Asyncify.callStackIdToName[id] = funcName;\n        }\n        return id;\n      },\n  maybeStopUnwind() {\n        if (Asyncify.currData &&\n            Asyncify.state === Asyncify.State.Unwinding &&\n            Asyncify.exportCallStack.length === 0) {\n          // We just finished unwinding.\n          // Be sure to set the state before calling any other functions to avoid\n          // possible infinite recursion here (For example in debug pthread builds\n          // the dbg() function itself can call back into WebAssembly to get the\n          // current pthread_self() pointer).\n          Asyncify.state = Asyncify.State.Normal;\n          \n          // Keep the runtime alive so that a re-wind can be done later.\n          runAndAbortIfError(_asyncify_stop_unwind);\n          if (typeof Fibers != 'undefined') {\n            Fibers.trampoline();\n          }\n        }\n      },\n  whenDone() {\n        return new Promise((resolve, reject) => {\n          Asyncify.asyncPromiseHandlers = { resolve, reject };\n        });\n      },\n  allocateData() {\n        // An asyncify data structure has three fields:\n        //  0  current stack pos\n        //  4  max stack pos\n        //  8  id of function at bottom of the call stack (callStackIdToName[id] == name of js function)\n        //\n        // The Asyncify ABI only interprets the first two fields, the rest is for the runtime.\n        // We also embed a stack in the same memory region here, right next to the structure.\n        // This struct is also defined as asyncify_data_t in emscripten/fiber.h\n        var ptr = _malloc(12 + Asyncify.StackSize);\n        Asyncify.setDataHeader(ptr, ptr + 12, Asyncify.StackSize);\n        Asyncify.setDataRewindFunc(ptr);\n        return ptr;\n      },\n  setDataHeader(ptr, stack, stackSize) {\n        HEAPU32[((ptr)>>2)] = stack;\n        HEAPU32[(((ptr)+(4))>>2)] = stack + stackSize;\n      },\n  setDataRewindFunc(ptr) {\n        var bottomOfCallStack = Asyncify.exportCallStack[0];\n        var rewindId = Asyncify.getCallStackId(bottomOfCallStack);\n        HEAP32[(((ptr)+(8))>>2)] = rewindId;\n      },\n  getDataRewindFunc(ptr) {\n        var id = HEAP32[(((ptr)+(8))>>2)];\n        var name = Asyncify.callStackIdToName[id];\n        var func = wasmExports[name];\n        return func;\n      },\n  doRewind(ptr) {\n        var start = Asyncify.getDataRewindFunc(ptr);\n        // Once we have rewound and the stack we no longer need to artificially\n        // keep the runtime alive.\n        \n        return start();\n      },\n  handleSleep(startAsync) {\n        if (ABORT) return;\n        if (Asyncify.state === Asyncify.State.Normal) {\n          // Prepare to sleep. Call startAsync, and see what happens:\n          // if the code decided to call our callback synchronously,\n          // then no async operation was in fact begun, and we don't\n          // need to do anything.\n          var reachedCallback = false;\n          var reachedAfterCallback = false;\n          startAsync((handleSleepReturnValue = 0) => {\n            if (ABORT) return;\n            Asyncify.handleSleepReturnValue = handleSleepReturnValue;\n            reachedCallback = true;\n            if (!reachedAfterCallback) {\n              // We are happening synchronously, so no need for async.\n              return;\n            }\n            Asyncify.state = Asyncify.State.Rewinding;\n            runAndAbortIfError(() => _asyncify_start_rewind(Asyncify.currData));\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\n              Browser.mainLoop.resume();\n            }\n            var asyncWasmReturnValue, isError = false;\n            try {\n              asyncWasmReturnValue = Asyncify.doRewind(Asyncify.currData);\n            } catch (err) {\n              asyncWasmReturnValue = err;\n              isError = true;\n            }\n            // Track whether the return value was handled by any promise handlers.\n            var handled = false;\n            if (!Asyncify.currData) {\n              // All asynchronous execution has finished.\n              // `asyncWasmReturnValue` now contains the final\n              // return value of the exported async WASM function.\n              //\n              // Note: `asyncWasmReturnValue` is distinct from\n              // `Asyncify.handleSleepReturnValue`.\n              // `Asyncify.handleSleepReturnValue` contains the return\n              // value of the last C function to have executed\n              // `Asyncify.handleSleep()`, where as `asyncWasmReturnValue`\n              // contains the return value of the exported WASM function\n              // that may have called C functions that\n              // call `Asyncify.handleSleep()`.\n              var asyncPromiseHandlers = Asyncify.asyncPromiseHandlers;\n              if (asyncPromiseHandlers) {\n                Asyncify.asyncPromiseHandlers = null;\n                (isError ? asyncPromiseHandlers.reject : asyncPromiseHandlers.resolve)(asyncWasmReturnValue);\n                handled = true;\n              }\n            }\n            if (isError && !handled) {\n              // If there was an error and it was not handled by now, we have no choice but to\n              // rethrow that error into the global scope where it can be caught only by\n              // `onerror` or `onunhandledpromiserejection`.\n              throw asyncWasmReturnValue;\n            }\n          });\n          reachedAfterCallback = true;\n          if (!reachedCallback) {\n            // A true async operation was begun; start a sleep.\n            Asyncify.state = Asyncify.State.Unwinding;\n            // TODO: reuse, don't alloc/free every sleep\n            Asyncify.currData = Asyncify.allocateData();\n            if (typeof Browser != 'undefined' && Browser.mainLoop.func) {\n              Browser.mainLoop.pause();\n            }\n            runAndAbortIfError(() => _asyncify_start_unwind(Asyncify.currData));\n          }\n        } else if (Asyncify.state === Asyncify.State.Rewinding) {\n          // Stop a resume.\n          Asyncify.state = Asyncify.State.Normal;\n          runAndAbortIfError(_asyncify_stop_rewind);\n          _free(Asyncify.currData);\n          Asyncify.currData = null;\n          // Call all sleep callbacks now that the sleep-resume is all done.\n          Asyncify.sleepCallbacks.forEach((func) => callUserCallback(func));\n        } else {\n          abort(`invalid state: ${Asyncify.state}`);\n        }\n        return Asyncify.handleSleepReturnValue;\n      },\n  handleAsync(startAsync) {\n        return Asyncify.handleSleep((wakeUp) => {\n          // TODO: add error handling as a second param when handleSleep implements it.\n          startAsync().then(wakeUp);\n        });\n      },\n  };\n\n\n\n\n  var FS_unlink = (path) => FS.unlink(path);\n\n  var FSNode = /** @constructor */ function(parent, name, mode, rdev) {\n    if (!parent) {\n      parent = this;  // root node sets parent to itself\n    }\n    this.parent = parent;\n    this.mount = parent.mount;\n    this.mounted = null;\n    this.id = FS.nextInode++;\n    this.name = name;\n    this.mode = mode;\n    this.node_ops = {};\n    this.stream_ops = {};\n    this.rdev = rdev;\n  };\n  var readMode = 292/*292*/ | 73/*73*/;\n  var writeMode = 146/*146*/;\n  Object.defineProperties(FSNode.prototype, {\n   read: {\n    get: /** @this{FSNode} */function() {\n     return (this.mode & readMode) === readMode;\n    },\n    set: /** @this{FSNode} */function(val) {\n     val ? this.mode |= readMode : this.mode &= ~readMode;\n    }\n   },\n   write: {\n    get: /** @this{FSNode} */function() {\n     return (this.mode & writeMode) === writeMode;\n    },\n    set: /** @this{FSNode} */function(val) {\n     val ? this.mode |= writeMode : this.mode &= ~writeMode;\n    }\n   },\n   isFolder: {\n    get: /** @this{FSNode} */function() {\n     return FS.isDir(this.mode);\n    }\n   },\n   isDevice: {\n    get: /** @this{FSNode} */function() {\n     return FS.isChrdev(this.mode);\n    }\n   }\n  });\n  FS.FSNode = FSNode;\n  FS.createPreloadedFile = FS_createPreloadedFile;\n  FS.staticInit();Module[\"FS_createPath\"] = FS.createPath;Module[\"FS_createDataFile\"] = FS.createDataFile;Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;Module[\"FS_unlink\"] = FS.unlink;Module[\"FS_createLazyFile\"] = FS.createLazyFile;Module[\"FS_createDevice\"] = FS.createDevice;;\n\n      // exports\n      Module[\"requestFullscreen\"] = Browser.requestFullscreen;\n      Module[\"requestAnimationFrame\"] = Browser.requestAnimationFrame;\n      Module[\"setCanvasSize\"] = Browser.setCanvasSize;\n      Module[\"pauseMainLoop\"] = Browser.mainLoop.pause;\n      Module[\"resumeMainLoop\"] = Browser.mainLoop.resume;\n      Module[\"getUserMedia\"] = Browser.getUserMedia;\n      Module[\"createContext\"] = Browser.createContext;\n      var preloadedImages = {};\n      var preloadedAudios = {};;\nvar GLctx;;\nfor (var i = 0; i < 32; ++i) tempFixedLengthArray.push(new Array(i));;\nvar miniTempWebGLFloatBuffersStorage = new Float32Array(288);\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\n    miniTempWebGLFloatBuffers[i] = miniTempWebGLFloatBuffersStorage.subarray(0, i+1);\n  };\nvar miniTempWebGLIntBuffersStorage = new Int32Array(288);\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\n    miniTempWebGLIntBuffers[i] = miniTempWebGLIntBuffersStorage.subarray(0, i+1);\n  };\nvar wasmImports = {\n  /** @export */\n  __cxa_throw: ___cxa_throw,\n  /** @export */\n  __syscall_chmod: ___syscall_chmod,\n  /** @export */\n  __syscall_dup3: ___syscall_dup3,\n  /** @export */\n  __syscall_fchmod: ___syscall_fchmod,\n  /** @export */\n  __syscall_fcntl64: ___syscall_fcntl64,\n  /** @export */\n  __syscall_fstat64: ___syscall_fstat64,\n  /** @export */\n  __syscall_ftruncate64: ___syscall_ftruncate64,\n  /** @export */\n  __syscall_getcwd: ___syscall_getcwd,\n  /** @export */\n  __syscall_getdents64: ___syscall_getdents64,\n  /** @export */\n  __syscall_ioctl: ___syscall_ioctl,\n  /** @export */\n  __syscall_lstat64: ___syscall_lstat64,\n  /** @export */\n  __syscall_mkdirat: ___syscall_mkdirat,\n  /** @export */\n  __syscall_newfstatat: ___syscall_newfstatat,\n  /** @export */\n  __syscall_openat: ___syscall_openat,\n  /** @export */\n  __syscall_readlinkat: ___syscall_readlinkat,\n  /** @export */\n  __syscall_renameat: ___syscall_renameat,\n  /** @export */\n  __syscall_rmdir: ___syscall_rmdir,\n  /** @export */\n  __syscall_stat64: ___syscall_stat64,\n  /** @export */\n  __syscall_unlinkat: ___syscall_unlinkat,\n  /** @export */\n  _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n  /** @export */\n  _emscripten_throw_longjmp: __emscripten_throw_longjmp,\n  /** @export */\n  _gmtime_js: __gmtime_js,\n  /** @export */\n  _localtime_js: __localtime_js,\n  /** @export */\n  _mktime_js: __mktime_js,\n  /** @export */\n  _tzset_js: __tzset_js,\n  /** @export */\n  abort: _abort,\n  /** @export */\n  eglBindAPI: _eglBindAPI,\n  /** @export */\n  eglChooseConfig: _eglChooseConfig,\n  /** @export */\n  eglCreateContext: _eglCreateContext,\n  /** @export */\n  eglCreateWindowSurface: _eglCreateWindowSurface,\n  /** @export */\n  eglDestroyContext: _eglDestroyContext,\n  /** @export */\n  eglDestroySurface: _eglDestroySurface,\n  /** @export */\n  eglGetConfigAttrib: _eglGetConfigAttrib,\n  /** @export */\n  eglGetDisplay: _eglGetDisplay,\n  /** @export */\n  eglGetError: _eglGetError,\n  /** @export */\n  eglInitialize: _eglInitialize,\n  /** @export */\n  eglMakeCurrent: _eglMakeCurrent,\n  /** @export */\n  eglQueryString: _eglQueryString,\n  /** @export */\n  eglSwapBuffers: _eglSwapBuffers,\n  /** @export */\n  eglSwapInterval: _eglSwapInterval,\n  /** @export */\n  eglTerminate: _eglTerminate,\n  /** @export */\n  eglWaitGL: _eglWaitGL,\n  /** @export */\n  eglWaitNative: _eglWaitNative,\n  /** @export */\n  emscripten_asm_const_int: _emscripten_asm_const_int,\n  /** @export */\n  emscripten_asm_const_int_sync_on_main_thread: _emscripten_asm_const_int_sync_on_main_thread,\n  /** @export */\n  emscripten_date_now: _emscripten_date_now,\n  /** @export */\n  emscripten_enter_soft_fullscreen: _emscripten_enter_soft_fullscreen,\n  /** @export */\n  emscripten_exit_fullscreen: _emscripten_exit_fullscreen,\n  /** @export */\n  emscripten_exit_pointerlock: _emscripten_exit_pointerlock,\n  /** @export */\n  emscripten_exit_soft_fullscreen: _emscripten_exit_soft_fullscreen,\n  /** @export */\n  emscripten_get_device_pixel_ratio: _emscripten_get_device_pixel_ratio,\n  /** @export */\n  emscripten_get_element_css_size: _emscripten_get_element_css_size,\n  /** @export */\n  emscripten_get_gamepad_status: _emscripten_get_gamepad_status,\n  /** @export */\n  emscripten_get_now: _emscripten_get_now,\n  /** @export */\n  emscripten_get_num_gamepads: _emscripten_get_num_gamepads,\n  /** @export */\n  emscripten_get_screen_size: _emscripten_get_screen_size,\n  /** @export */\n  emscripten_glActiveTexture: _emscripten_glActiveTexture,\n  /** @export */\n  emscripten_glAttachShader: _emscripten_glAttachShader,\n  /** @export */\n  emscripten_glBeginQuery: _emscripten_glBeginQuery,\n  /** @export */\n  emscripten_glBeginQueryEXT: _emscripten_glBeginQueryEXT,\n  /** @export */\n  emscripten_glBeginTransformFeedback: _emscripten_glBeginTransformFeedback,\n  /** @export */\n  emscripten_glBindAttribLocation: _emscripten_glBindAttribLocation,\n  /** @export */\n  emscripten_glBindBuffer: _emscripten_glBindBuffer,\n  /** @export */\n  emscripten_glBindBufferBase: _emscripten_glBindBufferBase,\n  /** @export */\n  emscripten_glBindBufferRange: _emscripten_glBindBufferRange,\n  /** @export */\n  emscripten_glBindFramebuffer: _emscripten_glBindFramebuffer,\n  /** @export */\n  emscripten_glBindRenderbuffer: _emscripten_glBindRenderbuffer,\n  /** @export */\n  emscripten_glBindSampler: _emscripten_glBindSampler,\n  /** @export */\n  emscripten_glBindTexture: _emscripten_glBindTexture,\n  /** @export */\n  emscripten_glBindTransformFeedback: _emscripten_glBindTransformFeedback,\n  /** @export */\n  emscripten_glBindVertexArray: _emscripten_glBindVertexArray,\n  /** @export */\n  emscripten_glBindVertexArrayOES: _emscripten_glBindVertexArrayOES,\n  /** @export */\n  emscripten_glBlendColor: _emscripten_glBlendColor,\n  /** @export */\n  emscripten_glBlendEquation: _emscripten_glBlendEquation,\n  /** @export */\n  emscripten_glBlendEquationSeparate: _emscripten_glBlendEquationSeparate,\n  /** @export */\n  emscripten_glBlendFunc: _emscripten_glBlendFunc,\n  /** @export */\n  emscripten_glBlendFuncSeparate: _emscripten_glBlendFuncSeparate,\n  /** @export */\n  emscripten_glBlitFramebuffer: _emscripten_glBlitFramebuffer,\n  /** @export */\n  emscripten_glBufferData: _emscripten_glBufferData,\n  /** @export */\n  emscripten_glBufferSubData: _emscripten_glBufferSubData,\n  /** @export */\n  emscripten_glCheckFramebufferStatus: _emscripten_glCheckFramebufferStatus,\n  /** @export */\n  emscripten_glClear: _emscripten_glClear,\n  /** @export */\n  emscripten_glClearBufferfi: _emscripten_glClearBufferfi,\n  /** @export */\n  emscripten_glClearBufferfv: _emscripten_glClearBufferfv,\n  /** @export */\n  emscripten_glClearBufferiv: _emscripten_glClearBufferiv,\n  /** @export */\n  emscripten_glClearBufferuiv: _emscripten_glClearBufferuiv,\n  /** @export */\n  emscripten_glClearColor: _emscripten_glClearColor,\n  /** @export */\n  emscripten_glClearDepthf: _emscripten_glClearDepthf,\n  /** @export */\n  emscripten_glClearStencil: _emscripten_glClearStencil,\n  /** @export */\n  emscripten_glClientWaitSync: _emscripten_glClientWaitSync,\n  /** @export */\n  emscripten_glColorMask: _emscripten_glColorMask,\n  /** @export */\n  emscripten_glCompileShader: _emscripten_glCompileShader,\n  /** @export */\n  emscripten_glCompressedTexImage2D: _emscripten_glCompressedTexImage2D,\n  /** @export */\n  emscripten_glCompressedTexImage3D: _emscripten_glCompressedTexImage3D,\n  /** @export */\n  emscripten_glCompressedTexSubImage2D: _emscripten_glCompressedTexSubImage2D,\n  /** @export */\n  emscripten_glCompressedTexSubImage3D: _emscripten_glCompressedTexSubImage3D,\n  /** @export */\n  emscripten_glCopyBufferSubData: _emscripten_glCopyBufferSubData,\n  /** @export */\n  emscripten_glCopyTexImage2D: _emscripten_glCopyTexImage2D,\n  /** @export */\n  emscripten_glCopyTexSubImage2D: _emscripten_glCopyTexSubImage2D,\n  /** @export */\n  emscripten_glCopyTexSubImage3D: _emscripten_glCopyTexSubImage3D,\n  /** @export */\n  emscripten_glCreateProgram: _emscripten_glCreateProgram,\n  /** @export */\n  emscripten_glCreateShader: _emscripten_glCreateShader,\n  /** @export */\n  emscripten_glCullFace: _emscripten_glCullFace,\n  /** @export */\n  emscripten_glDeleteBuffers: _emscripten_glDeleteBuffers,\n  /** @export */\n  emscripten_glDeleteFramebuffers: _emscripten_glDeleteFramebuffers,\n  /** @export */\n  emscripten_glDeleteProgram: _emscripten_glDeleteProgram,\n  /** @export */\n  emscripten_glDeleteQueries: _emscripten_glDeleteQueries,\n  /** @export */\n  emscripten_glDeleteQueriesEXT: _emscripten_glDeleteQueriesEXT,\n  /** @export */\n  emscripten_glDeleteRenderbuffers: _emscripten_glDeleteRenderbuffers,\n  /** @export */\n  emscripten_glDeleteSamplers: _emscripten_glDeleteSamplers,\n  /** @export */\n  emscripten_glDeleteShader: _emscripten_glDeleteShader,\n  /** @export */\n  emscripten_glDeleteSync: _emscripten_glDeleteSync,\n  /** @export */\n  emscripten_glDeleteTextures: _emscripten_glDeleteTextures,\n  /** @export */\n  emscripten_glDeleteTransformFeedbacks: _emscripten_glDeleteTransformFeedbacks,\n  /** @export */\n  emscripten_glDeleteVertexArrays: _emscripten_glDeleteVertexArrays,\n  /** @export */\n  emscripten_glDeleteVertexArraysOES: _emscripten_glDeleteVertexArraysOES,\n  /** @export */\n  emscripten_glDepthFunc: _emscripten_glDepthFunc,\n  /** @export */\n  emscripten_glDepthMask: _emscripten_glDepthMask,\n  /** @export */\n  emscripten_glDepthRangef: _emscripten_glDepthRangef,\n  /** @export */\n  emscripten_glDetachShader: _emscripten_glDetachShader,\n  /** @export */\n  emscripten_glDisable: _emscripten_glDisable,\n  /** @export */\n  emscripten_glDisableVertexAttribArray: _emscripten_glDisableVertexAttribArray,\n  /** @export */\n  emscripten_glDrawArrays: _emscripten_glDrawArrays,\n  /** @export */\n  emscripten_glDrawArraysInstanced: _emscripten_glDrawArraysInstanced,\n  /** @export */\n  emscripten_glDrawArraysInstancedANGLE: _emscripten_glDrawArraysInstancedANGLE,\n  /** @export */\n  emscripten_glDrawArraysInstancedARB: _emscripten_glDrawArraysInstancedARB,\n  /** @export */\n  emscripten_glDrawArraysInstancedEXT: _emscripten_glDrawArraysInstancedEXT,\n  /** @export */\n  emscripten_glDrawArraysInstancedNV: _emscripten_glDrawArraysInstancedNV,\n  /** @export */\n  emscripten_glDrawBuffers: _emscripten_glDrawBuffers,\n  /** @export */\n  emscripten_glDrawBuffersEXT: _emscripten_glDrawBuffersEXT,\n  /** @export */\n  emscripten_glDrawBuffersWEBGL: _emscripten_glDrawBuffersWEBGL,\n  /** @export */\n  emscripten_glDrawElements: _emscripten_glDrawElements,\n  /** @export */\n  emscripten_glDrawElementsInstanced: _emscripten_glDrawElementsInstanced,\n  /** @export */\n  emscripten_glDrawElementsInstancedANGLE: _emscripten_glDrawElementsInstancedANGLE,\n  /** @export */\n  emscripten_glDrawElementsInstancedARB: _emscripten_glDrawElementsInstancedARB,\n  /** @export */\n  emscripten_glDrawElementsInstancedEXT: _emscripten_glDrawElementsInstancedEXT,\n  /** @export */\n  emscripten_glDrawElementsInstancedNV: _emscripten_glDrawElementsInstancedNV,\n  /** @export */\n  emscripten_glDrawRangeElements: _emscripten_glDrawRangeElements,\n  /** @export */\n  emscripten_glEnable: _emscripten_glEnable,\n  /** @export */\n  emscripten_glEnableVertexAttribArray: _emscripten_glEnableVertexAttribArray,\n  /** @export */\n  emscripten_glEndQuery: _emscripten_glEndQuery,\n  /** @export */\n  emscripten_glEndQueryEXT: _emscripten_glEndQueryEXT,\n  /** @export */\n  emscripten_glEndTransformFeedback: _emscripten_glEndTransformFeedback,\n  /** @export */\n  emscripten_glFenceSync: _emscripten_glFenceSync,\n  /** @export */\n  emscripten_glFinish: _emscripten_glFinish,\n  /** @export */\n  emscripten_glFlush: _emscripten_glFlush,\n  /** @export */\n  emscripten_glFramebufferRenderbuffer: _emscripten_glFramebufferRenderbuffer,\n  /** @export */\n  emscripten_glFramebufferTexture2D: _emscripten_glFramebufferTexture2D,\n  /** @export */\n  emscripten_glFramebufferTextureLayer: _emscripten_glFramebufferTextureLayer,\n  /** @export */\n  emscripten_glFrontFace: _emscripten_glFrontFace,\n  /** @export */\n  emscripten_glGenBuffers: _emscripten_glGenBuffers,\n  /** @export */\n  emscripten_glGenFramebuffers: _emscripten_glGenFramebuffers,\n  /** @export */\n  emscripten_glGenQueries: _emscripten_glGenQueries,\n  /** @export */\n  emscripten_glGenQueriesEXT: _emscripten_glGenQueriesEXT,\n  /** @export */\n  emscripten_glGenRenderbuffers: _emscripten_glGenRenderbuffers,\n  /** @export */\n  emscripten_glGenSamplers: _emscripten_glGenSamplers,\n  /** @export */\n  emscripten_glGenTextures: _emscripten_glGenTextures,\n  /** @export */\n  emscripten_glGenTransformFeedbacks: _emscripten_glGenTransformFeedbacks,\n  /** @export */\n  emscripten_glGenVertexArrays: _emscripten_glGenVertexArrays,\n  /** @export */\n  emscripten_glGenVertexArraysOES: _emscripten_glGenVertexArraysOES,\n  /** @export */\n  emscripten_glGenerateMipmap: _emscripten_glGenerateMipmap,\n  /** @export */\n  emscripten_glGetActiveAttrib: _emscripten_glGetActiveAttrib,\n  /** @export */\n  emscripten_glGetActiveUniform: _emscripten_glGetActiveUniform,\n  /** @export */\n  emscripten_glGetActiveUniformBlockName: _emscripten_glGetActiveUniformBlockName,\n  /** @export */\n  emscripten_glGetActiveUniformBlockiv: _emscripten_glGetActiveUniformBlockiv,\n  /** @export */\n  emscripten_glGetActiveUniformsiv: _emscripten_glGetActiveUniformsiv,\n  /** @export */\n  emscripten_glGetAttachedShaders: _emscripten_glGetAttachedShaders,\n  /** @export */\n  emscripten_glGetAttribLocation: _emscripten_glGetAttribLocation,\n  /** @export */\n  emscripten_glGetBooleanv: _emscripten_glGetBooleanv,\n  /** @export */\n  emscripten_glGetBufferParameteri64v: _emscripten_glGetBufferParameteri64v,\n  /** @export */\n  emscripten_glGetBufferParameteriv: _emscripten_glGetBufferParameteriv,\n  /** @export */\n  emscripten_glGetError: _emscripten_glGetError,\n  /** @export */\n  emscripten_glGetFloatv: _emscripten_glGetFloatv,\n  /** @export */\n  emscripten_glGetFragDataLocation: _emscripten_glGetFragDataLocation,\n  /** @export */\n  emscripten_glGetFramebufferAttachmentParameteriv: _emscripten_glGetFramebufferAttachmentParameteriv,\n  /** @export */\n  emscripten_glGetInteger64i_v: _emscripten_glGetInteger64i_v,\n  /** @export */\n  emscripten_glGetInteger64v: _emscripten_glGetInteger64v,\n  /** @export */\n  emscripten_glGetIntegeri_v: _emscripten_glGetIntegeri_v,\n  /** @export */\n  emscripten_glGetIntegerv: _emscripten_glGetIntegerv,\n  /** @export */\n  emscripten_glGetInternalformativ: _emscripten_glGetInternalformativ,\n  /** @export */\n  emscripten_glGetProgramBinary: _emscripten_glGetProgramBinary,\n  /** @export */\n  emscripten_glGetProgramInfoLog: _emscripten_glGetProgramInfoLog,\n  /** @export */\n  emscripten_glGetProgramiv: _emscripten_glGetProgramiv,\n  /** @export */\n  emscripten_glGetQueryObjecti64vEXT: _emscripten_glGetQueryObjecti64vEXT,\n  /** @export */\n  emscripten_glGetQueryObjectivEXT: _emscripten_glGetQueryObjectivEXT,\n  /** @export */\n  emscripten_glGetQueryObjectui64vEXT: _emscripten_glGetQueryObjectui64vEXT,\n  /** @export */\n  emscripten_glGetQueryObjectuiv: _emscripten_glGetQueryObjectuiv,\n  /** @export */\n  emscripten_glGetQueryObjectuivEXT: _emscripten_glGetQueryObjectuivEXT,\n  /** @export */\n  emscripten_glGetQueryiv: _emscripten_glGetQueryiv,\n  /** @export */\n  emscripten_glGetQueryivEXT: _emscripten_glGetQueryivEXT,\n  /** @export */\n  emscripten_glGetRenderbufferParameteriv: _emscripten_glGetRenderbufferParameteriv,\n  /** @export */\n  emscripten_glGetSamplerParameterfv: _emscripten_glGetSamplerParameterfv,\n  /** @export */\n  emscripten_glGetSamplerParameteriv: _emscripten_glGetSamplerParameteriv,\n  /** @export */\n  emscripten_glGetShaderInfoLog: _emscripten_glGetShaderInfoLog,\n  /** @export */\n  emscripten_glGetShaderPrecisionFormat: _emscripten_glGetShaderPrecisionFormat,\n  /** @export */\n  emscripten_glGetShaderSource: _emscripten_glGetShaderSource,\n  /** @export */\n  emscripten_glGetShaderiv: _emscripten_glGetShaderiv,\n  /** @export */\n  emscripten_glGetString: _emscripten_glGetString,\n  /** @export */\n  emscripten_glGetStringi: _emscripten_glGetStringi,\n  /** @export */\n  emscripten_glGetSynciv: _emscripten_glGetSynciv,\n  /** @export */\n  emscripten_glGetTexParameterfv: _emscripten_glGetTexParameterfv,\n  /** @export */\n  emscripten_glGetTexParameteriv: _emscripten_glGetTexParameteriv,\n  /** @export */\n  emscripten_glGetTransformFeedbackVarying: _emscripten_glGetTransformFeedbackVarying,\n  /** @export */\n  emscripten_glGetUniformBlockIndex: _emscripten_glGetUniformBlockIndex,\n  /** @export */\n  emscripten_glGetUniformIndices: _emscripten_glGetUniformIndices,\n  /** @export */\n  emscripten_glGetUniformLocation: _emscripten_glGetUniformLocation,\n  /** @export */\n  emscripten_glGetUniformfv: _emscripten_glGetUniformfv,\n  /** @export */\n  emscripten_glGetUniformiv: _emscripten_glGetUniformiv,\n  /** @export */\n  emscripten_glGetUniformuiv: _emscripten_glGetUniformuiv,\n  /** @export */\n  emscripten_glGetVertexAttribIiv: _emscripten_glGetVertexAttribIiv,\n  /** @export */\n  emscripten_glGetVertexAttribIuiv: _emscripten_glGetVertexAttribIuiv,\n  /** @export */\n  emscripten_glGetVertexAttribPointerv: _emscripten_glGetVertexAttribPointerv,\n  /** @export */\n  emscripten_glGetVertexAttribfv: _emscripten_glGetVertexAttribfv,\n  /** @export */\n  emscripten_glGetVertexAttribiv: _emscripten_glGetVertexAttribiv,\n  /** @export */\n  emscripten_glHint: _emscripten_glHint,\n  /** @export */\n  emscripten_glInvalidateFramebuffer: _emscripten_glInvalidateFramebuffer,\n  /** @export */\n  emscripten_glInvalidateSubFramebuffer: _emscripten_glInvalidateSubFramebuffer,\n  /** @export */\n  emscripten_glIsBuffer: _emscripten_glIsBuffer,\n  /** @export */\n  emscripten_glIsEnabled: _emscripten_glIsEnabled,\n  /** @export */\n  emscripten_glIsFramebuffer: _emscripten_glIsFramebuffer,\n  /** @export */\n  emscripten_glIsProgram: _emscripten_glIsProgram,\n  /** @export */\n  emscripten_glIsQuery: _emscripten_glIsQuery,\n  /** @export */\n  emscripten_glIsQueryEXT: _emscripten_glIsQueryEXT,\n  /** @export */\n  emscripten_glIsRenderbuffer: _emscripten_glIsRenderbuffer,\n  /** @export */\n  emscripten_glIsSampler: _emscripten_glIsSampler,\n  /** @export */\n  emscripten_glIsShader: _emscripten_glIsShader,\n  /** @export */\n  emscripten_glIsSync: _emscripten_glIsSync,\n  /** @export */\n  emscripten_glIsTexture: _emscripten_glIsTexture,\n  /** @export */\n  emscripten_glIsTransformFeedback: _emscripten_glIsTransformFeedback,\n  /** @export */\n  emscripten_glIsVertexArray: _emscripten_glIsVertexArray,\n  /** @export */\n  emscripten_glIsVertexArrayOES: _emscripten_glIsVertexArrayOES,\n  /** @export */\n  emscripten_glLineWidth: _emscripten_glLineWidth,\n  /** @export */\n  emscripten_glLinkProgram: _emscripten_glLinkProgram,\n  /** @export */\n  emscripten_glPauseTransformFeedback: _emscripten_glPauseTransformFeedback,\n  /** @export */\n  emscripten_glPixelStorei: _emscripten_glPixelStorei,\n  /** @export */\n  emscripten_glPolygonOffset: _emscripten_glPolygonOffset,\n  /** @export */\n  emscripten_glProgramBinary: _emscripten_glProgramBinary,\n  /** @export */\n  emscripten_glProgramParameteri: _emscripten_glProgramParameteri,\n  /** @export */\n  emscripten_glQueryCounterEXT: _emscripten_glQueryCounterEXT,\n  /** @export */\n  emscripten_glReadBuffer: _emscripten_glReadBuffer,\n  /** @export */\n  emscripten_glReadPixels: _emscripten_glReadPixels,\n  /** @export */\n  emscripten_glReleaseShaderCompiler: _emscripten_glReleaseShaderCompiler,\n  /** @export */\n  emscripten_glRenderbufferStorage: _emscripten_glRenderbufferStorage,\n  /** @export */\n  emscripten_glRenderbufferStorageMultisample: _emscripten_glRenderbufferStorageMultisample,\n  /** @export */\n  emscripten_glResumeTransformFeedback: _emscripten_glResumeTransformFeedback,\n  /** @export */\n  emscripten_glSampleCoverage: _emscripten_glSampleCoverage,\n  /** @export */\n  emscripten_glSamplerParameterf: _emscripten_glSamplerParameterf,\n  /** @export */\n  emscripten_glSamplerParameterfv: _emscripten_glSamplerParameterfv,\n  /** @export */\n  emscripten_glSamplerParameteri: _emscripten_glSamplerParameteri,\n  /** @export */\n  emscripten_glSamplerParameteriv: _emscripten_glSamplerParameteriv,\n  /** @export */\n  emscripten_glScissor: _emscripten_glScissor,\n  /** @export */\n  emscripten_glShaderBinary: _emscripten_glShaderBinary,\n  /** @export */\n  emscripten_glShaderSource: _emscripten_glShaderSource,\n  /** @export */\n  emscripten_glStencilFunc: _emscripten_glStencilFunc,\n  /** @export */\n  emscripten_glStencilFuncSeparate: _emscripten_glStencilFuncSeparate,\n  /** @export */\n  emscripten_glStencilMask: _emscripten_glStencilMask,\n  /** @export */\n  emscripten_glStencilMaskSeparate: _emscripten_glStencilMaskSeparate,\n  /** @export */\n  emscripten_glStencilOp: _emscripten_glStencilOp,\n  /** @export */\n  emscripten_glStencilOpSeparate: _emscripten_glStencilOpSeparate,\n  /** @export */\n  emscripten_glTexImage2D: _emscripten_glTexImage2D,\n  /** @export */\n  emscripten_glTexImage3D: _emscripten_glTexImage3D,\n  /** @export */\n  emscripten_glTexParameterf: _emscripten_glTexParameterf,\n  /** @export */\n  emscripten_glTexParameterfv: _emscripten_glTexParameterfv,\n  /** @export */\n  emscripten_glTexParameteri: _emscripten_glTexParameteri,\n  /** @export */\n  emscripten_glTexParameteriv: _emscripten_glTexParameteriv,\n  /** @export */\n  emscripten_glTexStorage2D: _emscripten_glTexStorage2D,\n  /** @export */\n  emscripten_glTexStorage3D: _emscripten_glTexStorage3D,\n  /** @export */\n  emscripten_glTexSubImage2D: _emscripten_glTexSubImage2D,\n  /** @export */\n  emscripten_glTexSubImage3D: _emscripten_glTexSubImage3D,\n  /** @export */\n  emscripten_glTransformFeedbackVaryings: _emscripten_glTransformFeedbackVaryings,\n  /** @export */\n  emscripten_glUniform1f: _emscripten_glUniform1f,\n  /** @export */\n  emscripten_glUniform1fv: _emscripten_glUniform1fv,\n  /** @export */\n  emscripten_glUniform1i: _emscripten_glUniform1i,\n  /** @export */\n  emscripten_glUniform1iv: _emscripten_glUniform1iv,\n  /** @export */\n  emscripten_glUniform1ui: _emscripten_glUniform1ui,\n  /** @export */\n  emscripten_glUniform1uiv: _emscripten_glUniform1uiv,\n  /** @export */\n  emscripten_glUniform2f: _emscripten_glUniform2f,\n  /** @export */\n  emscripten_glUniform2fv: _emscripten_glUniform2fv,\n  /** @export */\n  emscripten_glUniform2i: _emscripten_glUniform2i,\n  /** @export */\n  emscripten_glUniform2iv: _emscripten_glUniform2iv,\n  /** @export */\n  emscripten_glUniform2ui: _emscripten_glUniform2ui,\n  /** @export */\n  emscripten_glUniform2uiv: _emscripten_glUniform2uiv,\n  /** @export */\n  emscripten_glUniform3f: _emscripten_glUniform3f,\n  /** @export */\n  emscripten_glUniform3fv: _emscripten_glUniform3fv,\n  /** @export */\n  emscripten_glUniform3i: _emscripten_glUniform3i,\n  /** @export */\n  emscripten_glUniform3iv: _emscripten_glUniform3iv,\n  /** @export */\n  emscripten_glUniform3ui: _emscripten_glUniform3ui,\n  /** @export */\n  emscripten_glUniform3uiv: _emscripten_glUniform3uiv,\n  /** @export */\n  emscripten_glUniform4f: _emscripten_glUniform4f,\n  /** @export */\n  emscripten_glUniform4fv: _emscripten_glUniform4fv,\n  /** @export */\n  emscripten_glUniform4i: _emscripten_glUniform4i,\n  /** @export */\n  emscripten_glUniform4iv: _emscripten_glUniform4iv,\n  /** @export */\n  emscripten_glUniform4ui: _emscripten_glUniform4ui,\n  /** @export */\n  emscripten_glUniform4uiv: _emscripten_glUniform4uiv,\n  /** @export */\n  emscripten_glUniformBlockBinding: _emscripten_glUniformBlockBinding,\n  /** @export */\n  emscripten_glUniformMatrix2fv: _emscripten_glUniformMatrix2fv,\n  /** @export */\n  emscripten_glUniformMatrix2x3fv: _emscripten_glUniformMatrix2x3fv,\n  /** @export */\n  emscripten_glUniformMatrix2x4fv: _emscripten_glUniformMatrix2x4fv,\n  /** @export */\n  emscripten_glUniformMatrix3fv: _emscripten_glUniformMatrix3fv,\n  /** @export */\n  emscripten_glUniformMatrix3x2fv: _emscripten_glUniformMatrix3x2fv,\n  /** @export */\n  emscripten_glUniformMatrix3x4fv: _emscripten_glUniformMatrix3x4fv,\n  /** @export */\n  emscripten_glUniformMatrix4fv: _emscripten_glUniformMatrix4fv,\n  /** @export */\n  emscripten_glUniformMatrix4x2fv: _emscripten_glUniformMatrix4x2fv,\n  /** @export */\n  emscripten_glUniformMatrix4x3fv: _emscripten_glUniformMatrix4x3fv,\n  /** @export */\n  emscripten_glUseProgram: _emscripten_glUseProgram,\n  /** @export */\n  emscripten_glValidateProgram: _emscripten_glValidateProgram,\n  /** @export */\n  emscripten_glVertexAttrib1f: _emscripten_glVertexAttrib1f,\n  /** @export */\n  emscripten_glVertexAttrib1fv: _emscripten_glVertexAttrib1fv,\n  /** @export */\n  emscripten_glVertexAttrib2f: _emscripten_glVertexAttrib2f,\n  /** @export */\n  emscripten_glVertexAttrib2fv: _emscripten_glVertexAttrib2fv,\n  /** @export */\n  emscripten_glVertexAttrib3f: _emscripten_glVertexAttrib3f,\n  /** @export */\n  emscripten_glVertexAttrib3fv: _emscripten_glVertexAttrib3fv,\n  /** @export */\n  emscripten_glVertexAttrib4f: _emscripten_glVertexAttrib4f,\n  /** @export */\n  emscripten_glVertexAttrib4fv: _emscripten_glVertexAttrib4fv,\n  /** @export */\n  emscripten_glVertexAttribDivisor: _emscripten_glVertexAttribDivisor,\n  /** @export */\n  emscripten_glVertexAttribDivisorANGLE: _emscripten_glVertexAttribDivisorANGLE,\n  /** @export */\n  emscripten_glVertexAttribDivisorARB: _emscripten_glVertexAttribDivisorARB,\n  /** @export */\n  emscripten_glVertexAttribDivisorEXT: _emscripten_glVertexAttribDivisorEXT,\n  /** @export */\n  emscripten_glVertexAttribDivisorNV: _emscripten_glVertexAttribDivisorNV,\n  /** @export */\n  emscripten_glVertexAttribI4i: _emscripten_glVertexAttribI4i,\n  /** @export */\n  emscripten_glVertexAttribI4iv: _emscripten_glVertexAttribI4iv,\n  /** @export */\n  emscripten_glVertexAttribI4ui: _emscripten_glVertexAttribI4ui,\n  /** @export */\n  emscripten_glVertexAttribI4uiv: _emscripten_glVertexAttribI4uiv,\n  /** @export */\n  emscripten_glVertexAttribIPointer: _emscripten_glVertexAttribIPointer,\n  /** @export */\n  emscripten_glVertexAttribPointer: _emscripten_glVertexAttribPointer,\n  /** @export */\n  emscripten_glViewport: _emscripten_glViewport,\n  /** @export */\n  emscripten_glWaitSync: _emscripten_glWaitSync,\n  /** @export */\n  emscripten_has_asyncify: _emscripten_has_asyncify,\n  /** @export */\n  emscripten_memcpy_js: _emscripten_memcpy_js,\n  /** @export */\n  emscripten_request_fullscreen_strategy: _emscripten_request_fullscreen_strategy,\n  /** @export */\n  emscripten_request_pointerlock: _emscripten_request_pointerlock,\n  /** @export */\n  emscripten_resize_heap: _emscripten_resize_heap,\n  /** @export */\n  emscripten_sample_gamepad_data: _emscripten_sample_gamepad_data,\n  /** @export */\n  emscripten_set_beforeunload_callback_on_thread: _emscripten_set_beforeunload_callback_on_thread,\n  /** @export */\n  emscripten_set_blur_callback_on_thread: _emscripten_set_blur_callback_on_thread,\n  /** @export */\n  emscripten_set_canvas_element_size: _emscripten_set_canvas_element_size,\n  /** @export */\n  emscripten_set_element_css_size: _emscripten_set_element_css_size,\n  /** @export */\n  emscripten_set_focus_callback_on_thread: _emscripten_set_focus_callback_on_thread,\n  /** @export */\n  emscripten_set_fullscreenchange_callback_on_thread: _emscripten_set_fullscreenchange_callback_on_thread,\n  /** @export */\n  emscripten_set_gamepadconnected_callback_on_thread: _emscripten_set_gamepadconnected_callback_on_thread,\n  /** @export */\n  emscripten_set_gamepaddisconnected_callback_on_thread: _emscripten_set_gamepaddisconnected_callback_on_thread,\n  /** @export */\n  emscripten_set_keydown_callback_on_thread: _emscripten_set_keydown_callback_on_thread,\n  /** @export */\n  emscripten_set_keypress_callback_on_thread: _emscripten_set_keypress_callback_on_thread,\n  /** @export */\n  emscripten_set_keyup_callback_on_thread: _emscripten_set_keyup_callback_on_thread,\n  /** @export */\n  emscripten_set_main_loop: _emscripten_set_main_loop,\n  /** @export */\n  emscripten_set_mousedown_callback_on_thread: _emscripten_set_mousedown_callback_on_thread,\n  /** @export */\n  emscripten_set_mouseenter_callback_on_thread: _emscripten_set_mouseenter_callback_on_thread,\n  /** @export */\n  emscripten_set_mouseleave_callback_on_thread: _emscripten_set_mouseleave_callback_on_thread,\n  /** @export */\n  emscripten_set_mousemove_callback_on_thread: _emscripten_set_mousemove_callback_on_thread,\n  /** @export */\n  emscripten_set_mouseup_callback_on_thread: _emscripten_set_mouseup_callback_on_thread,\n  /** @export */\n  emscripten_set_pointerlockchange_callback_on_thread: _emscripten_set_pointerlockchange_callback_on_thread,\n  /** @export */\n  emscripten_set_resize_callback_on_thread: _emscripten_set_resize_callback_on_thread,\n  /** @export */\n  emscripten_set_touchcancel_callback_on_thread: _emscripten_set_touchcancel_callback_on_thread,\n  /** @export */\n  emscripten_set_touchend_callback_on_thread: _emscripten_set_touchend_callback_on_thread,\n  /** @export */\n  emscripten_set_touchmove_callback_on_thread: _emscripten_set_touchmove_callback_on_thread,\n  /** @export */\n  emscripten_set_touchstart_callback_on_thread: _emscripten_set_touchstart_callback_on_thread,\n  /** @export */\n  emscripten_set_visibilitychange_callback_on_thread: _emscripten_set_visibilitychange_callback_on_thread,\n  /** @export */\n  emscripten_set_wheel_callback_on_thread: _emscripten_set_wheel_callback_on_thread,\n  /** @export */\n  emscripten_set_window_title: _emscripten_set_window_title,\n  /** @export */\n  emscripten_sleep: _emscripten_sleep,\n  /** @export */\n  environ_get: _environ_get,\n  /** @export */\n  environ_sizes_get: _environ_sizes_get,\n  /** @export */\n  exit: _exit,\n  /** @export */\n  fd_close: _fd_close,\n  /** @export */\n  fd_fdstat_get: _fd_fdstat_get,\n  /** @export */\n  fd_read: _fd_read,\n  /** @export */\n  fd_seek: _fd_seek,\n  /** @export */\n  fd_write: _fd_write,\n  /** @export */\n  glGetFloatv: _glGetFloatv,\n  /** @export */\n  invoke_vii: invoke_vii,\n  /** @export */\n  strftime: _strftime,\n  /** @export */\n  strftime_l: _strftime_l,\n  /** @export */\n  system: _system\n};\nvar wasmExports = createWasm();\nvar ___wasm_call_ctors = () => (___wasm_call_ctors = wasmExports['__wasm_call_ctors'])();\nvar _malloc = (a0) => (_malloc = wasmExports['malloc'])(a0);\nvar _free = (a0) => (_free = wasmExports['free'])(a0);\nvar ___errno_location = () => (___errno_location = wasmExports['__errno_location'])();\nvar _I_WebSetFullscreen = Module['_I_WebSetFullscreen'] = (a0) => (_I_WebSetFullscreen = Module['_I_WebSetFullscreen'] = wasmExports['I_WebSetFullscreen'])(a0);\nvar _I_WebOpenGameMenu = Module['_I_WebOpenGameMenu'] = (a0) => (_I_WebOpenGameMenu = Module['_I_WebOpenGameMenu'] = wasmExports['I_WebOpenGameMenu'])(a0);\nvar _I_WebSyncScreenSize = Module['_I_WebSyncScreenSize'] = () => (_I_WebSyncScreenSize = Module['_I_WebSyncScreenSize'] = wasmExports['I_WebSyncScreenSize'])();\nvar _I_WebMain = Module['_I_WebMain'] = (a0, a1) => (_I_WebMain = Module['_I_WebMain'] = wasmExports['I_WebMain'])(a0, a1);\nvar _main = Module['_main'] = (a0, a1) => (_main = Module['_main'] = wasmExports['__main_argc_argv'])(a0, a1);\nvar setTempRet0 = (a0) => (setTempRet0 = wasmExports['setTempRet0'])(a0);\nvar _setThrew = (a0, a1) => (_setThrew = wasmExports['setThrew'])(a0, a1);\nvar stackSave = () => (stackSave = wasmExports['stackSave'])();\nvar stackRestore = (a0) => (stackRestore = wasmExports['stackRestore'])(a0);\nvar stackAlloc = (a0) => (stackAlloc = wasmExports['stackAlloc'])(a0);\nvar ___cxa_is_pointer_type = (a0) => (___cxa_is_pointer_type = wasmExports['__cxa_is_pointer_type'])(a0);\nvar dynCall_vii = Module['dynCall_vii'] = (a0, a1, a2) => (dynCall_vii = Module['dynCall_vii'] = wasmExports['dynCall_vii'])(a0, a1, a2);\nvar dynCall_viii = Module['dynCall_viii'] = (a0, a1, a2, a3) => (dynCall_viii = Module['dynCall_viii'] = wasmExports['dynCall_viii'])(a0, a1, a2, a3);\nvar dynCall_ii = Module['dynCall_ii'] = (a0, a1) => (dynCall_ii = Module['dynCall_ii'] = wasmExports['dynCall_ii'])(a0, a1);\nvar dynCall_vi = Module['dynCall_vi'] = (a0, a1) => (dynCall_vi = Module['dynCall_vi'] = wasmExports['dynCall_vi'])(a0, a1);\nvar dynCall_iii = Module['dynCall_iii'] = (a0, a1, a2) => (dynCall_iii = Module['dynCall_iii'] = wasmExports['dynCall_iii'])(a0, a1, a2);\nvar dynCall_viiii = Module['dynCall_viiii'] = (a0, a1, a2, a3, a4) => (dynCall_viiii = Module['dynCall_viiii'] = wasmExports['dynCall_viiii'])(a0, a1, a2, a3, a4);\nvar dynCall_v = Module['dynCall_v'] = (a0) => (dynCall_v = Module['dynCall_v'] = wasmExports['dynCall_v'])(a0);\nvar dynCall_viifff = Module['dynCall_viifff'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viifff = Module['dynCall_viifff'] = wasmExports['dynCall_viifff'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_viifffii = Module['dynCall_viifffii'] = (a0, a1, a2, a3, a4, a5, a6, a7) => (dynCall_viifffii = Module['dynCall_viifffii'] = wasmExports['dynCall_viifffii'])(a0, a1, a2, a3, a4, a5, a6, a7);\nvar dynCall_viiiifiiiii = Module['dynCall_viiiifiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) => (dynCall_viiiifiiiii = Module['dynCall_viiiifiiiii'] = wasmExports['dynCall_viiiifiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\nvar dynCall_viiiiiii = Module['dynCall_viiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7) => (dynCall_viiiiiii = Module['dynCall_viiiiiii'] = wasmExports['dynCall_viiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7);\nvar dynCall_iiii = Module['dynCall_iiii'] = (a0, a1, a2, a3) => (dynCall_iiii = Module['dynCall_iiii'] = wasmExports['dynCall_iiii'])(a0, a1, a2, a3);\nvar dynCall_iiiii = Module['dynCall_iiiii'] = (a0, a1, a2, a3, a4) => (dynCall_iiiii = Module['dynCall_iiiii'] = wasmExports['dynCall_iiiii'])(a0, a1, a2, a3, a4);\nvar dynCall_iiji = Module['dynCall_iiji'] = (a0, a1, a2, a3, a4) => (dynCall_iiji = Module['dynCall_iiji'] = wasmExports['dynCall_iiji'])(a0, a1, a2, a3, a4);\nvar dynCall_iiiiii = Module['dynCall_iiiiii'] = (a0, a1, a2, a3, a4, a5) => (dynCall_iiiiii = Module['dynCall_iiiiii'] = wasmExports['dynCall_iiiiii'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_iiiiiiiii = Module['dynCall_iiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_iiiiiiiii = Module['dynCall_iiiiiiiii'] = wasmExports['dynCall_iiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\nvar dynCall_i = Module['dynCall_i'] = (a0) => (dynCall_i = Module['dynCall_i'] = wasmExports['dynCall_i'])(a0);\nvar dynCall_viiffi = Module['dynCall_viiffi'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viiffi = Module['dynCall_viiffi'] = wasmExports['dynCall_viiffi'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_viiiiii = Module['dynCall_viiiiii'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viiiiii = Module['dynCall_viiiiii'] = wasmExports['dynCall_viiiiii'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_iijii = Module['dynCall_iijii'] = (a0, a1, a2, a3, a4, a5) => (dynCall_iijii = Module['dynCall_iijii'] = wasmExports['dynCall_iijii'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_diii = Module['dynCall_diii'] = (a0, a1, a2, a3) => (dynCall_diii = Module['dynCall_diii'] = wasmExports['dynCall_diii'])(a0, a1, a2, a3);\nvar dynCall_viiid = Module['dynCall_viiid'] = (a0, a1, a2, a3, a4) => (dynCall_viiid = Module['dynCall_viiid'] = wasmExports['dynCall_viiid'])(a0, a1, a2, a3, a4);\nvar dynCall_viiiddd = Module['dynCall_viiiddd'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viiiddd = Module['dynCall_viiiddd'] = wasmExports['dynCall_viiiddd'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_vid = Module['dynCall_vid'] = (a0, a1, a2) => (dynCall_vid = Module['dynCall_vid'] = wasmExports['dynCall_vid'])(a0, a1, a2);\nvar dynCall_vff = Module['dynCall_vff'] = (a0, a1, a2) => (dynCall_vff = Module['dynCall_vff'] = wasmExports['dynCall_vff'])(a0, a1, a2);\nvar dynCall_vf = Module['dynCall_vf'] = (a0, a1) => (dynCall_vf = Module['dynCall_vf'] = wasmExports['dynCall_vf'])(a0, a1);\nvar dynCall_viffff = Module['dynCall_viffff'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viffff = Module['dynCall_viffff'] = wasmExports['dynCall_viffff'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_vffff = Module['dynCall_vffff'] = (a0, a1, a2, a3, a4) => (dynCall_vffff = Module['dynCall_vffff'] = wasmExports['dynCall_vffff'])(a0, a1, a2, a3, a4);\nvar dynCall_vfff = Module['dynCall_vfff'] = (a0, a1, a2, a3) => (dynCall_vfff = Module['dynCall_vfff'] = wasmExports['dynCall_vfff'])(a0, a1, a2, a3);\nvar dynCall_vif = Module['dynCall_vif'] = (a0, a1, a2) => (dynCall_vif = Module['dynCall_vif'] = wasmExports['dynCall_vif'])(a0, a1, a2);\nvar dynCall_viif = Module['dynCall_viif'] = (a0, a1, a2, a3) => (dynCall_viif = Module['dynCall_viif'] = wasmExports['dynCall_viif'])(a0, a1, a2, a3);\nvar dynCall_viiiiiiiii = Module['dynCall_viiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) => (dynCall_viiiiiiiii = Module['dynCall_viiiiiiiii'] = wasmExports['dynCall_viiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\nvar dynCall_jiji = Module['dynCall_jiji'] = (a0, a1, a2, a3, a4) => (dynCall_jiji = Module['dynCall_jiji'] = wasmExports['dynCall_jiji'])(a0, a1, a2, a3, a4);\nvar dynCall_ji = Module['dynCall_ji'] = (a0, a1) => (dynCall_ji = Module['dynCall_ji'] = wasmExports['dynCall_ji'])(a0, a1);\nvar dynCall_viiiii = Module['dynCall_viiiii'] = (a0, a1, a2, a3, a4, a5) => (dynCall_viiiii = Module['dynCall_viiiii'] = wasmExports['dynCall_viiiii'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_viiiiiiii = Module['dynCall_viiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_viiiiiiii = Module['dynCall_viiiiiiii'] = wasmExports['dynCall_viiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\nvar dynCall_vfi = Module['dynCall_vfi'] = (a0, a1, a2) => (dynCall_vfi = Module['dynCall_vfi'] = wasmExports['dynCall_vfi'])(a0, a1, a2);\nvar dynCall_viff = Module['dynCall_viff'] = (a0, a1, a2, a3) => (dynCall_viff = Module['dynCall_viff'] = wasmExports['dynCall_viff'])(a0, a1, a2, a3);\nvar dynCall_vifff = Module['dynCall_vifff'] = (a0, a1, a2, a3, a4) => (dynCall_vifff = Module['dynCall_vifff'] = wasmExports['dynCall_vifff'])(a0, a1, a2, a3, a4);\nvar dynCall_viiiiiiiiii = Module['dynCall_viiiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) => (dynCall_viiiiiiiiii = Module['dynCall_viiiiiiiiii'] = wasmExports['dynCall_viiiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\nvar dynCall_viiiiiiiiiii = Module['dynCall_viiiiiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) => (dynCall_viiiiiiiiiii = Module['dynCall_viiiiiiiiiii'] = wasmExports['dynCall_viiiiiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);\nvar dynCall_viifi = Module['dynCall_viifi'] = (a0, a1, a2, a3, a4) => (dynCall_viifi = Module['dynCall_viifi'] = wasmExports['dynCall_viifi'])(a0, a1, a2, a3, a4);\nvar dynCall_iidiiii = Module['dynCall_iidiiii'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_iidiiii = Module['dynCall_iidiiii'] = wasmExports['dynCall_iidiiii'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_viijii = Module['dynCall_viijii'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viijii = Module['dynCall_viijii'] = wasmExports['dynCall_viijii'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_iiiiiii = Module['dynCall_iiiiiii'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_iiiiiii = Module['dynCall_iiiiiii'] = wasmExports['dynCall_iiiiiii'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_iiiiij = Module['dynCall_iiiiij'] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_iiiiij = Module['dynCall_iiiiij'] = wasmExports['dynCall_iiiiij'])(a0, a1, a2, a3, a4, a5, a6);\nvar dynCall_iiiiid = Module['dynCall_iiiiid'] = (a0, a1, a2, a3, a4, a5) => (dynCall_iiiiid = Module['dynCall_iiiiid'] = wasmExports['dynCall_iiiiid'])(a0, a1, a2, a3, a4, a5);\nvar dynCall_iiiiijj = Module['dynCall_iiiiijj'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_iiiiijj = Module['dynCall_iiiiijj'] = wasmExports['dynCall_iiiiijj'])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\nvar dynCall_iiiiiiii = Module['dynCall_iiiiiiii'] = (a0, a1, a2, a3, a4, a5, a6, a7) => (dynCall_iiiiiiii = Module['dynCall_iiiiiiii'] = wasmExports['dynCall_iiiiiiii'])(a0, a1, a2, a3, a4, a5, a6, a7);\nvar dynCall_iiiiiijj = Module['dynCall_iiiiiijj'] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) => (dynCall_iiiiiijj = Module['dynCall_iiiiiijj'] = wasmExports['dynCall_iiiiiijj'])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\nvar _asyncify_start_unwind = (a0) => (_asyncify_start_unwind = wasmExports['asyncify_start_unwind'])(a0);\nvar _asyncify_stop_unwind = () => (_asyncify_stop_unwind = wasmExports['asyncify_stop_unwind'])();\nvar _asyncify_start_rewind = (a0) => (_asyncify_start_rewind = wasmExports['asyncify_start_rewind'])(a0);\nvar _asyncify_stop_rewind = () => (_asyncify_stop_rewind = wasmExports['asyncify_stop_rewind'])();\n\nfunction invoke_vii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    dynCall_vii(index,a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\nModule['addRunDependency'] = addRunDependency;\nModule['removeRunDependency'] = removeRunDependency;\nModule['FS_createPath'] = FS.createPath;\nModule['FS_createLazyFile'] = FS.createLazyFile;\nModule['FS_createDevice'] = FS.createDevice;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_unlink'] = FS.unlink;\nModule['LZ4'] = LZ4;\n\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction callMain(args = []) {\n\n  var entryFunction = _main;\n\n  args.unshift(thisProgram);\n\n  var argc = args.length;\n  var argv = stackAlloc((argc + 1) * 4);\n  var argv_ptr = argv;\n  args.forEach((arg) => {\n    HEAPU32[((argv_ptr)>>2)] = stringToUTF8OnStack(arg);\n    argv_ptr += 4;\n  });\n  HEAPU32[((argv_ptr)>>2)] = 0;\n\n  try {\n\n    var ret = entryFunction(argc, argv);\n\n    // if we're not running an evented main loop, it's time to exit\n    exitJS(ret, /* implicit = */ true);\n    return ret;\n  }\n  catch (e) {\n    return handleException(e);\n  }\n}\n\nfunction run(args = arguments_) {\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    preMain();\n\n    readyPromiseResolve(Module);\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    if (shouldRunNow) callMain(args);\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\n// shouldRunNow refers to calling main(), not run().\nvar shouldRunNow = true;\n\nif (Module['noInitialRun']) shouldRunNow = false;\n\nrun();\n\n\n// end include: postamble.js\n\n\n  return moduleArg.ready\n}\n);\n})();\n;\nexport default createEdgeModule;","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal__bCOJk\",\"modal_content\":\"modal_content__O8DzT\",\"animatetop\":\"animatetop__1b7Bz\",\"close\":\"close__jJbSs\",\"modal_header\":\"modal_header__7dLiC\",\"modal_body\":\"modal_body__8R0ze\",\"modal_footer\":\"modal_footer__P6GcC\"};","import { FunctionComponent, h } from 'preact';\r\nimport style from './style.css';\r\n\r\nconst LicenseModal: FunctionComponent<{ onClose: () => void }> = ({ onClose }) => (\r\n    <div id=\"myModal\" class={style.modal}>\r\n        <div class={style.modal_content}>\r\n            <div class={style.modal_header}>\r\n                <span class={style.close} onClick={() => onClose()}>&times;</span>\r\n                <h2>EDGE-Classic Licenses</h2>\r\n            </div>\r\n            <div class={style.modal_body}>\r\n                <div style={{ overflowY: \"scroll\", overflowX: \"hidden\", height: \"512px\" }}>\r\n                    <div style={{ fontFamily: \"monospace\", whiteSpace: \"pre\", fontSize: 11 }}>{license}</div>\r\n                </div>\r\n            </div>\r\n            <div class={style.modal_footer}>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n);\r\n\r\nconst license = `===========================================================================================\r\nBSD 2-Clause License\r\n===========================================================================================\r\n\r\nminiz library (gzip support) - Copyright (c) 2015 Wojciech Adam Koszek\r\n\r\n===========================================================================================\r\nBSD 3-Clause License\r\n===========================================================================================\r\n\r\nBlasphemer (various assets) - Copyright (c) 2021 Contributors to the Blasphemer project\r\n\r\nFMMIDI library - Copyright (c) 2003-2006 yuno\r\n\r\nFreedoom (various assets) - Copyright (c) 2001-2019 Contributors to the Freedoom project\r\n\r\nYMFM library - Copyright (c) 2021 Aaron Giles\r\n\r\nYMFMIDI library - Copyright (c) 2021-2022 Devin Acker\r\n\r\nMod4Play library - Copyright (c) 2022 Olav Sørensen\r\n\r\nminivorbis library - Copyright (c) 2020 Eduardo Bart\r\n                     Copyright (c) 2002-2020 Xiph.org Foundation\r\n\r\n===========================================================================================\r\nCC 1.0 Universal License\r\n===========================================================================================\r\n\r\nminimp3 library - lieff\r\n\r\n\"ProtoSquare!\" soundfont - Yingchun Soul\r\n\r\n===========================================================================================\r\nCC-BY-3.0 Unported License\r\n===========================================================================================\r\n\r\nGerman Shepherd Dog Sprites - Copyright (c) 2017 Nash Muhandes\r\n\r\n===========================================================================================\r\nCC-BY-NC-4.0 International License\r\n===========================================================================================\r\n\r\nREKKR (various assets) - Copyright (c) 2021 Mockingbird Softworks\r\n\r\n===========================================================================================\r\nCC-BY-SA-4.0 International License\r\n===========================================================================================\r\n\r\n\"Bonkers for Bits\" soundfont - Copyright (c) Marcel J. Therrien\r\n\r\n\"DMXOPL\" and \"DMXPOL3\" instrument banks - Copyright (c) ConSiGno\r\n\r\n===========================================================================================\r\nGPL2 License\r\n===========================================================================================\r\n\r\n\"Adplug\" instrument bank - Copyright (C) 1999, 2000, 2001 Simon Peter, et al.\r\n\r\nAJBSP - Copyright (c) 2000-2023 Andrew Apted, et al\r\n        Copyright (c) 1994-1998 Colin Reed\r\n        Copyright (c) 1997-1998 Lee Killough\r\n\r\nCOAL -  Copyright (c) 2009-2023 Andrew Apted, et al\r\n        Copyright (c) 1996-1997 Id Software, Inc.\r\n\r\nDDF library - Copyright (c) 1999-2023 The EDGE Team\r\n\r\nDEHACKED library (formerly DEH_EDGE) - Copyright (c) 2004-2023 The EDGE Team\r\n\r\nEC_VOXELIB library - Copyright (c) 2022-2023 The EDGE Team\r\n\r\nEDGE-Classic - Copyright (c) 1999-2023 The EDGE Team\r\n\r\nEPI library - Copyright (c) 2002-2023 The EDGE Team\r\n\r\nFluidlite library - Copyright (c) 2016 Robin Lobel\r\n\r\nGame Music Emu - Copyright (c) 2003-2009 Shay Green\r\n\r\nSuperFastHash - Copyright (c) 2004-2010 Paul Hsieh\r\n\r\nXMIDI library - Copyright (c) 2015-2022 Vitaly Novichkov\r\n                Copyright (c) 2015-2016 WildMIDI Developers\r\n                Copyright (c) 2014 Bret Curtis\r\n                Copyright (c) 2001 Ryan Nunn\r\n\r\n===========================================================================================\r\nMIT License\r\n===========================================================================================\r\n\r\n\"16-Bit Game Station\" soundfont - Copyright (c) 2022 Yingchun Soul\r\n\r\nBW_Midi_Sequencer library - Copyright (c) 2015-2022 Vitaly Novichkov\r\n\r\ngl4es library - Copyright (c) 2016-2018 Sebastien Chevalier\r\n\t\t\t\tCopyright (c) 2013-2016 Ryan Hileman\r\n\r\nglad library - Copyright (c) 2013-2022 David Herberth\r\n\r\nminiz library - Copyright (c) 2013-2014 RAD Game Tools and Valve Software\r\n\t\t\t\tCopyright (c) 2010-2014 Rich Geldreich and Tenacious Software LLC\r\n\r\nPNPOLY algorithm - Copyright (c) 1970-2003 Wm. Randolph Franklin\r\n\r\n\"WadSmoosh\" instrument bank - Copyright (c) 2016-2020 JP LeBreton\r\n\r\n\"C++ implementation of a fast Gaussian blur algorithm by Ivan Kutskir - Integer Version\"\r\n    - Copyright (C) 2017 Basile Fraboni\r\n    - Copyright (C) 2014 Ivan Kutskir\r\n\r\n\r\n===========================================================================================\r\nPublic Domain\r\n===========================================================================================\r\n\r\nFraction.hpp - Bisqwit\r\n\r\n\"GMGSx\" soundfont (renamed to default.sf2) - Kenneth Rundt\r\n\r\ndr_wav and dr_flac libraries - David Reid\r\n\r\nstb_image, stb_image_write, stb_rect_pack and stb_truetype libraries - Sean Barrett\r\n\r\n\"Unicode Processing with C++0x\" Conversion Classes - Andrew Choi\r\n\r\n===========================================================================================\r\nWidePix License\r\n===========================================================================================\r\n\r\nWidePix (various assets) - Copyright (c) 2020-2021 Nash Muhandes\r\n\r\n===========================================================================================\r\nWTF License\r\n===========================================================================================\r\n\r\ncrsid library - Copyright (c) 2022 Hermit (Mihaly Horvath)\r\n\r\n===========================================================================================\r\nzlib License\r\n===========================================================================================\r\n\r\nSDL2 library - Copyright (c) 1997-2020 Sam Lantinga\r\n`\r\n\r\nexport default LicenseModal;\r\n","import './style/index.css';\r\nimport App from './components/app';\r\n\r\nexport default App;\r\n","import { h } from 'preact';\r\n\r\nimport Player from './player';\r\n\r\nconst App = () => (\r\n\t<div id=\"app\">\r\n\t\t<main>\r\n\t\t\t<Player/>\r\n\t\t</main>\r\n\t</div>\r\n);\r\n\r\nexport default App;\r\n"],"sourceRoot":""}